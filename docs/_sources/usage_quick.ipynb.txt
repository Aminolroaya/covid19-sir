{
 "cells": [
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "# Usage (quick version)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## Preparation"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 1,
   "metadata": {
    "collapsed": false
   },
   "outputs": [],
   "source": [
    "# Standard users\n",
    "# !pip install covsirphy\n",
    "# Developers (Note: this notebook is in example directory)\n",
    "import os\n",
    "os.chdir(\"../\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "metadata": {
    "collapsed": false
   },
   "outputs": [],
   "source": [
    "import warnings"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "metadata": {
    "collapsed": false,
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "'2.6.0-delta.new.72.fix.120.155.157'"
      ]
     },
     "execution_count": 3,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "import covsirphy as cs\n",
    "cs.__version__"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## Dataset preparation\n",
    "Download the datasets to \"input\" direcotry and load them.\n",
    "\n",
    "If \"input\" directory has the datasets, `DataLoader` will load the local files. If the datasets were updated in remote servers, `DataLoader` will update the local files automatically.\n",
    "Download the datasets to \"input\" direcotry and load them.\n",
    "\n",
    "If \"input\" directory has the datasets, `DataLoader` will load the local files. If the datasets were updated in remote servers, `DataLoader` will update the local files automatically."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "metadata": {
    "collapsed": false,
    "tags": []
   },
   "outputs": [],
   "source": [
    "data_loader = cs.DataLoader(\"input\")\n",
    "# The number of cases (JHU style)\n",
    "jhu_data = data_loader.jhu(verbose=True)\n",
    "# Population in each country\n",
    "population_data = data_loader.population(verbose=True)\n",
    "# Government Response Tracker (OxCGRT)\n",
    "oxcgrt_data = data_loader.oxcgrt(verbose=True)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### The number of cases (JHU style)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "metadata": {
    "collapsed": false,
    "tags": []
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "(Secondary source) Guidotti, E., Ardia, D., (2020), \"COVID-19 Data Hub\", Working paper, doi: 10.13140/RG.2.2.11649.81763.\n",
      "We can get Citation list of primary sources with DataLoader(...).covid19dh_citation"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\n"
     ]
    }
   ],
   "source": [
    "# Description/citation\n",
    "print(jhu_data.citation)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 6,
   "metadata": {
    "collapsed": false,
    "tags": []
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Australian Bureau of Statistics (2019), https://www.abs.gov.au/\n",
      "CIA - Central Intelligence Agency (2018), https://www.cia.gov/\n",
      "CIA - Central Intelligence Agency (2019), https://www.cia.gov/\n",
      "CIA - Central Intelligence Agency (2020), https://www.cia.gov/\n",
      "COVID-19 Peru Data Repository (2019), https://github.com/\n",
      "COVID-19 Peru Data Repository (2020), https://github.com/\n",
      "COVID-19 Turkey API (2020), https://github.com/\n",
      "COVID-19_plus_Russia GitHub repository (2020), https://github.com/\n",
      "COVID19-India API (2020), https://www.covid19india.org/\n",
      "Canada's National Statistical Agency (2020), https://www150.statcan.gc.ca/\n",
      "Centre of Excellence in Economics and Data Science, University of Milano (2020), https://github.com/\n",
      "Covid19data.com.au (2020), https://github.com/\n",
      "Czech Statistical Office (2018), https://www.czso.cz/\n",
      "Data Science for Social Impact research group, University of Pretoria (2020), https://github.com/\n",
      "Epistat, Belgian Infectious Diseases (2020), https://epistat.sciensano.be/\n",
      "Eurostat (2019), https://ec.europa.eu/\n",
      "GADM (2019), https://public.opendatasoft.com/\n",
      "Geloky (2019), https://geloky.com/\n",
      "Istituto Nazionale di Statistica, Italia (2018), https://www.istat.it/\n",
      "Japan COVID-19 Bulletin Board (2020), https://github.com/\n",
      "Johns Hopkins Center for Systems Science and Engineering (2020), https://github.com/\n",
      "Ministerio de Salud y ProtecciÃ³n Social de Colombia (2020), https://www.datos.gov.co/\n",
      "Ministero della Salute, Italia (2020), https://github.com/\n",
      "Ministery of Health of Czech Republic (2020), https://onemocneni-aktualne.mzcr.cz/\n",
      "Ministery of Health, Slovenia (2020), https://www.gov.si/\n",
      "Ministry of Public Health and Population of Haiti (2020), https://proxy.hxlstandard.org/\n",
      "National Bureau of Statistics of China NBS (2018), http://data.stats.gov.cn/\n",
      "Open Government Data, Austria (2020), https://info.gesundheitsministerium.at/\n",
      "Open Government Data, Latvia (2020), https://data.gov.lv/\n",
      "Open Government Data, Liechtenstein (2020), https://github.com/\n",
      "Open Government Data, Switzerland (2020), https://github.com/\n",
      "Open Government Data, United Kingdom (2020), https://coronavirus.data.gov.uk/\n",
      "OpenCOVID19 France (2020), https://github.com/\n",
      "Our World in Data (2020), https://github.com/\n",
      "Hale Thomas, Sam Webster, Anna Petherick, Toby Phillips, and Beatriz Kira (2020). Oxford COVID-19 Government Response Tracker, Blavatnik School of Government.\n",
      "Public Health Agency, Sweden (2020), https://oppnadata.se/\n",
      "Public Health Infobase, Government of Canada (2020), https://health-infobase.canada.ca/\n",
      "Robert Koch-Institut (2020), https://npgeo-corona-npgeo-de.hub.arcgis.com/\n",
      "Statbel, Belgium in Figures (2019), https://statbel.fgov.be/\n",
      "Swiss Federal Statistical Office (2018), https://www.bfs.admin.ch/\n",
      "The COVID Tracking Project (2020), https://covidtracking.com/\n",
      "The New York Times (2020), https://github.com/\n",
      "Wikipedia (2006), https://it.wikipedia.org/\n",
      "Wikipedia (2010), https://en.wikipedia.org/\n",
      "Wikipedia (2010), https://it.wikipedia.org/\n",
      "Wikipedia (2013), https://en.wikipedia.org/\n",
      "Wikipedia (2015), https://en.wikipedia.org/\n",
      "Wikipedia (2016), https://en.wikipedia.org/\n",
      "Wikipedia (2016), https://it.wikipedia.org/\n",
      "Wikipedia (2017), https://www.wikipedia.org/\n",
      "Wikipedia (2018), https://en.wikipedia.org/\n",
      "Wikipedia (2018), https://www.wikipedia.org/\n",
      "Wikipedia (2019), https://en.wikipedia.org/\n",
      "Wikipedia (2019), https://www.wikipedia.org/\n",
      "Wikipedia (2020), https://en.wikipedia.org/\n",
      "Wikipedia (2020), https://it.wikipedia.org/\n",
      "Wikipedia (2020), https://www.wikipedia.org/\n",
      "World Bank Open Data (2018), https://data.worldbank.org/\n",
      "World Health Organization (2020), https://covid19.who.int/\n",
      "Worldometer (2018), https://www.worldometers.info/\n",
      "Guidotti, E., Ardia, D., (2020), \"COVID-19 Data Hub\", Working paper, doi: 10.13140/RG.2.2.11649.81763."
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\n"
     ]
    }
   ],
   "source": [
    "print(data_loader.covid19dh_citation)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 7,
   "metadata": {
    "collapsed": false
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>ObservationDate</th>\n",
       "      <th>Confirmed</th>\n",
       "      <th>Recovered</th>\n",
       "      <th>Deaths</th>\n",
       "      <th>Population</th>\n",
       "      <th>ISO3</th>\n",
       "      <th>Province/State</th>\n",
       "      <th>Country/Region</th>\n",
       "      <th>school_closing</th>\n",
       "      <th>workplace_closing</th>\n",
       "      <th>cancel_events</th>\n",
       "      <th>gatherings_restrictions</th>\n",
       "      <th>transport_closing</th>\n",
       "      <th>stay_home_restrictions</th>\n",
       "      <th>internal_movement_restrictions</th>\n",
       "      <th>international_movement_restrictions</th>\n",
       "      <th>information_campaigns</th>\n",
       "      <th>testing_policy</th>\n",
       "      <th>contact_tracing</th>\n",
       "      <th>stringency_index</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>167559</th>\n",
       "      <td>2020-07-28</td>\n",
       "      <td>2</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>107808.0</td>\n",
       "      <td>COL</td>\n",
       "      <td>Vichada</td>\n",
       "      <td>Colombia</td>\n",
       "      <td>3</td>\n",
       "      <td>3</td>\n",
       "      <td>2</td>\n",
       "      <td>4</td>\n",
       "      <td>1</td>\n",
       "      <td>2</td>\n",
       "      <td>2</td>\n",
       "      <td>4</td>\n",
       "      <td>2</td>\n",
       "      <td>2</td>\n",
       "      <td>2</td>\n",
       "      <td>87.04</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>167560</th>\n",
       "      <td>2020-07-29</td>\n",
       "      <td>2</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>107808.0</td>\n",
       "      <td>COL</td>\n",
       "      <td>Vichada</td>\n",
       "      <td>Colombia</td>\n",
       "      <td>3</td>\n",
       "      <td>3</td>\n",
       "      <td>2</td>\n",
       "      <td>4</td>\n",
       "      <td>1</td>\n",
       "      <td>2</td>\n",
       "      <td>2</td>\n",
       "      <td>4</td>\n",
       "      <td>2</td>\n",
       "      <td>2</td>\n",
       "      <td>2</td>\n",
       "      <td>87.04</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>167561</th>\n",
       "      <td>2020-07-30</td>\n",
       "      <td>2</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>107808.0</td>\n",
       "      <td>COL</td>\n",
       "      <td>Vichada</td>\n",
       "      <td>Colombia</td>\n",
       "      <td>3</td>\n",
       "      <td>3</td>\n",
       "      <td>2</td>\n",
       "      <td>4</td>\n",
       "      <td>1</td>\n",
       "      <td>2</td>\n",
       "      <td>2</td>\n",
       "      <td>4</td>\n",
       "      <td>2</td>\n",
       "      <td>2</td>\n",
       "      <td>2</td>\n",
       "      <td>87.04</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>167562</th>\n",
       "      <td>2020-07-31</td>\n",
       "      <td>2</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>107808.0</td>\n",
       "      <td>COL</td>\n",
       "      <td>Vichada</td>\n",
       "      <td>Colombia</td>\n",
       "      <td>3</td>\n",
       "      <td>3</td>\n",
       "      <td>2</td>\n",
       "      <td>4</td>\n",
       "      <td>1</td>\n",
       "      <td>2</td>\n",
       "      <td>2</td>\n",
       "      <td>4</td>\n",
       "      <td>2</td>\n",
       "      <td>2</td>\n",
       "      <td>2</td>\n",
       "      <td>87.04</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>167563</th>\n",
       "      <td>2020-08-01</td>\n",
       "      <td>2</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>107808.0</td>\n",
       "      <td>COL</td>\n",
       "      <td>Vichada</td>\n",
       "      <td>Colombia</td>\n",
       "      <td>3</td>\n",
       "      <td>3</td>\n",
       "      <td>2</td>\n",
       "      <td>4</td>\n",
       "      <td>1</td>\n",
       "      <td>2</td>\n",
       "      <td>2</td>\n",
       "      <td>4</td>\n",
       "      <td>2</td>\n",
       "      <td>2</td>\n",
       "      <td>2</td>\n",
       "      <td>87.04</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "       ObservationDate  Confirmed  Recovered  Deaths  Population ISO3  \\\n",
       "167559      2020-07-28          2          1       0    107808.0  COL   \n",
       "167560      2020-07-29          2          1       0    107808.0  COL   \n",
       "167561      2020-07-30          2          1       0    107808.0  COL   \n",
       "167562      2020-07-31          2          1       0    107808.0  COL   \n",
       "167563      2020-08-01          2          1       0    107808.0  COL   \n",
       "\n",
       "       Province/State Country/Region  school_closing  workplace_closing  \\\n",
       "167559        Vichada       Colombia               3                  3   \n",
       "167560        Vichada       Colombia               3                  3   \n",
       "167561        Vichada       Colombia               3                  3   \n",
       "167562        Vichada       Colombia               3                  3   \n",
       "167563        Vichada       Colombia               3                  3   \n",
       "\n",
       "        cancel_events  gatherings_restrictions  transport_closing  \\\n",
       "167559              2                        4                  1   \n",
       "167560              2                        4                  1   \n",
       "167561              2                        4                  1   \n",
       "167562              2                        4                  1   \n",
       "167563              2                        4                  1   \n",
       "\n",
       "        stay_home_restrictions  internal_movement_restrictions  \\\n",
       "167559                       2                               2   \n",
       "167560                       2                               2   \n",
       "167561                       2                               2   \n",
       "167562                       2                               2   \n",
       "167563                       2                               2   \n",
       "\n",
       "        international_movement_restrictions  information_campaigns  \\\n",
       "167559                                    4                      2   \n",
       "167560                                    4                      2   \n",
       "167561                                    4                      2   \n",
       "167562                                    4                      2   \n",
       "167563                                    4                      2   \n",
       "\n",
       "        testing_policy  contact_tracing  stringency_index  \n",
       "167559               2                2             87.04  \n",
       "167560               2                2             87.04  \n",
       "167561               2                2             87.04  \n",
       "167562               2                2             87.04  \n",
       "167563               2                2             87.04  "
      ]
     },
     "execution_count": 7,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# Raw data\n",
    "jhu_data.raw.tail()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 8,
   "metadata": {
    "collapsed": false
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Date</th>\n",
       "      <th>Country</th>\n",
       "      <th>Province</th>\n",
       "      <th>Confirmed</th>\n",
       "      <th>Infected</th>\n",
       "      <th>Fatal</th>\n",
       "      <th>Recovered</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>167559</th>\n",
       "      <td>2020-07-28</td>\n",
       "      <td>Colombia</td>\n",
       "      <td>Vichada</td>\n",
       "      <td>2</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>167560</th>\n",
       "      <td>2020-07-29</td>\n",
       "      <td>Colombia</td>\n",
       "      <td>Vichada</td>\n",
       "      <td>2</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>167561</th>\n",
       "      <td>2020-07-30</td>\n",
       "      <td>Colombia</td>\n",
       "      <td>Vichada</td>\n",
       "      <td>2</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>167562</th>\n",
       "      <td>2020-07-31</td>\n",
       "      <td>Colombia</td>\n",
       "      <td>Vichada</td>\n",
       "      <td>2</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>167563</th>\n",
       "      <td>2020-08-01</td>\n",
       "      <td>Colombia</td>\n",
       "      <td>Vichada</td>\n",
       "      <td>2</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "             Date   Country Province  Confirmed  Infected  Fatal  Recovered\n",
       "167559 2020-07-28  Colombia  Vichada          2         1      0          1\n",
       "167560 2020-07-29  Colombia  Vichada          2         1      0          1\n",
       "167561 2020-07-30  Colombia  Vichada          2         1      0          1\n",
       "167562 2020-07-31  Colombia  Vichada          2         1      0          1\n",
       "167563 2020-08-01  Colombia  Vichada          2         1      0          1"
      ]
     },
     "execution_count": 8,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# Cleaned data\n",
    "jhu_data.cleaned().tail()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 9,
   "metadata": {
    "collapsed": false
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Date</th>\n",
       "      <th>Confirmed</th>\n",
       "      <th>Infected</th>\n",
       "      <th>Fatal</th>\n",
       "      <th>Recovered</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>195</th>\n",
       "      <td>2020-07-28</td>\n",
       "      <td>11611</td>\n",
       "      <td>2819</td>\n",
       "      <td>328</td>\n",
       "      <td>8464</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>196</th>\n",
       "      <td>2020-07-29</td>\n",
       "      <td>11861</td>\n",
       "      <td>2774</td>\n",
       "      <td>329</td>\n",
       "      <td>8758</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>197</th>\n",
       "      <td>2020-07-30</td>\n",
       "      <td>12228</td>\n",
       "      <td>2789</td>\n",
       "      <td>330</td>\n",
       "      <td>9109</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>198</th>\n",
       "      <td>2020-07-31</td>\n",
       "      <td>12691</td>\n",
       "      <td>2921</td>\n",
       "      <td>332</td>\n",
       "      <td>9438</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>199</th>\n",
       "      <td>2020-08-01</td>\n",
       "      <td>13163</td>\n",
       "      <td>3216</td>\n",
       "      <td>332</td>\n",
       "      <td>9615</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "          Date  Confirmed  Infected  Fatal  Recovered\n",
       "195 2020-07-28      11611      2819    328       8464\n",
       "196 2020-07-29      11861      2774    329       8758\n",
       "197 2020-07-30      12228      2789    330       9109\n",
       "198 2020-07-31      12691      2921    332       9438\n",
       "199 2020-08-01      13163      3216    332       9615"
      ]
     },
     "execution_count": 9,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# Subset for a country\n",
    "jhu_data.subset(\"Japan\", province=\"Tokyo\").tail()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 10,
   "metadata": {
    "collapsed": false
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Confirmed</th>\n",
       "      <th>Infected</th>\n",
       "      <th>Fatal</th>\n",
       "      <th>Recovered</th>\n",
       "      <th>Fatal per Confirmed</th>\n",
       "      <th>Recovered per Confirmed</th>\n",
       "      <th>Fatal per (Fatal or Recovered)</th>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Date</th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>2020-07-28</th>\n",
       "      <td>16726966</td>\n",
       "      <td>6383916</td>\n",
       "      <td>661746</td>\n",
       "      <td>9681304</td>\n",
       "      <td>0.019781</td>\n",
       "      <td>0.289392</td>\n",
       "      <td>0.063980</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2020-07-29</th>\n",
       "      <td>17017810</td>\n",
       "      <td>6465417</td>\n",
       "      <td>668197</td>\n",
       "      <td>9884196</td>\n",
       "      <td>0.019632</td>\n",
       "      <td>0.290407</td>\n",
       "      <td>0.063322</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2020-07-30</th>\n",
       "      <td>17324100</td>\n",
       "      <td>6579682</td>\n",
       "      <td>674122</td>\n",
       "      <td>10070296</td>\n",
       "      <td>0.019456</td>\n",
       "      <td>0.290644</td>\n",
       "      <td>0.062742</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2020-07-31</th>\n",
       "      <td>17565091</td>\n",
       "      <td>6630459</td>\n",
       "      <td>680008</td>\n",
       "      <td>10254624</td>\n",
       "      <td>0.019357</td>\n",
       "      <td>0.291904</td>\n",
       "      <td>0.062188</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2020-08-01</th>\n",
       "      <td>17567179</td>\n",
       "      <td>6631595</td>\n",
       "      <td>680014</td>\n",
       "      <td>10255570</td>\n",
       "      <td>0.019355</td>\n",
       "      <td>0.291896</td>\n",
       "      <td>0.062184</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "            Confirmed  Infected   Fatal  Recovered  Fatal per Confirmed  \\\n",
       "Date                                                                      \n",
       "2020-07-28   16726966   6383916  661746    9681304             0.019781   \n",
       "2020-07-29   17017810   6465417  668197    9884196             0.019632   \n",
       "2020-07-30   17324100   6579682  674122   10070296             0.019456   \n",
       "2020-07-31   17565091   6630459  680008   10254624             0.019357   \n",
       "2020-08-01   17567179   6631595  680014   10255570             0.019355   \n",
       "\n",
       "            Recovered per Confirmed  Fatal per (Fatal or Recovered)  \n",
       "Date                                                                 \n",
       "2020-07-28                 0.289392                        0.063980  \n",
       "2020-07-29                 0.290407                        0.063322  \n",
       "2020-07-30                 0.290644                        0.062742  \n",
       "2020-07-31                 0.291904                        0.062188  \n",
       "2020-08-01                 0.291896                        0.062184  "
      ]
     },
     "execution_count": 10,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# Total\n",
    "total_df = jhu_data.total()\n",
    "total_df.tail()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 11,
   "metadata": {
    "collapsed": false
   },
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 648x432 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "# Plot the total values\n",
    "cs.line_plot(total_df[[\"Infected\", \"Fatal\", \"Recovered\"]], \"Total number of cases over time\")"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### (Optional) Replace the dataset in Japan\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 12,
   "metadata": {
    "collapsed": false
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Date</th>\n",
       "      <th>Confirmed</th>\n",
       "      <th>Infected</th>\n",
       "      <th>Fatal</th>\n",
       "      <th>Recovered</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>204</th>\n",
       "      <td>2020-07-28</td>\n",
       "      <td>32184</td>\n",
       "      <td>8377</td>\n",
       "      <td>1001</td>\n",
       "      <td>22806</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>205</th>\n",
       "      <td>2020-07-29</td>\n",
       "      <td>33448</td>\n",
       "      <td>8942</td>\n",
       "      <td>1005</td>\n",
       "      <td>23501</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>206</th>\n",
       "      <td>2020-07-30</td>\n",
       "      <td>34749</td>\n",
       "      <td>9569</td>\n",
       "      <td>1006</td>\n",
       "      <td>24174</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>207</th>\n",
       "      <td>2020-07-31</td>\n",
       "      <td>36330</td>\n",
       "      <td>10395</td>\n",
       "      <td>1012</td>\n",
       "      <td>24923</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>208</th>\n",
       "      <td>2020-08-01</td>\n",
       "      <td>37870</td>\n",
       "      <td>11361</td>\n",
       "      <td>1012</td>\n",
       "      <td>25497</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "          Date  Confirmed  Infected  Fatal  Recovered\n",
       "204 2020-07-28      32184      8377   1001      22806\n",
       "205 2020-07-29      33448      8942   1005      23501\n",
       "206 2020-07-30      34749      9569   1006      24174\n",
       "207 2020-07-31      36330     10395   1012      24923\n",
       "208 2020-08-01      37870     11361   1012      25497"
      ]
     },
     "execution_count": 12,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "jhu_data.subset(\"Japan\").tail()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 13,
   "metadata": {
    "collapsed": false,
    "tags": []
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Lisphilar (2020), COVID-19 dataset in Japan, GitHub repository, https://github.com/lisphilar/covid19-sir/data/japan"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\n"
     ]
    }
   ],
   "source": [
    "japan_data = data_loader.japan()\n",
    "print(japan_data.citation)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 14,
   "metadata": {
    "collapsed": false
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Date</th>\n",
       "      <th>Confirmed</th>\n",
       "      <th>Infected</th>\n",
       "      <th>Fatal</th>\n",
       "      <th>Recovered</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>167</th>\n",
       "      <td>2020-07-27</td>\n",
       "      <td>29969</td>\n",
       "      <td>6857</td>\n",
       "      <td>996</td>\n",
       "      <td>22116</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>168</th>\n",
       "      <td>2020-07-28</td>\n",
       "      <td>30961</td>\n",
       "      <td>7152</td>\n",
       "      <td>998</td>\n",
       "      <td>22811</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>169</th>\n",
       "      <td>2020-07-29</td>\n",
       "      <td>31901</td>\n",
       "      <td>7393</td>\n",
       "      <td>1001</td>\n",
       "      <td>23507</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>170</th>\n",
       "      <td>2020-07-30</td>\n",
       "      <td>33049</td>\n",
       "      <td>7866</td>\n",
       "      <td>1004</td>\n",
       "      <td>24179</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>171</th>\n",
       "      <td>2020-07-31</td>\n",
       "      <td>34372</td>\n",
       "      <td>8437</td>\n",
       "      <td>1006</td>\n",
       "      <td>24929</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "          Date  Confirmed  Infected  Fatal  Recovered\n",
       "167 2020-07-27      29969      6857    996      22116\n",
       "168 2020-07-28      30961      7152    998      22811\n",
       "169 2020-07-29      31901      7393   1001      23507\n",
       "170 2020-07-30      33049      7866   1004      24179\n",
       "171 2020-07-31      34372      8437   1006      24929"
      ]
     },
     "execution_count": 14,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "jhu_data.replace(japan_data)\n",
    "jhu_data.subset(\"Japan\").tail()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### Population in each country"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 15,
   "metadata": {
    "collapsed": false,
    "tags": []
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "(Secondary source) Guidotti, E., Ardia, D., (2020), \"COVID-19 Data Hub\", Working paper, doi: 10.13140/RG.2.2.11649.81763.\n",
      "We can get Citation list of primary sources with DataLoader(...).covid19dh_citation"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\n"
     ]
    }
   ],
   "source": [
    "# Description/citation\n",
    "print(population_data.citation)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 16,
   "metadata": {
    "collapsed": false
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>ObservationDate</th>\n",
       "      <th>Confirmed</th>\n",
       "      <th>Recovered</th>\n",
       "      <th>Deaths</th>\n",
       "      <th>Population</th>\n",
       "      <th>ISO3</th>\n",
       "      <th>Province/State</th>\n",
       "      <th>Country/Region</th>\n",
       "      <th>school_closing</th>\n",
       "      <th>workplace_closing</th>\n",
       "      <th>cancel_events</th>\n",
       "      <th>gatherings_restrictions</th>\n",
       "      <th>transport_closing</th>\n",
       "      <th>stay_home_restrictions</th>\n",
       "      <th>internal_movement_restrictions</th>\n",
       "      <th>international_movement_restrictions</th>\n",
       "      <th>information_campaigns</th>\n",
       "      <th>testing_policy</th>\n",
       "      <th>contact_tracing</th>\n",
       "      <th>stringency_index</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>167559</th>\n",
       "      <td>2020-07-28</td>\n",
       "      <td>2</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>107808.0</td>\n",
       "      <td>COL</td>\n",
       "      <td>Vichada</td>\n",
       "      <td>Colombia</td>\n",
       "      <td>3</td>\n",
       "      <td>3</td>\n",
       "      <td>2</td>\n",
       "      <td>4</td>\n",
       "      <td>1</td>\n",
       "      <td>2</td>\n",
       "      <td>2</td>\n",
       "      <td>4</td>\n",
       "      <td>2</td>\n",
       "      <td>2</td>\n",
       "      <td>2</td>\n",
       "      <td>87.04</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>167560</th>\n",
       "      <td>2020-07-29</td>\n",
       "      <td>2</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>107808.0</td>\n",
       "      <td>COL</td>\n",
       "      <td>Vichada</td>\n",
       "      <td>Colombia</td>\n",
       "      <td>3</td>\n",
       "      <td>3</td>\n",
       "      <td>2</td>\n",
       "      <td>4</td>\n",
       "      <td>1</td>\n",
       "      <td>2</td>\n",
       "      <td>2</td>\n",
       "      <td>4</td>\n",
       "      <td>2</td>\n",
       "      <td>2</td>\n",
       "      <td>2</td>\n",
       "      <td>87.04</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>167561</th>\n",
       "      <td>2020-07-30</td>\n",
       "      <td>2</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>107808.0</td>\n",
       "      <td>COL</td>\n",
       "      <td>Vichada</td>\n",
       "      <td>Colombia</td>\n",
       "      <td>3</td>\n",
       "      <td>3</td>\n",
       "      <td>2</td>\n",
       "      <td>4</td>\n",
       "      <td>1</td>\n",
       "      <td>2</td>\n",
       "      <td>2</td>\n",
       "      <td>4</td>\n",
       "      <td>2</td>\n",
       "      <td>2</td>\n",
       "      <td>2</td>\n",
       "      <td>87.04</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>167562</th>\n",
       "      <td>2020-07-31</td>\n",
       "      <td>2</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>107808.0</td>\n",
       "      <td>COL</td>\n",
       "      <td>Vichada</td>\n",
       "      <td>Colombia</td>\n",
       "      <td>3</td>\n",
       "      <td>3</td>\n",
       "      <td>2</td>\n",
       "      <td>4</td>\n",
       "      <td>1</td>\n",
       "      <td>2</td>\n",
       "      <td>2</td>\n",
       "      <td>4</td>\n",
       "      <td>2</td>\n",
       "      <td>2</td>\n",
       "      <td>2</td>\n",
       "      <td>87.04</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>167563</th>\n",
       "      <td>2020-08-01</td>\n",
       "      <td>2</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>107808.0</td>\n",
       "      <td>COL</td>\n",
       "      <td>Vichada</td>\n",
       "      <td>Colombia</td>\n",
       "      <td>3</td>\n",
       "      <td>3</td>\n",
       "      <td>2</td>\n",
       "      <td>4</td>\n",
       "      <td>1</td>\n",
       "      <td>2</td>\n",
       "      <td>2</td>\n",
       "      <td>4</td>\n",
       "      <td>2</td>\n",
       "      <td>2</td>\n",
       "      <td>2</td>\n",
       "      <td>87.04</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "       ObservationDate  Confirmed  Recovered  Deaths  Population ISO3  \\\n",
       "167559      2020-07-28          2          1       0    107808.0  COL   \n",
       "167560      2020-07-29          2          1       0    107808.0  COL   \n",
       "167561      2020-07-30          2          1       0    107808.0  COL   \n",
       "167562      2020-07-31          2          1       0    107808.0  COL   \n",
       "167563      2020-08-01          2          1       0    107808.0  COL   \n",
       "\n",
       "       Province/State Country/Region  school_closing  workplace_closing  \\\n",
       "167559        Vichada       Colombia               3                  3   \n",
       "167560        Vichada       Colombia               3                  3   \n",
       "167561        Vichada       Colombia               3                  3   \n",
       "167562        Vichada       Colombia               3                  3   \n",
       "167563        Vichada       Colombia               3                  3   \n",
       "\n",
       "        cancel_events  gatherings_restrictions  transport_closing  \\\n",
       "167559              2                        4                  1   \n",
       "167560              2                        4                  1   \n",
       "167561              2                        4                  1   \n",
       "167562              2                        4                  1   \n",
       "167563              2                        4                  1   \n",
       "\n",
       "        stay_home_restrictions  internal_movement_restrictions  \\\n",
       "167559                       2                               2   \n",
       "167560                       2                               2   \n",
       "167561                       2                               2   \n",
       "167562                       2                               2   \n",
       "167563                       2                               2   \n",
       "\n",
       "        international_movement_restrictions  information_campaigns  \\\n",
       "167559                                    4                      2   \n",
       "167560                                    4                      2   \n",
       "167561                                    4                      2   \n",
       "167562                                    4                      2   \n",
       "167563                                    4                      2   \n",
       "\n",
       "        testing_policy  contact_tracing  stringency_index  \n",
       "167559               2                2             87.04  \n",
       "167560               2                2             87.04  \n",
       "167561               2                2             87.04  \n",
       "167562               2                2             87.04  \n",
       "167563               2                2             87.04  "
      ]
     },
     "execution_count": 16,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# Raw data (the same as jhu_data)\n",
    "population_data.raw.tail()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 17,
   "metadata": {
    "collapsed": false
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>ISO3</th>\n",
       "      <th>Country</th>\n",
       "      <th>Province</th>\n",
       "      <th>Date</th>\n",
       "      <th>Population</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>164359</th>\n",
       "      <td>COL</td>\n",
       "      <td>Colombia</td>\n",
       "      <td>Vichada</td>\n",
       "      <td>2020-07-28</td>\n",
       "      <td>107808</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>164360</th>\n",
       "      <td>COL</td>\n",
       "      <td>Colombia</td>\n",
       "      <td>Vichada</td>\n",
       "      <td>2020-07-29</td>\n",
       "      <td>107808</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>164361</th>\n",
       "      <td>COL</td>\n",
       "      <td>Colombia</td>\n",
       "      <td>Vichada</td>\n",
       "      <td>2020-07-30</td>\n",
       "      <td>107808</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>164362</th>\n",
       "      <td>COL</td>\n",
       "      <td>Colombia</td>\n",
       "      <td>Vichada</td>\n",
       "      <td>2020-07-31</td>\n",
       "      <td>107808</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>164363</th>\n",
       "      <td>COL</td>\n",
       "      <td>Colombia</td>\n",
       "      <td>Vichada</td>\n",
       "      <td>2020-08-01</td>\n",
       "      <td>107808</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "       ISO3   Country Province       Date  Population\n",
       "164359  COL  Colombia  Vichada 2020-07-28      107808\n",
       "164360  COL  Colombia  Vichada 2020-07-29      107808\n",
       "164361  COL  Colombia  Vichada 2020-07-30      107808\n",
       "164362  COL  Colombia  Vichada 2020-07-31      107808\n",
       "164363  COL  Colombia  Vichada 2020-08-01      107808"
      ]
     },
     "execution_count": 17,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# Cleaned data\n",
    "population_data.cleaned().tail()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 18,
   "metadata": {
    "collapsed": false
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "126529100"
      ]
     },
     "execution_count": 18,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "population_data.value(\"Japan\", province=None)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 19,
   "metadata": {
    "collapsed": false
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "14002973"
      ]
     },
     "execution_count": 19,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# Register population value of Tokyo in Japan\n",
    "# https://www.metro.tokyo.lg.jp/tosei/hodohappyo/press/2020/06/11/07.html\n",
    "population_data.update(14_002_973, \"Japan\", province=\"Tokyo\")\n",
    "population_data.value(\"Japan\", province=\"Tokyo\")"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### Government Response Tracker (OxCGRT)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 20,
   "metadata": {
    "collapsed": false,
    "tags": []
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "(Secondary source) Guidotti, E., Ardia, D., (2020), \"COVID-19 Data Hub\", Working paper, doi: 10.13140/RG.2.2.11649.81763.\n",
      "We can get Citation list of primary sources with DataLoader(...).covid19dh_citation"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\n"
     ]
    }
   ],
   "source": [
    "# Description/citation\n",
    "print(oxcgrt_data.citation)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 21,
   "metadata": {
    "collapsed": false
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>ObservationDate</th>\n",
       "      <th>Confirmed</th>\n",
       "      <th>Recovered</th>\n",
       "      <th>Deaths</th>\n",
       "      <th>Population</th>\n",
       "      <th>ISO3</th>\n",
       "      <th>Province/State</th>\n",
       "      <th>Country/Region</th>\n",
       "      <th>school_closing</th>\n",
       "      <th>workplace_closing</th>\n",
       "      <th>cancel_events</th>\n",
       "      <th>gatherings_restrictions</th>\n",
       "      <th>transport_closing</th>\n",
       "      <th>stay_home_restrictions</th>\n",
       "      <th>internal_movement_restrictions</th>\n",
       "      <th>international_movement_restrictions</th>\n",
       "      <th>information_campaigns</th>\n",
       "      <th>testing_policy</th>\n",
       "      <th>contact_tracing</th>\n",
       "      <th>stringency_index</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>167559</th>\n",
       "      <td>2020-07-28</td>\n",
       "      <td>2</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>107808.0</td>\n",
       "      <td>COL</td>\n",
       "      <td>Vichada</td>\n",
       "      <td>Colombia</td>\n",
       "      <td>3</td>\n",
       "      <td>3</td>\n",
       "      <td>2</td>\n",
       "      <td>4</td>\n",
       "      <td>1</td>\n",
       "      <td>2</td>\n",
       "      <td>2</td>\n",
       "      <td>4</td>\n",
       "      <td>2</td>\n",
       "      <td>2</td>\n",
       "      <td>2</td>\n",
       "      <td>87.04</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>167560</th>\n",
       "      <td>2020-07-29</td>\n",
       "      <td>2</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>107808.0</td>\n",
       "      <td>COL</td>\n",
       "      <td>Vichada</td>\n",
       "      <td>Colombia</td>\n",
       "      <td>3</td>\n",
       "      <td>3</td>\n",
       "      <td>2</td>\n",
       "      <td>4</td>\n",
       "      <td>1</td>\n",
       "      <td>2</td>\n",
       "      <td>2</td>\n",
       "      <td>4</td>\n",
       "      <td>2</td>\n",
       "      <td>2</td>\n",
       "      <td>2</td>\n",
       "      <td>87.04</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>167561</th>\n",
       "      <td>2020-07-30</td>\n",
       "      <td>2</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>107808.0</td>\n",
       "      <td>COL</td>\n",
       "      <td>Vichada</td>\n",
       "      <td>Colombia</td>\n",
       "      <td>3</td>\n",
       "      <td>3</td>\n",
       "      <td>2</td>\n",
       "      <td>4</td>\n",
       "      <td>1</td>\n",
       "      <td>2</td>\n",
       "      <td>2</td>\n",
       "      <td>4</td>\n",
       "      <td>2</td>\n",
       "      <td>2</td>\n",
       "      <td>2</td>\n",
       "      <td>87.04</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>167562</th>\n",
       "      <td>2020-07-31</td>\n",
       "      <td>2</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>107808.0</td>\n",
       "      <td>COL</td>\n",
       "      <td>Vichada</td>\n",
       "      <td>Colombia</td>\n",
       "      <td>3</td>\n",
       "      <td>3</td>\n",
       "      <td>2</td>\n",
       "      <td>4</td>\n",
       "      <td>1</td>\n",
       "      <td>2</td>\n",
       "      <td>2</td>\n",
       "      <td>4</td>\n",
       "      <td>2</td>\n",
       "      <td>2</td>\n",
       "      <td>2</td>\n",
       "      <td>87.04</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>167563</th>\n",
       "      <td>2020-08-01</td>\n",
       "      <td>2</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>107808.0</td>\n",
       "      <td>COL</td>\n",
       "      <td>Vichada</td>\n",
       "      <td>Colombia</td>\n",
       "      <td>3</td>\n",
       "      <td>3</td>\n",
       "      <td>2</td>\n",
       "      <td>4</td>\n",
       "      <td>1</td>\n",
       "      <td>2</td>\n",
       "      <td>2</td>\n",
       "      <td>4</td>\n",
       "      <td>2</td>\n",
       "      <td>2</td>\n",
       "      <td>2</td>\n",
       "      <td>87.04</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "       ObservationDate  Confirmed  Recovered  Deaths  Population ISO3  \\\n",
       "167559      2020-07-28          2          1       0    107808.0  COL   \n",
       "167560      2020-07-29          2          1       0    107808.0  COL   \n",
       "167561      2020-07-30          2          1       0    107808.0  COL   \n",
       "167562      2020-07-31          2          1       0    107808.0  COL   \n",
       "167563      2020-08-01          2          1       0    107808.0  COL   \n",
       "\n",
       "       Province/State Country/Region  school_closing  workplace_closing  \\\n",
       "167559        Vichada       Colombia               3                  3   \n",
       "167560        Vichada       Colombia               3                  3   \n",
       "167561        Vichada       Colombia               3                  3   \n",
       "167562        Vichada       Colombia               3                  3   \n",
       "167563        Vichada       Colombia               3                  3   \n",
       "\n",
       "        cancel_events  gatherings_restrictions  transport_closing  \\\n",
       "167559              2                        4                  1   \n",
       "167560              2                        4                  1   \n",
       "167561              2                        4                  1   \n",
       "167562              2                        4                  1   \n",
       "167563              2                        4                  1   \n",
       "\n",
       "        stay_home_restrictions  internal_movement_restrictions  \\\n",
       "167559                       2                               2   \n",
       "167560                       2                               2   \n",
       "167561                       2                               2   \n",
       "167562                       2                               2   \n",
       "167563                       2                               2   \n",
       "\n",
       "        international_movement_restrictions  information_campaigns  \\\n",
       "167559                                    4                      2   \n",
       "167560                                    4                      2   \n",
       "167561                                    4                      2   \n",
       "167562                                    4                      2   \n",
       "167563                                    4                      2   \n",
       "\n",
       "        testing_policy  contact_tracing  stringency_index  \n",
       "167559               2                2             87.04  \n",
       "167560               2                2             87.04  \n",
       "167561               2                2             87.04  \n",
       "167562               2                2             87.04  \n",
       "167563               2                2             87.04  "
      ]
     },
     "execution_count": 21,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# Raw data (the same as jhu_data)\n",
    "oxcgrt_data.raw.tail()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 22,
   "metadata": {
    "collapsed": false
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Date</th>\n",
       "      <th>Country</th>\n",
       "      <th>ISO3</th>\n",
       "      <th>School_closing</th>\n",
       "      <th>Workplace_closing</th>\n",
       "      <th>Cancel_events</th>\n",
       "      <th>Gatherings_restrictions</th>\n",
       "      <th>Transport_closing</th>\n",
       "      <th>Stay_home_restrictions</th>\n",
       "      <th>Internal_movement_restrictions</th>\n",
       "      <th>International_movement_restrictions</th>\n",
       "      <th>Information_campaigns</th>\n",
       "      <th>Testing_policy</th>\n",
       "      <th>Contact_tracing</th>\n",
       "      <th>Stringency_index</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>167559</th>\n",
       "      <td>2020-07-28</td>\n",
       "      <td>Colombia</td>\n",
       "      <td>COL</td>\n",
       "      <td>3</td>\n",
       "      <td>3</td>\n",
       "      <td>2</td>\n",
       "      <td>4</td>\n",
       "      <td>1</td>\n",
       "      <td>2</td>\n",
       "      <td>2</td>\n",
       "      <td>4</td>\n",
       "      <td>2</td>\n",
       "      <td>2</td>\n",
       "      <td>2</td>\n",
       "      <td>87.04</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>167560</th>\n",
       "      <td>2020-07-29</td>\n",
       "      <td>Colombia</td>\n",
       "      <td>COL</td>\n",
       "      <td>3</td>\n",
       "      <td>3</td>\n",
       "      <td>2</td>\n",
       "      <td>4</td>\n",
       "      <td>1</td>\n",
       "      <td>2</td>\n",
       "      <td>2</td>\n",
       "      <td>4</td>\n",
       "      <td>2</td>\n",
       "      <td>2</td>\n",
       "      <td>2</td>\n",
       "      <td>87.04</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>167561</th>\n",
       "      <td>2020-07-30</td>\n",
       "      <td>Colombia</td>\n",
       "      <td>COL</td>\n",
       "      <td>3</td>\n",
       "      <td>3</td>\n",
       "      <td>2</td>\n",
       "      <td>4</td>\n",
       "      <td>1</td>\n",
       "      <td>2</td>\n",
       "      <td>2</td>\n",
       "      <td>4</td>\n",
       "      <td>2</td>\n",
       "      <td>2</td>\n",
       "      <td>2</td>\n",
       "      <td>87.04</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>167562</th>\n",
       "      <td>2020-07-31</td>\n",
       "      <td>Colombia</td>\n",
       "      <td>COL</td>\n",
       "      <td>3</td>\n",
       "      <td>3</td>\n",
       "      <td>2</td>\n",
       "      <td>4</td>\n",
       "      <td>1</td>\n",
       "      <td>2</td>\n",
       "      <td>2</td>\n",
       "      <td>4</td>\n",
       "      <td>2</td>\n",
       "      <td>2</td>\n",
       "      <td>2</td>\n",
       "      <td>87.04</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>167563</th>\n",
       "      <td>2020-08-01</td>\n",
       "      <td>Colombia</td>\n",
       "      <td>COL</td>\n",
       "      <td>3</td>\n",
       "      <td>3</td>\n",
       "      <td>2</td>\n",
       "      <td>4</td>\n",
       "      <td>1</td>\n",
       "      <td>2</td>\n",
       "      <td>2</td>\n",
       "      <td>4</td>\n",
       "      <td>2</td>\n",
       "      <td>2</td>\n",
       "      <td>2</td>\n",
       "      <td>87.04</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "             Date   Country ISO3  School_closing  Workplace_closing  \\\n",
       "167559 2020-07-28  Colombia  COL               3                  3   \n",
       "167560 2020-07-29  Colombia  COL               3                  3   \n",
       "167561 2020-07-30  Colombia  COL               3                  3   \n",
       "167562 2020-07-31  Colombia  COL               3                  3   \n",
       "167563 2020-08-01  Colombia  COL               3                  3   \n",
       "\n",
       "        Cancel_events  Gatherings_restrictions  Transport_closing  \\\n",
       "167559              2                        4                  1   \n",
       "167560              2                        4                  1   \n",
       "167561              2                        4                  1   \n",
       "167562              2                        4                  1   \n",
       "167563              2                        4                  1   \n",
       "\n",
       "        Stay_home_restrictions  Internal_movement_restrictions  \\\n",
       "167559                       2                               2   \n",
       "167560                       2                               2   \n",
       "167561                       2                               2   \n",
       "167562                       2                               2   \n",
       "167563                       2                               2   \n",
       "\n",
       "        International_movement_restrictions  Information_campaigns  \\\n",
       "167559                                    4                      2   \n",
       "167560                                    4                      2   \n",
       "167561                                    4                      2   \n",
       "167562                                    4                      2   \n",
       "167563                                    4                      2   \n",
       "\n",
       "        Testing_policy  Contact_tracing  Stringency_index  \n",
       "167559               2                2             87.04  \n",
       "167560               2                2             87.04  \n",
       "167561               2                2             87.04  \n",
       "167562               2                2             87.04  \n",
       "167563               2                2             87.04  "
      ]
     },
     "execution_count": 22,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# Cleaned data\n",
    "oxcgrt_data.cleaned().tail()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 23,
   "metadata": {
    "collapsed": false
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Date</th>\n",
       "      <th>School_closing</th>\n",
       "      <th>Workplace_closing</th>\n",
       "      <th>Cancel_events</th>\n",
       "      <th>Gatherings_restrictions</th>\n",
       "      <th>Transport_closing</th>\n",
       "      <th>Stay_home_restrictions</th>\n",
       "      <th>Internal_movement_restrictions</th>\n",
       "      <th>International_movement_restrictions</th>\n",
       "      <th>Information_campaigns</th>\n",
       "      <th>Testing_policy</th>\n",
       "      <th>Contact_tracing</th>\n",
       "      <th>Stringency_index</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>204</th>\n",
       "      <td>2020-07-28</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>3</td>\n",
       "      <td>2</td>\n",
       "      <td>2</td>\n",
       "      <td>1</td>\n",
       "      <td>32.41</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>205</th>\n",
       "      <td>2020-07-29</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>3</td>\n",
       "      <td>2</td>\n",
       "      <td>2</td>\n",
       "      <td>1</td>\n",
       "      <td>32.41</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>206</th>\n",
       "      <td>2020-07-30</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>3</td>\n",
       "      <td>2</td>\n",
       "      <td>2</td>\n",
       "      <td>1</td>\n",
       "      <td>32.41</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>207</th>\n",
       "      <td>2020-07-31</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>3</td>\n",
       "      <td>2</td>\n",
       "      <td>2</td>\n",
       "      <td>1</td>\n",
       "      <td>32.41</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>208</th>\n",
       "      <td>2020-08-01</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>3</td>\n",
       "      <td>2</td>\n",
       "      <td>2</td>\n",
       "      <td>1</td>\n",
       "      <td>32.41</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "          Date  School_closing  Workplace_closing  Cancel_events  \\\n",
       "204 2020-07-28               1                  1              1   \n",
       "205 2020-07-29               1                  1              1   \n",
       "206 2020-07-30               1                  1              1   \n",
       "207 2020-07-31               1                  1              1   \n",
       "208 2020-08-01               1                  1              1   \n",
       "\n",
       "     Gatherings_restrictions  Transport_closing  Stay_home_restrictions  \\\n",
       "204                        0                  0                       1   \n",
       "205                        0                  0                       1   \n",
       "206                        0                  0                       1   \n",
       "207                        0                  0                       1   \n",
       "208                        0                  0                       1   \n",
       "\n",
       "     Internal_movement_restrictions  International_movement_restrictions  \\\n",
       "204                               1                                    3   \n",
       "205                               1                                    3   \n",
       "206                               1                                    3   \n",
       "207                               1                                    3   \n",
       "208                               1                                    3   \n",
       "\n",
       "     Information_campaigns  Testing_policy  Contact_tracing  Stringency_index  \n",
       "204                      2               2                1             32.41  \n",
       "205                      2               2                1             32.41  \n",
       "206                      2               2                1             32.41  \n",
       "207                      2               2                1             32.41  \n",
       "208                      2               2                1             32.41  "
      ]
     },
     "execution_count": 23,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# Subset for a country\n",
    "oxcgrt_data.subset(country=\"Japan\").tail()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 24,
   "metadata": {
    "collapsed": false
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Date</th>\n",
       "      <th>School_closing</th>\n",
       "      <th>Workplace_closing</th>\n",
       "      <th>Cancel_events</th>\n",
       "      <th>Gatherings_restrictions</th>\n",
       "      <th>Transport_closing</th>\n",
       "      <th>Stay_home_restrictions</th>\n",
       "      <th>Internal_movement_restrictions</th>\n",
       "      <th>International_movement_restrictions</th>\n",
       "      <th>Information_campaigns</th>\n",
       "      <th>Testing_policy</th>\n",
       "      <th>Contact_tracing</th>\n",
       "      <th>Stringency_index</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>204</th>\n",
       "      <td>2020-07-28</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>3</td>\n",
       "      <td>2</td>\n",
       "      <td>2</td>\n",
       "      <td>1</td>\n",
       "      <td>32.41</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>205</th>\n",
       "      <td>2020-07-29</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>3</td>\n",
       "      <td>2</td>\n",
       "      <td>2</td>\n",
       "      <td>1</td>\n",
       "      <td>32.41</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>206</th>\n",
       "      <td>2020-07-30</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>3</td>\n",
       "      <td>2</td>\n",
       "      <td>2</td>\n",
       "      <td>1</td>\n",
       "      <td>32.41</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>207</th>\n",
       "      <td>2020-07-31</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>3</td>\n",
       "      <td>2</td>\n",
       "      <td>2</td>\n",
       "      <td>1</td>\n",
       "      <td>32.41</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>208</th>\n",
       "      <td>2020-08-01</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>3</td>\n",
       "      <td>2</td>\n",
       "      <td>2</td>\n",
       "      <td>1</td>\n",
       "      <td>32.41</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "          Date  School_closing  Workplace_closing  Cancel_events  \\\n",
       "204 2020-07-28               1                  1              1   \n",
       "205 2020-07-29               1                  1              1   \n",
       "206 2020-07-30               1                  1              1   \n",
       "207 2020-07-31               1                  1              1   \n",
       "208 2020-08-01               1                  1              1   \n",
       "\n",
       "     Gatherings_restrictions  Transport_closing  Stay_home_restrictions  \\\n",
       "204                        0                  0                       1   \n",
       "205                        0                  0                       1   \n",
       "206                        0                  0                       1   \n",
       "207                        0                  0                       1   \n",
       "208                        0                  0                       1   \n",
       "\n",
       "     Internal_movement_restrictions  International_movement_restrictions  \\\n",
       "204                               1                                    3   \n",
       "205                               1                                    3   \n",
       "206                               1                                    3   \n",
       "207                               1                                    3   \n",
       "208                               1                                    3   \n",
       "\n",
       "     Information_campaigns  Testing_policy  Contact_tracing  Stringency_index  \n",
       "204                      2               2                1             32.41  \n",
       "205                      2               2                1             32.41  \n",
       "206                      2               2                1             32.41  \n",
       "207                      2               2                1             32.41  \n",
       "208                      2               2                1             32.41  "
      ]
     },
     "execution_count": 24,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# Subset for a country (using ISO3 code)\n",
    "oxcgrt_data.subset(iso3=\"JPN\").tail()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## Scenario analysis\n",
    "As an example, we will analysis the number of cases in Japan."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 25,
   "metadata": {
    "collapsed": false
   },
   "outputs": [],
   "source": [
    "scenario = cs.Scenario(jhu_data, population_data, country=\"Japan\", province=None)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### Check records"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 26,
   "metadata": {
    "collapsed": false
   },
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 648x432 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Date</th>\n",
       "      <th>Confirmed</th>\n",
       "      <th>Infected</th>\n",
       "      <th>Fatal</th>\n",
       "      <th>Recovered</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>167</th>\n",
       "      <td>2020-07-27</td>\n",
       "      <td>29969</td>\n",
       "      <td>6857</td>\n",
       "      <td>996</td>\n",
       "      <td>22116</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>168</th>\n",
       "      <td>2020-07-28</td>\n",
       "      <td>30961</td>\n",
       "      <td>7152</td>\n",
       "      <td>998</td>\n",
       "      <td>22811</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>169</th>\n",
       "      <td>2020-07-29</td>\n",
       "      <td>31901</td>\n",
       "      <td>7393</td>\n",
       "      <td>1001</td>\n",
       "      <td>23507</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>170</th>\n",
       "      <td>2020-07-30</td>\n",
       "      <td>33049</td>\n",
       "      <td>7866</td>\n",
       "      <td>1004</td>\n",
       "      <td>24179</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>171</th>\n",
       "      <td>2020-07-31</td>\n",
       "      <td>34372</td>\n",
       "      <td>8437</td>\n",
       "      <td>1006</td>\n",
       "      <td>24929</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "          Date  Confirmed  Infected  Fatal  Recovered\n",
       "167 2020-07-27      29969      6857    996      22116\n",
       "168 2020-07-28      30961      7152    998      22811\n",
       "169 2020-07-29      31901      7393   1001      23507\n",
       "170 2020-07-30      33049      7866   1004      24179\n",
       "171 2020-07-31      34372      8437   1006      24929"
      ]
     },
     "execution_count": 26,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "import matplotlib\n",
    "warnings.filterwarnings(\"ignore\", category=matplotlib.MatplotlibDeprecationWarning)\n",
    "record_df = scenario.records()\n",
    "record_df.tail()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### S-R trend analysis"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 27,
   "metadata": {
    "collapsed": false
   },
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 648x432 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Type</th>\n",
       "      <th>Start</th>\n",
       "      <th>End</th>\n",
       "      <th>Population</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>1st</th>\n",
       "      <td>Past</td>\n",
       "      <td>17Apr2020</td>\n",
       "      <td>01May2020</td>\n",
       "      <td>14002973</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2nd</th>\n",
       "      <td>Past</td>\n",
       "      <td>02May2020</td>\n",
       "      <td>14May2020</td>\n",
       "      <td>14002973</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3rd</th>\n",
       "      <td>Past</td>\n",
       "      <td>15May2020</td>\n",
       "      <td>09Jun2020</td>\n",
       "      <td>14002973</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4th</th>\n",
       "      <td>Past</td>\n",
       "      <td>10Jun2020</td>\n",
       "      <td>01Jul2020</td>\n",
       "      <td>14002973</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>5th</th>\n",
       "      <td>Past</td>\n",
       "      <td>02Jul2020</td>\n",
       "      <td>11Jul2020</td>\n",
       "      <td>14002973</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>6th</th>\n",
       "      <td>Past</td>\n",
       "      <td>12Jul2020</td>\n",
       "      <td>22Jul2020</td>\n",
       "      <td>14002973</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>7th</th>\n",
       "      <td>Past</td>\n",
       "      <td>23Jul2020</td>\n",
       "      <td>31Jul2020</td>\n",
       "      <td>14002973</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "     Type      Start        End  Population\n",
       "1st  Past  17Apr2020  01May2020    14002973\n",
       "2nd  Past  02May2020  14May2020    14002973\n",
       "3rd  Past  15May2020  09Jun2020    14002973\n",
       "4th  Past  10Jun2020  01Jul2020    14002973\n",
       "5th  Past  02Jul2020  11Jul2020    14002973\n",
       "6th  Past  12Jul2020  22Jul2020    14002973\n",
       "7th  Past  23Jul2020  31Jul2020    14002973"
      ]
     },
     "execution_count": 27,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "scenario.trend(set_phases=True)\n",
    "scenario.summary()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### Hyperparameter estimation of ODE models\n",
    "As an example, use SIR-F model.\n",
    "We can use SIR, SIRD, (SIRFV), (SEWIRF)."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 28,
   "metadata": {
    "collapsed": false,
    "tags": []
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\n",
      "<Main scenario: perform parameter estimation>"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Running optimization with 8 CPUs..."
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\t7th phase with SIR-F model finished 422 trials in 0 min 15 sec."
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\t1st phase with SIR-F model finished 151 trials in 0 min 5 sec."
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\t2nd phase with SIR-F model finished 114 trials in 0 min 5 sec."
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\t3rd phase with SIR-F model finished 303 trials in 0 min 10 sec."
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\t4th phase with SIR-F model finished 157 trials in 0 min 5 sec."
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\t5th phase with SIR-F model finished 163 trials in 0 min 5 sec."
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\t6th phase with SIR-F model finished 202 trials in 0 min 5 sec."
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Completed optimization. Total: 1 min 57 sec"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\n"
     ]
    }
   ],
   "source": [
    "scenario.estimate(cs.SIRF)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 29,
   "metadata": {
    "collapsed": false
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Type</th>\n",
       "      <th>Start</th>\n",
       "      <th>End</th>\n",
       "      <th>Population</th>\n",
       "      <th>ODE</th>\n",
       "      <th>rho</th>\n",
       "      <th>sigma</th>\n",
       "      <th>theta</th>\n",
       "      <th>kappa</th>\n",
       "      <th>tau</th>\n",
       "      <th>Rt</th>\n",
       "      <th>alpha1 [-]</th>\n",
       "      <th>1/alpha2 [day]</th>\n",
       "      <th>1/beta [day]</th>\n",
       "      <th>1/gamma [day]</th>\n",
       "      <th>RMSLE</th>\n",
       "      <th>Trials</th>\n",
       "      <th>Runtime</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>1st</th>\n",
       "      <td>Past</td>\n",
       "      <td>17Apr2020</td>\n",
       "      <td>01May2020</td>\n",
       "      <td>14002973</td>\n",
       "      <td>SIR-F</td>\n",
       "      <td>0.010962</td>\n",
       "      <td>0.004857</td>\n",
       "      <td>0.047160</td>\n",
       "      <td>0.000079</td>\n",
       "      <td>360</td>\n",
       "      <td>2.12</td>\n",
       "      <td>0.047</td>\n",
       "      <td>3148</td>\n",
       "      <td>22</td>\n",
       "      <td>51</td>\n",
       "      <td>0.137505</td>\n",
       "      <td>151</td>\n",
       "      <td>0 min 5 sec</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2nd</th>\n",
       "      <td>Past</td>\n",
       "      <td>02May2020</td>\n",
       "      <td>14May2020</td>\n",
       "      <td>14002973</td>\n",
       "      <td>SIR-F</td>\n",
       "      <td>0.003904</td>\n",
       "      <td>0.012700</td>\n",
       "      <td>0.080455</td>\n",
       "      <td>0.000535</td>\n",
       "      <td>360</td>\n",
       "      <td>0.27</td>\n",
       "      <td>0.080</td>\n",
       "      <td>466</td>\n",
       "      <td>64</td>\n",
       "      <td>19</td>\n",
       "      <td>0.164932</td>\n",
       "      <td>114</td>\n",
       "      <td>0 min 5 sec</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3rd</th>\n",
       "      <td>Past</td>\n",
       "      <td>15May2020</td>\n",
       "      <td>09Jun2020</td>\n",
       "      <td>14002973</td>\n",
       "      <td>SIR-F</td>\n",
       "      <td>0.004595</td>\n",
       "      <td>0.019806</td>\n",
       "      <td>0.247921</td>\n",
       "      <td>0.000041</td>\n",
       "      <td>360</td>\n",
       "      <td>0.17</td>\n",
       "      <td>0.248</td>\n",
       "      <td>6162</td>\n",
       "      <td>54</td>\n",
       "      <td>12</td>\n",
       "      <td>0.121153</td>\n",
       "      <td>303</td>\n",
       "      <td>0 min 10 sec</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4th</th>\n",
       "      <td>Past</td>\n",
       "      <td>10Jun2020</td>\n",
       "      <td>01Jul2020</td>\n",
       "      <td>14002973</td>\n",
       "      <td>SIR-F</td>\n",
       "      <td>0.017502</td>\n",
       "      <td>0.017795</td>\n",
       "      <td>0.115711</td>\n",
       "      <td>0.000150</td>\n",
       "      <td>360</td>\n",
       "      <td>0.86</td>\n",
       "      <td>0.116</td>\n",
       "      <td>1667</td>\n",
       "      <td>14</td>\n",
       "      <td>14</td>\n",
       "      <td>0.143076</td>\n",
       "      <td>157</td>\n",
       "      <td>0 min 5 sec</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>5th</th>\n",
       "      <td>Past</td>\n",
       "      <td>02Jul2020</td>\n",
       "      <td>11Jul2020</td>\n",
       "      <td>14002973</td>\n",
       "      <td>SIR-F</td>\n",
       "      <td>0.038462</td>\n",
       "      <td>0.016679</td>\n",
       "      <td>0.050413</td>\n",
       "      <td>0.000555</td>\n",
       "      <td>360</td>\n",
       "      <td>2.12</td>\n",
       "      <td>0.050</td>\n",
       "      <td>450</td>\n",
       "      <td>6</td>\n",
       "      <td>14</td>\n",
       "      <td>0.059369</td>\n",
       "      <td>163</td>\n",
       "      <td>0 min 5 sec</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>6th</th>\n",
       "      <td>Past</td>\n",
       "      <td>12Jul2020</td>\n",
       "      <td>22Jul2020</td>\n",
       "      <td>14002973</td>\n",
       "      <td>SIR-F</td>\n",
       "      <td>0.032772</td>\n",
       "      <td>0.018251</td>\n",
       "      <td>0.001114</td>\n",
       "      <td>0.000071</td>\n",
       "      <td>360</td>\n",
       "      <td>1.79</td>\n",
       "      <td>0.001</td>\n",
       "      <td>3514</td>\n",
       "      <td>7</td>\n",
       "      <td>13</td>\n",
       "      <td>0.039045</td>\n",
       "      <td>202</td>\n",
       "      <td>0 min 5 sec</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>7th</th>\n",
       "      <td>Past</td>\n",
       "      <td>23Jul2020</td>\n",
       "      <td>31Jul2020</td>\n",
       "      <td>14002973</td>\n",
       "      <td>SIR-F</td>\n",
       "      <td>0.032739</td>\n",
       "      <td>0.016134</td>\n",
       "      <td>0.000390</td>\n",
       "      <td>0.000180</td>\n",
       "      <td>360</td>\n",
       "      <td>2.01</td>\n",
       "      <td>0.000</td>\n",
       "      <td>1386</td>\n",
       "      <td>7</td>\n",
       "      <td>15</td>\n",
       "      <td>0.033929</td>\n",
       "      <td>422</td>\n",
       "      <td>0 min 15 sec</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "     Type      Start        End  Population    ODE       rho     sigma  \\\n",
       "1st  Past  17Apr2020  01May2020    14002973  SIR-F  0.010962  0.004857   \n",
       "2nd  Past  02May2020  14May2020    14002973  SIR-F  0.003904  0.012700   \n",
       "3rd  Past  15May2020  09Jun2020    14002973  SIR-F  0.004595  0.019806   \n",
       "4th  Past  10Jun2020  01Jul2020    14002973  SIR-F  0.017502  0.017795   \n",
       "5th  Past  02Jul2020  11Jul2020    14002973  SIR-F  0.038462  0.016679   \n",
       "6th  Past  12Jul2020  22Jul2020    14002973  SIR-F  0.032772  0.018251   \n",
       "7th  Past  23Jul2020  31Jul2020    14002973  SIR-F  0.032739  0.016134   \n",
       "\n",
       "        theta     kappa  tau    Rt  alpha1 [-]  1/alpha2 [day]  1/beta [day]  \\\n",
       "1st  0.047160  0.000079  360  2.12       0.047            3148            22   \n",
       "2nd  0.080455  0.000535  360  0.27       0.080             466            64   \n",
       "3rd  0.247921  0.000041  360  0.17       0.248            6162            54   \n",
       "4th  0.115711  0.000150  360  0.86       0.116            1667            14   \n",
       "5th  0.050413  0.000555  360  2.12       0.050             450             6   \n",
       "6th  0.001114  0.000071  360  1.79       0.001            3514             7   \n",
       "7th  0.000390  0.000180  360  2.01       0.000            1386             7   \n",
       "\n",
       "     1/gamma [day]     RMSLE  Trials       Runtime  \n",
       "1st             51  0.137505     151   0 min 5 sec  \n",
       "2nd             19  0.164932     114   0 min 5 sec  \n",
       "3rd             12  0.121153     303  0 min 10 sec  \n",
       "4th             14  0.143076     157   0 min 5 sec  \n",
       "5th             14  0.059369     163   0 min 5 sec  \n",
       "6th             13  0.039045     202   0 min 5 sec  \n",
       "7th             15  0.033929     422  0 min 15 sec  "
      ]
     },
     "execution_count": 29,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "scenario.summary()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### Accuracy of estimation"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 30,
   "metadata": {
    "collapsed": false
   },
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 648x864 with 4 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "scenario.estimate_accuracy(phase=\"1st\")"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### Get parameter value"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 31,
   "metadata": {
    "collapsed": false
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "0.86"
      ]
     },
     "execution_count": 31,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "scenario.get(\"Rt\", phase=\"4th\")"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### Show parameter history"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 32,
   "metadata": {
    "collapsed": false
   },
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 648x432 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>1st</th>\n",
       "      <th>2nd</th>\n",
       "      <th>3rd</th>\n",
       "      <th>4th</th>\n",
       "      <th>5th</th>\n",
       "      <th>6th</th>\n",
       "      <th>7th</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>rho</th>\n",
       "      <td>1.0</td>\n",
       "      <td>0.356124</td>\n",
       "      <td>0.419192</td>\n",
       "      <td>1.596626</td>\n",
       "      <td>3.508612</td>\n",
       "      <td>2.989549</td>\n",
       "      <td>2.986587</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>sigma</th>\n",
       "      <td>1.0</td>\n",
       "      <td>2.614573</td>\n",
       "      <td>4.077635</td>\n",
       "      <td>3.663510</td>\n",
       "      <td>3.433837</td>\n",
       "      <td>3.757370</td>\n",
       "      <td>3.321626</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "       1st       2nd       3rd       4th       5th       6th       7th\n",
       "rho    1.0  0.356124  0.419192  1.596626  3.508612  2.989549  2.986587\n",
       "sigma  1.0  2.614573  4.077635  3.663510  3.433837  3.757370  3.321626"
      ]
     },
     "execution_count": 32,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df = scenario.param_history(targets=[\"rho\", \"sigma\"])\n",
    "df.T"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### Show the history of reproduction number"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 33,
   "metadata": {
    "collapsed": false
   },
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 648x432 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>1st</th>\n",
       "      <th>2nd</th>\n",
       "      <th>3rd</th>\n",
       "      <th>4th</th>\n",
       "      <th>5th</th>\n",
       "      <th>6th</th>\n",
       "      <th>7th</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>Rt</th>\n",
       "      <td>2.12</td>\n",
       "      <td>0.27</td>\n",
       "      <td>0.17</td>\n",
       "      <td>0.86</td>\n",
       "      <td>2.12</td>\n",
       "      <td>1.79</td>\n",
       "      <td>2.01</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "     1st   2nd   3rd   4th   5th   6th   7th\n",
       "Rt  2.12  0.27  0.17  0.86  2.12  1.79  2.01"
      ]
     },
     "execution_count": 33,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df = scenario.param_history(targets=[\"Rt\"], divide_by_first=False, show_box_plot=True)\n",
    "df.T"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### Simulate the number of cases"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 34,
   "metadata": {
    "collapsed": false
   },
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 648x432 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Date</th>\n",
       "      <th>Fatal</th>\n",
       "      <th>Infected</th>\n",
       "      <th>Recovered</th>\n",
       "      <th>Susceptible</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>255</th>\n",
       "      <td>28Dec2020</td>\n",
       "      <td>104622</td>\n",
       "      <td>1160043</td>\n",
       "      <td>8883580</td>\n",
       "      <td>3854727</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>256</th>\n",
       "      <td>29Dec2020</td>\n",
       "      <td>105463</td>\n",
       "      <td>1126363</td>\n",
       "      <td>8957430</td>\n",
       "      <td>3813717</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>257</th>\n",
       "      <td>30Dec2020</td>\n",
       "      <td>106280</td>\n",
       "      <td>1093265</td>\n",
       "      <td>9029100</td>\n",
       "      <td>3774328</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>258</th>\n",
       "      <td>31Dec2020</td>\n",
       "      <td>107071</td>\n",
       "      <td>1060773</td>\n",
       "      <td>9098629</td>\n",
       "      <td>3736499</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>259</th>\n",
       "      <td>01Jan2021</td>\n",
       "      <td>107555</td>\n",
       "      <td>1040758</td>\n",
       "      <td>9141098</td>\n",
       "      <td>3713563</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "          Date   Fatal  Infected  Recovered  Susceptible\n",
       "255  28Dec2020  104622   1160043    8883580      3854727\n",
       "256  29Dec2020  105463   1126363    8957430      3813717\n",
       "257  30Dec2020  106280   1093265    9029100      3774328\n",
       "258  31Dec2020  107071   1060773    9098629      3736499\n",
       "259  01Jan2021  107555   1040758    9141098      3713563"
      ]
     },
     "execution_count": 34,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "scenario.clear(name=\"Main\")\n",
    "scenario.add(end_date=\"01Jan2021\", name=\"Main\")\n",
    "main_sim_df = scenario.simulate(name=\"Main\")\n",
    "main_sim_df.tail()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### Simulate another scenario\n",
    "If $\\sigma$ will be double in 30 days, how many cases will be?"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 35,
   "metadata": {
    "collapsed": false
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "0.01613427498094315"
      ]
     },
     "execution_count": 35,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "sigma_current = scenario.get(\"sigma\", name=\"Main\", phase=\"last\")\n",
    "sigma_current"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 36,
   "metadata": {
    "collapsed": false
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "0.0322685499618863"
      ]
     },
     "execution_count": 36,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "sigma_new = sigma_current * 2\n",
    "sigma_new"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 37,
   "metadata": {
    "collapsed": false
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th>Type</th>\n",
       "      <th>Start</th>\n",
       "      <th>End</th>\n",
       "      <th>Population</th>\n",
       "      <th>ODE</th>\n",
       "      <th>rho</th>\n",
       "      <th>sigma</th>\n",
       "      <th>theta</th>\n",
       "      <th>kappa</th>\n",
       "      <th>tau</th>\n",
       "      <th>Rt</th>\n",
       "      <th>alpha1 [-]</th>\n",
       "      <th>1/alpha2 [day]</th>\n",
       "      <th>1/beta [day]</th>\n",
       "      <th>1/gamma [day]</th>\n",
       "      <th>RMSLE</th>\n",
       "      <th>Trials</th>\n",
       "      <th>Runtime</th>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Scenario</th>\n",
       "      <th>Phase</th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th rowspan=\"8\" valign=\"top\">Main</th>\n",
       "      <th>0th</th>\n",
       "      <td>Past</td>\n",
       "      <td>17Apr2020</td>\n",
       "      <td>01May2020</td>\n",
       "      <td>14002973</td>\n",
       "      <td>SIR-F</td>\n",
       "      <td>0.010962</td>\n",
       "      <td>0.004857</td>\n",
       "      <td>0.047160</td>\n",
       "      <td>0.000079</td>\n",
       "      <td>360</td>\n",
       "      <td>2.12</td>\n",
       "      <td>0.047</td>\n",
       "      <td>3148</td>\n",
       "      <td>22</td>\n",
       "      <td>51</td>\n",
       "      <td>0.137505</td>\n",
       "      <td>151</td>\n",
       "      <td>0 min 5 sec</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1st</th>\n",
       "      <td>Past</td>\n",
       "      <td>02May2020</td>\n",
       "      <td>14May2020</td>\n",
       "      <td>14002973</td>\n",
       "      <td>SIR-F</td>\n",
       "      <td>0.003904</td>\n",
       "      <td>0.012700</td>\n",
       "      <td>0.080455</td>\n",
       "      <td>0.000535</td>\n",
       "      <td>360</td>\n",
       "      <td>0.27</td>\n",
       "      <td>0.080</td>\n",
       "      <td>466</td>\n",
       "      <td>64</td>\n",
       "      <td>19</td>\n",
       "      <td>0.164932</td>\n",
       "      <td>114</td>\n",
       "      <td>0 min 5 sec</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2nd</th>\n",
       "      <td>Past</td>\n",
       "      <td>15May2020</td>\n",
       "      <td>09Jun2020</td>\n",
       "      <td>14002973</td>\n",
       "      <td>SIR-F</td>\n",
       "      <td>0.004595</td>\n",
       "      <td>0.019806</td>\n",
       "      <td>0.247921</td>\n",
       "      <td>0.000041</td>\n",
       "      <td>360</td>\n",
       "      <td>0.17</td>\n",
       "      <td>0.248</td>\n",
       "      <td>6162</td>\n",
       "      <td>54</td>\n",
       "      <td>12</td>\n",
       "      <td>0.121153</td>\n",
       "      <td>303</td>\n",
       "      <td>0 min 10 sec</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3rd</th>\n",
       "      <td>Past</td>\n",
       "      <td>10Jun2020</td>\n",
       "      <td>01Jul2020</td>\n",
       "      <td>14002973</td>\n",
       "      <td>SIR-F</td>\n",
       "      <td>0.017502</td>\n",
       "      <td>0.017795</td>\n",
       "      <td>0.115711</td>\n",
       "      <td>0.000150</td>\n",
       "      <td>360</td>\n",
       "      <td>0.86</td>\n",
       "      <td>0.116</td>\n",
       "      <td>1667</td>\n",
       "      <td>14</td>\n",
       "      <td>14</td>\n",
       "      <td>0.143076</td>\n",
       "      <td>157</td>\n",
       "      <td>0 min 5 sec</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4th</th>\n",
       "      <td>Past</td>\n",
       "      <td>02Jul2020</td>\n",
       "      <td>11Jul2020</td>\n",
       "      <td>14002973</td>\n",
       "      <td>SIR-F</td>\n",
       "      <td>0.038462</td>\n",
       "      <td>0.016679</td>\n",
       "      <td>0.050413</td>\n",
       "      <td>0.000555</td>\n",
       "      <td>360</td>\n",
       "      <td>2.12</td>\n",
       "      <td>0.050</td>\n",
       "      <td>450</td>\n",
       "      <td>6</td>\n",
       "      <td>14</td>\n",
       "      <td>0.0593688</td>\n",
       "      <td>163</td>\n",
       "      <td>0 min 5 sec</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>5th</th>\n",
       "      <td>Past</td>\n",
       "      <td>12Jul2020</td>\n",
       "      <td>22Jul2020</td>\n",
       "      <td>14002973</td>\n",
       "      <td>SIR-F</td>\n",
       "      <td>0.032772</td>\n",
       "      <td>0.018251</td>\n",
       "      <td>0.001114</td>\n",
       "      <td>0.000071</td>\n",
       "      <td>360</td>\n",
       "      <td>1.79</td>\n",
       "      <td>0.001</td>\n",
       "      <td>3514</td>\n",
       "      <td>7</td>\n",
       "      <td>13</td>\n",
       "      <td>0.0390454</td>\n",
       "      <td>202</td>\n",
       "      <td>0 min 5 sec</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>6th</th>\n",
       "      <td>Past</td>\n",
       "      <td>23Jul2020</td>\n",
       "      <td>31Jul2020</td>\n",
       "      <td>14002973</td>\n",
       "      <td>SIR-F</td>\n",
       "      <td>0.032739</td>\n",
       "      <td>0.016134</td>\n",
       "      <td>0.000390</td>\n",
       "      <td>0.000180</td>\n",
       "      <td>360</td>\n",
       "      <td>2.01</td>\n",
       "      <td>0.000</td>\n",
       "      <td>1386</td>\n",
       "      <td>7</td>\n",
       "      <td>15</td>\n",
       "      <td>0.0339287</td>\n",
       "      <td>422</td>\n",
       "      <td>0 min 15 sec</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>7th</th>\n",
       "      <td>Future</td>\n",
       "      <td>01Aug2020</td>\n",
       "      <td>01Jan2021</td>\n",
       "      <td>14002973</td>\n",
       "      <td>SIR-F</td>\n",
       "      <td>0.032739</td>\n",
       "      <td>0.016134</td>\n",
       "      <td>0.000390</td>\n",
       "      <td>0.000180</td>\n",
       "      <td>360</td>\n",
       "      <td>2.01</td>\n",
       "      <td>0.000</td>\n",
       "      <td>1386</td>\n",
       "      <td>7</td>\n",
       "      <td>15</td>\n",
       "      <td>-</td>\n",
       "      <td>-</td>\n",
       "      <td>-</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th rowspan=\"9\" valign=\"top\">Medicine</th>\n",
       "      <th>0th</th>\n",
       "      <td>Past</td>\n",
       "      <td>17Apr2020</td>\n",
       "      <td>01May2020</td>\n",
       "      <td>14002973</td>\n",
       "      <td>SIR-F</td>\n",
       "      <td>0.010962</td>\n",
       "      <td>0.004857</td>\n",
       "      <td>0.047160</td>\n",
       "      <td>0.000079</td>\n",
       "      <td>360</td>\n",
       "      <td>2.12</td>\n",
       "      <td>0.047</td>\n",
       "      <td>3148</td>\n",
       "      <td>22</td>\n",
       "      <td>51</td>\n",
       "      <td>0.137505</td>\n",
       "      <td>151</td>\n",
       "      <td>0 min 5 sec</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1st</th>\n",
       "      <td>Past</td>\n",
       "      <td>02May2020</td>\n",
       "      <td>14May2020</td>\n",
       "      <td>14002973</td>\n",
       "      <td>SIR-F</td>\n",
       "      <td>0.003904</td>\n",
       "      <td>0.012700</td>\n",
       "      <td>0.080455</td>\n",
       "      <td>0.000535</td>\n",
       "      <td>360</td>\n",
       "      <td>0.27</td>\n",
       "      <td>0.080</td>\n",
       "      <td>466</td>\n",
       "      <td>64</td>\n",
       "      <td>19</td>\n",
       "      <td>0.164932</td>\n",
       "      <td>114</td>\n",
       "      <td>0 min 5 sec</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2nd</th>\n",
       "      <td>Past</td>\n",
       "      <td>15May2020</td>\n",
       "      <td>09Jun2020</td>\n",
       "      <td>14002973</td>\n",
       "      <td>SIR-F</td>\n",
       "      <td>0.004595</td>\n",
       "      <td>0.019806</td>\n",
       "      <td>0.247921</td>\n",
       "      <td>0.000041</td>\n",
       "      <td>360</td>\n",
       "      <td>0.17</td>\n",
       "      <td>0.248</td>\n",
       "      <td>6162</td>\n",
       "      <td>54</td>\n",
       "      <td>12</td>\n",
       "      <td>0.121153</td>\n",
       "      <td>303</td>\n",
       "      <td>0 min 10 sec</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3rd</th>\n",
       "      <td>Past</td>\n",
       "      <td>10Jun2020</td>\n",
       "      <td>01Jul2020</td>\n",
       "      <td>14002973</td>\n",
       "      <td>SIR-F</td>\n",
       "      <td>0.017502</td>\n",
       "      <td>0.017795</td>\n",
       "      <td>0.115711</td>\n",
       "      <td>0.000150</td>\n",
       "      <td>360</td>\n",
       "      <td>0.86</td>\n",
       "      <td>0.116</td>\n",
       "      <td>1667</td>\n",
       "      <td>14</td>\n",
       "      <td>14</td>\n",
       "      <td>0.143076</td>\n",
       "      <td>157</td>\n",
       "      <td>0 min 5 sec</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4th</th>\n",
       "      <td>Past</td>\n",
       "      <td>02Jul2020</td>\n",
       "      <td>11Jul2020</td>\n",
       "      <td>14002973</td>\n",
       "      <td>SIR-F</td>\n",
       "      <td>0.038462</td>\n",
       "      <td>0.016679</td>\n",
       "      <td>0.050413</td>\n",
       "      <td>0.000555</td>\n",
       "      <td>360</td>\n",
       "      <td>2.12</td>\n",
       "      <td>0.050</td>\n",
       "      <td>450</td>\n",
       "      <td>6</td>\n",
       "      <td>14</td>\n",
       "      <td>0.0593688</td>\n",
       "      <td>163</td>\n",
       "      <td>0 min 5 sec</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>5th</th>\n",
       "      <td>Past</td>\n",
       "      <td>12Jul2020</td>\n",
       "      <td>22Jul2020</td>\n",
       "      <td>14002973</td>\n",
       "      <td>SIR-F</td>\n",
       "      <td>0.032772</td>\n",
       "      <td>0.018251</td>\n",
       "      <td>0.001114</td>\n",
       "      <td>0.000071</td>\n",
       "      <td>360</td>\n",
       "      <td>1.79</td>\n",
       "      <td>0.001</td>\n",
       "      <td>3514</td>\n",
       "      <td>7</td>\n",
       "      <td>13</td>\n",
       "      <td>0.0390454</td>\n",
       "      <td>202</td>\n",
       "      <td>0 min 5 sec</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>6th</th>\n",
       "      <td>Past</td>\n",
       "      <td>23Jul2020</td>\n",
       "      <td>31Jul2020</td>\n",
       "      <td>14002973</td>\n",
       "      <td>SIR-F</td>\n",
       "      <td>0.032739</td>\n",
       "      <td>0.016134</td>\n",
       "      <td>0.000390</td>\n",
       "      <td>0.000180</td>\n",
       "      <td>360</td>\n",
       "      <td>2.01</td>\n",
       "      <td>0.000</td>\n",
       "      <td>1386</td>\n",
       "      <td>7</td>\n",
       "      <td>15</td>\n",
       "      <td>0.0339287</td>\n",
       "      <td>422</td>\n",
       "      <td>0 min 15 sec</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>7th</th>\n",
       "      <td>Future</td>\n",
       "      <td>01Aug2020</td>\n",
       "      <td>31Aug2020</td>\n",
       "      <td>14002973</td>\n",
       "      <td>SIR-F</td>\n",
       "      <td>0.032739</td>\n",
       "      <td>0.016134</td>\n",
       "      <td>0.000390</td>\n",
       "      <td>0.000180</td>\n",
       "      <td>360</td>\n",
       "      <td>2.01</td>\n",
       "      <td>0.000</td>\n",
       "      <td>1386</td>\n",
       "      <td>7</td>\n",
       "      <td>15</td>\n",
       "      <td>-</td>\n",
       "      <td>-</td>\n",
       "      <td>-</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>8th</th>\n",
       "      <td>Future</td>\n",
       "      <td>01Sep2020</td>\n",
       "      <td>01Jan2021</td>\n",
       "      <td>14002973</td>\n",
       "      <td>SIR-F</td>\n",
       "      <td>0.032739</td>\n",
       "      <td>0.032269</td>\n",
       "      <td>0.000390</td>\n",
       "      <td>0.000180</td>\n",
       "      <td>360</td>\n",
       "      <td>1.01</td>\n",
       "      <td>0.000</td>\n",
       "      <td>1386</td>\n",
       "      <td>7</td>\n",
       "      <td>7</td>\n",
       "      <td>-</td>\n",
       "      <td>-</td>\n",
       "      <td>-</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "                  Type      Start        End  Population    ODE       rho  \\\n",
       "Scenario Phase                                                              \n",
       "Main     0th      Past  17Apr2020  01May2020    14002973  SIR-F  0.010962   \n",
       "         1st      Past  02May2020  14May2020    14002973  SIR-F  0.003904   \n",
       "         2nd      Past  15May2020  09Jun2020    14002973  SIR-F  0.004595   \n",
       "         3rd      Past  10Jun2020  01Jul2020    14002973  SIR-F  0.017502   \n",
       "         4th      Past  02Jul2020  11Jul2020    14002973  SIR-F  0.038462   \n",
       "         5th      Past  12Jul2020  22Jul2020    14002973  SIR-F  0.032772   \n",
       "         6th      Past  23Jul2020  31Jul2020    14002973  SIR-F  0.032739   \n",
       "         7th    Future  01Aug2020  01Jan2021    14002973  SIR-F  0.032739   \n",
       "Medicine 0th      Past  17Apr2020  01May2020    14002973  SIR-F  0.010962   \n",
       "         1st      Past  02May2020  14May2020    14002973  SIR-F  0.003904   \n",
       "         2nd      Past  15May2020  09Jun2020    14002973  SIR-F  0.004595   \n",
       "         3rd      Past  10Jun2020  01Jul2020    14002973  SIR-F  0.017502   \n",
       "         4th      Past  02Jul2020  11Jul2020    14002973  SIR-F  0.038462   \n",
       "         5th      Past  12Jul2020  22Jul2020    14002973  SIR-F  0.032772   \n",
       "         6th      Past  23Jul2020  31Jul2020    14002973  SIR-F  0.032739   \n",
       "         7th    Future  01Aug2020  31Aug2020    14002973  SIR-F  0.032739   \n",
       "         8th    Future  01Sep2020  01Jan2021    14002973  SIR-F  0.032739   \n",
       "\n",
       "                   sigma     theta     kappa  tau    Rt  alpha1 [-]  \\\n",
       "Scenario Phase                                                        \n",
       "Main     0th    0.004857  0.047160  0.000079  360  2.12       0.047   \n",
       "         1st    0.012700  0.080455  0.000535  360  0.27       0.080   \n",
       "         2nd    0.019806  0.247921  0.000041  360  0.17       0.248   \n",
       "         3rd    0.017795  0.115711  0.000150  360  0.86       0.116   \n",
       "         4th    0.016679  0.050413  0.000555  360  2.12       0.050   \n",
       "         5th    0.018251  0.001114  0.000071  360  1.79       0.001   \n",
       "         6th    0.016134  0.000390  0.000180  360  2.01       0.000   \n",
       "         7th    0.016134  0.000390  0.000180  360  2.01       0.000   \n",
       "Medicine 0th    0.004857  0.047160  0.000079  360  2.12       0.047   \n",
       "         1st    0.012700  0.080455  0.000535  360  0.27       0.080   \n",
       "         2nd    0.019806  0.247921  0.000041  360  0.17       0.248   \n",
       "         3rd    0.017795  0.115711  0.000150  360  0.86       0.116   \n",
       "         4th    0.016679  0.050413  0.000555  360  2.12       0.050   \n",
       "         5th    0.018251  0.001114  0.000071  360  1.79       0.001   \n",
       "         6th    0.016134  0.000390  0.000180  360  2.01       0.000   \n",
       "         7th    0.016134  0.000390  0.000180  360  2.01       0.000   \n",
       "         8th    0.032269  0.000390  0.000180  360  1.01       0.000   \n",
       "\n",
       "                1/alpha2 [day]  1/beta [day]  1/gamma [day]      RMSLE Trials  \\\n",
       "Scenario Phase                                                                  \n",
       "Main     0th              3148            22             51   0.137505    151   \n",
       "         1st               466            64             19   0.164932    114   \n",
       "         2nd              6162            54             12   0.121153    303   \n",
       "         3rd              1667            14             14   0.143076    157   \n",
       "         4th               450             6             14  0.0593688    163   \n",
       "         5th              3514             7             13  0.0390454    202   \n",
       "         6th              1386             7             15  0.0339287    422   \n",
       "         7th              1386             7             15          -      -   \n",
       "Medicine 0th              3148            22             51   0.137505    151   \n",
       "         1st               466            64             19   0.164932    114   \n",
       "         2nd              6162            54             12   0.121153    303   \n",
       "         3rd              1667            14             14   0.143076    157   \n",
       "         4th               450             6             14  0.0593688    163   \n",
       "         5th              3514             7             13  0.0390454    202   \n",
       "         6th              1386             7             15  0.0339287    422   \n",
       "         7th              1386             7             15          -      -   \n",
       "         8th              1386             7              7          -      -   \n",
       "\n",
       "                     Runtime  \n",
       "Scenario Phase                \n",
       "Main     0th     0 min 5 sec  \n",
       "         1st     0 min 5 sec  \n",
       "         2nd    0 min 10 sec  \n",
       "         3rd     0 min 5 sec  \n",
       "         4th     0 min 5 sec  \n",
       "         5th     0 min 5 sec  \n",
       "         6th    0 min 15 sec  \n",
       "         7th               -  \n",
       "Medicine 0th     0 min 5 sec  \n",
       "         1st     0 min 5 sec  \n",
       "         2nd    0 min 10 sec  \n",
       "         3rd     0 min 5 sec  \n",
       "         4th     0 min 5 sec  \n",
       "         5th     0 min 5 sec  \n",
       "         6th    0 min 15 sec  \n",
       "         7th               -  \n",
       "         8th               -  "
      ]
     },
     "execution_count": 37,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "scenario.clear(name=\"Medicine\")\n",
    "scenario.add(name=\"Medicine\", days=30, sigma=sigma_current)\n",
    "scenario.add(name=\"Medicine\", end_date=\"01Jan2021\", sigma=sigma_new)\n",
    "scenario.summary()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 38,
   "metadata": {
    "collapsed": false
   },
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 648x432 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Date</th>\n",
       "      <th>Fatal</th>\n",
       "      <th>Infected</th>\n",
       "      <th>Recovered</th>\n",
       "      <th>Susceptible</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>255</th>\n",
       "      <td>28Dec2020</td>\n",
       "      <td>6524</td>\n",
       "      <td>35215</td>\n",
       "      <td>789044</td>\n",
       "      <td>13172189</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>256</th>\n",
       "      <td>29Dec2020</td>\n",
       "      <td>6551</td>\n",
       "      <td>34981</td>\n",
       "      <td>793574</td>\n",
       "      <td>13167866</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>257</th>\n",
       "      <td>30Dec2020</td>\n",
       "      <td>6578</td>\n",
       "      <td>34747</td>\n",
       "      <td>798074</td>\n",
       "      <td>13163573</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>258</th>\n",
       "      <td>31Dec2020</td>\n",
       "      <td>6605</td>\n",
       "      <td>34513</td>\n",
       "      <td>802544</td>\n",
       "      <td>13159311</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>259</th>\n",
       "      <td>01Jan2021</td>\n",
       "      <td>6622</td>\n",
       "      <td>34367</td>\n",
       "      <td>805323</td>\n",
       "      <td>13156661</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "          Date  Fatal  Infected  Recovered  Susceptible\n",
       "255  28Dec2020   6524     35215     789044     13172189\n",
       "256  29Dec2020   6551     34981     793574     13167866\n",
       "257  30Dec2020   6578     34747     798074     13163573\n",
       "258  31Dec2020   6605     34513     802544     13159311\n",
       "259  01Jan2021   6622     34367     805323     13156661"
      ]
     },
     "execution_count": 38,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "scenario.simulate(name=\"Medicine\").tail()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### Compare the scenarios"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 39,
   "metadata": {
    "collapsed": false
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>max(Infected)</th>\n",
       "      <th>argmax(Infected)</th>\n",
       "      <th>Infected on 01Jan2021</th>\n",
       "      <th>Fatal on 01Jan2021</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>Main</th>\n",
       "      <td>2156972</td>\n",
       "      <td>23Nov2020</td>\n",
       "      <td>1040758</td>\n",
       "      <td>107555</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Medicine</th>\n",
       "      <td>54112</td>\n",
       "      <td>01Sep2020</td>\n",
       "      <td>34367</td>\n",
       "      <td>6622</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "          max(Infected) argmax(Infected)  Infected on 01Jan2021  \\\n",
       "Main            2156972        23Nov2020                1040758   \n",
       "Medicine          54112        01Sep2020                  34367   \n",
       "\n",
       "          Fatal on 01Jan2021  \n",
       "Main                  107555  \n",
       "Medicine                6622  "
      ]
     },
     "execution_count": 39,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "scenario.describe()"
   ]
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3.8.2 64-bit ('covid19-sir': pipenv)",
   "name": "python_defaultSpec_1595608274501"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": 3
  }
 },
 "nbformat": 4,
 "nbformat_minor": 4
}
