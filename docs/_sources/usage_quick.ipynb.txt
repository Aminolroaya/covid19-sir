{
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3.8.2 64-bit ('covid19-sir': pipenv)",
   "name": "python_defaultSpec_1597313350107"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": 3
  },
  "name": ""
 },
 "nbformat": 3,
 "nbformat_minor": 0,
 "worksheets": [
  {
   "cells": [
    {
     "cell_type": "heading",
     "level": 1,
     "metadata": {},
     "source": [
      "Usage (quick version)"
     ]
    },
    {
     "cell_type": "heading",
     "level": 2,
     "metadata": {},
     "source": [
      "Preparation"
     ]
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "# Standard users\n",
      "# !pip install covsirphy\n",
      "# Developers (Note: this notebook is in example directory)\n",
      "import os\n",
      "os.chdir(\"../\")"
     ],
     "language": "python",
     "metadata": {},
     "outputs": [],
     "prompt_number": 1
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "import warnings"
     ],
     "language": "python",
     "metadata": {},
     "outputs": [],
     "prompt_number": 2
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "import covsirphy as cs\n",
      "cs.__version__"
     ],
     "language": "python",
     "metadata": {
      "tags": []
     },
     "outputs": [
      {
       "output_type": "pyout",
       "prompt_number": 3,
       "text": [
        "'2.7.3-alpha.new.202.203.206'"
       ]
      }
     ],
     "prompt_number": 3
    },
    {
     "cell_type": "markdown",
     "metadata": {},
     "source": [
      "## Dataset preparation\n",
      "Download the datasets to \"input\" direcotry and load them.\n",
      "\n",
      "If \"input\" directory has the datasets, `DataLoader` will load the local files. If the datasets were updated in remote servers, `DataLoader` will update the local files automatically.\n",
      "Download the datasets to \"input\" direcotry and load them.\n",
      "\n",
      "If \"input\" directory has the datasets, `DataLoader` will load the local files. If the datasets were updated in remote servers, `DataLoader` will update the local files automatically."
     ]
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "data_loader = cs.DataLoader(\"input\")\n",
      "# The number of cases (JHU style)\n",
      "jhu_data = data_loader.jhu(verbose=True)\n",
      "# Population in each country\n",
      "population_data = data_loader.population(verbose=True)\n",
      "# Government Response Tracker (OxCGRT)\n",
      "oxcgrt_data = data_loader.oxcgrt(verbose=True)"
     ],
     "language": "python",
     "metadata": {
      "tags": []
     },
     "outputs": [
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "Retrieving datasets from COVID-19 Data Hub: https://covid19datahub.io/"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n",
        "Detailed citaition list:"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "Australian Bureau of Statistics (2019), https://www.abs.gov.au/\n",
        "CIA - Central Intelligence Agency (2018), https://www.cia.gov/\n",
        "CIA - Central Intelligence Agency (2019), https://www.cia.gov/\n",
        "CIA - Central Intelligence Agency (2020), https://www.cia.gov/\n",
        "COVID-19 Peru Data Repository (2019), https://github.com/\n",
        "COVID-19 Peru Data Repository (2020), https://github.com/\n",
        "COVID-19 Turkey API (2020), https://github.com/\n",
        "COVID-19_plus_Russia GitHub repository (2020), https://github.com/\n",
        "COVID19-India API (2020), https://www.covid19india.org/\n",
        "Canada's National Statistical Agency (2020), https://www150.statcan.gc.ca/\n",
        "Centre of Excellence in Economics and Data Science, University of Milano (2020), https://github.com/\n",
        "Covid19data.com.au (2020), https://github.com/\n",
        "Czech Statistical Office (2018), https://www.czso.cz/\n",
        "Data Science for Social Impact research group, University of Pretoria (2020), https://github.com/\n",
        "Epistat, Belgian Infectious Diseases (2020), https://epistat.sciensano.be/\n",
        "Eurostat (2019), https://ec.europa.eu/\n",
        "GADM (2019), https://public.opendatasoft.com/\n",
        "Geloky (2019), https://geloky.com/\n",
        "Istituto Nazionale di Statistica, Italia (2018), https://www.istat.it/\n",
        "Japan COVID-19 Bulletin Board (2020), https://github.com/\n",
        "Johns Hopkins Center for Systems Science and Engineering (2020), https://github.com/\n",
        "Ministerio de Salud y Protecci\u00c3\u00b3n Social de Colombia (2020), https://www.datos.gov.co/\n",
        "Ministero della Salute, Italia (2020), https://github.com/\n",
        "Ministery of Health of Czech Republic (2020), https://onemocneni-aktualne.mzcr.cz/\n",
        "Ministery of Health, Slovenia (2020), https://www.gov.si/\n",
        "Ministry of Public Health and Population of Haiti (2020), https://proxy.hxlstandard.org/\n",
        "National Bureau of Statistics of China NBS (2018), http://data.stats.gov.cn/\n",
        "Open Government Data, Austria (2020), https://info.gesundheitsministerium.at/\n",
        "Open Government Data, Latvia (2020), https://data.gov.lv/\n",
        "Open Government Data, Liechtenstein (2020), https://github.com/\n",
        "Open Government Data, Switzerland (2020), https://github.com/\n",
        "Open Government Data, United Kingdom (2020), https://coronavirus.data.gov.uk/\n",
        "OpenCOVID19 France (2020), https://github.com/\n",
        "Our World in Data (2020), https://github.com/\n",
        "Hale Thomas, Sam Webster, Anna Petherick, Toby Phillips, and Beatriz Kira (2020). Oxford COVID-19 Government Response Tracker, Blavatnik School of Government.\n",
        "Public Health Agency, Sweden (2020), https://oppnadata.se/\n",
        "Public Health Infobase, Government of Canada (2020), https://health-infobase.canada.ca/\n",
        "Robert Koch-Institut (2020), https://npgeo-corona-npgeo-de.hub.arcgis.com/\n",
        "Statbel, Belgium in Figures (2019), https://statbel.fgov.be/\n",
        "Swiss Federal Statistical Office (2018), https://www.bfs.admin.ch/\n",
        "The COVID Tracking Project (2020), https://covidtracking.com/\n",
        "The New York Times (2020), https://github.com/\n",
        "Wikipedia (2006), https://it.wikipedia.org/\n",
        "Wikipedia (2010), https://en.wikipedia.org/\n",
        "Wikipedia (2010), https://it.wikipedia.org/\n",
        "Wikipedia (2013), https://en.wikipedia.org/\n",
        "Wikipedia (2015), https://en.wikipedia.org/\n",
        "Wikipedia (2016), https://en.wikipedia.org/\n",
        "Wikipedia (2016), https://it.wikipedia.org/\n",
        "Wikipedia (2017), https://www.wikipedia.org/\n",
        "Wikipedia (2018), https://en.wikipedia.org/\n",
        "Wikipedia (2018), https://www.wikipedia.org/\n",
        "Wikipedia (2019), https://en.wikipedia.org/\n",
        "Wikipedia (2019), https://www.wikipedia.org/\n",
        "Wikipedia (2020), https://en.wikipedia.org/\n",
        "Wikipedia (2020), https://it.wikipedia.org/\n",
        "Wikipedia (2020), https://www.wikipedia.org/\n",
        "World Bank Open Data (2018), https://data.worldbank.org/\n",
        "World Health Organization (2020), https://covid19.who.int/\n",
        "Worldometer (2018), https://www.worldometers.info/\n",
        "Guidotti, E., Ardia, D., (2020), \"COVID-19 Data Hub\", Working paper, doi: 10.13140/RG.2.2.11649.81763."
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n",
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      }
     ],
     "prompt_number": 4
    },
    {
     "cell_type": "heading",
     "level": 3,
     "metadata": {},
     "source": [
      "The number of cases (JHU style)"
     ]
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "# Description/citation\n",
      "print(jhu_data.citation)"
     ],
     "language": "python",
     "metadata": {
      "tags": []
     },
     "outputs": [
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "(Secondary source) Guidotti, E., Ardia, D., (2020), \"COVID-19 Data Hub\", Working paper, doi: 10.13140/RG.2.2.11649.81763.\n",
        "We can get Citation list of primary sources with DataLoader(...).covid19dh_citation"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      }
     ],
     "prompt_number": 5
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "print(data_loader.covid19dh_citation)"
     ],
     "language": "python",
     "metadata": {
      "tags": []
     },
     "outputs": [
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "Australian Bureau of Statistics (2019), https://www.abs.gov.au/\n",
        "CIA - Central Intelligence Agency (2018), https://www.cia.gov/\n",
        "CIA - Central Intelligence Agency (2019), https://www.cia.gov/\n",
        "CIA - Central Intelligence Agency (2020), https://www.cia.gov/\n",
        "COVID-19 Peru Data Repository (2019), https://github.com/\n",
        "COVID-19 Peru Data Repository (2020), https://github.com/\n",
        "COVID-19 Turkey API (2020), https://github.com/\n",
        "COVID-19_plus_Russia GitHub repository (2020), https://github.com/\n",
        "COVID19-India API (2020), https://www.covid19india.org/\n",
        "Canada's National Statistical Agency (2020), https://www150.statcan.gc.ca/\n",
        "Centre of Excellence in Economics and Data Science, University of Milano (2020), https://github.com/\n",
        "Covid19data.com.au (2020), https://github.com/\n",
        "Czech Statistical Office (2018), https://www.czso.cz/\n",
        "Data Science for Social Impact research group, University of Pretoria (2020), https://github.com/\n",
        "Epistat, Belgian Infectious Diseases (2020), https://epistat.sciensano.be/\n",
        "Eurostat (2019), https://ec.europa.eu/\n",
        "GADM (2019), https://public.opendatasoft.com/\n",
        "Geloky (2019), https://geloky.com/\n",
        "Istituto Nazionale di Statistica, Italia (2018), https://www.istat.it/\n",
        "Japan COVID-19 Bulletin Board (2020), https://github.com/\n",
        "Johns Hopkins Center for Systems Science and Engineering (2020), https://github.com/\n",
        "Ministerio de Salud y Protecci\u00c3\u00b3n Social de Colombia (2020), https://www.datos.gov.co/\n",
        "Ministero della Salute, Italia (2020), https://github.com/\n",
        "Ministery of Health of Czech Republic (2020), https://onemocneni-aktualne.mzcr.cz/\n",
        "Ministery of Health, Slovenia (2020), https://www.gov.si/\n",
        "Ministry of Public Health and Population of Haiti (2020), https://proxy.hxlstandard.org/\n",
        "National Bureau of Statistics of China NBS (2018), http://data.stats.gov.cn/\n",
        "Open Government Data, Austria (2020), https://info.gesundheitsministerium.at/\n",
        "Open Government Data, Latvia (2020), https://data.gov.lv/\n",
        "Open Government Data, Liechtenstein (2020), https://github.com/\n",
        "Open Government Data, Switzerland (2020), https://github.com/\n",
        "Open Government Data, United Kingdom (2020), https://coronavirus.data.gov.uk/\n",
        "OpenCOVID19 France (2020), https://github.com/\n",
        "Our World in Data (2020), https://github.com/\n",
        "Hale Thomas, Sam Webster, Anna Petherick, Toby Phillips, and Beatriz Kira (2020). Oxford COVID-19 Government Response Tracker, Blavatnik School of Government.\n",
        "Public Health Agency, Sweden (2020), https://oppnadata.se/\n",
        "Public Health Infobase, Government of Canada (2020), https://health-infobase.canada.ca/\n",
        "Robert Koch-Institut (2020), https://npgeo-corona-npgeo-de.hub.arcgis.com/\n",
        "Statbel, Belgium in Figures (2019), https://statbel.fgov.be/\n",
        "Swiss Federal Statistical Office (2018), https://www.bfs.admin.ch/\n",
        "The COVID Tracking Project (2020), https://covidtracking.com/\n",
        "The New York Times (2020), https://github.com/\n",
        "Wikipedia (2006), https://it.wikipedia.org/\n",
        "Wikipedia (2010), https://en.wikipedia.org/\n",
        "Wikipedia (2010), https://it.wikipedia.org/\n",
        "Wikipedia (2013), https://en.wikipedia.org/\n",
        "Wikipedia (2015), https://en.wikipedia.org/\n",
        "Wikipedia (2016), https://en.wikipedia.org/\n",
        "Wikipedia (2016), https://it.wikipedia.org/\n",
        "Wikipedia (2017), https://www.wikipedia.org/\n",
        "Wikipedia (2018), https://en.wikipedia.org/\n",
        "Wikipedia (2018), https://www.wikipedia.org/\n",
        "Wikipedia (2019), https://en.wikipedia.org/\n",
        "Wikipedia (2019), https://www.wikipedia.org/\n",
        "Wikipedia (2020), https://en.wikipedia.org/\n",
        "Wikipedia (2020), https://it.wikipedia.org/\n",
        "Wikipedia (2020), https://www.wikipedia.org/\n",
        "World Bank Open Data (2018), https://data.worldbank.org/\n",
        "World Health Organization (2020), https://covid19.who.int/\n",
        "Worldometer (2018), https://www.worldometers.info/\n",
        "Guidotti, E., Ardia, D., (2020), \"COVID-19 Data Hub\", Working paper, doi: 10.13140/RG.2.2.11649.81763."
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      }
     ],
     "prompt_number": 6
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "# Raw data\n",
      "jhu_data.raw.tail()"
     ],
     "language": "python",
     "metadata": {},
     "outputs": [
      {
       "html": [
        "<div>\n",
        "<style scoped>\n",
        "    .dataframe tbody tr th:only-of-type {\n",
        "        vertical-align: middle;\n",
        "    }\n",
        "\n",
        "    .dataframe tbody tr th {\n",
        "        vertical-align: top;\n",
        "    }\n",
        "\n",
        "    .dataframe thead th {\n",
        "        text-align: right;\n",
        "    }\n",
        "</style>\n",
        "<table border=\"1\" class=\"dataframe\">\n",
        "  <thead>\n",
        "    <tr style=\"text-align: right;\">\n",
        "      <th></th>\n",
        "      <th>ObservationDate</th>\n",
        "      <th>Confirmed</th>\n",
        "      <th>Recovered</th>\n",
        "      <th>Deaths</th>\n",
        "      <th>Population</th>\n",
        "      <th>ISO3</th>\n",
        "      <th>Province/State</th>\n",
        "      <th>Country/Region</th>\n",
        "      <th>school_closing</th>\n",
        "      <th>workplace_closing</th>\n",
        "      <th>cancel_events</th>\n",
        "      <th>gatherings_restrictions</th>\n",
        "      <th>transport_closing</th>\n",
        "      <th>stay_home_restrictions</th>\n",
        "      <th>internal_movement_restrictions</th>\n",
        "      <th>international_movement_restrictions</th>\n",
        "      <th>information_campaigns</th>\n",
        "      <th>testing_policy</th>\n",
        "      <th>contact_tracing</th>\n",
        "      <th>stringency_index</th>\n",
        "    </tr>\n",
        "  </thead>\n",
        "  <tbody>\n",
        "    <tr>\n",
        "      <th>187018</th>\n",
        "      <td>2020-08-20</td>\n",
        "      <td>14</td>\n",
        "      <td>5</td>\n",
        "      <td>0</td>\n",
        "      <td>107808.0</td>\n",
        "      <td>COL</td>\n",
        "      <td>Vichada</td>\n",
        "      <td>Colombia</td>\n",
        "      <td>3</td>\n",
        "      <td>3</td>\n",
        "      <td>2</td>\n",
        "      <td>4</td>\n",
        "      <td>1</td>\n",
        "      <td>2</td>\n",
        "      <td>2</td>\n",
        "      <td>4</td>\n",
        "      <td>2</td>\n",
        "      <td>2</td>\n",
        "      <td>2</td>\n",
        "      <td>87.04</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>187019</th>\n",
        "      <td>2020-08-21</td>\n",
        "      <td>14</td>\n",
        "      <td>5</td>\n",
        "      <td>0</td>\n",
        "      <td>107808.0</td>\n",
        "      <td>COL</td>\n",
        "      <td>Vichada</td>\n",
        "      <td>Colombia</td>\n",
        "      <td>3</td>\n",
        "      <td>3</td>\n",
        "      <td>2</td>\n",
        "      <td>4</td>\n",
        "      <td>1</td>\n",
        "      <td>2</td>\n",
        "      <td>2</td>\n",
        "      <td>4</td>\n",
        "      <td>2</td>\n",
        "      <td>2</td>\n",
        "      <td>2</td>\n",
        "      <td>87.04</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>187020</th>\n",
        "      <td>2020-08-22</td>\n",
        "      <td>14</td>\n",
        "      <td>5</td>\n",
        "      <td>0</td>\n",
        "      <td>107808.0</td>\n",
        "      <td>COL</td>\n",
        "      <td>Vichada</td>\n",
        "      <td>Colombia</td>\n",
        "      <td>3</td>\n",
        "      <td>3</td>\n",
        "      <td>2</td>\n",
        "      <td>4</td>\n",
        "      <td>1</td>\n",
        "      <td>2</td>\n",
        "      <td>2</td>\n",
        "      <td>4</td>\n",
        "      <td>2</td>\n",
        "      <td>2</td>\n",
        "      <td>2</td>\n",
        "      <td>87.04</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>187021</th>\n",
        "      <td>2020-08-23</td>\n",
        "      <td>14</td>\n",
        "      <td>11</td>\n",
        "      <td>0</td>\n",
        "      <td>107808.0</td>\n",
        "      <td>COL</td>\n",
        "      <td>Vichada</td>\n",
        "      <td>Colombia</td>\n",
        "      <td>3</td>\n",
        "      <td>3</td>\n",
        "      <td>2</td>\n",
        "      <td>4</td>\n",
        "      <td>1</td>\n",
        "      <td>2</td>\n",
        "      <td>2</td>\n",
        "      <td>4</td>\n",
        "      <td>2</td>\n",
        "      <td>2</td>\n",
        "      <td>2</td>\n",
        "      <td>87.04</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>187022</th>\n",
        "      <td>2020-08-24</td>\n",
        "      <td>14</td>\n",
        "      <td>11</td>\n",
        "      <td>0</td>\n",
        "      <td>107808.0</td>\n",
        "      <td>COL</td>\n",
        "      <td>Vichada</td>\n",
        "      <td>Colombia</td>\n",
        "      <td>3</td>\n",
        "      <td>3</td>\n",
        "      <td>2</td>\n",
        "      <td>4</td>\n",
        "      <td>1</td>\n",
        "      <td>2</td>\n",
        "      <td>2</td>\n",
        "      <td>4</td>\n",
        "      <td>2</td>\n",
        "      <td>2</td>\n",
        "      <td>2</td>\n",
        "      <td>87.04</td>\n",
        "    </tr>\n",
        "  </tbody>\n",
        "</table>\n",
        "</div>"
       ],
       "output_type": "pyout",
       "prompt_number": 7,
       "text": [
        "       ObservationDate  Confirmed  Recovered  Deaths  Population ISO3  \\\n",
        "187018      2020-08-20         14          5       0    107808.0  COL   \n",
        "187019      2020-08-21         14          5       0    107808.0  COL   \n",
        "187020      2020-08-22         14          5       0    107808.0  COL   \n",
        "187021      2020-08-23         14         11       0    107808.0  COL   \n",
        "187022      2020-08-24         14         11       0    107808.0  COL   \n",
        "\n",
        "       Province/State Country/Region  school_closing  workplace_closing  \\\n",
        "187018        Vichada       Colombia               3                  3   \n",
        "187019        Vichada       Colombia               3                  3   \n",
        "187020        Vichada       Colombia               3                  3   \n",
        "187021        Vichada       Colombia               3                  3   \n",
        "187022        Vichada       Colombia               3                  3   \n",
        "\n",
        "        cancel_events  gatherings_restrictions  transport_closing  \\\n",
        "187018              2                        4                  1   \n",
        "187019              2                        4                  1   \n",
        "187020              2                        4                  1   \n",
        "187021              2                        4                  1   \n",
        "187022              2                        4                  1   \n",
        "\n",
        "        stay_home_restrictions  internal_movement_restrictions  \\\n",
        "187018                       2                               2   \n",
        "187019                       2                               2   \n",
        "187020                       2                               2   \n",
        "187021                       2                               2   \n",
        "187022                       2                               2   \n",
        "\n",
        "        international_movement_restrictions  information_campaigns  \\\n",
        "187018                                    4                      2   \n",
        "187019                                    4                      2   \n",
        "187020                                    4                      2   \n",
        "187021                                    4                      2   \n",
        "187022                                    4                      2   \n",
        "\n",
        "        testing_policy  contact_tracing  stringency_index  \n",
        "187018               2                2             87.04  \n",
        "187019               2                2             87.04  \n",
        "187020               2                2             87.04  \n",
        "187021               2                2             87.04  \n",
        "187022               2                2             87.04  "
       ]
      }
     ],
     "prompt_number": 7
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "# Cleaned data\n",
      "jhu_data.cleaned().tail()"
     ],
     "language": "python",
     "metadata": {},
     "outputs": [
      {
       "html": [
        "<div>\n",
        "<style scoped>\n",
        "    .dataframe tbody tr th:only-of-type {\n",
        "        vertical-align: middle;\n",
        "    }\n",
        "\n",
        "    .dataframe tbody tr th {\n",
        "        vertical-align: top;\n",
        "    }\n",
        "\n",
        "    .dataframe thead th {\n",
        "        text-align: right;\n",
        "    }\n",
        "</style>\n",
        "<table border=\"1\" class=\"dataframe\">\n",
        "  <thead>\n",
        "    <tr style=\"text-align: right;\">\n",
        "      <th></th>\n",
        "      <th>Date</th>\n",
        "      <th>Country</th>\n",
        "      <th>Province</th>\n",
        "      <th>Confirmed</th>\n",
        "      <th>Infected</th>\n",
        "      <th>Fatal</th>\n",
        "      <th>Recovered</th>\n",
        "    </tr>\n",
        "  </thead>\n",
        "  <tbody>\n",
        "    <tr>\n",
        "      <th>187018</th>\n",
        "      <td>2020-08-20</td>\n",
        "      <td>Colombia</td>\n",
        "      <td>Vichada</td>\n",
        "      <td>14</td>\n",
        "      <td>9</td>\n",
        "      <td>0</td>\n",
        "      <td>5</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>187019</th>\n",
        "      <td>2020-08-21</td>\n",
        "      <td>Colombia</td>\n",
        "      <td>Vichada</td>\n",
        "      <td>14</td>\n",
        "      <td>9</td>\n",
        "      <td>0</td>\n",
        "      <td>5</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>187020</th>\n",
        "      <td>2020-08-22</td>\n",
        "      <td>Colombia</td>\n",
        "      <td>Vichada</td>\n",
        "      <td>14</td>\n",
        "      <td>9</td>\n",
        "      <td>0</td>\n",
        "      <td>5</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>187021</th>\n",
        "      <td>2020-08-23</td>\n",
        "      <td>Colombia</td>\n",
        "      <td>Vichada</td>\n",
        "      <td>14</td>\n",
        "      <td>3</td>\n",
        "      <td>0</td>\n",
        "      <td>11</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>187022</th>\n",
        "      <td>2020-08-24</td>\n",
        "      <td>Colombia</td>\n",
        "      <td>Vichada</td>\n",
        "      <td>14</td>\n",
        "      <td>3</td>\n",
        "      <td>0</td>\n",
        "      <td>11</td>\n",
        "    </tr>\n",
        "  </tbody>\n",
        "</table>\n",
        "</div>"
       ],
       "output_type": "pyout",
       "prompt_number": 8,
       "text": [
        "             Date   Country Province  Confirmed  Infected  Fatal  Recovered\n",
        "187018 2020-08-20  Colombia  Vichada         14         9      0          5\n",
        "187019 2020-08-21  Colombia  Vichada         14         9      0          5\n",
        "187020 2020-08-22  Colombia  Vichada         14         9      0          5\n",
        "187021 2020-08-23  Colombia  Vichada         14         3      0         11\n",
        "187022 2020-08-24  Colombia  Vichada         14         3      0         11"
       ]
      }
     ],
     "prompt_number": 8
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "# Subset for a country\n",
      "jhu_data.subset(\"Japan\", province=\"Tokyo\").tail()"
     ],
     "language": "python",
     "metadata": {},
     "outputs": [
      {
       "html": [
        "<div>\n",
        "<style scoped>\n",
        "    .dataframe tbody tr th:only-of-type {\n",
        "        vertical-align: middle;\n",
        "    }\n",
        "\n",
        "    .dataframe tbody tr th {\n",
        "        vertical-align: top;\n",
        "    }\n",
        "\n",
        "    .dataframe thead th {\n",
        "        text-align: right;\n",
        "    }\n",
        "</style>\n",
        "<table border=\"1\" class=\"dataframe\">\n",
        "  <thead>\n",
        "    <tr style=\"text-align: right;\">\n",
        "      <th></th>\n",
        "      <th>Date</th>\n",
        "      <th>Confirmed</th>\n",
        "      <th>Infected</th>\n",
        "      <th>Fatal</th>\n",
        "      <th>Recovered</th>\n",
        "    </tr>\n",
        "  </thead>\n",
        "  <tbody>\n",
        "    <tr>\n",
        "      <th>154</th>\n",
        "      <td>2020-08-20</td>\n",
        "      <td>18607</td>\n",
        "      <td>3447</td>\n",
        "      <td>348</td>\n",
        "      <td>14812</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>155</th>\n",
        "      <td>2020-08-21</td>\n",
        "      <td>18865</td>\n",
        "      <td>3406</td>\n",
        "      <td>350</td>\n",
        "      <td>15109</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>156</th>\n",
        "      <td>2020-08-22</td>\n",
        "      <td>19121</td>\n",
        "      <td>3362</td>\n",
        "      <td>350</td>\n",
        "      <td>15409</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>157</th>\n",
        "      <td>2020-08-23</td>\n",
        "      <td>19333</td>\n",
        "      <td>3421</td>\n",
        "      <td>350</td>\n",
        "      <td>15562</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>158</th>\n",
        "      <td>2020-08-24</td>\n",
        "      <td>19333</td>\n",
        "      <td>3421</td>\n",
        "      <td>350</td>\n",
        "      <td>15562</td>\n",
        "    </tr>\n",
        "  </tbody>\n",
        "</table>\n",
        "</div>"
       ],
       "output_type": "pyout",
       "prompt_number": 9,
       "text": [
        "          Date  Confirmed  Infected  Fatal  Recovered\n",
        "154 2020-08-20      18607      3447    348      14812\n",
        "155 2020-08-21      18865      3406    350      15109\n",
        "156 2020-08-22      19121      3362    350      15409\n",
        "157 2020-08-23      19333      3421    350      15562\n",
        "158 2020-08-24      19333      3421    350      15562"
       ]
      }
     ],
     "prompt_number": 9
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "# Total\n",
      "total_df = jhu_data.total()\n",
      "total_df.tail()"
     ],
     "language": "python",
     "metadata": {},
     "outputs": [
      {
       "html": [
        "<div>\n",
        "<style scoped>\n",
        "    .dataframe tbody tr th:only-of-type {\n",
        "        vertical-align: middle;\n",
        "    }\n",
        "\n",
        "    .dataframe tbody tr th {\n",
        "        vertical-align: top;\n",
        "    }\n",
        "\n",
        "    .dataframe thead th {\n",
        "        text-align: right;\n",
        "    }\n",
        "</style>\n",
        "<table border=\"1\" class=\"dataframe\">\n",
        "  <thead>\n",
        "    <tr style=\"text-align: right;\">\n",
        "      <th></th>\n",
        "      <th>Confirmed</th>\n",
        "      <th>Infected</th>\n",
        "      <th>Fatal</th>\n",
        "      <th>Recovered</th>\n",
        "      <th>Fatal per Confirmed</th>\n",
        "      <th>Recovered per Confirmed</th>\n",
        "      <th>Fatal per (Fatal or Recovered)</th>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>Date</th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "    </tr>\n",
        "  </thead>\n",
        "  <tbody>\n",
        "    <tr>\n",
        "      <th>2020-08-20</th>\n",
        "      <td>22663669</td>\n",
        "      <td>7397501</td>\n",
        "      <td>795634</td>\n",
        "      <td>14470534</td>\n",
        "      <td>0.017553</td>\n",
        "      <td>0.319245</td>\n",
        "      <td>0.052117</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>2020-08-21</th>\n",
        "      <td>22914333</td>\n",
        "      <td>7471482</td>\n",
        "      <td>800919</td>\n",
        "      <td>14641932</td>\n",
        "      <td>0.017476</td>\n",
        "      <td>0.319493</td>\n",
        "      <td>0.051863</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>2020-08-22</th>\n",
        "      <td>23160310</td>\n",
        "      <td>7503150</td>\n",
        "      <td>806005</td>\n",
        "      <td>14851155</td>\n",
        "      <td>0.017401</td>\n",
        "      <td>0.320616</td>\n",
        "      <td>0.051478</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>2020-08-23</th>\n",
        "      <td>23232230</td>\n",
        "      <td>7502132</td>\n",
        "      <td>806929</td>\n",
        "      <td>14923169</td>\n",
        "      <td>0.017367</td>\n",
        "      <td>0.321174</td>\n",
        "      <td>0.051298</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>2020-08-24</th>\n",
        "      <td>23232233</td>\n",
        "      <td>7550666</td>\n",
        "      <td>806929</td>\n",
        "      <td>14874638</td>\n",
        "      <td>0.017367</td>\n",
        "      <td>0.320129</td>\n",
        "      <td>0.051457</td>\n",
        "    </tr>\n",
        "  </tbody>\n",
        "</table>\n",
        "</div>"
       ],
       "output_type": "pyout",
       "prompt_number": 10,
       "text": [
        "            Confirmed  Infected   Fatal  Recovered  Fatal per Confirmed  \\\n",
        "Date                                                                      \n",
        "2020-08-20   22663669   7397501  795634   14470534             0.017553   \n",
        "2020-08-21   22914333   7471482  800919   14641932             0.017476   \n",
        "2020-08-22   23160310   7503150  806005   14851155             0.017401   \n",
        "2020-08-23   23232230   7502132  806929   14923169             0.017367   \n",
        "2020-08-24   23232233   7550666  806929   14874638             0.017367   \n",
        "\n",
        "            Recovered per Confirmed  Fatal per (Fatal or Recovered)  \n",
        "Date                                                                 \n",
        "2020-08-20                 0.319245                        0.052117  \n",
        "2020-08-21                 0.319493                        0.051863  \n",
        "2020-08-22                 0.320616                        0.051478  \n",
        "2020-08-23                 0.321174                        0.051298  \n",
        "2020-08-24                 0.320129                        0.051457  "
       ]
      }
     ],
     "prompt_number": 10
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "# Plot the total values\n",
      "cs.line_plot(total_df[[\"Infected\", \"Fatal\", \"Recovered\"]], \"Total number of cases over time\")"
     ],
     "language": "python",
     "metadata": {},
     "outputs": [
      {
       "output_type": "display_data",
       "png": "\n",
       "text": [
        "<Figure size 648x432 with 1 Axes>"
       ]
      }
     ],
     "prompt_number": 11
    },
    {
     "cell_type": "markdown",
     "metadata": {},
     "source": [
      "### (Optional) Replace the dataset in Japan\n"
     ]
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "jhu_data.subset(\"Japan\").tail()"
     ],
     "language": "python",
     "metadata": {},
     "outputs": [
      {
       "html": [
        "<div>\n",
        "<style scoped>\n",
        "    .dataframe tbody tr th:only-of-type {\n",
        "        vertical-align: middle;\n",
        "    }\n",
        "\n",
        "    .dataframe tbody tr th {\n",
        "        vertical-align: top;\n",
        "    }\n",
        "\n",
        "    .dataframe thead th {\n",
        "        text-align: right;\n",
        "    }\n",
        "</style>\n",
        "<table border=\"1\" class=\"dataframe\">\n",
        "  <thead>\n",
        "    <tr style=\"text-align: right;\">\n",
        "      <th></th>\n",
        "      <th>Date</th>\n",
        "      <th>Confirmed</th>\n",
        "      <th>Infected</th>\n",
        "      <th>Fatal</th>\n",
        "      <th>Recovered</th>\n",
        "    </tr>\n",
        "  </thead>\n",
        "  <tbody>\n",
        "    <tr>\n",
        "      <th>193</th>\n",
        "      <td>2020-08-20</td>\n",
        "      <td>59951</td>\n",
        "      <td>13541</td>\n",
        "      <td>1159</td>\n",
        "      <td>45251</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>194</th>\n",
        "      <td>2020-08-21</td>\n",
        "      <td>60984</td>\n",
        "      <td>13360</td>\n",
        "      <td>1174</td>\n",
        "      <td>46450</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>195</th>\n",
        "      <td>2020-08-22</td>\n",
        "      <td>61966</td>\n",
        "      <td>13177</td>\n",
        "      <td>1180</td>\n",
        "      <td>47609</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>196</th>\n",
        "      <td>2020-08-23</td>\n",
        "      <td>62710</td>\n",
        "      <td>12990</td>\n",
        "      <td>1189</td>\n",
        "      <td>48531</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>197</th>\n",
        "      <td>2020-08-24</td>\n",
        "      <td>62713</td>\n",
        "      <td>61524</td>\n",
        "      <td>1189</td>\n",
        "      <td>47778</td>\n",
        "    </tr>\n",
        "  </tbody>\n",
        "</table>\n",
        "</div>"
       ],
       "output_type": "pyout",
       "prompt_number": 12,
       "text": [
        "          Date  Confirmed  Infected  Fatal  Recovered\n",
        "193 2020-08-20      59951     13541   1159      45251\n",
        "194 2020-08-21      60984     13360   1174      46450\n",
        "195 2020-08-22      61966     13177   1180      47609\n",
        "196 2020-08-23      62710     12990   1189      48531\n",
        "197 2020-08-24      62713     61524   1189      47778"
       ]
      }
     ],
     "prompt_number": 12
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "japan_data = data_loader.japan()\n",
      "print(japan_data.citation)"
     ],
     "language": "python",
     "metadata": {
      "tags": []
     },
     "outputs": [
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "Lisphilar (2020), COVID-19 dataset in Japan, GitHub repository, https://github.com/lisphilar/covid19-sir/data/japan"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      }
     ],
     "prompt_number": 13
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "jhu_data.replace(japan_data)\n",
      "jhu_data.subset(\"Japan\").tail()"
     ],
     "language": "python",
     "metadata": {},
     "outputs": [
      {
       "html": [
        "<div>\n",
        "<style scoped>\n",
        "    .dataframe tbody tr th:only-of-type {\n",
        "        vertical-align: middle;\n",
        "    }\n",
        "\n",
        "    .dataframe tbody tr th {\n",
        "        vertical-align: top;\n",
        "    }\n",
        "\n",
        "    .dataframe thead th {\n",
        "        text-align: right;\n",
        "    }\n",
        "</style>\n",
        "<table border=\"1\" class=\"dataframe\">\n",
        "  <thead>\n",
        "    <tr style=\"text-align: right;\">\n",
        "      <th></th>\n",
        "      <th>Date</th>\n",
        "      <th>Confirmed</th>\n",
        "      <th>Infected</th>\n",
        "      <th>Fatal</th>\n",
        "      <th>Recovered</th>\n",
        "    </tr>\n",
        "  </thead>\n",
        "  <tbody>\n",
        "    <tr>\n",
        "      <th>190</th>\n",
        "      <td>2020-08-19</td>\n",
        "      <td>57550</td>\n",
        "      <td>12587</td>\n",
        "      <td>1128</td>\n",
        "      <td>43835</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>191</th>\n",
        "      <td>2020-08-20</td>\n",
        "      <td>58501</td>\n",
        "      <td>12091</td>\n",
        "      <td>1144</td>\n",
        "      <td>45266</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>192</th>\n",
        "      <td>2020-08-21</td>\n",
        "      <td>59721</td>\n",
        "      <td>12099</td>\n",
        "      <td>1155</td>\n",
        "      <td>46467</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>193</th>\n",
        "      <td>2020-08-22</td>\n",
        "      <td>60733</td>\n",
        "      <td>11942</td>\n",
        "      <td>1169</td>\n",
        "      <td>47622</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>194</th>\n",
        "      <td>2020-08-23</td>\n",
        "      <td>61747</td>\n",
        "      <td>12021</td>\n",
        "      <td>1176</td>\n",
        "      <td>48550</td>\n",
        "    </tr>\n",
        "  </tbody>\n",
        "</table>\n",
        "</div>"
       ],
       "output_type": "pyout",
       "prompt_number": 14,
       "text": [
        "          Date  Confirmed  Infected  Fatal  Recovered\n",
        "190 2020-08-19      57550     12587   1128      43835\n",
        "191 2020-08-20      58501     12091   1144      45266\n",
        "192 2020-08-21      59721     12099   1155      46467\n",
        "193 2020-08-22      60733     11942   1169      47622\n",
        "194 2020-08-23      61747     12021   1176      48550"
       ]
      }
     ],
     "prompt_number": 14
    },
    {
     "cell_type": "heading",
     "level": 3,
     "metadata": {},
     "source": [
      "Population in each country"
     ]
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "# Description/citation\n",
      "print(population_data.citation)"
     ],
     "language": "python",
     "metadata": {
      "tags": []
     },
     "outputs": [
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "(Secondary source) Guidotti, E., Ardia, D., (2020), \"COVID-19 Data Hub\", Working paper, doi: 10.13140/RG.2.2.11649.81763.\n",
        "We can get Citation list of primary sources with DataLoader(...).covid19dh_citation"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      }
     ],
     "prompt_number": 15
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "# Raw data (the same as jhu_data)\n",
      "population_data.raw.tail()"
     ],
     "language": "python",
     "metadata": {},
     "outputs": [
      {
       "html": [
        "<div>\n",
        "<style scoped>\n",
        "    .dataframe tbody tr th:only-of-type {\n",
        "        vertical-align: middle;\n",
        "    }\n",
        "\n",
        "    .dataframe tbody tr th {\n",
        "        vertical-align: top;\n",
        "    }\n",
        "\n",
        "    .dataframe thead th {\n",
        "        text-align: right;\n",
        "    }\n",
        "</style>\n",
        "<table border=\"1\" class=\"dataframe\">\n",
        "  <thead>\n",
        "    <tr style=\"text-align: right;\">\n",
        "      <th></th>\n",
        "      <th>ObservationDate</th>\n",
        "      <th>Confirmed</th>\n",
        "      <th>Recovered</th>\n",
        "      <th>Deaths</th>\n",
        "      <th>Population</th>\n",
        "      <th>ISO3</th>\n",
        "      <th>Province/State</th>\n",
        "      <th>Country/Region</th>\n",
        "      <th>school_closing</th>\n",
        "      <th>workplace_closing</th>\n",
        "      <th>cancel_events</th>\n",
        "      <th>gatherings_restrictions</th>\n",
        "      <th>transport_closing</th>\n",
        "      <th>stay_home_restrictions</th>\n",
        "      <th>internal_movement_restrictions</th>\n",
        "      <th>international_movement_restrictions</th>\n",
        "      <th>information_campaigns</th>\n",
        "      <th>testing_policy</th>\n",
        "      <th>contact_tracing</th>\n",
        "      <th>stringency_index</th>\n",
        "    </tr>\n",
        "  </thead>\n",
        "  <tbody>\n",
        "    <tr>\n",
        "      <th>187018</th>\n",
        "      <td>2020-08-20</td>\n",
        "      <td>14</td>\n",
        "      <td>5</td>\n",
        "      <td>0</td>\n",
        "      <td>107808.0</td>\n",
        "      <td>COL</td>\n",
        "      <td>Vichada</td>\n",
        "      <td>Colombia</td>\n",
        "      <td>3</td>\n",
        "      <td>3</td>\n",
        "      <td>2</td>\n",
        "      <td>4</td>\n",
        "      <td>1</td>\n",
        "      <td>2</td>\n",
        "      <td>2</td>\n",
        "      <td>4</td>\n",
        "      <td>2</td>\n",
        "      <td>2</td>\n",
        "      <td>2</td>\n",
        "      <td>87.04</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>187019</th>\n",
        "      <td>2020-08-21</td>\n",
        "      <td>14</td>\n",
        "      <td>5</td>\n",
        "      <td>0</td>\n",
        "      <td>107808.0</td>\n",
        "      <td>COL</td>\n",
        "      <td>Vichada</td>\n",
        "      <td>Colombia</td>\n",
        "      <td>3</td>\n",
        "      <td>3</td>\n",
        "      <td>2</td>\n",
        "      <td>4</td>\n",
        "      <td>1</td>\n",
        "      <td>2</td>\n",
        "      <td>2</td>\n",
        "      <td>4</td>\n",
        "      <td>2</td>\n",
        "      <td>2</td>\n",
        "      <td>2</td>\n",
        "      <td>87.04</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>187020</th>\n",
        "      <td>2020-08-22</td>\n",
        "      <td>14</td>\n",
        "      <td>5</td>\n",
        "      <td>0</td>\n",
        "      <td>107808.0</td>\n",
        "      <td>COL</td>\n",
        "      <td>Vichada</td>\n",
        "      <td>Colombia</td>\n",
        "      <td>3</td>\n",
        "      <td>3</td>\n",
        "      <td>2</td>\n",
        "      <td>4</td>\n",
        "      <td>1</td>\n",
        "      <td>2</td>\n",
        "      <td>2</td>\n",
        "      <td>4</td>\n",
        "      <td>2</td>\n",
        "      <td>2</td>\n",
        "      <td>2</td>\n",
        "      <td>87.04</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>187021</th>\n",
        "      <td>2020-08-23</td>\n",
        "      <td>14</td>\n",
        "      <td>11</td>\n",
        "      <td>0</td>\n",
        "      <td>107808.0</td>\n",
        "      <td>COL</td>\n",
        "      <td>Vichada</td>\n",
        "      <td>Colombia</td>\n",
        "      <td>3</td>\n",
        "      <td>3</td>\n",
        "      <td>2</td>\n",
        "      <td>4</td>\n",
        "      <td>1</td>\n",
        "      <td>2</td>\n",
        "      <td>2</td>\n",
        "      <td>4</td>\n",
        "      <td>2</td>\n",
        "      <td>2</td>\n",
        "      <td>2</td>\n",
        "      <td>87.04</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>187022</th>\n",
        "      <td>2020-08-24</td>\n",
        "      <td>14</td>\n",
        "      <td>11</td>\n",
        "      <td>0</td>\n",
        "      <td>107808.0</td>\n",
        "      <td>COL</td>\n",
        "      <td>Vichada</td>\n",
        "      <td>Colombia</td>\n",
        "      <td>3</td>\n",
        "      <td>3</td>\n",
        "      <td>2</td>\n",
        "      <td>4</td>\n",
        "      <td>1</td>\n",
        "      <td>2</td>\n",
        "      <td>2</td>\n",
        "      <td>4</td>\n",
        "      <td>2</td>\n",
        "      <td>2</td>\n",
        "      <td>2</td>\n",
        "      <td>87.04</td>\n",
        "    </tr>\n",
        "  </tbody>\n",
        "</table>\n",
        "</div>"
       ],
       "output_type": "pyout",
       "prompt_number": 16,
       "text": [
        "       ObservationDate  Confirmed  Recovered  Deaths  Population ISO3  \\\n",
        "187018      2020-08-20         14          5       0    107808.0  COL   \n",
        "187019      2020-08-21         14          5       0    107808.0  COL   \n",
        "187020      2020-08-22         14          5       0    107808.0  COL   \n",
        "187021      2020-08-23         14         11       0    107808.0  COL   \n",
        "187022      2020-08-24         14         11       0    107808.0  COL   \n",
        "\n",
        "       Province/State Country/Region  school_closing  workplace_closing  \\\n",
        "187018        Vichada       Colombia               3                  3   \n",
        "187019        Vichada       Colombia               3                  3   \n",
        "187020        Vichada       Colombia               3                  3   \n",
        "187021        Vichada       Colombia               3                  3   \n",
        "187022        Vichada       Colombia               3                  3   \n",
        "\n",
        "        cancel_events  gatherings_restrictions  transport_closing  \\\n",
        "187018              2                        4                  1   \n",
        "187019              2                        4                  1   \n",
        "187020              2                        4                  1   \n",
        "187021              2                        4                  1   \n",
        "187022              2                        4                  1   \n",
        "\n",
        "        stay_home_restrictions  internal_movement_restrictions  \\\n",
        "187018                       2                               2   \n",
        "187019                       2                               2   \n",
        "187020                       2                               2   \n",
        "187021                       2                               2   \n",
        "187022                       2                               2   \n",
        "\n",
        "        international_movement_restrictions  information_campaigns  \\\n",
        "187018                                    4                      2   \n",
        "187019                                    4                      2   \n",
        "187020                                    4                      2   \n",
        "187021                                    4                      2   \n",
        "187022                                    4                      2   \n",
        "\n",
        "        testing_policy  contact_tracing  stringency_index  \n",
        "187018               2                2             87.04  \n",
        "187019               2                2             87.04  \n",
        "187020               2                2             87.04  \n",
        "187021               2                2             87.04  \n",
        "187022               2                2             87.04  "
       ]
      }
     ],
     "prompt_number": 16
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "# Cleaned data\n",
      "population_data.cleaned().tail()"
     ],
     "language": "python",
     "metadata": {},
     "outputs": [
      {
       "html": [
        "<div>\n",
        "<style scoped>\n",
        "    .dataframe tbody tr th:only-of-type {\n",
        "        vertical-align: middle;\n",
        "    }\n",
        "\n",
        "    .dataframe tbody tr th {\n",
        "        vertical-align: top;\n",
        "    }\n",
        "\n",
        "    .dataframe thead th {\n",
        "        text-align: right;\n",
        "    }\n",
        "</style>\n",
        "<table border=\"1\" class=\"dataframe\">\n",
        "  <thead>\n",
        "    <tr style=\"text-align: right;\">\n",
        "      <th></th>\n",
        "      <th>ISO3</th>\n",
        "      <th>Country</th>\n",
        "      <th>Province</th>\n",
        "      <th>Date</th>\n",
        "      <th>Population</th>\n",
        "    </tr>\n",
        "  </thead>\n",
        "  <tbody>\n",
        "    <tr>\n",
        "      <th>183450</th>\n",
        "      <td>COL</td>\n",
        "      <td>Colombia</td>\n",
        "      <td>Vichada</td>\n",
        "      <td>2020-08-20</td>\n",
        "      <td>107808</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>183451</th>\n",
        "      <td>COL</td>\n",
        "      <td>Colombia</td>\n",
        "      <td>Vichada</td>\n",
        "      <td>2020-08-21</td>\n",
        "      <td>107808</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>183452</th>\n",
        "      <td>COL</td>\n",
        "      <td>Colombia</td>\n",
        "      <td>Vichada</td>\n",
        "      <td>2020-08-22</td>\n",
        "      <td>107808</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>183453</th>\n",
        "      <td>COL</td>\n",
        "      <td>Colombia</td>\n",
        "      <td>Vichada</td>\n",
        "      <td>2020-08-23</td>\n",
        "      <td>107808</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>183454</th>\n",
        "      <td>COL</td>\n",
        "      <td>Colombia</td>\n",
        "      <td>Vichada</td>\n",
        "      <td>2020-08-24</td>\n",
        "      <td>107808</td>\n",
        "    </tr>\n",
        "  </tbody>\n",
        "</table>\n",
        "</div>"
       ],
       "output_type": "pyout",
       "prompt_number": 17,
       "text": [
        "       ISO3   Country Province       Date  Population\n",
        "183450  COL  Colombia  Vichada 2020-08-20      107808\n",
        "183451  COL  Colombia  Vichada 2020-08-21      107808\n",
        "183452  COL  Colombia  Vichada 2020-08-22      107808\n",
        "183453  COL  Colombia  Vichada 2020-08-23      107808\n",
        "183454  COL  Colombia  Vichada 2020-08-24      107808"
       ]
      }
     ],
     "prompt_number": 17
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "population_data.value(\"Japan\", province=None)"
     ],
     "language": "python",
     "metadata": {},
     "outputs": [
      {
       "output_type": "pyout",
       "prompt_number": 18,
       "text": [
        "126529100"
       ]
      }
     ],
     "prompt_number": 18
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "# Register population value of Tokyo in Japan\n",
      "# https://www.metro.tokyo.lg.jp/tosei/hodohappyo/press/2020/06/11/07.html\n",
      "population_data.update(14_002_973, \"Japan\", province=\"Tokyo\")\n",
      "population_data.value(\"Japan\", province=\"Tokyo\")"
     ],
     "language": "python",
     "metadata": {},
     "outputs": [
      {
       "output_type": "pyout",
       "prompt_number": 19,
       "text": [
        "14002973"
       ]
      }
     ],
     "prompt_number": 19
    },
    {
     "cell_type": "heading",
     "level": 3,
     "metadata": {},
     "source": [
      "Government Response Tracker (OxCGRT)"
     ]
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "# Description/citation\n",
      "print(oxcgrt_data.citation)"
     ],
     "language": "python",
     "metadata": {
      "tags": []
     },
     "outputs": [
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "(Secondary source) Guidotti, E., Ardia, D., (2020), \"COVID-19 Data Hub\", Working paper, doi: 10.13140/RG.2.2.11649.81763.\n",
        "We can get Citation list of primary sources with DataLoader(...).covid19dh_citation"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      }
     ],
     "prompt_number": 20
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "# Raw data (the same as jhu_data)\n",
      "oxcgrt_data.raw.tail()"
     ],
     "language": "python",
     "metadata": {},
     "outputs": [
      {
       "html": [
        "<div>\n",
        "<style scoped>\n",
        "    .dataframe tbody tr th:only-of-type {\n",
        "        vertical-align: middle;\n",
        "    }\n",
        "\n",
        "    .dataframe tbody tr th {\n",
        "        vertical-align: top;\n",
        "    }\n",
        "\n",
        "    .dataframe thead th {\n",
        "        text-align: right;\n",
        "    }\n",
        "</style>\n",
        "<table border=\"1\" class=\"dataframe\">\n",
        "  <thead>\n",
        "    <tr style=\"text-align: right;\">\n",
        "      <th></th>\n",
        "      <th>ObservationDate</th>\n",
        "      <th>Confirmed</th>\n",
        "      <th>Recovered</th>\n",
        "      <th>Deaths</th>\n",
        "      <th>Population</th>\n",
        "      <th>ISO3</th>\n",
        "      <th>Province/State</th>\n",
        "      <th>Country/Region</th>\n",
        "      <th>school_closing</th>\n",
        "      <th>workplace_closing</th>\n",
        "      <th>cancel_events</th>\n",
        "      <th>gatherings_restrictions</th>\n",
        "      <th>transport_closing</th>\n",
        "      <th>stay_home_restrictions</th>\n",
        "      <th>internal_movement_restrictions</th>\n",
        "      <th>international_movement_restrictions</th>\n",
        "      <th>information_campaigns</th>\n",
        "      <th>testing_policy</th>\n",
        "      <th>contact_tracing</th>\n",
        "      <th>stringency_index</th>\n",
        "    </tr>\n",
        "  </thead>\n",
        "  <tbody>\n",
        "    <tr>\n",
        "      <th>187018</th>\n",
        "      <td>2020-08-20</td>\n",
        "      <td>14</td>\n",
        "      <td>5</td>\n",
        "      <td>0</td>\n",
        "      <td>107808.0</td>\n",
        "      <td>COL</td>\n",
        "      <td>Vichada</td>\n",
        "      <td>Colombia</td>\n",
        "      <td>3</td>\n",
        "      <td>3</td>\n",
        "      <td>2</td>\n",
        "      <td>4</td>\n",
        "      <td>1</td>\n",
        "      <td>2</td>\n",
        "      <td>2</td>\n",
        "      <td>4</td>\n",
        "      <td>2</td>\n",
        "      <td>2</td>\n",
        "      <td>2</td>\n",
        "      <td>87.04</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>187019</th>\n",
        "      <td>2020-08-21</td>\n",
        "      <td>14</td>\n",
        "      <td>5</td>\n",
        "      <td>0</td>\n",
        "      <td>107808.0</td>\n",
        "      <td>COL</td>\n",
        "      <td>Vichada</td>\n",
        "      <td>Colombia</td>\n",
        "      <td>3</td>\n",
        "      <td>3</td>\n",
        "      <td>2</td>\n",
        "      <td>4</td>\n",
        "      <td>1</td>\n",
        "      <td>2</td>\n",
        "      <td>2</td>\n",
        "      <td>4</td>\n",
        "      <td>2</td>\n",
        "      <td>2</td>\n",
        "      <td>2</td>\n",
        "      <td>87.04</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>187020</th>\n",
        "      <td>2020-08-22</td>\n",
        "      <td>14</td>\n",
        "      <td>5</td>\n",
        "      <td>0</td>\n",
        "      <td>107808.0</td>\n",
        "      <td>COL</td>\n",
        "      <td>Vichada</td>\n",
        "      <td>Colombia</td>\n",
        "      <td>3</td>\n",
        "      <td>3</td>\n",
        "      <td>2</td>\n",
        "      <td>4</td>\n",
        "      <td>1</td>\n",
        "      <td>2</td>\n",
        "      <td>2</td>\n",
        "      <td>4</td>\n",
        "      <td>2</td>\n",
        "      <td>2</td>\n",
        "      <td>2</td>\n",
        "      <td>87.04</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>187021</th>\n",
        "      <td>2020-08-23</td>\n",
        "      <td>14</td>\n",
        "      <td>11</td>\n",
        "      <td>0</td>\n",
        "      <td>107808.0</td>\n",
        "      <td>COL</td>\n",
        "      <td>Vichada</td>\n",
        "      <td>Colombia</td>\n",
        "      <td>3</td>\n",
        "      <td>3</td>\n",
        "      <td>2</td>\n",
        "      <td>4</td>\n",
        "      <td>1</td>\n",
        "      <td>2</td>\n",
        "      <td>2</td>\n",
        "      <td>4</td>\n",
        "      <td>2</td>\n",
        "      <td>2</td>\n",
        "      <td>2</td>\n",
        "      <td>87.04</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>187022</th>\n",
        "      <td>2020-08-24</td>\n",
        "      <td>14</td>\n",
        "      <td>11</td>\n",
        "      <td>0</td>\n",
        "      <td>107808.0</td>\n",
        "      <td>COL</td>\n",
        "      <td>Vichada</td>\n",
        "      <td>Colombia</td>\n",
        "      <td>3</td>\n",
        "      <td>3</td>\n",
        "      <td>2</td>\n",
        "      <td>4</td>\n",
        "      <td>1</td>\n",
        "      <td>2</td>\n",
        "      <td>2</td>\n",
        "      <td>4</td>\n",
        "      <td>2</td>\n",
        "      <td>2</td>\n",
        "      <td>2</td>\n",
        "      <td>87.04</td>\n",
        "    </tr>\n",
        "  </tbody>\n",
        "</table>\n",
        "</div>"
       ],
       "output_type": "pyout",
       "prompt_number": 21,
       "text": [
        "       ObservationDate  Confirmed  Recovered  Deaths  Population ISO3  \\\n",
        "187018      2020-08-20         14          5       0    107808.0  COL   \n",
        "187019      2020-08-21         14          5       0    107808.0  COL   \n",
        "187020      2020-08-22         14          5       0    107808.0  COL   \n",
        "187021      2020-08-23         14         11       0    107808.0  COL   \n",
        "187022      2020-08-24         14         11       0    107808.0  COL   \n",
        "\n",
        "       Province/State Country/Region  school_closing  workplace_closing  \\\n",
        "187018        Vichada       Colombia               3                  3   \n",
        "187019        Vichada       Colombia               3                  3   \n",
        "187020        Vichada       Colombia               3                  3   \n",
        "187021        Vichada       Colombia               3                  3   \n",
        "187022        Vichada       Colombia               3                  3   \n",
        "\n",
        "        cancel_events  gatherings_restrictions  transport_closing  \\\n",
        "187018              2                        4                  1   \n",
        "187019              2                        4                  1   \n",
        "187020              2                        4                  1   \n",
        "187021              2                        4                  1   \n",
        "187022              2                        4                  1   \n",
        "\n",
        "        stay_home_restrictions  internal_movement_restrictions  \\\n",
        "187018                       2                               2   \n",
        "187019                       2                               2   \n",
        "187020                       2                               2   \n",
        "187021                       2                               2   \n",
        "187022                       2                               2   \n",
        "\n",
        "        international_movement_restrictions  information_campaigns  \\\n",
        "187018                                    4                      2   \n",
        "187019                                    4                      2   \n",
        "187020                                    4                      2   \n",
        "187021                                    4                      2   \n",
        "187022                                    4                      2   \n",
        "\n",
        "        testing_policy  contact_tracing  stringency_index  \n",
        "187018               2                2             87.04  \n",
        "187019               2                2             87.04  \n",
        "187020               2                2             87.04  \n",
        "187021               2                2             87.04  \n",
        "187022               2                2             87.04  "
       ]
      }
     ],
     "prompt_number": 21
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "# Cleaned data\n",
      "oxcgrt_data.cleaned().tail()"
     ],
     "language": "python",
     "metadata": {},
     "outputs": [
      {
       "html": [
        "<div>\n",
        "<style scoped>\n",
        "    .dataframe tbody tr th:only-of-type {\n",
        "        vertical-align: middle;\n",
        "    }\n",
        "\n",
        "    .dataframe tbody tr th {\n",
        "        vertical-align: top;\n",
        "    }\n",
        "\n",
        "    .dataframe thead th {\n",
        "        text-align: right;\n",
        "    }\n",
        "</style>\n",
        "<table border=\"1\" class=\"dataframe\">\n",
        "  <thead>\n",
        "    <tr style=\"text-align: right;\">\n",
        "      <th></th>\n",
        "      <th>Date</th>\n",
        "      <th>Country</th>\n",
        "      <th>ISO3</th>\n",
        "      <th>School_closing</th>\n",
        "      <th>Workplace_closing</th>\n",
        "      <th>Cancel_events</th>\n",
        "      <th>Gatherings_restrictions</th>\n",
        "      <th>Transport_closing</th>\n",
        "      <th>Stay_home_restrictions</th>\n",
        "      <th>Internal_movement_restrictions</th>\n",
        "      <th>International_movement_restrictions</th>\n",
        "      <th>Information_campaigns</th>\n",
        "      <th>Testing_policy</th>\n",
        "      <th>Contact_tracing</th>\n",
        "      <th>Stringency_index</th>\n",
        "    </tr>\n",
        "  </thead>\n",
        "  <tbody>\n",
        "    <tr>\n",
        "      <th>187018</th>\n",
        "      <td>2020-08-20</td>\n",
        "      <td>Colombia</td>\n",
        "      <td>COL</td>\n",
        "      <td>3</td>\n",
        "      <td>3</td>\n",
        "      <td>2</td>\n",
        "      <td>4</td>\n",
        "      <td>1</td>\n",
        "      <td>2</td>\n",
        "      <td>2</td>\n",
        "      <td>4</td>\n",
        "      <td>2</td>\n",
        "      <td>2</td>\n",
        "      <td>2</td>\n",
        "      <td>87.04</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>187019</th>\n",
        "      <td>2020-08-21</td>\n",
        "      <td>Colombia</td>\n",
        "      <td>COL</td>\n",
        "      <td>3</td>\n",
        "      <td>3</td>\n",
        "      <td>2</td>\n",
        "      <td>4</td>\n",
        "      <td>1</td>\n",
        "      <td>2</td>\n",
        "      <td>2</td>\n",
        "      <td>4</td>\n",
        "      <td>2</td>\n",
        "      <td>2</td>\n",
        "      <td>2</td>\n",
        "      <td>87.04</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>187020</th>\n",
        "      <td>2020-08-22</td>\n",
        "      <td>Colombia</td>\n",
        "      <td>COL</td>\n",
        "      <td>3</td>\n",
        "      <td>3</td>\n",
        "      <td>2</td>\n",
        "      <td>4</td>\n",
        "      <td>1</td>\n",
        "      <td>2</td>\n",
        "      <td>2</td>\n",
        "      <td>4</td>\n",
        "      <td>2</td>\n",
        "      <td>2</td>\n",
        "      <td>2</td>\n",
        "      <td>87.04</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>187021</th>\n",
        "      <td>2020-08-23</td>\n",
        "      <td>Colombia</td>\n",
        "      <td>COL</td>\n",
        "      <td>3</td>\n",
        "      <td>3</td>\n",
        "      <td>2</td>\n",
        "      <td>4</td>\n",
        "      <td>1</td>\n",
        "      <td>2</td>\n",
        "      <td>2</td>\n",
        "      <td>4</td>\n",
        "      <td>2</td>\n",
        "      <td>2</td>\n",
        "      <td>2</td>\n",
        "      <td>87.04</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>187022</th>\n",
        "      <td>2020-08-24</td>\n",
        "      <td>Colombia</td>\n",
        "      <td>COL</td>\n",
        "      <td>3</td>\n",
        "      <td>3</td>\n",
        "      <td>2</td>\n",
        "      <td>4</td>\n",
        "      <td>1</td>\n",
        "      <td>2</td>\n",
        "      <td>2</td>\n",
        "      <td>4</td>\n",
        "      <td>2</td>\n",
        "      <td>2</td>\n",
        "      <td>2</td>\n",
        "      <td>87.04</td>\n",
        "    </tr>\n",
        "  </tbody>\n",
        "</table>\n",
        "</div>"
       ],
       "output_type": "pyout",
       "prompt_number": 22,
       "text": [
        "             Date   Country ISO3  School_closing  Workplace_closing  \\\n",
        "187018 2020-08-20  Colombia  COL               3                  3   \n",
        "187019 2020-08-21  Colombia  COL               3                  3   \n",
        "187020 2020-08-22  Colombia  COL               3                  3   \n",
        "187021 2020-08-23  Colombia  COL               3                  3   \n",
        "187022 2020-08-24  Colombia  COL               3                  3   \n",
        "\n",
        "        Cancel_events  Gatherings_restrictions  Transport_closing  \\\n",
        "187018              2                        4                  1   \n",
        "187019              2                        4                  1   \n",
        "187020              2                        4                  1   \n",
        "187021              2                        4                  1   \n",
        "187022              2                        4                  1   \n",
        "\n",
        "        Stay_home_restrictions  Internal_movement_restrictions  \\\n",
        "187018                       2                               2   \n",
        "187019                       2                               2   \n",
        "187020                       2                               2   \n",
        "187021                       2                               2   \n",
        "187022                       2                               2   \n",
        "\n",
        "        International_movement_restrictions  Information_campaigns  \\\n",
        "187018                                    4                      2   \n",
        "187019                                    4                      2   \n",
        "187020                                    4                      2   \n",
        "187021                                    4                      2   \n",
        "187022                                    4                      2   \n",
        "\n",
        "        Testing_policy  Contact_tracing  Stringency_index  \n",
        "187018               2                2             87.04  \n",
        "187019               2                2             87.04  \n",
        "187020               2                2             87.04  \n",
        "187021               2                2             87.04  \n",
        "187022               2                2             87.04  "
       ]
      }
     ],
     "prompt_number": 22
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "# Subset for a country\n",
      "oxcgrt_data.subset(\"Japan\").tail()"
     ],
     "language": "python",
     "metadata": {},
     "outputs": [
      {
       "html": [
        "<div>\n",
        "<style scoped>\n",
        "    .dataframe tbody tr th:only-of-type {\n",
        "        vertical-align: middle;\n",
        "    }\n",
        "\n",
        "    .dataframe tbody tr th {\n",
        "        vertical-align: top;\n",
        "    }\n",
        "\n",
        "    .dataframe thead th {\n",
        "        text-align: right;\n",
        "    }\n",
        "</style>\n",
        "<table border=\"1\" class=\"dataframe\">\n",
        "  <thead>\n",
        "    <tr style=\"text-align: right;\">\n",
        "      <th></th>\n",
        "      <th>Date</th>\n",
        "      <th>School_closing</th>\n",
        "      <th>Workplace_closing</th>\n",
        "      <th>Cancel_events</th>\n",
        "      <th>Gatherings_restrictions</th>\n",
        "      <th>Transport_closing</th>\n",
        "      <th>Stay_home_restrictions</th>\n",
        "      <th>Internal_movement_restrictions</th>\n",
        "      <th>International_movement_restrictions</th>\n",
        "      <th>Information_campaigns</th>\n",
        "      <th>Testing_policy</th>\n",
        "      <th>Contact_tracing</th>\n",
        "      <th>Stringency_index</th>\n",
        "    </tr>\n",
        "  </thead>\n",
        "  <tbody>\n",
        "    <tr>\n",
        "      <th>229</th>\n",
        "      <td>2020-08-20</td>\n",
        "      <td>1</td>\n",
        "      <td>1</td>\n",
        "      <td>1</td>\n",
        "      <td>0</td>\n",
        "      <td>0</td>\n",
        "      <td>1</td>\n",
        "      <td>1</td>\n",
        "      <td>3</td>\n",
        "      <td>2</td>\n",
        "      <td>2</td>\n",
        "      <td>1</td>\n",
        "      <td>30.56</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>230</th>\n",
        "      <td>2020-08-21</td>\n",
        "      <td>1</td>\n",
        "      <td>1</td>\n",
        "      <td>1</td>\n",
        "      <td>0</td>\n",
        "      <td>0</td>\n",
        "      <td>1</td>\n",
        "      <td>1</td>\n",
        "      <td>3</td>\n",
        "      <td>2</td>\n",
        "      <td>2</td>\n",
        "      <td>1</td>\n",
        "      <td>30.56</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>231</th>\n",
        "      <td>2020-08-22</td>\n",
        "      <td>1</td>\n",
        "      <td>1</td>\n",
        "      <td>1</td>\n",
        "      <td>0</td>\n",
        "      <td>0</td>\n",
        "      <td>1</td>\n",
        "      <td>1</td>\n",
        "      <td>3</td>\n",
        "      <td>2</td>\n",
        "      <td>2</td>\n",
        "      <td>1</td>\n",
        "      <td>30.56</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>232</th>\n",
        "      <td>2020-08-23</td>\n",
        "      <td>1</td>\n",
        "      <td>1</td>\n",
        "      <td>1</td>\n",
        "      <td>0</td>\n",
        "      <td>0</td>\n",
        "      <td>1</td>\n",
        "      <td>1</td>\n",
        "      <td>3</td>\n",
        "      <td>2</td>\n",
        "      <td>2</td>\n",
        "      <td>1</td>\n",
        "      <td>30.56</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>233</th>\n",
        "      <td>2020-08-24</td>\n",
        "      <td>1</td>\n",
        "      <td>1</td>\n",
        "      <td>1</td>\n",
        "      <td>0</td>\n",
        "      <td>0</td>\n",
        "      <td>1</td>\n",
        "      <td>1</td>\n",
        "      <td>3</td>\n",
        "      <td>2</td>\n",
        "      <td>2</td>\n",
        "      <td>1</td>\n",
        "      <td>30.56</td>\n",
        "    </tr>\n",
        "  </tbody>\n",
        "</table>\n",
        "</div>"
       ],
       "output_type": "pyout",
       "prompt_number": 23,
       "text": [
        "          Date  School_closing  Workplace_closing  Cancel_events  \\\n",
        "229 2020-08-20               1                  1              1   \n",
        "230 2020-08-21               1                  1              1   \n",
        "231 2020-08-22               1                  1              1   \n",
        "232 2020-08-23               1                  1              1   \n",
        "233 2020-08-24               1                  1              1   \n",
        "\n",
        "     Gatherings_restrictions  Transport_closing  Stay_home_restrictions  \\\n",
        "229                        0                  0                       1   \n",
        "230                        0                  0                       1   \n",
        "231                        0                  0                       1   \n",
        "232                        0                  0                       1   \n",
        "233                        0                  0                       1   \n",
        "\n",
        "     Internal_movement_restrictions  International_movement_restrictions  \\\n",
        "229                               1                                    3   \n",
        "230                               1                                    3   \n",
        "231                               1                                    3   \n",
        "232                               1                                    3   \n",
        "233                               1                                    3   \n",
        "\n",
        "     Information_campaigns  Testing_policy  Contact_tracing  Stringency_index  \n",
        "229                      2               2                1             30.56  \n",
        "230                      2               2                1             30.56  \n",
        "231                      2               2                1             30.56  \n",
        "232                      2               2                1             30.56  \n",
        "233                      2               2                1             30.56  "
       ]
      }
     ],
     "prompt_number": 23
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "# Subset for a country (using ISO3 code)\n",
      "oxcgrt_data.subset(\"JPN\").tail()"
     ],
     "language": "python",
     "metadata": {},
     "outputs": [
      {
       "html": [
        "<div>\n",
        "<style scoped>\n",
        "    .dataframe tbody tr th:only-of-type {\n",
        "        vertical-align: middle;\n",
        "    }\n",
        "\n",
        "    .dataframe tbody tr th {\n",
        "        vertical-align: top;\n",
        "    }\n",
        "\n",
        "    .dataframe thead th {\n",
        "        text-align: right;\n",
        "    }\n",
        "</style>\n",
        "<table border=\"1\" class=\"dataframe\">\n",
        "  <thead>\n",
        "    <tr style=\"text-align: right;\">\n",
        "      <th></th>\n",
        "      <th>Date</th>\n",
        "      <th>School_closing</th>\n",
        "      <th>Workplace_closing</th>\n",
        "      <th>Cancel_events</th>\n",
        "      <th>Gatherings_restrictions</th>\n",
        "      <th>Transport_closing</th>\n",
        "      <th>Stay_home_restrictions</th>\n",
        "      <th>Internal_movement_restrictions</th>\n",
        "      <th>International_movement_restrictions</th>\n",
        "      <th>Information_campaigns</th>\n",
        "      <th>Testing_policy</th>\n",
        "      <th>Contact_tracing</th>\n",
        "      <th>Stringency_index</th>\n",
        "    </tr>\n",
        "  </thead>\n",
        "  <tbody>\n",
        "    <tr>\n",
        "      <th>229</th>\n",
        "      <td>2020-08-20</td>\n",
        "      <td>1</td>\n",
        "      <td>1</td>\n",
        "      <td>1</td>\n",
        "      <td>0</td>\n",
        "      <td>0</td>\n",
        "      <td>1</td>\n",
        "      <td>1</td>\n",
        "      <td>3</td>\n",
        "      <td>2</td>\n",
        "      <td>2</td>\n",
        "      <td>1</td>\n",
        "      <td>30.56</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>230</th>\n",
        "      <td>2020-08-21</td>\n",
        "      <td>1</td>\n",
        "      <td>1</td>\n",
        "      <td>1</td>\n",
        "      <td>0</td>\n",
        "      <td>0</td>\n",
        "      <td>1</td>\n",
        "      <td>1</td>\n",
        "      <td>3</td>\n",
        "      <td>2</td>\n",
        "      <td>2</td>\n",
        "      <td>1</td>\n",
        "      <td>30.56</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>231</th>\n",
        "      <td>2020-08-22</td>\n",
        "      <td>1</td>\n",
        "      <td>1</td>\n",
        "      <td>1</td>\n",
        "      <td>0</td>\n",
        "      <td>0</td>\n",
        "      <td>1</td>\n",
        "      <td>1</td>\n",
        "      <td>3</td>\n",
        "      <td>2</td>\n",
        "      <td>2</td>\n",
        "      <td>1</td>\n",
        "      <td>30.56</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>232</th>\n",
        "      <td>2020-08-23</td>\n",
        "      <td>1</td>\n",
        "      <td>1</td>\n",
        "      <td>1</td>\n",
        "      <td>0</td>\n",
        "      <td>0</td>\n",
        "      <td>1</td>\n",
        "      <td>1</td>\n",
        "      <td>3</td>\n",
        "      <td>2</td>\n",
        "      <td>2</td>\n",
        "      <td>1</td>\n",
        "      <td>30.56</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>233</th>\n",
        "      <td>2020-08-24</td>\n",
        "      <td>1</td>\n",
        "      <td>1</td>\n",
        "      <td>1</td>\n",
        "      <td>0</td>\n",
        "      <td>0</td>\n",
        "      <td>1</td>\n",
        "      <td>1</td>\n",
        "      <td>3</td>\n",
        "      <td>2</td>\n",
        "      <td>2</td>\n",
        "      <td>1</td>\n",
        "      <td>30.56</td>\n",
        "    </tr>\n",
        "  </tbody>\n",
        "</table>\n",
        "</div>"
       ],
       "output_type": "pyout",
       "prompt_number": 24,
       "text": [
        "          Date  School_closing  Workplace_closing  Cancel_events  \\\n",
        "229 2020-08-20               1                  1              1   \n",
        "230 2020-08-21               1                  1              1   \n",
        "231 2020-08-22               1                  1              1   \n",
        "232 2020-08-23               1                  1              1   \n",
        "233 2020-08-24               1                  1              1   \n",
        "\n",
        "     Gatherings_restrictions  Transport_closing  Stay_home_restrictions  \\\n",
        "229                        0                  0                       1   \n",
        "230                        0                  0                       1   \n",
        "231                        0                  0                       1   \n",
        "232                        0                  0                       1   \n",
        "233                        0                  0                       1   \n",
        "\n",
        "     Internal_movement_restrictions  International_movement_restrictions  \\\n",
        "229                               1                                    3   \n",
        "230                               1                                    3   \n",
        "231                               1                                    3   \n",
        "232                               1                                    3   \n",
        "233                               1                                    3   \n",
        "\n",
        "     Information_campaigns  Testing_policy  Contact_tracing  Stringency_index  \n",
        "229                      2               2                1             30.56  \n",
        "230                      2               2                1             30.56  \n",
        "231                      2               2                1             30.56  \n",
        "232                      2               2                1             30.56  \n",
        "233                      2               2                1             30.56  "
       ]
      }
     ],
     "prompt_number": 24
    },
    {
     "cell_type": "markdown",
     "metadata": {},
     "source": [
      "## Scenario analysis\n",
      "As an example, we will analysis the number of cases in Japan."
     ]
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "scenario = cs.Scenario(jhu_data, population_data, country=\"Japan\", province=None)"
     ],
     "language": "python",
     "metadata": {},
     "outputs": [],
     "prompt_number": 25
    },
    {
     "cell_type": "heading",
     "level": 3,
     "metadata": {},
     "source": [
      "Check records"
     ]
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "import matplotlib\n",
      "warnings.simplefilter(\"ignore\", category=matplotlib.MatplotlibDeprecationWarning)\n",
      "record_df = scenario.records()\n",
      "record_df.tail()"
     ],
     "language": "python",
     "metadata": {},
     "outputs": [
      {
       "output_type": "display_data",
       "png": "\n",
       "text": [
        "<Figure size 648x432 with 1 Axes>"
       ]
      },
      {
       "html": [
        "<div>\n",
        "<style scoped>\n",
        "    .dataframe tbody tr th:only-of-type {\n",
        "        vertical-align: middle;\n",
        "    }\n",
        "\n",
        "    .dataframe tbody tr th {\n",
        "        vertical-align: top;\n",
        "    }\n",
        "\n",
        "    .dataframe thead th {\n",
        "        text-align: right;\n",
        "    }\n",
        "</style>\n",
        "<table border=\"1\" class=\"dataframe\">\n",
        "  <thead>\n",
        "    <tr style=\"text-align: right;\">\n",
        "      <th></th>\n",
        "      <th>Date</th>\n",
        "      <th>Confirmed</th>\n",
        "      <th>Infected</th>\n",
        "      <th>Fatal</th>\n",
        "      <th>Recovered</th>\n",
        "    </tr>\n",
        "  </thead>\n",
        "  <tbody>\n",
        "    <tr>\n",
        "      <th>190</th>\n",
        "      <td>2020-08-19</td>\n",
        "      <td>57550</td>\n",
        "      <td>12587</td>\n",
        "      <td>1128</td>\n",
        "      <td>43835</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>191</th>\n",
        "      <td>2020-08-20</td>\n",
        "      <td>58501</td>\n",
        "      <td>12091</td>\n",
        "      <td>1144</td>\n",
        "      <td>45266</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>192</th>\n",
        "      <td>2020-08-21</td>\n",
        "      <td>59721</td>\n",
        "      <td>12099</td>\n",
        "      <td>1155</td>\n",
        "      <td>46467</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>193</th>\n",
        "      <td>2020-08-22</td>\n",
        "      <td>60733</td>\n",
        "      <td>11942</td>\n",
        "      <td>1169</td>\n",
        "      <td>47622</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>194</th>\n",
        "      <td>2020-08-23</td>\n",
        "      <td>61747</td>\n",
        "      <td>12021</td>\n",
        "      <td>1176</td>\n",
        "      <td>48550</td>\n",
        "    </tr>\n",
        "  </tbody>\n",
        "</table>\n",
        "</div>"
       ],
       "output_type": "pyout",
       "prompt_number": 26,
       "text": [
        "          Date  Confirmed  Infected  Fatal  Recovered\n",
        "190 2020-08-19      57550     12587   1128      43835\n",
        "191 2020-08-20      58501     12091   1144      45266\n",
        "192 2020-08-21      59721     12099   1155      46467\n",
        "193 2020-08-22      60733     11942   1169      47622\n",
        "194 2020-08-23      61747     12021   1176      48550"
       ]
      }
     ],
     "prompt_number": 26
    },
    {
     "cell_type": "heading",
     "level": 3,
     "metadata": {},
     "source": [
      "S-R trend analysis"
     ]
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "scenario.trend(set_phases=True)\n",
      "scenario.summary()"
     ],
     "language": "python",
     "metadata": {},
     "outputs": [
      {
       "output_type": "display_data",
       "png": "\n",
       "text": [
        "<Figure size 648x432 with 1 Axes>"
       ]
      },
      {
       "html": [
        "<div>\n",
        "<style scoped>\n",
        "    .dataframe tbody tr th:only-of-type {\n",
        "        vertical-align: middle;\n",
        "    }\n",
        "\n",
        "    .dataframe tbody tr th {\n",
        "        vertical-align: top;\n",
        "    }\n",
        "\n",
        "    .dataframe thead th {\n",
        "        text-align: right;\n",
        "    }\n",
        "</style>\n",
        "<table border=\"1\" class=\"dataframe\">\n",
        "  <thead>\n",
        "    <tr style=\"text-align: right;\">\n",
        "      <th></th>\n",
        "      <th>Type</th>\n",
        "      <th>Start</th>\n",
        "      <th>End</th>\n",
        "      <th>Population</th>\n",
        "    </tr>\n",
        "  </thead>\n",
        "  <tbody>\n",
        "    <tr>\n",
        "      <th>1st</th>\n",
        "      <td>Past</td>\n",
        "      <td>22Apr2020</td>\n",
        "      <td>07Jul2020</td>\n",
        "      <td>126529100</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>2nd</th>\n",
        "      <td>Past</td>\n",
        "      <td>08Jul2020</td>\n",
        "      <td>23Jul2020</td>\n",
        "      <td>126529100</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>3rd</th>\n",
        "      <td>Past</td>\n",
        "      <td>24Jul2020</td>\n",
        "      <td>31Jul2020</td>\n",
        "      <td>126529100</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>4th</th>\n",
        "      <td>Past</td>\n",
        "      <td>01Aug2020</td>\n",
        "      <td>09Aug2020</td>\n",
        "      <td>126529100</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>5th</th>\n",
        "      <td>Past</td>\n",
        "      <td>10Aug2020</td>\n",
        "      <td>23Aug2020</td>\n",
        "      <td>126529100</td>\n",
        "    </tr>\n",
        "  </tbody>\n",
        "</table>\n",
        "</div>"
       ],
       "output_type": "pyout",
       "prompt_number": 27,
       "text": [
        "     Type      Start        End  Population\n",
        "1st  Past  22Apr2020  07Jul2020   126529100\n",
        "2nd  Past  08Jul2020  23Jul2020   126529100\n",
        "3rd  Past  24Jul2020  31Jul2020   126529100\n",
        "4th  Past  01Aug2020  09Aug2020   126529100\n",
        "5th  Past  10Aug2020  23Aug2020   126529100"
       ]
      }
     ],
     "prompt_number": 27
    },
    {
     "cell_type": "markdown",
     "metadata": {},
     "source": [
      "### Hyperparameter estimation of ODE models\n",
      "As an example, use SIR-F model.\n",
      "We can use SIR, SIRD, (SIRFV), (SEWIRF)."
     ]
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "scenario.estimate(cs.SIRF)"
     ],
     "language": "python",
     "metadata": {
      "tags": []
     },
     "outputs": [
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n",
        "<SIR-F model: parameter estimation>"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "Running optimization with 4 CPUs..."
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\t5th phase (10Aug2020 - 23Aug2020): finished 1801 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\t3rd phase (24Jul2020 - 31Jul2020): finished  221 trials in 0 min  5 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\t4th phase (01Aug2020 - 09Aug2020): finished  695 trials in 0 min 15 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\t2nd phase (08Jul2020 - 23Jul2020): finished 2084 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\t1st phase (22Apr2020 - 07Jul2020): finished 2013 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "Completed optimization. Total: 2 min  1 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      }
     ],
     "prompt_number": 28
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "scenario.summary()"
     ],
     "language": "python",
     "metadata": {},
     "outputs": [
      {
       "html": [
        "<div>\n",
        "<style scoped>\n",
        "    .dataframe tbody tr th:only-of-type {\n",
        "        vertical-align: middle;\n",
        "    }\n",
        "\n",
        "    .dataframe tbody tr th {\n",
        "        vertical-align: top;\n",
        "    }\n",
        "\n",
        "    .dataframe thead th {\n",
        "        text-align: right;\n",
        "    }\n",
        "</style>\n",
        "<table border=\"1\" class=\"dataframe\">\n",
        "  <thead>\n",
        "    <tr style=\"text-align: right;\">\n",
        "      <th></th>\n",
        "      <th>Type</th>\n",
        "      <th>Start</th>\n",
        "      <th>End</th>\n",
        "      <th>Population</th>\n",
        "      <th>ODE</th>\n",
        "      <th>Rt</th>\n",
        "      <th>theta</th>\n",
        "      <th>kappa</th>\n",
        "      <th>rho</th>\n",
        "      <th>sigma</th>\n",
        "      <th>tau</th>\n",
        "      <th>alpha1 [-]</th>\n",
        "      <th>1/gamma [day]</th>\n",
        "      <th>1/alpha2 [day]</th>\n",
        "      <th>1/beta [day]</th>\n",
        "      <th>RMSLE</th>\n",
        "      <th>Trials</th>\n",
        "      <th>Runtime</th>\n",
        "    </tr>\n",
        "  </thead>\n",
        "  <tbody>\n",
        "    <tr>\n",
        "      <th>1st</th>\n",
        "      <td>Past</td>\n",
        "      <td>22Apr2020</td>\n",
        "      <td>07Jul2020</td>\n",
        "      <td>126529100</td>\n",
        "      <td>SIR-F</td>\n",
        "      <td>0.38</td>\n",
        "      <td>0.116394</td>\n",
        "      <td>0.000003</td>\n",
        "      <td>0.028789</td>\n",
        "      <td>0.067354</td>\n",
        "      <td>1440</td>\n",
        "      <td>0.116</td>\n",
        "      <td>14</td>\n",
        "      <td>327449</td>\n",
        "      <td>34</td>\n",
        "      <td>0.998141</td>\n",
        "      <td>2013</td>\n",
        "      <td>1 min  0 sec</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>2nd</th>\n",
        "      <td>Past</td>\n",
        "      <td>08Jul2020</td>\n",
        "      <td>23Jul2020</td>\n",
        "      <td>126529100</td>\n",
        "      <td>SIR-F</td>\n",
        "      <td>1.97</td>\n",
        "      <td>0.000739</td>\n",
        "      <td>0.000057</td>\n",
        "      <td>0.138159</td>\n",
        "      <td>0.069961</td>\n",
        "      <td>1440</td>\n",
        "      <td>0.001</td>\n",
        "      <td>14</td>\n",
        "      <td>17681</td>\n",
        "      <td>7</td>\n",
        "      <td>0.028543</td>\n",
        "      <td>2084</td>\n",
        "      <td>1 min  0 sec</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>3rd</th>\n",
        "      <td>Past</td>\n",
        "      <td>24Jul2020</td>\n",
        "      <td>31Jul2020</td>\n",
        "      <td>126529100</td>\n",
        "      <td>SIR-F</td>\n",
        "      <td>1.81</td>\n",
        "      <td>0.001713</td>\n",
        "      <td>0.000095</td>\n",
        "      <td>0.133093</td>\n",
        "      <td>0.073320</td>\n",
        "      <td>1440</td>\n",
        "      <td>0.002</td>\n",
        "      <td>13</td>\n",
        "      <td>10502</td>\n",
        "      <td>7</td>\n",
        "      <td>0.017708</td>\n",
        "      <td>221</td>\n",
        "      <td>0 min  5 sec</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>4th</th>\n",
        "      <td>Past</td>\n",
        "      <td>01Aug2020</td>\n",
        "      <td>09Aug2020</td>\n",
        "      <td>126529100</td>\n",
        "      <td>SIR-F</td>\n",
        "      <td>1.66</td>\n",
        "      <td>0.000967</td>\n",
        "      <td>0.000117</td>\n",
        "      <td>0.119013</td>\n",
        "      <td>0.071404</td>\n",
        "      <td>1440</td>\n",
        "      <td>0.001</td>\n",
        "      <td>14</td>\n",
        "      <td>8534</td>\n",
        "      <td>8</td>\n",
        "      <td>0.033195</td>\n",
        "      <td>695</td>\n",
        "      <td>0 min 15 sec</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>5th</th>\n",
        "      <td>Past</td>\n",
        "      <td>10Aug2020</td>\n",
        "      <td>23Aug2020</td>\n",
        "      <td>126529100</td>\n",
        "      <td>SIR-F</td>\n",
        "      <td>0.89</td>\n",
        "      <td>0.001041</td>\n",
        "      <td>0.000621</td>\n",
        "      <td>0.081631</td>\n",
        "      <td>0.090853</td>\n",
        "      <td>1440</td>\n",
        "      <td>0.001</td>\n",
        "      <td>11</td>\n",
        "      <td>1611</td>\n",
        "      <td>12</td>\n",
        "      <td>0.025890</td>\n",
        "      <td>1801</td>\n",
        "      <td>1 min  0 sec</td>\n",
        "    </tr>\n",
        "  </tbody>\n",
        "</table>\n",
        "</div>"
       ],
       "output_type": "pyout",
       "prompt_number": 29,
       "text": [
        "     Type      Start        End  Population    ODE    Rt     theta     kappa  \\\n",
        "1st  Past  22Apr2020  07Jul2020   126529100  SIR-F  0.38  0.116394  0.000003   \n",
        "2nd  Past  08Jul2020  23Jul2020   126529100  SIR-F  1.97  0.000739  0.000057   \n",
        "3rd  Past  24Jul2020  31Jul2020   126529100  SIR-F  1.81  0.001713  0.000095   \n",
        "4th  Past  01Aug2020  09Aug2020   126529100  SIR-F  1.66  0.000967  0.000117   \n",
        "5th  Past  10Aug2020  23Aug2020   126529100  SIR-F  0.89  0.001041  0.000621   \n",
        "\n",
        "          rho     sigma   tau  alpha1 [-]  1/gamma [day]  1/alpha2 [day]  \\\n",
        "1st  0.028789  0.067354  1440       0.116             14          327449   \n",
        "2nd  0.138159  0.069961  1440       0.001             14           17681   \n",
        "3rd  0.133093  0.073320  1440       0.002             13           10502   \n",
        "4th  0.119013  0.071404  1440       0.001             14            8534   \n",
        "5th  0.081631  0.090853  1440       0.001             11            1611   \n",
        "\n",
        "     1/beta [day]     RMSLE  Trials       Runtime  \n",
        "1st            34  0.998141    2013  1 min  0 sec  \n",
        "2nd             7  0.028543    2084  1 min  0 sec  \n",
        "3rd             7  0.017708     221  0 min  5 sec  \n",
        "4th             8  0.033195     695  0 min 15 sec  \n",
        "5th            12  0.025890    1801  1 min  0 sec  "
       ]
      }
     ],
     "prompt_number": 29
    },
    {
     "cell_type": "heading",
     "level": 3,
     "metadata": {},
     "source": [
      "Accuracy of estimation"
     ]
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "scenario.estimate_accuracy(phase=\"1st\")"
     ],
     "language": "python",
     "metadata": {},
     "outputs": [
      {
       "output_type": "display_data",
       "png": "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\n",
       "text": [
        "<Figure size 648x864 with 4 Axes>"
       ]
      }
     ],
     "prompt_number": 30
    },
    {
     "cell_type": "heading",
     "level": 3,
     "metadata": {},
     "source": [
      "Get parameter value"
     ]
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "scenario.get(\"Rt\", phase=\"4th\")"
     ],
     "language": "python",
     "metadata": {},
     "outputs": [
      {
       "output_type": "pyout",
       "prompt_number": 31,
       "text": [
        "1.66"
       ]
      }
     ],
     "prompt_number": 31
    },
    {
     "cell_type": "heading",
     "level": 3,
     "metadata": {},
     "source": [
      "Show parameter history"
     ]
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "df = scenario.param_history(targets=[\"rho\", \"sigma\"])\n",
      "df.T"
     ],
     "language": "python",
     "metadata": {},
     "outputs": [
      {
       "output_type": "display_data",
       "png": "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\n",
       "text": [
        "<Figure size 648x432 with 1 Axes>"
       ]
      },
      {
       "html": [
        "<div>\n",
        "<style scoped>\n",
        "    .dataframe tbody tr th:only-of-type {\n",
        "        vertical-align: middle;\n",
        "    }\n",
        "\n",
        "    .dataframe tbody tr th {\n",
        "        vertical-align: top;\n",
        "    }\n",
        "\n",
        "    .dataframe thead th {\n",
        "        text-align: right;\n",
        "    }\n",
        "</style>\n",
        "<table border=\"1\" class=\"dataframe\">\n",
        "  <thead>\n",
        "    <tr style=\"text-align: right;\">\n",
        "      <th></th>\n",
        "      <th>1st</th>\n",
        "      <th>2nd</th>\n",
        "      <th>3rd</th>\n",
        "      <th>4th</th>\n",
        "      <th>5th</th>\n",
        "    </tr>\n",
        "  </thead>\n",
        "  <tbody>\n",
        "    <tr>\n",
        "      <th>rho</th>\n",
        "      <td>1.0</td>\n",
        "      <td>4.799108</td>\n",
        "      <td>4.623140</td>\n",
        "      <td>4.134055</td>\n",
        "      <td>2.835543</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>sigma</th>\n",
        "      <td>1.0</td>\n",
        "      <td>1.038717</td>\n",
        "      <td>1.088577</td>\n",
        "      <td>1.060135</td>\n",
        "      <td>1.348887</td>\n",
        "    </tr>\n",
        "  </tbody>\n",
        "</table>\n",
        "</div>"
       ],
       "output_type": "pyout",
       "prompt_number": 32,
       "text": [
        "       1st       2nd       3rd       4th       5th\n",
        "rho    1.0  4.799108  4.623140  4.134055  2.835543\n",
        "sigma  1.0  1.038717  1.088577  1.060135  1.348887"
       ]
      }
     ],
     "prompt_number": 32
    },
    {
     "cell_type": "heading",
     "level": 3,
     "metadata": {},
     "source": [
      "Show the history of reproduction number"
     ]
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "df = scenario.param_history(targets=[\"Rt\"], divide_by_first=False, show_box_plot=True)\n",
      "df.T"
     ],
     "language": "python",
     "metadata": {},
     "outputs": [
      {
       "output_type": "display_data",
       "png": "\n",
       "text": [
        "<Figure size 648x432 with 1 Axes>"
       ]
      },
      {
       "html": [
        "<div>\n",
        "<style scoped>\n",
        "    .dataframe tbody tr th:only-of-type {\n",
        "        vertical-align: middle;\n",
        "    }\n",
        "\n",
        "    .dataframe tbody tr th {\n",
        "        vertical-align: top;\n",
        "    }\n",
        "\n",
        "    .dataframe thead th {\n",
        "        text-align: right;\n",
        "    }\n",
        "</style>\n",
        "<table border=\"1\" class=\"dataframe\">\n",
        "  <thead>\n",
        "    <tr style=\"text-align: right;\">\n",
        "      <th></th>\n",
        "      <th>1st</th>\n",
        "      <th>2nd</th>\n",
        "      <th>3rd</th>\n",
        "      <th>4th</th>\n",
        "      <th>5th</th>\n",
        "    </tr>\n",
        "  </thead>\n",
        "  <tbody>\n",
        "    <tr>\n",
        "      <th>Rt</th>\n",
        "      <td>0.38</td>\n",
        "      <td>1.97</td>\n",
        "      <td>1.81</td>\n",
        "      <td>1.66</td>\n",
        "      <td>0.89</td>\n",
        "    </tr>\n",
        "  </tbody>\n",
        "</table>\n",
        "</div>"
       ],
       "output_type": "pyout",
       "prompt_number": 33,
       "text": [
        "     1st   2nd   3rd   4th   5th\n",
        "Rt  0.38  1.97  1.81  1.66  0.89"
       ]
      }
     ],
     "prompt_number": 33
    },
    {
     "cell_type": "heading",
     "level": 3,
     "metadata": {},
     "source": [
      "Simulate the number of cases"
     ]
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "scenario.clear(name=\"Main\")\n",
      "scenario.add(end_date=\"01Jan2021\", name=\"Main\")\n",
      "main_sim_df = scenario.simulate(name=\"Main\")\n",
      "main_sim_df.tail()"
     ],
     "language": "python",
     "metadata": {},
     "outputs": [
      {
       "output_type": "display_data",
       "png": "\n",
       "text": [
        "<Figure size 648x432 with 1 Axes>"
       ]
      },
      {
       "html": [
        "<div>\n",
        "<style scoped>\n",
        "    .dataframe tbody tr th:only-of-type {\n",
        "        vertical-align: middle;\n",
        "    }\n",
        "\n",
        "    .dataframe tbody tr th {\n",
        "        vertical-align: top;\n",
        "    }\n",
        "\n",
        "    .dataframe thead th {\n",
        "        text-align: right;\n",
        "    }\n",
        "</style>\n",
        "<table border=\"1\" class=\"dataframe\">\n",
        "  <thead>\n",
        "    <tr style=\"text-align: right;\">\n",
        "      <th></th>\n",
        "      <th>Date</th>\n",
        "      <th>Confirmed</th>\n",
        "      <th>Fatal</th>\n",
        "      <th>Infected</th>\n",
        "      <th>Recovered</th>\n",
        "    </tr>\n",
        "  </thead>\n",
        "  <tbody>\n",
        "    <tr>\n",
        "      <th>251</th>\n",
        "      <td>2020-12-29</td>\n",
        "      <td>133668</td>\n",
        "      <td>1788</td>\n",
        "      <td>3396</td>\n",
        "      <td>128484</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>252</th>\n",
        "      <td>2020-12-30</td>\n",
        "      <td>133943</td>\n",
        "      <td>1790</td>\n",
        "      <td>3362</td>\n",
        "      <td>128791</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>253</th>\n",
        "      <td>2020-12-31</td>\n",
        "      <td>134217</td>\n",
        "      <td>1793</td>\n",
        "      <td>3329</td>\n",
        "      <td>129095</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>254</th>\n",
        "      <td>2021-01-01</td>\n",
        "      <td>134486</td>\n",
        "      <td>1795</td>\n",
        "      <td>3296</td>\n",
        "      <td>129395</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>255</th>\n",
        "      <td>2021-01-02</td>\n",
        "      <td>134753</td>\n",
        "      <td>1797</td>\n",
        "      <td>3263</td>\n",
        "      <td>129693</td>\n",
        "    </tr>\n",
        "  </tbody>\n",
        "</table>\n",
        "</div>"
       ],
       "output_type": "pyout",
       "prompt_number": 34,
       "text": [
        "          Date  Confirmed  Fatal  Infected  Recovered\n",
        "251 2020-12-29     133668   1788      3396     128484\n",
        "252 2020-12-30     133943   1790      3362     128791\n",
        "253 2020-12-31     134217   1793      3329     129095\n",
        "254 2021-01-01     134486   1795      3296     129395\n",
        "255 2021-01-02     134753   1797      3263     129693"
       ]
      }
     ],
     "prompt_number": 34
    },
    {
     "cell_type": "markdown",
     "metadata": {},
     "source": [
      "### Simulate another scenario\n",
      "If $\\sigma$ will be double in 30 days, how many cases will be?"
     ]
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "sigma_current = scenario.get(\"sigma\", name=\"Main\", phase=\"last\")\n",
      "sigma_current"
     ],
     "language": "python",
     "metadata": {},
     "outputs": [
      {
       "output_type": "pyout",
       "prompt_number": 35,
       "text": [
        "0.09085256148016116"
       ]
      }
     ],
     "prompt_number": 35
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "sigma_new = sigma_current * 2\n",
      "sigma_new"
     ],
     "language": "python",
     "metadata": {},
     "outputs": [
      {
       "output_type": "pyout",
       "prompt_number": 36,
       "text": [
        "0.18170512296032232"
       ]
      }
     ],
     "prompt_number": 36
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "scenario.clear(name=\"Medicine\")\n",
      "scenario.add(name=\"Medicine\", days=30, sigma=sigma_current)\n",
      "scenario.add(name=\"Medicine\", end_date=\"01Jan2021\", sigma=sigma_new)\n",
      "scenario.summary()"
     ],
     "language": "python",
     "metadata": {},
     "outputs": [
      {
       "html": [
        "<div>\n",
        "<style scoped>\n",
        "    .dataframe tbody tr th:only-of-type {\n",
        "        vertical-align: middle;\n",
        "    }\n",
        "\n",
        "    .dataframe tbody tr th {\n",
        "        vertical-align: top;\n",
        "    }\n",
        "\n",
        "    .dataframe thead th {\n",
        "        text-align: right;\n",
        "    }\n",
        "</style>\n",
        "<table border=\"1\" class=\"dataframe\">\n",
        "  <thead>\n",
        "    <tr style=\"text-align: right;\">\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th>Type</th>\n",
        "      <th>Start</th>\n",
        "      <th>End</th>\n",
        "      <th>Population</th>\n",
        "      <th>ODE</th>\n",
        "      <th>Rt</th>\n",
        "      <th>theta</th>\n",
        "      <th>kappa</th>\n",
        "      <th>rho</th>\n",
        "      <th>sigma</th>\n",
        "      <th>tau</th>\n",
        "      <th>alpha1 [-]</th>\n",
        "      <th>1/gamma [day]</th>\n",
        "      <th>1/alpha2 [day]</th>\n",
        "      <th>1/beta [day]</th>\n",
        "      <th>RMSLE</th>\n",
        "      <th>Trials</th>\n",
        "      <th>Runtime</th>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>Scenario</th>\n",
        "      <th>Phase</th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "    </tr>\n",
        "  </thead>\n",
        "  <tbody>\n",
        "    <tr>\n",
        "      <th rowspan=\"6\" valign=\"top\">Main</th>\n",
        "      <th>1st</th>\n",
        "      <td>Past</td>\n",
        "      <td>22Apr2020</td>\n",
        "      <td>07Jul2020</td>\n",
        "      <td>126529100</td>\n",
        "      <td>SIR-F</td>\n",
        "      <td>0.38</td>\n",
        "      <td>0.116394</td>\n",
        "      <td>0.000003</td>\n",
        "      <td>0.028789</td>\n",
        "      <td>0.067354</td>\n",
        "      <td>1440</td>\n",
        "      <td>0.116</td>\n",
        "      <td>14</td>\n",
        "      <td>327449</td>\n",
        "      <td>34</td>\n",
        "      <td>0.998141</td>\n",
        "      <td>2013</td>\n",
        "      <td>1 min  0 sec</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>2nd</th>\n",
        "      <td>Past</td>\n",
        "      <td>08Jul2020</td>\n",
        "      <td>23Jul2020</td>\n",
        "      <td>126529100</td>\n",
        "      <td>SIR-F</td>\n",
        "      <td>1.97</td>\n",
        "      <td>0.000739</td>\n",
        "      <td>0.000057</td>\n",
        "      <td>0.138159</td>\n",
        "      <td>0.069961</td>\n",
        "      <td>1440</td>\n",
        "      <td>0.001</td>\n",
        "      <td>14</td>\n",
        "      <td>17681</td>\n",
        "      <td>7</td>\n",
        "      <td>0.0285429</td>\n",
        "      <td>2084</td>\n",
        "      <td>1 min  0 sec</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>3rd</th>\n",
        "      <td>Past</td>\n",
        "      <td>24Jul2020</td>\n",
        "      <td>31Jul2020</td>\n",
        "      <td>126529100</td>\n",
        "      <td>SIR-F</td>\n",
        "      <td>1.81</td>\n",
        "      <td>0.001713</td>\n",
        "      <td>0.000095</td>\n",
        "      <td>0.133093</td>\n",
        "      <td>0.073320</td>\n",
        "      <td>1440</td>\n",
        "      <td>0.002</td>\n",
        "      <td>13</td>\n",
        "      <td>10502</td>\n",
        "      <td>7</td>\n",
        "      <td>0.0177082</td>\n",
        "      <td>221</td>\n",
        "      <td>0 min  5 sec</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>4th</th>\n",
        "      <td>Past</td>\n",
        "      <td>01Aug2020</td>\n",
        "      <td>09Aug2020</td>\n",
        "      <td>126529100</td>\n",
        "      <td>SIR-F</td>\n",
        "      <td>1.66</td>\n",
        "      <td>0.000967</td>\n",
        "      <td>0.000117</td>\n",
        "      <td>0.119013</td>\n",
        "      <td>0.071404</td>\n",
        "      <td>1440</td>\n",
        "      <td>0.001</td>\n",
        "      <td>14</td>\n",
        "      <td>8534</td>\n",
        "      <td>8</td>\n",
        "      <td>0.0331952</td>\n",
        "      <td>695</td>\n",
        "      <td>0 min 15 sec</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>5th</th>\n",
        "      <td>Past</td>\n",
        "      <td>10Aug2020</td>\n",
        "      <td>23Aug2020</td>\n",
        "      <td>126529100</td>\n",
        "      <td>SIR-F</td>\n",
        "      <td>0.89</td>\n",
        "      <td>0.001041</td>\n",
        "      <td>0.000621</td>\n",
        "      <td>0.081631</td>\n",
        "      <td>0.090853</td>\n",
        "      <td>1440</td>\n",
        "      <td>0.001</td>\n",
        "      <td>11</td>\n",
        "      <td>1611</td>\n",
        "      <td>12</td>\n",
        "      <td>0.02589</td>\n",
        "      <td>1801</td>\n",
        "      <td>1 min  0 sec</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>6th</th>\n",
        "      <td>Future</td>\n",
        "      <td>24Aug2020</td>\n",
        "      <td>01Jan2021</td>\n",
        "      <td>126529100</td>\n",
        "      <td>SIR-F</td>\n",
        "      <td>0.89</td>\n",
        "      <td>0.001041</td>\n",
        "      <td>0.000621</td>\n",
        "      <td>0.081631</td>\n",
        "      <td>0.090853</td>\n",
        "      <td>1440</td>\n",
        "      <td>0.001</td>\n",
        "      <td>11</td>\n",
        "      <td>1611</td>\n",
        "      <td>12</td>\n",
        "      <td>-</td>\n",
        "      <td>-</td>\n",
        "      <td>-</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th rowspan=\"7\" valign=\"top\">Medicine</th>\n",
        "      <th>1st</th>\n",
        "      <td>Past</td>\n",
        "      <td>22Apr2020</td>\n",
        "      <td>07Jul2020</td>\n",
        "      <td>126529100</td>\n",
        "      <td>SIR-F</td>\n",
        "      <td>0.38</td>\n",
        "      <td>0.116394</td>\n",
        "      <td>0.000003</td>\n",
        "      <td>0.028789</td>\n",
        "      <td>0.067354</td>\n",
        "      <td>1440</td>\n",
        "      <td>0.116</td>\n",
        "      <td>14</td>\n",
        "      <td>327449</td>\n",
        "      <td>34</td>\n",
        "      <td>0.998141</td>\n",
        "      <td>2013</td>\n",
        "      <td>1 min  0 sec</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>2nd</th>\n",
        "      <td>Past</td>\n",
        "      <td>08Jul2020</td>\n",
        "      <td>23Jul2020</td>\n",
        "      <td>126529100</td>\n",
        "      <td>SIR-F</td>\n",
        "      <td>1.97</td>\n",
        "      <td>0.000739</td>\n",
        "      <td>0.000057</td>\n",
        "      <td>0.138159</td>\n",
        "      <td>0.069961</td>\n",
        "      <td>1440</td>\n",
        "      <td>0.001</td>\n",
        "      <td>14</td>\n",
        "      <td>17681</td>\n",
        "      <td>7</td>\n",
        "      <td>0.0285429</td>\n",
        "      <td>2084</td>\n",
        "      <td>1 min  0 sec</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>3rd</th>\n",
        "      <td>Past</td>\n",
        "      <td>24Jul2020</td>\n",
        "      <td>31Jul2020</td>\n",
        "      <td>126529100</td>\n",
        "      <td>SIR-F</td>\n",
        "      <td>1.81</td>\n",
        "      <td>0.001713</td>\n",
        "      <td>0.000095</td>\n",
        "      <td>0.133093</td>\n",
        "      <td>0.073320</td>\n",
        "      <td>1440</td>\n",
        "      <td>0.002</td>\n",
        "      <td>13</td>\n",
        "      <td>10502</td>\n",
        "      <td>7</td>\n",
        "      <td>0.0177082</td>\n",
        "      <td>221</td>\n",
        "      <td>0 min  5 sec</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>4th</th>\n",
        "      <td>Past</td>\n",
        "      <td>01Aug2020</td>\n",
        "      <td>09Aug2020</td>\n",
        "      <td>126529100</td>\n",
        "      <td>SIR-F</td>\n",
        "      <td>1.66</td>\n",
        "      <td>0.000967</td>\n",
        "      <td>0.000117</td>\n",
        "      <td>0.119013</td>\n",
        "      <td>0.071404</td>\n",
        "      <td>1440</td>\n",
        "      <td>0.001</td>\n",
        "      <td>14</td>\n",
        "      <td>8534</td>\n",
        "      <td>8</td>\n",
        "      <td>0.0331952</td>\n",
        "      <td>695</td>\n",
        "      <td>0 min 15 sec</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>5th</th>\n",
        "      <td>Past</td>\n",
        "      <td>10Aug2020</td>\n",
        "      <td>23Aug2020</td>\n",
        "      <td>126529100</td>\n",
        "      <td>SIR-F</td>\n",
        "      <td>0.89</td>\n",
        "      <td>0.001041</td>\n",
        "      <td>0.000621</td>\n",
        "      <td>0.081631</td>\n",
        "      <td>0.090853</td>\n",
        "      <td>1440</td>\n",
        "      <td>0.001</td>\n",
        "      <td>11</td>\n",
        "      <td>1611</td>\n",
        "      <td>12</td>\n",
        "      <td>0.02589</td>\n",
        "      <td>1801</td>\n",
        "      <td>1 min  0 sec</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>6th</th>\n",
        "      <td>Future</td>\n",
        "      <td>24Aug2020</td>\n",
        "      <td>23Sep2020</td>\n",
        "      <td>126529100</td>\n",
        "      <td>SIR-F</td>\n",
        "      <td>0.89</td>\n",
        "      <td>0.001041</td>\n",
        "      <td>0.000621</td>\n",
        "      <td>0.081631</td>\n",
        "      <td>0.090853</td>\n",
        "      <td>1440</td>\n",
        "      <td>0.001</td>\n",
        "      <td>11</td>\n",
        "      <td>1611</td>\n",
        "      <td>12</td>\n",
        "      <td>-</td>\n",
        "      <td>-</td>\n",
        "      <td>-</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>7th</th>\n",
        "      <td>Future</td>\n",
        "      <td>24Sep2020</td>\n",
        "      <td>01Jan2021</td>\n",
        "      <td>126529100</td>\n",
        "      <td>SIR-F</td>\n",
        "      <td>0.45</td>\n",
        "      <td>0.001041</td>\n",
        "      <td>0.000621</td>\n",
        "      <td>0.081631</td>\n",
        "      <td>0.181705</td>\n",
        "      <td>1440</td>\n",
        "      <td>0.001</td>\n",
        "      <td>5</td>\n",
        "      <td>1611</td>\n",
        "      <td>12</td>\n",
        "      <td>-</td>\n",
        "      <td>-</td>\n",
        "      <td>-</td>\n",
        "    </tr>\n",
        "  </tbody>\n",
        "</table>\n",
        "</div>"
       ],
       "output_type": "pyout",
       "prompt_number": 37,
       "text": [
        "                  Type      Start        End  Population    ODE    Rt  \\\n",
        "Scenario Phase                                                          \n",
        "Main     1st      Past  22Apr2020  07Jul2020   126529100  SIR-F  0.38   \n",
        "         2nd      Past  08Jul2020  23Jul2020   126529100  SIR-F  1.97   \n",
        "         3rd      Past  24Jul2020  31Jul2020   126529100  SIR-F  1.81   \n",
        "         4th      Past  01Aug2020  09Aug2020   126529100  SIR-F  1.66   \n",
        "         5th      Past  10Aug2020  23Aug2020   126529100  SIR-F  0.89   \n",
        "         6th    Future  24Aug2020  01Jan2021   126529100  SIR-F  0.89   \n",
        "Medicine 1st      Past  22Apr2020  07Jul2020   126529100  SIR-F  0.38   \n",
        "         2nd      Past  08Jul2020  23Jul2020   126529100  SIR-F  1.97   \n",
        "         3rd      Past  24Jul2020  31Jul2020   126529100  SIR-F  1.81   \n",
        "         4th      Past  01Aug2020  09Aug2020   126529100  SIR-F  1.66   \n",
        "         5th      Past  10Aug2020  23Aug2020   126529100  SIR-F  0.89   \n",
        "         6th    Future  24Aug2020  23Sep2020   126529100  SIR-F  0.89   \n",
        "         7th    Future  24Sep2020  01Jan2021   126529100  SIR-F  0.45   \n",
        "\n",
        "                   theta     kappa       rho     sigma   tau  alpha1 [-]  \\\n",
        "Scenario Phase                                                             \n",
        "Main     1st    0.116394  0.000003  0.028789  0.067354  1440       0.116   \n",
        "         2nd    0.000739  0.000057  0.138159  0.069961  1440       0.001   \n",
        "         3rd    0.001713  0.000095  0.133093  0.073320  1440       0.002   \n",
        "         4th    0.000967  0.000117  0.119013  0.071404  1440       0.001   \n",
        "         5th    0.001041  0.000621  0.081631  0.090853  1440       0.001   \n",
        "         6th    0.001041  0.000621  0.081631  0.090853  1440       0.001   \n",
        "Medicine 1st    0.116394  0.000003  0.028789  0.067354  1440       0.116   \n",
        "         2nd    0.000739  0.000057  0.138159  0.069961  1440       0.001   \n",
        "         3rd    0.001713  0.000095  0.133093  0.073320  1440       0.002   \n",
        "         4th    0.000967  0.000117  0.119013  0.071404  1440       0.001   \n",
        "         5th    0.001041  0.000621  0.081631  0.090853  1440       0.001   \n",
        "         6th    0.001041  0.000621  0.081631  0.090853  1440       0.001   \n",
        "         7th    0.001041  0.000621  0.081631  0.181705  1440       0.001   \n",
        "\n",
        "                1/gamma [day]  1/alpha2 [day]  1/beta [day]      RMSLE Trials  \\\n",
        "Scenario Phase                                                                  \n",
        "Main     1st               14          327449            34   0.998141   2013   \n",
        "         2nd               14           17681             7  0.0285429   2084   \n",
        "         3rd               13           10502             7  0.0177082    221   \n",
        "         4th               14            8534             8  0.0331952    695   \n",
        "         5th               11            1611            12    0.02589   1801   \n",
        "         6th               11            1611            12          -      -   \n",
        "Medicine 1st               14          327449            34   0.998141   2013   \n",
        "         2nd               14           17681             7  0.0285429   2084   \n",
        "         3rd               13           10502             7  0.0177082    221   \n",
        "         4th               14            8534             8  0.0331952    695   \n",
        "         5th               11            1611            12    0.02589   1801   \n",
        "         6th               11            1611            12          -      -   \n",
        "         7th                5            1611            12          -      -   \n",
        "\n",
        "                     Runtime  \n",
        "Scenario Phase                \n",
        "Main     1st    1 min  0 sec  \n",
        "         2nd    1 min  0 sec  \n",
        "         3rd    0 min  5 sec  \n",
        "         4th    0 min 15 sec  \n",
        "         5th    1 min  0 sec  \n",
        "         6th               -  \n",
        "Medicine 1st    1 min  0 sec  \n",
        "         2nd    1 min  0 sec  \n",
        "         3rd    0 min  5 sec  \n",
        "         4th    0 min 15 sec  \n",
        "         5th    1 min  0 sec  \n",
        "         6th               -  \n",
        "         7th               -  "
       ]
      }
     ],
     "prompt_number": 37
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "scenario.simulate(name=\"Medicine\").tail()"
     ],
     "language": "python",
     "metadata": {},
     "outputs": [
      {
       "output_type": "display_data",
       "png": "\n",
       "text": [
        "<Figure size 648x432 with 1 Axes>"
       ]
      },
      {
       "html": [
        "<div>\n",
        "<style scoped>\n",
        "    .dataframe tbody tr th:only-of-type {\n",
        "        vertical-align: middle;\n",
        "    }\n",
        "\n",
        "    .dataframe tbody tr th {\n",
        "        vertical-align: top;\n",
        "    }\n",
        "\n",
        "    .dataframe thead th {\n",
        "        text-align: right;\n",
        "    }\n",
        "</style>\n",
        "<table border=\"1\" class=\"dataframe\">\n",
        "  <thead>\n",
        "    <tr style=\"text-align: right;\">\n",
        "      <th></th>\n",
        "      <th>Date</th>\n",
        "      <th>Confirmed</th>\n",
        "      <th>Fatal</th>\n",
        "      <th>Infected</th>\n",
        "      <th>Recovered</th>\n",
        "    </tr>\n",
        "  </thead>\n",
        "  <tbody>\n",
        "    <tr>\n",
        "      <th>251</th>\n",
        "      <td>2020-12-29</td>\n",
        "      <td>96237</td>\n",
        "      <td>1464</td>\n",
        "      <td>1</td>\n",
        "      <td>94772</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>252</th>\n",
        "      <td>2020-12-30</td>\n",
        "      <td>96237</td>\n",
        "      <td>1464</td>\n",
        "      <td>1</td>\n",
        "      <td>94772</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>253</th>\n",
        "      <td>2020-12-31</td>\n",
        "      <td>96236</td>\n",
        "      <td>1464</td>\n",
        "      <td>0</td>\n",
        "      <td>94772</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>254</th>\n",
        "      <td>2021-01-01</td>\n",
        "      <td>96237</td>\n",
        "      <td>1464</td>\n",
        "      <td>0</td>\n",
        "      <td>94773</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>255</th>\n",
        "      <td>2021-01-02</td>\n",
        "      <td>96237</td>\n",
        "      <td>1464</td>\n",
        "      <td>0</td>\n",
        "      <td>94773</td>\n",
        "    </tr>\n",
        "  </tbody>\n",
        "</table>\n",
        "</div>"
       ],
       "output_type": "pyout",
       "prompt_number": 38,
       "text": [
        "          Date  Confirmed  Fatal  Infected  Recovered\n",
        "251 2020-12-29      96237   1464         1      94772\n",
        "252 2020-12-30      96237   1464         1      94772\n",
        "253 2020-12-31      96236   1464         0      94772\n",
        "254 2021-01-01      96237   1464         0      94773\n",
        "255 2021-01-02      96237   1464         0      94773"
       ]
      }
     ],
     "prompt_number": 38
    },
    {
     "cell_type": "heading",
     "level": 3,
     "metadata": {},
     "source": [
      "Compare the scenarios"
     ]
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "scenario.describe()"
     ],
     "language": "python",
     "metadata": {},
     "outputs": [
      {
       "html": [
        "<div>\n",
        "<style scoped>\n",
        "    .dataframe tbody tr th:only-of-type {\n",
        "        vertical-align: middle;\n",
        "    }\n",
        "\n",
        "    .dataframe tbody tr th {\n",
        "        vertical-align: top;\n",
        "    }\n",
        "\n",
        "    .dataframe thead th {\n",
        "        text-align: right;\n",
        "    }\n",
        "</style>\n",
        "<table border=\"1\" class=\"dataframe\">\n",
        "  <thead>\n",
        "    <tr style=\"text-align: right;\">\n",
        "      <th></th>\n",
        "      <th>max(Infected)</th>\n",
        "      <th>argmax(Infected)</th>\n",
        "      <th>Infected on 02Jan2021</th>\n",
        "      <th>Fatal on 02Jan2021</th>\n",
        "      <th>7th_Rt</th>\n",
        "    </tr>\n",
        "  </thead>\n",
        "  <tbody>\n",
        "    <tr>\n",
        "      <th>Main</th>\n",
        "      <td>13885</td>\n",
        "      <td>10Aug2020</td>\n",
        "      <td>3263</td>\n",
        "      <td>1797</td>\n",
        "      <td>-</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>Medicine</th>\n",
        "      <td>13885</td>\n",
        "      <td>10Aug2020</td>\n",
        "      <td>0</td>\n",
        "      <td>1464</td>\n",
        "      <td>0.45</td>\n",
        "    </tr>\n",
        "  </tbody>\n",
        "</table>\n",
        "</div>"
       ],
       "output_type": "pyout",
       "prompt_number": 39,
       "text": [
        "          max(Infected) argmax(Infected)  Infected on 02Jan2021  \\\n",
        "Main              13885        10Aug2020                   3263   \n",
        "Medicine          13885        10Aug2020                      0   \n",
        "\n",
        "          Fatal on 02Jan2021 7th_Rt  \n",
        "Main                    1797      -  \n",
        "Medicine                1464   0.45  "
       ]
      }
     ],
     "prompt_number": 39
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "# version > 2.7.3-alpha\n",
      "_ = scenario.history(target=\"Rt\")"
     ],
     "language": "python",
     "metadata": {},
     "outputs": [
      {
       "output_type": "display_data",
       "png": "\n",
       "text": [
        "<Figure size 648x432 with 1 Axes>"
       ]
      }
     ],
     "prompt_number": 40
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "# version > 2.7.3-alpha\n",
      "_ = scenario.history(target=\"rho\")"
     ],
     "language": "python",
     "metadata": {},
     "outputs": [
      {
       "output_type": "display_data",
       "png": "\n",
       "text": [
        "<Figure size 648x432 with 1 Axes>"
       ]
      }
     ],
     "prompt_number": 41
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "# version > 2.7.3-alpha\n",
      "_ = scenario.history(target=\"sigma\")"
     ],
     "language": "python",
     "metadata": {},
     "outputs": [
      {
       "output_type": "display_data",
       "png": "\n",
       "text": [
        "<Figure size 648x432 with 1 Axes>"
       ]
      }
     ],
     "prompt_number": 42
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "# version > 2.7.3-alpha\n",
      "_ = scenario.history(target=\"Infected\")"
     ],
     "language": "python",
     "metadata": {},
     "outputs": [
      {
       "output_type": "display_data",
       "png": "\n",
       "text": [
        "<Figure size 648x432 with 1 Axes>"
       ]
      }
     ],
     "prompt_number": 43
    }
   ],
   "metadata": {}
  }
 ]
}
