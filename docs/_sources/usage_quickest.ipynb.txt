{
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3.8.2 64-bit ('covid19-sir': pipenv)",
   "name": "python_defaultSpec_1596263359952"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": 3
  },
  "name": ""
 },
 "nbformat": 3,
 "nbformat_minor": 0,
 "worksheets": [
  {
   "cells": [
    {
     "cell_type": "heading",
     "level": 1,
     "metadata": {},
     "source": [
      "Usage (quickest version)"
     ]
    },
    {
     "cell_type": "heading",
     "level": 2,
     "metadata": {},
     "source": [
      "Preparation"
     ]
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "# Standard users\n",
      "# !pip install covsirphy"
     ],
     "language": "python",
     "metadata": {},
     "outputs": [],
     "prompt_number": 1
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "# Developers (Note: this notebook is in example directory)\n",
      "import os\n",
      "os.chdir(\"../\")"
     ],
     "language": "python",
     "metadata": {},
     "outputs": [],
     "prompt_number": 2
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "from pprint import pprint"
     ],
     "language": "python",
     "metadata": {},
     "outputs": [],
     "prompt_number": 3
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "import covsirphy as cs\n",
      "cs.__version__"
     ],
     "language": "python",
     "metadata": {
      "tags": []
     },
     "outputs": [
      {
       "output_type": "pyout",
       "prompt_number": 4,
       "text": [
        "'2.7.3-alpha.new.202.203.206'"
       ]
      }
     ],
     "prompt_number": 4
    },
    {
     "cell_type": "markdown",
     "metadata": {},
     "source": [
      "## Dataset preparation\n",
      "Download the datasets to \"input\" direcotry and load them.\n",
      "\n",
      "If \"input\" directory has the datasets, `DataLoader` will load the local files. If the datasets were updated in remote servers, `DataLoader` will update the local files automatically."
     ]
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "# Standard users and developers\n",
      "data_loader = cs.DataLoader(\"input\")\n",
      "# The number of cases (JHU style)\n",
      "jhu_data = data_loader.jhu(verbose=False)\n",
      "# Population in each country\n",
      "population_data = data_loader.population(verbose=False)"
     ],
     "language": "python",
     "metadata": {
      "tags": []
     },
     "outputs": [],
     "prompt_number": 5
    },
    {
     "cell_type": "markdown",
     "metadata": {},
     "source": [
      "Note:  \n",
      "Datasets were retrieved via [COVID-19 Data Hub](https://covid19datahub.io/https://covid19datahub.io/) and the citation is  \n",
      "Guidotti, E., Ardia, D., (2020), \"COVID-19 Data Hub\", Working paper, doi: 10.13140/RG.2.2.11649.81763.\n"
     ]
    },
    {
     "cell_type": "markdown",
     "metadata": {},
     "source": [
      "Scenario analysis can be performed for the following countries."
     ]
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "pprint(set(jhu_data.countries()) & set(population_data.countries()), compact=True)"
     ],
     "language": "python",
     "metadata": {
      "tags": []
     },
     "outputs": [
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "{"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Afghanistan'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Albania'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Algeria'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Andorra'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Angola'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        " "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Antigua and Barbuda'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Argentina'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Armenia'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Australia'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Austria'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        " "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Azerbaijan'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Bahamas'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Bahrain'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Bangladesh'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Barbados'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Belarus'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        " "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Belgium'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Belize'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Benin'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Bermuda'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Bhutan'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Bolivia'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        " "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Bosnia and Herzegovina'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Botswana'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Brazil'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Brunei'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Bulgaria'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        " "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Burkina Faso'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Burundi'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Cambodia'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Cameroon'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Canada'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Cape Verde'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        " "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Central African Republic'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Chad'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Chile'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'China'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Colombia'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Comoros'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        " "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Congo'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Costa Atlantica'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Costa Rica'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Croatia'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Cuba'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Cyprus'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        " "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Czech Republic'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Denmark'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Djibouti'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Dominica'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Dominican Republic'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        " "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Ecuador'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Egypt'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'El Salvador'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Equatorial Guinea'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Eritrea'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Estonia'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        " "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Ethiopia'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Fiji'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Finland'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'France'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Gabon'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Gambia'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Georgia'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        " "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Germany'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Ghana'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Greece'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Grenada'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Guatemala'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Guinea'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        " "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Guinea-Bissau'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Guyana'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Haiti'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Holy See'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Honduras'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Hungary'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        " "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Iceland'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'India'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Indonesia'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Iran'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Iraq'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Ireland'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Israel'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Italy'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        " "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Ivory Coast'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Jamaica'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Japan'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Jordan'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Kazakhstan'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Kenya'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        " "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Korea, South'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Kosovo'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Kuwait'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Kyrgyzstan'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Laos'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Latvia'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Lebanon'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        " "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Lesotho'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Liberia'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Libya'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Liechtenstein'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Lithuania'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Luxembourg'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        " "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Macedonia'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Madagascar'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Malawi'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Malaysia'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Maldives'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Mali'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Malta'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        " "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Mauritania'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Mauritius'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Mexico'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Moldova'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Monaco'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Mongolia'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        " "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Montenegro'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Morocco'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Mozambique'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Myanmar'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Namibia'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Nepal'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        " "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Netherlands'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'New Zealand'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Nicaragua'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Niger'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Nigeria'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Norway'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        " "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Oman'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Pakistan'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Palestine'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Panama'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Papua New Guinea'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Paraguay'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        " "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Peru'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Philippines'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Poland'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Portugal'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Qatar'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Romania'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Russia'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        " "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Rwanda'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Saint Kitts and Nevis'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Saint Lucia'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        " "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Saint Vincent and the Grenadines'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'San Marino'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Sao Tome and Principe'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        " "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Saudi Arabia'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Senegal'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Serbia'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Seychelles'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Sierra Leone'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Singapore'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        " "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Slovakia'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Slovenia'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Somalia'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'South Africa'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'South Sudan'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Spain'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        " "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Sri Lanka'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Sudan'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Suriname'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Swaziland'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Switzerland'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Syria'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        " "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Taiwan'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Tajikistan'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Tanzania'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Thailand'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Timor-Leste'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Togo'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        " "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Trinidad and Tobago'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Tunisia'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Turkey'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'UK'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Uganda'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Ukraine'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        " "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'United Arab Emirates'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'United States'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Uruguay'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Uzbekistan'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Venezuela'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        " "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Vietnam'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Western Sahara'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Yemen'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Zambia'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Zimbabwe'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "}"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      }
     ],
     "prompt_number": 6
    },
    {
     "cell_type": "markdown",
     "metadata": {},
     "source": [
      "## Start scenario analysis\n",
      "As an example, we will analysis the number of cases in Italy."
     ]
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "scenario = cs.Scenario(jhu_data, population_data, country=\"Italy\")"
     ],
     "language": "python",
     "metadata": {},
     "outputs": [],
     "prompt_number": 7
    },
    {
     "cell_type": "heading",
     "level": 2,
     "metadata": {},
     "source": [
      "Check records"
     ]
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "_ = scenario.records()"
     ],
     "language": "python",
     "metadata": {},
     "outputs": [
      {
       "output_type": "display_data",
       "png": "\n",
       "text": [
        "<Figure size 648x432 with 1 Axes>"
       ]
      }
     ],
     "prompt_number": 8
    },
    {
     "cell_type": "markdown",
     "metadata": {},
     "source": [
      "## S-R trend analysis\n",
      "S-R trend analysis finds the change points of SIR-derived ODE parameters."
     ]
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "scenario.trend()"
     ],
     "language": "python",
     "metadata": {},
     "outputs": [
      {
       "output_type": "display_data",
       "png": "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53HVVVfxyy+/cNttt/Hmm28yZMgQdtllF5YuXcqHH35I69atad68+XrHqyrLli2juLiYbbfddm0yGHy1bt2aZs2aZclhOLh2XdSSK74t6csMNqYvy1x8cbhrLYcdLwziqAniqytKXPDsgscg999/PwAHHXQQAK1ateLmm2/eoNxnn33GbbfdxsiRI/nHP/5BYWEhHTt2pFWrVhQXF9OuXTu6du3KzJkzWbVq1QbHFxcX88svvzBz5kx69uzJQQcdtEFi2KJFi2jNpoFr10UtrvrOJCJSCNwGDMVbceNdVR0hImOA61V1tV9uPN7SbHdlTau19KWPjekzDCOXCHYRA+t1FwOsWrWKPn36rE0Mx44dy9KlS5k4cSItW7akbdu2FBcXbxBXVVm4cCEdOnRg5513pk2bNrz00kv8+9//5pBDDuHqq6+msLAQb+ECw1hHLrf0icideEuqna+qKiJdVHWBiCjQWlWX+eXGY0lf7pNO0jd37lzA66IJg7DjhUEcNUF8dUWJC55d8BgkKr+JYwcTt91444388ssvLF26dO3rpptuori4mLZt27LFFluwbNmyDeI2a9aMNm3asGDBAr788ku22GILfve73/HEE08wceJEjj76aG655ZbQE0PXrotacsV3riZ9ItIK+A7oXpvc+dvHASOBz4EaYAhwO15L4BZAD+Bd4CTNYCJmSV8I2Ji++omjJoivrihxwbMLHoPEyW9iolhdXc1FF13EU089xZFHHsnhhx++NkF8+eWXad26Na1btyYvb/35B6uqqsjLy6Ompobp06fTokULZs6cSfv27Zk6dSpHHXUUN9988wbH1Uec6imT5IrvVJK+7y5+83ZgYCSCYEr3G/ce1VAhEdkBmOS/9gOWAZer6lt1tPRtjtcNXAN8AoxS1f+LxEESbExflrn88stjHS8M4qgJ4qsrSlzw7ILHIHHymzgvYX5+PmPHjmXs2A1XGXn//ffXJohjxozh6quv5qWXXqK4uJjWrVvTrl07WrduzaabbkqbNm3YfPPNARg82MsLrr32Wqqqqvj+++/p0qULqsqbb77JHnvsQUlJyQZPJg8f3gnVambO/AvFLTenZcvNKS7qRV5e8w20bUzE6frYSMkH+gKfqOoFIrIr8IyIbF5H+adUdSWAiHwM9AMylvRZS18I2Jg+wzCMcEg23nDbbbdlxowZ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\n",
       "text": [
        "<Figure size 648x432 with 1 Axes>"
       ]
      },
      {
       "output_type": "pyout",
       "prompt_number": 9,
       "text": [
        "<covsirphy.analysis.scenario.Scenario at 0x7f7ef0190f70>"
       ]
      }
     ],
     "prompt_number": 9
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "scenario.summary()"
     ],
     "language": "python",
     "metadata": {},
     "outputs": [
      {
       "html": [
        "<div>\n",
        "<style scoped>\n",
        "    .dataframe tbody tr th:only-of-type {\n",
        "        vertical-align: middle;\n",
        "    }\n",
        "\n",
        "    .dataframe tbody tr th {\n",
        "        vertical-align: top;\n",
        "    }\n",
        "\n",
        "    .dataframe thead th {\n",
        "        text-align: right;\n",
        "    }\n",
        "</style>\n",
        "<table border=\"1\" class=\"dataframe\">\n",
        "  <thead>\n",
        "    <tr style=\"text-align: right;\">\n",
        "      <th></th>\n",
        "      <th>Type</th>\n",
        "      <th>Start</th>\n",
        "      <th>End</th>\n",
        "      <th>Population</th>\n",
        "    </tr>\n",
        "  </thead>\n",
        "  <tbody>\n",
        "    <tr>\n",
        "      <th>1st</th>\n",
        "      <td>Past</td>\n",
        "      <td>23Mar2020</td>\n",
        "      <td>31Mar2020</td>\n",
        "      <td>60483973</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>2nd</th>\n",
        "      <td>Past</td>\n",
        "      <td>01Apr2020</td>\n",
        "      <td>11Apr2020</td>\n",
        "      <td>60483973</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>3rd</th>\n",
        "      <td>Past</td>\n",
        "      <td>12Apr2020</td>\n",
        "      <td>20Apr2020</td>\n",
        "      <td>60483973</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>4th</th>\n",
        "      <td>Past</td>\n",
        "      <td>21Apr2020</td>\n",
        "      <td>01May2020</td>\n",
        "      <td>60483973</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>5th</th>\n",
        "      <td>Past</td>\n",
        "      <td>02May2020</td>\n",
        "      <td>10May2020</td>\n",
        "      <td>60483973</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>6th</th>\n",
        "      <td>Past</td>\n",
        "      <td>11May2020</td>\n",
        "      <td>20May2020</td>\n",
        "      <td>60483973</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>7th</th>\n",
        "      <td>Past</td>\n",
        "      <td>21May2020</td>\n",
        "      <td>08Jun2020</td>\n",
        "      <td>60483973</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>8th</th>\n",
        "      <td>Past</td>\n",
        "      <td>09Jun2020</td>\n",
        "      <td>20Jul2020</td>\n",
        "      <td>60483973</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>9th</th>\n",
        "      <td>Past</td>\n",
        "      <td>21Jul2020</td>\n",
        "      <td>27Aug2020</td>\n",
        "      <td>60483973</td>\n",
        "    </tr>\n",
        "  </tbody>\n",
        "</table>\n",
        "</div>"
       ],
       "output_type": "pyout",
       "prompt_number": 10,
       "text": [
        "     Type      Start        End  Population\n",
        "1st  Past  23Mar2020  31Mar2020    60483973\n",
        "2nd  Past  01Apr2020  11Apr2020    60483973\n",
        "3rd  Past  12Apr2020  20Apr2020    60483973\n",
        "4th  Past  21Apr2020  01May2020    60483973\n",
        "5th  Past  02May2020  10May2020    60483973\n",
        "6th  Past  11May2020  20May2020    60483973\n",
        "7th  Past  21May2020  08Jun2020    60483973\n",
        "8th  Past  09Jun2020  20Jul2020    60483973\n",
        "9th  Past  21Jul2020  27Aug2020    60483973"
       ]
      }
     ],
     "prompt_number": 10
    },
    {
     "cell_type": "markdown",
     "metadata": {},
     "source": [
      "## Hyperparameter estimation of ODE models\n",
      "As an example, use SIR-F model."
     ]
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "scenario.estimate(cs.SIRF)"
     ],
     "language": "python",
     "metadata": {
      "tags": []
     },
     "outputs": [
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n",
        "<SIR-F model: parameter estimation>"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "Running optimization with 4 CPUs..."
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\t9th phase (21Jul2020 - 27Aug2020): finished 1405 trials in 1 min  1 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\t3rd phase (12Apr2020 - 20Apr2020): finished  257 trials in 0 min  5 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\t4th phase (21Apr2020 - 01May2020): finished  483 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\t6th phase (11May2020 - 20May2020): finished  235 trials in 0 min  5 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\t5th phase (02May2020 - 10May2020): finished  602 trials in 0 min 15 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\t7th phase (21May2020 - 08Jun2020): finished  177 trials in 0 min  5 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\t8th phase (09Jun2020 - 20Jul2020): finished  383 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\t2nd phase (01Apr2020 - 11Apr2020): finished 1922 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\t1st phase (23Mar2020 - 31Mar2020): finished 1915 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "Completed optimization. Total: 2 min  1 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      }
     ],
     "prompt_number": 11
    },
    {
     "cell_type": "heading",
     "level": 2,
     "metadata": {},
     "source": [
      "Show the history of reproduction number"
     ]
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "_ = scenario.param_history(targets=[\"Rt\"], divide_by_first=False)"
     ],
     "language": "python",
     "metadata": {},
     "outputs": [
      {
       "output_type": "display_data",
       "png": "\n",
       "text": [
        "<Figure size 648x432 with 1 Axes>"
       ]
      }
     ],
     "prompt_number": 12
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "# version >= 2.7.3-alpha\n",
      "_ = scenario.history(target=\"Rt\")"
     ],
     "language": "python",
     "metadata": {},
     "outputs": [
      {
       "output_type": "display_data",
       "png": "\n",
       "text": [
        "<Figure size 648x432 with 1 Axes>"
       ]
      }
     ],
     "prompt_number": 13
    },
    {
     "cell_type": "heading",
     "level": 2,
     "metadata": {},
     "source": [
      "Simulate the number of cases"
     ]
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "scenario.add(end_date=\"01Jan2021\")\n",
      "_ = scenario.simulate()"
     ],
     "language": "python",
     "metadata": {},
     "outputs": [
      {
       "output_type": "display_data",
       "png": "\n",
       "text": [
        "<Figure size 648x432 with 1 Axes>"
       ]
      }
     ],
     "prompt_number": 14
    }
   ],
   "metadata": {}
  }
 ]
}
