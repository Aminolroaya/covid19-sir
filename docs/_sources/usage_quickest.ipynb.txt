{
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3.8.2 64-bit ('covid19-sir': pipenv)",
   "name": "python_defaultSpec_1596263359952"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": 3
  },
  "name": ""
 },
 "nbformat": 3,
 "nbformat_minor": 0,
 "worksheets": [
  {
   "cells": [
    {
     "cell_type": "heading",
     "level": 1,
     "metadata": {},
     "source": [
      "Usage (quickest version)"
     ]
    },
    {
     "cell_type": "heading",
     "level": 2,
     "metadata": {},
     "source": [
      "Preparation"
     ]
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "# Standard users\n",
      "# !pip install covsirphy"
     ],
     "language": "python",
     "metadata": {},
     "outputs": [],
     "prompt_number": 1
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "# Developers (Note: this notebook is in example directory)\n",
      "import os\n",
      "os.chdir(\"../\")"
     ],
     "language": "python",
     "metadata": {},
     "outputs": [],
     "prompt_number": 2
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "from pprint import pprint"
     ],
     "language": "python",
     "metadata": {},
     "outputs": [],
     "prompt_number": 3
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "import covsirphy as cs\n",
      "cs.__version__"
     ],
     "language": "python",
     "metadata": {
      "tags": []
     },
     "outputs": [
      {
       "output_type": "pyout",
       "prompt_number": 4,
       "text": [
        "'2.6.0-delta.new.72.fix.120.155.157'"
       ]
      }
     ],
     "prompt_number": 4
    },
    {
     "cell_type": "markdown",
     "metadata": {},
     "source": [
      "## Dataset preparation\n",
      "Download the datasets to \"input\" direcotry and load them.\n",
      "\n",
      "If \"input\" directory has the datasets, `DataLoader` will load the local files. If the datasets were updated in remote servers, `DataLoader` will update the local files automatically."
     ]
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "# Standard users and developers\n",
      "data_loader = cs.DataLoader(\"input\")\n",
      "# The number of cases (JHU style)\n",
      "jhu_data = data_loader.jhu(verbose=False)\n",
      "# Population in each country\n",
      "population_data = data_loader.population(verbose=False)"
     ],
     "language": "python",
     "metadata": {
      "tags": []
     },
     "outputs": [],
     "prompt_number": 5
    },
    {
     "cell_type": "markdown",
     "metadata": {},
     "source": [
      "Note:  \n",
      "Datasets were retrieved via [COVID-19 Data Hub](https://covid19datahub.io/https://covid19datahub.io/) and the citation is  \n",
      "Guidotti, E., Ardia, D., (2020), \"COVID-19 Data Hub\", Working paper, doi: 10.13140/RG.2.2.11649.81763.\n"
     ]
    },
    {
     "cell_type": "markdown",
     "metadata": {},
     "source": [
      "Scenario analysis can be performed for the following countries."
     ]
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "pprint(set(jhu_data.countries()) & set(population_data.countries()), compact=True)"
     ],
     "language": "python",
     "metadata": {
      "tags": []
     },
     "outputs": [
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "{"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Afghanistan'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Albania'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Algeria'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Andorra'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Angola'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        " "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Antigua and Barbuda'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Argentina'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Armenia'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Australia'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Austria'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        " "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Azerbaijan'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Bahamas'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Bahrain'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Bangladesh'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Barbados'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Belarus'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        " "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Belgium'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Belize'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Benin'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Bermuda'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Bhutan'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Bolivia'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        " "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Bosnia and Herzegovina'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Botswana'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Brazil'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Brunei'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Bulgaria'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        " "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Burkina Faso'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Burundi'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Cambodia'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Cameroon'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Canada'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Cape Verde'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        " "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Central African Republic'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Chad'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Chile'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'China'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Colombia'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Comoros'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        " "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Congo'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Congo, the Democratic Republic of the'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Costa Atlantica'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        " "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Costa Rica'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Croatia'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Cuba'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Cyprus'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Czech Republic'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Denmark'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        " "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Djibouti'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Dominica'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Dominican Republic'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Ecuador'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Egypt'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        " "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'El Salvador'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Equatorial Guinea'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Eritrea'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Estonia'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Ethiopia'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Fiji'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        " "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Finland'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'France'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Gabon'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Gambia'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Georgia'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Germany'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Ghana'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        " "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Greece'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Grenada'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Guatemala'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Guinea'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Guinea-Bissau'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Guyana'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Haiti'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        " "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Holy See'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Honduras'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Hungary'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Iceland'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'India'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Indonesia'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Iran'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        " "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Iraq'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Ireland'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Israel'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Italy'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Ivory Coast'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Jamaica'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Japan'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        " "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Jordan'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Kazakhstan'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Kenya'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Korea, South'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Kosovo'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Kuwait'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        " "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Kyrgyzstan'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Laos'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Latvia'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Lebanon'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Lesotho'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Liberia'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Libya'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        " "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Liechtenstein'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Lithuania'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Luxembourg'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Macedonia'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Madagascar'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        " "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Malawi'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Malaysia'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Maldives'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Mali'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Malta'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Mauritania'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Mauritius'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        " "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Mexico'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Moldova'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Monaco'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Mongolia'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Montenegro'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Morocco'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        " "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Mozambique'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Myanmar'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Namibia'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Nepal'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Netherlands'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'New Zealand'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        " "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Nicaragua'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Niger'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Nigeria'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Norway'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Oman'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Pakistan'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Palestine'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        " "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Panama'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Papua New Guinea'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Paraguay'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Peru'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Philippines'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Poland'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        " "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Portugal'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Qatar'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Romania'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Russia'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Rwanda'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Saint Kitts and Nevis'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        " "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Saint Lucia'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Saint Vincent and the Grenadines'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'San Marino'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        " "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Sao Tome and Principe'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Saudi Arabia'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Senegal'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Serbia'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Seychelles'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        " "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Sierra Leone'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Singapore'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Slovakia'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Slovenia'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Somalia'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'South Africa'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        " "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'South Sudan'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Spain'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Sri Lanka'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Sudan'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Suriname'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Swaziland'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        " "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Switzerland'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Syria'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Taiwan'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Tajikistan'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Tanzania'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Thailand'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        " "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Timor-Leste'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Togo'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Trinidad and Tobago'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Tunisia'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Turkey'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'UK'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        " "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Uganda'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Ukraine'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'United Arab Emirates'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'United States'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Uruguay'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        " "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Uzbekistan'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Venezuela'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Vietnam'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Western Sahara'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Yemen'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Zambia'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        " "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Zimbabwe'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "}"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      }
     ],
     "prompt_number": 6
    },
    {
     "cell_type": "markdown",
     "metadata": {},
     "source": [
      "## Start scenario analysis\n",
      "As an example, we will analysis the number of cases in Italy."
     ]
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "scenario = cs.Scenario(jhu_data, population_data, country=\"Italy\")"
     ],
     "language": "python",
     "metadata": {},
     "outputs": [],
     "prompt_number": 7
    },
    {
     "cell_type": "heading",
     "level": 2,
     "metadata": {},
     "source": [
      "Check records"
     ]
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "_ = scenario.records()"
     ],
     "language": "python",
     "metadata": {},
     "outputs": [
      {
       "output_type": "display_data",
       "png": "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\n",
       "text": [
        "<Figure size 648x432 with 1 Axes>"
       ]
      }
     ],
     "prompt_number": 8
    },
    {
     "cell_type": "markdown",
     "metadata": {},
     "source": [
      "## S-R trend analysis\n",
      "S-R trend analysis finds the change points of SIR-derived ODE parameters."
     ]
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "scenario.trend()"
     ],
     "language": "python",
     "metadata": {},
     "outputs": [
      {
       "output_type": "display_data",
       "png": "\n",
       "text": [
        "<Figure size 648x432 with 1 Axes>"
       ]
      },
      {
       "output_type": "pyout",
       "prompt_number": 9,
       "text": [
        "<covsirphy.analysis.scenario.Scenario at 0x7f654dcdbb50>"
       ]
      }
     ],
     "prompt_number": 9
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "scenario.summary()"
     ],
     "language": "python",
     "metadata": {},
     "outputs": [
      {
       "html": [
        "<div>\n",
        "<style scoped>\n",
        "    .dataframe tbody tr th:only-of-type {\n",
        "        vertical-align: middle;\n",
        "    }\n",
        "\n",
        "    .dataframe tbody tr th {\n",
        "        vertical-align: top;\n",
        "    }\n",
        "\n",
        "    .dataframe thead th {\n",
        "        text-align: right;\n",
        "    }\n",
        "</style>\n",
        "<table border=\"1\" class=\"dataframe\">\n",
        "  <thead>\n",
        "    <tr style=\"text-align: right;\">\n",
        "      <th></th>\n",
        "      <th>Type</th>\n",
        "      <th>Start</th>\n",
        "      <th>End</th>\n",
        "      <th>Population</th>\n",
        "    </tr>\n",
        "  </thead>\n",
        "  <tbody>\n",
        "    <tr>\n",
        "      <th>1st</th>\n",
        "      <td>Past</td>\n",
        "      <td>24Mar2020</td>\n",
        "      <td>01Apr2020</td>\n",
        "      <td>60483973</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>2nd</th>\n",
        "      <td>Past</td>\n",
        "      <td>02Apr2020</td>\n",
        "      <td>14Apr2020</td>\n",
        "      <td>60483973</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>3rd</th>\n",
        "      <td>Past</td>\n",
        "      <td>15Apr2020</td>\n",
        "      <td>24Apr2020</td>\n",
        "      <td>60483973</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>4th</th>\n",
        "      <td>Past</td>\n",
        "      <td>25Apr2020</td>\n",
        "      <td>09May2020</td>\n",
        "      <td>60483973</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>5th</th>\n",
        "      <td>Past</td>\n",
        "      <td>10May2020</td>\n",
        "      <td>21May2020</td>\n",
        "      <td>60483973</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>6th</th>\n",
        "      <td>Past</td>\n",
        "      <td>22May2020</td>\n",
        "      <td>14Jun2020</td>\n",
        "      <td>60483973</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>7th</th>\n",
        "      <td>Past</td>\n",
        "      <td>15Jun2020</td>\n",
        "      <td>02Aug2020</td>\n",
        "      <td>60483973</td>\n",
        "    </tr>\n",
        "  </tbody>\n",
        "</table>\n",
        "</div>"
       ],
       "output_type": "pyout",
       "prompt_number": 10,
       "text": [
        "     Type      Start        End  Population\n",
        "1st  Past  24Mar2020  01Apr2020    60483973\n",
        "2nd  Past  02Apr2020  14Apr2020    60483973\n",
        "3rd  Past  15Apr2020  24Apr2020    60483973\n",
        "4th  Past  25Apr2020  09May2020    60483973\n",
        "5th  Past  10May2020  21May2020    60483973\n",
        "6th  Past  22May2020  14Jun2020    60483973\n",
        "7th  Past  15Jun2020  02Aug2020    60483973"
       ]
      }
     ],
     "prompt_number": 10
    },
    {
     "cell_type": "markdown",
     "metadata": {},
     "source": [
      "## Hyperparameter estimation of ODE models\n",
      "As an example, use SIR-F model."
     ]
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "scenario.estimate(cs.SIRF)"
     ],
     "language": "python",
     "metadata": {
      "tags": []
     },
     "outputs": [
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n",
        "<Main scenario: perform parameter estimation>"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "Running optimization with 4 CPUs..."
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\t7th phase with SIR-F model finished 238 trials in 0 min 15 sec."
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\t1st phase with SIR-F model finished 220 trials in 0 min 5 sec."
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\t2nd phase with SIR-F model finished 221 trials in 0 min 5 sec."
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\t3rd phase with SIR-F model finished 221 trials in 0 min 5 sec."
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\t4th phase with SIR-F model finished 219 trials in 0 min 5 sec."
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\t5th phase with SIR-F model finished 228 trials in 0 min 5 sec."
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\t6th phase with SIR-F model finished 226 trials in 0 min 5 sec."
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "Completed optimization. Total: 0 min 26 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      }
     ],
     "prompt_number": 11
    },
    {
     "cell_type": "heading",
     "level": 2,
     "metadata": {},
     "source": [
      "Show the history of reproduction number"
     ]
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "_ = scenario.param_history(targets=[\"Rt\"], divide_by_first=False)"
     ],
     "language": "python",
     "metadata": {},
     "outputs": [
      {
       "output_type": "display_data",
       "png": "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\n",
       "text": [
        "<Figure size 648x432 with 1 Axes>"
       ]
      }
     ],
     "prompt_number": 12
    },
    {
     "cell_type": "heading",
     "level": 2,
     "metadata": {},
     "source": [
      "Simulate the number of cases"
     ]
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "scenario.add(end_date=\"01Jan2021\")\n",
      "_ = scenario.simulate()"
     ],
     "language": "python",
     "metadata": {},
     "outputs": [
      {
       "output_type": "display_data",
       "png": "\n",
       "text": [
        "<Figure size 648x432 with 1 Axes>"
       ]
      }
     ],
     "prompt_number": 13
    }
   ],
   "metadata": {}
  }
 ]
}
