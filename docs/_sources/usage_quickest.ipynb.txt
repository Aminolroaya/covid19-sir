{
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3.8.2 64-bit ('covid19-sir': pipenv)",
   "name": "python_defaultSpec_1596263359952"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": 3
  },
  "name": ""
 },
 "nbformat": 3,
 "nbformat_minor": 0,
 "worksheets": [
  {
   "cells": [
    {
     "cell_type": "heading",
     "level": 1,
     "metadata": {},
     "source": [
      "Usage (quickest version)"
     ]
    },
    {
     "cell_type": "heading",
     "level": 2,
     "metadata": {},
     "source": [
      "Preparation"
     ]
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "# Standard users\n",
      "# !pip install covsirphy"
     ],
     "language": "python",
     "metadata": {},
     "outputs": [],
     "prompt_number": 1
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "# Developers (Note: this notebook is in example directory)\n",
      "import os\n",
      "os.chdir(\"../\")"
     ],
     "language": "python",
     "metadata": {},
     "outputs": [],
     "prompt_number": 2
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "from pprint import pprint"
     ],
     "language": "python",
     "metadata": {},
     "outputs": [],
     "prompt_number": 3
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "import covsirphy as cs\n",
      "cs.__version__"
     ],
     "language": "python",
     "metadata": {
      "tags": []
     },
     "outputs": [
      {
       "output_type": "pyout",
       "prompt_number": 4,
       "text": [
        "'2.8.0'"
       ]
      }
     ],
     "prompt_number": 4
    },
    {
     "cell_type": "markdown",
     "metadata": {},
     "source": [
      "## Dataset preparation\n",
      "Download the datasets to \"input\" direcotry and load them.\n",
      "\n",
      "If \"input\" directory has the datasets, `DataLoader` will load the local files. If the datasets were updated in remote servers, `DataLoader` will update the local files automatically."
     ]
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "# Standard users and developers\n",
      "data_loader = cs.DataLoader(\"input\")\n",
      "# The number of cases (JHU style)\n",
      "jhu_data = data_loader.jhu(verbose=False)\n",
      "# Population in each country\n",
      "population_data = data_loader.population(verbose=False)"
     ],
     "language": "python",
     "metadata": {
      "tags": []
     },
     "outputs": [],
     "prompt_number": 5
    },
    {
     "cell_type": "markdown",
     "metadata": {},
     "source": [
      "Note:  \n",
      "Datasets were retrieved via [COVID-19 Data Hub](https://covid19datahub.io/https://covid19datahub.io/) and the citation is  \n",
      "Guidotti, E., Ardia, D., (2020), \"COVID-19 Data Hub\", Journal of Open Source Software 5(51):2376, doi: 10.21105/joss.02376."
     ]
    },
    {
     "cell_type": "markdown",
     "metadata": {},
     "source": [
      "Scenario analysis can be performed for the following countries."
     ]
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "pprint(set(jhu_data.countries()) & set(population_data.countries()), compact=True)"
     ],
     "language": "python",
     "metadata": {
      "tags": []
     },
     "outputs": [
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "{"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Afghanistan'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Albania'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Algeria'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Andorra'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Angola'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        " "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Antigua and Barbuda'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Argentina'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Armenia'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Australia'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Austria'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        " "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Azerbaijan'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Bahamas'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Bahrain'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Bangladesh'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Barbados'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Belarus'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        " "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Belgium'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Belize'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Benin'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Bermuda'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Bhutan'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Bolivia'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        " "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Bosnia and Herzegovina'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Botswana'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Brazil'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Brunei'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Bulgaria'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        " "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Burkina Faso'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Burundi'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Cambodia'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Cameroon'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Canada'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Cape Verde'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        " "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Central African Republic'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Chad'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Chile'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'China'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Colombia'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Comoros'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        " "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Congo'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Costa Atlantica'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Costa Rica'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Croatia'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Cuba'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Cyprus'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        " "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Czech Republic'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Denmark'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Djibouti'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Dominica'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Dominican Republic'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        " "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Ecuador'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Egypt'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'El Salvador'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Equatorial Guinea'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Eritrea'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Estonia'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        " "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Ethiopia'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Fiji'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Finland'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'France'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Gabon'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Gambia'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Georgia'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        " "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Germany'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Ghana'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Greece'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Grenada'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Guatemala'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Guinea'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        " "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Guinea-Bissau'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Guyana'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Haiti'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Holy See'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Honduras'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Hungary'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        " "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Iceland'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'India'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Indonesia'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Iran'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Iraq'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Ireland'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Israel'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Italy'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        " "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Ivory Coast'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Jamaica'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Japan'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Jordan'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Kazakhstan'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Kenya'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        " "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Korea, South'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Kosovo'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Kuwait'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Kyrgyzstan'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Laos'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Latvia'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Lebanon'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        " "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Lesotho'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Liberia'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Libya'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Liechtenstein'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Lithuania'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Luxembourg'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        " "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Macedonia'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Madagascar'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Malawi'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Malaysia'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Maldives'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Mali'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Malta'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        " "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Mauritania'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Mauritius'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Mexico'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Moldova'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Monaco'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Mongolia'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        " "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Montenegro'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Morocco'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Mozambique'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Myanmar'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Namibia'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Nepal'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        " "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Netherlands'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'New Zealand'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Nicaragua'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Niger'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Nigeria'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Norway'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        " "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Oman'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Pakistan'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Palestine'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Panama'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Papua New Guinea'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Paraguay'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        " "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Peru'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Philippines'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Poland'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Portugal'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Qatar'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Romania'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Russia'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        " "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Rwanda'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Saint Kitts and Nevis'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Saint Lucia'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        " "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Saint Vincent and the Grenadines'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'San Marino'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Sao Tome and Principe'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        " "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Saudi Arabia'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Senegal'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Serbia'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Seychelles'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Sierra Leone'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Singapore'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        " "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Slovakia'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Slovenia'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Somalia'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'South Africa'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'South Sudan'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Spain'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        " "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Sri Lanka'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Sudan'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Suriname'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Swaziland'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Switzerland'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Syria'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        " "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Taiwan'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Tajikistan'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Tanzania'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Thailand'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Timor-Leste'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Togo'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        " "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Trinidad and Tobago'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Tunisia'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Turkey'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'UK'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Uganda'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Ukraine'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        " "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'United Arab Emirates'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'United States'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Uruguay'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Uzbekistan'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Venezuela'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        " "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Vietnam'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Western Sahara'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Yemen'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Zambia'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Zimbabwe'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "}"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      }
     ],
     "prompt_number": 6
    },
    {
     "cell_type": "markdown",
     "metadata": {},
     "source": [
      "## Start scenario analysis\n",
      "As an example, we will analysis the number of cases in Italy."
     ]
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "scenario = cs.Scenario(jhu_data, population_data, country=\"Italy\")"
     ],
     "language": "python",
     "metadata": {},
     "outputs": [],
     "prompt_number": 7
    },
    {
     "cell_type": "heading",
     "level": 2,
     "metadata": {},
     "source": [
      "Check records"
     ]
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "_ = scenario.records()"
     ],
     "language": "python",
     "metadata": {},
     "outputs": [
      {
       "output_type": "display_data",
       "png": "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\n",
       "text": [
        "<Figure size 648x432 with 1 Axes>"
       ]
      }
     ],
     "prompt_number": 8
    },
    {
     "cell_type": "markdown",
     "metadata": {},
     "source": [
      "## S-R trend analysis\n",
      "S-R trend analysis finds the change points of SIR-derived ODE parameters."
     ]
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "scenario.trend()"
     ],
     "language": "python",
     "metadata": {},
     "outputs": [
      {
       "output_type": "display_data",
       "png": "\n",
       "text": [
        "<Figure size 648x432 with 1 Axes>"
       ]
      },
      {
       "output_type": "pyout",
       "prompt_number": 9,
       "text": [
        "<covsirphy.analysis.scenario.Scenario at 0x7fe05fbad670>"
       ]
      }
     ],
     "prompt_number": 9
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "scenario.summary()"
     ],
     "language": "python",
     "metadata": {},
     "outputs": [
      {
       "html": [
        "<div>\n",
        "<style scoped>\n",
        "    .dataframe tbody tr th:only-of-type {\n",
        "        vertical-align: middle;\n",
        "    }\n",
        "\n",
        "    .dataframe tbody tr th {\n",
        "        vertical-align: top;\n",
        "    }\n",
        "\n",
        "    .dataframe thead th {\n",
        "        text-align: right;\n",
        "    }\n",
        "</style>\n",
        "<table border=\"1\" class=\"dataframe\">\n",
        "  <thead>\n",
        "    <tr style=\"text-align: right;\">\n",
        "      <th></th>\n",
        "      <th>Type</th>\n",
        "      <th>Start</th>\n",
        "      <th>End</th>\n",
        "      <th>Population</th>\n",
        "    </tr>\n",
        "  </thead>\n",
        "  <tbody>\n",
        "    <tr>\n",
        "      <th>1st</th>\n",
        "      <td>Past</td>\n",
        "      <td>23Mar2020</td>\n",
        "      <td>31Mar2020</td>\n",
        "      <td>60483973</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>2nd</th>\n",
        "      <td>Past</td>\n",
        "      <td>01Apr2020</td>\n",
        "      <td>11Apr2020</td>\n",
        "      <td>60483973</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>3rd</th>\n",
        "      <td>Past</td>\n",
        "      <td>12Apr2020</td>\n",
        "      <td>20Apr2020</td>\n",
        "      <td>60483973</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>4th</th>\n",
        "      <td>Past</td>\n",
        "      <td>21Apr2020</td>\n",
        "      <td>30Apr2020</td>\n",
        "      <td>60483973</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>5th</th>\n",
        "      <td>Past</td>\n",
        "      <td>01May2020</td>\n",
        "      <td>09May2020</td>\n",
        "      <td>60483973</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>6th</th>\n",
        "      <td>Past</td>\n",
        "      <td>10May2020</td>\n",
        "      <td>21May2020</td>\n",
        "      <td>60483973</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>7th</th>\n",
        "      <td>Past</td>\n",
        "      <td>22May2020</td>\n",
        "      <td>12Jun2020</td>\n",
        "      <td>60483973</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>8th</th>\n",
        "      <td>Past</td>\n",
        "      <td>13Jun2020</td>\n",
        "      <td>28Jul2020</td>\n",
        "      <td>60483973</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>9th</th>\n",
        "      <td>Past</td>\n",
        "      <td>29Jul2020</td>\n",
        "      <td>29Aug2020</td>\n",
        "      <td>60483973</td>\n",
        "    </tr>\n",
        "  </tbody>\n",
        "</table>\n",
        "</div>"
       ],
       "output_type": "pyout",
       "prompt_number": 10,
       "text": [
        "     Type      Start        End  Population\n",
        "1st  Past  23Mar2020  31Mar2020    60483973\n",
        "2nd  Past  01Apr2020  11Apr2020    60483973\n",
        "3rd  Past  12Apr2020  20Apr2020    60483973\n",
        "4th  Past  21Apr2020  30Apr2020    60483973\n",
        "5th  Past  01May2020  09May2020    60483973\n",
        "6th  Past  10May2020  21May2020    60483973\n",
        "7th  Past  22May2020  12Jun2020    60483973\n",
        "8th  Past  13Jun2020  28Jul2020    60483973\n",
        "9th  Past  29Jul2020  29Aug2020    60483973"
       ]
      }
     ],
     "prompt_number": 10
    },
    {
     "cell_type": "markdown",
     "metadata": {},
     "source": [
      "## Hyperparameter estimation of ODE models\n",
      "As an example, use SIR-F model."
     ]
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "scenario.estimate(cs.SIRF)"
     ],
     "language": "python",
     "metadata": {
      "tags": []
     },
     "outputs": [
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n",
        "<SIR-F model: parameter estimation>"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "Running optimization with 4 CPUs..."
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\t9th phase (29Jul2020 - 29Aug2020): finished 1598 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\t3rd phase (12Apr2020 - 20Apr2020): finished  254 trials in 0 min  5 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\t5th phase (01May2020 - 09May2020): finished  476 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\t6th phase (10May2020 - 21May2020): finished  255 trials in 0 min  5 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\t7th phase (22May2020 - 12Jun2020): finished  246 trials in 0 min  5 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\t8th phase (13Jun2020 - 28Jul2020): finished  444 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\t1st phase (23Mar2020 - 31Mar2020): finished 1941 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\t2nd phase (01Apr2020 - 11Apr2020): finished 1938 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\t4th phase (21Apr2020 - 30Apr2020): finished 1926 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "Completed optimization. Total: 2 min  1 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      }
     ],
     "prompt_number": 11
    },
    {
     "cell_type": "heading",
     "level": 2,
     "metadata": {},
     "source": [
      "Show the history of reproduction number"
     ]
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "_ = scenario.param_history(targets=[\"Rt\"], divide_by_first=False)"
     ],
     "language": "python",
     "metadata": {},
     "outputs": [
      {
       "output_type": "display_data",
       "png": "\n",
       "text": [
        "<Figure size 648x432 with 1 Axes>"
       ]
      }
     ],
     "prompt_number": 12
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "# version >= 2.8.0\n",
      "_ = scenario.history(target=\"Rt\")"
     ],
     "language": "python",
     "metadata": {},
     "outputs": [
      {
       "output_type": "display_data",
       "png": "\n",
       "text": [
        "<Figure size 648x432 with 1 Axes>"
       ]
      }
     ],
     "prompt_number": 13
    },
    {
     "cell_type": "heading",
     "level": 2,
     "metadata": {},
     "source": [
      "Simulate the number of cases"
     ]
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "scenario.add(end_date=\"01Jan2021\")\n",
      "_ = scenario.simulate()"
     ],
     "language": "python",
     "metadata": {},
     "outputs": [
      {
       "output_type": "display_data",
       "png": "\n",
       "text": [
        "<Figure size 648x432 with 1 Axes>"
       ]
      }
     ],
     "prompt_number": 14
    }
   ],
   "metadata": {}
  }
 ]
}
