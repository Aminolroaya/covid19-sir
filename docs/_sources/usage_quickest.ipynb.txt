{
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3.8.2 64-bit ('covid19-sir': pipenv)",
   "name": "python_defaultSpec_1596263359952"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": 3
  },
  "name": ""
 },
 "nbformat": 3,
 "nbformat_minor": 0,
 "worksheets": [
  {
   "cells": [
    {
     "cell_type": "heading",
     "level": 1,
     "metadata": {},
     "source": [
      "Usage (quickest version)"
     ]
    },
    {
     "cell_type": "heading",
     "level": 2,
     "metadata": {},
     "source": [
      "Preparation"
     ]
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "# Standard users\n",
      "# !pip install covsirphy"
     ],
     "language": "python",
     "metadata": {},
     "outputs": [],
     "prompt_number": 1
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "# Developers (Note: this notebook is in example directory)\n",
      "import os\n",
      "os.chdir(\"../\")"
     ],
     "language": "python",
     "metadata": {},
     "outputs": [],
     "prompt_number": 2
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "from pprint import pprint"
     ],
     "language": "python",
     "metadata": {},
     "outputs": [],
     "prompt_number": 3
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "import covsirphy as cs\n",
      "cs.__version__"
     ],
     "language": "python",
     "metadata": {
      "tags": []
     },
     "outputs": [
      {
       "output_type": "pyout",
       "prompt_number": 4,
       "text": [
        "'2.8.1'"
       ]
      }
     ],
     "prompt_number": 4
    },
    {
     "cell_type": "markdown",
     "metadata": {},
     "source": [
      "## Dataset preparation\n",
      "Download the datasets to \"input\" direcotry and load them.\n",
      "\n",
      "If \"input\" directory has the datasets, `DataLoader` will load the local files. If the datasets were updated in remote servers, `DataLoader` will update the local files automatically."
     ]
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "# Standard users and developers\n",
      "data_loader = cs.DataLoader(\"input\")\n",
      "# The number of cases (JHU style)\n",
      "jhu_data = data_loader.jhu(verbose=False)\n",
      "# Population in each country\n",
      "population_data = data_loader.population(verbose=False)"
     ],
     "language": "python",
     "metadata": {
      "tags": []
     },
     "outputs": [],
     "prompt_number": 5
    },
    {
     "cell_type": "markdown",
     "metadata": {},
     "source": [
      "Note:  \n",
      "Datasets were retrieved via [COVID-19 Data Hub](https://covid19datahub.io/https://covid19datahub.io/) and the citation is  \n",
      "Guidotti, E., Ardia, D., (2020), \"COVID-19 Data Hub\", Journal of Open Source Software 5(51):2376, doi: 10.21105/joss.02376."
     ]
    },
    {
     "cell_type": "markdown",
     "metadata": {},
     "source": [
      "Scenario analysis can be performed for the following countries."
     ]
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "pprint(set(jhu_data.countries()) & set(population_data.countries()), compact=True)"
     ],
     "language": "python",
     "metadata": {
      "tags": []
     },
     "outputs": [
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "{"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Afghanistan'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Albania'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Algeria'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Andorra'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Angola'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        " "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Antigua and Barbuda'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Argentina'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Armenia'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Australia'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Austria'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        " "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Azerbaijan'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Bahamas'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Bahrain'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Bangladesh'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Barbados'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Belarus'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        " "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Belgium'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Belize'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Benin'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Bermuda'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Bhutan'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Bolivia'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        " "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Bosnia and Herzegovina'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Botswana'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Brazil'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Brunei'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Bulgaria'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        " "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Burkina Faso'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Burundi'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Cambodia'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Cameroon'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Canada'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Cape Verde'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        " "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Central African Republic'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Chad'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Chile'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'China'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Colombia'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Comoros'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        " "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Congo'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Costa Atlantica'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Costa Rica'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Croatia'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Cuba'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Cyprus'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        " "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Czech Republic'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Denmark'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Djibouti'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Dominica'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Dominican Republic'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        " "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Ecuador'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Egypt'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'El Salvador'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Equatorial Guinea'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Eritrea'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Estonia'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        " "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Ethiopia'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Fiji'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Finland'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'France'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Gabon'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Gambia'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Georgia'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        " "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Germany'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Ghana'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Greece'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Grenada'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Guatemala'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Guinea'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        " "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Guinea-Bissau'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Guyana'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Haiti'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Holy See'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Honduras'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Hungary'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        " "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Iceland'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'India'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Indonesia'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Iran'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Iraq'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Ireland'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Israel'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Italy'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        " "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Ivory Coast'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Jamaica'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Japan'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Jordan'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Kazakhstan'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Kenya'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        " "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Korea, South'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Kosovo'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Kuwait'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Kyrgyzstan'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Laos'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Latvia'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Lebanon'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        " "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Lesotho'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Liberia'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Libya'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Liechtenstein'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Lithuania'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Luxembourg'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        " "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Macedonia'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Madagascar'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Malawi'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Malaysia'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Maldives'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Mali'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Malta'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        " "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Mauritania'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Mauritius'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Mexico'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Moldova'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Monaco'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Mongolia'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        " "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Montenegro'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Morocco'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Mozambique'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Myanmar'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Namibia'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Nepal'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        " "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Netherlands'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'New Zealand'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Nicaragua'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Niger'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Nigeria'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Norway'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        " "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Oman'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Pakistan'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Palestine'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Panama'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Papua New Guinea'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Paraguay'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        " "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Peru'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Philippines'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Poland'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Portugal'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Qatar'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Romania'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Russia'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        " "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Rwanda'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Saint Kitts and Nevis'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Saint Lucia'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        " "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Saint Vincent and the Grenadines'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'San Marino'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Sao Tome and Principe'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        " "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Saudi Arabia'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Senegal'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Serbia'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Seychelles'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Sierra Leone'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Singapore'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        " "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Slovakia'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Slovenia'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Somalia'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'South Africa'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'South Sudan'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Spain'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        " "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Sri Lanka'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Sudan'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Suriname'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Swaziland'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Switzerland'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Syria'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        " "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Taiwan'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Tajikistan'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Tanzania'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Thailand'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Timor-Leste'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Togo'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        " "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Trinidad and Tobago'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Tunisia'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Turkey'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'UK'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Uganda'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Ukraine'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        " "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'United Arab Emirates'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'United States'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Uruguay'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Uzbekistan'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Venezuela'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        " "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Vietnam'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Western Sahara'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Yemen'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Zambia'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Zimbabwe'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "}"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      }
     ],
     "prompt_number": 6
    },
    {
     "cell_type": "markdown",
     "metadata": {},
     "source": [
      "## Start scenario analysis\n",
      "As an example, we will analysis the number of cases in Italy."
     ]
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "scenario = cs.Scenario(jhu_data, population_data, country=\"Italy\")"
     ],
     "language": "python",
     "metadata": {},
     "outputs": [],
     "prompt_number": 7
    },
    {
     "cell_type": "heading",
     "level": 2,
     "metadata": {},
     "source": [
      "Check records"
     ]
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "_ = scenario.records()"
     ],
     "language": "python",
     "metadata": {},
     "outputs": [
      {
       "output_type": "display_data",
       "png": "\n",
       "text": [
        "<Figure size 648x432 with 1 Axes>"
       ]
      }
     ],
     "prompt_number": 8
    },
    {
     "cell_type": "markdown",
     "metadata": {},
     "source": [
      "## S-R trend analysis\n",
      "S-R trend analysis finds the change points of SIR-derived ODE parameters."
     ]
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "scenario.trend()"
     ],
     "language": "python",
     "metadata": {},
     "outputs": [
      {
       "output_type": "display_data",
       "png": "\n",
       "text": [
        "<Figure size 648x432 with 1 Axes>"
       ]
      },
      {
       "output_type": "pyout",
       "prompt_number": 9,
       "text": [
        "<covsirphy.analysis.scenario.Scenario at 0x7f8262eebd30>"
       ]
      }
     ],
     "prompt_number": 9
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "scenario.summary()"
     ],
     "language": "python",
     "metadata": {},
     "outputs": [
      {
       "html": [
        "<div>\n",
        "<style scoped>\n",
        "    .dataframe tbody tr th:only-of-type {\n",
        "        vertical-align: middle;\n",
        "    }\n",
        "\n",
        "    .dataframe tbody tr th {\n",
        "        vertical-align: top;\n",
        "    }\n",
        "\n",
        "    .dataframe thead th {\n",
        "        text-align: right;\n",
        "    }\n",
        "</style>\n",
        "<table border=\"1\" class=\"dataframe\">\n",
        "  <thead>\n",
        "    <tr style=\"text-align: right;\">\n",
        "      <th></th>\n",
        "      <th>Type</th>\n",
        "      <th>Start</th>\n",
        "      <th>End</th>\n",
        "      <th>Population</th>\n",
        "    </tr>\n",
        "  </thead>\n",
        "  <tbody>\n",
        "    <tr>\n",
        "      <th>1st</th>\n",
        "      <td>Past</td>\n",
        "      <td>23Mar2020</td>\n",
        "      <td>30Mar2020</td>\n",
        "      <td>60483973</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>2nd</th>\n",
        "      <td>Past</td>\n",
        "      <td>31Mar2020</td>\n",
        "      <td>11Apr2020</td>\n",
        "      <td>60483973</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>3rd</th>\n",
        "      <td>Past</td>\n",
        "      <td>12Apr2020</td>\n",
        "      <td>21Apr2020</td>\n",
        "      <td>60483973</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>4th</th>\n",
        "      <td>Past</td>\n",
        "      <td>22Apr2020</td>\n",
        "      <td>01May2020</td>\n",
        "      <td>60483973</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>5th</th>\n",
        "      <td>Past</td>\n",
        "      <td>02May2020</td>\n",
        "      <td>09May2020</td>\n",
        "      <td>60483973</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>6th</th>\n",
        "      <td>Past</td>\n",
        "      <td>10May2020</td>\n",
        "      <td>20May2020</td>\n",
        "      <td>60483973</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>7th</th>\n",
        "      <td>Past</td>\n",
        "      <td>21May2020</td>\n",
        "      <td>14Jun2020</td>\n",
        "      <td>60483973</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>8th</th>\n",
        "      <td>Past</td>\n",
        "      <td>15Jun2020</td>\n",
        "      <td>02Aug2020</td>\n",
        "      <td>60483973</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>9th</th>\n",
        "      <td>Past</td>\n",
        "      <td>03Aug2020</td>\n",
        "      <td>03Sep2020</td>\n",
        "      <td>60483973</td>\n",
        "    </tr>\n",
        "  </tbody>\n",
        "</table>\n",
        "</div>"
       ],
       "output_type": "pyout",
       "prompt_number": 10,
       "text": [
        "     Type      Start        End  Population\n",
        "1st  Past  23Mar2020  30Mar2020    60483973\n",
        "2nd  Past  31Mar2020  11Apr2020    60483973\n",
        "3rd  Past  12Apr2020  21Apr2020    60483973\n",
        "4th  Past  22Apr2020  01May2020    60483973\n",
        "5th  Past  02May2020  09May2020    60483973\n",
        "6th  Past  10May2020  20May2020    60483973\n",
        "7th  Past  21May2020  14Jun2020    60483973\n",
        "8th  Past  15Jun2020  02Aug2020    60483973\n",
        "9th  Past  03Aug2020  03Sep2020    60483973"
       ]
      }
     ],
     "prompt_number": 10
    },
    {
     "cell_type": "markdown",
     "metadata": {},
     "source": [
      "## Hyperparameter estimation of ODE models\n",
      "As an example, use SIR-F model."
     ]
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "scenario.estimate(cs.SIRF)"
     ],
     "language": "python",
     "metadata": {
      "tags": []
     },
     "outputs": [
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n",
        "<SIR-F model: parameter estimation>"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "Running optimization with 4 CPUs..."
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\t9th phase (03Aug2020 - 03Sep2020): finished  928 trials in 1 min  1 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\t3rd phase (12Apr2020 - 21Apr2020): finished  154 trials in 0 min  5 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\t4th phase (22Apr2020 - 01May2020): finished  171 trials in 0 min  5 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\t6th phase (10May2020 - 20May2020): finished  172 trials in 0 min  5 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\t5th phase (02May2020 - 09May2020): finished  318 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\t7th phase (21May2020 - 14Jun2020): finished  145 trials in 0 min  5 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\t1st phase (23Mar2020 - 30Mar2020): finished  622 trials in 0 min 20 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\t8th phase (15Jun2020 - 02Aug2020): finished  343 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\t2nd phase (31Mar2020 - 11Apr2020): finished 1608 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "Completed optimization. Total: 2 min  2 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      }
     ],
     "prompt_number": 11
    },
    {
     "cell_type": "heading",
     "level": 2,
     "metadata": {},
     "source": [
      "Show the history of reproduction number"
     ]
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "_ = scenario.param_history(targets=[\"Rt\"], divide_by_first=False)"
     ],
     "language": "python",
     "metadata": {},
     "outputs": [
      {
       "output_type": "display_data",
       "png": "\n",
       "text": [
        "<Figure size 648x432 with 1 Axes>"
       ]
      }
     ],
     "prompt_number": 12
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "# version >= 2.8.0\n",
      "_ = scenario.history(target=\"Rt\")"
     ],
     "language": "python",
     "metadata": {},
     "outputs": [
      {
       "output_type": "display_data",
       "png": "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\n",
       "text": [
        "<Figure size 648x432 with 1 Axes>"
       ]
      }
     ],
     "prompt_number": 13
    },
    {
     "cell_type": "heading",
     "level": 2,
     "metadata": {},
     "source": [
      "Simulate the number of cases"
     ]
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "scenario.add(end_date=\"01Jan2021\")\n",
      "_ = scenario.simulate()"
     ],
     "language": "python",
     "metadata": {},
     "outputs": [
      {
       "output_type": "display_data",
       "png": "\n",
       "text": [
        "<Figure size 648x432 with 1 Axes>"
       ]
      }
     ],
     "prompt_number": 14
    }
   ],
   "metadata": {}
  }
 ]
}
