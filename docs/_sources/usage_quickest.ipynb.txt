{
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3.8.2 64-bit ('covid19-sir': pipenv)",
   "name": "python_defaultSpec_1596263359952"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": 3
  },
  "name": ""
 },
 "nbformat": 3,
 "nbformat_minor": 0,
 "worksheets": [
  {
   "cells": [
    {
     "cell_type": "heading",
     "level": 1,
     "metadata": {},
     "source": [
      "Usage (quickest version)"
     ]
    },
    {
     "cell_type": "heading",
     "level": 2,
     "metadata": {},
     "source": [
      "Preparation"
     ]
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "# Standard users\n",
      "# !pip install covsirphy"
     ],
     "language": "python",
     "metadata": {},
     "outputs": [],
     "prompt_number": 1
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "# Developers (Note: this notebook is in example directory)\n",
      "import os\n",
      "os.chdir(\"../\")"
     ],
     "language": "python",
     "metadata": {},
     "outputs": [],
     "prompt_number": 2
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "from pprint import pprint"
     ],
     "language": "python",
     "metadata": {},
     "outputs": [],
     "prompt_number": 3
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "import covsirphy as cs\n",
      "cs.__version__"
     ],
     "language": "python",
     "metadata": {
      "tags": []
     },
     "outputs": [
      {
       "output_type": "pyout",
       "prompt_number": 4,
       "text": [
        "'2.6.0-zeta.new.72.fix.120.155.157.163.164.165.174'"
       ]
      }
     ],
     "prompt_number": 4
    },
    {
     "cell_type": "markdown",
     "metadata": {},
     "source": [
      "## Dataset preparation\n",
      "Download the datasets to \"input\" direcotry and load them.\n",
      "\n",
      "If \"input\" directory has the datasets, `DataLoader` will load the local files. If the datasets were updated in remote servers, `DataLoader` will update the local files automatically."
     ]
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "# Standard users and developers\n",
      "data_loader = cs.DataLoader(\"input\")\n",
      "# The number of cases (JHU style)\n",
      "jhu_data = data_loader.jhu(verbose=False)\n",
      "# Population in each country\n",
      "population_data = data_loader.population(verbose=False)"
     ],
     "language": "python",
     "metadata": {
      "tags": []
     },
     "outputs": [],
     "prompt_number": 5
    },
    {
     "cell_type": "markdown",
     "metadata": {},
     "source": [
      "Note:  \n",
      "Datasets were retrieved via [COVID-19 Data Hub](https://covid19datahub.io/https://covid19datahub.io/) and the citation is  \n",
      "Guidotti, E., Ardia, D., (2020), \"COVID-19 Data Hub\", Working paper, doi: 10.13140/RG.2.2.11649.81763.\n"
     ]
    },
    {
     "cell_type": "markdown",
     "metadata": {},
     "source": [
      "Scenario analysis can be performed for the following countries."
     ]
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "pprint(set(jhu_data.countries()) & set(population_data.countries()), compact=True)"
     ],
     "language": "python",
     "metadata": {
      "tags": []
     },
     "outputs": [
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "{"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Afghanistan'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Albania'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Algeria'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Andorra'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Angola'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        " "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Antigua and Barbuda'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Argentina'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Armenia'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Australia'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Austria'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        " "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Azerbaijan'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Bahamas'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Bahrain'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Bangladesh'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Barbados'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Belarus'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        " "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Belgium'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Belize'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Benin'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Bermuda'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Bhutan'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Bolivia'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        " "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Bosnia and Herzegovina'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Botswana'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Brazil'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Brunei'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Bulgaria'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        " "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Burkina Faso'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Burundi'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Cambodia'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Cameroon'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Canada'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Cape Verde'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        " "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Central African Republic'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Chad'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Chile'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'China'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Colombia'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Comoros'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        " "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Congo'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Congo, the Democratic Republic of the'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Costa Atlantica'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        " "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Costa Rica'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Croatia'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Cuba'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Cyprus'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Czech Republic'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Denmark'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        " "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Djibouti'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Dominica'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Dominican Republic'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Ecuador'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Egypt'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        " "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'El Salvador'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Equatorial Guinea'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Eritrea'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Estonia'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Ethiopia'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Fiji'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        " "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Finland'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'France'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Gabon'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Gambia'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Georgia'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Germany'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Ghana'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        " "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Greece'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Grenada'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Guatemala'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Guinea'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Guinea-Bissau'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Guyana'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Haiti'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        " "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Holy See'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Honduras'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Hungary'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Iceland'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'India'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Indonesia'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Iran'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        " "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Iraq'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Ireland'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Israel'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Italy'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Ivory Coast'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Jamaica'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Japan'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        " "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Jordan'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Kazakhstan'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Kenya'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Korea, South'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Kosovo'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Kuwait'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        " "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Kyrgyzstan'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Laos'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Latvia'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Lebanon'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Lesotho'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Liberia'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Libya'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        " "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Liechtenstein'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Lithuania'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Luxembourg'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Macedonia'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Madagascar'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        " "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Malawi'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Malaysia'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Maldives'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Mali'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Malta'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Mauritania'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Mauritius'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        " "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Mexico'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Moldova'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Monaco'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Mongolia'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Montenegro'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Morocco'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        " "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Mozambique'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Myanmar'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Namibia'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Nepal'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Netherlands'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'New Zealand'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        " "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Nicaragua'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Niger'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Nigeria'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Norway'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Oman'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Pakistan'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Palestine'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        " "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Panama'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Papua New Guinea'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Paraguay'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Peru'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Philippines'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Poland'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        " "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Portugal'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Qatar'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Romania'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Russia'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Rwanda'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Saint Kitts and Nevis'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        " "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Saint Lucia'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Saint Vincent and the Grenadines'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'San Marino'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        " "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Sao Tome and Principe'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Saudi Arabia'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Senegal'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Serbia'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Seychelles'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        " "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Sierra Leone'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Singapore'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Slovakia'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Slovenia'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Somalia'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'South Africa'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        " "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'South Sudan'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Spain'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Sri Lanka'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Sudan'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Suriname'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Swaziland'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        " "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Switzerland'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Syria'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Taiwan'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Tajikistan'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Tanzania'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Thailand'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        " "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Timor-Leste'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Togo'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Trinidad and Tobago'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Tunisia'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Turkey'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'UK'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        " "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Uganda'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Ukraine'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'United Arab Emirates'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'United States'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Uruguay'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        " "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Uzbekistan'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Venezuela'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Vietnam'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Western Sahara'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Yemen'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Zambia'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        " "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Zimbabwe'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "}"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      }
     ],
     "prompt_number": 6
    },
    {
     "cell_type": "markdown",
     "metadata": {},
     "source": [
      "## Start scenario analysis\n",
      "As an example, we will analysis the number of cases in Italy."
     ]
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "scenario = cs.Scenario(jhu_data, population_data, country=\"Italy\")"
     ],
     "language": "python",
     "metadata": {},
     "outputs": [],
     "prompt_number": 7
    },
    {
     "cell_type": "heading",
     "level": 2,
     "metadata": {},
     "source": [
      "Check records"
     ]
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "_ = scenario.records()"
     ],
     "language": "python",
     "metadata": {},
     "outputs": [
      {
       "output_type": "display_data",
       "png": "\n",
       "text": [
        "<Figure size 648x432 with 1 Axes>"
       ]
      }
     ],
     "prompt_number": 8
    },
    {
     "cell_type": "markdown",
     "metadata": {},
     "source": [
      "## S-R trend analysis\n",
      "S-R trend analysis finds the change points of SIR-derived ODE parameters."
     ]
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "scenario.trend()"
     ],
     "language": "python",
     "metadata": {},
     "outputs": [
      {
       "output_type": "display_data",
       "png": "\n",
       "text": [
        "<Figure size 648x432 with 1 Axes>"
       ]
      },
      {
       "output_type": "pyout",
       "prompt_number": 9,
       "text": [
        "<covsirphy.analysis.scenario.Scenario at 0x7f7d54947460>"
       ]
      }
     ],
     "prompt_number": 9
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "scenario.summary()"
     ],
     "language": "python",
     "metadata": {},
     "outputs": [
      {
       "html": [
        "<div>\n",
        "<style scoped>\n",
        "    .dataframe tbody tr th:only-of-type {\n",
        "        vertical-align: middle;\n",
        "    }\n",
        "\n",
        "    .dataframe tbody tr th {\n",
        "        vertical-align: top;\n",
        "    }\n",
        "\n",
        "    .dataframe thead th {\n",
        "        text-align: right;\n",
        "    }\n",
        "</style>\n",
        "<table border=\"1\" class=\"dataframe\">\n",
        "  <thead>\n",
        "    <tr style=\"text-align: right;\">\n",
        "      <th></th>\n",
        "      <th>Type</th>\n",
        "      <th>Start</th>\n",
        "      <th>End</th>\n",
        "      <th>Population</th>\n",
        "    </tr>\n",
        "  </thead>\n",
        "  <tbody>\n",
        "    <tr>\n",
        "      <th>1st</th>\n",
        "      <td>Past</td>\n",
        "      <td>24Mar2020</td>\n",
        "      <td>01Apr2020</td>\n",
        "      <td>60483973</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>2nd</th>\n",
        "      <td>Past</td>\n",
        "      <td>02Apr2020</td>\n",
        "      <td>13Apr2020</td>\n",
        "      <td>60483973</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>3rd</th>\n",
        "      <td>Past</td>\n",
        "      <td>14Apr2020</td>\n",
        "      <td>23Apr2020</td>\n",
        "      <td>60483973</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>4th</th>\n",
        "      <td>Past</td>\n",
        "      <td>24Apr2020</td>\n",
        "      <td>09May2020</td>\n",
        "      <td>60483973</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>5th</th>\n",
        "      <td>Past</td>\n",
        "      <td>10May2020</td>\n",
        "      <td>21May2020</td>\n",
        "      <td>60483973</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>6th</th>\n",
        "      <td>Past</td>\n",
        "      <td>22May2020</td>\n",
        "      <td>14Jun2020</td>\n",
        "      <td>60483973</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>7th</th>\n",
        "      <td>Past</td>\n",
        "      <td>15Jun2020</td>\n",
        "      <td>07Aug2020</td>\n",
        "      <td>60483973</td>\n",
        "    </tr>\n",
        "  </tbody>\n",
        "</table>\n",
        "</div>"
       ],
       "output_type": "pyout",
       "prompt_number": 10,
       "text": [
        "     Type      Start        End  Population\n",
        "1st  Past  24Mar2020  01Apr2020    60483973\n",
        "2nd  Past  02Apr2020  13Apr2020    60483973\n",
        "3rd  Past  14Apr2020  23Apr2020    60483973\n",
        "4th  Past  24Apr2020  09May2020    60483973\n",
        "5th  Past  10May2020  21May2020    60483973\n",
        "6th  Past  22May2020  14Jun2020    60483973\n",
        "7th  Past  15Jun2020  07Aug2020    60483973"
       ]
      }
     ],
     "prompt_number": 10
    },
    {
     "cell_type": "markdown",
     "metadata": {},
     "source": [
      "## Hyperparameter estimation of ODE models\n",
      "As an example, use SIR-F model."
     ]
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "scenario.estimate(cs.SIRF)"
     ],
     "language": "python",
     "metadata": {
      "tags": []
     },
     "outputs": [
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n",
        "<Main scenario: parameter estimation>"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "Running optimization with 4 CPUs..."
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\t7th phase with SIR-F model: finished 1280 trials in 1 min 4 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\t3rd phase with SIR-F model: finished 334 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\t4th phase with SIR-F model: finished 1127 trials in 0 min 40 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\t5th phase with SIR-F model: finished 1041 trials in 0 min 35 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\t1st phase with SIR-F model: finished 1647 trials in 1 min 0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\t2nd phase with SIR-F model: finished 1630 trials in 1 min 0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\t6th phase with SIR-F model: finished 1139 trials in 0 min 40 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "Completed optimization. Total: 2 min 26 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      }
     ],
     "prompt_number": 11
    },
    {
     "cell_type": "heading",
     "level": 2,
     "metadata": {},
     "source": [
      "Show the history of reproduction number"
     ]
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "_ = scenario.param_history(targets=[\"Rt\"], divide_by_first=False)"
     ],
     "language": "python",
     "metadata": {},
     "outputs": [
      {
       "output_type": "display_data",
       "png": "\n",
       "text": [
        "<Figure size 648x432 with 1 Axes>"
       ]
      }
     ],
     "prompt_number": 12
    },
    {
     "cell_type": "heading",
     "level": 2,
     "metadata": {},
     "source": [
      "Simulate the number of cases"
     ]
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "scenario.add(end_date=\"01Jan2021\")\n",
      "_ = scenario.simulate()"
     ],
     "language": "python",
     "metadata": {},
     "outputs": [
      {
       "output_type": "display_data",
       "png": "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\n",
       "text": [
        "<Figure size 648x432 with 1 Axes>"
       ]
      }
     ],
     "prompt_number": 13
    }
   ],
   "metadata": {}
  }
 ]
}
