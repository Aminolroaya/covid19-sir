{
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3.8.2 64-bit ('covid19-sir': pipenv)",
   "name": "python_defaultSpec_1596263359952"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": 3
  },
  "name": ""
 },
 "nbformat": 3,
 "nbformat_minor": 0,
 "worksheets": [
  {
   "cells": [
    {
     "cell_type": "heading",
     "level": 1,
     "metadata": {},
     "source": [
      "Usage (quickest version)"
     ]
    },
    {
     "cell_type": "heading",
     "level": 2,
     "metadata": {},
     "source": [
      "Preparation"
     ]
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "# Standard users\n",
      "# !pip install covsirphy"
     ],
     "language": "python",
     "metadata": {},
     "outputs": [],
     "prompt_number": 1
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "# Developers (Note: this notebook is in example directory)\n",
      "import os\n",
      "os.chdir(\"../\")"
     ],
     "language": "python",
     "metadata": {},
     "outputs": [],
     "prompt_number": 2
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "from pprint import pprint"
     ],
     "language": "python",
     "metadata": {},
     "outputs": [],
     "prompt_number": 3
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "import covsirphy as cs\n",
      "cs.__version__"
     ],
     "language": "python",
     "metadata": {
      "tags": []
     },
     "outputs": [
      {
       "output_type": "pyout",
       "prompt_number": 4,
       "text": [
        "'2.8.0'"
       ]
      }
     ],
     "prompt_number": 4
    },
    {
     "cell_type": "markdown",
     "metadata": {},
     "source": [
      "## Dataset preparation\n",
      "Download the datasets to \"input\" direcotry and load them.\n",
      "\n",
      "If \"input\" directory has the datasets, `DataLoader` will load the local files. If the datasets were updated in remote servers, `DataLoader` will update the local files automatically."
     ]
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "# Standard users and developers\n",
      "data_loader = cs.DataLoader(\"input\")\n",
      "# The number of cases (JHU style)\n",
      "jhu_data = data_loader.jhu(verbose=False)\n",
      "# Population in each country\n",
      "population_data = data_loader.population(verbose=False)"
     ],
     "language": "python",
     "metadata": {
      "tags": []
     },
     "outputs": [],
     "prompt_number": 5
    },
    {
     "cell_type": "markdown",
     "metadata": {},
     "source": [
      "Note:  \n",
      "Datasets were retrieved via [COVID-19 Data Hub](https://covid19datahub.io/https://covid19datahub.io/) and the citation is  \n",
      "Guidotti, E., Ardia, D., (2020), \"COVID-19 Data Hub\", Journal of Open Source Software 5(51):2376, doi: 10.21105/joss.02376."
     ]
    },
    {
     "cell_type": "markdown",
     "metadata": {},
     "source": [
      "Scenario analysis can be performed for the following countries."
     ]
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "pprint(set(jhu_data.countries()) & set(population_data.countries()), compact=True)"
     ],
     "language": "python",
     "metadata": {
      "tags": []
     },
     "outputs": [
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "{"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Afghanistan'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Albania'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Algeria'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Andorra'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Angola'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        " "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Antigua and Barbuda'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Argentina'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Armenia'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Australia'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Austria'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        " "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Azerbaijan'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Bahamas'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Bahrain'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Bangladesh'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Barbados'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Belarus'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        " "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Belgium'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Belize'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Benin'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Bermuda'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Bhutan'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Bolivia'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        " "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Bosnia and Herzegovina'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Botswana'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Brazil'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Brunei'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Bulgaria'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        " "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Burkina Faso'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Burundi'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Cambodia'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Cameroon'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Canada'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Cape Verde'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        " "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Central African Republic'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Chad'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Chile'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'China'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Colombia'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Comoros'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        " "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Congo'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Costa Atlantica'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Costa Rica'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Croatia'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Cuba'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Cyprus'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        " "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Czech Republic'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Denmark'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Djibouti'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Dominica'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Dominican Republic'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        " "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Ecuador'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Egypt'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'El Salvador'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Equatorial Guinea'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Eritrea'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Estonia'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        " "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Ethiopia'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Fiji'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Finland'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'France'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Gabon'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Gambia'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Georgia'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        " "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Germany'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Ghana'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Greece'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Grenada'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Guatemala'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Guinea'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        " "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Guinea-Bissau'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Guyana'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Haiti'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Holy See'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Honduras'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Hungary'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        " "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Iceland'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'India'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Indonesia'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Iran'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Iraq'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Ireland'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Israel'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Italy'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        " "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Ivory Coast'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Jamaica'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Japan'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Jordan'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Kazakhstan'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Kenya'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        " "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Korea, South'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Kosovo'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Kuwait'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Kyrgyzstan'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Laos'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Latvia'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Lebanon'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        " "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Lesotho'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Liberia'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Libya'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Liechtenstein'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Lithuania'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Luxembourg'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        " "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Macedonia'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Madagascar'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Malawi'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Malaysia'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Maldives'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Mali'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Malta'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        " "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Mauritania'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Mauritius'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Mexico'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Moldova'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Monaco'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Mongolia'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        " "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Montenegro'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Morocco'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Mozambique'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Myanmar'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Namibia'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Nepal'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        " "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Netherlands'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'New Zealand'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Nicaragua'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Niger'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Nigeria'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Norway'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        " "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Oman'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Pakistan'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Palestine'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Panama'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Papua New Guinea'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Paraguay'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        " "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Peru'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Philippines'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Poland'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Portugal'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Qatar'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Romania'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Russia'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        " "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Rwanda'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Saint Kitts and Nevis'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Saint Lucia'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        " "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Saint Vincent and the Grenadines'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'San Marino'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Sao Tome and Principe'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        " "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Saudi Arabia'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Senegal'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Serbia'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Seychelles'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Sierra Leone'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Singapore'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        " "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Slovakia'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Slovenia'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Somalia'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'South Africa'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'South Sudan'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Spain'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        " "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Sri Lanka'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Sudan'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Suriname'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Swaziland'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Switzerland'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Syria'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        " "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Taiwan'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Tajikistan'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Tanzania'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Thailand'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Timor-Leste'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Togo'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        " "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Trinidad and Tobago'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Tunisia'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Turkey'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'UK'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Uganda'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Ukraine'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        " "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'United Arab Emirates'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'United States'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Uruguay'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Uzbekistan'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Venezuela'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        " "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Vietnam'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Western Sahara'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Yemen'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Zambia'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Zimbabwe'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "}"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      }
     ],
     "prompt_number": 6
    },
    {
     "cell_type": "markdown",
     "metadata": {},
     "source": [
      "## Start scenario analysis\n",
      "As an example, we will analysis the number of cases in Italy."
     ]
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "scenario = cs.Scenario(jhu_data, population_data, country=\"Italy\")"
     ],
     "language": "python",
     "metadata": {},
     "outputs": [],
     "prompt_number": 7
    },
    {
     "cell_type": "heading",
     "level": 2,
     "metadata": {},
     "source": [
      "Check records"
     ]
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "_ = scenario.records()"
     ],
     "language": "python",
     "metadata": {},
     "outputs": [
      {
       "output_type": "display_data",
       "png": "\n",
       "text": [
        "<Figure size 648x432 with 1 Axes>"
       ]
      }
     ],
     "prompt_number": 8
    },
    {
     "cell_type": "markdown",
     "metadata": {},
     "source": [
      "## S-R trend analysis\n",
      "S-R trend analysis finds the change points of SIR-derived ODE parameters."
     ]
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "scenario.trend()"
     ],
     "language": "python",
     "metadata": {},
     "outputs": [
      {
       "output_type": "display_data",
       "png": "\n",
       "text": [
        "<Figure size 648x432 with 1 Axes>"
       ]
      },
      {
       "output_type": "pyout",
       "prompt_number": 9,
       "text": [
        "<covsirphy.analysis.scenario.Scenario at 0x7f8c82745100>"
       ]
      }
     ],
     "prompt_number": 9
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "scenario.summary()"
     ],
     "language": "python",
     "metadata": {},
     "outputs": [
      {
       "html": [
        "<div>\n",
        "<style scoped>\n",
        "    .dataframe tbody tr th:only-of-type {\n",
        "        vertical-align: middle;\n",
        "    }\n",
        "\n",
        "    .dataframe tbody tr th {\n",
        "        vertical-align: top;\n",
        "    }\n",
        "\n",
        "    .dataframe thead th {\n",
        "        text-align: right;\n",
        "    }\n",
        "</style>\n",
        "<table border=\"1\" class=\"dataframe\">\n",
        "  <thead>\n",
        "    <tr style=\"text-align: right;\">\n",
        "      <th></th>\n",
        "      <th>Type</th>\n",
        "      <th>Start</th>\n",
        "      <th>End</th>\n",
        "      <th>Population</th>\n",
        "    </tr>\n",
        "  </thead>\n",
        "  <tbody>\n",
        "    <tr>\n",
        "      <th>1st</th>\n",
        "      <td>Past</td>\n",
        "      <td>23Mar2020</td>\n",
        "      <td>31Mar2020</td>\n",
        "      <td>60483973</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>2nd</th>\n",
        "      <td>Past</td>\n",
        "      <td>01Apr2020</td>\n",
        "      <td>11Apr2020</td>\n",
        "      <td>60483973</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>3rd</th>\n",
        "      <td>Past</td>\n",
        "      <td>12Apr2020</td>\n",
        "      <td>20Apr2020</td>\n",
        "      <td>60483973</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>4th</th>\n",
        "      <td>Past</td>\n",
        "      <td>21Apr2020</td>\n",
        "      <td>30Apr2020</td>\n",
        "      <td>60483973</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>5th</th>\n",
        "      <td>Past</td>\n",
        "      <td>01May2020</td>\n",
        "      <td>09May2020</td>\n",
        "      <td>60483973</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>6th</th>\n",
        "      <td>Past</td>\n",
        "      <td>10May2020</td>\n",
        "      <td>21May2020</td>\n",
        "      <td>60483973</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>7th</th>\n",
        "      <td>Past</td>\n",
        "      <td>22May2020</td>\n",
        "      <td>13Jun2020</td>\n",
        "      <td>60483973</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>8th</th>\n",
        "      <td>Past</td>\n",
        "      <td>14Jun2020</td>\n",
        "      <td>03Aug2020</td>\n",
        "      <td>60483973</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>9th</th>\n",
        "      <td>Past</td>\n",
        "      <td>04Aug2020</td>\n",
        "      <td>30Aug2020</td>\n",
        "      <td>60483973</td>\n",
        "    </tr>\n",
        "  </tbody>\n",
        "</table>\n",
        "</div>"
       ],
       "output_type": "pyout",
       "prompt_number": 10,
       "text": [
        "     Type      Start        End  Population\n",
        "1st  Past  23Mar2020  31Mar2020    60483973\n",
        "2nd  Past  01Apr2020  11Apr2020    60483973\n",
        "3rd  Past  12Apr2020  20Apr2020    60483973\n",
        "4th  Past  21Apr2020  30Apr2020    60483973\n",
        "5th  Past  01May2020  09May2020    60483973\n",
        "6th  Past  10May2020  21May2020    60483973\n",
        "7th  Past  22May2020  13Jun2020    60483973\n",
        "8th  Past  14Jun2020  03Aug2020    60483973\n",
        "9th  Past  04Aug2020  30Aug2020    60483973"
       ]
      }
     ],
     "prompt_number": 10
    },
    {
     "cell_type": "markdown",
     "metadata": {},
     "source": [
      "## Hyperparameter estimation of ODE models\n",
      "As an example, use SIR-F model."
     ]
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "scenario.estimate(cs.SIRF)"
     ],
     "language": "python",
     "metadata": {
      "tags": []
     },
     "outputs": [
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n",
        "<SIR-F model: parameter estimation>"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "Running optimization with 4 CPUs..."
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\t9th phase (04Aug2020 - 30Aug2020): finished 1571 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\t3rd phase (12Apr2020 - 20Apr2020): finished  253 trials in 0 min  5 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\t4th phase (21Apr2020 - 30Apr2020): finished  258 trials in 0 min  5 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\t6th phase (10May2020 - 21May2020): finished  456 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\t5th phase (01May2020 - 09May2020): finished  645 trials in 0 min 15 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\t2nd phase (01Apr2020 - 11Apr2020): finished 1119 trials in 0 min 30 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\t7th phase (22May2020 - 13Jun2020): finished  596 trials in 0 min 15 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\t8th phase (14Jun2020 - 03Aug2020): finished  951 trials in 0 min 25 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\t1st phase (23Mar2020 - 31Mar2020): finished 1995 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "Completed optimization. Total: 2 min  1 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      }
     ],
     "prompt_number": 11
    },
    {
     "cell_type": "heading",
     "level": 2,
     "metadata": {},
     "source": [
      "Show the history of reproduction number"
     ]
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "_ = scenario.param_history(targets=[\"Rt\"], divide_by_first=False)"
     ],
     "language": "python",
     "metadata": {},
     "outputs": [
      {
       "output_type": "display_data",
       "png": "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\n",
       "text": [
        "<Figure size 648x432 with 1 Axes>"
       ]
      }
     ],
     "prompt_number": 12
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "# version >= 2.8.0\n",
      "_ = scenario.history(target=\"Rt\")"
     ],
     "language": "python",
     "metadata": {},
     "outputs": [
      {
       "output_type": "display_data",
       "png": "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\n",
       "text": [
        "<Figure size 648x432 with 1 Axes>"
       ]
      }
     ],
     "prompt_number": 13
    },
    {
     "cell_type": "heading",
     "level": 2,
     "metadata": {},
     "source": [
      "Simulate the number of cases"
     ]
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "scenario.add(end_date=\"01Jan2021\")\n",
      "_ = scenario.simulate()"
     ],
     "language": "python",
     "metadata": {},
     "outputs": [
      {
       "output_type": "display_data",
       "png": "\n",
       "text": [
        "<Figure size 648x432 with 1 Axes>"
       ]
      }
     ],
     "prompt_number": 14
    }
   ],
   "metadata": {}
  }
 ]
}
