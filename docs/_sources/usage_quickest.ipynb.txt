{
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3.8.2 64-bit ('covid19-sir': pipenv)",
   "name": "python_defaultSpec_1596263359952"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": 3
  },
  "name": ""
 },
 "nbformat": 3,
 "nbformat_minor": 0,
 "worksheets": [
  {
   "cells": [
    {
     "cell_type": "heading",
     "level": 1,
     "metadata": {},
     "source": [
      "Usage (quickest version)"
     ]
    },
    {
     "cell_type": "heading",
     "level": 2,
     "metadata": {},
     "source": [
      "Preparation"
     ]
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "# Standard users\n",
      "# !pip install covsirphy"
     ],
     "language": "python",
     "metadata": {},
     "outputs": [],
     "prompt_number": 1
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "# Developers (Note: this notebook is in example directory)\n",
      "import os\n",
      "os.chdir(\"../\")"
     ],
     "language": "python",
     "metadata": {},
     "outputs": [],
     "prompt_number": 2
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "from pprint import pprint"
     ],
     "language": "python",
     "metadata": {},
     "outputs": [],
     "prompt_number": 3
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "import covsirphy as cs\n",
      "cs.__version__"
     ],
     "language": "python",
     "metadata": {
      "tags": []
     },
     "outputs": [
      {
       "output_type": "pyout",
       "prompt_number": 4,
       "text": [
        "'2.8.3'"
       ]
      }
     ],
     "prompt_number": 4
    },
    {
     "cell_type": "markdown",
     "metadata": {},
     "source": [
      "## Dataset preparation\n",
      "Download the datasets to \"input\" direcotry and load them.\n",
      "\n",
      "If \"input\" directory has the datasets, `DataLoader` will load the local files. If the datasets were updated in remote servers, `DataLoader` will update the local files automatically."
     ]
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "# Standard users and developers\n",
      "data_loader = cs.DataLoader(\"input\")\n",
      "# The number of cases (JHU style)\n",
      "jhu_data = data_loader.jhu(verbose=False)\n",
      "# Population in each country\n",
      "population_data = data_loader.population(verbose=False)"
     ],
     "language": "python",
     "metadata": {
      "tags": []
     },
     "outputs": [],
     "prompt_number": 5
    },
    {
     "cell_type": "markdown",
     "metadata": {},
     "source": [
      "Note:  \n",
      "Datasets were retrieved via [COVID-19 Data Hub](https://covid19datahub.io/https://covid19datahub.io/) and the citation is  \n",
      "Guidotti, E., Ardia, D., (2020), \"COVID-19 Data Hub\", Journal of Open Source Software 5(51):2376, doi: 10.21105/joss.02376."
     ]
    },
    {
     "cell_type": "markdown",
     "metadata": {},
     "source": [
      "Scenario analysis can be performed for the following countries."
     ]
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "pprint(set(jhu_data.countries()) & set(population_data.countries()), compact=True)"
     ],
     "language": "python",
     "metadata": {
      "tags": []
     },
     "outputs": [
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "{"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Afghanistan'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Albania'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Algeria'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Andorra'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Angola'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        " "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Antigua and Barbuda'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Argentina'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Armenia'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Australia'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Austria'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        " "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Azerbaijan'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Bahamas'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Bahrain'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Bangladesh'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Barbados'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Belarus'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        " "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Belgium'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Belize'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Benin'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Bermuda'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Bhutan'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Bolivia'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        " "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Bosnia and Herzegovina'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Botswana'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Brazil'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Brunei'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Bulgaria'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        " "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Burkina Faso'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Burundi'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Cambodia'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Cameroon'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Canada'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Cape Verde'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        " "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Central African Republic'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Chad'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Chile'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'China'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Colombia'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Comoros'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        " "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Congo'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Costa Atlantica'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Costa Rica'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Croatia'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Cuba'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Cyprus'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        " "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Czech Republic'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Denmark'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Djibouti'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Dominica'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Dominican Republic'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        " "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Ecuador'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Egypt'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'El Salvador'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Equatorial Guinea'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Eritrea'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Estonia'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        " "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Ethiopia'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Fiji'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Finland'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'France'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Gabon'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Gambia'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Georgia'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        " "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Germany'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Ghana'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Greece'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Grenada'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Guatemala'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Guinea'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        " "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Guinea-Bissau'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Guyana'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Haiti'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Holy See'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Honduras'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Hungary'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        " "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Iceland'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'India'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Indonesia'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Iran'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Iraq'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Ireland'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Israel'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Italy'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        " "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Ivory Coast'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Jamaica'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Japan'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Jordan'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Kazakhstan'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Kenya'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        " "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Korea, South'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Kosovo'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Kuwait'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Kyrgyzstan'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Laos'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Latvia'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Lebanon'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        " "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Lesotho'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Liberia'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Libya'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Liechtenstein'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Lithuania'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Luxembourg'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        " "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Macedonia'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Madagascar'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Malawi'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Malaysia'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Maldives'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Mali'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Malta'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        " "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Mauritania'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Mauritius'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Mexico'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Moldova'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Monaco'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Mongolia'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        " "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Montenegro'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Morocco'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Mozambique'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Myanmar'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Namibia'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Nepal'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        " "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Netherlands'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'New Zealand'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Nicaragua'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Niger'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Nigeria'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Norway'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        " "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Oman'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Pakistan'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Palestine'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Panama'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Papua New Guinea'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Paraguay'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        " "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Peru'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Philippines'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Poland'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Portugal'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Qatar'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Romania'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Russia'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        " "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Rwanda'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Saint Kitts and Nevis'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Saint Lucia'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        " "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Saint Vincent and the Grenadines'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'San Marino'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Sao Tome and Principe'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        " "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Saudi Arabia'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Senegal'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Serbia'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Seychelles'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Sierra Leone'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Singapore'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        " "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Slovakia'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Slovenia'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Somalia'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'South Africa'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'South Sudan'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Spain'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        " "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Sri Lanka'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Sudan'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Suriname'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Swaziland'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Switzerland'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Syria'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        " "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Taiwan'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Tajikistan'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Tanzania'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Thailand'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Timor-Leste'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Togo'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        " "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Trinidad and Tobago'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Tunisia'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Turkey'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'UK'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Uganda'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Ukraine'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        " "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'United Arab Emirates'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'United States'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Uruguay'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Uzbekistan'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Venezuela'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        " "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Vietnam'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Western Sahara'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Yemen'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Zambia'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Zimbabwe'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "}"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      }
     ],
     "prompt_number": 6
    },
    {
     "cell_type": "markdown",
     "metadata": {},
     "source": [
      "## Start scenario analysis\n",
      "As an example, we will analysis the number of cases in Italy."
     ]
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "scenario = cs.Scenario(jhu_data, population_data, country=\"Italy\")"
     ],
     "language": "python",
     "metadata": {},
     "outputs": [],
     "prompt_number": 7
    },
    {
     "cell_type": "heading",
     "level": 2,
     "metadata": {},
     "source": [
      "Check records"
     ]
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "_ = scenario.records()"
     ],
     "language": "python",
     "metadata": {},
     "outputs": [
      {
       "output_type": "display_data",
       "png": "\n",
       "text": [
        "<Figure size 648x432 with 1 Axes>"
       ]
      }
     ],
     "prompt_number": 8
    },
    {
     "cell_type": "markdown",
     "metadata": {},
     "source": [
      "## S-R trend analysis\n",
      "S-R trend analysis finds the change points of SIR-derived ODE parameters."
     ]
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "scenario.trend()"
     ],
     "language": "python",
     "metadata": {},
     "outputs": [
      {
       "output_type": "display_data",
       "png": "\n",
       "text": [
        "<Figure size 648x432 with 1 Axes>"
       ]
      },
      {
       "output_type": "pyout",
       "prompt_number": 9,
       "text": [
        "<covsirphy.analysis.scenario.Scenario at 0x7f9ae8669d60>"
       ]
      }
     ],
     "prompt_number": 9
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "scenario.summary()"
     ],
     "language": "python",
     "metadata": {},
     "outputs": [
      {
       "html": [
        "<div>\n",
        "<style scoped>\n",
        "    .dataframe tbody tr th:only-of-type {\n",
        "        vertical-align: middle;\n",
        "    }\n",
        "\n",
        "    .dataframe tbody tr th {\n",
        "        vertical-align: top;\n",
        "    }\n",
        "\n",
        "    .dataframe thead th {\n",
        "        text-align: right;\n",
        "    }\n",
        "</style>\n",
        "<table border=\"1\" class=\"dataframe\">\n",
        "  <thead>\n",
        "    <tr style=\"text-align: right;\">\n",
        "      <th></th>\n",
        "      <th>Type</th>\n",
        "      <th>Start</th>\n",
        "      <th>End</th>\n",
        "      <th>Population</th>\n",
        "    </tr>\n",
        "  </thead>\n",
        "  <tbody>\n",
        "    <tr>\n",
        "      <th>0th</th>\n",
        "      <td>Past</td>\n",
        "      <td>24Feb2020</td>\n",
        "      <td>20Mar2020</td>\n",
        "      <td>60483973</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>1st</th>\n",
        "      <td>Past</td>\n",
        "      <td>21Mar2020</td>\n",
        "      <td>28Mar2020</td>\n",
        "      <td>60483973</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>2nd</th>\n",
        "      <td>Past</td>\n",
        "      <td>29Mar2020</td>\n",
        "      <td>08Apr2020</td>\n",
        "      <td>60483973</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>3rd</th>\n",
        "      <td>Past</td>\n",
        "      <td>09Apr2020</td>\n",
        "      <td>18Apr2020</td>\n",
        "      <td>60483973</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>4th</th>\n",
        "      <td>Past</td>\n",
        "      <td>19Apr2020</td>\n",
        "      <td>30Apr2020</td>\n",
        "      <td>60483973</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>5th</th>\n",
        "      <td>Past</td>\n",
        "      <td>01May2020</td>\n",
        "      <td>10May2020</td>\n",
        "      <td>60483973</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>6th</th>\n",
        "      <td>Past</td>\n",
        "      <td>11May2020</td>\n",
        "      <td>26May2020</td>\n",
        "      <td>60483973</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>7th</th>\n",
        "      <td>Past</td>\n",
        "      <td>27May2020</td>\n",
        "      <td>14Jul2020</td>\n",
        "      <td>60483973</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>8th</th>\n",
        "      <td>Past</td>\n",
        "      <td>15Jul2020</td>\n",
        "      <td>24Aug2020</td>\n",
        "      <td>60483973</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>9th</th>\n",
        "      <td>Past</td>\n",
        "      <td>25Aug2020</td>\n",
        "      <td>11Sep2020</td>\n",
        "      <td>60483973</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>10th</th>\n",
        "      <td>Past</td>\n",
        "      <td>12Sep2020</td>\n",
        "      <td>25Sep2020</td>\n",
        "      <td>60483973</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>11th</th>\n",
        "      <td>Past</td>\n",
        "      <td>26Sep2020</td>\n",
        "      <td>07Oct2020</td>\n",
        "      <td>60483973</td>\n",
        "    </tr>\n",
        "  </tbody>\n",
        "</table>\n",
        "</div>"
       ],
       "output_type": "pyout",
       "prompt_number": 10,
       "text": [
        "      Type      Start        End  Population\n",
        "0th   Past  24Feb2020  20Mar2020    60483973\n",
        "1st   Past  21Mar2020  28Mar2020    60483973\n",
        "2nd   Past  29Mar2020  08Apr2020    60483973\n",
        "3rd   Past  09Apr2020  18Apr2020    60483973\n",
        "4th   Past  19Apr2020  30Apr2020    60483973\n",
        "5th   Past  01May2020  10May2020    60483973\n",
        "6th   Past  11May2020  26May2020    60483973\n",
        "7th   Past  27May2020  14Jul2020    60483973\n",
        "8th   Past  15Jul2020  24Aug2020    60483973\n",
        "9th   Past  25Aug2020  11Sep2020    60483973\n",
        "10th  Past  12Sep2020  25Sep2020    60483973\n",
        "11th  Past  26Sep2020  07Oct2020    60483973"
       ]
      }
     ],
     "prompt_number": 10
    },
    {
     "cell_type": "markdown",
     "metadata": {},
     "source": [
      "## Hyperparameter estimation of ODE models\n",
      "As an example, use SIR-F model."
     ]
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "scenario.estimate(cs.SIRF)"
     ],
     "language": "python",
     "metadata": {
      "tags": []
     },
     "outputs": [
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n",
        "<SIR-F model: parameter estimation>"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "Running optimization with 4 CPUs..."
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\t11th phase (26Sep2020 - 07Oct2020): finished  462 trials in 0 min 15 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\t3rd phase (09Apr2020 - 18Apr2020): finished  455 trials in 0 min 15 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\t4th phase (19Apr2020 - 30Apr2020): finished  329 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\t5th phase (01May2020 - 10May2020): finished  509 trials in 0 min 15 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\t6th phase (11May2020 - 26May2020): finished  321 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\t0th phase (24Feb2020 - 20Mar2020): finished 1467 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\t1st phase (21Mar2020 - 28Mar2020): finished 1482 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\t2nd phase (29Mar2020 - 08Apr2020): finished 1470 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\t10th phase (12Sep2020 - 25Sep2020): finished  202 trials in 0 min  5 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\t7th phase (27May2020 - 14Jul2020): finished  610 trials in 0 min 20 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\t8th phase (15Jul2020 - 24Aug2020): finished 1892 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\t9th phase (25Aug2020 - 11Sep2020): finished 1907 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "Completed optimization. Total: 2 min 16 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      }
     ],
     "prompt_number": 11
    },
    {
     "cell_type": "heading",
     "level": 2,
     "metadata": {},
     "source": [
      "Show the history of reproduction number"
     ]
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "_ = scenario.param_history(targets=[\"Rt\"], divide_by_first=False)"
     ],
     "language": "python",
     "metadata": {},
     "outputs": [
      {
       "output_type": "display_data",
       "png": "\n",
       "text": [
        "<Figure size 648x432 with 1 Axes>"
       ]
      }
     ],
     "prompt_number": 12
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "# version >= 2.8.0\n",
      "_ = scenario.history(target=\"Rt\")"
     ],
     "language": "python",
     "metadata": {},
     "outputs": [
      {
       "output_type": "display_data",
       "png": "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\n",
       "text": [
        "<Figure size 648x432 with 1 Axes>"
       ]
      }
     ],
     "prompt_number": 13
    },
    {
     "cell_type": "heading",
     "level": 2,
     "metadata": {},
     "source": [
      "Simulate the number of cases"
     ]
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "scenario.add(end_date=\"01Jan2021\")\n",
      "_ = scenario.simulate()"
     ],
     "language": "python",
     "metadata": {},
     "outputs": [
      {
       "output_type": "display_data",
       "png": "\n",
       "text": [
        "<Figure size 648x432 with 1 Axes>"
       ]
      }
     ],
     "prompt_number": 14
    }
   ],
   "metadata": {}
  }
 ]
}
