{
 "cells": [
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "# Usage (quickest version)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## Preparation"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 1,
   "metadata": {
    "collapsed": false
   },
   "outputs": [],
   "source": [
    "# Standard users\n",
    "# !pip install covsirphy"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "metadata": {
    "collapsed": false
   },
   "outputs": [],
   "source": [
    "# Developers (Note: this notebook is in example directory)\n",
    "import os\n",
    "os.chdir(\"../\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "metadata": {
    "collapsed": false
   },
   "outputs": [],
   "source": [
    "from pprint import pprint"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "metadata": {
    "collapsed": false,
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "'2.6.0-delta.new.72.fix.120.155.157'"
      ]
     },
     "execution_count": 4,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "import covsirphy as cs\n",
    "cs.__version__"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## Dataset preparation\n",
    "Download the datasets to \"input\" direcotry and load them.\n",
    "\n",
    "If \"input\" directory has the datasets, `DataLoader` will load the local files. If the datasets were updated in remote servers, `DataLoader` will update the local files automatically."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "metadata": {
    "collapsed": false,
    "tags": []
   },
   "outputs": [],
   "source": [
    "# Standard users and developers\n",
    "data_loader = cs.DataLoader(\"input\")\n",
    "# The number of cases (JHU style)\n",
    "jhu_data = data_loader.jhu(verbose=False)\n",
    "# Population in each country\n",
    "population_data = data_loader.population(verbose=False)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Note:  \n",
    "Datasets were retrieved via [COVID-19 Data Hub](https://covid19datahub.io/https://covid19datahub.io/) and the citation is  \n",
    "Guidotti, E., Ardia, D., (2020), \"COVID-19 Data Hub\", Working paper, doi: 10.13140/RG.2.2.11649.81763.\n"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Scenario analysis can be performed for the following countries."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 6,
   "metadata": {
    "collapsed": false,
    "tags": []
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "{"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "'Afghanistan'"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      ", "
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "'Albania'"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      ", "
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "'Algeria'"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      ", "
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "'Andorra'"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      ", "
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "'Angola'"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      ",\n",
      " "
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "'Antigua and Barbuda'"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      ", "
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "'Argentina'"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      ", "
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "'Armenia'"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      ", "
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "'Australia'"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      ", "
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "'Austria'"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      ",\n",
      " "
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "'Azerbaijan'"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      ", "
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "'Bahamas'"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      ", "
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "'Bahrain'"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      ", "
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "'Bangladesh'"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      ", "
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "'Barbados'"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      ", "
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "'Belarus'"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      ",\n",
      " "
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "'Belgium'"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      ", "
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "'Belize'"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      ", "
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "'Benin'"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      ", "
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "'Bermuda'"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      ", "
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "'Bhutan'"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      ", "
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "'Bolivia'"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      ",\n",
      " "
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "'Bosnia and Herzegovina'"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      ", "
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "'Botswana'"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      ", "
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "'Brazil'"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      ", "
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "'Brunei'"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      ", "
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "'Bulgaria'"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      ",\n",
      " "
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "'Burkina Faso'"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      ", "
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "'Burundi'"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      ", "
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "'Cambodia'"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      ", "
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "'Cameroon'"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      ", "
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "'Canada'"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      ", "
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "'Cape Verde'"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      ",\n",
      " "
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "'Central African Republic'"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      ", "
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "'Chad'"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      ", "
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "'Chile'"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      ", "
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "'China'"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      ", "
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "'Colombia'"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      ", "
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "'Comoros'"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      ",\n",
      " "
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "'Congo'"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      ", "
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "'Congo, the Democratic Republic of the'"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      ", "
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "'Costa Atlantica'"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      ",\n",
      " "
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "'Costa Rica'"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      ", "
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "'Croatia'"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      ", "
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "'Cuba'"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      ", "
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "'Cyprus'"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      ", "
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "'Czech Republic'"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      ", "
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "'Denmark'"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      ",\n",
      " "
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "'Djibouti'"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      ", "
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "'Dominica'"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      ", "
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "'Dominican Republic'"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      ", "
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "'Ecuador'"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      ", "
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "'Egypt'"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      ",\n",
      " "
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "'El Salvador'"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      ", "
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "'Equatorial Guinea'"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      ", "
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "'Eritrea'"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      ", "
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "'Estonia'"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      ", "
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "'Ethiopia'"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      ", "
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "'Fiji'"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      ",\n",
      " "
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "'Finland'"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      ", "
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "'France'"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      ", "
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "'Gabon'"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      ", "
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "'Gambia'"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      ", "
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "'Georgia'"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      ", "
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "'Germany'"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      ", "
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "'Ghana'"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      ",\n",
      " "
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "'Greece'"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      ", "
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "'Grenada'"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      ", "
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "'Guatemala'"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      ", "
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "'Guinea'"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      ", "
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "'Guinea-Bissau'"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      ", "
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "'Guyana'"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      ", "
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "'Haiti'"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      ",\n",
      " "
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "'Holy See'"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      ", "
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "'Honduras'"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      ", "
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "'Hungary'"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      ", "
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "'Iceland'"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      ", "
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "'India'"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      ", "
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "'Indonesia'"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      ", "
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "'Iran'"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      ",\n",
      " "
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "'Iraq'"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      ", "
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "'Ireland'"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      ", "
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "'Israel'"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      ", "
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "'Italy'"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      ", "
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "'Ivory Coast'"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      ", "
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "'Jamaica'"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      ", "
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "'Japan'"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      ",\n",
      " "
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "'Jordan'"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      ", "
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "'Kazakhstan'"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      ", "
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "'Kenya'"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      ", "
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "'Korea, South'"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      ", "
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "'Kosovo'"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      ", "
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "'Kuwait'"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      ",\n",
      " "
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "'Kyrgyzstan'"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      ", "
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "'Laos'"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      ", "
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "'Latvia'"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      ", "
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "'Lebanon'"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      ", "
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "'Lesotho'"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      ", "
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "'Liberia'"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      ", "
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "'Libya'"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      ",\n",
      " "
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "'Liechtenstein'"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      ", "
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "'Lithuania'"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      ", "
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "'Luxembourg'"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      ", "
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "'Macedonia'"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      ", "
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "'Madagascar'"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      ",\n",
      " "
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "'Malawi'"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      ", "
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "'Malaysia'"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      ", "
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "'Maldives'"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      ", "
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "'Mali'"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      ", "
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "'Malta'"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      ", "
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "'Mauritania'"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      ", "
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "'Mauritius'"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      ",\n",
      " "
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "'Mexico'"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      ", "
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "'Moldova'"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      ", "
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "'Monaco'"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      ", "
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "'Mongolia'"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      ", "
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "'Montenegro'"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      ", "
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "'Morocco'"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      ",\n",
      " "
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "'Mozambique'"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      ", "
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "'Myanmar'"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      ", "
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "'Namibia'"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      ", "
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "'Nepal'"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      ", "
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "'Netherlands'"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      ", "
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "'New Zealand'"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      ",\n",
      " "
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "'Nicaragua'"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      ", "
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "'Niger'"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      ", "
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "'Nigeria'"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      ", "
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "'Norway'"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      ", "
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "'Oman'"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      ", "
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "'Pakistan'"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      ", "
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "'Palestine'"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      ",\n",
      " "
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "'Panama'"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      ", "
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "'Papua New Guinea'"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      ", "
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "'Paraguay'"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      ", "
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "'Peru'"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      ", "
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "'Philippines'"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      ", "
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "'Poland'"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      ",\n",
      " "
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "'Portugal'"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      ", "
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "'Qatar'"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      ", "
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "'Romania'"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      ", "
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "'Russia'"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      ", "
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "'Rwanda'"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      ", "
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "'Saint Kitts and Nevis'"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      ",\n",
      " "
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "'Saint Lucia'"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      ", "
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "'Saint Vincent and the Grenadines'"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      ", "
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "'San Marino'"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      ",\n",
      " "
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "'Sao Tome and Principe'"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      ", "
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "'Saudi Arabia'"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      ", "
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "'Senegal'"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      ", "
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "'Serbia'"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      ", "
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "'Seychelles'"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      ",\n",
      " "
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "'Sierra Leone'"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      ", "
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "'Singapore'"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      ", "
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "'Slovakia'"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      ", "
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "'Slovenia'"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      ", "
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "'Somalia'"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      ", "
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "'South Africa'"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      ",\n",
      " "
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "'South Sudan'"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      ", "
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "'Spain'"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      ", "
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "'Sri Lanka'"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      ", "
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "'Sudan'"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      ", "
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "'Suriname'"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      ", "
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "'Swaziland'"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      ",\n",
      " "
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "'Switzerland'"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      ", "
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "'Syria'"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      ", "
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "'Taiwan'"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      ", "
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "'Tajikistan'"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      ", "
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "'Tanzania'"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      ", "
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "'Thailand'"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      ",\n",
      " "
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "'Timor-Leste'"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      ", "
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "'Togo'"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      ", "
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "'Trinidad and Tobago'"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      ", "
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "'Tunisia'"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      ", "
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "'Turkey'"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      ", "
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "'UK'"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      ",\n",
      " "
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "'Uganda'"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      ", "
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "'Ukraine'"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      ", "
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "'United Arab Emirates'"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      ", "
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "'United States'"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      ", "
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "'Uruguay'"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      ",\n",
      " "
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "'Uzbekistan'"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      ", "
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "'Venezuela'"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      ", "
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "'Vietnam'"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      ", "
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "'Western Sahara'"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      ", "
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "'Yemen'"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      ", "
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "'Zambia'"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      ",\n",
      " "
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "'Zimbabwe'"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "}"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\n"
     ]
    }
   ],
   "source": [
    "pprint(set(jhu_data.countries()) & set(population_data.countries()), compact=True)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## Start scenario analysis\n",
    "As an example, we will analysis the number of cases in Italy."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 7,
   "metadata": {
    "collapsed": false
   },
   "outputs": [],
   "source": [
    "scenario = cs.Scenario(jhu_data, population_data, country=\"Italy\")"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## Check records"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 8,
   "metadata": {
    "collapsed": false
   },
   "outputs": [
    {
     "data": {
      "image/png": "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\n",
      "text/plain": [
       "<Figure size 648x432 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "_ = scenario.records()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## S-R trend analysis\n",
    "S-R trend analysis finds the change points of SIR-derived ODE parameters."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 9,
   "metadata": {
    "collapsed": false
   },
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 648x432 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/plain": [
       "<covsirphy.analysis.scenario.Scenario at 0x7fc17b62c640>"
      ]
     },
     "execution_count": 9,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "scenario.trend()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 10,
   "metadata": {
    "collapsed": false
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Type</th>\n",
       "      <th>Start</th>\n",
       "      <th>End</th>\n",
       "      <th>Population</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>1st</th>\n",
       "      <td>Past</td>\n",
       "      <td>24Mar2020</td>\n",
       "      <td>01Apr2020</td>\n",
       "      <td>60483973</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2nd</th>\n",
       "      <td>Past</td>\n",
       "      <td>02Apr2020</td>\n",
       "      <td>14Apr2020</td>\n",
       "      <td>60483973</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3rd</th>\n",
       "      <td>Past</td>\n",
       "      <td>15Apr2020</td>\n",
       "      <td>24Apr2020</td>\n",
       "      <td>60483973</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4th</th>\n",
       "      <td>Past</td>\n",
       "      <td>25Apr2020</td>\n",
       "      <td>09May2020</td>\n",
       "      <td>60483973</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>5th</th>\n",
       "      <td>Past</td>\n",
       "      <td>10May2020</td>\n",
       "      <td>20May2020</td>\n",
       "      <td>60483973</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>6th</th>\n",
       "      <td>Past</td>\n",
       "      <td>21May2020</td>\n",
       "      <td>12Jun2020</td>\n",
       "      <td>60483973</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>7th</th>\n",
       "      <td>Past</td>\n",
       "      <td>13Jun2020</td>\n",
       "      <td>01Aug2020</td>\n",
       "      <td>60483973</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "     Type      Start        End  Population\n",
       "1st  Past  24Mar2020  01Apr2020    60483973\n",
       "2nd  Past  02Apr2020  14Apr2020    60483973\n",
       "3rd  Past  15Apr2020  24Apr2020    60483973\n",
       "4th  Past  25Apr2020  09May2020    60483973\n",
       "5th  Past  10May2020  20May2020    60483973\n",
       "6th  Past  21May2020  12Jun2020    60483973\n",
       "7th  Past  13Jun2020  01Aug2020    60483973"
      ]
     },
     "execution_count": 10,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "scenario.summary()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## Hyperparameter estimation of ODE models\n",
    "As an example, use SIR-F model."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 11,
   "metadata": {
    "collapsed": false,
    "tags": []
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\n",
      "<Main scenario: perform parameter estimation>"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Running optimization with 8 CPUs..."
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\t7th phase with SIR-F model finished 120 trials in 0 min 32 sec."
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\t1st phase with SIR-F model finished 74 trials in 0 min 5 sec."
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\t2nd phase with SIR-F model finished 156 trials in 0 min 5 sec."
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\t3rd phase with SIR-F model finished 157 trials in 0 min 5 sec."
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\t4th phase with SIR-F model finished 312 trials in 0 min 10 sec."
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\t5th phase with SIR-F model finished 153 trials in 0 min 5 sec."
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\t6th phase with SIR-F model finished 190 trials in 0 min 5 sec."
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Completed optimization. Total: 2 min 4 sec"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\n"
     ]
    }
   ],
   "source": [
    "scenario.estimate(cs.SIRF)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## Show the history of reproduction number"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 12,
   "metadata": {
    "collapsed": false
   },
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 648x432 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "_ = scenario.param_history(targets=[\"Rt\"], divide_by_first=False)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## Simulate the number of cases"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 13,
   "metadata": {
    "collapsed": false
   },
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 648x432 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "scenario.add(end_date=\"01Jan2021\")\n",
    "_ = scenario.simulate()"
   ]
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3.8.2 64-bit ('covid19-sir': pipenv)",
   "name": "python_defaultSpec_1596263359952"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": 3
  }
 },
 "nbformat": 4,
 "nbformat_minor": 4
}
