{
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3.8.2 64-bit ('covid19-sir': pipenv)",
   "name": "python_defaultSpec_1596263359952"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": 3
  },
  "name": ""
 },
 "nbformat": 3,
 "nbformat_minor": 0,
 "worksheets": [
  {
   "cells": [
    {
     "cell_type": "heading",
     "level": 1,
     "metadata": {},
     "source": [
      "Usage (quickest version)"
     ]
    },
    {
     "cell_type": "heading",
     "level": 2,
     "metadata": {},
     "source": [
      "Preparation"
     ]
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "# Standard users\n",
      "# !pip install covsirphy"
     ],
     "language": "python",
     "metadata": {},
     "outputs": [],
     "prompt_number": 1
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "# Developers (Note: this notebook is in example directory)\n",
      "import os\n",
      "os.chdir(\"../\")"
     ],
     "language": "python",
     "metadata": {},
     "outputs": [],
     "prompt_number": 2
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "from pprint import pprint"
     ],
     "language": "python",
     "metadata": {},
     "outputs": [],
     "prompt_number": 3
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "import covsirphy as cs\n",
      "cs.__version__"
     ],
     "language": "python",
     "metadata": {
      "tags": []
     },
     "outputs": [
      {
       "output_type": "pyout",
       "prompt_number": 4,
       "text": [
        "'2.7.3-beta.new.202.203.206.fix.210.212'"
       ]
      }
     ],
     "prompt_number": 4
    },
    {
     "cell_type": "markdown",
     "metadata": {},
     "source": [
      "## Dataset preparation\n",
      "Download the datasets to \"input\" direcotry and load them.\n",
      "\n",
      "If \"input\" directory has the datasets, `DataLoader` will load the local files. If the datasets were updated in remote servers, `DataLoader` will update the local files automatically."
     ]
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "# Standard users and developers\n",
      "data_loader = cs.DataLoader(\"input\")\n",
      "# The number of cases (JHU style)\n",
      "jhu_data = data_loader.jhu(verbose=False)\n",
      "# Population in each country\n",
      "population_data = data_loader.population(verbose=False)"
     ],
     "language": "python",
     "metadata": {
      "tags": []
     },
     "outputs": [],
     "prompt_number": 5
    },
    {
     "cell_type": "markdown",
     "metadata": {},
     "source": [
      "Note:  \n",
      "Datasets were retrieved via [COVID-19 Data Hub](https://covid19datahub.io/https://covid19datahub.io/) and the citation is  \n",
      "Guidotti, E., Ardia, D., (2020), \"COVID-19 Data Hub\", Working paper, doi: 10.13140/RG.2.2.11649.81763.\n"
     ]
    },
    {
     "cell_type": "markdown",
     "metadata": {},
     "source": [
      "Scenario analysis can be performed for the following countries."
     ]
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "pprint(set(jhu_data.countries()) & set(population_data.countries()), compact=True)"
     ],
     "language": "python",
     "metadata": {
      "tags": []
     },
     "outputs": [
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "{"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Afghanistan'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Albania'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Algeria'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Andorra'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Angola'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        " "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Antigua and Barbuda'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Argentina'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Armenia'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Australia'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Austria'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        " "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Azerbaijan'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Bahamas'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Bahrain'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Bangladesh'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Barbados'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Belarus'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        " "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Belgium'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Belize'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Benin'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Bermuda'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Bhutan'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Bolivia'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        " "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Bosnia and Herzegovina'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Botswana'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Brazil'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Brunei'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Bulgaria'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        " "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Burkina Faso'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Burundi'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Cambodia'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Cameroon'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Canada'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Cape Verde'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        " "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Central African Republic'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Chad'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Chile'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'China'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Colombia'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Comoros'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        " "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Congo'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Costa Atlantica'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Costa Rica'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Croatia'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Cuba'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Cyprus'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        " "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Czech Republic'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Denmark'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Djibouti'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Dominica'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Dominican Republic'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        " "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Ecuador'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Egypt'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'El Salvador'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Equatorial Guinea'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Eritrea'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Estonia'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        " "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Ethiopia'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Fiji'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Finland'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'France'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Gabon'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Gambia'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Georgia'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        " "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Germany'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Ghana'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Greece'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Grenada'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Guatemala'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Guinea'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        " "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Guinea-Bissau'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Guyana'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Haiti'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Holy See'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Honduras'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Hungary'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        " "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Iceland'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'India'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Indonesia'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Iran'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Iraq'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Ireland'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Israel'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Italy'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        " "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Ivory Coast'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Jamaica'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Japan'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Jordan'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Kazakhstan'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Kenya'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        " "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Korea, South'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Kosovo'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Kuwait'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Kyrgyzstan'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Laos'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Latvia'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Lebanon'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        " "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Lesotho'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Liberia'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Libya'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Liechtenstein'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Lithuania'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Luxembourg'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        " "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Macedonia'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Madagascar'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Malawi'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Malaysia'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Maldives'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Mali'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Malta'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        " "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Mauritania'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Mauritius'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Mexico'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Moldova'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Monaco'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Mongolia'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        " "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Montenegro'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Morocco'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Mozambique'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Myanmar'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Namibia'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Nepal'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        " "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Netherlands'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'New Zealand'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Nicaragua'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Niger'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Nigeria'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Norway'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        " "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Oman'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Pakistan'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Palestine'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Panama'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Papua New Guinea'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Paraguay'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        " "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Peru'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Philippines'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Poland'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Portugal'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Qatar'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Romania'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Russia'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        " "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Rwanda'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Saint Kitts and Nevis'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Saint Lucia'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        " "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Saint Vincent and the Grenadines'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'San Marino'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Sao Tome and Principe'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        " "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Saudi Arabia'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Senegal'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Serbia'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Seychelles'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Sierra Leone'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Singapore'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        " "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Slovakia'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Slovenia'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Somalia'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'South Africa'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'South Sudan'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Spain'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        " "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Sri Lanka'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Sudan'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Suriname'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Swaziland'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Switzerland'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Syria'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        " "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Taiwan'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Tajikistan'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Tanzania'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Thailand'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Timor-Leste'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Togo'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        " "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Trinidad and Tobago'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Tunisia'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Turkey'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'UK'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Uganda'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Ukraine'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        " "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'United Arab Emirates'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'United States'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Uruguay'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Uzbekistan'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Venezuela'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        " "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Vietnam'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Western Sahara'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Yemen'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Zambia'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Zimbabwe'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "}"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      }
     ],
     "prompt_number": 6
    },
    {
     "cell_type": "markdown",
     "metadata": {},
     "source": [
      "## Start scenario analysis\n",
      "As an example, we will analysis the number of cases in Italy."
     ]
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "scenario = cs.Scenario(jhu_data, population_data, country=\"Italy\")"
     ],
     "language": "python",
     "metadata": {},
     "outputs": [],
     "prompt_number": 7
    },
    {
     "cell_type": "heading",
     "level": 2,
     "metadata": {},
     "source": [
      "Check records"
     ]
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "_ = scenario.records()"
     ],
     "language": "python",
     "metadata": {},
     "outputs": [
      {
       "output_type": "display_data",
       "png": "\n",
       "text": [
        "<Figure size 648x432 with 1 Axes>"
       ]
      }
     ],
     "prompt_number": 8
    },
    {
     "cell_type": "markdown",
     "metadata": {},
     "source": [
      "## S-R trend analysis\n",
      "S-R trend analysis finds the change points of SIR-derived ODE parameters."
     ]
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "scenario.trend()"
     ],
     "language": "python",
     "metadata": {},
     "outputs": [
      {
       "output_type": "display_data",
       "png": "\n",
       "text": [
        "<Figure size 648x432 with 1 Axes>"
       ]
      },
      {
       "output_type": "pyout",
       "prompt_number": 9,
       "text": [
        "<covsirphy.analysis.scenario.Scenario at 0x7f8d63ebee80>"
       ]
      }
     ],
     "prompt_number": 9
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "scenario.summary()"
     ],
     "language": "python",
     "metadata": {},
     "outputs": [
      {
       "html": [
        "<div>\n",
        "<style scoped>\n",
        "    .dataframe tbody tr th:only-of-type {\n",
        "        vertical-align: middle;\n",
        "    }\n",
        "\n",
        "    .dataframe tbody tr th {\n",
        "        vertical-align: top;\n",
        "    }\n",
        "\n",
        "    .dataframe thead th {\n",
        "        text-align: right;\n",
        "    }\n",
        "</style>\n",
        "<table border=\"1\" class=\"dataframe\">\n",
        "  <thead>\n",
        "    <tr style=\"text-align: right;\">\n",
        "      <th></th>\n",
        "      <th>Type</th>\n",
        "      <th>Start</th>\n",
        "      <th>End</th>\n",
        "      <th>Population</th>\n",
        "    </tr>\n",
        "  </thead>\n",
        "  <tbody>\n",
        "    <tr>\n",
        "      <th>1st</th>\n",
        "      <td>Past</td>\n",
        "      <td>23Mar2020</td>\n",
        "      <td>31Mar2020</td>\n",
        "      <td>60483973</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>2nd</th>\n",
        "      <td>Past</td>\n",
        "      <td>01Apr2020</td>\n",
        "      <td>11Apr2020</td>\n",
        "      <td>60483973</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>3rd</th>\n",
        "      <td>Past</td>\n",
        "      <td>12Apr2020</td>\n",
        "      <td>20Apr2020</td>\n",
        "      <td>60483973</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>4th</th>\n",
        "      <td>Past</td>\n",
        "      <td>21Apr2020</td>\n",
        "      <td>01May2020</td>\n",
        "      <td>60483973</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>5th</th>\n",
        "      <td>Past</td>\n",
        "      <td>02May2020</td>\n",
        "      <td>10May2020</td>\n",
        "      <td>60483973</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>6th</th>\n",
        "      <td>Past</td>\n",
        "      <td>11May2020</td>\n",
        "      <td>20May2020</td>\n",
        "      <td>60483973</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>7th</th>\n",
        "      <td>Past</td>\n",
        "      <td>21May2020</td>\n",
        "      <td>08Jun2020</td>\n",
        "      <td>60483973</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>8th</th>\n",
        "      <td>Past</td>\n",
        "      <td>09Jun2020</td>\n",
        "      <td>20Jul2020</td>\n",
        "      <td>60483973</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>9th</th>\n",
        "      <td>Past</td>\n",
        "      <td>21Jul2020</td>\n",
        "      <td>27Aug2020</td>\n",
        "      <td>60483973</td>\n",
        "    </tr>\n",
        "  </tbody>\n",
        "</table>\n",
        "</div>"
       ],
       "output_type": "pyout",
       "prompt_number": 10,
       "text": [
        "     Type      Start        End  Population\n",
        "1st  Past  23Mar2020  31Mar2020    60483973\n",
        "2nd  Past  01Apr2020  11Apr2020    60483973\n",
        "3rd  Past  12Apr2020  20Apr2020    60483973\n",
        "4th  Past  21Apr2020  01May2020    60483973\n",
        "5th  Past  02May2020  10May2020    60483973\n",
        "6th  Past  11May2020  20May2020    60483973\n",
        "7th  Past  21May2020  08Jun2020    60483973\n",
        "8th  Past  09Jun2020  20Jul2020    60483973\n",
        "9th  Past  21Jul2020  27Aug2020    60483973"
       ]
      }
     ],
     "prompt_number": 10
    },
    {
     "cell_type": "markdown",
     "metadata": {},
     "source": [
      "## Hyperparameter estimation of ODE models\n",
      "As an example, use SIR-F model."
     ]
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "scenario.estimate(cs.SIRF)"
     ],
     "language": "python",
     "metadata": {
      "tags": []
     },
     "outputs": [
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n",
        "<SIR-F model: parameter estimation>"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "Running optimization with 4 CPUs..."
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\t9th phase (21Jul2020 - 27Aug2020): finished 1275 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\t4th phase (21Apr2020 - 01May2020): finished  175 trials in 0 min  5 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\t3rd phase (12Apr2020 - 20Apr2020): finished  312 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\t6th phase (11May2020 - 20May2020): finished  156 trials in 0 min  5 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\t5th phase (02May2020 - 10May2020): finished  550 trials in 0 min 20 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\t7th phase (21May2020 - 08Jun2020): finished  287 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\t8th phase (09Jun2020 - 20Jul2020): finished  337 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\t1st phase (23Mar2020 - 31Mar2020): finished 1462 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\t2nd phase (01Apr2020 - 11Apr2020): finished 1484 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "Completed optimization. Total: 2 min  2 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      }
     ],
     "prompt_number": 11
    },
    {
     "cell_type": "heading",
     "level": 2,
     "metadata": {},
     "source": [
      "Show the history of reproduction number"
     ]
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "_ = scenario.param_history(targets=[\"Rt\"], divide_by_first=False)"
     ],
     "language": "python",
     "metadata": {},
     "outputs": [
      {
       "output_type": "display_data",
       "png": "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\n",
       "text": [
        "<Figure size 648x432 with 1 Axes>"
       ]
      }
     ],
     "prompt_number": 12
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "# version >= 2.7.3-alpha\n",
      "_ = scenario.history(target=\"Rt\")"
     ],
     "language": "python",
     "metadata": {},
     "outputs": [
      {
       "output_type": "display_data",
       "png": "\n",
       "text": [
        "<Figure size 648x432 with 1 Axes>"
       ]
      }
     ],
     "prompt_number": 13
    },
    {
     "cell_type": "heading",
     "level": 2,
     "metadata": {},
     "source": [
      "Simulate the number of cases"
     ]
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "scenario.add(end_date=\"01Jan2021\")\n",
      "_ = scenario.simulate()"
     ],
     "language": "python",
     "metadata": {},
     "outputs": [
      {
       "output_type": "display_data",
       "png": "\n",
       "text": [
        "<Figure size 648x432 with 1 Axes>"
       ]
      }
     ],
     "prompt_number": 14
    }
   ],
   "metadata": {}
  }
 ]
}
