{
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3.8.2 64-bit ('covid19-sir': pipenv)",
   "name": "python_defaultSpec_1596263359952"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": 3
  },
  "name": ""
 },
 "nbformat": 3,
 "nbformat_minor": 0,
 "worksheets": [
  {
   "cells": [
    {
     "cell_type": "heading",
     "level": 1,
     "metadata": {},
     "source": [
      "Usage (quickest version)"
     ]
    },
    {
     "cell_type": "heading",
     "level": 2,
     "metadata": {},
     "source": [
      "Preparation"
     ]
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "# Standard users\n",
      "# !pip install covsirphy"
     ],
     "language": "python",
     "metadata": {},
     "outputs": [],
     "prompt_number": 1
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "# Developers (Note: this notebook is in example directory)\n",
      "import os\n",
      "os.chdir(\"../\")"
     ],
     "language": "python",
     "metadata": {},
     "outputs": [],
     "prompt_number": 2
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "from pprint import pprint"
     ],
     "language": "python",
     "metadata": {},
     "outputs": [],
     "prompt_number": 3
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "import covsirphy as cs\n",
      "cs.__version__"
     ],
     "language": "python",
     "metadata": {
      "tags": []
     },
     "outputs": [
      {
       "output_type": "pyout",
       "prompt_number": 4,
       "text": [
        "'2.8.0'"
       ]
      }
     ],
     "prompt_number": 4
    },
    {
     "cell_type": "markdown",
     "metadata": {},
     "source": [
      "## Dataset preparation\n",
      "Download the datasets to \"input\" direcotry and load them.\n",
      "\n",
      "If \"input\" directory has the datasets, `DataLoader` will load the local files. If the datasets were updated in remote servers, `DataLoader` will update the local files automatically."
     ]
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "# Standard users and developers\n",
      "data_loader = cs.DataLoader(\"input\")\n",
      "# The number of cases (JHU style)\n",
      "jhu_data = data_loader.jhu(verbose=False)\n",
      "# Population in each country\n",
      "population_data = data_loader.population(verbose=False)"
     ],
     "language": "python",
     "metadata": {
      "tags": []
     },
     "outputs": [],
     "prompt_number": 5
    },
    {
     "cell_type": "markdown",
     "metadata": {},
     "source": [
      "Note:  \n",
      "Datasets were retrieved via [COVID-19 Data Hub](https://covid19datahub.io/https://covid19datahub.io/) and the citation is  \n",
      "Guidotti, E., Ardia, D., (2020), \"COVID-19 Data Hub\", Journal of Open Source Software 5(51):2376, doi: 10.21105/joss.02376."
     ]
    },
    {
     "cell_type": "markdown",
     "metadata": {},
     "source": [
      "Scenario analysis can be performed for the following countries."
     ]
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "pprint(set(jhu_data.countries()) & set(population_data.countries()), compact=True)"
     ],
     "language": "python",
     "metadata": {
      "tags": []
     },
     "outputs": [
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "{"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Afghanistan'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Albania'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Algeria'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Andorra'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Angola'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        " "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Antigua and Barbuda'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Argentina'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Armenia'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Australia'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Austria'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        " "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Azerbaijan'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Bahamas'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Bahrain'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Bangladesh'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Barbados'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Belarus'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        " "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Belgium'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Belize'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Benin'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Bermuda'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Bhutan'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Bolivia'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        " "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Bosnia and Herzegovina'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Botswana'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Brazil'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Brunei'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Bulgaria'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        " "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Burkina Faso'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Burundi'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Cambodia'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Cameroon'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Canada'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Cape Verde'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        " "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Central African Republic'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Chad'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Chile'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'China'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Colombia'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Comoros'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        " "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Congo'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Costa Atlantica'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Costa Rica'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Croatia'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Cuba'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Cyprus'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        " "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Czech Republic'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Denmark'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Djibouti'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Dominica'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Dominican Republic'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        " "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Ecuador'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Egypt'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'El Salvador'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Equatorial Guinea'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Eritrea'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Estonia'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        " "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Ethiopia'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Fiji'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Finland'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'France'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Gabon'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Gambia'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Georgia'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        " "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Germany'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Ghana'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Greece'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Grenada'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Guatemala'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Guinea'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        " "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Guinea-Bissau'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Guyana'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Haiti'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Holy See'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Honduras'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Hungary'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        " "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Iceland'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'India'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Indonesia'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Iran'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Iraq'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Ireland'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Israel'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Italy'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        " "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Ivory Coast'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Jamaica'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Japan'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Jordan'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Kazakhstan'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Kenya'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        " "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Korea, South'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Kosovo'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Kuwait'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Kyrgyzstan'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Laos'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Latvia'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Lebanon'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        " "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Lesotho'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Liberia'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Libya'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Liechtenstein'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Lithuania'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Luxembourg'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        " "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Macedonia'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Madagascar'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Malawi'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Malaysia'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Maldives'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Mali'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Malta'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        " "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Mauritania'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Mauritius'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Mexico'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Moldova'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Monaco'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Mongolia'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        " "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Montenegro'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Morocco'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Mozambique'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Myanmar'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Namibia'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Nepal'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        " "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Netherlands'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'New Zealand'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Nicaragua'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Niger'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Nigeria'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Norway'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        " "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Oman'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Pakistan'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Palestine'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Panama'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Papua New Guinea'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Paraguay'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        " "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Peru'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Philippines'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Poland'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Portugal'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Qatar'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Romania'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Russia'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        " "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Rwanda'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Saint Kitts and Nevis'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Saint Lucia'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        " "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Saint Vincent and the Grenadines'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'San Marino'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Sao Tome and Principe'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        " "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Saudi Arabia'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Senegal'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Serbia'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Seychelles'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Sierra Leone'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Singapore'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        " "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Slovakia'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Slovenia'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Somalia'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'South Africa'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'South Sudan'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Spain'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        " "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Sri Lanka'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Sudan'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Suriname'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Swaziland'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Switzerland'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Syria'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        " "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Taiwan'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Tajikistan'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Tanzania'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Thailand'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Timor-Leste'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Togo'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        " "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Trinidad and Tobago'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Tunisia'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Turkey'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'UK'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Uganda'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Ukraine'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        " "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'United Arab Emirates'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'United States'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Uruguay'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Uzbekistan'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Venezuela'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        " "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Vietnam'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Western Sahara'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Yemen'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Zambia'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Zimbabwe'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "}"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      }
     ],
     "prompt_number": 6
    },
    {
     "cell_type": "markdown",
     "metadata": {},
     "source": [
      "## Start scenario analysis\n",
      "As an example, we will analysis the number of cases in Italy."
     ]
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "scenario = cs.Scenario(jhu_data, population_data, country=\"Italy\")"
     ],
     "language": "python",
     "metadata": {},
     "outputs": [],
     "prompt_number": 7
    },
    {
     "cell_type": "heading",
     "level": 2,
     "metadata": {},
     "source": [
      "Check records"
     ]
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "_ = scenario.records()"
     ],
     "language": "python",
     "metadata": {},
     "outputs": [
      {
       "output_type": "display_data",
       "png": "\n",
       "text": [
        "<Figure size 648x432 with 1 Axes>"
       ]
      }
     ],
     "prompt_number": 8
    },
    {
     "cell_type": "markdown",
     "metadata": {},
     "source": [
      "## S-R trend analysis\n",
      "S-R trend analysis finds the change points of SIR-derived ODE parameters."
     ]
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "scenario.trend()"
     ],
     "language": "python",
     "metadata": {},
     "outputs": [
      {
       "output_type": "display_data",
       "png": "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\n",
       "text": [
        "<Figure size 648x432 with 1 Axes>"
       ]
      },
      {
       "output_type": "pyout",
       "prompt_number": 9,
       "text": [
        "<covsirphy.analysis.scenario.Scenario at 0x7f0f8c5dc430>"
       ]
      }
     ],
     "prompt_number": 9
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "scenario.summary()"
     ],
     "language": "python",
     "metadata": {},
     "outputs": [
      {
       "html": [
        "<div>\n",
        "<style scoped>\n",
        "    .dataframe tbody tr th:only-of-type {\n",
        "        vertical-align: middle;\n",
        "    }\n",
        "\n",
        "    .dataframe tbody tr th {\n",
        "        vertical-align: top;\n",
        "    }\n",
        "\n",
        "    .dataframe thead th {\n",
        "        text-align: right;\n",
        "    }\n",
        "</style>\n",
        "<table border=\"1\" class=\"dataframe\">\n",
        "  <thead>\n",
        "    <tr style=\"text-align: right;\">\n",
        "      <th></th>\n",
        "      <th>Type</th>\n",
        "      <th>Start</th>\n",
        "      <th>End</th>\n",
        "      <th>Population</th>\n",
        "    </tr>\n",
        "  </thead>\n",
        "  <tbody>\n",
        "    <tr>\n",
        "      <th>1st</th>\n",
        "      <td>Past</td>\n",
        "      <td>23Mar2020</td>\n",
        "      <td>31Mar2020</td>\n",
        "      <td>60483973</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>2nd</th>\n",
        "      <td>Past</td>\n",
        "      <td>01Apr2020</td>\n",
        "      <td>11Apr2020</td>\n",
        "      <td>60483973</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>3rd</th>\n",
        "      <td>Past</td>\n",
        "      <td>12Apr2020</td>\n",
        "      <td>20Apr2020</td>\n",
        "      <td>60483973</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>4th</th>\n",
        "      <td>Past</td>\n",
        "      <td>21Apr2020</td>\n",
        "      <td>30Apr2020</td>\n",
        "      <td>60483973</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>5th</th>\n",
        "      <td>Past</td>\n",
        "      <td>01May2020</td>\n",
        "      <td>09May2020</td>\n",
        "      <td>60483973</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>6th</th>\n",
        "      <td>Past</td>\n",
        "      <td>10May2020</td>\n",
        "      <td>21May2020</td>\n",
        "      <td>60483973</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>7th</th>\n",
        "      <td>Past</td>\n",
        "      <td>22May2020</td>\n",
        "      <td>12Jun2020</td>\n",
        "      <td>60483973</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>8th</th>\n",
        "      <td>Past</td>\n",
        "      <td>13Jun2020</td>\n",
        "      <td>27Jul2020</td>\n",
        "      <td>60483973</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>9th</th>\n",
        "      <td>Past</td>\n",
        "      <td>28Jul2020</td>\n",
        "      <td>28Aug2020</td>\n",
        "      <td>60483973</td>\n",
        "    </tr>\n",
        "  </tbody>\n",
        "</table>\n",
        "</div>"
       ],
       "output_type": "pyout",
       "prompt_number": 10,
       "text": [
        "     Type      Start        End  Population\n",
        "1st  Past  23Mar2020  31Mar2020    60483973\n",
        "2nd  Past  01Apr2020  11Apr2020    60483973\n",
        "3rd  Past  12Apr2020  20Apr2020    60483973\n",
        "4th  Past  21Apr2020  30Apr2020    60483973\n",
        "5th  Past  01May2020  09May2020    60483973\n",
        "6th  Past  10May2020  21May2020    60483973\n",
        "7th  Past  22May2020  12Jun2020    60483973\n",
        "8th  Past  13Jun2020  27Jul2020    60483973\n",
        "9th  Past  28Jul2020  28Aug2020    60483973"
       ]
      }
     ],
     "prompt_number": 10
    },
    {
     "cell_type": "markdown",
     "metadata": {},
     "source": [
      "## Hyperparameter estimation of ODE models\n",
      "As an example, use SIR-F model."
     ]
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "scenario.estimate(cs.SIRF)"
     ],
     "language": "python",
     "metadata": {
      "tags": []
     },
     "outputs": [
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n",
        "<SIR-F model: parameter estimation>"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "Running optimization with 4 CPUs..."
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\t9th phase (28Jul2020 - 28Aug2020): finished 1538 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\t3rd phase (12Apr2020 - 20Apr2020): finished  260 trials in 0 min  5 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\t4th phase (21Apr2020 - 30Apr2020): finished  257 trials in 0 min  5 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\t5th phase (01May2020 - 09May2020): finished  261 trials in 0 min  5 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\t6th phase (10May2020 - 21May2020): finished  258 trials in 0 min  5 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\t7th phase (22May2020 - 12Jun2020): finished  476 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\t8th phase (13Jun2020 - 27Jul2020): finished  466 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\t1st phase (23Mar2020 - 31Mar2020): finished 2065 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\t2nd phase (01Apr2020 - 11Apr2020): finished 2056 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "Completed optimization. Total: 2 min  1 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      }
     ],
     "prompt_number": 11
    },
    {
     "cell_type": "heading",
     "level": 2,
     "metadata": {},
     "source": [
      "Show the history of reproduction number"
     ]
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "_ = scenario.param_history(targets=[\"Rt\"], divide_by_first=False)"
     ],
     "language": "python",
     "metadata": {},
     "outputs": [
      {
       "output_type": "display_data",
       "png": "\n",
       "text": [
        "<Figure size 648x432 with 1 Axes>"
       ]
      }
     ],
     "prompt_number": 12
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "# version >= 2.8.0\n",
      "_ = scenario.history(target=\"Rt\")"
     ],
     "language": "python",
     "metadata": {},
     "outputs": [
      {
       "output_type": "display_data",
       "png": "\n",
       "text": [
        "<Figure size 648x432 with 1 Axes>"
       ]
      }
     ],
     "prompt_number": 13
    },
    {
     "cell_type": "heading",
     "level": 2,
     "metadata": {},
     "source": [
      "Simulate the number of cases"
     ]
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "scenario.add(end_date=\"01Jan2021\")\n",
      "_ = scenario.simulate()"
     ],
     "language": "python",
     "metadata": {},
     "outputs": [
      {
       "output_type": "display_data",
       "png": "\n",
       "text": [
        "<Figure size 648x432 with 1 Axes>"
       ]
      }
     ],
     "prompt_number": 14
    }
   ],
   "metadata": {}
  }
 ]
}
