{
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3.8.2 64-bit ('covid19-sir': pipenv)",
   "name": "python_defaultSpec_1596263359952"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": 3
  },
  "name": ""
 },
 "nbformat": 3,
 "nbformat_minor": 0,
 "worksheets": [
  {
   "cells": [
    {
     "cell_type": "heading",
     "level": 1,
     "metadata": {},
     "source": [
      "Usage (quickest version)"
     ]
    },
    {
     "cell_type": "heading",
     "level": 2,
     "metadata": {},
     "source": [
      "Preparation"
     ]
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "# Standard users\n",
      "# !pip install covsirphy"
     ],
     "language": "python",
     "metadata": {},
     "outputs": [],
     "prompt_number": 1
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "# Developers (Note: this notebook is in example directory)\n",
      "import os\n",
      "os.chdir(\"../\")"
     ],
     "language": "python",
     "metadata": {},
     "outputs": [],
     "prompt_number": 2
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "from pprint import pprint"
     ],
     "language": "python",
     "metadata": {},
     "outputs": [],
     "prompt_number": 3
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "import covsirphy as cs\n",
      "cs.__version__"
     ],
     "language": "python",
     "metadata": {
      "tags": []
     },
     "outputs": [
      {
       "output_type": "pyout",
       "prompt_number": 4,
       "text": [
        "'2.8.3-alpha.new.224'"
       ]
      }
     ],
     "prompt_number": 4
    },
    {
     "cell_type": "markdown",
     "metadata": {},
     "source": [
      "## Dataset preparation\n",
      "Download the datasets to \"input\" direcotry and load them.\n",
      "\n",
      "If \"input\" directory has the datasets, `DataLoader` will load the local files. If the datasets were updated in remote servers, `DataLoader` will update the local files automatically."
     ]
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "# Standard users and developers\n",
      "data_loader = cs.DataLoader(\"input\")\n",
      "# The number of cases (JHU style)\n",
      "jhu_data = data_loader.jhu(verbose=False)\n",
      "# Population in each country\n",
      "population_data = data_loader.population(verbose=False)"
     ],
     "language": "python",
     "metadata": {
      "tags": []
     },
     "outputs": [],
     "prompt_number": 5
    },
    {
     "cell_type": "markdown",
     "metadata": {},
     "source": [
      "Note:  \n",
      "Datasets were retrieved via [COVID-19 Data Hub](https://covid19datahub.io/https://covid19datahub.io/) and the citation is  \n",
      "Guidotti, E., Ardia, D., (2020), \"COVID-19 Data Hub\", Journal of Open Source Software 5(51):2376, doi: 10.21105/joss.02376."
     ]
    },
    {
     "cell_type": "markdown",
     "metadata": {},
     "source": [
      "Scenario analysis can be performed for the following countries."
     ]
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "pprint(set(jhu_data.countries()) & set(population_data.countries()), compact=True)"
     ],
     "language": "python",
     "metadata": {
      "tags": []
     },
     "outputs": [
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "{"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Afghanistan'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Albania'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Algeria'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Andorra'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Angola'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        " "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Antigua and Barbuda'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Argentina'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Armenia'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Australia'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Austria'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        " "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Azerbaijan'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Bahamas'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Bahrain'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Bangladesh'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Barbados'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Belarus'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        " "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Belgium'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Belize'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Benin'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Bermuda'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Bhutan'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Bolivia'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        " "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Bosnia and Herzegovina'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Botswana'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Brazil'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Brunei'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Bulgaria'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        " "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Burkina Faso'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Burundi'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Cambodia'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Cameroon'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Canada'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Cape Verde'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        " "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Central African Republic'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Chad'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Chile'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'China'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Colombia'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Comoros'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        " "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Congo'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Costa Atlantica'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Costa Rica'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Croatia'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Cuba'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Cyprus'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        " "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Czech Republic'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Denmark'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Djibouti'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Dominica'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Dominican Republic'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        " "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Ecuador'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Egypt'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'El Salvador'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Equatorial Guinea'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Eritrea'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Estonia'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        " "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Ethiopia'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Fiji'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Finland'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'France'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Gabon'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Gambia'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Georgia'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        " "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Germany'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Ghana'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Greece'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Grenada'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Guatemala'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Guinea'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        " "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Guinea-Bissau'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Guyana'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Haiti'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Holy See'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Honduras'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Hungary'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        " "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Iceland'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'India'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Indonesia'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Iran'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Iraq'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Ireland'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Israel'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Italy'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        " "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Ivory Coast'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Jamaica'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Japan'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Jordan'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Kazakhstan'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Kenya'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        " "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Korea, South'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Kosovo'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Kuwait'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Kyrgyzstan'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Laos'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Latvia'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Lebanon'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        " "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Lesotho'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Liberia'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Libya'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Liechtenstein'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Lithuania'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Luxembourg'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        " "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Macedonia'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Madagascar'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Malawi'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Malaysia'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Maldives'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Mali'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Malta'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        " "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Mauritania'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Mauritius'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Mexico'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Moldova'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Monaco'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Mongolia'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        " "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Montenegro'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Morocco'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Mozambique'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Myanmar'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Namibia'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Nepal'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        " "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Netherlands'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'New Zealand'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Nicaragua'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Niger'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Nigeria'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Norway'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        " "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Oman'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Pakistan'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Palestine'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Panama'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Papua New Guinea'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Paraguay'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        " "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Peru'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Philippines'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Poland'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Portugal'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Qatar'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Romania'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Russia'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        " "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Rwanda'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Saint Kitts and Nevis'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Saint Lucia'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        " "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Saint Vincent and the Grenadines'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'San Marino'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Sao Tome and Principe'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        " "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Saudi Arabia'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Senegal'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Serbia'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Seychelles'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Sierra Leone'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Singapore'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        " "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Slovakia'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Slovenia'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Somalia'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'South Africa'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'South Sudan'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Spain'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        " "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Sri Lanka'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Sudan'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Suriname'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Swaziland'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Switzerland'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Syria'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        " "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Taiwan'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Tajikistan'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Tanzania'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Thailand'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Timor-Leste'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Togo'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        " "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Trinidad and Tobago'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Tunisia'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Turkey'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'UK'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Uganda'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Ukraine'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        " "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'United Arab Emirates'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'United States'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Uruguay'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Uzbekistan'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Venezuela'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        " "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Vietnam'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Western Sahara'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Yemen'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Zambia'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Zimbabwe'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "}"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      }
     ],
     "prompt_number": 6
    },
    {
     "cell_type": "markdown",
     "metadata": {},
     "source": [
      "## Start scenario analysis\n",
      "As an example, we will analysis the number of cases in Italy."
     ]
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "scenario = cs.Scenario(jhu_data, population_data, country=\"Italy\")"
     ],
     "language": "python",
     "metadata": {},
     "outputs": [],
     "prompt_number": 7
    },
    {
     "cell_type": "heading",
     "level": 2,
     "metadata": {},
     "source": [
      "Check records"
     ]
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "_ = scenario.records()"
     ],
     "language": "python",
     "metadata": {},
     "outputs": [
      {
       "output_type": "display_data",
       "png": "\n",
       "text": [
        "<Figure size 648x432 with 1 Axes>"
       ]
      }
     ],
     "prompt_number": 8
    },
    {
     "cell_type": "markdown",
     "metadata": {},
     "source": [
      "## S-R trend analysis\n",
      "S-R trend analysis finds the change points of SIR-derived ODE parameters."
     ]
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "scenario.trend()"
     ],
     "language": "python",
     "metadata": {},
     "outputs": [
      {
       "output_type": "display_data",
       "png": "\n",
       "text": [
        "<Figure size 648x432 with 1 Axes>"
       ]
      },
      {
       "output_type": "pyout",
       "prompt_number": 9,
       "text": [
        "<covsirphy.analysis.scenario.Scenario at 0x7fa9c465cc70>"
       ]
      }
     ],
     "prompt_number": 9
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "scenario.summary()"
     ],
     "language": "python",
     "metadata": {},
     "outputs": [
      {
       "html": [
        "<div>\n",
        "<style scoped>\n",
        "    .dataframe tbody tr th:only-of-type {\n",
        "        vertical-align: middle;\n",
        "    }\n",
        "\n",
        "    .dataframe tbody tr th {\n",
        "        vertical-align: top;\n",
        "    }\n",
        "\n",
        "    .dataframe thead th {\n",
        "        text-align: right;\n",
        "    }\n",
        "</style>\n",
        "<table border=\"1\" class=\"dataframe\">\n",
        "  <thead>\n",
        "    <tr style=\"text-align: right;\">\n",
        "      <th></th>\n",
        "      <th>Type</th>\n",
        "      <th>Start</th>\n",
        "      <th>End</th>\n",
        "      <th>Population</th>\n",
        "    </tr>\n",
        "  </thead>\n",
        "  <tbody>\n",
        "    <tr>\n",
        "      <th>0th</th>\n",
        "      <td>Past</td>\n",
        "      <td>24Feb2020</td>\n",
        "      <td>20Mar2020</td>\n",
        "      <td>60483973</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>1st</th>\n",
        "      <td>Past</td>\n",
        "      <td>21Mar2020</td>\n",
        "      <td>28Mar2020</td>\n",
        "      <td>60483973</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>2nd</th>\n",
        "      <td>Past</td>\n",
        "      <td>29Mar2020</td>\n",
        "      <td>10Apr2020</td>\n",
        "      <td>60483973</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>3rd</th>\n",
        "      <td>Past</td>\n",
        "      <td>11Apr2020</td>\n",
        "      <td>23Apr2020</td>\n",
        "      <td>60483973</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>4th</th>\n",
        "      <td>Past</td>\n",
        "      <td>24Apr2020</td>\n",
        "      <td>10May2020</td>\n",
        "      <td>60483973</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>5th</th>\n",
        "      <td>Past</td>\n",
        "      <td>11May2020</td>\n",
        "      <td>26May2020</td>\n",
        "      <td>60483973</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>6th</th>\n",
        "      <td>Past</td>\n",
        "      <td>27May2020</td>\n",
        "      <td>13Jul2020</td>\n",
        "      <td>60483973</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>7th</th>\n",
        "      <td>Past</td>\n",
        "      <td>14Jul2020</td>\n",
        "      <td>24Aug2020</td>\n",
        "      <td>60483973</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>8th</th>\n",
        "      <td>Past</td>\n",
        "      <td>25Aug2020</td>\n",
        "      <td>11Sep2020</td>\n",
        "      <td>60483973</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>9th</th>\n",
        "      <td>Past</td>\n",
        "      <td>12Sep2020</td>\n",
        "      <td>25Sep2020</td>\n",
        "      <td>60483973</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>10th</th>\n",
        "      <td>Past</td>\n",
        "      <td>26Sep2020</td>\n",
        "      <td>04Oct2020</td>\n",
        "      <td>60483973</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>11th</th>\n",
        "      <td>Past</td>\n",
        "      <td>05Oct2020</td>\n",
        "      <td>17Oct2020</td>\n",
        "      <td>60483973</td>\n",
        "    </tr>\n",
        "  </tbody>\n",
        "</table>\n",
        "</div>"
       ],
       "output_type": "pyout",
       "prompt_number": 10,
       "text": [
        "      Type      Start        End  Population\n",
        "0th   Past  24Feb2020  20Mar2020    60483973\n",
        "1st   Past  21Mar2020  28Mar2020    60483973\n",
        "2nd   Past  29Mar2020  10Apr2020    60483973\n",
        "3rd   Past  11Apr2020  23Apr2020    60483973\n",
        "4th   Past  24Apr2020  10May2020    60483973\n",
        "5th   Past  11May2020  26May2020    60483973\n",
        "6th   Past  27May2020  13Jul2020    60483973\n",
        "7th   Past  14Jul2020  24Aug2020    60483973\n",
        "8th   Past  25Aug2020  11Sep2020    60483973\n",
        "9th   Past  12Sep2020  25Sep2020    60483973\n",
        "10th  Past  26Sep2020  04Oct2020    60483973\n",
        "11th  Past  05Oct2020  17Oct2020    60483973"
       ]
      }
     ],
     "prompt_number": 10
    },
    {
     "cell_type": "markdown",
     "metadata": {},
     "source": [
      "## Hyperparameter estimation of ODE models\n",
      "As an example, use SIR-F model."
     ]
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "scenario.estimate(cs.SIRF)"
     ],
     "language": "python",
     "metadata": {
      "tags": []
     },
     "outputs": [
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n",
        "<SIR-F model: parameter estimation>"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "Running optimization with 4 CPUs..."
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\t11th phase (05Oct2020 - 17Oct2020): finished 1347 trials in 0 min 45 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\t0th phase (24Feb2020 - 20Mar2020): finished 1863 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\t3rd phase (11Apr2020 - 23Apr2020): finished 1878 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\t2nd phase (29Mar2020 - 10Apr2020): finished 1872 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\t1st phase (21Mar2020 - 28Mar2020): finished 1884 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\t5th phase (11May2020 - 26May2020): finished  469 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\t8th phase (25Aug2020 - 11Sep2020): finished  247 trials in 0 min  5 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\t9th phase (12Sep2020 - 25Sep2020): finished  250 trials in 0 min  5 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\t6th phase (27May2020 - 13Jul2020): finished 1118 trials in 0 min 30 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\t10th phase (26Sep2020 - 04Oct2020): finished  986 trials in 0 min 25 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\t4th phase (24Apr2020 - 10May2020): finished 1962 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\t7th phase (14Jul2020 - 24Aug2020): finished 1948 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "Completed optimization. Total: 2 min 46 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      }
     ],
     "prompt_number": 11
    },
    {
     "cell_type": "heading",
     "level": 2,
     "metadata": {},
     "source": [
      "Show the history of reproduction number"
     ]
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "_ = scenario.param_history(targets=[\"Rt\"], divide_by_first=False)"
     ],
     "language": "python",
     "metadata": {},
     "outputs": [
      {
       "output_type": "display_data",
       "png": "\n",
       "text": [
        "<Figure size 648x432 with 1 Axes>"
       ]
      }
     ],
     "prompt_number": 12
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "# version >= 2.8.0\n",
      "_ = scenario.history(target=\"Rt\")"
     ],
     "language": "python",
     "metadata": {},
     "outputs": [
      {
       "output_type": "display_data",
       "png": "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\n",
       "text": [
        "<Figure size 648x432 with 1 Axes>"
       ]
      }
     ],
     "prompt_number": 13
    },
    {
     "cell_type": "heading",
     "level": 2,
     "metadata": {},
     "source": [
      "Simulate the number of cases"
     ]
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "scenario.add(end_date=\"01Jan2021\")\n",
      "_ = scenario.simulate()"
     ],
     "language": "python",
     "metadata": {},
     "outputs": [
      {
       "output_type": "display_data",
       "png": "\n",
       "text": [
        "<Figure size 648x432 with 1 Axes>"
       ]
      }
     ],
     "prompt_number": 14
    }
   ],
   "metadata": {}
  }
 ]
}
