{
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3.8.2 64-bit ('covid19-sir': pipenv)",
   "name": "python_defaultSpec_1596263359952"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": 3
  },
  "name": ""
 },
 "nbformat": 3,
 "nbformat_minor": 0,
 "worksheets": [
  {
   "cells": [
    {
     "cell_type": "heading",
     "level": 1,
     "metadata": {},
     "source": [
      "Usage (quickest version)"
     ]
    },
    {
     "cell_type": "heading",
     "level": 2,
     "metadata": {},
     "source": [
      "Preparation"
     ]
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "# Standard users\n",
      "# !pip install covsirphy"
     ],
     "language": "python",
     "metadata": {},
     "outputs": [],
     "prompt_number": 1
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "# Developers (Note: this notebook is in example directory)\n",
      "import os\n",
      "os.chdir(\"../\")"
     ],
     "language": "python",
     "metadata": {},
     "outputs": [],
     "prompt_number": 2
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "from pprint import pprint"
     ],
     "language": "python",
     "metadata": {},
     "outputs": [],
     "prompt_number": 3
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "import covsirphy as cs\n",
      "cs.__version__"
     ],
     "language": "python",
     "metadata": {
      "tags": []
     },
     "outputs": [
      {
       "output_type": "pyout",
       "prompt_number": 4,
       "text": [
        "'2.7.0'"
       ]
      }
     ],
     "prompt_number": 4
    },
    {
     "cell_type": "markdown",
     "metadata": {},
     "source": [
      "## Dataset preparation\n",
      "Download the datasets to \"input\" direcotry and load them.\n",
      "\n",
      "If \"input\" directory has the datasets, `DataLoader` will load the local files. If the datasets were updated in remote servers, `DataLoader` will update the local files automatically."
     ]
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "# Standard users and developers\n",
      "data_loader = cs.DataLoader(\"input\")\n",
      "# The number of cases (JHU style)\n",
      "jhu_data = data_loader.jhu(verbose=False)\n",
      "# Population in each country\n",
      "population_data = data_loader.population(verbose=False)"
     ],
     "language": "python",
     "metadata": {
      "tags": []
     },
     "outputs": [],
     "prompt_number": 5
    },
    {
     "cell_type": "markdown",
     "metadata": {},
     "source": [
      "Note:  \n",
      "Datasets were retrieved via [COVID-19 Data Hub](https://covid19datahub.io/https://covid19datahub.io/) and the citation is  \n",
      "Guidotti, E., Ardia, D., (2020), \"COVID-19 Data Hub\", Working paper, doi: 10.13140/RG.2.2.11649.81763.\n"
     ]
    },
    {
     "cell_type": "markdown",
     "metadata": {},
     "source": [
      "Scenario analysis can be performed for the following countries."
     ]
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "pprint(set(jhu_data.countries()) & set(population_data.countries()), compact=True)"
     ],
     "language": "python",
     "metadata": {
      "tags": []
     },
     "outputs": [
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "{"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Afghanistan'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Albania'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Algeria'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Andorra'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Angola'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        " "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Antigua and Barbuda'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Argentina'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Armenia'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Australia'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Austria'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        " "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Azerbaijan'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Bahamas'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Bahrain'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Bangladesh'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Barbados'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Belarus'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        " "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Belgium'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Belize'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Benin'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Bermuda'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Bhutan'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Bolivia'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        " "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Bosnia and Herzegovina'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Botswana'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Brazil'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Brunei'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Bulgaria'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        " "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Burkina Faso'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Burundi'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Cambodia'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Cameroon'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Canada'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Cape Verde'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        " "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Central African Republic'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Chad'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Chile'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'China'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Colombia'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Comoros'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        " "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Congo'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Costa Atlantica'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Costa Rica'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Croatia'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Cuba'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Cyprus'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        " "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Czech Republic'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Denmark'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Djibouti'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Dominica'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Dominican Republic'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        " "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Ecuador'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Egypt'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'El Salvador'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Equatorial Guinea'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Eritrea'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Estonia'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        " "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Ethiopia'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Fiji'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Finland'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'France'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Gabon'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Gambia'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Georgia'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        " "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Germany'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Ghana'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Greece'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Grenada'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Guatemala'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Guinea'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        " "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Guinea-Bissau'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Guyana'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Haiti'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Holy See'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Honduras'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Hungary'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        " "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Iceland'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'India'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Indonesia'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Iran'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Iraq'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Ireland'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Israel'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Italy'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        " "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Ivory Coast'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Jamaica'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Japan'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Jordan'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Kazakhstan'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Kenya'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        " "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Korea, South'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Kosovo'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Kuwait'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Kyrgyzstan'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Laos'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Latvia'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Lebanon'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        " "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Lesotho'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Liberia'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Libya'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Liechtenstein'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Lithuania'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Luxembourg'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        " "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Macedonia'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Madagascar'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Malawi'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Malaysia'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Maldives'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Mali'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Malta'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        " "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Mauritania'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Mauritius'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Mexico'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Moldova'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Monaco'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Mongolia'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        " "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Montenegro'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Morocco'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Mozambique'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Myanmar'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Namibia'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Nepal'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        " "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Netherlands'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'New Zealand'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Nicaragua'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Niger'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Nigeria'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Norway'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        " "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Oman'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Pakistan'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Palestine'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Panama'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Papua New Guinea'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Paraguay'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        " "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Peru'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Philippines'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Poland'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Portugal'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Qatar'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Romania'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Russia'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        " "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Rwanda'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Saint Kitts and Nevis'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Saint Lucia'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        " "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Saint Vincent and the Grenadines'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'San Marino'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Sao Tome and Principe'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        " "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Saudi Arabia'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Senegal'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Serbia'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Seychelles'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Sierra Leone'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Singapore'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        " "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Slovakia'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Slovenia'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Somalia'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'South Africa'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'South Sudan'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Spain'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        " "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Sri Lanka'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Sudan'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Suriname'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Swaziland'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Switzerland'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Syria'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        " "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Taiwan'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Tajikistan'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Tanzania'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Thailand'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Timor-Leste'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Togo'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        " "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Trinidad and Tobago'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Tunisia'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Turkey'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'UK'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Uganda'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Ukraine'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        " "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'United Arab Emirates'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'United States'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Uruguay'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Uzbekistan'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Venezuela'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        " "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Vietnam'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Western Sahara'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Yemen'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Zambia'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Zimbabwe'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "}"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      }
     ],
     "prompt_number": 6
    },
    {
     "cell_type": "markdown",
     "metadata": {},
     "source": [
      "## Start scenario analysis\n",
      "As an example, we will analysis the number of cases in Italy."
     ]
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "scenario = cs.Scenario(jhu_data, population_data, country=\"Italy\")"
     ],
     "language": "python",
     "metadata": {},
     "outputs": [],
     "prompt_number": 7
    },
    {
     "cell_type": "heading",
     "level": 2,
     "metadata": {},
     "source": [
      "Check records"
     ]
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "_ = scenario.records()"
     ],
     "language": "python",
     "metadata": {},
     "outputs": [
      {
       "output_type": "display_data",
       "png": "\n",
       "text": [
        "<Figure size 648x432 with 1 Axes>"
       ]
      }
     ],
     "prompt_number": 8
    },
    {
     "cell_type": "markdown",
     "metadata": {},
     "source": [
      "## S-R trend analysis\n",
      "S-R trend analysis finds the change points of SIR-derived ODE parameters."
     ]
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "scenario.trend()"
     ],
     "language": "python",
     "metadata": {},
     "outputs": [
      {
       "output_type": "display_data",
       "png": "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\n",
       "text": [
        "<Figure size 648x432 with 1 Axes>"
       ]
      },
      {
       "output_type": "pyout",
       "prompt_number": 9,
       "text": [
        "<covsirphy.analysis.scenario.Scenario at 0x7f92a126dc40>"
       ]
      }
     ],
     "prompt_number": 9
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "scenario.summary()"
     ],
     "language": "python",
     "metadata": {},
     "outputs": [
      {
       "html": [
        "<div>\n",
        "<style scoped>\n",
        "    .dataframe tbody tr th:only-of-type {\n",
        "        vertical-align: middle;\n",
        "    }\n",
        "\n",
        "    .dataframe tbody tr th {\n",
        "        vertical-align: top;\n",
        "    }\n",
        "\n",
        "    .dataframe thead th {\n",
        "        text-align: right;\n",
        "    }\n",
        "</style>\n",
        "<table border=\"1\" class=\"dataframe\">\n",
        "  <thead>\n",
        "    <tr style=\"text-align: right;\">\n",
        "      <th></th>\n",
        "      <th>Type</th>\n",
        "      <th>Start</th>\n",
        "      <th>End</th>\n",
        "      <th>Population</th>\n",
        "    </tr>\n",
        "  </thead>\n",
        "  <tbody>\n",
        "    <tr>\n",
        "      <th>1st</th>\n",
        "      <td>Past</td>\n",
        "      <td>24Mar2020</td>\n",
        "      <td>31Mar2020</td>\n",
        "      <td>60483973</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>2nd</th>\n",
        "      <td>Past</td>\n",
        "      <td>01Apr2020</td>\n",
        "      <td>12Apr2020</td>\n",
        "      <td>60483973</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>3rd</th>\n",
        "      <td>Past</td>\n",
        "      <td>13Apr2020</td>\n",
        "      <td>21Apr2020</td>\n",
        "      <td>60483973</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>4th</th>\n",
        "      <td>Past</td>\n",
        "      <td>22Apr2020</td>\n",
        "      <td>01May2020</td>\n",
        "      <td>60483973</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>5th</th>\n",
        "      <td>Past</td>\n",
        "      <td>02May2020</td>\n",
        "      <td>09May2020</td>\n",
        "      <td>60483973</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>6th</th>\n",
        "      <td>Past</td>\n",
        "      <td>10May2020</td>\n",
        "      <td>19May2020</td>\n",
        "      <td>60483973</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>7th</th>\n",
        "      <td>Past</td>\n",
        "      <td>20May2020</td>\n",
        "      <td>04Jun2020</td>\n",
        "      <td>60483973</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>8th</th>\n",
        "      <td>Past</td>\n",
        "      <td>05Jun2020</td>\n",
        "      <td>06Jul2020</td>\n",
        "      <td>60483973</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>9th</th>\n",
        "      <td>Past</td>\n",
        "      <td>07Jul2020</td>\n",
        "      <td>16Aug2020</td>\n",
        "      <td>60483973</td>\n",
        "    </tr>\n",
        "  </tbody>\n",
        "</table>\n",
        "</div>"
       ],
       "output_type": "pyout",
       "prompt_number": 10,
       "text": [
        "     Type      Start        End  Population\n",
        "1st  Past  24Mar2020  31Mar2020    60483973\n",
        "2nd  Past  01Apr2020  12Apr2020    60483973\n",
        "3rd  Past  13Apr2020  21Apr2020    60483973\n",
        "4th  Past  22Apr2020  01May2020    60483973\n",
        "5th  Past  02May2020  09May2020    60483973\n",
        "6th  Past  10May2020  19May2020    60483973\n",
        "7th  Past  20May2020  04Jun2020    60483973\n",
        "8th  Past  05Jun2020  06Jul2020    60483973\n",
        "9th  Past  07Jul2020  16Aug2020    60483973"
       ]
      }
     ],
     "prompt_number": 10
    },
    {
     "cell_type": "markdown",
     "metadata": {},
     "source": [
      "## Hyperparameter estimation of ODE models\n",
      "As an example, use SIR-F model."
     ]
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "scenario.estimate(cs.SIRF)"
     ],
     "language": "python",
     "metadata": {
      "tags": []
     },
     "outputs": [
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n",
        "<SIR-F model: parameter estimation>"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "Running optimization with 4 CPUs..."
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\t9th phase (07Jul2020 - 16Aug2020): finished  653 trials in 0 min 41 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\t2nd phase (01Apr2020 - 12Apr2020): finished  230 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\t4th phase (22Apr2020 - 01May2020): finished  311 trials in 0 min 15 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\t3rd phase (13Apr2020 - 21Apr2020): finished  398 trials in 0 min 20 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\t5th phase (02May2020 - 09May2020): finished  279 trials in 0 min 15 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\t8th phase (05Jun2020 - 06Jul2020): finished  341 trials in 0 min 15 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\t7th phase (20May2020 - 04Jun2020): finished  565 trials in 0 min 25 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\t6th phase (10May2020 - 19May2020): finished  786 trials in 0 min 35 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\t1st phase (24Mar2020 - 31Mar2020): finished 1252 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "Completed optimization. Total: 1 min 42 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      }
     ],
     "prompt_number": 11
    },
    {
     "cell_type": "heading",
     "level": 2,
     "metadata": {},
     "source": [
      "Show the history of reproduction number"
     ]
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "_ = scenario.param_history(targets=[\"Rt\"], divide_by_first=False)"
     ],
     "language": "python",
     "metadata": {},
     "outputs": [
      {
       "output_type": "display_data",
       "png": "\n",
       "text": [
        "<Figure size 648x432 with 1 Axes>"
       ]
      }
     ],
     "prompt_number": 12
    },
    {
     "cell_type": "heading",
     "level": 2,
     "metadata": {},
     "source": [
      "Simulate the number of cases"
     ]
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "scenario.add(end_date=\"01Jan2021\")\n",
      "_ = scenario.simulate()"
     ],
     "language": "python",
     "metadata": {},
     "outputs": [
      {
       "output_type": "display_data",
       "png": "\n",
       "text": [
        "<Figure size 648x432 with 1 Axes>"
       ]
      }
     ],
     "prompt_number": 13
    }
   ],
   "metadata": {}
  }
 ]
}
