{
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3.8.2 64-bit ('covid19-sir': pipenv)",
   "name": "python_defaultSpec_1596263359952"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": 3
  },
  "name": ""
 },
 "nbformat": 3,
 "nbformat_minor": 0,
 "worksheets": [
  {
   "cells": [
    {
     "cell_type": "heading",
     "level": 1,
     "metadata": {},
     "source": [
      "Usage (quickest version)"
     ]
    },
    {
     "cell_type": "heading",
     "level": 2,
     "metadata": {},
     "source": [
      "Preparation"
     ]
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "# Standard users\n",
      "# !pip install covsirphy"
     ],
     "language": "python",
     "metadata": {},
     "outputs": [],
     "prompt_number": 1
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "# Developers (Note: this notebook is in example directory)\n",
      "import os\n",
      "os.chdir(\"../\")"
     ],
     "language": "python",
     "metadata": {},
     "outputs": [],
     "prompt_number": 2
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "from pprint import pprint"
     ],
     "language": "python",
     "metadata": {},
     "outputs": [],
     "prompt_number": 3
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "import covsirphy as cs\n",
      "cs.__version__"
     ],
     "language": "python",
     "metadata": {
      "tags": []
     },
     "outputs": [
      {
       "output_type": "pyout",
       "prompt_number": 4,
       "text": [
        "'2.6.0-delta.new.72.fix.120.155.157'"
       ]
      }
     ],
     "prompt_number": 4
    },
    {
     "cell_type": "markdown",
     "metadata": {},
     "source": [
      "## Dataset preparation\n",
      "Download the datasets to \"input\" direcotry and load them.\n",
      "\n",
      "If \"input\" directory has the datasets, `DataLoader` will load the local files. If the datasets were updated in remote servers, `DataLoader` will update the local files automatically."
     ]
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "# Standard users and developers\n",
      "data_loader = cs.DataLoader(\"input\")\n",
      "# The number of cases (JHU style)\n",
      "jhu_data = data_loader.jhu(verbose=False)\n",
      "# Population in each country\n",
      "population_data = data_loader.population(verbose=False)"
     ],
     "language": "python",
     "metadata": {
      "tags": []
     },
     "outputs": [],
     "prompt_number": 5
    },
    {
     "cell_type": "markdown",
     "metadata": {},
     "source": [
      "Note:  \n",
      "Datasets were retrieved via [COVID-19 Data Hub](https://covid19datahub.io/https://covid19datahub.io/) and the citation is  \n",
      "Guidotti, E., Ardia, D., (2020), \"COVID-19 Data Hub\", Working paper, doi: 10.13140/RG.2.2.11649.81763.\n"
     ]
    },
    {
     "cell_type": "markdown",
     "metadata": {},
     "source": [
      "Scenario analysis can be performed for the following countries."
     ]
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "pprint(set(jhu_data.countries()) & set(population_data.countries()), compact=True)"
     ],
     "language": "python",
     "metadata": {
      "tags": []
     },
     "outputs": [
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "{"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Afghanistan'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Albania'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Algeria'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Andorra'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Angola'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        " "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Antigua and Barbuda'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Argentina'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Armenia'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Australia'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Austria'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        " "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Azerbaijan'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Bahamas'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Bahrain'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Bangladesh'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Barbados'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Belarus'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        " "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Belgium'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Belize'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Benin'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Bermuda'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Bhutan'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Bolivia'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        " "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Bosnia and Herzegovina'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Botswana'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Brazil'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Brunei'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Bulgaria'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        " "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Burkina Faso'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Burundi'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Cambodia'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Cameroon'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Canada'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Cape Verde'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        " "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Central African Republic'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Chad'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Chile'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'China'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Colombia'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Comoros'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        " "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Congo'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Congo, the Democratic Republic of the'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Costa Atlantica'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        " "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Costa Rica'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Croatia'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Cuba'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Cyprus'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Czech Republic'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Denmark'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        " "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Djibouti'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Dominica'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Dominican Republic'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Ecuador'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Egypt'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        " "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'El Salvador'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Equatorial Guinea'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Eritrea'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Estonia'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Ethiopia'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Fiji'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        " "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Finland'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'France'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Gabon'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Gambia'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Georgia'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Germany'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Ghana'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        " "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Greece'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Grenada'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Guatemala'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Guinea'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Guinea-Bissau'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Guyana'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Haiti'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        " "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Holy See'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Honduras'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Hungary'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Iceland'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'India'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Indonesia'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Iran'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        " "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Iraq'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Ireland'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Israel'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Italy'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Ivory Coast'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Jamaica'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Japan'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        " "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Jordan'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Kazakhstan'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Kenya'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Korea, South'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Kosovo'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Kuwait'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        " "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Kyrgyzstan'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Laos'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Latvia'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Lebanon'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Lesotho'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Liberia'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Libya'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        " "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Liechtenstein'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Lithuania'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Luxembourg'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Macedonia'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Madagascar'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        " "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Malawi'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Malaysia'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Maldives'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Mali'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Malta'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Mauritania'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Mauritius'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        " "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Mexico'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Moldova'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Monaco'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Mongolia'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Montenegro'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Morocco'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        " "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Mozambique'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Myanmar'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Namibia'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Nepal'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Netherlands'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'New Zealand'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        " "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Nicaragua'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Niger'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Nigeria'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Norway'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Oman'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Pakistan'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Palestine'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        " "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Panama'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Papua New Guinea'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Paraguay'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Peru'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Philippines'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Poland'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        " "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Portugal'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Qatar'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Romania'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Russia'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Rwanda'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Saint Kitts and Nevis'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        " "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Saint Lucia'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Saint Vincent and the Grenadines'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'San Marino'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        " "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Sao Tome and Principe'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Saudi Arabia'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Senegal'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Serbia'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Seychelles'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        " "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Sierra Leone'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Singapore'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Slovakia'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Slovenia'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Somalia'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'South Africa'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        " "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'South Sudan'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Spain'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Sri Lanka'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Sudan'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Suriname'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Swaziland'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        " "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Switzerland'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Syria'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Taiwan'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Tajikistan'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Tanzania'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Thailand'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        " "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Timor-Leste'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Togo'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Trinidad and Tobago'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Tunisia'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Turkey'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'UK'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        " "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Uganda'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Ukraine'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'United Arab Emirates'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'United States'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Uruguay'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        " "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Uzbekistan'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Venezuela'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Vietnam'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Western Sahara'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Yemen'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Zambia'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        " "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Zimbabwe'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "}"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      }
     ],
     "prompt_number": 6
    },
    {
     "cell_type": "markdown",
     "metadata": {},
     "source": [
      "## Start scenario analysis\n",
      "As an example, we will analysis the number of cases in Italy."
     ]
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "scenario = cs.Scenario(jhu_data, population_data, country=\"Italy\")"
     ],
     "language": "python",
     "metadata": {},
     "outputs": [],
     "prompt_number": 7
    },
    {
     "cell_type": "heading",
     "level": 2,
     "metadata": {},
     "source": [
      "Check records"
     ]
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "_ = scenario.records()"
     ],
     "language": "python",
     "metadata": {},
     "outputs": [
      {
       "output_type": "display_data",
       "png": "\n",
       "text": [
        "<Figure size 648x432 with 1 Axes>"
       ]
      }
     ],
     "prompt_number": 8
    },
    {
     "cell_type": "markdown",
     "metadata": {},
     "source": [
      "## S-R trend analysis\n",
      "S-R trend analysis finds the change points of SIR-derived ODE parameters."
     ]
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "scenario.trend()"
     ],
     "language": "python",
     "metadata": {},
     "outputs": [
      {
       "output_type": "display_data",
       "png": "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\n",
       "text": [
        "<Figure size 648x432 with 1 Axes>"
       ]
      },
      {
       "output_type": "pyout",
       "prompt_number": 9,
       "text": [
        "<covsirphy.analysis.scenario.Scenario at 0x7f610bbbaac0>"
       ]
      }
     ],
     "prompt_number": 9
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "scenario.summary()"
     ],
     "language": "python",
     "metadata": {},
     "outputs": [
      {
       "html": [
        "<div>\n",
        "<style scoped>\n",
        "    .dataframe tbody tr th:only-of-type {\n",
        "        vertical-align: middle;\n",
        "    }\n",
        "\n",
        "    .dataframe tbody tr th {\n",
        "        vertical-align: top;\n",
        "    }\n",
        "\n",
        "    .dataframe thead th {\n",
        "        text-align: right;\n",
        "    }\n",
        "</style>\n",
        "<table border=\"1\" class=\"dataframe\">\n",
        "  <thead>\n",
        "    <tr style=\"text-align: right;\">\n",
        "      <th></th>\n",
        "      <th>Type</th>\n",
        "      <th>Start</th>\n",
        "      <th>End</th>\n",
        "      <th>Population</th>\n",
        "    </tr>\n",
        "  </thead>\n",
        "  <tbody>\n",
        "    <tr>\n",
        "      <th>1st</th>\n",
        "      <td>Past</td>\n",
        "      <td>24Mar2020</td>\n",
        "      <td>01Apr2020</td>\n",
        "      <td>60483973</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>2nd</th>\n",
        "      <td>Past</td>\n",
        "      <td>02Apr2020</td>\n",
        "      <td>14Apr2020</td>\n",
        "      <td>60483973</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>3rd</th>\n",
        "      <td>Past</td>\n",
        "      <td>15Apr2020</td>\n",
        "      <td>24Apr2020</td>\n",
        "      <td>60483973</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>4th</th>\n",
        "      <td>Past</td>\n",
        "      <td>25Apr2020</td>\n",
        "      <td>09May2020</td>\n",
        "      <td>60483973</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>5th</th>\n",
        "      <td>Past</td>\n",
        "      <td>10May2020</td>\n",
        "      <td>21May2020</td>\n",
        "      <td>60483973</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>6th</th>\n",
        "      <td>Past</td>\n",
        "      <td>22May2020</td>\n",
        "      <td>14Jun2020</td>\n",
        "      <td>60483973</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>7th</th>\n",
        "      <td>Past</td>\n",
        "      <td>15Jun2020</td>\n",
        "      <td>02Aug2020</td>\n",
        "      <td>60483973</td>\n",
        "    </tr>\n",
        "  </tbody>\n",
        "</table>\n",
        "</div>"
       ],
       "output_type": "pyout",
       "prompt_number": 10,
       "text": [
        "     Type      Start        End  Population\n",
        "1st  Past  24Mar2020  01Apr2020    60483973\n",
        "2nd  Past  02Apr2020  14Apr2020    60483973\n",
        "3rd  Past  15Apr2020  24Apr2020    60483973\n",
        "4th  Past  25Apr2020  09May2020    60483973\n",
        "5th  Past  10May2020  21May2020    60483973\n",
        "6th  Past  22May2020  14Jun2020    60483973\n",
        "7th  Past  15Jun2020  02Aug2020    60483973"
       ]
      }
     ],
     "prompt_number": 10
    },
    {
     "cell_type": "markdown",
     "metadata": {},
     "source": [
      "## Hyperparameter estimation of ODE models\n",
      "As an example, use SIR-F model."
     ]
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "scenario.estimate(cs.SIRF)"
     ],
     "language": "python",
     "metadata": {
      "tags": []
     },
     "outputs": [
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n",
        "<Main scenario: perform parameter estimation>"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "Running optimization with 4 CPUs..."
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\t7th phase with SIR-F model finished 244 trials in 0 min 15 sec."
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\t1st phase with SIR-F model finished 217 trials in 0 min 5 sec."
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\t2nd phase with SIR-F model finished 218 trials in 0 min 5 sec."
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\t3rd phase with SIR-F model finished 217 trials in 0 min 5 sec."
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\t4th phase with SIR-F model finished 215 trials in 0 min 5 sec."
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\t5th phase with SIR-F model finished 229 trials in 0 min 5 sec."
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\t6th phase with SIR-F model finished 226 trials in 0 min 5 sec."
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "Completed optimization. Total: 0 min 25 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      }
     ],
     "prompt_number": 11
    },
    {
     "cell_type": "heading",
     "level": 2,
     "metadata": {},
     "source": [
      "Show the history of reproduction number"
     ]
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "_ = scenario.param_history(targets=[\"Rt\"], divide_by_first=False)"
     ],
     "language": "python",
     "metadata": {},
     "outputs": [
      {
       "output_type": "display_data",
       "png": "\n",
       "text": [
        "<Figure size 648x432 with 1 Axes>"
       ]
      }
     ],
     "prompt_number": 12
    },
    {
     "cell_type": "heading",
     "level": 2,
     "metadata": {},
     "source": [
      "Simulate the number of cases"
     ]
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "scenario.add(end_date=\"01Jan2021\")\n",
      "_ = scenario.simulate()"
     ],
     "language": "python",
     "metadata": {},
     "outputs": [
      {
       "output_type": "display_data",
       "png": "\n",
       "text": [
        "<Figure size 648x432 with 1 Axes>"
       ]
      }
     ],
     "prompt_number": 13
    }
   ],
   "metadata": {}
  }
 ]
}
