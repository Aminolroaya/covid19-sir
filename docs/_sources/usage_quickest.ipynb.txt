{
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3.8.2 64-bit ('covid19-sir': pipenv)",
   "name": "python_defaultSpec_1596263359952"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": 3
  },
  "name": ""
 },
 "nbformat": 3,
 "nbformat_minor": 0,
 "worksheets": [
  {
   "cells": [
    {
     "cell_type": "heading",
     "level": 1,
     "metadata": {},
     "source": [
      "Usage (quickest version)"
     ]
    },
    {
     "cell_type": "heading",
     "level": 2,
     "metadata": {},
     "source": [
      "Preparation"
     ]
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "# Standard users\n",
      "# !pip install covsirphy"
     ],
     "language": "python",
     "metadata": {},
     "outputs": [],
     "prompt_number": 1
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "# Developers (Note: this notebook is in example directory)\n",
      "import os\n",
      "os.chdir(\"../\")"
     ],
     "language": "python",
     "metadata": {},
     "outputs": [],
     "prompt_number": 2
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "from pprint import pprint"
     ],
     "language": "python",
     "metadata": {},
     "outputs": [],
     "prompt_number": 3
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "import covsirphy as cs\n",
      "cs.__version__"
     ],
     "language": "python",
     "metadata": {
      "tags": []
     },
     "outputs": [
      {
       "output_type": "pyout",
       "prompt_number": 4,
       "text": [
        "'2.8.3'"
       ]
      }
     ],
     "prompt_number": 4
    },
    {
     "cell_type": "markdown",
     "metadata": {},
     "source": [
      "## Dataset preparation\n",
      "Download the datasets to \"input\" direcotry and load them.\n",
      "\n",
      "If \"input\" directory has the datasets, `DataLoader` will load the local files. If the datasets were updated in remote servers, `DataLoader` will update the local files automatically."
     ]
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "# Standard users and developers\n",
      "data_loader = cs.DataLoader(\"input\")\n",
      "# The number of cases (JHU style)\n",
      "jhu_data = data_loader.jhu(verbose=False)\n",
      "# Population in each country\n",
      "population_data = data_loader.population(verbose=False)"
     ],
     "language": "python",
     "metadata": {
      "tags": []
     },
     "outputs": [],
     "prompt_number": 5
    },
    {
     "cell_type": "markdown",
     "metadata": {},
     "source": [
      "Note:  \n",
      "Datasets were retrieved via [COVID-19 Data Hub](https://covid19datahub.io/https://covid19datahub.io/) and the citation is  \n",
      "Guidotti, E., Ardia, D., (2020), \"COVID-19 Data Hub\", Journal of Open Source Software 5(51):2376, doi: 10.21105/joss.02376."
     ]
    },
    {
     "cell_type": "markdown",
     "metadata": {},
     "source": [
      "Scenario analysis can be performed for the following countries."
     ]
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "pprint(set(jhu_data.countries()) & set(population_data.countries()), compact=True)"
     ],
     "language": "python",
     "metadata": {
      "tags": []
     },
     "outputs": [
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "{"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Afghanistan'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Albania'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Algeria'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Andorra'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Angola'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        " "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Antigua and Barbuda'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Argentina'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Armenia'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Australia'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Austria'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        " "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Azerbaijan'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Bahamas'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Bahrain'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Bangladesh'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Barbados'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Belarus'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        " "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Belgium'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Belize'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Benin'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Bermuda'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Bhutan'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Bolivia'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        " "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Bosnia and Herzegovina'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Botswana'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Brazil'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Brunei'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Bulgaria'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        " "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Burkina Faso'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Burundi'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Cambodia'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Cameroon'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Canada'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Cape Verde'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        " "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Central African Republic'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Chad'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Chile'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'China'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Colombia'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Comoros'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        " "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Congo'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Costa Atlantica'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Costa Rica'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Croatia'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Cuba'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Cyprus'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        " "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Czech Republic'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Denmark'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Djibouti'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Dominica'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Dominican Republic'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        " "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Ecuador'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Egypt'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'El Salvador'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Equatorial Guinea'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Eritrea'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Estonia'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        " "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Ethiopia'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Fiji'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Finland'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'France'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Gabon'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Gambia'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Georgia'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        " "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Germany'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Ghana'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Greece'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Grenada'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Guatemala'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Guinea'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        " "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Guinea-Bissau'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Guyana'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Haiti'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Holy See'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Honduras'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Hungary'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        " "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Iceland'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'India'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Indonesia'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Iran'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Iraq'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Ireland'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Israel'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Italy'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        " "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Ivory Coast'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Jamaica'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Japan'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Jordan'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Kazakhstan'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Kenya'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        " "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Korea, South'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Kosovo'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Kuwait'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Kyrgyzstan'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Laos'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Latvia'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Lebanon'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        " "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Lesotho'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Liberia'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Libya'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Liechtenstein'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Lithuania'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Luxembourg'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        " "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Macedonia'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Madagascar'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Malawi'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Malaysia'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Maldives'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Mali'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Malta'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        " "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Mauritania'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Mauritius'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Mexico'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Moldova'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Monaco'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Mongolia'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        " "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Montenegro'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Morocco'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Mozambique'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Myanmar'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Namibia'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Nepal'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        " "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Netherlands'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'New Zealand'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Nicaragua'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Niger'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Nigeria'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Norway'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        " "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Oman'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Pakistan'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Palestine'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Panama'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Papua New Guinea'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Paraguay'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        " "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Peru'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Philippines'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Poland'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Portugal'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Qatar'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Romania'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Russia'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        " "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Rwanda'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Saint Kitts and Nevis'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Saint Lucia'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        " "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Saint Vincent and the Grenadines'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'San Marino'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Sao Tome and Principe'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        " "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Saudi Arabia'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Senegal'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Serbia'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Seychelles'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Sierra Leone'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Singapore'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        " "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Slovakia'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Slovenia'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Somalia'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'South Africa'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'South Sudan'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Spain'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        " "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Sri Lanka'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Sudan'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Suriname'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Swaziland'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Switzerland'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Syria'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        " "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Taiwan'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Tajikistan'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Tanzania'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Thailand'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Timor-Leste'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Togo'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        " "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Trinidad and Tobago'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Tunisia'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Turkey'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'UK'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Uganda'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Ukraine'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        " "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'United Arab Emirates'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'United States'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Uruguay'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Uzbekistan'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Venezuela'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        " "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Vietnam'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Western Sahara'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Yemen'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Zambia'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Zimbabwe'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "}"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      }
     ],
     "prompt_number": 6
    },
    {
     "cell_type": "markdown",
     "metadata": {},
     "source": [
      "## Start scenario analysis\n",
      "As an example, we will analysis the number of cases in Italy."
     ]
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "scenario = cs.Scenario(jhu_data, population_data, country=\"Italy\")"
     ],
     "language": "python",
     "metadata": {},
     "outputs": [],
     "prompt_number": 7
    },
    {
     "cell_type": "heading",
     "level": 2,
     "metadata": {},
     "source": [
      "Check records"
     ]
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "_ = scenario.records()"
     ],
     "language": "python",
     "metadata": {},
     "outputs": [
      {
       "output_type": "display_data",
       "png": "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\n",
       "text": [
        "<Figure size 648x432 with 1 Axes>"
       ]
      }
     ],
     "prompt_number": 8
    },
    {
     "cell_type": "markdown",
     "metadata": {},
     "source": [
      "## S-R trend analysis\n",
      "S-R trend analysis finds the change points of SIR-derived ODE parameters."
     ]
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "scenario.trend()"
     ],
     "language": "python",
     "metadata": {},
     "outputs": [
      {
       "output_type": "display_data",
       "png": "\n",
       "text": [
        "<Figure size 648x432 with 1 Axes>"
       ]
      },
      {
       "output_type": "pyout",
       "prompt_number": 9,
       "text": [
        "<covsirphy.analysis.scenario.Scenario at 0x7f4135993c70>"
       ]
      }
     ],
     "prompt_number": 9
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "scenario.summary()"
     ],
     "language": "python",
     "metadata": {},
     "outputs": [
      {
       "html": [
        "<div>\n",
        "<style scoped>\n",
        "    .dataframe tbody tr th:only-of-type {\n",
        "        vertical-align: middle;\n",
        "    }\n",
        "\n",
        "    .dataframe tbody tr th {\n",
        "        vertical-align: top;\n",
        "    }\n",
        "\n",
        "    .dataframe thead th {\n",
        "        text-align: right;\n",
        "    }\n",
        "</style>\n",
        "<table border=\"1\" class=\"dataframe\">\n",
        "  <thead>\n",
        "    <tr style=\"text-align: right;\">\n",
        "      <th></th>\n",
        "      <th>Type</th>\n",
        "      <th>Start</th>\n",
        "      <th>End</th>\n",
        "      <th>Population</th>\n",
        "    </tr>\n",
        "  </thead>\n",
        "  <tbody>\n",
        "    <tr>\n",
        "      <th>0th</th>\n",
        "      <td>Past</td>\n",
        "      <td>24Feb2020</td>\n",
        "      <td>20Mar2020</td>\n",
        "      <td>60483973</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>1st</th>\n",
        "      <td>Past</td>\n",
        "      <td>21Mar2020</td>\n",
        "      <td>28Mar2020</td>\n",
        "      <td>60483973</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>2nd</th>\n",
        "      <td>Past</td>\n",
        "      <td>29Mar2020</td>\n",
        "      <td>08Apr2020</td>\n",
        "      <td>60483973</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>3rd</th>\n",
        "      <td>Past</td>\n",
        "      <td>09Apr2020</td>\n",
        "      <td>18Apr2020</td>\n",
        "      <td>60483973</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>4th</th>\n",
        "      <td>Past</td>\n",
        "      <td>19Apr2020</td>\n",
        "      <td>30Apr2020</td>\n",
        "      <td>60483973</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>5th</th>\n",
        "      <td>Past</td>\n",
        "      <td>01May2020</td>\n",
        "      <td>10May2020</td>\n",
        "      <td>60483973</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>6th</th>\n",
        "      <td>Past</td>\n",
        "      <td>11May2020</td>\n",
        "      <td>26May2020</td>\n",
        "      <td>60483973</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>7th</th>\n",
        "      <td>Past</td>\n",
        "      <td>27May2020</td>\n",
        "      <td>14Jul2020</td>\n",
        "      <td>60483973</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>8th</th>\n",
        "      <td>Past</td>\n",
        "      <td>15Jul2020</td>\n",
        "      <td>24Aug2020</td>\n",
        "      <td>60483973</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>9th</th>\n",
        "      <td>Past</td>\n",
        "      <td>25Aug2020</td>\n",
        "      <td>11Sep2020</td>\n",
        "      <td>60483973</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>10th</th>\n",
        "      <td>Past</td>\n",
        "      <td>12Sep2020</td>\n",
        "      <td>23Sep2020</td>\n",
        "      <td>60483973</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>11th</th>\n",
        "      <td>Past</td>\n",
        "      <td>24Sep2020</td>\n",
        "      <td>03Oct2020</td>\n",
        "      <td>60483973</td>\n",
        "    </tr>\n",
        "  </tbody>\n",
        "</table>\n",
        "</div>"
       ],
       "output_type": "pyout",
       "prompt_number": 10,
       "text": [
        "      Type      Start        End  Population\n",
        "0th   Past  24Feb2020  20Mar2020    60483973\n",
        "1st   Past  21Mar2020  28Mar2020    60483973\n",
        "2nd   Past  29Mar2020  08Apr2020    60483973\n",
        "3rd   Past  09Apr2020  18Apr2020    60483973\n",
        "4th   Past  19Apr2020  30Apr2020    60483973\n",
        "5th   Past  01May2020  10May2020    60483973\n",
        "6th   Past  11May2020  26May2020    60483973\n",
        "7th   Past  27May2020  14Jul2020    60483973\n",
        "8th   Past  15Jul2020  24Aug2020    60483973\n",
        "9th   Past  25Aug2020  11Sep2020    60483973\n",
        "10th  Past  12Sep2020  23Sep2020    60483973\n",
        "11th  Past  24Sep2020  03Oct2020    60483973"
       ]
      }
     ],
     "prompt_number": 10
    },
    {
     "cell_type": "markdown",
     "metadata": {},
     "source": [
      "## Hyperparameter estimation of ODE models\n",
      "As an example, use SIR-F model."
     ]
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "scenario.estimate(cs.SIRF)"
     ],
     "language": "python",
     "metadata": {
      "tags": []
     },
     "outputs": [
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n",
        "<SIR-F model: parameter estimation>"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "Running optimization with 4 CPUs..."
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\t11th phase (24Sep2020 - 03Oct2020): finished  556 trials in 0 min 15 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\t3rd phase (09Apr2020 - 18Apr2020): finished  265 trials in 0 min  5 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\t4th phase (19Apr2020 - 30Apr2020): finished  263 trials in 0 min  5 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\t5th phase (01May2020 - 10May2020): finished  263 trials in 0 min  5 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\t6th phase (11May2020 - 26May2020): finished  259 trials in 0 min  5 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\t2nd phase (29Mar2020 - 08Apr2020): finished 1994 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\t1st phase (21Mar2020 - 28Mar2020): finished 1991 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\t0th phase (24Feb2020 - 20Mar2020): finished 1966 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\t7th phase (27May2020 - 14Jul2020): finished 1415 trials in 0 min 40 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\t10th phase (12Sep2020 - 23Sep2020): finished  267 trials in 0 min  5 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\t8th phase (15Jul2020 - 24Aug2020): finished 2063 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\t9th phase (25Aug2020 - 11Sep2020): finished 2076 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "Completed optimization. Total: 2 min 16 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      }
     ],
     "prompt_number": 11
    },
    {
     "cell_type": "heading",
     "level": 2,
     "metadata": {},
     "source": [
      "Show the history of reproduction number"
     ]
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "_ = scenario.param_history(targets=[\"Rt\"], divide_by_first=False)"
     ],
     "language": "python",
     "metadata": {},
     "outputs": [
      {
       "output_type": "display_data",
       "png": "\n",
       "text": [
        "<Figure size 648x432 with 1 Axes>"
       ]
      }
     ],
     "prompt_number": 12
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "# version >= 2.8.0\n",
      "_ = scenario.history(target=\"Rt\")"
     ],
     "language": "python",
     "metadata": {},
     "outputs": [
      {
       "output_type": "display_data",
       "png": "\n",
       "text": [
        "<Figure size 648x432 with 1 Axes>"
       ]
      }
     ],
     "prompt_number": 13
    },
    {
     "cell_type": "heading",
     "level": 2,
     "metadata": {},
     "source": [
      "Simulate the number of cases"
     ]
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "scenario.add(end_date=\"01Jan2021\")\n",
      "_ = scenario.simulate()"
     ],
     "language": "python",
     "metadata": {},
     "outputs": [
      {
       "output_type": "display_data",
       "png": "\n",
       "text": [
        "<Figure size 648x432 with 1 Axes>"
       ]
      }
     ],
     "prompt_number": 14
    }
   ],
   "metadata": {}
  }
 ]
}
