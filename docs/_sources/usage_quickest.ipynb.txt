{
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3.8.2 64-bit ('covid19-sir': pipenv)",
   "name": "python_defaultSpec_1596263359952"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": 3
  },
  "name": ""
 },
 "nbformat": 3,
 "nbformat_minor": 0,
 "worksheets": [
  {
   "cells": [
    {
     "cell_type": "heading",
     "level": 1,
     "metadata": {},
     "source": [
      "Usage (quickest version)"
     ]
    },
    {
     "cell_type": "heading",
     "level": 2,
     "metadata": {},
     "source": [
      "Preparation"
     ]
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "# Standard users\n",
      "# !pip install covsirphy"
     ],
     "language": "python",
     "metadata": {},
     "outputs": [],
     "prompt_number": 1
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "# Developers (Note: this notebook is in example directory)\n",
      "import os\n",
      "os.chdir(\"../\")"
     ],
     "language": "python",
     "metadata": {},
     "outputs": [],
     "prompt_number": 2
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "from pprint import pprint"
     ],
     "language": "python",
     "metadata": {},
     "outputs": [],
     "prompt_number": 3
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "import covsirphy as cs\n",
      "cs.__version__"
     ],
     "language": "python",
     "metadata": {
      "tags": []
     },
     "outputs": [
      {
       "output_type": "pyout",
       "prompt_number": 4,
       "text": [
        "'2.6.0-lambda.new.57.72.167.176.191.fix.120.155.157.163.164.165.174.188'"
       ]
      }
     ],
     "prompt_number": 4
    },
    {
     "cell_type": "markdown",
     "metadata": {},
     "source": [
      "## Dataset preparation\n",
      "Download the datasets to \"input\" direcotry and load them.\n",
      "\n",
      "If \"input\" directory has the datasets, `DataLoader` will load the local files. If the datasets were updated in remote servers, `DataLoader` will update the local files automatically."
     ]
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "# Standard users and developers\n",
      "data_loader = cs.DataLoader(\"input\")\n",
      "# The number of cases (JHU style)\n",
      "jhu_data = data_loader.jhu(verbose=False)\n",
      "# Population in each country\n",
      "population_data = data_loader.population(verbose=False)"
     ],
     "language": "python",
     "metadata": {
      "tags": []
     },
     "outputs": [],
     "prompt_number": 5
    },
    {
     "cell_type": "markdown",
     "metadata": {},
     "source": [
      "Note:  \n",
      "Datasets were retrieved via [COVID-19 Data Hub](https://covid19datahub.io/https://covid19datahub.io/) and the citation is  \n",
      "Guidotti, E., Ardia, D., (2020), \"COVID-19 Data Hub\", Working paper, doi: 10.13140/RG.2.2.11649.81763.\n"
     ]
    },
    {
     "cell_type": "markdown",
     "metadata": {},
     "source": [
      "Scenario analysis can be performed for the following countries."
     ]
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "pprint(set(jhu_data.countries()) & set(population_data.countries()), compact=True)"
     ],
     "language": "python",
     "metadata": {
      "tags": []
     },
     "outputs": [
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "{"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Afghanistan'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Albania'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Algeria'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Andorra'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Angola'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        " "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Antigua and Barbuda'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Argentina'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Armenia'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Australia'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Austria'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        " "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Azerbaijan'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Bahamas'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Bahrain'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Bangladesh'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Barbados'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Belarus'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        " "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Belgium'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Belize'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Benin'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Bermuda'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Bhutan'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Bolivia'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        " "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Bosnia and Herzegovina'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Botswana'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Brazil'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Brunei'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Bulgaria'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        " "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Burkina Faso'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Burundi'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Cambodia'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Cameroon'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Canada'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Cape Verde'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        " "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Central African Republic'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Chad'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Chile'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'China'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Colombia'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Comoros'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        " "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Congo'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Costa Atlantica'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Costa Rica'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Croatia'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Cuba'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Cyprus'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        " "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Czech Republic'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Denmark'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Djibouti'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Dominica'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Dominican Republic'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        " "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Ecuador'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Egypt'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'El Salvador'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Equatorial Guinea'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Eritrea'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Estonia'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        " "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Ethiopia'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Fiji'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Finland'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'France'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Gabon'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Gambia'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Georgia'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        " "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Germany'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Ghana'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Greece'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Grenada'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Guatemala'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Guinea'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        " "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Guinea-Bissau'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Guyana'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Haiti'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Holy See'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Honduras'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Hungary'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        " "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Iceland'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'India'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Indonesia'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Iran'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Iraq'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Ireland'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Israel'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Italy'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        " "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Ivory Coast'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Jamaica'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Japan'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Jordan'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Kazakhstan'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Kenya'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        " "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Korea, South'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Kosovo'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Kuwait'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Kyrgyzstan'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Laos'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Latvia'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Lebanon'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        " "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Lesotho'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Liberia'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Libya'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Liechtenstein'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Lithuania'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Luxembourg'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        " "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Macedonia'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Madagascar'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Malawi'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Malaysia'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Maldives'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Mali'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Malta'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        " "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Mauritania'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Mauritius'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Mexico'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Moldova'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Monaco'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Mongolia'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        " "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Montenegro'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Morocco'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Mozambique'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Myanmar'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Namibia'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Nepal'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        " "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Netherlands'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'New Zealand'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Nicaragua'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Niger'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Nigeria'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Norway'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        " "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Oman'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Pakistan'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Palestine'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Panama'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Papua New Guinea'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Paraguay'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        " "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Peru'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Philippines'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Poland'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Portugal'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Qatar'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Romania'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Russia'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        " "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Rwanda'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Saint Kitts and Nevis'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Saint Lucia'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        " "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Saint Vincent and the Grenadines'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'San Marino'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Sao Tome and Principe'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        " "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Saudi Arabia'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Senegal'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Serbia'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Seychelles'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Sierra Leone'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Singapore'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        " "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Slovakia'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Slovenia'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Somalia'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'South Africa'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'South Sudan'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Spain'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        " "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Sri Lanka'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Sudan'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Suriname'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Swaziland'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Switzerland'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Syria'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        " "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Taiwan'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Tajikistan'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Tanzania'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Thailand'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Timor-Leste'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Togo'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        " "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Trinidad and Tobago'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Tunisia'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Turkey'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'UK'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Uganda'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Ukraine'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        " "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'United Arab Emirates'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'United States'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Uruguay'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Uzbekistan'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Venezuela'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        " "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Vietnam'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Western Sahara'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Yemen'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Zambia'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Zimbabwe'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "}"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      }
     ],
     "prompt_number": 6
    },
    {
     "cell_type": "markdown",
     "metadata": {},
     "source": [
      "## Start scenario analysis\n",
      "As an example, we will analysis the number of cases in Italy."
     ]
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "scenario = cs.Scenario(jhu_data, population_data, country=\"Italy\")"
     ],
     "language": "python",
     "metadata": {},
     "outputs": [],
     "prompt_number": 7
    },
    {
     "cell_type": "heading",
     "level": 2,
     "metadata": {},
     "source": [
      "Check records"
     ]
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "_ = scenario.records()"
     ],
     "language": "python",
     "metadata": {},
     "outputs": [
      {
       "output_type": "display_data",
       "png": "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\n",
       "text": [
        "<Figure size 648x432 with 1 Axes>"
       ]
      }
     ],
     "prompt_number": 8
    },
    {
     "cell_type": "markdown",
     "metadata": {},
     "source": [
      "## S-R trend analysis\n",
      "S-R trend analysis finds the change points of SIR-derived ODE parameters."
     ]
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "scenario.trend()"
     ],
     "language": "python",
     "metadata": {},
     "outputs": [
      {
       "output_type": "display_data",
       "png": "\n",
       "text": [
        "<Figure size 648x432 with 1 Axes>"
       ]
      },
      {
       "output_type": "pyout",
       "prompt_number": 9,
       "text": [
        "<covsirphy.analysis.scenario.Scenario at 0x7f8cd87ea7f0>"
       ]
      }
     ],
     "prompt_number": 9
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "scenario.summary()"
     ],
     "language": "python",
     "metadata": {},
     "outputs": [
      {
       "html": [
        "<div>\n",
        "<style scoped>\n",
        "    .dataframe tbody tr th:only-of-type {\n",
        "        vertical-align: middle;\n",
        "    }\n",
        "\n",
        "    .dataframe tbody tr th {\n",
        "        vertical-align: top;\n",
        "    }\n",
        "\n",
        "    .dataframe thead th {\n",
        "        text-align: right;\n",
        "    }\n",
        "</style>\n",
        "<table border=\"1\" class=\"dataframe\">\n",
        "  <thead>\n",
        "    <tr style=\"text-align: right;\">\n",
        "      <th></th>\n",
        "      <th>Type</th>\n",
        "      <th>Start</th>\n",
        "      <th>End</th>\n",
        "      <th>Population</th>\n",
        "    </tr>\n",
        "  </thead>\n",
        "  <tbody>\n",
        "    <tr>\n",
        "      <th>1st</th>\n",
        "      <td>Past</td>\n",
        "      <td>24Mar2020</td>\n",
        "      <td>31Mar2020</td>\n",
        "      <td>60483973</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>2nd</th>\n",
        "      <td>Past</td>\n",
        "      <td>01Apr2020</td>\n",
        "      <td>12Apr2020</td>\n",
        "      <td>60483973</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>3rd</th>\n",
        "      <td>Past</td>\n",
        "      <td>13Apr2020</td>\n",
        "      <td>21Apr2020</td>\n",
        "      <td>60483973</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>4th</th>\n",
        "      <td>Past</td>\n",
        "      <td>22Apr2020</td>\n",
        "      <td>01May2020</td>\n",
        "      <td>60483973</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>5th</th>\n",
        "      <td>Past</td>\n",
        "      <td>02May2020</td>\n",
        "      <td>09May2020</td>\n",
        "      <td>60483973</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>6th</th>\n",
        "      <td>Past</td>\n",
        "      <td>10May2020</td>\n",
        "      <td>20May2020</td>\n",
        "      <td>60483973</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>7th</th>\n",
        "      <td>Past</td>\n",
        "      <td>21May2020</td>\n",
        "      <td>04Jun2020</td>\n",
        "      <td>60483973</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>8th</th>\n",
        "      <td>Past</td>\n",
        "      <td>05Jun2020</td>\n",
        "      <td>08Jul2020</td>\n",
        "      <td>60483973</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>9th</th>\n",
        "      <td>Past</td>\n",
        "      <td>09Jul2020</td>\n",
        "      <td>15Aug2020</td>\n",
        "      <td>60483973</td>\n",
        "    </tr>\n",
        "  </tbody>\n",
        "</table>\n",
        "</div>"
       ],
       "output_type": "pyout",
       "prompt_number": 10,
       "text": [
        "     Type      Start        End  Population\n",
        "1st  Past  24Mar2020  31Mar2020    60483973\n",
        "2nd  Past  01Apr2020  12Apr2020    60483973\n",
        "3rd  Past  13Apr2020  21Apr2020    60483973\n",
        "4th  Past  22Apr2020  01May2020    60483973\n",
        "5th  Past  02May2020  09May2020    60483973\n",
        "6th  Past  10May2020  20May2020    60483973\n",
        "7th  Past  21May2020  04Jun2020    60483973\n",
        "8th  Past  05Jun2020  08Jul2020    60483973\n",
        "9th  Past  09Jul2020  15Aug2020    60483973"
       ]
      }
     ],
     "prompt_number": 10
    },
    {
     "cell_type": "markdown",
     "metadata": {},
     "source": [
      "## Hyperparameter estimation of ODE models\n",
      "As an example, use SIR-F model."
     ]
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "scenario.estimate(cs.SIRF)"
     ],
     "language": "python",
     "metadata": {
      "tags": []
     },
     "outputs": [
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n",
        "<SIR-F model: parameter estimation>"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "Running optimization with 4 CPUs..."
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\t9th phase (09Jul2020 - 15Aug2020): finished 1482 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\t2nd phase (01Apr2020 - 12Apr2020): finished  209 trials in 0 min  5 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\t4th phase (22Apr2020 - 01May2020): finished  209 trials in 0 min  5 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\t3rd phase (13Apr2020 - 21Apr2020): finished  208 trials in 0 min  5 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\t1st phase (24Mar2020 - 31Mar2020): finished  385 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\t6th phase (10May2020 - 20May2020): finished  204 trials in 0 min  5 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\t5th phase (02May2020 - 09May2020): finished  396 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\t7th phase (21May2020 - 04Jun2020): finished  395 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\t8th phase (05Jun2020 - 08Jul2020): finished  588 trials in 0 min 15 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "Completed optimization. Total: 1 min 26 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      }
     ],
     "prompt_number": 11
    },
    {
     "cell_type": "heading",
     "level": 2,
     "metadata": {},
     "source": [
      "Show the history of reproduction number"
     ]
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "_ = scenario.param_history(targets=[\"Rt\"], divide_by_first=False)"
     ],
     "language": "python",
     "metadata": {},
     "outputs": [
      {
       "output_type": "display_data",
       "png": "\n",
       "text": [
        "<Figure size 648x432 with 1 Axes>"
       ]
      }
     ],
     "prompt_number": 12
    },
    {
     "cell_type": "heading",
     "level": 2,
     "metadata": {},
     "source": [
      "Simulate the number of cases"
     ]
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "scenario.add(end_date=\"01Jan2021\")\n",
      "_ = scenario.simulate()"
     ],
     "language": "python",
     "metadata": {},
     "outputs": [
      {
       "output_type": "display_data",
       "png": "\n",
       "text": [
        "<Figure size 648x432 with 1 Axes>"
       ]
      }
     ],
     "prompt_number": 13
    }
   ],
   "metadata": {}
  }
 ]
}
