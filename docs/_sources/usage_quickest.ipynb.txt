{
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3.8.2 64-bit ('covid19-sir': pipenv)",
   "name": "python_defaultSpec_1596263359952"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": 3
  },
  "name": ""
 },
 "nbformat": 3,
 "nbformat_minor": 0,
 "worksheets": [
  {
   "cells": [
    {
     "cell_type": "heading",
     "level": 1,
     "metadata": {},
     "source": [
      "Usage (quickest version)"
     ]
    },
    {
     "cell_type": "heading",
     "level": 2,
     "metadata": {},
     "source": [
      "Preparation"
     ]
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "# Standard users\n",
      "# !pip install covsirphy"
     ],
     "language": "python",
     "metadata": {},
     "outputs": [],
     "prompt_number": 1
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "# Developers (Note: this notebook is in example directory)\n",
      "import os\n",
      "os.chdir(\"../\")"
     ],
     "language": "python",
     "metadata": {},
     "outputs": [],
     "prompt_number": 2
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "from pprint import pprint"
     ],
     "language": "python",
     "metadata": {},
     "outputs": [],
     "prompt_number": 3
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "import covsirphy as cs\n",
      "cs.__version__"
     ],
     "language": "python",
     "metadata": {
      "tags": []
     },
     "outputs": [
      {
       "output_type": "pyout",
       "prompt_number": 4,
       "text": [
        "'2.8.3'"
       ]
      }
     ],
     "prompt_number": 4
    },
    {
     "cell_type": "markdown",
     "metadata": {},
     "source": [
      "## Dataset preparation\n",
      "Download the datasets to \"input\" direcotry and load them.\n",
      "\n",
      "If \"input\" directory has the datasets, `DataLoader` will load the local files. If the datasets were updated in remote servers, `DataLoader` will update the local files automatically."
     ]
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "# Standard users and developers\n",
      "data_loader = cs.DataLoader(\"input\")\n",
      "# The number of cases (JHU style)\n",
      "jhu_data = data_loader.jhu(verbose=False)\n",
      "# Population in each country\n",
      "population_data = data_loader.population(verbose=False)"
     ],
     "language": "python",
     "metadata": {
      "tags": []
     },
     "outputs": [],
     "prompt_number": 5
    },
    {
     "cell_type": "markdown",
     "metadata": {},
     "source": [
      "Note:  \n",
      "Datasets were retrieved via [COVID-19 Data Hub](https://covid19datahub.io/https://covid19datahub.io/) and the citation is  \n",
      "Guidotti, E., Ardia, D., (2020), \"COVID-19 Data Hub\", Journal of Open Source Software 5(51):2376, doi: 10.21105/joss.02376."
     ]
    },
    {
     "cell_type": "markdown",
     "metadata": {},
     "source": [
      "Scenario analysis can be performed for the following countries."
     ]
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "pprint(set(jhu_data.countries()) & set(population_data.countries()), compact=True)"
     ],
     "language": "python",
     "metadata": {
      "tags": []
     },
     "outputs": [
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "{"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Afghanistan'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Albania'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Algeria'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Andorra'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Angola'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        " "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Antigua and Barbuda'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Argentina'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Armenia'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Australia'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Austria'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        " "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Azerbaijan'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Bahamas'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Bahrain'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Bangladesh'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Barbados'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Belarus'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        " "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Belgium'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Belize'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Benin'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Bermuda'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Bhutan'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Bolivia'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        " "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Bosnia and Herzegovina'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Botswana'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Brazil'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Brunei'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Bulgaria'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        " "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Burkina Faso'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Burundi'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Cambodia'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Cameroon'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Canada'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Cape Verde'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        " "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Central African Republic'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Chad'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Chile'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'China'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Colombia'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Comoros'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        " "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Congo'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Costa Atlantica'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Costa Rica'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Croatia'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Cuba'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Cyprus'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        " "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Czech Republic'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Denmark'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Djibouti'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Dominica'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Dominican Republic'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        " "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Ecuador'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Egypt'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'El Salvador'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Equatorial Guinea'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Eritrea'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Estonia'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        " "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Ethiopia'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Fiji'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Finland'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'France'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Gabon'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Gambia'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Georgia'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        " "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Germany'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Ghana'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Greece'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Grenada'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Guatemala'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Guinea'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        " "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Guinea-Bissau'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Guyana'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Haiti'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Holy See'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Honduras'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Hungary'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        " "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Iceland'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'India'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Indonesia'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Iran'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Iraq'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Ireland'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Israel'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Italy'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        " "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Ivory Coast'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Jamaica'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Japan'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Jordan'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Kazakhstan'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Kenya'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        " "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Korea, South'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Kosovo'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Kuwait'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Kyrgyzstan'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Laos'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Latvia'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Lebanon'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        " "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Lesotho'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Liberia'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Libya'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Liechtenstein'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Lithuania'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Luxembourg'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        " "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Macedonia'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Madagascar'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Malawi'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Malaysia'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Maldives'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Mali'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Malta'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        " "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Mauritania'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Mauritius'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Mexico'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Moldova'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Monaco'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Mongolia'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        " "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Montenegro'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Morocco'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Mozambique'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Myanmar'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Namibia'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Nepal'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        " "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Netherlands'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'New Zealand'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Nicaragua'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Niger'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Nigeria'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Norway'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        " "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Oman'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Pakistan'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Palestine'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Panama'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Papua New Guinea'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Paraguay'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        " "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Peru'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Philippines'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Poland'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Portugal'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Qatar'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Romania'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Russia'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        " "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Rwanda'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Saint Kitts and Nevis'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Saint Lucia'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        " "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Saint Vincent and the Grenadines'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'San Marino'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Sao Tome and Principe'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        " "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Saudi Arabia'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Senegal'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Serbia'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Seychelles'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Sierra Leone'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Singapore'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        " "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Slovakia'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Slovenia'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Somalia'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'South Africa'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'South Sudan'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Spain'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        " "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Sri Lanka'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Sudan'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Suriname'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Swaziland'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Switzerland'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Syria'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        " "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Taiwan'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Tajikistan'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Tanzania'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Thailand'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Timor-Leste'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Togo'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        " "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Trinidad and Tobago'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Tunisia'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Turkey'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'UK'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Uganda'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Ukraine'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        " "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'United Arab Emirates'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'United States'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Uruguay'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Uzbekistan'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Venezuela'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        " "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Vietnam'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Western Sahara'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Yemen'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Zambia'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Zimbabwe'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "}"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      }
     ],
     "prompt_number": 6
    },
    {
     "cell_type": "markdown",
     "metadata": {},
     "source": [
      "## Start scenario analysis\n",
      "As an example, we will analysis the number of cases in Italy."
     ]
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "scenario = cs.Scenario(jhu_data, population_data, country=\"Italy\")"
     ],
     "language": "python",
     "metadata": {},
     "outputs": [],
     "prompt_number": 7
    },
    {
     "cell_type": "heading",
     "level": 2,
     "metadata": {},
     "source": [
      "Check records"
     ]
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "_ = scenario.records()"
     ],
     "language": "python",
     "metadata": {},
     "outputs": [
      {
       "output_type": "display_data",
       "png": "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\n",
       "text": [
        "<Figure size 648x432 with 1 Axes>"
       ]
      }
     ],
     "prompt_number": 8
    },
    {
     "cell_type": "markdown",
     "metadata": {},
     "source": [
      "## S-R trend analysis\n",
      "S-R trend analysis finds the change points of SIR-derived ODE parameters."
     ]
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "scenario.trend()"
     ],
     "language": "python",
     "metadata": {},
     "outputs": [
      {
       "output_type": "display_data",
       "png": "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2aDPGFNd/otRD7ntdq6/9BrefuEN+vU9nsP27cOaeWV8/vYk3p4+iVveHUlZWRmXX345ZWVlNGzYkB122IHJkyfzzjvvsMcee3DOOefQuHFjGjVqRJ06daJOz5ic1OTDu34isj0wBtiPKub0RTHHzwZ9Achm0NerVy8Axo8fn1UfubYLStT9pxPHmMKUlPyTkqeff2A4dOhQGjVqRL169Tj44IPZeeed+fXXX9MO8OrWrUujRo2YNWsWX3/9NVtttRWHH344jRo1olGjRjRu3JiGDRtSXFwcQVY1V9w+g/nGE7d8oOYO+kSkAVBLVRd5h3dvAP4AnAn8DDRW1TXeuhOIeNBnc/pCdtxxx4XaLihR959OHGMKU1LyT0qefqlzCHfffXcmTJhA8+bNOf/88yktLWX48OH079+fMWPGUFJSQrNmzbj00ktZsmQJn332Ge3bt6dWrVobTNZXVRo2bLjeQHDixIm89tpr9OjRgwsvvJDGjRtTr149iorssjQQv89gvvHELZ8arg3wjIgUA8XAV8AAVZ0vIo8DX4jIAlXdM9IoPbanLwB2eNcYE5XUvYKpr1177bUsWbKEXr16rRscXnDBBSxZsmTdY9myZRtsV1VZvHgxDRs2pGvXrjRu3Ji33nqLV155hZ49e3LJJZfQuHFj6tatG3bKZiNUU/f01TQ26AuADfqMMXGXbnDoX/boo49y6qmncvrpp7NkyRKuvvpq6tevT5MmTejevTtLlixh5cqVG2x35cqVrF69mnnz5rHppptSXl7O22+/TbNmzfjqq6844ogjuOWWW6hVyw4smcrZoC8cNugLQDaDvh49egAwYcKErPrItV1Qou4/nTjGFKak5J+UPDOJogaV7UF84okn6NevH/369eO8886jfv36G8wZTDfAKy8vZ5NNNuGXX35hypQpbLvttqgqY8eOpU+fPlxzzTXUr18/loeU4/YZzDeeuOUDNugLi/3pFbLTTjst1HZBibr/dOIYU5iSkn9S8swkihqkzitM99quu+7KiBEj2G677fjyyy8ZMGAAZWVlPPTQQ+y4447Mnj2bevXq0aBBA5o2bco222zDZ599xhZbbEGdOnUQEY455hgAhgwZwtq1axER2rdvz/Tp0/n888/p2rUr5eXlPPfcc/Tt25frr7+eunXrpr2eYaHE7TOYbzxxy8eEx/b0BcAO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\n",
       "text": [
        "<Figure size 648x432 with 1 Axes>"
       ]
      },
      {
       "output_type": "pyout",
       "prompt_number": 9,
       "text": [
        "<covsirphy.analysis.scenario.Scenario at 0x7f87e1b9e370>"
       ]
      }
     ],
     "prompt_number": 9
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "scenario.summary()"
     ],
     "language": "python",
     "metadata": {},
     "outputs": [
      {
       "html": [
        "<div>\n",
        "<style scoped>\n",
        "    .dataframe tbody tr th:only-of-type {\n",
        "        vertical-align: middle;\n",
        "    }\n",
        "\n",
        "    .dataframe tbody tr th {\n",
        "        vertical-align: top;\n",
        "    }\n",
        "\n",
        "    .dataframe thead th {\n",
        "        text-align: right;\n",
        "    }\n",
        "</style>\n",
        "<table border=\"1\" class=\"dataframe\">\n",
        "  <thead>\n",
        "    <tr style=\"text-align: right;\">\n",
        "      <th></th>\n",
        "      <th>Type</th>\n",
        "      <th>Start</th>\n",
        "      <th>End</th>\n",
        "      <th>Population</th>\n",
        "    </tr>\n",
        "  </thead>\n",
        "  <tbody>\n",
        "    <tr>\n",
        "      <th>0th</th>\n",
        "      <td>Past</td>\n",
        "      <td>24Feb2020</td>\n",
        "      <td>20Mar2020</td>\n",
        "      <td>60483973</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>1st</th>\n",
        "      <td>Past</td>\n",
        "      <td>21Mar2020</td>\n",
        "      <td>28Mar2020</td>\n",
        "      <td>60483973</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>2nd</th>\n",
        "      <td>Past</td>\n",
        "      <td>29Mar2020</td>\n",
        "      <td>08Apr2020</td>\n",
        "      <td>60483973</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>3rd</th>\n",
        "      <td>Past</td>\n",
        "      <td>09Apr2020</td>\n",
        "      <td>18Apr2020</td>\n",
        "      <td>60483973</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>4th</th>\n",
        "      <td>Past</td>\n",
        "      <td>19Apr2020</td>\n",
        "      <td>30Apr2020</td>\n",
        "      <td>60483973</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>5th</th>\n",
        "      <td>Past</td>\n",
        "      <td>01May2020</td>\n",
        "      <td>10May2020</td>\n",
        "      <td>60483973</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>6th</th>\n",
        "      <td>Past</td>\n",
        "      <td>11May2020</td>\n",
        "      <td>22May2020</td>\n",
        "      <td>60483973</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>7th</th>\n",
        "      <td>Past</td>\n",
        "      <td>23May2020</td>\n",
        "      <td>23Jun2020</td>\n",
        "      <td>60483973</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>8th</th>\n",
        "      <td>Past</td>\n",
        "      <td>24Jun2020</td>\n",
        "      <td>15Aug2020</td>\n",
        "      <td>60483973</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>9th</th>\n",
        "      <td>Past</td>\n",
        "      <td>16Aug2020</td>\n",
        "      <td>08Sep2020</td>\n",
        "      <td>60483973</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>10th</th>\n",
        "      <td>Past</td>\n",
        "      <td>09Sep2020</td>\n",
        "      <td>21Sep2020</td>\n",
        "      <td>60483973</td>\n",
        "    </tr>\n",
        "  </tbody>\n",
        "</table>\n",
        "</div>"
       ],
       "output_type": "pyout",
       "prompt_number": 10,
       "text": [
        "      Type      Start        End  Population\n",
        "0th   Past  24Feb2020  20Mar2020    60483973\n",
        "1st   Past  21Mar2020  28Mar2020    60483973\n",
        "2nd   Past  29Mar2020  08Apr2020    60483973\n",
        "3rd   Past  09Apr2020  18Apr2020    60483973\n",
        "4th   Past  19Apr2020  30Apr2020    60483973\n",
        "5th   Past  01May2020  10May2020    60483973\n",
        "6th   Past  11May2020  22May2020    60483973\n",
        "7th   Past  23May2020  23Jun2020    60483973\n",
        "8th   Past  24Jun2020  15Aug2020    60483973\n",
        "9th   Past  16Aug2020  08Sep2020    60483973\n",
        "10th  Past  09Sep2020  21Sep2020    60483973"
       ]
      }
     ],
     "prompt_number": 10
    },
    {
     "cell_type": "markdown",
     "metadata": {},
     "source": [
      "## Hyperparameter estimation of ODE models\n",
      "As an example, use SIR-F model."
     ]
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "scenario.estimate(cs.SIRF)"
     ],
     "language": "python",
     "metadata": {
      "tags": []
     },
     "outputs": [
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n",
        "<SIR-F model: parameter estimation>"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "Running optimization with 4 CPUs..."
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\t10th phase (09Sep2020 - 21Sep2020): finished 1449 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\t3rd phase (09Apr2020 - 18Apr2020): finished  168 trials in 0 min  5 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\t0th phase (24Feb2020 - 20Mar2020): finished 1427 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\t1st phase (21Mar2020 - 28Mar2020): finished 1443 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\t2nd phase (29Mar2020 - 08Apr2020): finished 1459 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\t6th phase (11May2020 - 22May2020): finished  179 trials in 0 min  5 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\t4th phase (19Apr2020 - 30Apr2020): finished 1418 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\t5th phase (01May2020 - 10May2020): finished  329 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\t7th phase (23May2020 - 23Jun2020): finished  322 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\t8th phase (24Jun2020 - 15Aug2020): finished  364 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\t9th phase (16Aug2020 - 08Sep2020): finished 1752 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "Completed optimization. Total: 3 min  6 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      }
     ],
     "prompt_number": 11
    },
    {
     "cell_type": "heading",
     "level": 2,
     "metadata": {},
     "source": [
      "Show the history of reproduction number"
     ]
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "_ = scenario.param_history(targets=[\"Rt\"], divide_by_first=False)"
     ],
     "language": "python",
     "metadata": {},
     "outputs": [
      {
       "output_type": "display_data",
       "png": "\n",
       "text": [
        "<Figure size 648x432 with 1 Axes>"
       ]
      }
     ],
     "prompt_number": 12
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "# version >= 2.8.0\n",
      "_ = scenario.history(target=\"Rt\")"
     ],
     "language": "python",
     "metadata": {},
     "outputs": [
      {
       "output_type": "display_data",
       "png": "\n",
       "text": [
        "<Figure size 648x432 with 1 Axes>"
       ]
      }
     ],
     "prompt_number": 13
    },
    {
     "cell_type": "heading",
     "level": 2,
     "metadata": {},
     "source": [
      "Simulate the number of cases"
     ]
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "scenario.add(end_date=\"01Jan2021\")\n",
      "_ = scenario.simulate()"
     ],
     "language": "python",
     "metadata": {},
     "outputs": [
      {
       "output_type": "display_data",
       "png": "\n",
       "text": [
        "<Figure size 648x432 with 1 Axes>"
       ]
      }
     ],
     "prompt_number": 14
    }
   ],
   "metadata": {}
  }
 ]
}
