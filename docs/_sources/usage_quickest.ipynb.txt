{
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3.8.2 64-bit ('covid19-sir': pipenv)",
   "name": "python_defaultSpec_1596263359952"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": 3
  },
  "name": ""
 },
 "nbformat": 3,
 "nbformat_minor": 0,
 "worksheets": [
  {
   "cells": [
    {
     "cell_type": "heading",
     "level": 1,
     "metadata": {},
     "source": [
      "Usage (quickest version)"
     ]
    },
    {
     "cell_type": "heading",
     "level": 2,
     "metadata": {},
     "source": [
      "Preparation"
     ]
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "# Standard users\n",
      "# !pip install covsirphy"
     ],
     "language": "python",
     "metadata": {},
     "outputs": [],
     "prompt_number": 1
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "# Developers (Note: this notebook is in example directory)\n",
      "import os\n",
      "os.chdir(\"../\")"
     ],
     "language": "python",
     "metadata": {},
     "outputs": [],
     "prompt_number": 2
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "from pprint import pprint"
     ],
     "language": "python",
     "metadata": {},
     "outputs": [],
     "prompt_number": 3
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "import covsirphy as cs\n",
      "cs.__version__"
     ],
     "language": "python",
     "metadata": {
      "tags": []
     },
     "outputs": [
      {
       "output_type": "pyout",
       "prompt_number": 4,
       "text": [
        "'2.7.0'"
       ]
      }
     ],
     "prompt_number": 4
    },
    {
     "cell_type": "markdown",
     "metadata": {},
     "source": [
      "## Dataset preparation\n",
      "Download the datasets to \"input\" direcotry and load them.\n",
      "\n",
      "If \"input\" directory has the datasets, `DataLoader` will load the local files. If the datasets were updated in remote servers, `DataLoader` will update the local files automatically."
     ]
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "# Standard users and developers\n",
      "data_loader = cs.DataLoader(\"input\")\n",
      "# The number of cases (JHU style)\n",
      "jhu_data = data_loader.jhu(verbose=False)\n",
      "# Population in each country\n",
      "population_data = data_loader.population(verbose=False)"
     ],
     "language": "python",
     "metadata": {
      "tags": []
     },
     "outputs": [],
     "prompt_number": 5
    },
    {
     "cell_type": "markdown",
     "metadata": {},
     "source": [
      "Note:  \n",
      "Datasets were retrieved via [COVID-19 Data Hub](https://covid19datahub.io/https://covid19datahub.io/) and the citation is  \n",
      "Guidotti, E., Ardia, D., (2020), \"COVID-19 Data Hub\", Working paper, doi: 10.13140/RG.2.2.11649.81763.\n"
     ]
    },
    {
     "cell_type": "markdown",
     "metadata": {},
     "source": [
      "Scenario analysis can be performed for the following countries."
     ]
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "pprint(set(jhu_data.countries()) & set(population_data.countries()), compact=True)"
     ],
     "language": "python",
     "metadata": {
      "tags": []
     },
     "outputs": [
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "{"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Afghanistan'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Albania'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Algeria'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Andorra'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Angola'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        " "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Antigua and Barbuda'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Argentina'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Armenia'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Australia'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Austria'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        " "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Azerbaijan'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Bahamas'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Bahrain'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Bangladesh'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Barbados'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Belarus'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        " "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Belgium'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Belize'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Benin'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Bermuda'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Bhutan'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Bolivia'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        " "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Bosnia and Herzegovina'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Botswana'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Brazil'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Brunei'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Bulgaria'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        " "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Burkina Faso'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Burundi'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Cambodia'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Cameroon'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Canada'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Cape Verde'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        " "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Central African Republic'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Chad'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Chile'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'China'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Colombia'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Comoros'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        " "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Congo'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Costa Atlantica'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Costa Rica'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Croatia'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Cuba'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Cyprus'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        " "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Czech Republic'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Denmark'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Djibouti'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Dominica'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Dominican Republic'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        " "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Ecuador'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Egypt'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'El Salvador'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Equatorial Guinea'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Eritrea'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Estonia'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        " "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Ethiopia'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Fiji'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Finland'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'France'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Gabon'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Gambia'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Georgia'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        " "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Germany'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Ghana'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Greece'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Grenada'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Guatemala'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Guinea'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        " "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Guinea-Bissau'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Guyana'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Haiti'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Holy See'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Honduras'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Hungary'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        " "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Iceland'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'India'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Indonesia'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Iran'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Iraq'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Ireland'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Israel'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Italy'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        " "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Ivory Coast'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Jamaica'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Japan'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Jordan'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Kazakhstan'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Kenya'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        " "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Korea, South'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Kosovo'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Kuwait'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Kyrgyzstan'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Laos'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Latvia'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Lebanon'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        " "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Lesotho'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Liberia'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Libya'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Liechtenstein'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Lithuania'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Luxembourg'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        " "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Macedonia'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Madagascar'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Malawi'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Malaysia'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Maldives'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Mali'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Malta'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        " "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Mauritania'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Mauritius'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Mexico'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Moldova'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Monaco'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Mongolia'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        " "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Montenegro'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Morocco'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Mozambique'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Myanmar'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Namibia'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Nepal'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        " "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Netherlands'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'New Zealand'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Nicaragua'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Niger'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Nigeria'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Norway'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        " "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Oman'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Pakistan'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Palestine'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Panama'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Papua New Guinea'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Paraguay'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        " "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Peru'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Philippines'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Poland'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Portugal'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Qatar'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Romania'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Russia'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        " "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Rwanda'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Saint Kitts and Nevis'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Saint Lucia'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        " "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Saint Vincent and the Grenadines'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'San Marino'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Sao Tome and Principe'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        " "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Saudi Arabia'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Senegal'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Serbia'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Seychelles'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Sierra Leone'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Singapore'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        " "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Slovakia'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Slovenia'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Somalia'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'South Africa'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'South Sudan'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Spain'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        " "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Sri Lanka'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Sudan'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Suriname'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Swaziland'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Switzerland'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Syria'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        " "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Taiwan'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Tajikistan'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Tanzania'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Thailand'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Timor-Leste'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Togo'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        " "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Trinidad and Tobago'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Tunisia'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Turkey'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'UK'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Uganda'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Ukraine'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        " "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'United Arab Emirates'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'United States'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Uruguay'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Uzbekistan'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Venezuela'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        " "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Vietnam'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Western Sahara'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Yemen'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Zambia'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Zimbabwe'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "}"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      }
     ],
     "prompt_number": 6
    },
    {
     "cell_type": "markdown",
     "metadata": {},
     "source": [
      "## Start scenario analysis\n",
      "As an example, we will analysis the number of cases in Italy."
     ]
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "scenario = cs.Scenario(jhu_data, population_data, country=\"Italy\")"
     ],
     "language": "python",
     "metadata": {},
     "outputs": [],
     "prompt_number": 7
    },
    {
     "cell_type": "heading",
     "level": 2,
     "metadata": {},
     "source": [
      "Check records"
     ]
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "_ = scenario.records()"
     ],
     "language": "python",
     "metadata": {},
     "outputs": [
      {
       "output_type": "display_data",
       "png": "\n",
       "text": [
        "<Figure size 648x432 with 1 Axes>"
       ]
      }
     ],
     "prompt_number": 8
    },
    {
     "cell_type": "markdown",
     "metadata": {},
     "source": [
      "## S-R trend analysis\n",
      "S-R trend analysis finds the change points of SIR-derived ODE parameters."
     ]
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "scenario.trend()"
     ],
     "language": "python",
     "metadata": {},
     "outputs": [
      {
       "output_type": "display_data",
       "png": "\n",
       "text": [
        "<Figure size 648x432 with 1 Axes>"
       ]
      },
      {
       "output_type": "pyout",
       "prompt_number": 9,
       "text": [
        "<covsirphy.analysis.scenario.Scenario at 0x7f0802849250>"
       ]
      }
     ],
     "prompt_number": 9
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "scenario.summary()"
     ],
     "language": "python",
     "metadata": {},
     "outputs": [
      {
       "html": [
        "<div>\n",
        "<style scoped>\n",
        "    .dataframe tbody tr th:only-of-type {\n",
        "        vertical-align: middle;\n",
        "    }\n",
        "\n",
        "    .dataframe tbody tr th {\n",
        "        vertical-align: top;\n",
        "    }\n",
        "\n",
        "    .dataframe thead th {\n",
        "        text-align: right;\n",
        "    }\n",
        "</style>\n",
        "<table border=\"1\" class=\"dataframe\">\n",
        "  <thead>\n",
        "    <tr style=\"text-align: right;\">\n",
        "      <th></th>\n",
        "      <th>Type</th>\n",
        "      <th>Start</th>\n",
        "      <th>End</th>\n",
        "      <th>Population</th>\n",
        "    </tr>\n",
        "  </thead>\n",
        "  <tbody>\n",
        "    <tr>\n",
        "      <th>1st</th>\n",
        "      <td>Past</td>\n",
        "      <td>24Mar2020</td>\n",
        "      <td>31Mar2020</td>\n",
        "      <td>60483973</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>2nd</th>\n",
        "      <td>Past</td>\n",
        "      <td>01Apr2020</td>\n",
        "      <td>12Apr2020</td>\n",
        "      <td>60483973</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>3rd</th>\n",
        "      <td>Past</td>\n",
        "      <td>13Apr2020</td>\n",
        "      <td>21Apr2020</td>\n",
        "      <td>60483973</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>4th</th>\n",
        "      <td>Past</td>\n",
        "      <td>22Apr2020</td>\n",
        "      <td>01May2020</td>\n",
        "      <td>60483973</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>5th</th>\n",
        "      <td>Past</td>\n",
        "      <td>02May2020</td>\n",
        "      <td>09May2020</td>\n",
        "      <td>60483973</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>6th</th>\n",
        "      <td>Past</td>\n",
        "      <td>10May2020</td>\n",
        "      <td>19May2020</td>\n",
        "      <td>60483973</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>7th</th>\n",
        "      <td>Past</td>\n",
        "      <td>20May2020</td>\n",
        "      <td>05Jun2020</td>\n",
        "      <td>60483973</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>8th</th>\n",
        "      <td>Past</td>\n",
        "      <td>06Jun2020</td>\n",
        "      <td>10Jul2020</td>\n",
        "      <td>60483973</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>9th</th>\n",
        "      <td>Past</td>\n",
        "      <td>11Jul2020</td>\n",
        "      <td>17Aug2020</td>\n",
        "      <td>60483973</td>\n",
        "    </tr>\n",
        "  </tbody>\n",
        "</table>\n",
        "</div>"
       ],
       "output_type": "pyout",
       "prompt_number": 10,
       "text": [
        "     Type      Start        End  Population\n",
        "1st  Past  24Mar2020  31Mar2020    60483973\n",
        "2nd  Past  01Apr2020  12Apr2020    60483973\n",
        "3rd  Past  13Apr2020  21Apr2020    60483973\n",
        "4th  Past  22Apr2020  01May2020    60483973\n",
        "5th  Past  02May2020  09May2020    60483973\n",
        "6th  Past  10May2020  19May2020    60483973\n",
        "7th  Past  20May2020  05Jun2020    60483973\n",
        "8th  Past  06Jun2020  10Jul2020    60483973\n",
        "9th  Past  11Jul2020  17Aug2020    60483973"
       ]
      }
     ],
     "prompt_number": 10
    },
    {
     "cell_type": "markdown",
     "metadata": {},
     "source": [
      "## Hyperparameter estimation of ODE models\n",
      "As an example, use SIR-F model."
     ]
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "scenario.estimate(cs.SIRF)"
     ],
     "language": "python",
     "metadata": {
      "tags": []
     },
     "outputs": [
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n",
        "<SIR-F model: parameter estimation>"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "Running optimization with 4 CPUs..."
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\t9th phase (11Jul2020 - 17Aug2020): finished 1431 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\t2nd phase (01Apr2020 - 12Apr2020): finished  176 trials in 0 min  5 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\t4th phase (22Apr2020 - 01May2020): finished  178 trials in 0 min  5 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\t3rd phase (13Apr2020 - 21Apr2020): finished  359 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\t5th phase (02May2020 - 09May2020): finished  183 trials in 0 min  5 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\t6th phase (10May2020 - 19May2020): finished  195 trials in 0 min  5 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\t7th phase (20May2020 - 05Jun2020): finished  205 trials in 0 min  5 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\t8th phase (06Jun2020 - 10Jul2020): finished  201 trials in 0 min  5 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\t1st phase (24Mar2020 - 31Mar2020): finished 1690 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "Completed optimization. Total: 2 min  1 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      }
     ],
     "prompt_number": 11
    },
    {
     "cell_type": "heading",
     "level": 2,
     "metadata": {},
     "source": [
      "Show the history of reproduction number"
     ]
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "_ = scenario.param_history(targets=[\"Rt\"], divide_by_first=False)"
     ],
     "language": "python",
     "metadata": {},
     "outputs": [
      {
       "output_type": "display_data",
       "png": "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\n",
       "text": [
        "<Figure size 648x432 with 1 Axes>"
       ]
      }
     ],
     "prompt_number": 12
    },
    {
     "cell_type": "heading",
     "level": 2,
     "metadata": {},
     "source": [
      "Simulate the number of cases"
     ]
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "scenario.add(end_date=\"01Jan2021\")\n",
      "_ = scenario.simulate()"
     ],
     "language": "python",
     "metadata": {},
     "outputs": [
      {
       "output_type": "display_data",
       "png": "\n",
       "text": [
        "<Figure size 648x432 with 1 Axes>"
       ]
      }
     ],
     "prompt_number": 13
    }
   ],
   "metadata": {}
  }
 ]
}
