{
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3.8.2 64-bit ('covid19-sir': pipenv)",
   "name": "python_defaultSpec_1596263359952"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": 3
  },
  "name": ""
 },
 "nbformat": 3,
 "nbformat_minor": 0,
 "worksheets": [
  {
   "cells": [
    {
     "cell_type": "heading",
     "level": 1,
     "metadata": {},
     "source": [
      "Usage (quickest version)"
     ]
    },
    {
     "cell_type": "heading",
     "level": 2,
     "metadata": {},
     "source": [
      "Preparation"
     ]
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "# Standard users\n",
      "# !pip install covsirphy"
     ],
     "language": "python",
     "metadata": {},
     "outputs": [],
     "prompt_number": 1
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "# Developers (Note: this notebook is in example directory)\n",
      "import os\n",
      "os.chdir(\"../\")"
     ],
     "language": "python",
     "metadata": {},
     "outputs": [],
     "prompt_number": 2
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "from pprint import pprint"
     ],
     "language": "python",
     "metadata": {},
     "outputs": [],
     "prompt_number": 3
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "import covsirphy as cs\n",
      "cs.__version__"
     ],
     "language": "python",
     "metadata": {
      "tags": []
     },
     "outputs": [
      {
       "output_type": "pyout",
       "prompt_number": 4,
       "text": [
        "'2.8.2'"
       ]
      }
     ],
     "prompt_number": 4
    },
    {
     "cell_type": "markdown",
     "metadata": {},
     "source": [
      "## Dataset preparation\n",
      "Download the datasets to \"input\" direcotry and load them.\n",
      "\n",
      "If \"input\" directory has the datasets, `DataLoader` will load the local files. If the datasets were updated in remote servers, `DataLoader` will update the local files automatically."
     ]
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "# Standard users and developers\n",
      "data_loader = cs.DataLoader(\"input\")\n",
      "# The number of cases (JHU style)\n",
      "jhu_data = data_loader.jhu(verbose=False)\n",
      "# Population in each country\n",
      "population_data = data_loader.population(verbose=False)"
     ],
     "language": "python",
     "metadata": {
      "tags": []
     },
     "outputs": [],
     "prompt_number": 5
    },
    {
     "cell_type": "markdown",
     "metadata": {},
     "source": [
      "Note:  \n",
      "Datasets were retrieved via [COVID-19 Data Hub](https://covid19datahub.io/https://covid19datahub.io/) and the citation is  \n",
      "Guidotti, E., Ardia, D., (2020), \"COVID-19 Data Hub\", Journal of Open Source Software 5(51):2376, doi: 10.21105/joss.02376."
     ]
    },
    {
     "cell_type": "markdown",
     "metadata": {},
     "source": [
      "Scenario analysis can be performed for the following countries."
     ]
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "pprint(set(jhu_data.countries()) & set(population_data.countries()), compact=True)"
     ],
     "language": "python",
     "metadata": {
      "tags": []
     },
     "outputs": [
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "{"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Afghanistan'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Albania'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Algeria'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Andorra'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Angola'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        " "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Antigua and Barbuda'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Argentina'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Armenia'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Australia'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Austria'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        " "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Azerbaijan'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Bahamas'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Bahrain'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Bangladesh'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Barbados'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Belarus'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        " "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Belgium'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Belize'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Benin'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Bermuda'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Bhutan'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Bolivia'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        " "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Bosnia and Herzegovina'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Botswana'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Brazil'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Brunei'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Bulgaria'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        " "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Burkina Faso'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Burundi'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Cambodia'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Cameroon'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Canada'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Cape Verde'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        " "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Central African Republic'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Chad'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Chile'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'China'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Colombia'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Comoros'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        " "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Congo'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Costa Atlantica'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Costa Rica'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Croatia'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Cuba'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Cyprus'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        " "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Czech Republic'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Denmark'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Djibouti'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Dominica'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Dominican Republic'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        " "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Ecuador'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Egypt'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'El Salvador'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Equatorial Guinea'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Eritrea'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Estonia'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        " "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Ethiopia'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Fiji'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Finland'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'France'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Gabon'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Gambia'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Georgia'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        " "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Germany'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Ghana'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Greece'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Grenada'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Guatemala'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Guinea'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        " "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Guinea-Bissau'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Guyana'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Haiti'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Holy See'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Honduras'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Hungary'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        " "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Iceland'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'India'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Indonesia'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Iran'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Iraq'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Ireland'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Israel'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Italy'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        " "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Ivory Coast'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Jamaica'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Japan'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Jordan'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Kazakhstan'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Kenya'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        " "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Korea, South'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Kosovo'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Kuwait'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Kyrgyzstan'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Laos'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Latvia'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Lebanon'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        " "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Lesotho'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Liberia'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Libya'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Liechtenstein'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Lithuania'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Luxembourg'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        " "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Macedonia'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Madagascar'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Malawi'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Malaysia'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Maldives'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Mali'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Malta'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        " "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Mauritania'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Mauritius'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Mexico'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Moldova'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Monaco'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Mongolia'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        " "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Montenegro'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Morocco'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Mozambique'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Myanmar'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Namibia'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Nepal'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        " "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Netherlands'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'New Zealand'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Nicaragua'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Niger'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Nigeria'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Norway'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        " "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Oman'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Pakistan'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Palestine'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Panama'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Papua New Guinea'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Paraguay'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        " "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Peru'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Philippines'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Poland'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Portugal'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Qatar'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Romania'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Russia'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        " "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Rwanda'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Saint Kitts and Nevis'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Saint Lucia'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        " "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Saint Vincent and the Grenadines'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'San Marino'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Sao Tome and Principe'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        " "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Saudi Arabia'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Senegal'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Serbia'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Seychelles'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Sierra Leone'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Singapore'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        " "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Slovakia'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Slovenia'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Somalia'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'South Africa'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'South Sudan'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Spain'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        " "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Sri Lanka'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Sudan'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Suriname'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Swaziland'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Switzerland'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Syria'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        " "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Taiwan'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Tajikistan'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Tanzania'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Thailand'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Timor-Leste'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Togo'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        " "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Trinidad and Tobago'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Tunisia'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Turkey'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'UK'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Uganda'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Ukraine'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        " "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'United Arab Emirates'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'United States'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Uruguay'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Uzbekistan'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Venezuela'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        " "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Vietnam'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Western Sahara'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Yemen'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Zambia'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Zimbabwe'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "}"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      }
     ],
     "prompt_number": 6
    },
    {
     "cell_type": "markdown",
     "metadata": {},
     "source": [
      "## Start scenario analysis\n",
      "As an example, we will analysis the number of cases in Italy."
     ]
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "scenario = cs.Scenario(jhu_data, population_data, country=\"Italy\")"
     ],
     "language": "python",
     "metadata": {},
     "outputs": [],
     "prompt_number": 7
    },
    {
     "cell_type": "heading",
     "level": 2,
     "metadata": {},
     "source": [
      "Check records"
     ]
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "_ = scenario.records()"
     ],
     "language": "python",
     "metadata": {},
     "outputs": [
      {
       "output_type": "display_data",
       "png": "\n",
       "text": [
        "<Figure size 648x432 with 1 Axes>"
       ]
      }
     ],
     "prompt_number": 8
    },
    {
     "cell_type": "markdown",
     "metadata": {},
     "source": [
      "## S-R trend analysis\n",
      "S-R trend analysis finds the change points of SIR-derived ODE parameters."
     ]
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "scenario.trend()"
     ],
     "language": "python",
     "metadata": {},
     "outputs": [
      {
       "output_type": "display_data",
       "png": "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\n",
       "text": [
        "<Figure size 648x432 with 1 Axes>"
       ]
      },
      {
       "output_type": "pyout",
       "prompt_number": 9,
       "text": [
        "<covsirphy.analysis.scenario.Scenario at 0x7f233c32f9a0>"
       ]
      }
     ],
     "prompt_number": 9
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "scenario.summary()"
     ],
     "language": "python",
     "metadata": {},
     "outputs": [
      {
       "html": [
        "<div>\n",
        "<style scoped>\n",
        "    .dataframe tbody tr th:only-of-type {\n",
        "        vertical-align: middle;\n",
        "    }\n",
        "\n",
        "    .dataframe tbody tr th {\n",
        "        vertical-align: top;\n",
        "    }\n",
        "\n",
        "    .dataframe thead th {\n",
        "        text-align: right;\n",
        "    }\n",
        "</style>\n",
        "<table border=\"1\" class=\"dataframe\">\n",
        "  <thead>\n",
        "    <tr style=\"text-align: right;\">\n",
        "      <th></th>\n",
        "      <th>Type</th>\n",
        "      <th>Start</th>\n",
        "      <th>End</th>\n",
        "      <th>Population</th>\n",
        "    </tr>\n",
        "  </thead>\n",
        "  <tbody>\n",
        "    <tr>\n",
        "      <th>0th</th>\n",
        "      <td>Past</td>\n",
        "      <td>24Feb2020</td>\n",
        "      <td>20Mar2020</td>\n",
        "      <td>60483973</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>1st</th>\n",
        "      <td>Past</td>\n",
        "      <td>21Mar2020</td>\n",
        "      <td>28Mar2020</td>\n",
        "      <td>60483973</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>2nd</th>\n",
        "      <td>Past</td>\n",
        "      <td>29Mar2020</td>\n",
        "      <td>09Apr2020</td>\n",
        "      <td>60483973</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>3rd</th>\n",
        "      <td>Past</td>\n",
        "      <td>10Apr2020</td>\n",
        "      <td>18Apr2020</td>\n",
        "      <td>60483973</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>4th</th>\n",
        "      <td>Past</td>\n",
        "      <td>19Apr2020</td>\n",
        "      <td>30Apr2020</td>\n",
        "      <td>60483973</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>5th</th>\n",
        "      <td>Past</td>\n",
        "      <td>01May2020</td>\n",
        "      <td>09May2020</td>\n",
        "      <td>60483973</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>6th</th>\n",
        "      <td>Past</td>\n",
        "      <td>10May2020</td>\n",
        "      <td>19May2020</td>\n",
        "      <td>60483973</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>7th</th>\n",
        "      <td>Past</td>\n",
        "      <td>20May2020</td>\n",
        "      <td>06Jun2020</td>\n",
        "      <td>60483973</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>8th</th>\n",
        "      <td>Past</td>\n",
        "      <td>07Jun2020</td>\n",
        "      <td>16Jul2020</td>\n",
        "      <td>60483973</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>9th</th>\n",
        "      <td>Past</td>\n",
        "      <td>17Jul2020</td>\n",
        "      <td>20Aug2020</td>\n",
        "      <td>60483973</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>10th</th>\n",
        "      <td>Past</td>\n",
        "      <td>21Aug2020</td>\n",
        "      <td>12Sep2020</td>\n",
        "      <td>60483973</td>\n",
        "    </tr>\n",
        "  </tbody>\n",
        "</table>\n",
        "</div>"
       ],
       "output_type": "pyout",
       "prompt_number": 10,
       "text": [
        "      Type      Start        End  Population\n",
        "0th   Past  24Feb2020  20Mar2020    60483973\n",
        "1st   Past  21Mar2020  28Mar2020    60483973\n",
        "2nd   Past  29Mar2020  09Apr2020    60483973\n",
        "3rd   Past  10Apr2020  18Apr2020    60483973\n",
        "4th   Past  19Apr2020  30Apr2020    60483973\n",
        "5th   Past  01May2020  09May2020    60483973\n",
        "6th   Past  10May2020  19May2020    60483973\n",
        "7th   Past  20May2020  06Jun2020    60483973\n",
        "8th   Past  07Jun2020  16Jul2020    60483973\n",
        "9th   Past  17Jul2020  20Aug2020    60483973\n",
        "10th  Past  21Aug2020  12Sep2020    60483973"
       ]
      }
     ],
     "prompt_number": 10
    },
    {
     "cell_type": "markdown",
     "metadata": {},
     "source": [
      "## Hyperparameter estimation of ODE models\n",
      "As an example, use SIR-F model."
     ]
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "scenario.estimate(cs.SIRF)"
     ],
     "language": "python",
     "metadata": {
      "tags": []
     },
     "outputs": [
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n",
        "<SIR-F model: parameter estimation>"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "Running optimization with 4 CPUs..."
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\t10th phase (21Aug2020 - 12Sep2020): finished 1597 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\t2nd phase (29Mar2020 - 09Apr2020): finished  213 trials in 0 min  5 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\t3rd phase (10Apr2020 - 18Apr2020): finished  379 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\t4th phase (19Apr2020 - 30Apr2020): finished  199 trials in 0 min  5 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\t5th phase (01May2020 - 09May2020): finished  237 trials in 0 min  5 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\t6th phase (10May2020 - 19May2020): finished  199 trials in 0 min  5 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\t7th phase (20May2020 - 06Jun2020): finished  213 trials in 0 min  5 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\t8th phase (07Jun2020 - 16Jul2020): finished  406 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\t1st phase (21Mar2020 - 28Mar2020): finished 1812 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\t0th phase (24Feb2020 - 20Mar2020): finished 1760 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\t9th phase (17Jul2020 - 20Aug2020): finished 1913 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "Completed optimization. Total: 2 min 21 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      }
     ],
     "prompt_number": 11
    },
    {
     "cell_type": "heading",
     "level": 2,
     "metadata": {},
     "source": [
      "Show the history of reproduction number"
     ]
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "_ = scenario.param_history(targets=[\"Rt\"], divide_by_first=False)"
     ],
     "language": "python",
     "metadata": {},
     "outputs": [
      {
       "output_type": "display_data",
       "png": "\n",
       "text": [
        "<Figure size 648x432 with 1 Axes>"
       ]
      }
     ],
     "prompt_number": 12
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "# version >= 2.8.0\n",
      "_ = scenario.history(target=\"Rt\")"
     ],
     "language": "python",
     "metadata": {},
     "outputs": [
      {
       "output_type": "display_data",
       "png": "\n",
       "text": [
        "<Figure size 648x432 with 1 Axes>"
       ]
      }
     ],
     "prompt_number": 13
    },
    {
     "cell_type": "heading",
     "level": 2,
     "metadata": {},
     "source": [
      "Simulate the number of cases"
     ]
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "scenario.add(end_date=\"01Jan2021\")\n",
      "_ = scenario.simulate()"
     ],
     "language": "python",
     "metadata": {},
     "outputs": [
      {
       "output_type": "display_data",
       "png": "\n",
       "text": [
        "<Figure size 648x432 with 1 Axes>"
       ]
      }
     ],
     "prompt_number": 14
    }
   ],
   "metadata": {}
  }
 ]
}
