{
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3.8.2 64-bit ('.venv': venv)",
   "name": "python_defaultSpec_1597669925034"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.8.2-final"
  },
  "name": ""
 },
 "nbformat": 3,
 "nbformat_minor": 0,
 "worksheets": [
  {
   "cells": [
    {
     "cell_type": "markdown",
     "metadata": {},
     "source": [
      "# Usage (details: policy measures)\n",
      "Here, we will analyse the relationship of policy measures and parameter values of SIR-derived ODE models. Policy measures are tracked by [Oxford Covid-19 Government Response Tracker (OxCGRT)](https://github.com/OxCGRT/covid-policy-tracker)."
     ]
    },
    {
     "cell_type": "heading",
     "level": 2,
     "metadata": {},
     "source": [
      "Preparation"
     ]
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "# Standard users\n",
      "# !pip install covsirphy\n",
      "# Developers (Note: this notebook is in example directory)\n",
      "import os\n",
      "os.chdir(\"../\")"
     ],
     "language": "python",
     "metadata": {},
     "outputs": [],
     "prompt_number": 1
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "from pprint import pprint"
     ],
     "language": "python",
     "metadata": {},
     "outputs": [],
     "prompt_number": 2
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "import covsirphy as cs\n",
      "cs.__version__"
     ],
     "language": "python",
     "metadata": {},
     "outputs": [
      {
       "output_type": "pyout",
       "prompt_number": 3,
       "text": [
        "'2.8.1'"
       ]
      }
     ],
     "prompt_number": 3
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "# Standard users and developers\n",
      "data_loader = cs.DataLoader(\"input\")\n",
      "# The number of cases (JHU style)\n",
      "jhu_data = data_loader.jhu(verbose=False)\n",
      "# Population in each country\n",
      "population_data = data_loader.population(verbose=False)\n",
      "# Government Response Tracker (OxCGRT)\n",
      "oxcgrt_data = data_loader.oxcgrt(verbose=False)\n",
      "# Description/citation\n",
      "print(oxcgrt_data.citation)"
     ],
     "language": "python",
     "metadata": {
      "tags": []
     },
     "outputs": [
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "(Secondary source) Guidotti, E., Ardia, D., (2020), \"COVID-19 Data Hub\", Journal of Open Source Software 5(51):2376, doi: 10.21105/joss.02376.\n",
        "We can get Citation list of primary sources with DataLoader(...).covid19dh_citation"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      }
     ],
     "prompt_number": 4
    },
    {
     "cell_type": "markdown",
     "metadata": {},
     "source": [
      "## Class for policy measure analysis\n",
      "We will `PolicyMeasures` class to find relationship of policy measures and parameter values of SIR-derived ODE models."
     ]
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "# Create analyser with tau value 360 [min] (can be changed)\n",
      "analyser = cs.PolicyMeasures(jhu_data, population_data, oxcgrt_data, tau=360)\n",
      "# The number of registerd countries\n",
      "len(analyser.countries)"
     ],
     "language": "python",
     "metadata": {
      "tags": []
     },
     "outputs": [
      {
       "output_type": "pyout",
       "prompt_number": 5,
       "text": [
        "184"
       ]
      }
     ],
     "prompt_number": 5
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "# We can get Scenario instance for detailed scenario analysis\n",
      "type(analyser.scenario(\"Japan\"))"
     ],
     "language": "python",
     "metadata": {},
     "outputs": [
      {
       "output_type": "pyout",
       "prompt_number": 6,
       "text": [
        "covsirphy.analysis.scenario.Scenario"
       ]
      }
     ],
     "prompt_number": 6
    },
    {
     "cell_type": "markdown",
     "metadata": {},
     "source": [
      "## Set phases with S-R trend analysis\n",
      "We will perform S-R trend analysis to set phases in all countries. Countries which do not have **9th phases** will be un-registered for the next analysis. This number will be adjusted for your analysis."
     ]
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "# Show the number of phases of all countries\n",
      "analyser.trend()\n",
      "pprint(analyser.phase_len(), compact=True)"
     ],
     "language": "python",
     "metadata": {},
     "outputs": [
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "{"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "2"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ": "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "['Bahamas', 'Belize', 'Trinidad and Tobago', 'Dominica']"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        " "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "3"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ": "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "["
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Tanzania'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Mauritius'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Seychelles'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Papua New Guinea'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Norway'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        "     "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Brunei'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Malta'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "]"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        " "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "4"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ": "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "["
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Gambia'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Kyrgyzstan'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Lesotho'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Vietnam'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Namibia'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        "     "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Antigua and Barbuda'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Comoros'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Sao Tome and Principe'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Ethiopia'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        "     "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Fiji'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Central African Republic'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Botswana'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Zimbabwe'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Libya'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        "     "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Grenada'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Morocco'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Equatorial Guinea'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Paraguay'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Lebanon'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        "     "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Guyana'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "]"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        " "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "5"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ": "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "["
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Ireland'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Saint Vincent and the Grenadines'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Cambodia'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Iceland'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        "     "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Guatemala'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Palestine'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Netherlands'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Thailand'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Suriname'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        "     "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'San Marino'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Angola'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Venezuela'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Montenegro'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Israel'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Madagascar'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        "     "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'New Zealand'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Eritrea'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Zambia'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'South Sudan'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "]"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        " "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "6"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ": "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "["
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Croatia'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Mongolia'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Malawi'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Costa Rica'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Swaziland'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Mozambique'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        "     "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Niger'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Cameroon'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Australia'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Syria'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Colombia'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Latvia'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Japan'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        "     "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Kosovo'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Maldives'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Somalia'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Afghanistan'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Guinea-Bissau'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        "     "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Liechtenstein'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'South Africa'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Luxembourg'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Slovakia'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Bhutan'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        "     "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Barbados'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Kenya'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Philippines'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'India'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Kazakhstan'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Saint Lucia'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        "     "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Cyprus'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Argentina'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Rwanda'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Spain'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Chad'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Uzbekistan'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Taiwan'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        "     "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Andorra'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Bosnia and Herzegovina'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Bermuda'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "]"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        " "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "7"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ": "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "["
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Cape Verde'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Jordan'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Oman'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Qatar'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Togo'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Finland'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Uganda'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        "     "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Albania'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Benin'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Congo'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Yemen'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Haiti'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Slovenia'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Bolivia'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        "     "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Cuba'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Iraq'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Uruguay'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Tajikistan'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Nepal'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'China'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Burundi'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        "     "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Sri Lanka'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Gabon'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Mauritania'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Germany'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Monaco'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Greece'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        "     "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'El Salvador'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Ghana'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Djibouti'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Tunisia'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "]"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        " "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "8"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ": "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "["
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Estonia'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Indonesia'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Algeria'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Saudi Arabia'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Belarus'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Liberia'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        "     "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Peru'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Singapore'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Czech Republic'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Bulgaria'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Ecuador'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Denmark'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        "     "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Malaysia'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Belgium'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Armenia'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Pakistan'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Dominican Republic'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        "     "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Panama'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Canada'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Azerbaijan'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Sudan'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Egypt'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Chile'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Brazil'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        "     "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Sierra Leone'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Nigeria'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Jamaica'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Switzerland'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Nicaragua'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        "     "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Lithuania'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "]"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        " "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "9"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ": "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "["
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Bahrain'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Macedonia'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Portugal'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'United States'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Serbia'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Mali'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        "     "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Romania'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Ukraine'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Guinea'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Myanmar'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Italy'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Turkey'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Moldova'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        "     "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Austria'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Mexico'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Kuwait'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Bangladesh'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'France'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Hungary'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        "     "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Burkina Faso'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Honduras'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Korea, South'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "]"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        " "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "10"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ": "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "['Senegal', 'Iran', 'United Arab Emirates', 'Poland', 'Georgia']"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        " "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "11"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ": "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "['Russia']"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "}"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      }
     ],
     "prompt_number": 7
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "# Set phases with S-R trend analysis\n",
      "analyser.trend(min_len=9)\n",
      "# The number of countries\n",
      "len(analyser.countries)"
     ],
     "language": "python",
     "metadata": {},
     "outputs": [
      {
       "output_type": "pyout",
       "prompt_number": 8,
       "text": [
        "28"
       ]
      }
     ],
     "prompt_number": 8
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "phase_len_dict = analyser.phase_len()\n",
      "pprint(phase_len_dict, compact=True)"
     ],
     "language": "python",
     "metadata": {
      "tags": []
     },
     "outputs": [
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "{"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "9"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ": "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "["
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Bahrain'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Macedonia'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Portugal'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'United States'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Serbia'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Mali'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        "     "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Romania'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Ukraine'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Guinea'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Myanmar'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Italy'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Turkey'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Moldova'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        "     "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Austria'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Mexico'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Kuwait'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Bangladesh'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'France'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Hungary'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        "     "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Burkina Faso'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Honduras'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Korea, South'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "]"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        " "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "10"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ": "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "['Senegal', 'Iran', 'United Arab Emirates', 'Poland', 'Georgia']"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        " "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "11"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ": "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "['Russia']"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "}"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      }
     ],
     "prompt_number": 9
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "# Here, only show the countries which have the most phases\n",
      "countries_show = max(phase_len_dict.items(), key=lambda x: x[0])[1]\n",
      "# Show summary\n",
      "analyser.summary(countries=countries_show)"
     ],
     "language": "python",
     "metadata": {
      "tags": []
     },
     "outputs": [
      {
       "html": [
        "<div>\n",
        "<style scoped>\n",
        "    .dataframe tbody tr th:only-of-type {\n",
        "        vertical-align: middle;\n",
        "    }\n",
        "\n",
        "    .dataframe tbody tr th {\n",
        "        vertical-align: top;\n",
        "    }\n",
        "\n",
        "    .dataframe thead th {\n",
        "        text-align: right;\n",
        "    }\n",
        "</style>\n",
        "<table border=\"1\" class=\"dataframe\">\n",
        "  <thead>\n",
        "    <tr style=\"text-align: right;\">\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th>Type</th>\n",
        "      <th>Start</th>\n",
        "      <th>End</th>\n",
        "      <th>Population</th>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>Country</th>\n",
        "      <th>Phase</th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "    </tr>\n",
        "  </thead>\n",
        "  <tbody>\n",
        "    <tr>\n",
        "      <th rowspan=\"11\" valign=\"top\">Russia</th>\n",
        "      <th>1st</th>\n",
        "      <td>Past</td>\n",
        "      <td>08May2020</td>\n",
        "      <td>16May2020</td>\n",
        "      <td>330457362</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>2nd</th>\n",
        "      <td>Past</td>\n",
        "      <td>17May2020</td>\n",
        "      <td>26May2020</td>\n",
        "      <td>330457362</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>3rd</th>\n",
        "      <td>Past</td>\n",
        "      <td>27May2020</td>\n",
        "      <td>03Jun2020</td>\n",
        "      <td>330457362</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>4th</th>\n",
        "      <td>Past</td>\n",
        "      <td>04Jun2020</td>\n",
        "      <td>11Jun2020</td>\n",
        "      <td>330457362</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>5th</th>\n",
        "      <td>Past</td>\n",
        "      <td>12Jun2020</td>\n",
        "      <td>20Jun2020</td>\n",
        "      <td>330457362</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>6th</th>\n",
        "      <td>Past</td>\n",
        "      <td>21Jun2020</td>\n",
        "      <td>30Jun2020</td>\n",
        "      <td>330457362</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>7th</th>\n",
        "      <td>Past</td>\n",
        "      <td>01Jul2020</td>\n",
        "      <td>10Jul2020</td>\n",
        "      <td>330457362</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>8th</th>\n",
        "      <td>Past</td>\n",
        "      <td>11Jul2020</td>\n",
        "      <td>21Jul2020</td>\n",
        "      <td>330457362</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>9th</th>\n",
        "      <td>Past</td>\n",
        "      <td>22Jul2020</td>\n",
        "      <td>02Aug2020</td>\n",
        "      <td>330457362</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>10th</th>\n",
        "      <td>Past</td>\n",
        "      <td>03Aug2020</td>\n",
        "      <td>16Aug2020</td>\n",
        "      <td>330457362</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>11th</th>\n",
        "      <td>Past</td>\n",
        "      <td>17Aug2020</td>\n",
        "      <td>03Sep2020</td>\n",
        "      <td>330457362</td>\n",
        "    </tr>\n",
        "  </tbody>\n",
        "</table>\n",
        "</div>"
       ],
       "output_type": "pyout",
       "prompt_number": 10,
       "text": [
        "               Type      Start        End  Population\n",
        "Country Phase                                        \n",
        "Russia  1st    Past  08May2020  16May2020   330457362\n",
        "        2nd    Past  17May2020  26May2020   330457362\n",
        "        3rd    Past  27May2020  03Jun2020   330457362\n",
        "        4th    Past  04Jun2020  11Jun2020   330457362\n",
        "        5th    Past  12Jun2020  20Jun2020   330457362\n",
        "        6th    Past  21Jun2020  30Jun2020   330457362\n",
        "        7th    Past  01Jul2020  10Jul2020   330457362\n",
        "        8th    Past  11Jul2020  21Jul2020   330457362\n",
        "        9th    Past  22Jul2020  02Aug2020   330457362\n",
        "        10th   Past  03Aug2020  16Aug2020   330457362\n",
        "        11th   Past  17Aug2020  03Sep2020   330457362"
       ]
      }
     ],
     "prompt_number": 10
    },
    {
     "cell_type": "markdown",
     "metadata": {},
     "source": [
      "## Parameter estimation\n",
      "we will estimate the parameter values with SIR-derived ODE models in each country."
     ]
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "# Parameter estimation with SIR-F model\n",
      "analyser.estimate(cs.SIRF)"
     ],
     "language": "python",
     "metadata": {
      "tags": []
     },
     "outputs": [
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n",
        "<SIR-F model: parameter estimation>"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "Running optimization with 4 CPUs..."
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tPOL,  9th phase (15Aug2020 - 24Aug2020): finished  322 trials in 0 min 15 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tMMR,  7th phase (11Jul2020 - 11Aug2020): finished 1115 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tKWT,  1st phase (12May2020 - 24May2020): finished 1096 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tBHR,  1st phase (06May2020 - 30May2020): finished 1105 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tIRN,  6th phase (27Jun2020 - 08Jul2020): finished  134 trials in 0 min  5 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tBFA,  9th phase (14Aug2020 - 03Sep2020): finished 1133 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tUKR,  6th phase (23Jul2020 - 30Jul2020): finished  227 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tFRA,  7th phase (25Jun2020 - 22Jul2020): finished  660 trials in 0 min 30 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tFRA,  5th phase (05May2020 - 27May2020): finished 1132 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tKWT,  4th phase (24Jun2020 - 04Jul2020): finished 1175 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tITA,  8th phase (15Jun2020 - 02Aug2020): finished  436 trials in 0 min 20 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tITA,  4th phase (22Apr2020 - 01May2020): finished  121 trials in 0 min  5 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tRUS,  2nd phase (17May2020 - 26May2020): finished 1133 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tARE,  2nd phase (13May2020 - 25May2020): finished 1133 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tRUS,  3rd phase (27May2020 - 03Jun2020): finished 1121 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tMLI,  4th phase (26May2020 - 02Jun2020): finished 1158 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tROU,  8th phase (17Aug2020 - 24Aug2020): finished  338 trials in 0 min 15 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tAUT,  6th phase (23Jul2020 - 07Aug2020): finished 1145 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tMDA,  7th phase (30Jul2020 - 09Aug2020): finished  325 trials in 0 min 15 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tTUR,  5th phase (14Jun2020 - 26Jun2020): finished  513 trials in 0 min 25 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tARE,  5th phase (13Jun2020 - 22Jun2020): finished  527 trials in 0 min 25 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tMKD,  5th phase (17Jul2020 - 26Jul2020): finished  337 trials in 0 min 15 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tHUN,  1st phase (15Apr2020 - 27Apr2020): finished 1121 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tTUR,  3rd phase (16May2020 - 29May2020): finished  331 trials in 0 min 15 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tARE,  8th phase (12Jul2020 - 26Jul2020): finished  715 trials in 0 min 35 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tHUN,  3rd phase (10May2020 - 18May2020): finished  522 trials in 0 min 25 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tAUT,  8th phase (18Aug2020 - 25Aug2020): finished 1136 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tPRT,  7th phase (17Jul2020 - 31Jul2020): finished  146 trials in 0 min  5 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tSEN,  2nd phase (15May2020 - 29May2020): finished 1179 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tKWT,  5th phase (05Jul2020 - 15Jul2020): finished 1206 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tMMR,  2nd phase (07May2020 - 25May2020): finished  728 trials in 0 min 30 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tROU,  2nd phase (11May2020 - 11Jun2020): finished  384 trials in 0 min 15 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tKWT,  3rd phase (11Jun2020 - 23Jun2020): finished  626 trials in 0 min 25 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tMEX,  2nd phase (09Jun2020 - 20Jun2020): finished  265 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tPRT,  6th phase (07Jul2020 - 16Jul2020): finished  385 trials in 0 min 15 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tMKD,  9th phase (22Aug2020 - 03Sep2020): finished 1266 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tGIN,  3rd phase (24May2020 - 09Jun2020): finished 1271 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tUSA,  8th phase (08Aug2020 - 19Aug2020): finished  628 trials in 0 min 25 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tITA,  5th phase (02May2020 - 09May2020): finished  526 trials in 0 min 20 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tMEX,  4th phase (02Jul2020 - 09Jul2020): finished 1297 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tMDA,  2nd phase (02Jun2020 - 15Jun2020): finished 1223 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tMMR,  1st phase (29Apr2020 - 06May2020): finished  320 trials in 0 min 15 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tMKD,  2nd phase (11Jun2020 - 26Jun2020): finished 1168 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tKOR,  2nd phase (26Mar2020 - 07Apr2020): finished  324 trials in 0 min 15 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tSEN,  6th phase (02Jul2020 - 16Jul2020): finished  328 trials in 0 min 15 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tBFA,  6th phase (23Jun2020 - 13Jul2020): finished 1067 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tHND,  6th phase (25Jul2020 - 01Aug2020): finished  280 trials in 0 min 15 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tSEN,  3rd phase (30May2020 - 09Jun2020): finished 1043 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tHUN,  4th phase (19May2020 - 29May2020): finished  121 trials in 0 min  5 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tMLI,  1st phase (25Apr2020 - 02May2020): finished 1064 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tMDA,  6th phase (21Jul2020 - 29Jul2020): finished  256 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tMLI,  8th phase (03Jul2020 - 09Aug2020): finished 1053 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tPRT,  5th phase (25Jun2020 - 06Jul2020): finished  226 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tMKD,  6th phase (27Jul2020 - 05Aug2020): finished 1131 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tPOL,  1st phase (24Apr2020 - 10May2020): finished 1124 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tITA,  2nd phase (31Mar2020 - 11Apr2020): finished 1124 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tRUS,  6th phase (21Jun2020 - 30Jun2020): finished 1132 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tBGD,  8th phase (14Aug2020 - 23Aug2020): finished 1163 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tMEX,  6th phase (18Jul2020 - 28Jul2020): finished 1158 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tARE,  6th phase (23Jun2020 - 02Jul2020): finished  550 trials in 0 min 25 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tKOR,  8th phase (14Aug2020 - 25Aug2020): finished 1147 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tMKD,  7th phase (06Aug2020 - 13Aug2020): finished 1144 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tPOL,  2nd phase (11May2020 - 26May2020): finished  171 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tROU,  9th phase (25Aug2020 - 03Sep2020): finished  326 trials in 0 min 15 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tPOL,  4th phase (11Jun2020 - 28Jun2020): finished 1090 trials in 1 min  1 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tARE,  1st phase (27Apr2020 - 12May2020): finished 1051 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tMMR,  6th phase (03Jul2020 - 10Jul2020): finished 1060 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tBFA,  4th phase (05May2020 - 20May2020): finished 1013 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tSRB,  8th phase (28Jun2020 - 12Jul2020): finished 1014 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tMDA,  4th phase (26Jun2020 - 08Jul2020): finished  974 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tGEO,  1st phase (12Apr2020 - 24Apr2020): finished  986 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tBHR,  9th phase (21Aug2020 - 03Sep2020): finished  645 trials in 0 min 35 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tRUS,  7th phase (01Jul2020 - 10Jul2020): finished 1053 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tUSA,  1st phase (21Apr2020 - 10May2020): finished  413 trials in 0 min 20 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tROU,  1st phase (22Apr2020 - 10May2020): finished 1081 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tGIN,  1st phase (02May2020 - 12May2020): finished 1073 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tGIN,  7th phase (24Jul2020 - 05Aug2020): finished  330 trials in 0 min 15 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tAUT,  9th phase (26Aug2020 - 03Sep2020): finished 1090 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tSEN,  1st phase (03May2020 - 14May2020): finished  519 trials in 0 min 25 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tPRT,  2nd phase (18May2020 - 31May2020): finished 1100 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tHND,  7th phase (02Aug2020 - 13Aug2020): finished 1024 trials in 0 min 55 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tGIN,  5th phase (20Jun2020 - 08Jul2020): finished  214 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tSEN,  7th phase (17Jul2020 - 28Jul2020): finished 1097 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tBGD,  9th phase (24Aug2020 - 03Sep2020): finished  319 trials in 0 min 15 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tUSA,  2nd phase (11May2020 - 03Jun2020): finished 1085 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tUKR,  5th phase (12Jul2020 - 22Jul2020): finished  622 trials in 0 min 30 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tUSA,  6th phase (16Jul2020 - 23Jul2020): finished  235 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tBGD,  6th phase (25Jul2020 - 04Aug2020): finished  341 trials in 0 min 15 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tARE,  7th phase (03Jul2020 - 11Jul2020): finished 1105 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tRUS,  4th phase (04Jun2020 - 11Jun2020): finished 1107 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tTUR,  4th phase (30May2020 - 13Jun2020): finished  224 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tTUR,  1st phase (18Apr2020 - 29Apr2020): finished 1103 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tKOR,  5th phase (09Jun2020 - 02Jul2020): finished 1093 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tHUN,  2nd phase (28Apr2020 - 09May2020): finished 1103 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tUSA,  5th phase (07Jul2020 - 15Jul2020): finished  314 trials in 0 min 15 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tKOR,  3rd phase (08Apr2020 - 12May2020): finished  323 trials in 0 min 15 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tUKR,  3rd phase (16Jun2020 - 26Jun2020): finished 1096 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tMKD,  4th phase (08Jul2020 - 16Jul2020): finished  446 trials in 0 min 20 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tSEN,  4th phase (10Jun2020 - 19Jun2020): finished 1096 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tAUT,  3rd phase (25Apr2020 - 21May2020): finished  110 trials in 0 min  5 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tIRN,  2nd phase (17Apr2020 - 10May2020): finished  115 trials in 0 min  5 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tHUN,  8th phase (12Aug2020 - 24Aug2020): finished  116 trials in 0 min  5 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tIRN,  7th phase (09Jul2020 - 20Jul2020): finished  113 trials in 0 min  5 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tRUS,  1st phase (08May2020 - 16May2020): finished 1095 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tBHR,  7th phase (27Jul2020 - 08Aug2020): finished  304 trials in 0 min 15 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tKWT,  7th phase (28Jul2020 - 08Aug2020): finished 1067 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tGEO,  4th phase (29May2020 - 09Jun2020): finished 1038 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tMDA,  1st phase (11May2020 - 01Jun2020): finished 1025 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tKOR,  1st phase (15Mar2020 - 25Mar2020): finished 1061 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tRUS,  9th phase (22Jul2020 - 02Aug2020): finished 1076 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tBFA,  7th phase (14Jul2020 - 27Jul2020): finished 1122 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tBGD,  1st phase (28May2020 - 13Jun2020): finished 1082 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tROU,  4th phase (01Jul2020 - 15Jul2020): finished 1109 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tGIN,  2nd phase (13May2020 - 23May2020): finished 1086 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tUSA,  7th phase (24Jul2020 - 07Aug2020): finished  228 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tAUT,  2nd phase (08Apr2020 - 24Apr2020): finished 1064 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tGEO,  3rd phase (15May2020 - 28May2020): finished 1015 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tBHR,  2nd phase (31May2020 - 11Jun2020): finished 1007 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tBGD,  5th phase (16Jul2020 - 24Jul2020): finished  199 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tRUS,  8th phase (11Jul2020 - 21Jul2020): finished  984 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tIRN,  5th phase (15Jun2020 - 26Jun2020): finished  499 trials in 0 min 25 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tROU,  3rd phase (12Jun2020 - 30Jun2020): finished  997 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tAUT,  5th phase (04Jul2020 - 22Jul2020): finished  434 trials in 0 min 20 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tMLI,  9th phase (10Aug2020 - 03Sep2020): finished 1066 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tITA,  9th phase (03Aug2020 - 03Sep2020): finished 1068 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tMKD,  8th phase (14Aug2020 - 21Aug2020): finished 1065 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tTUR,  2nd phase (30Apr2020 - 15May2020): finished  497 trials in 0 min 25 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tHUN,  6th phase (29Jun2020 - 23Jul2020): finished  559 trials in 0 min 30 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tUKR,  4th phase (27Jun2020 - 11Jul2020): finished 1041 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tBGD,  3rd phase (28Jun2020 - 06Jul2020): finished  508 trials in 0 min 25 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tGEO,  2nd phase (25Apr2020 - 14May2020): finished 1016 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tUSA,  4th phase (24Jun2020 - 06Jul2020): finished 1045 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tARE,  4th phase (04Jun2020 - 12Jun2020): finished  223 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tPRT,  3rd phase (01Jun2020 - 13Jun2020): finished 1069 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tMLI,  5th phase (03Jun2020 - 14Jun2020): finished 1085 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tGIN,  6th phase (09Jul2020 - 23Jul2020): finished 1060 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tMKD,  1st phase (10May2020 - 10Jun2020): finished 1039 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tTUR,  6th phase (27Jun2020 - 13Jul2020): finished  411 trials in 0 min 20 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tITA,  6th phase (10May2020 - 20May2020): finished  209 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tPOL,  6th phase (14Jul2020 - 25Jul2020): finished  212 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tMLI,  2nd phase (03May2020 - 15May2020): finished 1075 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tSRB,  6th phase (06Jun2020 - 17Jun2020): finished  128 trials in 0 min  5 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tMEX,  3rd phase (21Jun2020 - 01Jul2020): finished 1088 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tKOR,  6th phase (03Jul2020 - 20Jul2020): finished 1071 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tMLI,  3rd phase (16May2020 - 25May2020): finished 1096 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tGIN,  9th phase (18Aug2020 - 03Sep2020): finished 1058 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tPOL,  5th phase (29Jun2020 - 13Jul2020): finished  225 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tPRT,  4th phase (14Jun2020 - 24Jun2020): finished  324 trials in 0 min 15 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tSRB,  5th phase (28May2020 - 05Jun2020): finished  876 trials in 0 min 45 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tKWT,  6th phase (16Jul2020 - 27Jul2020): finished  225 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tMMR,  8th phase (12Aug2020 - 21Aug2020): finished 1069 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tHND,  4th phase (06Jul2020 - 16Jul2020): finished  300 trials in 0 min 15 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tROU,  5th phase (16Jul2020 - 25Jul2020): finished 1034 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tTUR,  8th phase (03Aug2020 - 17Aug2020): finished  402 trials in 0 min 20 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tAUT,  4th phase (22May2020 - 03Jul2020): finished 1016 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tRUS, 11th phase (17Aug2020 - 03Sep2020): finished 1055 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tRUS, 10th phase (03Aug2020 - 16Aug2020): finished 1066 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tIRN,  3rd phase (11May2020 - 30May2020): finished 1092 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tBFA,  2nd phase (09Apr2020 - 19Apr2020): finished 1055 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tPOL,  8th phase (06Aug2020 - 14Aug2020): finished  204 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tUKR,  2nd phase (30May2020 - 15Jun2020): finished 1068 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tSRB,  2nd phase (01May2020 - 09May2020): finished 1065 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tSRB,  7th phase (18Jun2020 - 27Jun2020): finished 1073 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tBFA,  3rd phase (20Apr2020 - 04May2020): finished 1060 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tROU,  6th phase (26Jul2020 - 02Aug2020): finished  109 trials in 0 min  5 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tARE,  9th phase (27Jul2020 - 18Aug2020): finished 1056 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tSEN,  9th phase (12Aug2020 - 20Aug2020): finished 1085 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tRUS,  5th phase (12Jun2020 - 20Jun2020): finished 1091 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tHND,  1st phase (26May2020 - 17Jun2020): finished 1059 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tUKR,  8th phase (08Aug2020 - 16Aug2020): finished  221 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tPRT,  8th phase (01Aug2020 - 18Aug2020): finished  587 trials in 0 min 30 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tMLI,  7th phase (24Jun2020 - 02Jul2020): finished 1103 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tBGD,  2nd phase (14Jun2020 - 27Jun2020): finished 1064 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tUSA,  3rd phase (04Jun2020 - 23Jun2020): finished  539 trials in 0 min 25 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tKOR,  4th phase (13May2020 - 08Jun2020): finished 1067 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tMMR,  5th phase (18Jun2020 - 02Jul2020): finished  592 trials in 0 min 30 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tTUR,  7th phase (14Jul2020 - 02Aug2020): finished  110 trials in 0 min  5 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tSRB,  1st phase (18Apr2020 - 30Apr2020): finished 1086 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tBHR,  5th phase (08Jul2020 - 15Jul2020): finished 1099 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tIRN,  8th phase (21Jul2020 - 02Aug2020): finished  217 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tPOL,  7th phase (26Jul2020 - 05Aug2020): finished  595 trials in 0 min 30 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tPOL,  3rd phase (27May2020 - 10Jun2020): finished 1090 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tMKD,  3rd phase (27Jun2020 - 07Jul2020): finished 1092 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tSRB,  4th phase (18May2020 - 27May2020): finished  601 trials in 0 min 30 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tBGD,  7th phase (05Aug2020 - 13Aug2020): finished  240 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tGEO,  6th phase (04Jul2020 - 18Jul2020): finished 1062 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tIRN,  1st phase (29Mar2020 - 16Apr2020): finished 1077 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tITA,  7th phase (21May2020 - 14Jun2020): finished  655 trials in 0 min 35 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tSRB,  3rd phase (10May2020 - 17May2020): finished  187 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tSRB,  9th phase (13Jul2020 - 03Sep2020): finished 1124 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tBFA,  5th phase (21May2020 - 22Jun2020): finished 1009 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tMLI,  6th phase (15Jun2020 - 23Jun2020): finished  232 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tGEO,  7th phase (19Jul2020 - 05Aug2020): finished 1053 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tHND,  5th phase (17Jul2020 - 24Jul2020): finished  242 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tMDA,  3rd phase (16Jun2020 - 25Jun2020): finished  318 trials in 0 min 15 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tFRA,  3rd phase (13Apr2020 - 25Apr2020): finished 1057 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tMDA,  8th phase (10Aug2020 - 17Aug2020): finished  430 trials in 0 min 20 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tBHR,  6th phase (16Jul2020 - 26Jul2020): finished 1088 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tAUT,  7th phase (08Aug2020 - 17Aug2020): finished 1101 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tITA,  3rd phase (12Apr2020 - 21Apr2020): finished 1099 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tGEO,  5th phase (10Jun2020 - 03Jul2020): finished 1067 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tHUN,  7th phase (24Jul2020 - 11Aug2020): finished  267 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tFRA,  8th phase (23Jul2020 - 15Aug2020): finished 1123 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tBFA,  8th phase (28Jul2020 - 13Aug2020): finished 1133 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tHND,  3rd phase (28Jun2020 - 05Jul2020): finished 1122 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tKOR,  7th phase (21Jul2020 - 13Aug2020): finished 1067 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tPRT,  9th phase (19Aug2020 - 03Sep2020): finished  716 trials in 0 min 40 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tAUT,  1st phase (30Mar2020 - 07Apr2020): finished 1061 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tMEX,  5th phase (10Jul2020 - 17Jul2020): finished 1058 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tFRA,  4th phase (26Apr2020 - 04May2020): finished 1069 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tFRA,  6th phase (28May2020 - 24Jun2020): finished 1055 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tFRA,  2nd phase (03Apr2020 - 12Apr2020): finished  979 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tSEN,  8th phase (29Jul2020 - 11Aug2020): finished 1015 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tARE,  3rd phase (26May2020 - 03Jun2020): finished  967 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tMEX,  1st phase (21May2020 - 08Jun2020): finished  920 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tUSA,  9th phase (20Aug2020 - 03Sep2020): finished  684 trials in 0 min 40 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tMMR,  4th phase (08Jun2020 - 17Jun2020): finished  958 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tIRN,  9th phase (03Aug2020 - 15Aug2020): finished  972 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tBHR,  4th phase (22Jun2020 - 07Jul2020): finished  964 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tHUN,  5th phase (30May2020 - 28Jun2020): finished 1022 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tIRN, 10th phase (16Aug2020 - 03Sep2020): finished 1063 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tFRA,  1st phase (25Mar2020 - 02Apr2020): finished 1179 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tBFA,  1st phase (01Apr2020 - 08Apr2020): finished 1186 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tMMR,  3rd phase (26May2020 - 07Jun2020): finished 1156 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tBHR,  3rd phase (12Jun2020 - 21Jun2020): finished 1233 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tBHR,  8th phase (09Aug2020 - 20Aug2020): finished 1257 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tITA,  1st phase (23Mar2020 - 30Mar2020): finished 1297 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tIRN,  4th phase (31May2020 - 14Jun2020): finished  368 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tUKR,  7th phase (31Jul2020 - 07Aug2020): finished  181 trials in 0 min  5 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tGIN,  8th phase (06Aug2020 - 17Aug2020): finished  532 trials in 0 min 15 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tPRT,  1st phase (01May2020 - 17May2020): finished 1438 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tKWT,  2nd phase (25May2020 - 10Jun2020): finished 1541 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tUKR,  1st phase (08May2020 - 29May2020): finished 1455 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tSEN,  5th phase (20Jun2020 - 01Jul2020): finished  867 trials in 0 min 30 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "Completed optimization. Total: 45 min 51 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      }
     ],
     "prompt_number": 11
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "# Show summary\n",
      "analyser.summary(countries=countries_show)"
     ],
     "language": "python",
     "metadata": {},
     "outputs": [
      {
       "html": [
        "<div>\n",
        "<style scoped>\n",
        "    .dataframe tbody tr th:only-of-type {\n",
        "        vertical-align: middle;\n",
        "    }\n",
        "\n",
        "    .dataframe tbody tr th {\n",
        "        vertical-align: top;\n",
        "    }\n",
        "\n",
        "    .dataframe thead th {\n",
        "        text-align: right;\n",
        "    }\n",
        "</style>\n",
        "<table border=\"1\" class=\"dataframe\">\n",
        "  <thead>\n",
        "    <tr style=\"text-align: right;\">\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th>Type</th>\n",
        "      <th>Start</th>\n",
        "      <th>End</th>\n",
        "      <th>Population</th>\n",
        "      <th>ODE</th>\n",
        "      <th>Rt</th>\n",
        "      <th>theta</th>\n",
        "      <th>kappa</th>\n",
        "      <th>rho</th>\n",
        "      <th>sigma</th>\n",
        "      <th>tau</th>\n",
        "      <th>1/beta [day]</th>\n",
        "      <th>1/gamma [day]</th>\n",
        "      <th>alpha1 [-]</th>\n",
        "      <th>1/alpha2 [day]</th>\n",
        "      <th>RMSLE</th>\n",
        "      <th>Trials</th>\n",
        "      <th>Runtime</th>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>Country</th>\n",
        "      <th>Phase</th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "    </tr>\n",
        "  </thead>\n",
        "  <tbody>\n",
        "    <tr>\n",
        "      <th rowspan=\"11\" valign=\"top\">Russia</th>\n",
        "      <th>1st</th>\n",
        "      <td>Past</td>\n",
        "      <td>08May2020</td>\n",
        "      <td>16May2020</td>\n",
        "      <td>330457362</td>\n",
        "      <td>SIR-F</td>\n",
        "      <td>2.42</td>\n",
        "      <td>0.001806</td>\n",
        "      <td>0.000093</td>\n",
        "      <td>0.012973</td>\n",
        "      <td>0.005252</td>\n",
        "      <td>360</td>\n",
        "      <td>19</td>\n",
        "      <td>47</td>\n",
        "      <td>0.002</td>\n",
        "      <td>2675</td>\n",
        "      <td>0.059236</td>\n",
        "      <td>1095</td>\n",
        "      <td>1 min  0 sec</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>2nd</th>\n",
        "      <td>Past</td>\n",
        "      <td>17May2020</td>\n",
        "      <td>26May2020</td>\n",
        "      <td>330457362</td>\n",
        "      <td>SIR-F</td>\n",
        "      <td>1.59</td>\n",
        "      <td>0.000438</td>\n",
        "      <td>0.000098</td>\n",
        "      <td>0.007034</td>\n",
        "      <td>0.004313</td>\n",
        "      <td>360</td>\n",
        "      <td>35</td>\n",
        "      <td>57</td>\n",
        "      <td>0.000</td>\n",
        "      <td>2549</td>\n",
        "      <td>0.086918</td>\n",
        "      <td>1133</td>\n",
        "      <td>1 min  0 sec</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>3rd</th>\n",
        "      <td>Past</td>\n",
        "      <td>27May2020</td>\n",
        "      <td>03Jun2020</td>\n",
        "      <td>330457362</td>\n",
        "      <td>SIR-F</td>\n",
        "      <td>1.02</td>\n",
        "      <td>0.000972</td>\n",
        "      <td>0.000117</td>\n",
        "      <td>0.005440</td>\n",
        "      <td>0.005215</td>\n",
        "      <td>360</td>\n",
        "      <td>45</td>\n",
        "      <td>47</td>\n",
        "      <td>0.001</td>\n",
        "      <td>2144</td>\n",
        "      <td>0.056952</td>\n",
        "      <td>1121</td>\n",
        "      <td>1 min  0 sec</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>4th</th>\n",
        "      <td>Past</td>\n",
        "      <td>04Jun2020</td>\n",
        "      <td>11Jun2020</td>\n",
        "      <td>330457362</td>\n",
        "      <td>SIR-F</td>\n",
        "      <td>1.06</td>\n",
        "      <td>0.015338</td>\n",
        "      <td>0.000019</td>\n",
        "      <td>0.004661</td>\n",
        "      <td>0.004329</td>\n",
        "      <td>360</td>\n",
        "      <td>53</td>\n",
        "      <td>57</td>\n",
        "      <td>0.015</td>\n",
        "      <td>13398</td>\n",
        "      <td>0.046574</td>\n",
        "      <td>1107</td>\n",
        "      <td>1 min  0 sec</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>5th</th>\n",
        "      <td>Past</td>\n",
        "      <td>12Jun2020</td>\n",
        "      <td>20Jun2020</td>\n",
        "      <td>330457362</td>\n",
        "      <td>SIR-F</td>\n",
        "      <td>0.82</td>\n",
        "      <td>0.001073</td>\n",
        "      <td>0.000069</td>\n",
        "      <td>0.003557</td>\n",
        "      <td>0.004273</td>\n",
        "      <td>360</td>\n",
        "      <td>70</td>\n",
        "      <td>58</td>\n",
        "      <td>0.001</td>\n",
        "      <td>3612</td>\n",
        "      <td>0.060008</td>\n",
        "      <td>1091</td>\n",
        "      <td>1 min  0 sec</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>6th</th>\n",
        "      <td>Past</td>\n",
        "      <td>21Jun2020</td>\n",
        "      <td>30Jun2020</td>\n",
        "      <td>330457362</td>\n",
        "      <td>SIR-F</td>\n",
        "      <td>0.90</td>\n",
        "      <td>0.021825</td>\n",
        "      <td>0.000002</td>\n",
        "      <td>0.002769</td>\n",
        "      <td>0.003016</td>\n",
        "      <td>360</td>\n",
        "      <td>90</td>\n",
        "      <td>82</td>\n",
        "      <td>0.022</td>\n",
        "      <td>132403</td>\n",
        "      <td>0.049641</td>\n",
        "      <td>1132</td>\n",
        "      <td>1 min  0 sec</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>7th</th>\n",
        "      <td>Past</td>\n",
        "      <td>01Jul2020</td>\n",
        "      <td>10Jul2020</td>\n",
        "      <td>330457362</td>\n",
        "      <td>SIR-F</td>\n",
        "      <td>0.89</td>\n",
        "      <td>0.000876</td>\n",
        "      <td>0.000060</td>\n",
        "      <td>0.002359</td>\n",
        "      <td>0.002597</td>\n",
        "      <td>360</td>\n",
        "      <td>105</td>\n",
        "      <td>96</td>\n",
        "      <td>0.001</td>\n",
        "      <td>4195</td>\n",
        "      <td>0.040569</td>\n",
        "      <td>1053</td>\n",
        "      <td>1 min  0 sec</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>8th</th>\n",
        "      <td>Past</td>\n",
        "      <td>11Jul2020</td>\n",
        "      <td>21Jul2020</td>\n",
        "      <td>330457362</td>\n",
        "      <td>SIR-F</td>\n",
        "      <td>0.97</td>\n",
        "      <td>0.001887</td>\n",
        "      <td>0.000046</td>\n",
        "      <td>0.002094</td>\n",
        "      <td>0.002109</td>\n",
        "      <td>360</td>\n",
        "      <td>119</td>\n",
        "      <td>118</td>\n",
        "      <td>0.002</td>\n",
        "      <td>5469</td>\n",
        "      <td>0.038035</td>\n",
        "      <td>984</td>\n",
        "      <td>1 min  0 sec</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>9th</th>\n",
        "      <td>Past</td>\n",
        "      <td>22Jul2020</td>\n",
        "      <td>02Aug2020</td>\n",
        "      <td>330457362</td>\n",
        "      <td>SIR-F</td>\n",
        "      <td>0.63</td>\n",
        "      <td>0.000019</td>\n",
        "      <td>0.000041</td>\n",
        "      <td>0.001652</td>\n",
        "      <td>0.002576</td>\n",
        "      <td>360</td>\n",
        "      <td>151</td>\n",
        "      <td>97</td>\n",
        "      <td>0.000</td>\n",
        "      <td>6137</td>\n",
        "      <td>0.053475</td>\n",
        "      <td>1076</td>\n",
        "      <td>1 min  0 sec</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>10th</th>\n",
        "      <td>Past</td>\n",
        "      <td>03Aug2020</td>\n",
        "      <td>16Aug2020</td>\n",
        "      <td>330457362</td>\n",
        "      <td>SIR-F</td>\n",
        "      <td>0.75</td>\n",
        "      <td>0.031597</td>\n",
        "      <td>0.000091</td>\n",
        "      <td>0.001430</td>\n",
        "      <td>0.001763</td>\n",
        "      <td>360</td>\n",
        "      <td>174</td>\n",
        "      <td>141</td>\n",
        "      <td>0.032</td>\n",
        "      <td>2732</td>\n",
        "      <td>0.135509</td>\n",
        "      <td>1066</td>\n",
        "      <td>1 min  0 sec</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>11th</th>\n",
        "      <td>Past</td>\n",
        "      <td>17Aug2020</td>\n",
        "      <td>03Sep2020</td>\n",
        "      <td>330457362</td>\n",
        "      <td>SIR-F</td>\n",
        "      <td>0.59</td>\n",
        "      <td>0.213558</td>\n",
        "      <td>0.000002</td>\n",
        "      <td>0.001247</td>\n",
        "      <td>0.001651</td>\n",
        "      <td>360</td>\n",
        "      <td>200</td>\n",
        "      <td>151</td>\n",
        "      <td>0.214</td>\n",
        "      <td>103610</td>\n",
        "      <td>0.365278</td>\n",
        "      <td>1055</td>\n",
        "      <td>1 min  0 sec</td>\n",
        "    </tr>\n",
        "  </tbody>\n",
        "</table>\n",
        "</div>"
       ],
       "output_type": "pyout",
       "prompt_number": 12,
       "text": [
        "               Type      Start        End  Population    ODE    Rt     theta  \\\n",
        "Country Phase                                                                  \n",
        "Russia  1st    Past  08May2020  16May2020   330457362  SIR-F  2.42  0.001806   \n",
        "        2nd    Past  17May2020  26May2020   330457362  SIR-F  1.59  0.000438   \n",
        "        3rd    Past  27May2020  03Jun2020   330457362  SIR-F  1.02  0.000972   \n",
        "        4th    Past  04Jun2020  11Jun2020   330457362  SIR-F  1.06  0.015338   \n",
        "        5th    Past  12Jun2020  20Jun2020   330457362  SIR-F  0.82  0.001073   \n",
        "        6th    Past  21Jun2020  30Jun2020   330457362  SIR-F  0.90  0.021825   \n",
        "        7th    Past  01Jul2020  10Jul2020   330457362  SIR-F  0.89  0.000876   \n",
        "        8th    Past  11Jul2020  21Jul2020   330457362  SIR-F  0.97  0.001887   \n",
        "        9th    Past  22Jul2020  02Aug2020   330457362  SIR-F  0.63  0.000019   \n",
        "        10th   Past  03Aug2020  16Aug2020   330457362  SIR-F  0.75  0.031597   \n",
        "        11th   Past  17Aug2020  03Sep2020   330457362  SIR-F  0.59  0.213558   \n",
        "\n",
        "                  kappa       rho     sigma  tau  1/beta [day]  1/gamma [day]  \\\n",
        "Country Phase                                                                   \n",
        "Russia  1st    0.000093  0.012973  0.005252  360            19             47   \n",
        "        2nd    0.000098  0.007034  0.004313  360            35             57   \n",
        "        3rd    0.000117  0.005440  0.005215  360            45             47   \n",
        "        4th    0.000019  0.004661  0.004329  360            53             57   \n",
        "        5th    0.000069  0.003557  0.004273  360            70             58   \n",
        "        6th    0.000002  0.002769  0.003016  360            90             82   \n",
        "        7th    0.000060  0.002359  0.002597  360           105             96   \n",
        "        8th    0.000046  0.002094  0.002109  360           119            118   \n",
        "        9th    0.000041  0.001652  0.002576  360           151             97   \n",
        "        10th   0.000091  0.001430  0.001763  360           174            141   \n",
        "        11th   0.000002  0.001247  0.001651  360           200            151   \n",
        "\n",
        "               alpha1 [-]  1/alpha2 [day]     RMSLE  Trials       Runtime  \n",
        "Country Phase                                                              \n",
        "Russia  1st         0.002            2675  0.059236    1095  1 min  0 sec  \n",
        "        2nd         0.000            2549  0.086918    1133  1 min  0 sec  \n",
        "        3rd         0.001            2144  0.056952    1121  1 min  0 sec  \n",
        "        4th         0.015           13398  0.046574    1107  1 min  0 sec  \n",
        "        5th         0.001            3612  0.060008    1091  1 min  0 sec  \n",
        "        6th         0.022          132403  0.049641    1132  1 min  0 sec  \n",
        "        7th         0.001            4195  0.040569    1053  1 min  0 sec  \n",
        "        8th         0.002            5469  0.038035     984  1 min  0 sec  \n",
        "        9th         0.000            6137  0.053475    1076  1 min  0 sec  \n",
        "        10th        0.032            2732  0.135509    1066  1 min  0 sec  \n",
        "        11th        0.214          103610  0.365278    1055  1 min  0 sec  "
       ]
      }
     ],
     "prompt_number": 12
    },
    {
     "cell_type": "markdown",
     "metadata": {},
     "source": [
      "## Compare the history of parameters\n",
      "Here, compare the history of parameter values if countries."
     ]
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "# All parameter/day parameter/Rt/OxCGRT\n",
      "analyser.track().head()"
     ],
     "language": "python",
     "metadata": {},
     "outputs": [
      {
       "html": [
        "<div>\n",
        "<style scoped>\n",
        "    .dataframe tbody tr th:only-of-type {\n",
        "        vertical-align: middle;\n",
        "    }\n",
        "\n",
        "    .dataframe tbody tr th {\n",
        "        vertical-align: top;\n",
        "    }\n",
        "\n",
        "    .dataframe thead th {\n",
        "        text-align: right;\n",
        "    }\n",
        "</style>\n",
        "<table border=\"1\" class=\"dataframe\">\n",
        "  <thead>\n",
        "    <tr style=\"text-align: right;\">\n",
        "      <th></th>\n",
        "      <th>Date</th>\n",
        "      <th>Country</th>\n",
        "      <th>theta</th>\n",
        "      <th>kappa</th>\n",
        "      <th>rho</th>\n",
        "      <th>sigma</th>\n",
        "      <th>alpha1 [-]</th>\n",
        "      <th>1/alpha2 [day]</th>\n",
        "      <th>1/beta [day]</th>\n",
        "      <th>1/gamma [day]</th>\n",
        "      <th>...</th>\n",
        "      <th>Cancel_events</th>\n",
        "      <th>Gatherings_restrictions</th>\n",
        "      <th>Transport_closing</th>\n",
        "      <th>Stay_home_restrictions</th>\n",
        "      <th>Internal_movement_restrictions</th>\n",
        "      <th>International_movement_restrictions</th>\n",
        "      <th>Information_campaigns</th>\n",
        "      <th>Testing_policy</th>\n",
        "      <th>Contact_tracing</th>\n",
        "      <th>Stringency_index</th>\n",
        "    </tr>\n",
        "  </thead>\n",
        "  <tbody>\n",
        "    <tr>\n",
        "      <th>0</th>\n",
        "      <td>2020-05-06</td>\n",
        "      <td>Bahrain</td>\n",
        "      <td>0.00111161</td>\n",
        "      <td>1.03678e-05</td>\n",
        "      <td>0.0176705</td>\n",
        "      <td>0.00945756</td>\n",
        "      <td>0.001</td>\n",
        "      <td>24113</td>\n",
        "      <td>14</td>\n",
        "      <td>26</td>\n",
        "      <td>...</td>\n",
        "      <td>2</td>\n",
        "      <td>4</td>\n",
        "      <td>1</td>\n",
        "      <td>1</td>\n",
        "      <td>1</td>\n",
        "      <td>3</td>\n",
        "      <td>2</td>\n",
        "      <td>3</td>\n",
        "      <td>2</td>\n",
        "      <td>75.0</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>1</th>\n",
        "      <td>2020-05-07</td>\n",
        "      <td>Bahrain</td>\n",
        "      <td>0.00111161</td>\n",
        "      <td>1.03678e-05</td>\n",
        "      <td>0.0176705</td>\n",
        "      <td>0.00945756</td>\n",
        "      <td>0.001</td>\n",
        "      <td>24113</td>\n",
        "      <td>14</td>\n",
        "      <td>26</td>\n",
        "      <td>...</td>\n",
        "      <td>2</td>\n",
        "      <td>4</td>\n",
        "      <td>1</td>\n",
        "      <td>1</td>\n",
        "      <td>1</td>\n",
        "      <td>3</td>\n",
        "      <td>2</td>\n",
        "      <td>3</td>\n",
        "      <td>2</td>\n",
        "      <td>75.0</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>2</th>\n",
        "      <td>2020-05-08</td>\n",
        "      <td>Bahrain</td>\n",
        "      <td>0.00111161</td>\n",
        "      <td>1.03678e-05</td>\n",
        "      <td>0.0176705</td>\n",
        "      <td>0.00945756</td>\n",
        "      <td>0.001</td>\n",
        "      <td>24113</td>\n",
        "      <td>14</td>\n",
        "      <td>26</td>\n",
        "      <td>...</td>\n",
        "      <td>2</td>\n",
        "      <td>4</td>\n",
        "      <td>1</td>\n",
        "      <td>1</td>\n",
        "      <td>1</td>\n",
        "      <td>3</td>\n",
        "      <td>2</td>\n",
        "      <td>3</td>\n",
        "      <td>2</td>\n",
        "      <td>75.0</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>3</th>\n",
        "      <td>2020-05-09</td>\n",
        "      <td>Bahrain</td>\n",
        "      <td>0.00111161</td>\n",
        "      <td>1.03678e-05</td>\n",
        "      <td>0.0176705</td>\n",
        "      <td>0.00945756</td>\n",
        "      <td>0.001</td>\n",
        "      <td>24113</td>\n",
        "      <td>14</td>\n",
        "      <td>26</td>\n",
        "      <td>...</td>\n",
        "      <td>2</td>\n",
        "      <td>4</td>\n",
        "      <td>1</td>\n",
        "      <td>1</td>\n",
        "      <td>1</td>\n",
        "      <td>3</td>\n",
        "      <td>2</td>\n",
        "      <td>3</td>\n",
        "      <td>2</td>\n",
        "      <td>75.0</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>4</th>\n",
        "      <td>2020-05-10</td>\n",
        "      <td>Bahrain</td>\n",
        "      <td>0.00111161</td>\n",
        "      <td>1.03678e-05</td>\n",
        "      <td>0.0176705</td>\n",
        "      <td>0.00945756</td>\n",
        "      <td>0.001</td>\n",
        "      <td>24113</td>\n",
        "      <td>14</td>\n",
        "      <td>26</td>\n",
        "      <td>...</td>\n",
        "      <td>2</td>\n",
        "      <td>4</td>\n",
        "      <td>1</td>\n",
        "      <td>1</td>\n",
        "      <td>1</td>\n",
        "      <td>3</td>\n",
        "      <td>2</td>\n",
        "      <td>3</td>\n",
        "      <td>2</td>\n",
        "      <td>75.0</td>\n",
        "    </tr>\n",
        "  </tbody>\n",
        "</table>\n",
        "<p>5 rows \u00d7 23 columns</p>\n",
        "</div>"
       ],
       "output_type": "pyout",
       "prompt_number": 13,
       "text": [
        "        Date  Country       theta        kappa        rho       sigma  \\\n",
        "0 2020-05-06  Bahrain  0.00111161  1.03678e-05  0.0176705  0.00945756   \n",
        "1 2020-05-07  Bahrain  0.00111161  1.03678e-05  0.0176705  0.00945756   \n",
        "2 2020-05-08  Bahrain  0.00111161  1.03678e-05  0.0176705  0.00945756   \n",
        "3 2020-05-09  Bahrain  0.00111161  1.03678e-05  0.0176705  0.00945756   \n",
        "4 2020-05-10  Bahrain  0.00111161  1.03678e-05  0.0176705  0.00945756   \n",
        "\n",
        "  alpha1 [-] 1/alpha2 [day] 1/beta [day] 1/gamma [day]  ... Cancel_events  \\\n",
        "0      0.001          24113           14            26  ...             2   \n",
        "1      0.001          24113           14            26  ...             2   \n",
        "2      0.001          24113           14            26  ...             2   \n",
        "3      0.001          24113           14            26  ...             2   \n",
        "4      0.001          24113           14            26  ...             2   \n",
        "\n",
        "   Gatherings_restrictions  Transport_closing  Stay_home_restrictions  \\\n",
        "0                        4                  1                       1   \n",
        "1                        4                  1                       1   \n",
        "2                        4                  1                       1   \n",
        "3                        4                  1                       1   \n",
        "4                        4                  1                       1   \n",
        "\n",
        "   Internal_movement_restrictions  International_movement_restrictions  \\\n",
        "0                               1                                    3   \n",
        "1                               1                                    3   \n",
        "2                               1                                    3   \n",
        "3                               1                                    3   \n",
        "4                               1                                    3   \n",
        "\n",
        "   Information_campaigns  Testing_policy  Contact_tracing  Stringency_index  \n",
        "0                      2               3                2              75.0  \n",
        "1                      2               3                2              75.0  \n",
        "2                      2               3                2              75.0  \n",
        "3                      2               3                2              75.0  \n",
        "4                      2               3                2              75.0  \n",
        "\n",
        "[5 rows x 23 columns]"
       ]
      }
     ],
     "prompt_number": 13
    },
    {
     "cell_type": "heading",
     "level": 3,
     "metadata": {},
     "source": [
      "$Rt$: Reprodcution number $\\mathrm{[-]}$"
     ]
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "analyser.param_history(\"Rt\", roll_window=None).tail()"
     ],
     "language": "python",
     "metadata": {},
     "outputs": [
      {
       "output_type": "display_data",
       "png": "\n",
       "text": [
        "<Figure size 648x432 with 1 Axes>"
       ]
      },
      {
       "html": [
        "<div>\n",
        "<style scoped>\n",
        "    .dataframe tbody tr th:only-of-type {\n",
        "        vertical-align: middle;\n",
        "    }\n",
        "\n",
        "    .dataframe tbody tr th {\n",
        "        vertical-align: top;\n",
        "    }\n",
        "\n",
        "    .dataframe thead th {\n",
        "        text-align: right;\n",
        "    }\n",
        "</style>\n",
        "<table border=\"1\" class=\"dataframe\">\n",
        "  <thead>\n",
        "    <tr style=\"text-align: right;\">\n",
        "      <th>Country</th>\n",
        "      <th>Austria</th>\n",
        "      <th>Bahrain</th>\n",
        "      <th>Bangladesh</th>\n",
        "      <th>Burkina Faso</th>\n",
        "      <th>France</th>\n",
        "      <th>Georgia</th>\n",
        "      <th>Guinea</th>\n",
        "      <th>Honduras</th>\n",
        "      <th>Hungary</th>\n",
        "      <th>Iran</th>\n",
        "      <th>...</th>\n",
        "      <th>Poland</th>\n",
        "      <th>Portugal</th>\n",
        "      <th>Romania</th>\n",
        "      <th>Russia</th>\n",
        "      <th>Senegal</th>\n",
        "      <th>Serbia</th>\n",
        "      <th>Turkey</th>\n",
        "      <th>Ukraine</th>\n",
        "      <th>United Arab Emirates</th>\n",
        "      <th>United States</th>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>Date</th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "    </tr>\n",
        "  </thead>\n",
        "  <tbody>\n",
        "    <tr>\n",
        "      <th>2020-08-30</th>\n",
        "      <td>1.08</td>\n",
        "      <td>0.95</td>\n",
        "      <td>0.7</td>\n",
        "      <td>2.87</td>\n",
        "      <td>7.62</td>\n",
        "      <td>3.39</td>\n",
        "      <td>0.71</td>\n",
        "      <td>4.24</td>\n",
        "      <td>2.12</td>\n",
        "      <td>1.2</td>\n",
        "      <td>...</td>\n",
        "      <td>1.62</td>\n",
        "      <td>1.69</td>\n",
        "      <td>3.07</td>\n",
        "      <td>0.59</td>\n",
        "      <td>2.7</td>\n",
        "      <td>30.76</td>\n",
        "      <td>1.15</td>\n",
        "      <td>2.67</td>\n",
        "      <td>0.91</td>\n",
        "      <td>1.91</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>2020-08-31</th>\n",
        "      <td>1.08</td>\n",
        "      <td>0.95</td>\n",
        "      <td>0.7</td>\n",
        "      <td>2.87</td>\n",
        "      <td>7.62</td>\n",
        "      <td>3.39</td>\n",
        "      <td>0.71</td>\n",
        "      <td>4.24</td>\n",
        "      <td>2.12</td>\n",
        "      <td>1.2</td>\n",
        "      <td>...</td>\n",
        "      <td>1.62</td>\n",
        "      <td>1.69</td>\n",
        "      <td>3.07</td>\n",
        "      <td>0.59</td>\n",
        "      <td>2.7</td>\n",
        "      <td>30.76</td>\n",
        "      <td>1.15</td>\n",
        "      <td>2.67</td>\n",
        "      <td>0.91</td>\n",
        "      <td>1.91</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>2020-09-01</th>\n",
        "      <td>1.08</td>\n",
        "      <td>0.95</td>\n",
        "      <td>0.7</td>\n",
        "      <td>2.87</td>\n",
        "      <td>7.62</td>\n",
        "      <td>3.39</td>\n",
        "      <td>0.71</td>\n",
        "      <td>4.24</td>\n",
        "      <td>2.12</td>\n",
        "      <td>1.2</td>\n",
        "      <td>...</td>\n",
        "      <td>1.62</td>\n",
        "      <td>1.69</td>\n",
        "      <td>3.07</td>\n",
        "      <td>0.59</td>\n",
        "      <td>2.7</td>\n",
        "      <td>30.76</td>\n",
        "      <td>1.15</td>\n",
        "      <td>2.67</td>\n",
        "      <td>0.91</td>\n",
        "      <td>1.91</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>2020-09-02</th>\n",
        "      <td>1.08</td>\n",
        "      <td>0.95</td>\n",
        "      <td>0.7</td>\n",
        "      <td>2.87</td>\n",
        "      <td>7.62</td>\n",
        "      <td>3.39</td>\n",
        "      <td>0.71</td>\n",
        "      <td>4.24</td>\n",
        "      <td>2.12</td>\n",
        "      <td>1.2</td>\n",
        "      <td>...</td>\n",
        "      <td>1.62</td>\n",
        "      <td>1.69</td>\n",
        "      <td>3.07</td>\n",
        "      <td>0.59</td>\n",
        "      <td>2.7</td>\n",
        "      <td>30.76</td>\n",
        "      <td>1.15</td>\n",
        "      <td>2.67</td>\n",
        "      <td>0.91</td>\n",
        "      <td>1.91</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>2020-09-03</th>\n",
        "      <td>1.08</td>\n",
        "      <td>0.95</td>\n",
        "      <td>0.7</td>\n",
        "      <td>2.87</td>\n",
        "      <td>7.62</td>\n",
        "      <td>3.39</td>\n",
        "      <td>0.71</td>\n",
        "      <td>4.24</td>\n",
        "      <td>2.12</td>\n",
        "      <td>1.2</td>\n",
        "      <td>...</td>\n",
        "      <td>1.62</td>\n",
        "      <td>1.69</td>\n",
        "      <td>3.07</td>\n",
        "      <td>0.59</td>\n",
        "      <td>2.7</td>\n",
        "      <td>30.76</td>\n",
        "      <td>1.15</td>\n",
        "      <td>2.67</td>\n",
        "      <td>0.91</td>\n",
        "      <td>1.91</td>\n",
        "    </tr>\n",
        "  </tbody>\n",
        "</table>\n",
        "<p>5 rows \u00d7 28 columns</p>\n",
        "</div>"
       ],
       "output_type": "pyout",
       "prompt_number": 14,
       "text": [
        "Country     Austria  Bahrain  Bangladesh  Burkina Faso  France  Georgia  \\\n",
        "Date                                                                      \n",
        "2020-08-30     1.08     0.95         0.7          2.87    7.62     3.39   \n",
        "2020-08-31     1.08     0.95         0.7          2.87    7.62     3.39   \n",
        "2020-09-01     1.08     0.95         0.7          2.87    7.62     3.39   \n",
        "2020-09-02     1.08     0.95         0.7          2.87    7.62     3.39   \n",
        "2020-09-03     1.08     0.95         0.7          2.87    7.62     3.39   \n",
        "\n",
        "Country     Guinea  Honduras  Hungary  Iran  ...  Poland  Portugal  Romania  \\\n",
        "Date                                         ...                              \n",
        "2020-08-30    0.71      4.24     2.12   1.2  ...    1.62      1.69     3.07   \n",
        "2020-08-31    0.71      4.24     2.12   1.2  ...    1.62      1.69     3.07   \n",
        "2020-09-01    0.71      4.24     2.12   1.2  ...    1.62      1.69     3.07   \n",
        "2020-09-02    0.71      4.24     2.12   1.2  ...    1.62      1.69     3.07   \n",
        "2020-09-03    0.71      4.24     2.12   1.2  ...    1.62      1.69     3.07   \n",
        "\n",
        "Country     Russia  Senegal  Serbia  Turkey  Ukraine  United Arab Emirates  \\\n",
        "Date                                                                         \n",
        "2020-08-30    0.59      2.7   30.76    1.15     2.67                  0.91   \n",
        "2020-08-31    0.59      2.7   30.76    1.15     2.67                  0.91   \n",
        "2020-09-01    0.59      2.7   30.76    1.15     2.67                  0.91   \n",
        "2020-09-02    0.59      2.7   30.76    1.15     2.67                  0.91   \n",
        "2020-09-03    0.59      2.7   30.76    1.15     2.67                  0.91   \n",
        "\n",
        "Country     United States  \n",
        "Date                       \n",
        "2020-08-30           1.91  \n",
        "2020-08-31           1.91  \n",
        "2020-09-01           1.91  \n",
        "2020-09-02           1.91  \n",
        "2020-09-03           1.91  \n",
        "\n",
        "[5 rows x 28 columns]"
       ]
      }
     ],
     "prompt_number": 14
    },
    {
     "cell_type": "heading",
     "level": 3,
     "metadata": {},
     "source": [
      "$\\rho$: Effective contact rate $\\mathrm{[-]}$"
     ]
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "analyser.param_history(\"rho\", roll_window=None).tail()"
     ],
     "language": "python",
     "metadata": {},
     "outputs": [
      {
       "output_type": "display_data",
       "png": "\n",
       "text": [
        "<Figure size 648x432 with 1 Axes>"
       ]
      },
      {
       "html": [
        "<div>\n",
        "<style scoped>\n",
        "    .dataframe tbody tr th:only-of-type {\n",
        "        vertical-align: middle;\n",
        "    }\n",
        "\n",
        "    .dataframe tbody tr th {\n",
        "        vertical-align: top;\n",
        "    }\n",
        "\n",
        "    .dataframe thead th {\n",
        "        text-align: right;\n",
        "    }\n",
        "</style>\n",
        "<table border=\"1\" class=\"dataframe\">\n",
        "  <thead>\n",
        "    <tr style=\"text-align: right;\">\n",
        "      <th>Country</th>\n",
        "      <th>Austria</th>\n",
        "      <th>Bahrain</th>\n",
        "      <th>Bangladesh</th>\n",
        "      <th>Burkina Faso</th>\n",
        "      <th>France</th>\n",
        "      <th>Georgia</th>\n",
        "      <th>Guinea</th>\n",
        "      <th>Honduras</th>\n",
        "      <th>Hungary</th>\n",
        "      <th>Iran</th>\n",
        "      <th>...</th>\n",
        "      <th>Poland</th>\n",
        "      <th>Portugal</th>\n",
        "      <th>Romania</th>\n",
        "      <th>Russia</th>\n",
        "      <th>Senegal</th>\n",
        "      <th>Serbia</th>\n",
        "      <th>Turkey</th>\n",
        "      <th>Ukraine</th>\n",
        "      <th>United Arab Emirates</th>\n",
        "      <th>United States</th>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>Date</th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "    </tr>\n",
        "  </thead>\n",
        "  <tbody>\n",
        "    <tr>\n",
        "      <th>2020-08-30</th>\n",
        "      <td>0.01639</td>\n",
        "      <td>0.028895</td>\n",
        "      <td>0.005383</td>\n",
        "      <td>0.00771</td>\n",
        "      <td>0.004216</td>\n",
        "      <td>0.018353</td>\n",
        "      <td>0.010624</td>\n",
        "      <td>0.003335</td>\n",
        "      <td>0.012767</td>\n",
        "      <td>0.019214</td>\n",
        "      <td>...</td>\n",
        "      <td>0.010202</td>\n",
        "      <td>0.004751</td>\n",
        "      <td>0.006664</td>\n",
        "      <td>0.001247</td>\n",
        "      <td>0.007391</td>\n",
        "      <td>0.007347</td>\n",
        "      <td>0.026082</td>\n",
        "      <td>0.010417</td>\n",
        "      <td>0.011138</td>\n",
        "      <td>0.002952</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>2020-08-31</th>\n",
        "      <td>0.01639</td>\n",
        "      <td>0.028895</td>\n",
        "      <td>0.005383</td>\n",
        "      <td>0.00771</td>\n",
        "      <td>0.004216</td>\n",
        "      <td>0.018353</td>\n",
        "      <td>0.010624</td>\n",
        "      <td>0.003335</td>\n",
        "      <td>0.012767</td>\n",
        "      <td>0.019214</td>\n",
        "      <td>...</td>\n",
        "      <td>0.010202</td>\n",
        "      <td>0.004751</td>\n",
        "      <td>0.006664</td>\n",
        "      <td>0.001247</td>\n",
        "      <td>0.007391</td>\n",
        "      <td>0.007347</td>\n",
        "      <td>0.026082</td>\n",
        "      <td>0.010417</td>\n",
        "      <td>0.011138</td>\n",
        "      <td>0.002952</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>2020-09-01</th>\n",
        "      <td>0.01639</td>\n",
        "      <td>0.028895</td>\n",
        "      <td>0.005383</td>\n",
        "      <td>0.00771</td>\n",
        "      <td>0.004216</td>\n",
        "      <td>0.018353</td>\n",
        "      <td>0.010624</td>\n",
        "      <td>0.003335</td>\n",
        "      <td>0.012767</td>\n",
        "      <td>0.019214</td>\n",
        "      <td>...</td>\n",
        "      <td>0.010202</td>\n",
        "      <td>0.004751</td>\n",
        "      <td>0.006664</td>\n",
        "      <td>0.001247</td>\n",
        "      <td>0.007391</td>\n",
        "      <td>0.007347</td>\n",
        "      <td>0.026082</td>\n",
        "      <td>0.010417</td>\n",
        "      <td>0.011138</td>\n",
        "      <td>0.002952</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>2020-09-02</th>\n",
        "      <td>0.01639</td>\n",
        "      <td>0.028895</td>\n",
        "      <td>0.005383</td>\n",
        "      <td>0.00771</td>\n",
        "      <td>0.004216</td>\n",
        "      <td>0.018353</td>\n",
        "      <td>0.010624</td>\n",
        "      <td>0.003335</td>\n",
        "      <td>0.012767</td>\n",
        "      <td>0.019214</td>\n",
        "      <td>...</td>\n",
        "      <td>0.010202</td>\n",
        "      <td>0.004751</td>\n",
        "      <td>0.006664</td>\n",
        "      <td>0.001247</td>\n",
        "      <td>0.007391</td>\n",
        "      <td>0.007347</td>\n",
        "      <td>0.026082</td>\n",
        "      <td>0.010417</td>\n",
        "      <td>0.011138</td>\n",
        "      <td>0.002952</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>2020-09-03</th>\n",
        "      <td>0.01639</td>\n",
        "      <td>0.028895</td>\n",
        "      <td>0.005383</td>\n",
        "      <td>0.00771</td>\n",
        "      <td>0.004216</td>\n",
        "      <td>0.018353</td>\n",
        "      <td>0.010624</td>\n",
        "      <td>0.003335</td>\n",
        "      <td>0.012767</td>\n",
        "      <td>0.019214</td>\n",
        "      <td>...</td>\n",
        "      <td>0.010202</td>\n",
        "      <td>0.004751</td>\n",
        "      <td>0.006664</td>\n",
        "      <td>0.001247</td>\n",
        "      <td>0.007391</td>\n",
        "      <td>0.007347</td>\n",
        "      <td>0.026082</td>\n",
        "      <td>0.010417</td>\n",
        "      <td>0.011138</td>\n",
        "      <td>0.002952</td>\n",
        "    </tr>\n",
        "  </tbody>\n",
        "</table>\n",
        "<p>5 rows \u00d7 28 columns</p>\n",
        "</div>"
       ],
       "output_type": "pyout",
       "prompt_number": 15,
       "text": [
        "Country     Austria   Bahrain  Bangladesh  Burkina Faso    France   Georgia  \\\n",
        "Date                                                                          \n",
        "2020-08-30  0.01639  0.028895    0.005383       0.00771  0.004216  0.018353   \n",
        "2020-08-31  0.01639  0.028895    0.005383       0.00771  0.004216  0.018353   \n",
        "2020-09-01  0.01639  0.028895    0.005383       0.00771  0.004216  0.018353   \n",
        "2020-09-02  0.01639  0.028895    0.005383       0.00771  0.004216  0.018353   \n",
        "2020-09-03  0.01639  0.028895    0.005383       0.00771  0.004216  0.018353   \n",
        "\n",
        "Country       Guinea  Honduras   Hungary      Iran  ...    Poland  Portugal  \\\n",
        "Date                                                ...                       \n",
        "2020-08-30  0.010624  0.003335  0.012767  0.019214  ...  0.010202  0.004751   \n",
        "2020-08-31  0.010624  0.003335  0.012767  0.019214  ...  0.010202  0.004751   \n",
        "2020-09-01  0.010624  0.003335  0.012767  0.019214  ...  0.010202  0.004751   \n",
        "2020-09-02  0.010624  0.003335  0.012767  0.019214  ...  0.010202  0.004751   \n",
        "2020-09-03  0.010624  0.003335  0.012767  0.019214  ...  0.010202  0.004751   \n",
        "\n",
        "Country      Romania    Russia   Senegal    Serbia    Turkey   Ukraine  \\\n",
        "Date                                                                     \n",
        "2020-08-30  0.006664  0.001247  0.007391  0.007347  0.026082  0.010417   \n",
        "2020-08-31  0.006664  0.001247  0.007391  0.007347  0.026082  0.010417   \n",
        "2020-09-01  0.006664  0.001247  0.007391  0.007347  0.026082  0.010417   \n",
        "2020-09-02  0.006664  0.001247  0.007391  0.007347  0.026082  0.010417   \n",
        "2020-09-03  0.006664  0.001247  0.007391  0.007347  0.026082  0.010417   \n",
        "\n",
        "Country     United Arab Emirates  United States  \n",
        "Date                                             \n",
        "2020-08-30              0.011138       0.002952  \n",
        "2020-08-31              0.011138       0.002952  \n",
        "2020-09-01              0.011138       0.002952  \n",
        "2020-09-02              0.011138       0.002952  \n",
        "2020-09-03              0.011138       0.002952  \n",
        "\n",
        "[5 rows x 28 columns]"
       ]
      }
     ],
     "prompt_number": 15
    },
    {
     "cell_type": "heading",
     "level": 3,
     "metadata": {},
     "source": [
      "$\\sigma$: Recovery rate $\\mathrm{[-]}$"
     ]
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "analyser.param_history(\"sigma\", roll_window=None).tail()"
     ],
     "language": "python",
     "metadata": {},
     "outputs": [
      {
       "output_type": "display_data",
       "png": "\n",
       "text": [
        "<Figure size 648x432 with 1 Axes>"
       ]
      },
      {
       "html": [
        "<div>\n",
        "<style scoped>\n",
        "    .dataframe tbody tr th:only-of-type {\n",
        "        vertical-align: middle;\n",
        "    }\n",
        "\n",
        "    .dataframe tbody tr th {\n",
        "        vertical-align: top;\n",
        "    }\n",
        "\n",
        "    .dataframe thead th {\n",
        "        text-align: right;\n",
        "    }\n",
        "</style>\n",
        "<table border=\"1\" class=\"dataframe\">\n",
        "  <thead>\n",
        "    <tr style=\"text-align: right;\">\n",
        "      <th>Country</th>\n",
        "      <th>Austria</th>\n",
        "      <th>Bahrain</th>\n",
        "      <th>Bangladesh</th>\n",
        "      <th>Burkina Faso</th>\n",
        "      <th>France</th>\n",
        "      <th>Georgia</th>\n",
        "      <th>Guinea</th>\n",
        "      <th>Honduras</th>\n",
        "      <th>Hungary</th>\n",
        "      <th>Iran</th>\n",
        "      <th>...</th>\n",
        "      <th>Poland</th>\n",
        "      <th>Portugal</th>\n",
        "      <th>Romania</th>\n",
        "      <th>Russia</th>\n",
        "      <th>Senegal</th>\n",
        "      <th>Serbia</th>\n",
        "      <th>Turkey</th>\n",
        "      <th>Ukraine</th>\n",
        "      <th>United Arab Emirates</th>\n",
        "      <th>United States</th>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>Date</th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "    </tr>\n",
        "  </thead>\n",
        "  <tbody>\n",
        "    <tr>\n",
        "      <th>2020-08-30</th>\n",
        "      <td>0.015042</td>\n",
        "      <td>0.030284</td>\n",
        "      <td>0.00754</td>\n",
        "      <td>0.002607</td>\n",
        "      <td>0.000529</td>\n",
        "      <td>0.005215</td>\n",
        "      <td>0.014741</td>\n",
        "      <td>0.000682</td>\n",
        "      <td>0.005594</td>\n",
        "      <td>0.01495</td>\n",
        "      <td>...</td>\n",
        "      <td>0.006111</td>\n",
        "      <td>0.002755</td>\n",
        "      <td>0.002067</td>\n",
        "      <td>0.001651</td>\n",
        "      <td>0.002594</td>\n",
        "      <td>0.0</td>\n",
        "      <td>0.022314</td>\n",
        "      <td>0.003789</td>\n",
        "      <td>0.012136</td>\n",
        "      <td>0.001483</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>2020-08-31</th>\n",
        "      <td>0.015042</td>\n",
        "      <td>0.030284</td>\n",
        "      <td>0.00754</td>\n",
        "      <td>0.002607</td>\n",
        "      <td>0.000529</td>\n",
        "      <td>0.005215</td>\n",
        "      <td>0.014741</td>\n",
        "      <td>0.000682</td>\n",
        "      <td>0.005594</td>\n",
        "      <td>0.01495</td>\n",
        "      <td>...</td>\n",
        "      <td>0.006111</td>\n",
        "      <td>0.002755</td>\n",
        "      <td>0.002067</td>\n",
        "      <td>0.001651</td>\n",
        "      <td>0.002594</td>\n",
        "      <td>0.0</td>\n",
        "      <td>0.022314</td>\n",
        "      <td>0.003789</td>\n",
        "      <td>0.012136</td>\n",
        "      <td>0.001483</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>2020-09-01</th>\n",
        "      <td>0.015042</td>\n",
        "      <td>0.030284</td>\n",
        "      <td>0.00754</td>\n",
        "      <td>0.002607</td>\n",
        "      <td>0.000529</td>\n",
        "      <td>0.005215</td>\n",
        "      <td>0.014741</td>\n",
        "      <td>0.000682</td>\n",
        "      <td>0.005594</td>\n",
        "      <td>0.01495</td>\n",
        "      <td>...</td>\n",
        "      <td>0.006111</td>\n",
        "      <td>0.002755</td>\n",
        "      <td>0.002067</td>\n",
        "      <td>0.001651</td>\n",
        "      <td>0.002594</td>\n",
        "      <td>0.0</td>\n",
        "      <td>0.022314</td>\n",
        "      <td>0.003789</td>\n",
        "      <td>0.012136</td>\n",
        "      <td>0.001483</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>2020-09-02</th>\n",
        "      <td>0.015042</td>\n",
        "      <td>0.030284</td>\n",
        "      <td>0.00754</td>\n",
        "      <td>0.002607</td>\n",
        "      <td>0.000529</td>\n",
        "      <td>0.005215</td>\n",
        "      <td>0.014741</td>\n",
        "      <td>0.000682</td>\n",
        "      <td>0.005594</td>\n",
        "      <td>0.01495</td>\n",
        "      <td>...</td>\n",
        "      <td>0.006111</td>\n",
        "      <td>0.002755</td>\n",
        "      <td>0.002067</td>\n",
        "      <td>0.001651</td>\n",
        "      <td>0.002594</td>\n",
        "      <td>0.0</td>\n",
        "      <td>0.022314</td>\n",
        "      <td>0.003789</td>\n",
        "      <td>0.012136</td>\n",
        "      <td>0.001483</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>2020-09-03</th>\n",
        "      <td>0.015042</td>\n",
        "      <td>0.030284</td>\n",
        "      <td>0.00754</td>\n",
        "      <td>0.002607</td>\n",
        "      <td>0.000529</td>\n",
        "      <td>0.005215</td>\n",
        "      <td>0.014741</td>\n",
        "      <td>0.000682</td>\n",
        "      <td>0.005594</td>\n",
        "      <td>0.01495</td>\n",
        "      <td>...</td>\n",
        "      <td>0.006111</td>\n",
        "      <td>0.002755</td>\n",
        "      <td>0.002067</td>\n",
        "      <td>0.001651</td>\n",
        "      <td>0.002594</td>\n",
        "      <td>0.0</td>\n",
        "      <td>0.022314</td>\n",
        "      <td>0.003789</td>\n",
        "      <td>0.012136</td>\n",
        "      <td>0.001483</td>\n",
        "    </tr>\n",
        "  </tbody>\n",
        "</table>\n",
        "<p>5 rows \u00d7 28 columns</p>\n",
        "</div>"
       ],
       "output_type": "pyout",
       "prompt_number": 16,
       "text": [
        "Country      Austria   Bahrain  Bangladesh  Burkina Faso    France   Georgia  \\\n",
        "Date                                                                           \n",
        "2020-08-30  0.015042  0.030284     0.00754      0.002607  0.000529  0.005215   \n",
        "2020-08-31  0.015042  0.030284     0.00754      0.002607  0.000529  0.005215   \n",
        "2020-09-01  0.015042  0.030284     0.00754      0.002607  0.000529  0.005215   \n",
        "2020-09-02  0.015042  0.030284     0.00754      0.002607  0.000529  0.005215   \n",
        "2020-09-03  0.015042  0.030284     0.00754      0.002607  0.000529  0.005215   \n",
        "\n",
        "Country       Guinea  Honduras   Hungary     Iran  ...    Poland  Portugal  \\\n",
        "Date                                               ...                       \n",
        "2020-08-30  0.014741  0.000682  0.005594  0.01495  ...  0.006111  0.002755   \n",
        "2020-08-31  0.014741  0.000682  0.005594  0.01495  ...  0.006111  0.002755   \n",
        "2020-09-01  0.014741  0.000682  0.005594  0.01495  ...  0.006111  0.002755   \n",
        "2020-09-02  0.014741  0.000682  0.005594  0.01495  ...  0.006111  0.002755   \n",
        "2020-09-03  0.014741  0.000682  0.005594  0.01495  ...  0.006111  0.002755   \n",
        "\n",
        "Country      Romania    Russia   Senegal  Serbia    Turkey   Ukraine  \\\n",
        "Date                                                                   \n",
        "2020-08-30  0.002067  0.001651  0.002594     0.0  0.022314  0.003789   \n",
        "2020-08-31  0.002067  0.001651  0.002594     0.0  0.022314  0.003789   \n",
        "2020-09-01  0.002067  0.001651  0.002594     0.0  0.022314  0.003789   \n",
        "2020-09-02  0.002067  0.001651  0.002594     0.0  0.022314  0.003789   \n",
        "2020-09-03  0.002067  0.001651  0.002594     0.0  0.022314  0.003789   \n",
        "\n",
        "Country     United Arab Emirates  United States  \n",
        "Date                                             \n",
        "2020-08-30              0.012136       0.001483  \n",
        "2020-08-31              0.012136       0.001483  \n",
        "2020-09-01              0.012136       0.001483  \n",
        "2020-09-02              0.012136       0.001483  \n",
        "2020-09-03              0.012136       0.001483  \n",
        "\n",
        "[5 rows x 28 columns]"
       ]
      }
     ],
     "prompt_number": 16
    },
    {
     "cell_type": "heading",
     "level": 3,
     "metadata": {},
     "source": [
      "$\\kappa$: Mortality rate of infected cases $\\mathrm{[-]}$"
     ]
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "analyser.param_history(\"kappa\", roll_window=None).tail()"
     ],
     "language": "python",
     "metadata": {},
     "outputs": [
      {
       "output_type": "display_data",
       "png": "\n",
       "text": [
        "<Figure size 648x432 with 1 Axes>"
       ]
      },
      {
       "html": [
        "<div>\n",
        "<style scoped>\n",
        "    .dataframe tbody tr th:only-of-type {\n",
        "        vertical-align: middle;\n",
        "    }\n",
        "\n",
        "    .dataframe tbody tr th {\n",
        "        vertical-align: top;\n",
        "    }\n",
        "\n",
        "    .dataframe thead th {\n",
        "        text-align: right;\n",
        "    }\n",
        "</style>\n",
        "<table border=\"1\" class=\"dataframe\">\n",
        "  <thead>\n",
        "    <tr style=\"text-align: right;\">\n",
        "      <th>Country</th>\n",
        "      <th>Austria</th>\n",
        "      <th>Bahrain</th>\n",
        "      <th>Bangladesh</th>\n",
        "      <th>Burkina Faso</th>\n",
        "      <th>France</th>\n",
        "      <th>Georgia</th>\n",
        "      <th>Guinea</th>\n",
        "      <th>Honduras</th>\n",
        "      <th>Hungary</th>\n",
        "      <th>Iran</th>\n",
        "      <th>...</th>\n",
        "      <th>Poland</th>\n",
        "      <th>Portugal</th>\n",
        "      <th>Romania</th>\n",
        "      <th>Russia</th>\n",
        "      <th>Senegal</th>\n",
        "      <th>Serbia</th>\n",
        "      <th>Turkey</th>\n",
        "      <th>Ukraine</th>\n",
        "      <th>United Arab Emirates</th>\n",
        "      <th>United States</th>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>Date</th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "    </tr>\n",
        "  </thead>\n",
        "  <tbody>\n",
        "    <tr>\n",
        "      <th>2020-08-30</th>\n",
        "      <td>0.000076</td>\n",
        "      <td>0.000036</td>\n",
        "      <td>0.000098</td>\n",
        "      <td>0.000076</td>\n",
        "      <td>0.000024</td>\n",
        "      <td>0.000193</td>\n",
        "      <td>0.000117</td>\n",
        "      <td>0.000104</td>\n",
        "      <td>0.0004</td>\n",
        "      <td>0.000269</td>\n",
        "      <td>...</td>\n",
        "      <td>0.000168</td>\n",
        "      <td>0.00006</td>\n",
        "      <td>0.000049</td>\n",
        "      <td>0.000002</td>\n",
        "      <td>0.000135</td>\n",
        "      <td>0.000238</td>\n",
        "      <td>0.00007</td>\n",
        "      <td>0.000071</td>\n",
        "      <td>0.000036</td>\n",
        "      <td>0.00006</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>2020-08-31</th>\n",
        "      <td>0.000076</td>\n",
        "      <td>0.000036</td>\n",
        "      <td>0.000098</td>\n",
        "      <td>0.000076</td>\n",
        "      <td>0.000024</td>\n",
        "      <td>0.000193</td>\n",
        "      <td>0.000117</td>\n",
        "      <td>0.000104</td>\n",
        "      <td>0.0004</td>\n",
        "      <td>0.000269</td>\n",
        "      <td>...</td>\n",
        "      <td>0.000168</td>\n",
        "      <td>0.00006</td>\n",
        "      <td>0.000049</td>\n",
        "      <td>0.000002</td>\n",
        "      <td>0.000135</td>\n",
        "      <td>0.000238</td>\n",
        "      <td>0.00007</td>\n",
        "      <td>0.000071</td>\n",
        "      <td>0.000036</td>\n",
        "      <td>0.00006</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>2020-09-01</th>\n",
        "      <td>0.000076</td>\n",
        "      <td>0.000036</td>\n",
        "      <td>0.000098</td>\n",
        "      <td>0.000076</td>\n",
        "      <td>0.000024</td>\n",
        "      <td>0.000193</td>\n",
        "      <td>0.000117</td>\n",
        "      <td>0.000104</td>\n",
        "      <td>0.0004</td>\n",
        "      <td>0.000269</td>\n",
        "      <td>...</td>\n",
        "      <td>0.000168</td>\n",
        "      <td>0.00006</td>\n",
        "      <td>0.000049</td>\n",
        "      <td>0.000002</td>\n",
        "      <td>0.000135</td>\n",
        "      <td>0.000238</td>\n",
        "      <td>0.00007</td>\n",
        "      <td>0.000071</td>\n",
        "      <td>0.000036</td>\n",
        "      <td>0.00006</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>2020-09-02</th>\n",
        "      <td>0.000076</td>\n",
        "      <td>0.000036</td>\n",
        "      <td>0.000098</td>\n",
        "      <td>0.000076</td>\n",
        "      <td>0.000024</td>\n",
        "      <td>0.000193</td>\n",
        "      <td>0.000117</td>\n",
        "      <td>0.000104</td>\n",
        "      <td>0.0004</td>\n",
        "      <td>0.000269</td>\n",
        "      <td>...</td>\n",
        "      <td>0.000168</td>\n",
        "      <td>0.00006</td>\n",
        "      <td>0.000049</td>\n",
        "      <td>0.000002</td>\n",
        "      <td>0.000135</td>\n",
        "      <td>0.000238</td>\n",
        "      <td>0.00007</td>\n",
        "      <td>0.000071</td>\n",
        "      <td>0.000036</td>\n",
        "      <td>0.00006</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>2020-09-03</th>\n",
        "      <td>0.000076</td>\n",
        "      <td>0.000036</td>\n",
        "      <td>0.000098</td>\n",
        "      <td>0.000076</td>\n",
        "      <td>0.000024</td>\n",
        "      <td>0.000193</td>\n",
        "      <td>0.000117</td>\n",
        "      <td>0.000104</td>\n",
        "      <td>0.0004</td>\n",
        "      <td>0.000269</td>\n",
        "      <td>...</td>\n",
        "      <td>0.000168</td>\n",
        "      <td>0.00006</td>\n",
        "      <td>0.000049</td>\n",
        "      <td>0.000002</td>\n",
        "      <td>0.000135</td>\n",
        "      <td>0.000238</td>\n",
        "      <td>0.00007</td>\n",
        "      <td>0.000071</td>\n",
        "      <td>0.000036</td>\n",
        "      <td>0.00006</td>\n",
        "    </tr>\n",
        "  </tbody>\n",
        "</table>\n",
        "<p>5 rows \u00d7 28 columns</p>\n",
        "</div>"
       ],
       "output_type": "pyout",
       "prompt_number": 17,
       "text": [
        "Country      Austria   Bahrain  Bangladesh  Burkina Faso    France   Georgia  \\\n",
        "Date                                                                           \n",
        "2020-08-30  0.000076  0.000036    0.000098      0.000076  0.000024  0.000193   \n",
        "2020-08-31  0.000076  0.000036    0.000098      0.000076  0.000024  0.000193   \n",
        "2020-09-01  0.000076  0.000036    0.000098      0.000076  0.000024  0.000193   \n",
        "2020-09-02  0.000076  0.000036    0.000098      0.000076  0.000024  0.000193   \n",
        "2020-09-03  0.000076  0.000036    0.000098      0.000076  0.000024  0.000193   \n",
        "\n",
        "Country       Guinea  Honduras  Hungary      Iran  ...    Poland  Portugal  \\\n",
        "Date                                               ...                       \n",
        "2020-08-30  0.000117  0.000104   0.0004  0.000269  ...  0.000168   0.00006   \n",
        "2020-08-31  0.000117  0.000104   0.0004  0.000269  ...  0.000168   0.00006   \n",
        "2020-09-01  0.000117  0.000104   0.0004  0.000269  ...  0.000168   0.00006   \n",
        "2020-09-02  0.000117  0.000104   0.0004  0.000269  ...  0.000168   0.00006   \n",
        "2020-09-03  0.000117  0.000104   0.0004  0.000269  ...  0.000168   0.00006   \n",
        "\n",
        "Country      Romania    Russia   Senegal    Serbia   Turkey   Ukraine  \\\n",
        "Date                                                                    \n",
        "2020-08-30  0.000049  0.000002  0.000135  0.000238  0.00007  0.000071   \n",
        "2020-08-31  0.000049  0.000002  0.000135  0.000238  0.00007  0.000071   \n",
        "2020-09-01  0.000049  0.000002  0.000135  0.000238  0.00007  0.000071   \n",
        "2020-09-02  0.000049  0.000002  0.000135  0.000238  0.00007  0.000071   \n",
        "2020-09-03  0.000049  0.000002  0.000135  0.000238  0.00007  0.000071   \n",
        "\n",
        "Country     United Arab Emirates  United States  \n",
        "Date                                             \n",
        "2020-08-30              0.000036        0.00006  \n",
        "2020-08-31              0.000036        0.00006  \n",
        "2020-09-01              0.000036        0.00006  \n",
        "2020-09-02              0.000036        0.00006  \n",
        "2020-09-03              0.000036        0.00006  \n",
        "\n",
        "[5 rows x 28 columns]"
       ]
      }
     ],
     "prompt_number": 17
    },
    {
     "cell_type": "heading",
     "level": 3,
     "metadata": {},
     "source": [
      "$\\theta$: Mortality rate of S$^\\ast$ cases $\\mathrm{[-]}$"
     ]
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "analyser.param_history(\"theta\", roll_window=None).tail()"
     ],
     "language": "python",
     "metadata": {},
     "outputs": [
      {
       "output_type": "display_data",
       "png": "\n",
       "text": [
        "<Figure size 648x432 with 1 Axes>"
       ]
      },
      {
       "html": [
        "<div>\n",
        "<style scoped>\n",
        "    .dataframe tbody tr th:only-of-type {\n",
        "        vertical-align: middle;\n",
        "    }\n",
        "\n",
        "    .dataframe tbody tr th {\n",
        "        vertical-align: top;\n",
        "    }\n",
        "\n",
        "    .dataframe thead th {\n",
        "        text-align: right;\n",
        "    }\n",
        "</style>\n",
        "<table border=\"1\" class=\"dataframe\">\n",
        "  <thead>\n",
        "    <tr style=\"text-align: right;\">\n",
        "      <th>Country</th>\n",
        "      <th>Austria</th>\n",
        "      <th>Bahrain</th>\n",
        "      <th>Bangladesh</th>\n",
        "      <th>Burkina Faso</th>\n",
        "      <th>France</th>\n",
        "      <th>Georgia</th>\n",
        "      <th>Guinea</th>\n",
        "      <th>Honduras</th>\n",
        "      <th>Hungary</th>\n",
        "      <th>Iran</th>\n",
        "      <th>...</th>\n",
        "      <th>Poland</th>\n",
        "      <th>Portugal</th>\n",
        "      <th>Romania</th>\n",
        "      <th>Russia</th>\n",
        "      <th>Senegal</th>\n",
        "      <th>Serbia</th>\n",
        "      <th>Turkey</th>\n",
        "      <th>Ukraine</th>\n",
        "      <th>United Arab Emirates</th>\n",
        "      <th>United States</th>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>Date</th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "    </tr>\n",
        "  </thead>\n",
        "  <tbody>\n",
        "    <tr>\n",
        "      <th>2020-08-30</th>\n",
        "      <td>0.000253</td>\n",
        "      <td>0.000952</td>\n",
        "      <td>0.000434</td>\n",
        "      <td>0.000366</td>\n",
        "      <td>0.001573</td>\n",
        "      <td>0.002222</td>\n",
        "      <td>0.000966</td>\n",
        "      <td>0.000125</td>\n",
        "      <td>0.004776</td>\n",
        "      <td>0.045613</td>\n",
        "      <td>...</td>\n",
        "      <td>0.000131</td>\n",
        "      <td>0.000368</td>\n",
        "      <td>0.024648</td>\n",
        "      <td>0.213558</td>\n",
        "      <td>0.001301</td>\n",
        "      <td>0.001358</td>\n",
        "      <td>0.015449</td>\n",
        "      <td>0.010628</td>\n",
        "      <td>0.000954</td>\n",
        "      <td>0.000615</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>2020-08-31</th>\n",
        "      <td>0.000253</td>\n",
        "      <td>0.000952</td>\n",
        "      <td>0.000434</td>\n",
        "      <td>0.000366</td>\n",
        "      <td>0.001573</td>\n",
        "      <td>0.002222</td>\n",
        "      <td>0.000966</td>\n",
        "      <td>0.000125</td>\n",
        "      <td>0.004776</td>\n",
        "      <td>0.045613</td>\n",
        "      <td>...</td>\n",
        "      <td>0.000131</td>\n",
        "      <td>0.000368</td>\n",
        "      <td>0.024648</td>\n",
        "      <td>0.213558</td>\n",
        "      <td>0.001301</td>\n",
        "      <td>0.001358</td>\n",
        "      <td>0.015449</td>\n",
        "      <td>0.010628</td>\n",
        "      <td>0.000954</td>\n",
        "      <td>0.000615</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>2020-09-01</th>\n",
        "      <td>0.000253</td>\n",
        "      <td>0.000952</td>\n",
        "      <td>0.000434</td>\n",
        "      <td>0.000366</td>\n",
        "      <td>0.001573</td>\n",
        "      <td>0.002222</td>\n",
        "      <td>0.000966</td>\n",
        "      <td>0.000125</td>\n",
        "      <td>0.004776</td>\n",
        "      <td>0.045613</td>\n",
        "      <td>...</td>\n",
        "      <td>0.000131</td>\n",
        "      <td>0.000368</td>\n",
        "      <td>0.024648</td>\n",
        "      <td>0.213558</td>\n",
        "      <td>0.001301</td>\n",
        "      <td>0.001358</td>\n",
        "      <td>0.015449</td>\n",
        "      <td>0.010628</td>\n",
        "      <td>0.000954</td>\n",
        "      <td>0.000615</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>2020-09-02</th>\n",
        "      <td>0.000253</td>\n",
        "      <td>0.000952</td>\n",
        "      <td>0.000434</td>\n",
        "      <td>0.000366</td>\n",
        "      <td>0.001573</td>\n",
        "      <td>0.002222</td>\n",
        "      <td>0.000966</td>\n",
        "      <td>0.000125</td>\n",
        "      <td>0.004776</td>\n",
        "      <td>0.045613</td>\n",
        "      <td>...</td>\n",
        "      <td>0.000131</td>\n",
        "      <td>0.000368</td>\n",
        "      <td>0.024648</td>\n",
        "      <td>0.213558</td>\n",
        "      <td>0.001301</td>\n",
        "      <td>0.001358</td>\n",
        "      <td>0.015449</td>\n",
        "      <td>0.010628</td>\n",
        "      <td>0.000954</td>\n",
        "      <td>0.000615</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>2020-09-03</th>\n",
        "      <td>0.000253</td>\n",
        "      <td>0.000952</td>\n",
        "      <td>0.000434</td>\n",
        "      <td>0.000366</td>\n",
        "      <td>0.001573</td>\n",
        "      <td>0.002222</td>\n",
        "      <td>0.000966</td>\n",
        "      <td>0.000125</td>\n",
        "      <td>0.004776</td>\n",
        "      <td>0.045613</td>\n",
        "      <td>...</td>\n",
        "      <td>0.000131</td>\n",
        "      <td>0.000368</td>\n",
        "      <td>0.024648</td>\n",
        "      <td>0.213558</td>\n",
        "      <td>0.001301</td>\n",
        "      <td>0.001358</td>\n",
        "      <td>0.015449</td>\n",
        "      <td>0.010628</td>\n",
        "      <td>0.000954</td>\n",
        "      <td>0.000615</td>\n",
        "    </tr>\n",
        "  </tbody>\n",
        "</table>\n",
        "<p>5 rows \u00d7 28 columns</p>\n",
        "</div>"
       ],
       "output_type": "pyout",
       "prompt_number": 18,
       "text": [
        "Country      Austria   Bahrain  Bangladesh  Burkina Faso    France   Georgia  \\\n",
        "Date                                                                           \n",
        "2020-08-30  0.000253  0.000952    0.000434      0.000366  0.001573  0.002222   \n",
        "2020-08-31  0.000253  0.000952    0.000434      0.000366  0.001573  0.002222   \n",
        "2020-09-01  0.000253  0.000952    0.000434      0.000366  0.001573  0.002222   \n",
        "2020-09-02  0.000253  0.000952    0.000434      0.000366  0.001573  0.002222   \n",
        "2020-09-03  0.000253  0.000952    0.000434      0.000366  0.001573  0.002222   \n",
        "\n",
        "Country       Guinea  Honduras   Hungary      Iran  ...    Poland  Portugal  \\\n",
        "Date                                                ...                       \n",
        "2020-08-30  0.000966  0.000125  0.004776  0.045613  ...  0.000131  0.000368   \n",
        "2020-08-31  0.000966  0.000125  0.004776  0.045613  ...  0.000131  0.000368   \n",
        "2020-09-01  0.000966  0.000125  0.004776  0.045613  ...  0.000131  0.000368   \n",
        "2020-09-02  0.000966  0.000125  0.004776  0.045613  ...  0.000131  0.000368   \n",
        "2020-09-03  0.000966  0.000125  0.004776  0.045613  ...  0.000131  0.000368   \n",
        "\n",
        "Country      Romania    Russia   Senegal    Serbia    Turkey   Ukraine  \\\n",
        "Date                                                                     \n",
        "2020-08-30  0.024648  0.213558  0.001301  0.001358  0.015449  0.010628   \n",
        "2020-08-31  0.024648  0.213558  0.001301  0.001358  0.015449  0.010628   \n",
        "2020-09-01  0.024648  0.213558  0.001301  0.001358  0.015449  0.010628   \n",
        "2020-09-02  0.024648  0.213558  0.001301  0.001358  0.015449  0.010628   \n",
        "2020-09-03  0.024648  0.213558  0.001301  0.001358  0.015449  0.010628   \n",
        "\n",
        "Country     United Arab Emirates  United States  \n",
        "Date                                             \n",
        "2020-08-30              0.000954       0.000615  \n",
        "2020-08-31              0.000954       0.000615  \n",
        "2020-09-01              0.000954       0.000615  \n",
        "2020-09-02              0.000954       0.000615  \n",
        "2020-09-03              0.000954       0.000615  \n",
        "\n",
        "[5 rows x 28 columns]"
       ]
      }
     ],
     "prompt_number": 18
    },
    {
     "cell_type": "markdown",
     "metadata": {},
     "source": [
      "## (Experimental): Relationship of OxCGRT index and parameter values\n",
      "Government responses will impact on parameter values of ODE models about 14 days later. Here, we will investigate on the relationship of [stringency index (from OxCGRT)](https://github.com/OxCGRT/covid-policy-tracker/blob/master/documentation/index_methodology.md) and reproduction number/model parameters.\n"
     ]
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "%matplotlib inline\n",
      "from matplotlib import pyplot as plt\n",
      "import seaborn as sns\n",
      "import pandas as pd"
     ],
     "language": "python",
     "metadata": {},
     "outputs": [],
     "prompt_number": 19
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "df = analyser.track()\n",
      "param_cols = [\"Rt\", *cs.SIRF.PARAMETERS]\n",
      "oxcgrt_cols = oxcgrt_data.OXCGRT_VARS[:]\n",
      "cols = param_cols + oxcgrt_cols\n",
      "delay = 14\n",
      "\n",
      "for col in param_cols:\n",
      "    df[col] = pd.to_numeric(df[col], errors=\"coerce\")\n",
      "    df[col] = df.groupby(\"Country\")[col].shift(0 - delay)\n",
      "\n",
      "df = df.dropna(how=\"any\")\n",
      "df = df.loc[:, [\"Date\", \"Country\", *cols]]\n",
      "track_df = df.copy()\n",
      "track_df.info()"
     ],
     "language": "python",
     "metadata": {},
     "outputs": [
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "<class 'pandas.core.frame.DataFrame'>\n",
        "Int64Index: 28437 entries, 0 to 28814\n",
        "Data columns (total 19 columns):\n",
        " #   Column                               Non-Null Count  Dtype         \n",
        "---  ------                               --------------  -----         \n",
        " 0   Date                                 28437 non-null  datetime64[ns]\n",
        " 1   Country                              28437 non-null  object        \n",
        " 2   Rt                                   28437 non-null  float64       \n",
        " 3   theta                                28437 non-null  float64       \n",
        " 4   kappa                                28437 non-null  float64       \n",
        " 5   rho                                  28437 non-null  float64       \n",
        " 6   sigma                                28437 non-null  float64       \n",
        " 7   School_closing                       28437 non-null  int64         \n",
        " 8   Workplace_closing                    28437 non-null  int64         \n",
        " 9   Cancel_events                        28437 non-null  int64         \n",
        " 10  Gatherings_restrictions              28437 non-null  int64         \n",
        " 11  Transport_closing                    28437 non-null  int64         \n",
        " 12  Stay_home_restrictions               28437 non-null  int64         \n",
        " 13  Internal_movement_restrictions       28437 non-null  int64         \n",
        " 14  International_movement_restrictions  28437 non-null  int64         \n",
        " 15  Information_campaigns                28437 non-null  int64         \n",
        " 16  Testing_policy                       28437 non-null  int64         \n",
        " 17  Contact_tracing                      28437 non-null  int64         \n",
        " 18  Stringency_index                     28437 non-null  float64       \n",
        "dtypes: datetime64[ns](1), float64(6), int64(11), object(1)\n",
        "memory usage: 4.3+ MB\n"
       ]
      }
     ],
     "prompt_number": 20
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "# Correlation\n",
      "df = track_df.copy()\n",
      "df.corr().style.background_gradient(axis=None)"
     ],
     "language": "python",
     "metadata": {},
     "outputs": [
      {
       "html": [
        "<style  type=\"text/css\" >\n",
        "#T_42a80034_edf2_11ea_8838_5254002c00d9row0_col0,#T_42a80034_edf2_11ea_8838_5254002c00d9row1_col1,#T_42a80034_edf2_11ea_8838_5254002c00d9row2_col2,#T_42a80034_edf2_11ea_8838_5254002c00d9row3_col3,#T_42a80034_edf2_11ea_8838_5254002c00d9row4_col4,#T_42a80034_edf2_11ea_8838_5254002c00d9row5_col5,#T_42a80034_edf2_11ea_8838_5254002c00d9row6_col6,#T_42a80034_edf2_11ea_8838_5254002c00d9row7_col7,#T_42a80034_edf2_11ea_8838_5254002c00d9row8_col8,#T_42a80034_edf2_11ea_8838_5254002c00d9row9_col9,#T_42a80034_edf2_11ea_8838_5254002c00d9row10_col10,#T_42a80034_edf2_11ea_8838_5254002c00d9row11_col11,#T_42a80034_edf2_11ea_8838_5254002c00d9row12_col12,#T_42a80034_edf2_11ea_8838_5254002c00d9row13_col13,#T_42a80034_edf2_11ea_8838_5254002c00d9row14_col14,#T_42a80034_edf2_11ea_8838_5254002c00d9row15_col15,#T_42a80034_edf2_11ea_8838_5254002c00d9row16_col16{\n",
        "            background-color:  #023858;\n",
        "            color:  #f1f1f1;\n",
        "        }#T_42a80034_edf2_11ea_8838_5254002c00d9row0_col1,#T_42a80034_edf2_11ea_8838_5254002c00d9row1_col0{\n",
        "            background-color:  #dbdaeb;\n",
        "            color:  #000000;\n",
        "        }#T_42a80034_edf2_11ea_8838_5254002c00d9row0_col2,#T_42a80034_edf2_11ea_8838_5254002c00d9row2_col0{\n",
        "            background-color:  #afc1dd;\n",
        "            color:  #000000;\n",
        "        }#T_42a80034_edf2_11ea_8838_5254002c00d9row0_col3,#T_42a80034_edf2_11ea_8838_5254002c00d9row3_col0{\n",
        "            background-color:  #7dacd1;\n",
        "            color:  #000000;\n",
        "        }#T_42a80034_edf2_11ea_8838_5254002c00d9row0_col4,#T_42a80034_edf2_11ea_8838_5254002c00d9row4_col0{\n",
        "            background-color:  #dddbec;\n",
        "            color:  #000000;\n",
        "        }#T_42a80034_edf2_11ea_8838_5254002c00d9row0_col5,#T_42a80034_edf2_11ea_8838_5254002c00d9row5_col0{\n",
        "            background-color:  #d3d4e7;\n",
        "            color:  #000000;\n",
        "        }#T_42a80034_edf2_11ea_8838_5254002c00d9row0_col6,#T_42a80034_edf2_11ea_8838_5254002c00d9row3_col13,#T_42a80034_edf2_11ea_8838_5254002c00d9row6_col0,#T_42a80034_edf2_11ea_8838_5254002c00d9row13_col3{\n",
        "            background-color:  #c0c9e2;\n",
        "            color:  #000000;\n",
        "        }#T_42a80034_edf2_11ea_8838_5254002c00d9row0_col7,#T_42a80034_edf2_11ea_8838_5254002c00d9row1_col8,#T_42a80034_edf2_11ea_8838_5254002c00d9row2_col15,#T_42a80034_edf2_11ea_8838_5254002c00d9row7_col0,#T_42a80034_edf2_11ea_8838_5254002c00d9row8_col1,#T_42a80034_edf2_11ea_8838_5254002c00d9row15_col2{\n",
        "            background-color:  #c2cbe2;\n",
        "            color:  #000000;\n",
        "        }#T_42a80034_edf2_11ea_8838_5254002c00d9row0_col8,#T_42a80034_edf2_11ea_8838_5254002c00d9row8_col0{\n",
        "            background-color:  #88b1d4;\n",
        "            color:  #000000;\n",
        "        }#T_42a80034_edf2_11ea_8838_5254002c00d9row0_col9,#T_42a80034_edf2_11ea_8838_5254002c00d9row3_col8,#T_42a80034_edf2_11ea_8838_5254002c00d9row8_col3,#T_42a80034_edf2_11ea_8838_5254002c00d9row8_col15,#T_42a80034_edf2_11ea_8838_5254002c00d9row9_col0,#T_42a80034_edf2_11ea_8838_5254002c00d9row15_col8{\n",
        "            background-color:  #cccfe5;\n",
        "            color:  #000000;\n",
        "        }#T_42a80034_edf2_11ea_8838_5254002c00d9row0_col10,#T_42a80034_edf2_11ea_8838_5254002c00d9row2_col12,#T_42a80034_edf2_11ea_8838_5254002c00d9row10_col0,#T_42a80034_edf2_11ea_8838_5254002c00d9row12_col2{\n",
        "            background-color:  #b7c5df;\n",
        "            color:  #000000;\n",
        "        }#T_42a80034_edf2_11ea_8838_5254002c00d9row0_col11,#T_42a80034_edf2_11ea_8838_5254002c00d9row11_col0{\n",
        "            background-color:  #b5c4df;\n",
        "            color:  #000000;\n",
        "        }#T_42a80034_edf2_11ea_8838_5254002c00d9row0_col12,#T_42a80034_edf2_11ea_8838_5254002c00d9row12_col0{\n",
        "            background-color:  #efe9f3;\n",
        "            color:  #000000;\n",
        "        }#T_42a80034_edf2_11ea_8838_5254002c00d9row0_col13,#T_42a80034_edf2_11ea_8838_5254002c00d9row1_col5,#T_42a80034_edf2_11ea_8838_5254002c00d9row5_col1,#T_42a80034_edf2_11ea_8838_5254002c00d9row13_col0{\n",
        "            background-color:  #a5bddb;\n",
        "            color:  #000000;\n",
        "        }#T_42a80034_edf2_11ea_8838_5254002c00d9row0_col14,#T_42a80034_edf2_11ea_8838_5254002c00d9row4_col9,#T_42a80034_edf2_11ea_8838_5254002c00d9row9_col4,#T_42a80034_edf2_11ea_8838_5254002c00d9row14_col0{\n",
        "            background-color:  #cacee5;\n",
        "            color:  #000000;\n",
        "        }#T_42a80034_edf2_11ea_8838_5254002c00d9row0_col15,#T_42a80034_edf2_11ea_8838_5254002c00d9row15_col0{\n",
        "            background-color:  #d9d8ea;\n",
        "            color:  #000000;\n",
        "        }#T_42a80034_edf2_11ea_8838_5254002c00d9row0_col16,#T_42a80034_edf2_11ea_8838_5254002c00d9row16_col0{\n",
        "            background-color:  #d1d2e6;\n",
        "            color:  #000000;\n",
        "        }#T_42a80034_edf2_11ea_8838_5254002c00d9row1_col2,#T_42a80034_edf2_11ea_8838_5254002c00d9row2_col1{\n",
        "            background-color:  #549cc7;\n",
        "            color:  #000000;\n",
        "        }#T_42a80034_edf2_11ea_8838_5254002c00d9row1_col3,#T_42a80034_edf2_11ea_8838_5254002c00d9row3_col1{\n",
        "            background-color:  #b8c6e0;\n",
        "            color:  #000000;\n",
        "        }#T_42a80034_edf2_11ea_8838_5254002c00d9row1_col4,#T_42a80034_edf2_11ea_8838_5254002c00d9row4_col1{\n",
        "            background-color:  #9ab8d8;\n",
        "            color:  #000000;\n",
        "        }#T_42a80034_edf2_11ea_8838_5254002c00d9row1_col6,#T_42a80034_edf2_11ea_8838_5254002c00d9row6_col1{\n",
        "            background-color:  #67a4cc;\n",
        "            color:  #000000;\n",
        "        }#T_42a80034_edf2_11ea_8838_5254002c00d9row1_col7,#T_42a80034_edf2_11ea_8838_5254002c00d9row7_col1{\n",
        "            background-color:  #96b6d7;\n",
        "            color:  #000000;\n",
        "        }#T_42a80034_edf2_11ea_8838_5254002c00d9row1_col9,#T_42a80034_edf2_11ea_8838_5254002c00d9row2_col9,#T_42a80034_edf2_11ea_8838_5254002c00d9row9_col1,#T_42a80034_edf2_11ea_8838_5254002c00d9row9_col2{\n",
        "            background-color:  #abbfdc;\n",
        "            color:  #000000;\n",
        "        }#T_42a80034_edf2_11ea_8838_5254002c00d9row1_col10,#T_42a80034_edf2_11ea_8838_5254002c00d9row10_col1{\n",
        "            background-color:  #a8bedc;\n",
        "            color:  #000000;\n",
        "        }#T_42a80034_edf2_11ea_8838_5254002c00d9row1_col11,#T_42a80034_edf2_11ea_8838_5254002c00d9row11_col1{\n",
        "            background-color:  #a7bddb;\n",
        "            color:  #000000;\n",
        "        }#T_42a80034_edf2_11ea_8838_5254002c00d9row1_col12,#T_42a80034_edf2_11ea_8838_5254002c00d9row4_col10,#T_42a80034_edf2_11ea_8838_5254002c00d9row10_col4,#T_42a80034_edf2_11ea_8838_5254002c00d9row12_col1{\n",
        "            background-color:  #c5cce3;\n",
        "            color:  #000000;\n",
        "        }#T_42a80034_edf2_11ea_8838_5254002c00d9row1_col13,#T_42a80034_edf2_11ea_8838_5254002c00d9row10_col15,#T_42a80034_edf2_11ea_8838_5254002c00d9row13_col1,#T_42a80034_edf2_11ea_8838_5254002c00d9row15_col10{\n",
        "            background-color:  #a2bcda;\n",
        "            color:  #000000;\n",
        "        }#T_42a80034_edf2_11ea_8838_5254002c00d9row1_col14,#T_42a80034_edf2_11ea_8838_5254002c00d9row14_col1{\n",
        "            background-color:  #e6e2ef;\n",
        "            color:  #000000;\n",
        "        }#T_42a80034_edf2_11ea_8838_5254002c00d9row1_col15,#T_42a80034_edf2_11ea_8838_5254002c00d9row9_col13,#T_42a80034_edf2_11ea_8838_5254002c00d9row13_col9,#T_42a80034_edf2_11ea_8838_5254002c00d9row15_col1{\n",
        "            background-color:  #9cb9d9;\n",
        "            color:  #000000;\n",
        "        }#T_42a80034_edf2_11ea_8838_5254002c00d9row1_col16,#T_42a80034_edf2_11ea_8838_5254002c00d9row16_col1{\n",
        "            background-color:  #7eadd1;\n",
        "            color:  #000000;\n",
        "        }#T_42a80034_edf2_11ea_8838_5254002c00d9row2_col3,#T_42a80034_edf2_11ea_8838_5254002c00d9row3_col2{\n",
        "            background-color:  #197db7;\n",
        "            color:  #000000;\n",
        "        }#T_42a80034_edf2_11ea_8838_5254002c00d9row2_col4,#T_42a80034_edf2_11ea_8838_5254002c00d9row4_col2,#T_42a80034_edf2_11ea_8838_5254002c00d9row6_col12,#T_42a80034_edf2_11ea_8838_5254002c00d9row12_col6{\n",
        "            background-color:  #4e9ac6;\n",
        "            color:  #000000;\n",
        "        }#T_42a80034_edf2_11ea_8838_5254002c00d9row2_col5,#T_42a80034_edf2_11ea_8838_5254002c00d9row5_col2,#T_42a80034_edf2_11ea_8838_5254002c00d9row6_col13,#T_42a80034_edf2_11ea_8838_5254002c00d9row13_col6{\n",
        "            background-color:  #7bacd1;\n",
        "            color:  #000000;\n",
        "        }#T_42a80034_edf2_11ea_8838_5254002c00d9row2_col6,#T_42a80034_edf2_11ea_8838_5254002c00d9row5_col11,#T_42a80034_edf2_11ea_8838_5254002c00d9row6_col2,#T_42a80034_edf2_11ea_8838_5254002c00d9row11_col5{\n",
        "            background-color:  #73a9cf;\n",
        "            color:  #000000;\n",
        "        }#T_42a80034_edf2_11ea_8838_5254002c00d9row2_col7,#T_42a80034_edf2_11ea_8838_5254002c00d9row7_col2{\n",
        "            background-color:  #b9c6e0;\n",
        "            color:  #000000;\n",
        "        }#T_42a80034_edf2_11ea_8838_5254002c00d9row2_col8,#T_42a80034_edf2_11ea_8838_5254002c00d9row8_col2{\n",
        "            background-color:  #c8cde4;\n",
        "            color:  #000000;\n",
        "        }#T_42a80034_edf2_11ea_8838_5254002c00d9row2_col10,#T_42a80034_edf2_11ea_8838_5254002c00d9row10_col2{\n",
        "            background-color:  #a4bcda;\n",
        "            color:  #000000;\n",
        "        }#T_42a80034_edf2_11ea_8838_5254002c00d9row2_col11,#T_42a80034_edf2_11ea_8838_5254002c00d9row11_col2{\n",
        "            background-color:  #b0c2de;\n",
        "            color:  #000000;\n",
        "        }#T_42a80034_edf2_11ea_8838_5254002c00d9row2_col13,#T_42a80034_edf2_11ea_8838_5254002c00d9row3_col11,#T_42a80034_edf2_11ea_8838_5254002c00d9row11_col3,#T_42a80034_edf2_11ea_8838_5254002c00d9row13_col2{\n",
        "            background-color:  #bfc9e1;\n",
        "            color:  #000000;\n",
        "        }#T_42a80034_edf2_11ea_8838_5254002c00d9row2_col14,#T_42a80034_edf2_11ea_8838_5254002c00d9row14_col2{\n",
        "            background-color:  #fff7fb;\n",
        "            color:  #000000;\n",
        "        }#T_42a80034_edf2_11ea_8838_5254002c00d9row2_col16,#T_42a80034_edf2_11ea_8838_5254002c00d9row16_col2{\n",
        "            background-color:  #65a3cb;\n",
        "            color:  #000000;\n",
        "        }#T_42a80034_edf2_11ea_8838_5254002c00d9row3_col4,#T_42a80034_edf2_11ea_8838_5254002c00d9row4_col3{\n",
        "            background-color:  #056fae;\n",
        "            color:  #f1f1f1;\n",
        "        }#T_42a80034_edf2_11ea_8838_5254002c00d9row3_col5,#T_42a80034_edf2_11ea_8838_5254002c00d9row5_col3{\n",
        "            background-color:  #75a9cf;\n",
        "            color:  #000000;\n",
        "        }#T_42a80034_edf2_11ea_8838_5254002c00d9row3_col6,#T_42a80034_edf2_11ea_8838_5254002c00d9row5_col14,#T_42a80034_edf2_11ea_8838_5254002c00d9row6_col3,#T_42a80034_edf2_11ea_8838_5254002c00d9row14_col5{\n",
        "            background-color:  #8eb3d5;\n",
        "            color:  #000000;\n",
        "        }#T_42a80034_edf2_11ea_8838_5254002c00d9row3_col7,#T_42a80034_edf2_11ea_8838_5254002c00d9row7_col3{\n",
        "            background-color:  #d0d1e6;\n",
        "            color:  #000000;\n",
        "        }#T_42a80034_edf2_11ea_8838_5254002c00d9row3_col9,#T_42a80034_edf2_11ea_8838_5254002c00d9row9_col3{\n",
        "            background-color:  #acc0dd;\n",
        "            color:  #000000;\n",
        "        }#T_42a80034_edf2_11ea_8838_5254002c00d9row3_col10,#T_42a80034_edf2_11ea_8838_5254002c00d9row10_col3,#T_42a80034_edf2_11ea_8838_5254002c00d9row14_col16,#T_42a80034_edf2_11ea_8838_5254002c00d9row16_col14{\n",
        "            background-color:  #a1bbda;\n",
        "            color:  #000000;\n",
        "        }#T_42a80034_edf2_11ea_8838_5254002c00d9row3_col12,#T_42a80034_edf2_11ea_8838_5254002c00d9row4_col12,#T_42a80034_edf2_11ea_8838_5254002c00d9row12_col3,#T_42a80034_edf2_11ea_8838_5254002c00d9row12_col4{\n",
        "            background-color:  #adc1dd;\n",
        "            color:  #000000;\n",
        "        }#T_42a80034_edf2_11ea_8838_5254002c00d9row3_col14,#T_42a80034_edf2_11ea_8838_5254002c00d9row14_col3{\n",
        "            background-color:  #e2dfee;\n",
        "            color:  #000000;\n",
        "        }#T_42a80034_edf2_11ea_8838_5254002c00d9row3_col15,#T_42a80034_edf2_11ea_8838_5254002c00d9row15_col3{\n",
        "            background-color:  #ced0e6;\n",
        "            color:  #000000;\n",
        "        }#T_42a80034_edf2_11ea_8838_5254002c00d9row3_col16,#T_42a80034_edf2_11ea_8838_5254002c00d9row16_col3{\n",
        "            background-color:  #91b5d6;\n",
        "            color:  #000000;\n",
        "        }#T_42a80034_edf2_11ea_8838_5254002c00d9row4_col5,#T_42a80034_edf2_11ea_8838_5254002c00d9row5_col4,#T_42a80034_edf2_11ea_8838_5254002c00d9row5_col7,#T_42a80034_edf2_11ea_8838_5254002c00d9row7_col5,#T_42a80034_edf2_11ea_8838_5254002c00d9row7_col14,#T_42a80034_edf2_11ea_8838_5254002c00d9row14_col7{\n",
        "            background-color:  #78abd0;\n",
        "            color:  #000000;\n",
        "        }#T_42a80034_edf2_11ea_8838_5254002c00d9row4_col6,#T_42a80034_edf2_11ea_8838_5254002c00d9row6_col4{\n",
        "            background-color:  #bdc8e1;\n",
        "            color:  #000000;\n",
        "        }#T_42a80034_edf2_11ea_8838_5254002c00d9row4_col7,#T_42a80034_edf2_11ea_8838_5254002c00d9row7_col4,#T_42a80034_edf2_11ea_8838_5254002c00d9row15_col16,#T_42a80034_edf2_11ea_8838_5254002c00d9row16_col15{\n",
        "            background-color:  #c9cee4;\n",
        "            color:  #000000;\n",
        "        }#T_42a80034_edf2_11ea_8838_5254002c00d9row4_col8,#T_42a80034_edf2_11ea_8838_5254002c00d9row8_col4{\n",
        "            background-color:  #f7f0f7;\n",
        "            color:  #000000;\n",
        "        }#T_42a80034_edf2_11ea_8838_5254002c00d9row4_col11,#T_42a80034_edf2_11ea_8838_5254002c00d9row11_col4{\n",
        "            background-color:  #e1dfed;\n",
        "            color:  #000000;\n",
        "        }#T_42a80034_edf2_11ea_8838_5254002c00d9row4_col13,#T_42a80034_edf2_11ea_8838_5254002c00d9row13_col4{\n",
        "            background-color:  #c6cce3;\n",
        "            color:  #000000;\n",
        "        }#T_42a80034_edf2_11ea_8838_5254002c00d9row4_col14,#T_42a80034_edf2_11ea_8838_5254002c00d9row14_col4{\n",
        "            background-color:  #e4e1ef;\n",
        "            color:  #000000;\n",
        "        }#T_42a80034_edf2_11ea_8838_5254002c00d9row4_col15,#T_42a80034_edf2_11ea_8838_5254002c00d9row15_col4{\n",
        "            background-color:  #86b0d3;\n",
        "            color:  #000000;\n",
        "        }#T_42a80034_edf2_11ea_8838_5254002c00d9row4_col16,#T_42a80034_edf2_11ea_8838_5254002c00d9row16_col4{\n",
        "            background-color:  #b4c4df;\n",
        "            color:  #000000;\n",
        "        }#T_42a80034_edf2_11ea_8838_5254002c00d9row5_col6,#T_42a80034_edf2_11ea_8838_5254002c00d9row6_col5{\n",
        "            background-color:  #1278b4;\n",
        "            color:  #f1f1f1;\n",
        "        }#T_42a80034_edf2_11ea_8838_5254002c00d9row5_col8,#T_42a80034_edf2_11ea_8838_5254002c00d9row8_col5{\n",
        "            background-color:  #b3c3de;\n",
        "            color:  #000000;\n",
        "        }#T_42a80034_edf2_11ea_8838_5254002c00d9row5_col9,#T_42a80034_edf2_11ea_8838_5254002c00d9row9_col5{\n",
        "            background-color:  #4c99c5;\n",
        "            color:  #000000;\n",
        "        }#T_42a80034_edf2_11ea_8838_5254002c00d9row5_col10,#T_42a80034_edf2_11ea_8838_5254002c00d9row8_col13,#T_42a80034_edf2_11ea_8838_5254002c00d9row10_col5,#T_42a80034_edf2_11ea_8838_5254002c00d9row13_col8{\n",
        "            background-color:  #69a5cc;\n",
        "            color:  #000000;\n",
        "        }#T_42a80034_edf2_11ea_8838_5254002c00d9row5_col12,#T_42a80034_edf2_11ea_8838_5254002c00d9row10_col12,#T_42a80034_edf2_11ea_8838_5254002c00d9row12_col5,#T_42a80034_edf2_11ea_8838_5254002c00d9row12_col10{\n",
        "            background-color:  #2182b9;\n",
        "            color:  #000000;\n",
        "        }#T_42a80034_edf2_11ea_8838_5254002c00d9row5_col13,#T_42a80034_edf2_11ea_8838_5254002c00d9row10_col13,#T_42a80034_edf2_11ea_8838_5254002c00d9row13_col5,#T_42a80034_edf2_11ea_8838_5254002c00d9row13_col10{\n",
        "            background-color:  #81aed2;\n",
        "            color:  #000000;\n",
        "        }#T_42a80034_edf2_11ea_8838_5254002c00d9row5_col15,#T_42a80034_edf2_11ea_8838_5254002c00d9row15_col5{\n",
        "            background-color:  #ebe6f2;\n",
        "            color:  #000000;\n",
        "        }#T_42a80034_edf2_11ea_8838_5254002c00d9row5_col16,#T_42a80034_edf2_11ea_8838_5254002c00d9row16_col5{\n",
        "            background-color:  #1379b5;\n",
        "            color:  #f1f1f1;\n",
        "        }#T_42a80034_edf2_11ea_8838_5254002c00d9row6_col7,#T_42a80034_edf2_11ea_8838_5254002c00d9row6_col8,#T_42a80034_edf2_11ea_8838_5254002c00d9row7_col6,#T_42a80034_edf2_11ea_8838_5254002c00d9row8_col6,#T_42a80034_edf2_11ea_8838_5254002c00d9row13_col16,#T_42a80034_edf2_11ea_8838_5254002c00d9row16_col13{\n",
        "            background-color:  #589ec8;\n",
        "            color:  #000000;\n",
        "        }#T_42a80034_edf2_11ea_8838_5254002c00d9row6_col9,#T_42a80034_edf2_11ea_8838_5254002c00d9row9_col6{\n",
        "            background-color:  #167bb6;\n",
        "            color:  #000000;\n",
        "        }#T_42a80034_edf2_11ea_8838_5254002c00d9row6_col10,#T_42a80034_edf2_11ea_8838_5254002c00d9row7_col13,#T_42a80034_edf2_11ea_8838_5254002c00d9row10_col6,#T_42a80034_edf2_11ea_8838_5254002c00d9row13_col7{\n",
        "            background-color:  #2685bb;\n",
        "            color:  #000000;\n",
        "        }#T_42a80034_edf2_11ea_8838_5254002c00d9row6_col11,#T_42a80034_edf2_11ea_8838_5254002c00d9row11_col6{\n",
        "            background-color:  #2383ba;\n",
        "            color:  #000000;\n",
        "        }#T_42a80034_edf2_11ea_8838_5254002c00d9row6_col14,#T_42a80034_edf2_11ea_8838_5254002c00d9row14_col6{\n",
        "            background-color:  #9ebad9;\n",
        "            color:  #000000;\n",
        "        }#T_42a80034_edf2_11ea_8838_5254002c00d9row6_col15,#T_42a80034_edf2_11ea_8838_5254002c00d9row15_col6{\n",
        "            background-color:  #eee9f3;\n",
        "            color:  #000000;\n",
        "        }#T_42a80034_edf2_11ea_8838_5254002c00d9row6_col16,#T_42a80034_edf2_11ea_8838_5254002c00d9row16_col6{\n",
        "            background-color:  #046198;\n",
        "            color:  #f1f1f1;\n",
        "        }#T_42a80034_edf2_11ea_8838_5254002c00d9row7_col8,#T_42a80034_edf2_11ea_8838_5254002c00d9row8_col7{\n",
        "            background-color:  #3d93c2;\n",
        "            color:  #000000;\n",
        "        }#T_42a80034_edf2_11ea_8838_5254002c00d9row7_col9,#T_42a80034_edf2_11ea_8838_5254002c00d9row9_col7{\n",
        "            background-color:  #79abd0;\n",
        "            color:  #000000;\n",
        "        }#T_42a80034_edf2_11ea_8838_5254002c00d9row7_col10,#T_42a80034_edf2_11ea_8838_5254002c00d9row7_col11,#T_42a80034_edf2_11ea_8838_5254002c00d9row10_col7,#T_42a80034_edf2_11ea_8838_5254002c00d9row11_col7{\n",
        "            background-color:  #5ea0ca;\n",
        "            color:  #000000;\n",
        "        }#T_42a80034_edf2_11ea_8838_5254002c00d9row7_col12,#T_42a80034_edf2_11ea_8838_5254002c00d9row12_col7{\n",
        "            background-color:  #71a8ce;\n",
        "            color:  #000000;\n",
        "        }#T_42a80034_edf2_11ea_8838_5254002c00d9row7_col15,#T_42a80034_edf2_11ea_8838_5254002c00d9row15_col7{\n",
        "            background-color:  #9fbad9;\n",
        "            color:  #000000;\n",
        "        }#T_42a80034_edf2_11ea_8838_5254002c00d9row7_col16,#T_42a80034_edf2_11ea_8838_5254002c00d9row16_col7{\n",
        "            background-color:  #2c89bd;\n",
        "            color:  #000000;\n",
        "        }#T_42a80034_edf2_11ea_8838_5254002c00d9row8_col9,#T_42a80034_edf2_11ea_8838_5254002c00d9row9_col8{\n",
        "            background-color:  #187cb6;\n",
        "            color:  #000000;\n",
        "        }#T_42a80034_edf2_11ea_8838_5254002c00d9row8_col10,#T_42a80034_edf2_11ea_8838_5254002c00d9row10_col8{\n",
        "            background-color:  #2484ba;\n",
        "            color:  #000000;\n",
        "        }#T_42a80034_edf2_11ea_8838_5254002c00d9row8_col11,#T_42a80034_edf2_11ea_8838_5254002c00d9row11_col8{\n",
        "            background-color:  #056dac;\n",
        "            color:  #f1f1f1;\n",
        "        }#T_42a80034_edf2_11ea_8838_5254002c00d9row8_col12,#T_42a80034_edf2_11ea_8838_5254002c00d9row12_col8{\n",
        "            background-color:  #569dc8;\n",
        "            color:  #000000;\n",
        "        }#T_42a80034_edf2_11ea_8838_5254002c00d9row8_col14,#T_42a80034_edf2_11ea_8838_5254002c00d9row11_col14,#T_42a80034_edf2_11ea_8838_5254002c00d9row14_col8,#T_42a80034_edf2_11ea_8838_5254002c00d9row14_col11{\n",
        "            background-color:  #3f93c2;\n",
        "            color:  #000000;\n",
        "        }#T_42a80034_edf2_11ea_8838_5254002c00d9row8_col16,#T_42a80034_edf2_11ea_8838_5254002c00d9row9_col12,#T_42a80034_edf2_11ea_8838_5254002c00d9row12_col9,#T_42a80034_edf2_11ea_8838_5254002c00d9row16_col8{\n",
        "            background-color:  #1b7eb7;\n",
        "            color:  #000000;\n",
        "        }#T_42a80034_edf2_11ea_8838_5254002c00d9row9_col10,#T_42a80034_edf2_11ea_8838_5254002c00d9row10_col9{\n",
        "            background-color:  #0a73b2;\n",
        "            color:  #f1f1f1;\n",
        "        }#T_42a80034_edf2_11ea_8838_5254002c00d9row9_col11,#T_42a80034_edf2_11ea_8838_5254002c00d9row11_col9{\n",
        "            background-color:  #045b8f;\n",
        "            color:  #f1f1f1;\n",
        "        }#T_42a80034_edf2_11ea_8838_5254002c00d9row9_col14,#T_42a80034_edf2_11ea_8838_5254002c00d9row14_col9{\n",
        "            background-color:  #60a1ca;\n",
        "            color:  #000000;\n",
        "        }#T_42a80034_edf2_11ea_8838_5254002c00d9row9_col15,#T_42a80034_edf2_11ea_8838_5254002c00d9row15_col9{\n",
        "            background-color:  #d7d6e9;\n",
        "            color:  #000000;\n",
        "        }#T_42a80034_edf2_11ea_8838_5254002c00d9row9_col16,#T_42a80034_edf2_11ea_8838_5254002c00d9row16_col9{\n",
        "            background-color:  #046096;\n",
        "            color:  #f1f1f1;\n",
        "        }#T_42a80034_edf2_11ea_8838_5254002c00d9row10_col11,#T_42a80034_edf2_11ea_8838_5254002c00d9row11_col10{\n",
        "            background-color:  #056aa6;\n",
        "            color:  #f1f1f1;\n",
        "        }#T_42a80034_edf2_11ea_8838_5254002c00d9row10_col14,#T_42a80034_edf2_11ea_8838_5254002c00d9row14_col10{\n",
        "            background-color:  #5a9ec9;\n",
        "            color:  #000000;\n",
        "        }#T_42a80034_edf2_11ea_8838_5254002c00d9row10_col16,#T_42a80034_edf2_11ea_8838_5254002c00d9row16_col10{\n",
        "            background-color:  #0566a0;\n",
        "            color:  #f1f1f1;\n",
        "        }#T_42a80034_edf2_11ea_8838_5254002c00d9row11_col12,#T_42a80034_edf2_11ea_8838_5254002c00d9row12_col11{\n",
        "            background-color:  #2a88bc;\n",
        "            color:  #000000;\n",
        "        }#T_42a80034_edf2_11ea_8838_5254002c00d9row11_col13,#T_42a80034_edf2_11ea_8838_5254002c00d9row13_col11{\n",
        "            background-color:  #89b1d4;\n",
        "            color:  #000000;\n",
        "        }#T_42a80034_edf2_11ea_8838_5254002c00d9row11_col15,#T_42a80034_edf2_11ea_8838_5254002c00d9row15_col11{\n",
        "            background-color:  #dad9ea;\n",
        "            color:  #000000;\n",
        "        }#T_42a80034_edf2_11ea_8838_5254002c00d9row11_col16,#T_42a80034_edf2_11ea_8838_5254002c00d9row16_col11{\n",
        "            background-color:  #0567a1;\n",
        "            color:  #f1f1f1;\n",
        "        }#T_42a80034_edf2_11ea_8838_5254002c00d9row12_col13,#T_42a80034_edf2_11ea_8838_5254002c00d9row13_col12,#T_42a80034_edf2_11ea_8838_5254002c00d9row13_col15,#T_42a80034_edf2_11ea_8838_5254002c00d9row15_col13{\n",
        "            background-color:  #76aad0;\n",
        "            color:  #000000;\n",
        "        }#T_42a80034_edf2_11ea_8838_5254002c00d9row12_col14,#T_42a80034_edf2_11ea_8838_5254002c00d9row14_col12{\n",
        "            background-color:  #4897c4;\n",
        "            color:  #000000;\n",
        "        }#T_42a80034_edf2_11ea_8838_5254002c00d9row12_col15,#T_42a80034_edf2_11ea_8838_5254002c00d9row15_col12{\n",
        "            background-color:  #99b8d8;\n",
        "            color:  #000000;\n",
        "        }#T_42a80034_edf2_11ea_8838_5254002c00d9row12_col16,#T_42a80034_edf2_11ea_8838_5254002c00d9row16_col12{\n",
        "            background-color:  #056ba7;\n",
        "            color:  #f1f1f1;\n",
        "        }#T_42a80034_edf2_11ea_8838_5254002c00d9row13_col14,#T_42a80034_edf2_11ea_8838_5254002c00d9row14_col13{\n",
        "            background-color:  #63a2cb;\n",
        "            color:  #000000;\n",
        "        }#T_42a80034_edf2_11ea_8838_5254002c00d9row14_col15,#T_42a80034_edf2_11ea_8838_5254002c00d9row15_col14{\n",
        "            background-color:  #94b6d7;\n",
        "            color:  #000000;\n",
        "        }</style><table id=\"T_42a80034_edf2_11ea_8838_5254002c00d9\" ><thead>    <tr>        <th class=\"blank level0\" ></th>        <th class=\"col_heading level0 col0\" >Rt</th>        <th class=\"col_heading level0 col1\" >theta</th>        <th class=\"col_heading level0 col2\" >kappa</th>        <th class=\"col_heading level0 col3\" >rho</th>        <th class=\"col_heading level0 col4\" >sigma</th>        <th class=\"col_heading level0 col5\" >School_closing</th>        <th class=\"col_heading level0 col6\" >Workplace_closing</th>        <th class=\"col_heading level0 col7\" >Cancel_events</th>        <th class=\"col_heading level0 col8\" >Gatherings_restrictions</th>        <th class=\"col_heading level0 col9\" >Transport_closing</th>        <th class=\"col_heading level0 col10\" >Stay_home_restrictions</th>        <th class=\"col_heading level0 col11\" >Internal_movement_restrictions</th>        <th class=\"col_heading level0 col12\" >International_movement_restrictions</th>        <th class=\"col_heading level0 col13\" >Information_campaigns</th>        <th class=\"col_heading level0 col14\" >Testing_policy</th>        <th class=\"col_heading level0 col15\" >Contact_tracing</th>        <th class=\"col_heading level0 col16\" >Stringency_index</th>    </tr></thead><tbody>\n",
        "                <tr>\n",
        "                        <th id=\"T_42a80034_edf2_11ea_8838_5254002c00d9level0_row0\" class=\"row_heading level0 row0\" >Rt</th>\n",
        "                        <td id=\"T_42a80034_edf2_11ea_8838_5254002c00d9row0_col0\" class=\"data row0 col0\" >1.000000</td>\n",
        "                        <td id=\"T_42a80034_edf2_11ea_8838_5254002c00d9row0_col1\" class=\"data row0 col1\" >-0.256975</td>\n",
        "                        <td id=\"T_42a80034_edf2_11ea_8838_5254002c00d9row0_col2\" class=\"data row0 col2\" >-0.026352</td>\n",
        "                        <td id=\"T_42a80034_edf2_11ea_8838_5254002c00d9row0_col3\" class=\"data row0 col3\" >0.180357</td>\n",
        "                        <td id=\"T_42a80034_edf2_11ea_8838_5254002c00d9row0_col4\" class=\"data row0 col4\" >-0.270864</td>\n",
        "                        <td id=\"T_42a80034_edf2_11ea_8838_5254002c00d9row0_col5\" class=\"data row0 col5\" >-0.205559</td>\n",
        "                        <td id=\"T_42a80034_edf2_11ea_8838_5254002c00d9row0_col6\" class=\"data row0 col6\" >-0.104764</td>\n",
        "                        <td id=\"T_42a80034_edf2_11ea_8838_5254002c00d9row0_col7\" class=\"data row0 col7\" >-0.119686</td>\n",
        "                        <td id=\"T_42a80034_edf2_11ea_8838_5254002c00d9row0_col8\" class=\"data row0 col8\" >0.134959</td>\n",
        "                        <td id=\"T_42a80034_edf2_11ea_8838_5254002c00d9row0_col9\" class=\"data row0 col9\" >-0.161520</td>\n",
        "                        <td id=\"T_42a80034_edf2_11ea_8838_5254002c00d9row0_col10\" class=\"data row0 col10\" >-0.062853</td>\n",
        "                        <td id=\"T_42a80034_edf2_11ea_8838_5254002c00d9row0_col11\" class=\"data row0 col11\" >-0.053381</td>\n",
        "                        <td id=\"T_42a80034_edf2_11ea_8838_5254002c00d9row0_col12\" class=\"data row0 col12\" >-0.409175</td>\n",
        "                        <td id=\"T_42a80034_edf2_11ea_8838_5254002c00d9row0_col13\" class=\"data row0 col13\" >0.021007</td>\n",
        "                        <td id=\"T_42a80034_edf2_11ea_8838_5254002c00d9row0_col14\" class=\"data row0 col14\" >-0.152294</td>\n",
        "                        <td id=\"T_42a80034_edf2_11ea_8838_5254002c00d9row0_col15\" class=\"data row0 col15\" >-0.246445</td>\n",
        "                        <td id=\"T_42a80034_edf2_11ea_8838_5254002c00d9row0_col16\" class=\"data row0 col16\" >-0.182216</td>\n",
        "            </tr>\n",
        "            <tr>\n",
        "                        <th id=\"T_42a80034_edf2_11ea_8838_5254002c00d9level0_row1\" class=\"row_heading level0 row1\" >theta</th>\n",
        "                        <td id=\"T_42a80034_edf2_11ea_8838_5254002c00d9row1_col0\" class=\"data row1 col0\" >-0.256975</td>\n",
        "                        <td id=\"T_42a80034_edf2_11ea_8838_5254002c00d9row1_col1\" class=\"data row1 col1\" >1.000000</td>\n",
        "                        <td id=\"T_42a80034_edf2_11ea_8838_5254002c00d9row1_col2\" class=\"data row1 col2\" >0.316200</td>\n",
        "                        <td id=\"T_42a80034_edf2_11ea_8838_5254002c00d9row1_col3\" class=\"data row1 col3\" >-0.069117</td>\n",
        "                        <td id=\"T_42a80034_edf2_11ea_8838_5254002c00d9row1_col4\" class=\"data row1 col4\" >0.062599</td>\n",
        "                        <td id=\"T_42a80034_edf2_11ea_8838_5254002c00d9row1_col5\" class=\"data row1 col5\" >0.020885</td>\n",
        "                        <td id=\"T_42a80034_edf2_11ea_8838_5254002c00d9row1_col6\" class=\"data row1 col6\" >0.253173</td>\n",
        "                        <td id=\"T_42a80034_edf2_11ea_8838_5254002c00d9row1_col7\" class=\"data row1 col7\" >0.077341</td>\n",
        "                        <td id=\"T_42a80034_edf2_11ea_8838_5254002c00d9row1_col8\" class=\"data row1 col8\" >-0.115512</td>\n",
        "                        <td id=\"T_42a80034_edf2_11ea_8838_5254002c00d9row1_col9\" class=\"data row1 col9\" >-0.006113</td>\n",
        "                        <td id=\"T_42a80034_edf2_11ea_8838_5254002c00d9row1_col10\" class=\"data row1 col10\" >0.006217</td>\n",
        "                        <td id=\"T_42a80034_edf2_11ea_8838_5254002c00d9row1_col11\" class=\"data row1 col11\" >0.010656</td>\n",
        "                        <td id=\"T_42a80034_edf2_11ea_8838_5254002c00d9row1_col12\" class=\"data row1 col12\" >-0.130675</td>\n",
        "                        <td id=\"T_42a80034_edf2_11ea_8838_5254002c00d9row1_col13\" class=\"data row1 col13\" >0.031974</td>\n",
        "                        <td id=\"T_42a80034_edf2_11ea_8838_5254002c00d9row1_col14\" class=\"data row1 col14\" >-0.333803</td>\n",
        "                        <td id=\"T_42a80034_edf2_11ea_8838_5254002c00d9row1_col15\" class=\"data row1 col15\" >0.055955</td>\n",
        "                        <td id=\"T_42a80034_edf2_11ea_8838_5254002c00d9row1_col16\" class=\"data row1 col16\" >0.174063</td>\n",
        "            </tr>\n",
        "            <tr>\n",
        "                        <th id=\"T_42a80034_edf2_11ea_8838_5254002c00d9level0_row2\" class=\"row_heading level0 row2\" >kappa</th>\n",
        "                        <td id=\"T_42a80034_edf2_11ea_8838_5254002c00d9row2_col0\" class=\"data row2 col0\" >-0.026352</td>\n",
        "                        <td id=\"T_42a80034_edf2_11ea_8838_5254002c00d9row2_col1\" class=\"data row2 col1\" >0.316200</td>\n",
        "                        <td id=\"T_42a80034_edf2_11ea_8838_5254002c00d9row2_col2\" class=\"data row2 col2\" >1.000000</td>\n",
        "                        <td id=\"T_42a80034_edf2_11ea_8838_5254002c00d9row2_col3\" class=\"data row2 col3\" >0.524016</td>\n",
        "                        <td id=\"T_42a80034_edf2_11ea_8838_5254002c00d9row2_col4\" class=\"data row2 col4\" >0.332876</td>\n",
        "                        <td id=\"T_42a80034_edf2_11ea_8838_5254002c00d9row2_col5\" class=\"data row2 col5\" >0.185517</td>\n",
        "                        <td id=\"T_42a80034_edf2_11ea_8838_5254002c00d9row2_col6\" class=\"data row2 col6\" >0.214763</td>\n",
        "                        <td id=\"T_42a80034_edf2_11ea_8838_5254002c00d9row2_col7\" class=\"data row2 col7\" >-0.073565</td>\n",
        "                        <td id=\"T_42a80034_edf2_11ea_8838_5254002c00d9row2_col8\" class=\"data row2 col8\" >-0.144001</td>\n",
        "                        <td id=\"T_42a80034_edf2_11ea_8838_5254002c00d9row2_col9\" class=\"data row2 col9\" >-0.003499</td>\n",
        "                        <td id=\"T_42a80034_edf2_11ea_8838_5254002c00d9row2_col10\" class=\"data row2 col10\" >0.022319</td>\n",
        "                        <td id=\"T_42a80034_edf2_11ea_8838_5254002c00d9row2_col11\" class=\"data row2 col11\" >-0.033448</td>\n",
        "                        <td id=\"T_42a80034_edf2_11ea_8838_5254002c00d9row2_col12\" class=\"data row2 col12\" >-0.062073</td>\n",
        "                        <td id=\"T_42a80034_edf2_11ea_8838_5254002c00d9row2_col13\" class=\"data row2 col13\" >-0.097789</td>\n",
        "                        <td id=\"T_42a80034_edf2_11ea_8838_5254002c00d9row2_col14\" class=\"data row2 col14\" >-0.575851</td>\n",
        "                        <td id=\"T_42a80034_edf2_11ea_8838_5254002c00d9row2_col15\" class=\"data row2 col15\" >-0.117147</td>\n",
        "                        <td id=\"T_42a80034_edf2_11ea_8838_5254002c00d9row2_col16\" class=\"data row2 col16\" >0.259829</td>\n",
        "            </tr>\n",
        "            <tr>\n",
        "                        <th id=\"T_42a80034_edf2_11ea_8838_5254002c00d9level0_row3\" class=\"row_heading level0 row3\" >rho</th>\n",
        "                        <td id=\"T_42a80034_edf2_11ea_8838_5254002c00d9row3_col0\" class=\"data row3 col0\" >0.180357</td>\n",
        "                        <td id=\"T_42a80034_edf2_11ea_8838_5254002c00d9row3_col1\" class=\"data row3 col1\" >-0.069117</td>\n",
        "                        <td id=\"T_42a80034_edf2_11ea_8838_5254002c00d9row3_col2\" class=\"data row3 col2\" >0.524016</td>\n",
        "                        <td id=\"T_42a80034_edf2_11ea_8838_5254002c00d9row3_col3\" class=\"data row3 col3\" >1.000000</td>\n",
        "                        <td id=\"T_42a80034_edf2_11ea_8838_5254002c00d9row3_col4\" class=\"data row3 col4\" >0.616792</td>\n",
        "                        <td id=\"T_42a80034_edf2_11ea_8838_5254002c00d9row3_col5\" class=\"data row3 col5\" >0.207897</td>\n",
        "                        <td id=\"T_42a80034_edf2_11ea_8838_5254002c00d9row3_col6\" class=\"data row3 col6\" >0.110497</td>\n",
        "                        <td id=\"T_42a80034_edf2_11ea_8838_5254002c00d9row3_col7\" class=\"data row3 col7\" >-0.181722</td>\n",
        "                        <td id=\"T_42a80034_edf2_11ea_8838_5254002c00d9row3_col8\" class=\"data row3 col8\" >-0.159294</td>\n",
        "                        <td id=\"T_42a80034_edf2_11ea_8838_5254002c00d9row3_col9\" class=\"data row3 col9\" >-0.013757</td>\n",
        "                        <td id=\"T_42a80034_edf2_11ea_8838_5254002c00d9row3_col10\" class=\"data row3 col10\" >0.037758</td>\n",
        "                        <td id=\"T_42a80034_edf2_11ea_8838_5254002c00d9row3_col11\" class=\"data row3 col11\" >-0.101074</td>\n",
        "                        <td id=\"T_42a80034_edf2_11ea_8838_5254002c00d9row3_col12\" class=\"data row3 col12\" >-0.016833</td>\n",
        "                        <td id=\"T_42a80034_edf2_11ea_8838_5254002c00d9row3_col13\" class=\"data row3 col13\" >-0.107776</td>\n",
        "                        <td id=\"T_42a80034_edf2_11ea_8838_5254002c00d9row3_col14\" class=\"data row3 col14\" >-0.307842</td>\n",
        "                        <td id=\"T_42a80034_edf2_11ea_8838_5254002c00d9row3_col15\" class=\"data row3 col15\" >-0.173041</td>\n",
        "                        <td id=\"T_42a80034_edf2_11ea_8838_5254002c00d9row3_col16\" class=\"data row3 col16\" >0.098852</td>\n",
        "            </tr>\n",
        "            <tr>\n",
        "                        <th id=\"T_42a80034_edf2_11ea_8838_5254002c00d9level0_row4\" class=\"row_heading level0 row4\" >sigma</th>\n",
        "                        <td id=\"T_42a80034_edf2_11ea_8838_5254002c00d9row4_col0\" class=\"data row4 col0\" >-0.270864</td>\n",
        "                        <td id=\"T_42a80034_edf2_11ea_8838_5254002c00d9row4_col1\" class=\"data row4 col1\" >0.062599</td>\n",
        "                        <td id=\"T_42a80034_edf2_11ea_8838_5254002c00d9row4_col2\" class=\"data row4 col2\" >0.332876</td>\n",
        "                        <td id=\"T_42a80034_edf2_11ea_8838_5254002c00d9row4_col3\" class=\"data row4 col3\" >0.616792</td>\n",
        "                        <td id=\"T_42a80034_edf2_11ea_8838_5254002c00d9row4_col4\" class=\"data row4 col4\" >1.000000</td>\n",
        "                        <td id=\"T_42a80034_edf2_11ea_8838_5254002c00d9row4_col5\" class=\"data row4 col5\" >0.198113</td>\n",
        "                        <td id=\"T_42a80034_edf2_11ea_8838_5254002c00d9row4_col6\" class=\"data row4 col6\" >-0.094228</td>\n",
        "                        <td id=\"T_42a80034_edf2_11ea_8838_5254002c00d9row4_col7\" class=\"data row4 col7\" >-0.148672</td>\n",
        "                        <td id=\"T_42a80034_edf2_11ea_8838_5254002c00d9row4_col8\" class=\"data row4 col8\" >-0.492074</td>\n",
        "                        <td id=\"T_42a80034_edf2_11ea_8838_5254002c00d9row4_col9\" class=\"data row4 col9\" >-0.153593</td>\n",
        "                        <td id=\"T_42a80034_edf2_11ea_8838_5254002c00d9row4_col10\" class=\"data row4 col10\" >-0.131576</td>\n",
        "                        <td id=\"T_42a80034_edf2_11ea_8838_5254002c00d9row4_col11\" class=\"data row4 col11\" >-0.303764</td>\n",
        "                        <td id=\"T_42a80034_edf2_11ea_8838_5254002c00d9row4_col12\" class=\"data row4 col12\" >-0.016902</td>\n",
        "                        <td id=\"T_42a80034_edf2_11ea_8838_5254002c00d9row4_col13\" class=\"data row4 col13\" >-0.133922</td>\n",
        "                        <td id=\"T_42a80034_edf2_11ea_8838_5254002c00d9row4_col14\" class=\"data row4 col14\" >-0.318396</td>\n",
        "                        <td id=\"T_42a80034_edf2_11ea_8838_5254002c00d9row4_col15\" class=\"data row4 col15\" >0.142093</td>\n",
        "                        <td id=\"T_42a80034_edf2_11ea_8838_5254002c00d9row4_col16\" class=\"data row4 col16\" >-0.051094</td>\n",
        "            </tr>\n",
        "            <tr>\n",
        "                        <th id=\"T_42a80034_edf2_11ea_8838_5254002c00d9level0_row5\" class=\"row_heading level0 row5\" >School_closing</th>\n",
        "                        <td id=\"T_42a80034_edf2_11ea_8838_5254002c00d9row5_col0\" class=\"data row5 col0\" >-0.205559</td>\n",
        "                        <td id=\"T_42a80034_edf2_11ea_8838_5254002c00d9row5_col1\" class=\"data row5 col1\" >0.020885</td>\n",
        "                        <td id=\"T_42a80034_edf2_11ea_8838_5254002c00d9row5_col2\" class=\"data row5 col2\" >0.185517</td>\n",
        "                        <td id=\"T_42a80034_edf2_11ea_8838_5254002c00d9row5_col3\" class=\"data row5 col3\" >0.207897</td>\n",
        "                        <td id=\"T_42a80034_edf2_11ea_8838_5254002c00d9row5_col4\" class=\"data row5 col4\" >0.198113</td>\n",
        "                        <td id=\"T_42a80034_edf2_11ea_8838_5254002c00d9row5_col5\" class=\"data row5 col5\" >1.000000</td>\n",
        "                        <td id=\"T_42a80034_edf2_11ea_8838_5254002c00d9row5_col6\" class=\"data row5 col6\" >0.552126</td>\n",
        "                        <td id=\"T_42a80034_edf2_11ea_8838_5254002c00d9row5_col7\" class=\"data row5 col7\" >0.195045</td>\n",
        "                        <td id=\"T_42a80034_edf2_11ea_8838_5254002c00d9row5_col8\" class=\"data row5 col8\" >-0.045160</td>\n",
        "                        <td id=\"T_42a80034_edf2_11ea_8838_5254002c00d9row5_col9\" class=\"data row5 col9\" >0.339895</td>\n",
        "                        <td id=\"T_42a80034_edf2_11ea_8838_5254002c00d9row5_col10\" class=\"data row5 col10\" >0.243962</td>\n",
        "                        <td id=\"T_42a80034_edf2_11ea_8838_5254002c00d9row5_col11\" class=\"data row5 col11\" >0.212209</td>\n",
        "                        <td id=\"T_42a80034_edf2_11ea_8838_5254002c00d9row5_col12\" class=\"data row5 col12\" >0.494753</td>\n",
        "                        <td id=\"T_42a80034_edf2_11ea_8838_5254002c00d9row5_col13\" class=\"data row5 col13\" >0.157489</td>\n",
        "                        <td id=\"T_42a80034_edf2_11ea_8838_5254002c00d9row5_col14\" class=\"data row5 col14\" >0.107738</td>\n",
        "                        <td id=\"T_42a80034_edf2_11ea_8838_5254002c00d9row5_col15\" class=\"data row5 col15\" >-0.368435</td>\n",
        "                        <td id=\"T_42a80034_edf2_11ea_8838_5254002c00d9row5_col16\" class=\"data row5 col16\" >0.550076</td>\n",
        "            </tr>\n",
        "            <tr>\n",
        "                        <th id=\"T_42a80034_edf2_11ea_8838_5254002c00d9level0_row6\" class=\"row_heading level0 row6\" >Workplace_closing</th>\n",
        "                        <td id=\"T_42a80034_edf2_11ea_8838_5254002c00d9row6_col0\" class=\"data row6 col0\" >-0.104764</td>\n",
        "                        <td id=\"T_42a80034_edf2_11ea_8838_5254002c00d9row6_col1\" class=\"data row6 col1\" >0.253173</td>\n",
        "                        <td id=\"T_42a80034_edf2_11ea_8838_5254002c00d9row6_col2\" class=\"data row6 col2\" >0.214763</td>\n",
        "                        <td id=\"T_42a80034_edf2_11ea_8838_5254002c00d9row6_col3\" class=\"data row6 col3\" >0.110497</td>\n",
        "                        <td id=\"T_42a80034_edf2_11ea_8838_5254002c00d9row6_col4\" class=\"data row6 col4\" >-0.094228</td>\n",
        "                        <td id=\"T_42a80034_edf2_11ea_8838_5254002c00d9row6_col5\" class=\"data row6 col5\" >0.552126</td>\n",
        "                        <td id=\"T_42a80034_edf2_11ea_8838_5254002c00d9row6_col6\" class=\"data row6 col6\" >1.000000</td>\n",
        "                        <td id=\"T_42a80034_edf2_11ea_8838_5254002c00d9row6_col7\" class=\"data row6 col7\" >0.302238</td>\n",
        "                        <td id=\"T_42a80034_edf2_11ea_8838_5254002c00d9row6_col8\" class=\"data row6 col8\" >0.304371</td>\n",
        "                        <td id=\"T_42a80034_edf2_11ea_8838_5254002c00d9row6_col9\" class=\"data row6 col9\" >0.533506</td>\n",
        "                        <td id=\"T_42a80034_edf2_11ea_8838_5254002c00d9row6_col10\" class=\"data row6 col10\" >0.472754</td>\n",
        "                        <td id=\"T_42a80034_edf2_11ea_8838_5254002c00d9row6_col11\" class=\"data row6 col11\" >0.487973</td>\n",
        "                        <td id=\"T_42a80034_edf2_11ea_8838_5254002c00d9row6_col12\" class=\"data row6 col12\" >0.329675</td>\n",
        "                        <td id=\"T_42a80034_edf2_11ea_8838_5254002c00d9row6_col13\" class=\"data row6 col13\" >0.184243</td>\n",
        "                        <td id=\"T_42a80034_edf2_11ea_8838_5254002c00d9row6_col14\" class=\"data row6 col14\" >0.051601</td>\n",
        "                        <td id=\"T_42a80034_edf2_11ea_8838_5254002c00d9row6_col15\" class=\"data row6 col15\" >-0.400747</td>\n",
        "                        <td id=\"T_42a80034_edf2_11ea_8838_5254002c00d9row6_col16\" class=\"data row6 col16\" >0.736049</td>\n",
        "            </tr>\n",
        "            <tr>\n",
        "                        <th id=\"T_42a80034_edf2_11ea_8838_5254002c00d9level0_row7\" class=\"row_heading level0 row7\" >Cancel_events</th>\n",
        "                        <td id=\"T_42a80034_edf2_11ea_8838_5254002c00d9row7_col0\" class=\"data row7 col0\" >-0.119686</td>\n",
        "                        <td id=\"T_42a80034_edf2_11ea_8838_5254002c00d9row7_col1\" class=\"data row7 col1\" >0.077341</td>\n",
        "                        <td id=\"T_42a80034_edf2_11ea_8838_5254002c00d9row7_col2\" class=\"data row7 col2\" >-0.073565</td>\n",
        "                        <td id=\"T_42a80034_edf2_11ea_8838_5254002c00d9row7_col3\" class=\"data row7 col3\" >-0.181722</td>\n",
        "                        <td id=\"T_42a80034_edf2_11ea_8838_5254002c00d9row7_col4\" class=\"data row7 col4\" >-0.148672</td>\n",
        "                        <td id=\"T_42a80034_edf2_11ea_8838_5254002c00d9row7_col5\" class=\"data row7 col5\" >0.195045</td>\n",
        "                        <td id=\"T_42a80034_edf2_11ea_8838_5254002c00d9row7_col6\" class=\"data row7 col6\" >0.302238</td>\n",
        "                        <td id=\"T_42a80034_edf2_11ea_8838_5254002c00d9row7_col7\" class=\"data row7 col7\" >1.000000</td>\n",
        "                        <td id=\"T_42a80034_edf2_11ea_8838_5254002c00d9row7_col8\" class=\"data row7 col8\" >0.390516</td>\n",
        "                        <td id=\"T_42a80034_edf2_11ea_8838_5254002c00d9row7_col9\" class=\"data row7 col9\" >0.188941</td>\n",
        "                        <td id=\"T_42a80034_edf2_11ea_8838_5254002c00d9row7_col10\" class=\"data row7 col10\" >0.281321</td>\n",
        "                        <td id=\"T_42a80034_edf2_11ea_8838_5254002c00d9row7_col11\" class=\"data row7 col11\" >0.280621</td>\n",
        "                        <td id=\"T_42a80034_edf2_11ea_8838_5254002c00d9row7_col12\" class=\"data row7 col12\" >0.223758</td>\n",
        "                        <td id=\"T_42a80034_edf2_11ea_8838_5254002c00d9row7_col13\" class=\"data row7 col13\" >0.475098</td>\n",
        "                        <td id=\"T_42a80034_edf2_11ea_8838_5254002c00d9row7_col14\" class=\"data row7 col14\" >0.195040</td>\n",
        "                        <td id=\"T_42a80034_edf2_11ea_8838_5254002c00d9row7_col15\" class=\"data row7 col15\" >0.040408</td>\n",
        "                        <td id=\"T_42a80034_edf2_11ea_8838_5254002c00d9row7_col16\" class=\"data row7 col16\" >0.451117</td>\n",
        "            </tr>\n",
        "            <tr>\n",
        "                        <th id=\"T_42a80034_edf2_11ea_8838_5254002c00d9level0_row8\" class=\"row_heading level0 row8\" >Gatherings_restrictions</th>\n",
        "                        <td id=\"T_42a80034_edf2_11ea_8838_5254002c00d9row8_col0\" class=\"data row8 col0\" >0.134959</td>\n",
        "                        <td id=\"T_42a80034_edf2_11ea_8838_5254002c00d9row8_col1\" class=\"data row8 col1\" >-0.115512</td>\n",
        "                        <td id=\"T_42a80034_edf2_11ea_8838_5254002c00d9row8_col2\" class=\"data row8 col2\" >-0.144001</td>\n",
        "                        <td id=\"T_42a80034_edf2_11ea_8838_5254002c00d9row8_col3\" class=\"data row8 col3\" >-0.159294</td>\n",
        "                        <td id=\"T_42a80034_edf2_11ea_8838_5254002c00d9row8_col4\" class=\"data row8 col4\" >-0.492074</td>\n",
        "                        <td id=\"T_42a80034_edf2_11ea_8838_5254002c00d9row8_col5\" class=\"data row8 col5\" >-0.045160</td>\n",
        "                        <td id=\"T_42a80034_edf2_11ea_8838_5254002c00d9row8_col6\" class=\"data row8 col6\" >0.304371</td>\n",
        "                        <td id=\"T_42a80034_edf2_11ea_8838_5254002c00d9row8_col7\" class=\"data row8 col7\" >0.390516</td>\n",
        "                        <td id=\"T_42a80034_edf2_11ea_8838_5254002c00d9row8_col8\" class=\"data row8 col8\" >1.000000</td>\n",
        "                        <td id=\"T_42a80034_edf2_11ea_8838_5254002c00d9row8_col9\" class=\"data row8 col9\" >0.528173</td>\n",
        "                        <td id=\"T_42a80034_edf2_11ea_8838_5254002c00d9row8_col10\" class=\"data row8 col10\" >0.478788</td>\n",
        "                        <td id=\"T_42a80034_edf2_11ea_8838_5254002c00d9row8_col11\" class=\"data row8 col11\" >0.625616</td>\n",
        "                        <td id=\"T_42a80034_edf2_11ea_8838_5254002c00d9row8_col12\" class=\"data row8 col12\" >0.304761</td>\n",
        "                        <td id=\"T_42a80034_edf2_11ea_8838_5254002c00d9row8_col13\" class=\"data row8 col13\" >0.245177</td>\n",
        "                        <td id=\"T_42a80034_edf2_11ea_8838_5254002c00d9row8_col14\" class=\"data row8 col14\" >0.381038</td>\n",
        "                        <td id=\"T_42a80034_edf2_11ea_8838_5254002c00d9row8_col15\" class=\"data row8 col15\" >-0.162305</td>\n",
        "                        <td id=\"T_42a80034_edf2_11ea_8838_5254002c00d9row8_col16\" class=\"data row8 col16\" >0.518674</td>\n",
        "            </tr>\n",
        "            <tr>\n",
        "                        <th id=\"T_42a80034_edf2_11ea_8838_5254002c00d9level0_row9\" class=\"row_heading level0 row9\" >Transport_closing</th>\n",
        "                        <td id=\"T_42a80034_edf2_11ea_8838_5254002c00d9row9_col0\" class=\"data row9 col0\" >-0.161520</td>\n",
        "                        <td id=\"T_42a80034_edf2_11ea_8838_5254002c00d9row9_col1\" class=\"data row9 col1\" >-0.006113</td>\n",
        "                        <td id=\"T_42a80034_edf2_11ea_8838_5254002c00d9row9_col2\" class=\"data row9 col2\" >-0.003499</td>\n",
        "                        <td id=\"T_42a80034_edf2_11ea_8838_5254002c00d9row9_col3\" class=\"data row9 col3\" >-0.013757</td>\n",
        "                        <td id=\"T_42a80034_edf2_11ea_8838_5254002c00d9row9_col4\" class=\"data row9 col4\" >-0.153593</td>\n",
        "                        <td id=\"T_42a80034_edf2_11ea_8838_5254002c00d9row9_col5\" class=\"data row9 col5\" >0.339895</td>\n",
        "                        <td id=\"T_42a80034_edf2_11ea_8838_5254002c00d9row9_col6\" class=\"data row9 col6\" >0.533506</td>\n",
        "                        <td id=\"T_42a80034_edf2_11ea_8838_5254002c00d9row9_col7\" class=\"data row9 col7\" >0.188941</td>\n",
        "                        <td id=\"T_42a80034_edf2_11ea_8838_5254002c00d9row9_col8\" class=\"data row9 col8\" >0.528173</td>\n",
        "                        <td id=\"T_42a80034_edf2_11ea_8838_5254002c00d9row9_col9\" class=\"data row9 col9\" >1.000000</td>\n",
        "                        <td id=\"T_42a80034_edf2_11ea_8838_5254002c00d9row9_col10\" class=\"data row9 col10\" >0.585244</td>\n",
        "                        <td id=\"T_42a80034_edf2_11ea_8838_5254002c00d9row9_col11\" class=\"data row9 col11\" >0.786873</td>\n",
        "                        <td id=\"T_42a80034_edf2_11ea_8838_5254002c00d9row9_col12\" class=\"data row9 col12\" >0.518821</td>\n",
        "                        <td id=\"T_42a80034_edf2_11ea_8838_5254002c00d9row9_col13\" class=\"data row9 col13\" >0.052481</td>\n",
        "                        <td id=\"T_42a80034_edf2_11ea_8838_5254002c00d9row9_col14\" class=\"data row9 col14\" >0.274467</td>\n",
        "                        <td id=\"T_42a80034_edf2_11ea_8838_5254002c00d9row9_col15\" class=\"data row9 col15\" >-0.230098</td>\n",
        "                        <td id=\"T_42a80034_edf2_11ea_8838_5254002c00d9row9_col16\" class=\"data row9 col16\" >0.750201</td>\n",
        "            </tr>\n",
        "            <tr>\n",
        "                        <th id=\"T_42a80034_edf2_11ea_8838_5254002c00d9level0_row10\" class=\"row_heading level0 row10\" >Stay_home_restrictions</th>\n",
        "                        <td id=\"T_42a80034_edf2_11ea_8838_5254002c00d9row10_col0\" class=\"data row10 col0\" >-0.062853</td>\n",
        "                        <td id=\"T_42a80034_edf2_11ea_8838_5254002c00d9row10_col1\" class=\"data row10 col1\" >0.006217</td>\n",
        "                        <td id=\"T_42a80034_edf2_11ea_8838_5254002c00d9row10_col2\" class=\"data row10 col2\" >0.022319</td>\n",
        "                        <td id=\"T_42a80034_edf2_11ea_8838_5254002c00d9row10_col3\" class=\"data row10 col3\" >0.037758</td>\n",
        "                        <td id=\"T_42a80034_edf2_11ea_8838_5254002c00d9row10_col4\" class=\"data row10 col4\" >-0.131576</td>\n",
        "                        <td id=\"T_42a80034_edf2_11ea_8838_5254002c00d9row10_col5\" class=\"data row10 col5\" >0.243962</td>\n",
        "                        <td id=\"T_42a80034_edf2_11ea_8838_5254002c00d9row10_col6\" class=\"data row10 col6\" >0.472754</td>\n",
        "                        <td id=\"T_42a80034_edf2_11ea_8838_5254002c00d9row10_col7\" class=\"data row10 col7\" >0.281321</td>\n",
        "                        <td id=\"T_42a80034_edf2_11ea_8838_5254002c00d9row10_col8\" class=\"data row10 col8\" >0.478788</td>\n",
        "                        <td id=\"T_42a80034_edf2_11ea_8838_5254002c00d9row10_col9\" class=\"data row10 col9\" >0.585244</td>\n",
        "                        <td id=\"T_42a80034_edf2_11ea_8838_5254002c00d9row10_col10\" class=\"data row10 col10\" >1.000000</td>\n",
        "                        <td id=\"T_42a80034_edf2_11ea_8838_5254002c00d9row10_col11\" class=\"data row10 col11\" >0.657145</td>\n",
        "                        <td id=\"T_42a80034_edf2_11ea_8838_5254002c00d9row10_col12\" class=\"data row10 col12\" >0.493057</td>\n",
        "                        <td id=\"T_42a80034_edf2_11ea_8838_5254002c00d9row10_col13\" class=\"data row10 col13\" >0.157419</td>\n",
        "                        <td id=\"T_42a80034_edf2_11ea_8838_5254002c00d9row10_col14\" class=\"data row10 col14\" >0.293078</td>\n",
        "                        <td id=\"T_42a80034_edf2_11ea_8838_5254002c00d9row10_col15\" class=\"data row10 col15\" >0.030384</td>\n",
        "                        <td id=\"T_42a80034_edf2_11ea_8838_5254002c00d9row10_col16\" class=\"data row10 col16\" >0.696343</td>\n",
        "            </tr>\n",
        "            <tr>\n",
        "                        <th id=\"T_42a80034_edf2_11ea_8838_5254002c00d9level0_row11\" class=\"row_heading level0 row11\" >Internal_movement_restrictions</th>\n",
        "                        <td id=\"T_42a80034_edf2_11ea_8838_5254002c00d9row11_col0\" class=\"data row11 col0\" >-0.053381</td>\n",
        "                        <td id=\"T_42a80034_edf2_11ea_8838_5254002c00d9row11_col1\" class=\"data row11 col1\" >0.010656</td>\n",
        "                        <td id=\"T_42a80034_edf2_11ea_8838_5254002c00d9row11_col2\" class=\"data row11 col2\" >-0.033448</td>\n",
        "                        <td id=\"T_42a80034_edf2_11ea_8838_5254002c00d9row11_col3\" class=\"data row11 col3\" >-0.101074</td>\n",
        "                        <td id=\"T_42a80034_edf2_11ea_8838_5254002c00d9row11_col4\" class=\"data row11 col4\" >-0.303764</td>\n",
        "                        <td id=\"T_42a80034_edf2_11ea_8838_5254002c00d9row11_col5\" class=\"data row11 col5\" >0.212209</td>\n",
        "                        <td id=\"T_42a80034_edf2_11ea_8838_5254002c00d9row11_col6\" class=\"data row11 col6\" >0.487973</td>\n",
        "                        <td id=\"T_42a80034_edf2_11ea_8838_5254002c00d9row11_col7\" class=\"data row11 col7\" >0.280621</td>\n",
        "                        <td id=\"T_42a80034_edf2_11ea_8838_5254002c00d9row11_col8\" class=\"data row11 col8\" >0.625616</td>\n",
        "                        <td id=\"T_42a80034_edf2_11ea_8838_5254002c00d9row11_col9\" class=\"data row11 col9\" >0.786873</td>\n",
        "                        <td id=\"T_42a80034_edf2_11ea_8838_5254002c00d9row11_col10\" class=\"data row11 col10\" >0.657145</td>\n",
        "                        <td id=\"T_42a80034_edf2_11ea_8838_5254002c00d9row11_col11\" class=\"data row11 col11\" >1.000000</td>\n",
        "                        <td id=\"T_42a80034_edf2_11ea_8838_5254002c00d9row11_col12\" class=\"data row11 col12\" >0.457885</td>\n",
        "                        <td id=\"T_42a80034_edf2_11ea_8838_5254002c00d9row11_col13\" class=\"data row11 col13\" >0.128767</td>\n",
        "                        <td id=\"T_42a80034_edf2_11ea_8838_5254002c00d9row11_col14\" class=\"data row11 col14\" >0.381687</td>\n",
        "                        <td id=\"T_42a80034_edf2_11ea_8838_5254002c00d9row11_col15\" class=\"data row11 col15\" >-0.255645</td>\n",
        "                        <td id=\"T_42a80034_edf2_11ea_8838_5254002c00d9row11_col16\" class=\"data row11 col16\" >0.691917</td>\n",
        "            </tr>\n",
        "            <tr>\n",
        "                        <th id=\"T_42a80034_edf2_11ea_8838_5254002c00d9level0_row12\" class=\"row_heading level0 row12\" >International_movement_restrictions</th>\n",
        "                        <td id=\"T_42a80034_edf2_11ea_8838_5254002c00d9row12_col0\" class=\"data row12 col0\" >-0.409175</td>\n",
        "                        <td id=\"T_42a80034_edf2_11ea_8838_5254002c00d9row12_col1\" class=\"data row12 col1\" >-0.130675</td>\n",
        "                        <td id=\"T_42a80034_edf2_11ea_8838_5254002c00d9row12_col2\" class=\"data row12 col2\" >-0.062073</td>\n",
        "                        <td id=\"T_42a80034_edf2_11ea_8838_5254002c00d9row12_col3\" class=\"data row12 col3\" >-0.016833</td>\n",
        "                        <td id=\"T_42a80034_edf2_11ea_8838_5254002c00d9row12_col4\" class=\"data row12 col4\" >-0.016902</td>\n",
        "                        <td id=\"T_42a80034_edf2_11ea_8838_5254002c00d9row12_col5\" class=\"data row12 col5\" >0.494753</td>\n",
        "                        <td id=\"T_42a80034_edf2_11ea_8838_5254002c00d9row12_col6\" class=\"data row12 col6\" >0.329675</td>\n",
        "                        <td id=\"T_42a80034_edf2_11ea_8838_5254002c00d9row12_col7\" class=\"data row12 col7\" >0.223758</td>\n",
        "                        <td id=\"T_42a80034_edf2_11ea_8838_5254002c00d9row12_col8\" class=\"data row12 col8\" >0.304761</td>\n",
        "                        <td id=\"T_42a80034_edf2_11ea_8838_5254002c00d9row12_col9\" class=\"data row12 col9\" >0.518821</td>\n",
        "                        <td id=\"T_42a80034_edf2_11ea_8838_5254002c00d9row12_col10\" class=\"data row12 col10\" >0.493057</td>\n",
        "                        <td id=\"T_42a80034_edf2_11ea_8838_5254002c00d9row12_col11\" class=\"data row12 col11\" >0.457885</td>\n",
        "                        <td id=\"T_42a80034_edf2_11ea_8838_5254002c00d9row12_col12\" class=\"data row12 col12\" >1.000000</td>\n",
        "                        <td id=\"T_42a80034_edf2_11ea_8838_5254002c00d9row12_col13\" class=\"data row12 col13\" >0.204207</td>\n",
        "                        <td id=\"T_42a80034_edf2_11ea_8838_5254002c00d9row12_col14\" class=\"data row12 col14\" >0.351010</td>\n",
        "                        <td id=\"T_42a80034_edf2_11ea_8838_5254002c00d9row12_col15\" class=\"data row12 col15\" >0.065081</td>\n",
        "                        <td id=\"T_42a80034_edf2_11ea_8838_5254002c00d9row12_col16\" class=\"data row12 col16\" >0.649927</td>\n",
        "            </tr>\n",
        "            <tr>\n",
        "                        <th id=\"T_42a80034_edf2_11ea_8838_5254002c00d9level0_row13\" class=\"row_heading level0 row13\" >Information_campaigns</th>\n",
        "                        <td id=\"T_42a80034_edf2_11ea_8838_5254002c00d9row13_col0\" class=\"data row13 col0\" >0.021007</td>\n",
        "                        <td id=\"T_42a80034_edf2_11ea_8838_5254002c00d9row13_col1\" class=\"data row13 col1\" >0.031974</td>\n",
        "                        <td id=\"T_42a80034_edf2_11ea_8838_5254002c00d9row13_col2\" class=\"data row13 col2\" >-0.097789</td>\n",
        "                        <td id=\"T_42a80034_edf2_11ea_8838_5254002c00d9row13_col3\" class=\"data row13 col3\" >-0.107776</td>\n",
        "                        <td id=\"T_42a80034_edf2_11ea_8838_5254002c00d9row13_col4\" class=\"data row13 col4\" >-0.133922</td>\n",
        "                        <td id=\"T_42a80034_edf2_11ea_8838_5254002c00d9row13_col5\" class=\"data row13 col5\" >0.157489</td>\n",
        "                        <td id=\"T_42a80034_edf2_11ea_8838_5254002c00d9row13_col6\" class=\"data row13 col6\" >0.184243</td>\n",
        "                        <td id=\"T_42a80034_edf2_11ea_8838_5254002c00d9row13_col7\" class=\"data row13 col7\" >0.475098</td>\n",
        "                        <td id=\"T_42a80034_edf2_11ea_8838_5254002c00d9row13_col8\" class=\"data row13 col8\" >0.245177</td>\n",
        "                        <td id=\"T_42a80034_edf2_11ea_8838_5254002c00d9row13_col9\" class=\"data row13 col9\" >0.052481</td>\n",
        "                        <td id=\"T_42a80034_edf2_11ea_8838_5254002c00d9row13_col10\" class=\"data row13 col10\" >0.157419</td>\n",
        "                        <td id=\"T_42a80034_edf2_11ea_8838_5254002c00d9row13_col11\" class=\"data row13 col11\" >0.128767</td>\n",
        "                        <td id=\"T_42a80034_edf2_11ea_8838_5254002c00d9row13_col12\" class=\"data row13 col12\" >0.204207</td>\n",
        "                        <td id=\"T_42a80034_edf2_11ea_8838_5254002c00d9row13_col13\" class=\"data row13 col13\" >1.000000</td>\n",
        "                        <td id=\"T_42a80034_edf2_11ea_8838_5254002c00d9row13_col14\" class=\"data row13 col14\" >0.262553</td>\n",
        "                        <td id=\"T_42a80034_edf2_11ea_8838_5254002c00d9row13_col15\" class=\"data row13 col15\" >0.202060</td>\n",
        "                        <td id=\"T_42a80034_edf2_11ea_8838_5254002c00d9row13_col16\" class=\"data row13 col16\" >0.301128</td>\n",
        "            </tr>\n",
        "            <tr>\n",
        "                        <th id=\"T_42a80034_edf2_11ea_8838_5254002c00d9level0_row14\" class=\"row_heading level0 row14\" >Testing_policy</th>\n",
        "                        <td id=\"T_42a80034_edf2_11ea_8838_5254002c00d9row14_col0\" class=\"data row14 col0\" >-0.152294</td>\n",
        "                        <td id=\"T_42a80034_edf2_11ea_8838_5254002c00d9row14_col1\" class=\"data row14 col1\" >-0.333803</td>\n",
        "                        <td id=\"T_42a80034_edf2_11ea_8838_5254002c00d9row14_col2\" class=\"data row14 col2\" >-0.575851</td>\n",
        "                        <td id=\"T_42a80034_edf2_11ea_8838_5254002c00d9row14_col3\" class=\"data row14 col3\" >-0.307842</td>\n",
        "                        <td id=\"T_42a80034_edf2_11ea_8838_5254002c00d9row14_col4\" class=\"data row14 col4\" >-0.318396</td>\n",
        "                        <td id=\"T_42a80034_edf2_11ea_8838_5254002c00d9row14_col5\" class=\"data row14 col5\" >0.107738</td>\n",
        "                        <td id=\"T_42a80034_edf2_11ea_8838_5254002c00d9row14_col6\" class=\"data row14 col6\" >0.051601</td>\n",
        "                        <td id=\"T_42a80034_edf2_11ea_8838_5254002c00d9row14_col7\" class=\"data row14 col7\" >0.195040</td>\n",
        "                        <td id=\"T_42a80034_edf2_11ea_8838_5254002c00d9row14_col8\" class=\"data row14 col8\" >0.381038</td>\n",
        "                        <td id=\"T_42a80034_edf2_11ea_8838_5254002c00d9row14_col9\" class=\"data row14 col9\" >0.274467</td>\n",
        "                        <td id=\"T_42a80034_edf2_11ea_8838_5254002c00d9row14_col10\" class=\"data row14 col10\" >0.293078</td>\n",
        "                        <td id=\"T_42a80034_edf2_11ea_8838_5254002c00d9row14_col11\" class=\"data row14 col11\" >0.381687</td>\n",
        "                        <td id=\"T_42a80034_edf2_11ea_8838_5254002c00d9row14_col12\" class=\"data row14 col12\" >0.351010</td>\n",
        "                        <td id=\"T_42a80034_edf2_11ea_8838_5254002c00d9row14_col13\" class=\"data row14 col13\" >0.262553</td>\n",
        "                        <td id=\"T_42a80034_edf2_11ea_8838_5254002c00d9row14_col14\" class=\"data row14 col14\" >1.000000</td>\n",
        "                        <td id=\"T_42a80034_edf2_11ea_8838_5254002c00d9row14_col15\" class=\"data row14 col15\" >0.084132</td>\n",
        "                        <td id=\"T_42a80034_edf2_11ea_8838_5254002c00d9row14_col16\" class=\"data row14 col16\" >0.035637</td>\n",
        "            </tr>\n",
        "            <tr>\n",
        "                        <th id=\"T_42a80034_edf2_11ea_8838_5254002c00d9level0_row15\" class=\"row_heading level0 row15\" >Contact_tracing</th>\n",
        "                        <td id=\"T_42a80034_edf2_11ea_8838_5254002c00d9row15_col0\" class=\"data row15 col0\" >-0.246445</td>\n",
        "                        <td id=\"T_42a80034_edf2_11ea_8838_5254002c00d9row15_col1\" class=\"data row15 col1\" >0.055955</td>\n",
        "                        <td id=\"T_42a80034_edf2_11ea_8838_5254002c00d9row15_col2\" class=\"data row15 col2\" >-0.117147</td>\n",
        "                        <td id=\"T_42a80034_edf2_11ea_8838_5254002c00d9row15_col3\" class=\"data row15 col3\" >-0.173041</td>\n",
        "                        <td id=\"T_42a80034_edf2_11ea_8838_5254002c00d9row15_col4\" class=\"data row15 col4\" >0.142093</td>\n",
        "                        <td id=\"T_42a80034_edf2_11ea_8838_5254002c00d9row15_col5\" class=\"data row15 col5\" >-0.368435</td>\n",
        "                        <td id=\"T_42a80034_edf2_11ea_8838_5254002c00d9row15_col6\" class=\"data row15 col6\" >-0.400747</td>\n",
        "                        <td id=\"T_42a80034_edf2_11ea_8838_5254002c00d9row15_col7\" class=\"data row15 col7\" >0.040408</td>\n",
        "                        <td id=\"T_42a80034_edf2_11ea_8838_5254002c00d9row15_col8\" class=\"data row15 col8\" >-0.162305</td>\n",
        "                        <td id=\"T_42a80034_edf2_11ea_8838_5254002c00d9row15_col9\" class=\"data row15 col9\" >-0.230098</td>\n",
        "                        <td id=\"T_42a80034_edf2_11ea_8838_5254002c00d9row15_col10\" class=\"data row15 col10\" >0.030384</td>\n",
        "                        <td id=\"T_42a80034_edf2_11ea_8838_5254002c00d9row15_col11\" class=\"data row15 col11\" >-0.255645</td>\n",
        "                        <td id=\"T_42a80034_edf2_11ea_8838_5254002c00d9row15_col12\" class=\"data row15 col12\" >0.065081</td>\n",
        "                        <td id=\"T_42a80034_edf2_11ea_8838_5254002c00d9row15_col13\" class=\"data row15 col13\" >0.202060</td>\n",
        "                        <td id=\"T_42a80034_edf2_11ea_8838_5254002c00d9row15_col14\" class=\"data row15 col14\" >0.084132</td>\n",
        "                        <td id=\"T_42a80034_edf2_11ea_8838_5254002c00d9row15_col15\" class=\"data row15 col15\" >1.000000</td>\n",
        "                        <td id=\"T_42a80034_edf2_11ea_8838_5254002c00d9row15_col16\" class=\"data row15 col16\" >-0.147259</td>\n",
        "            </tr>\n",
        "            <tr>\n",
        "                        <th id=\"T_42a80034_edf2_11ea_8838_5254002c00d9level0_row16\" class=\"row_heading level0 row16\" >Stringency_index</th>\n",
        "                        <td id=\"T_42a80034_edf2_11ea_8838_5254002c00d9row16_col0\" class=\"data row16 col0\" >-0.182216</td>\n",
        "                        <td id=\"T_42a80034_edf2_11ea_8838_5254002c00d9row16_col1\" class=\"data row16 col1\" >0.174063</td>\n",
        "                        <td id=\"T_42a80034_edf2_11ea_8838_5254002c00d9row16_col2\" class=\"data row16 col2\" >0.259829</td>\n",
        "                        <td id=\"T_42a80034_edf2_11ea_8838_5254002c00d9row16_col3\" class=\"data row16 col3\" >0.098852</td>\n",
        "                        <td id=\"T_42a80034_edf2_11ea_8838_5254002c00d9row16_col4\" class=\"data row16 col4\" >-0.051094</td>\n",
        "                        <td id=\"T_42a80034_edf2_11ea_8838_5254002c00d9row16_col5\" class=\"data row16 col5\" >0.550076</td>\n",
        "                        <td id=\"T_42a80034_edf2_11ea_8838_5254002c00d9row16_col6\" class=\"data row16 col6\" >0.736049</td>\n",
        "                        <td id=\"T_42a80034_edf2_11ea_8838_5254002c00d9row16_col7\" class=\"data row16 col7\" >0.451117</td>\n",
        "                        <td id=\"T_42a80034_edf2_11ea_8838_5254002c00d9row16_col8\" class=\"data row16 col8\" >0.518674</td>\n",
        "                        <td id=\"T_42a80034_edf2_11ea_8838_5254002c00d9row16_col9\" class=\"data row16 col9\" >0.750201</td>\n",
        "                        <td id=\"T_42a80034_edf2_11ea_8838_5254002c00d9row16_col10\" class=\"data row16 col10\" >0.696343</td>\n",
        "                        <td id=\"T_42a80034_edf2_11ea_8838_5254002c00d9row16_col11\" class=\"data row16 col11\" >0.691917</td>\n",
        "                        <td id=\"T_42a80034_edf2_11ea_8838_5254002c00d9row16_col12\" class=\"data row16 col12\" >0.649927</td>\n",
        "                        <td id=\"T_42a80034_edf2_11ea_8838_5254002c00d9row16_col13\" class=\"data row16 col13\" >0.301128</td>\n",
        "                        <td id=\"T_42a80034_edf2_11ea_8838_5254002c00d9row16_col14\" class=\"data row16 col14\" >0.035637</td>\n",
        "                        <td id=\"T_42a80034_edf2_11ea_8838_5254002c00d9row16_col15\" class=\"data row16 col15\" >-0.147259</td>\n",
        "                        <td id=\"T_42a80034_edf2_11ea_8838_5254002c00d9row16_col16\" class=\"data row16 col16\" >1.000000</td>\n",
        "            </tr>\n",
        "    </tbody></table>"
       ],
       "output_type": "pyout",
       "prompt_number": 21,
       "text": [
        "<pandas.io.formats.style.Styler at 0x7fb11441ff40>"
       ]
      }
     ],
     "prompt_number": 21
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "# Scatter plot of Stringency index and Rt\n",
      "df = track_df.copy()\n",
      "sns.scatterplot(data=df, x=\"Stringency_index\", y=\"Rt\", hue=\"Country\", legend=\"brief\", marker=\"+\")\n",
      "bbox_to_anchor=(1.02, 0)\n",
      "bbox_loc=\"lower left\"\n",
      "plt.legend(bbox_to_anchor=bbox_to_anchor, loc=bbox_loc, borderaxespad=0)\n",
      "plt.title(\"Relationship of Stringency index and reproduction number\")\n",
      "plt.ylabel(\"Reproduction number\")\n",
      "plt.xlabel(\"Stringency index\")\n",
      "plt.show()"
     ],
     "language": "python",
     "metadata": {},
     "outputs": [
      {
       "output_type": "display_data",
       "png": "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\n",
       "text": [
        "<Figure size 432x288 with 1 Axes>"
       ]
      }
     ],
     "prompt_number": 22
    }
   ],
   "metadata": {}
  }
 ]
}
