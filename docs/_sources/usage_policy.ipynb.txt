{
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3.8.2 64-bit ('.venv': venv)",
   "name": "python_defaultSpec_1597669925034"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.8.2-final"
  },
  "name": ""
 },
 "nbformat": 3,
 "nbformat_minor": 0,
 "worksheets": [
  {
   "cells": [
    {
     "cell_type": "markdown",
     "metadata": {},
     "source": [
      "# Usage (details: policy measures)\n",
      "Here, we will analyse the relationship of policy measures and parameter values of SIR-derived ODE models. Policy measures are tracked by [Oxford Covid-19 Government Response Tracker (OxCGRT)](https://github.com/OxCGRT/covid-policy-tracker)."
     ]
    },
    {
     "cell_type": "heading",
     "level": 2,
     "metadata": {},
     "source": [
      "Preparation"
     ]
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "# Standard users\n",
      "# !pip install covsirphy\n",
      "# Developers (Note: this notebook is in example directory)\n",
      "import os\n",
      "os.chdir(\"../\")"
     ],
     "language": "python",
     "metadata": {},
     "outputs": [],
     "prompt_number": 1
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "from pprint import pprint"
     ],
     "language": "python",
     "metadata": {},
     "outputs": [],
     "prompt_number": 2
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "import covsirphy as cs\n",
      "cs.__version__"
     ],
     "language": "python",
     "metadata": {},
     "outputs": [
      {
       "output_type": "pyout",
       "prompt_number": 3,
       "text": [
        "'2.7.3-alpha.new.202.203.206'"
       ]
      }
     ],
     "prompt_number": 3
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "# Standard users and developers\n",
      "data_loader = cs.DataLoader(\"input\")\n",
      "# The number of cases (JHU style)\n",
      "jhu_data = data_loader.jhu(verbose=False)\n",
      "# Population in each country\n",
      "population_data = data_loader.population(verbose=False)\n",
      "# Government Response Tracker (OxCGRT)\n",
      "oxcgrt_data = data_loader.oxcgrt(verbose=False)\n",
      "# Description/citation\n",
      "print(oxcgrt_data.citation)"
     ],
     "language": "python",
     "metadata": {
      "tags": []
     },
     "outputs": [
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "(Secondary source) Guidotti, E., Ardia, D., (2020), \"COVID-19 Data Hub\", Working paper, doi: 10.13140/RG.2.2.11649.81763.\n",
        "We can get Citation list of primary sources with DataLoader(...).covid19dh_citation"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      }
     ],
     "prompt_number": 4
    },
    {
     "cell_type": "markdown",
     "metadata": {},
     "source": [
      "## Class for policy measure analysis\n",
      "We will `PolicyMeasures` class to find relationship of policy measures and parameter values of SIR-derived ODE models."
     ]
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "# Create analyser with tau value 360 [min] (can be changed)\n",
      "analyser = cs.PolicyMeasures(jhu_data, population_data, oxcgrt_data, tau=360)\n",
      "# The number of registerd countries\n",
      "len(analyser.countries)"
     ],
     "language": "python",
     "metadata": {
      "tags": []
     },
     "outputs": [
      {
       "output_type": "pyout",
       "prompt_number": 5,
       "text": [
        "184"
       ]
      }
     ],
     "prompt_number": 5
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "# We can get Scenario instance for detailed scenario analysis\n",
      "type(analyser.scenario(\"Japan\"))"
     ],
     "language": "python",
     "metadata": {},
     "outputs": [
      {
       "output_type": "pyout",
       "prompt_number": 6,
       "text": [
        "covsirphy.analysis.scenario.Scenario"
       ]
      }
     ],
     "prompt_number": 6
    },
    {
     "cell_type": "markdown",
     "metadata": {},
     "source": [
      "## Set phases with S-R trend analysis\n",
      "We will perform S-R trend analysis to set phases in all countries. Countries which do not have **9th phases** will be un-registered for the next analysis. This number will be adjusted for your analysis."
     ]
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "# Show the number of phases of all countries\n",
      "analyser.trend()\n",
      "pprint(analyser.phase_len(), compact=True)"
     ],
     "language": "python",
     "metadata": {},
     "outputs": [
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "{"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "2"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ": "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "['Bahamas', 'Dominica', 'Papua New Guinea', 'Fiji']"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        " "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "3"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ": "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "["
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Lesotho'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Seychelles'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Tanzania'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Zimbabwe'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Brunei'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Mauritius'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        "     "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Namibia'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Gambia'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "]"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        " "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "4"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ": "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "["
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Sao Tome and Principe'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Angola'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Trinidad and Tobago'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Norway'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        "     "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'New Zealand'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Saint Lucia'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Palestine'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Kyrgyzstan'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Grenada'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        "     "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Antigua and Barbuda'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Ireland'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Guatemala'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Equatorial Guinea'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        "     "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'South Sudan'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Central African Republic'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Eritrea'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Botswana'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        "     "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Iceland'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Belize'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Zambia'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Montenegro'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Venezuela'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "]"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        " "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "5"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ": "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "["
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Cambodia'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Ethiopia'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Australia'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Syria'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Japan'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Kazakhstan'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        "     "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Lebanon'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Mozambique'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Liechtenstein'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Spain'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Paraguay'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        "     "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Philippines'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Maldives'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Suriname'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Andorra'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Comoros'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Slovakia'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        "     "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Saint Vincent and the Grenadines'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Chad'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Guinea-Bissau'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Malawi'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        "     "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Libya'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Guyana'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Benin'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Madagascar'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Swaziland'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Costa Rica'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "]"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        " "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "6"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ": "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "["
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Malta'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Kosovo'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Niger'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Slovenia'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Taiwan'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Oman'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Burundi'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        "     "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Luxembourg'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'San Marino'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Vietnam'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Cape Verde'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Mongolia'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        "     "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Barbados'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Qatar'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Croatia'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'South Africa'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Afghanistan'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Israel'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        "     "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Rwanda'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Argentina'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Colombia'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Mauritania'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Tajikistan'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Bermuda'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        "     "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Macedonia'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Yemen'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Iraq'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Djibouti'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Uganda'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Somalia'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Congo'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        "     "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Kenya'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Morocco'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Uzbekistan'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Greece'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'India'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Sri Lanka'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        "     "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Bosnia and Herzegovina'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "]"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        " "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "7"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ": "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "["
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Sierra Leone'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Bulgaria'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Bhutan'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Netherlands'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Nepal'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Thailand'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        "     "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Cyprus'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Chile'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Pakistan'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Jordan'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Latvia'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Uruguay'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Serbia'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        "     "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'China'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Azerbaijan'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Tunisia'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Cameroon'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Dominican Republic'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Togo'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        "     "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Germany'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Panama'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Armenia'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Estonia'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Algeria'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Finland'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        "     "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Nicaragua'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Sudan'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Bolivia'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'El Salvador'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Ecuador'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Ghana'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        "     "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Haiti'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Monaco'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Canada'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Honduras'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Switzerland'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Albania'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "]"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        " "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "8"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ": "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "["
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Saudi Arabia'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Jamaica'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Nigeria'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Burkina Faso'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Malaysia'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Turkey'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        "     "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Denmark'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Gabon'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'United States'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Belgium'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Egypt'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Liberia'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        "     "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Singapore'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Lithuania'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Georgia'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Hungary'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Mali'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Cuba'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Ukraine'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        "     "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Brazil'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Belarus'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Myanmar'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Indonesia'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Austria'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "]"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        " "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "9"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ": "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "["
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Portugal'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'United Arab Emirates'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Czech Republic'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Moldova'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'France'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        "     "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Mexico'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Korea, South'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Italy'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Bangladesh'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Kuwait'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Russia'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        "     "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Romania'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Peru'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "]"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        " "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "10"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ": "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "['Senegal', 'Iran', 'Bahrain', 'Poland']"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        " "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "11"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ": "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "['Guinea']"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "}"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      }
     ],
     "prompt_number": 7
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "# Set phases with S-R trend analysis\n",
      "analyser.trend(min_len=9)\n",
      "# The number of countries\n",
      "len(analyser.countries)"
     ],
     "language": "python",
     "metadata": {},
     "outputs": [
      {
       "output_type": "pyout",
       "prompt_number": 8,
       "text": [
        "18"
       ]
      }
     ],
     "prompt_number": 8
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "phase_len_dict = analyser.phase_len()\n",
      "pprint(phase_len_dict, compact=True)"
     ],
     "language": "python",
     "metadata": {
      "tags": []
     },
     "outputs": [
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "{"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "9"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ": "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "["
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Portugal'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'United Arab Emirates'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Czech Republic'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Moldova'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'France'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        "     "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Mexico'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Korea, South'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Italy'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Bangladesh'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Kuwait'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Russia'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        "     "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Romania'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Peru'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "]"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        " "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "10"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ": "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "['Senegal', 'Iran', 'Bahrain', 'Poland']"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        " "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "11"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ": "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "['Guinea']"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "}"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      }
     ],
     "prompt_number": 9
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "# Here, only show the countries which have the most phases\n",
      "countries_show = max(phase_len_dict.items(), key=lambda x: x[0])[1]\n",
      "# Show summary\n",
      "analyser.summary(countries=countries_show)"
     ],
     "language": "python",
     "metadata": {
      "tags": []
     },
     "outputs": [
      {
       "html": [
        "<div>\n",
        "<style scoped>\n",
        "    .dataframe tbody tr th:only-of-type {\n",
        "        vertical-align: middle;\n",
        "    }\n",
        "\n",
        "    .dataframe tbody tr th {\n",
        "        vertical-align: top;\n",
        "    }\n",
        "\n",
        "    .dataframe thead th {\n",
        "        text-align: right;\n",
        "    }\n",
        "</style>\n",
        "<table border=\"1\" class=\"dataframe\">\n",
        "  <thead>\n",
        "    <tr style=\"text-align: right;\">\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th>Type</th>\n",
        "      <th>Start</th>\n",
        "      <th>End</th>\n",
        "      <th>Population</th>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>Country</th>\n",
        "      <th>Phase</th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "    </tr>\n",
        "  </thead>\n",
        "  <tbody>\n",
        "    <tr>\n",
        "      <th rowspan=\"11\" valign=\"top\">Guinea</th>\n",
        "      <th>1st</th>\n",
        "      <td>Past</td>\n",
        "      <td>02May2020</td>\n",
        "      <td>11May2020</td>\n",
        "      <td>12414318</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>2nd</th>\n",
        "      <td>Past</td>\n",
        "      <td>12May2020</td>\n",
        "      <td>20May2020</td>\n",
        "      <td>12414318</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>3rd</th>\n",
        "      <td>Past</td>\n",
        "      <td>21May2020</td>\n",
        "      <td>28May2020</td>\n",
        "      <td>12414318</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>4th</th>\n",
        "      <td>Past</td>\n",
        "      <td>29May2020</td>\n",
        "      <td>08Jun2020</td>\n",
        "      <td>12414318</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>5th</th>\n",
        "      <td>Past</td>\n",
        "      <td>09Jun2020</td>\n",
        "      <td>18Jun2020</td>\n",
        "      <td>12414318</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>6th</th>\n",
        "      <td>Past</td>\n",
        "      <td>19Jun2020</td>\n",
        "      <td>03Jul2020</td>\n",
        "      <td>12414318</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>7th</th>\n",
        "      <td>Past</td>\n",
        "      <td>04Jul2020</td>\n",
        "      <td>12Jul2020</td>\n",
        "      <td>12414318</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>8th</th>\n",
        "      <td>Past</td>\n",
        "      <td>13Jul2020</td>\n",
        "      <td>24Jul2020</td>\n",
        "      <td>12414318</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>9th</th>\n",
        "      <td>Past</td>\n",
        "      <td>25Jul2020</td>\n",
        "      <td>04Aug2020</td>\n",
        "      <td>12414318</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>10th</th>\n",
        "      <td>Past</td>\n",
        "      <td>05Aug2020</td>\n",
        "      <td>13Aug2020</td>\n",
        "      <td>12414318</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>11th</th>\n",
        "      <td>Past</td>\n",
        "      <td>14Aug2020</td>\n",
        "      <td>24Aug2020</td>\n",
        "      <td>12414318</td>\n",
        "    </tr>\n",
        "  </tbody>\n",
        "</table>\n",
        "</div>"
       ],
       "output_type": "pyout",
       "prompt_number": 10,
       "text": [
        "               Type      Start        End  Population\n",
        "Country Phase                                        \n",
        "Guinea  1st    Past  02May2020  11May2020    12414318\n",
        "        2nd    Past  12May2020  20May2020    12414318\n",
        "        3rd    Past  21May2020  28May2020    12414318\n",
        "        4th    Past  29May2020  08Jun2020    12414318\n",
        "        5th    Past  09Jun2020  18Jun2020    12414318\n",
        "        6th    Past  19Jun2020  03Jul2020    12414318\n",
        "        7th    Past  04Jul2020  12Jul2020    12414318\n",
        "        8th    Past  13Jul2020  24Jul2020    12414318\n",
        "        9th    Past  25Jul2020  04Aug2020    12414318\n",
        "        10th   Past  05Aug2020  13Aug2020    12414318\n",
        "        11th   Past  14Aug2020  24Aug2020    12414318"
       ]
      }
     ],
     "prompt_number": 10
    },
    {
     "cell_type": "markdown",
     "metadata": {},
     "source": [
      "## Parameter estimation\n",
      "we will estimate the parameter values with SIR-derived ODE models in each country."
     ]
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "# Parameter estimation with SIR-F model\n",
      "analyser.estimate(cs.SIRF)"
     ],
     "language": "python",
     "metadata": {
      "tags": []
     },
     "outputs": [
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n",
        "<SIR-F model: parameter estimation>"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "Running optimization with 4 CPUs..."
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tBGD,  7th phase (24Jul2020 - 04Aug2020): finished  328 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tCZE,  1st phase (08Apr2020 - 19Apr2020): finished 1530 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tSEN,  7th phase (11Jul2020 - 20Jul2020): finished 1521 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tCZE,  3rd phase (11May2020 - 03Jun2020): finished 1539 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tRUS,  6th phase (04Jul2020 - 14Jul2020): finished 1575 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tIRN,  9th phase (29Jul2020 - 09Aug2020): finished 1006 trials in 0 min 35 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tSEN,  2nd phase (14May2020 - 29May2020): finished 1217 trials in 0 min 45 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tIRN,  4th phase (29May2020 - 10Jun2020): finished 1487 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tARE,  2nd phase (13May2020 - 25May2020): finished 1485 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tARE,  5th phase (12Jun2020 - 23Jun2020): finished  992 trials in 0 min 35 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tARE,  1st phase (27Apr2020 - 12May2020): finished 1476 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tITA,  5th phase (02May2020 - 09May2020): finished  472 trials in 0 min 15 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tPER,  1st phase (06May2020 - 22May2020): finished 1475 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tIRN,  8th phase (17Jul2020 - 28Jul2020): finished  324 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tBHR,  7th phase (08Jul2020 - 15Jul2020): finished 1486 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tPOL,  6th phase (01Jul2020 - 14Jul2020): finished  277 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tFRA,  2nd phase (03Apr2020 - 12Apr2020): finished 1476 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tFRA,  5th phase (05May2020 - 27May2020): finished 1411 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tFRA,  4th phase (25Apr2020 - 04May2020): finished 1448 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tPOL,  8th phase (26Jul2020 - 06Aug2020): finished  466 trials in 0 min 15 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tPER,  7th phase (19Jul2020 - 28Jul2020): finished 1408 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tSEN,  6th phase (01Jul2020 - 10Jul2020): finished 1422 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tGIN, 11th phase (14Aug2020 - 24Aug2020): finished 1436 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tPRT,  6th phase (02Jul2020 - 10Jul2020): finished  304 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tGIN,  8th phase (13Jul2020 - 24Jul2020): finished 1402 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tGIN,  3rd phase (21May2020 - 28May2020): finished 1453 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tKWT,  2nd phase (25May2020 - 09Jun2020): finished 1423 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tPRT,  7th phase (11Jul2020 - 23Jul2020): finished  154 trials in 0 min  5 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tARE,  9th phase (28Jul2020 - 24Aug2020): finished 1426 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tRUS,  2nd phase (23May2020 - 30May2020): finished 1457 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tBHR,  8th phase (16Jul2020 - 26Jul2020): finished 1446 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tBHR,  4th phase (14Jun2020 - 21Jun2020): finished 1484 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tSEN,  3rd phase (30May2020 - 09Jun2020): finished 1438 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tBHR,  5th phase (22Jun2020 - 29Jun2020): finished 1455 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tRUS,  4th phase (14Jun2020 - 23Jun2020): finished 1455 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tMDA,  4th phase (25Jun2020 - 08Jul2020): finished 1463 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tFRA,  8th phase (10Jul2020 - 30Jul2020): finished  447 trials in 0 min 15 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tMDA,  5th phase (09Jul2020 - 20Jul2020): finished  463 trials in 0 min 15 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tGIN,  2nd phase (12May2020 - 20May2020): finished 1453 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tMDA,  2nd phase (04Jun2020 - 15Jun2020): finished  975 trials in 0 min 35 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tKWT,  1st phase (11May2020 - 24May2020): finished 1482 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tPOL,  2nd phase (09May2020 - 21May2020): finished  481 trials in 0 min 15 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tPER,  5th phase (24Jun2020 - 06Jul2020): finished 1515 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tBHR,  1st phase (06May2020 - 26May2020): finished 1495 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tBGD,  1st phase (27May2020 - 10Jun2020): finished 1491 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tROU,  9th phase (15Aug2020 - 24Aug2020): finished  324 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tCZE,  6th phase (18Jul2020 - 26Jul2020): finished  328 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tKOR,  8th phase (20Jul2020 - 07Aug2020): finished 1483 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tIRN,  7th phase (05Jul2020 - 16Jul2020): finished  169 trials in 0 min  5 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tKOR,  5th phase (23May2020 - 16Jun2020): finished 1472 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tITA,  7th phase (21May2020 - 08Jun2020): finished  289 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tRUS,  5th phase (24Jun2020 - 03Jul2020): finished 1482 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tMDA,  1st phase (13May2020 - 03Jun2020): finished 1469 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tIRN,  1st phase (29Mar2020 - 16Apr2020): finished 1487 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tBHR,  3rd phase (05Jun2020 - 13Jun2020): finished 1487 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tARE,  4th phase (04Jun2020 - 11Jun2020): finished  952 trials in 0 min 35 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tARE,  7th phase (03Jul2020 - 12Jul2020): finished 1486 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tKWT,  4th phase (23Jun2020 - 01Jul2020): finished  478 trials in 0 min 15 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tPOL,  1st phase (23Apr2020 - 08May2020): finished 1439 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tSEN,  8th phase (21Jul2020 - 30Jul2020): finished 1457 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tSEN,  9th phase (31Jul2020 - 12Aug2020): finished 1246 trials in 0 min 50 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tCZE,  2nd phase (20Apr2020 - 10May2020): finished  942 trials in 0 min 35 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tSEN, 10th phase (13Aug2020 - 24Aug2020): finished  969 trials in 0 min 35 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tBHR,  6th phase (30Jun2020 - 07Jul2020): finished 1442 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tPRT,  4th phase (12Jun2020 - 21Jun2020): finished  457 trials in 0 min 15 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tROU,  6th phase (16Jul2020 - 24Jul2020): finished 1472 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tPER,  9th phase (06Aug2020 - 24Aug2020): finished 1489 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tGIN,  7th phase (04Jul2020 - 12Jul2020): finished 1400 trials in 0 min 55 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tSEN,  5th phase (20Jun2020 - 30Jun2020): finished  172 trials in 0 min  5 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tMEX,  3rd phase (17Jun2020 - 26Jun2020): finished  474 trials in 0 min 15 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tIRN,  5th phase (11Jun2020 - 22Jun2020): finished  168 trials in 0 min  5 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tPRT,  1st phase (05May2020 - 17May2020): finished 1460 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tITA,  2nd phase (01Apr2020 - 12Apr2020): finished 1453 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tPER,  8th phase (29Jul2020 - 05Aug2020): finished 1487 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tKOR,  2nd phase (25Mar2020 - 05Apr2020): finished 1466 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tMDA,  3rd phase (16Jun2020 - 24Jun2020): finished  322 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tGIN,  4th phase (29May2020 - 08Jun2020): finished 1483 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tPOL,  9th phase (07Aug2020 - 15Aug2020): finished  316 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tGIN,  5th phase (09Jun2020 - 18Jun2020): finished 1504 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tROU,  5th phase (02Jul2020 - 15Jul2020): finished 1489 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tMEX,  6th phase (15Jul2020 - 22Jul2020): finished 1172 trials in 0 min 45 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tROU,  7th phase (25Jul2020 - 01Aug2020): finished  170 trials in 0 min  5 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tBGD,  6th phase (15Jul2020 - 23Jul2020): finished  318 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tKOR,  7th phase (03Jul2020 - 19Jul2020): finished 1464 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tIRN,  6th phase (23Jun2020 - 04Jul2020): finished  163 trials in 0 min  5 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tBGD,  2nd phase (11Jun2020 - 18Jun2020): finished 1456 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tBHR,  9th phase (27Jul2020 - 09Aug2020): finished  314 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tFRA,  1st phase (25Mar2020 - 02Apr2020): finished 1453 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tROU,  8th phase (02Aug2020 - 14Aug2020): finished  314 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tKWT,  3rd phase (10Jun2020 - 22Jun2020): finished  721 trials in 0 min 25 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tSEN,  1st phase (01May2020 - 13May2020): finished 1469 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tRUS,  1st phase (08May2020 - 22May2020): finished 1451 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tROU,  3rd phase (20May2020 - 13Jun2020): finished  604 trials in 0 min 20 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tPRT,  8th phase (24Jul2020 - 08Aug2020): finished  560 trials in 0 min 20 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tPER,  6th phase (07Jul2020 - 18Jul2020): finished 1454 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tPER,  3rd phase (31May2020 - 11Jun2020): finished 1413 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tMEX,  1st phase (21May2020 - 04Jun2020): finished 1413 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tPRT,  9th phase (09Aug2020 - 24Aug2020): finished  570 trials in 0 min 20 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tITA,  6th phase (10May2020 - 20May2020): finished  318 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tGIN, 10th phase (05Aug2020 - 13Aug2020): finished 1451 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tKWT,  6th phase (11Jul2020 - 21Jul2020): finished  432 trials in 0 min 15 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tGIN,  6th phase (19Jun2020 - 03Jul2020): finished 1437 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tGIN,  9th phase (25Jul2020 - 04Aug2020): finished 1446 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tKOR,  3rd phase (06Apr2020 - 29Apr2020): finished 1413 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tCZE,  8th phase (06Aug2020 - 13Aug2020): finished  955 trials in 0 min 35 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tPOL,  5th phase (17Jun2020 - 30Jun2020): finished  169 trials in 0 min  5 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tPOL,  3rd phase (22May2020 - 03Jun2020): finished 1421 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tKOR,  1st phase (15Mar2020 - 24Mar2020): finished 1410 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tKOR,  6th phase (17Jun2020 - 02Jul2020): finished 1382 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tKOR,  9th phase (08Aug2020 - 24Aug2020): finished 1408 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tGIN,  1st phase (02May2020 - 11May2020): finished 1453 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tROU,  1st phase (16Apr2020 - 01May2020): finished 1412 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tMDA,  7th phase (30Jul2020 - 07Aug2020): finished 1365 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tPRT,  5th phase (22Jun2020 - 01Jul2020): finished  154 trials in 0 min  5 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tIRN,  3rd phase (11May2020 - 28May2020): finished 1371 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tMDA,  8th phase (08Aug2020 - 15Aug2020): finished  270 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tKWT,  7th phase (22Jul2020 - 31Jul2020): finished  303 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tKWT,  9th phase (12Aug2020 - 24Aug2020): finished  426 trials in 0 min 15 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tCZE,  4th phase (04Jun2020 - 25Jun2020): finished 1388 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tARE,  3rd phase (26May2020 - 03Jun2020): finished 1008 trials in 0 min 40 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tPRT,  2nd phase (18May2020 - 29May2020): finished 1433 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tFRA,  7th phase (19Jun2020 - 09Jul2020): finished 1130 trials in 0 min 40 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tMEX,  5th phase (07Jul2020 - 14Jul2020): finished  206 trials in 0 min  5 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tRUS,  8th phase (26Jul2020 - 07Aug2020): finished 1581 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tROU,  2nd phase (02May2020 - 19May2020): finished 1567 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tITA,  4th phase (21Apr2020 - 01May2020): finished  134 trials in 0 min  5 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tITA,  1st phase (24Mar2020 - 31Mar2020): finished 1389 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tITA,  9th phase (22Jul2020 - 24Aug2020): finished 1147 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tPOL,  7th phase (15Jul2020 - 25Jul2020): finished  231 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tROU,  4th phase (14Jun2020 - 01Jul2020): finished 1044 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tCZE,  7th phase (27Jul2020 - 05Aug2020): finished 1019 trials in 1 min  1 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tKWT,  8th phase (01Aug2020 - 11Aug2020): finished  255 trials in 0 min 15 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tMEX,  7th phase (23Jul2020 - 04Aug2020): finished  483 trials in 0 min 30 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tMEX,  8th phase (05Aug2020 - 12Aug2020): finished  915 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tARE,  6th phase (24Jun2020 - 02Jul2020): finished  465 trials in 0 min 30 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tFRA,  9th phase (31Jul2020 - 24Aug2020): finished  534 trials in 0 min 30 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tRUS,  3rd phase (31May2020 - 13Jun2020): finished  919 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tITA,  3rd phase (13Apr2020 - 20Apr2020): finished  244 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tPRT,  3rd phase (30May2020 - 11Jun2020): finished 1050 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tBGD,  3rd phase (19Jun2020 - 27Jun2020): finished 1071 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tBGD,  4th phase (28Jun2020 - 06Jul2020): finished  569 trials in 0 min 30 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tCZE,  5th phase (26Jun2020 - 17Jul2020): finished 1070 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tFRA,  3rd phase (13Apr2020 - 24Apr2020): finished 1073 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tMDA,  6th phase (21Jul2020 - 29Jul2020): finished  354 trials in 0 min 15 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tMEX,  2nd phase (05Jun2020 - 16Jun2020): finished  942 trials in 0 min 45 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tITA,  8th phase (09Jun2020 - 21Jul2020): finished  605 trials in 0 min 25 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tIRN, 10th phase (10Aug2020 - 24Aug2020): finished 1255 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tFRA,  6th phase (28May2020 - 18Jun2020): finished 1222 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tIRN,  2nd phase (17Apr2020 - 10May2020): finished  130 trials in 0 min  5 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tKOR,  4th phase (30Apr2020 - 22May2020): finished  280 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tBHR,  2nd phase (27May2020 - 04Jun2020): finished 1025 trials in 0 min 40 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tSEN,  4th phase (10Jun2020 - 19Jun2020): finished 1425 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tPOL,  4th phase (04Jun2020 - 16Jun2020): finished  541 trials in 0 min 20 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tMDA,  9th phase (16Aug2020 - 24Aug2020): finished 1610 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tARE,  8th phase (13Jul2020 - 27Jul2020): finished  341 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tMEX,  4th phase (27Jun2020 - 06Jul2020): finished  365 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "Completed optimization. Total: 29 min  8 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      }
     ],
     "prompt_number": 11
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "# Show summary\n",
      "analyser.summary(countries=countries_show)"
     ],
     "language": "python",
     "metadata": {},
     "outputs": [
      {
       "html": [
        "<div>\n",
        "<style scoped>\n",
        "    .dataframe tbody tr th:only-of-type {\n",
        "        vertical-align: middle;\n",
        "    }\n",
        "\n",
        "    .dataframe tbody tr th {\n",
        "        vertical-align: top;\n",
        "    }\n",
        "\n",
        "    .dataframe thead th {\n",
        "        text-align: right;\n",
        "    }\n",
        "</style>\n",
        "<table border=\"1\" class=\"dataframe\">\n",
        "  <thead>\n",
        "    <tr style=\"text-align: right;\">\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th>Type</th>\n",
        "      <th>Start</th>\n",
        "      <th>End</th>\n",
        "      <th>Population</th>\n",
        "      <th>ODE</th>\n",
        "      <th>Rt</th>\n",
        "      <th>theta</th>\n",
        "      <th>kappa</th>\n",
        "      <th>rho</th>\n",
        "      <th>sigma</th>\n",
        "      <th>tau</th>\n",
        "      <th>1/beta [day]</th>\n",
        "      <th>1/alpha2 [day]</th>\n",
        "      <th>1/gamma [day]</th>\n",
        "      <th>alpha1 [-]</th>\n",
        "      <th>RMSLE</th>\n",
        "      <th>Trials</th>\n",
        "      <th>Runtime</th>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>Country</th>\n",
        "      <th>Phase</th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "    </tr>\n",
        "  </thead>\n",
        "  <tbody>\n",
        "    <tr>\n",
        "      <th rowspan=\"11\" valign=\"top\">Guinea</th>\n",
        "      <th>1st</th>\n",
        "      <td>Past</td>\n",
        "      <td>02May2020</td>\n",
        "      <td>11May2020</td>\n",
        "      <td>12414318</td>\n",
        "      <td>SIR-F</td>\n",
        "      <td>1.79</td>\n",
        "      <td>0.000437</td>\n",
        "      <td>0.000098</td>\n",
        "      <td>0.012660</td>\n",
        "      <td>0.006991</td>\n",
        "      <td>360</td>\n",
        "      <td>19</td>\n",
        "      <td>2549</td>\n",
        "      <td>35</td>\n",
        "      <td>0.000</td>\n",
        "      <td>0.073806</td>\n",
        "      <td>1453</td>\n",
        "      <td>1 min  0 sec</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>2nd</th>\n",
        "      <td>Past</td>\n",
        "      <td>12May2020</td>\n",
        "      <td>20May2020</td>\n",
        "      <td>12414318</td>\n",
        "      <td>SIR-F</td>\n",
        "      <td>0.48</td>\n",
        "      <td>0.021519</td>\n",
        "      <td>0.000050</td>\n",
        "      <td>0.004527</td>\n",
        "      <td>0.009106</td>\n",
        "      <td>360</td>\n",
        "      <td>55</td>\n",
        "      <td>5041</td>\n",
        "      <td>27</td>\n",
        "      <td>0.022</td>\n",
        "      <td>0.118944</td>\n",
        "      <td>1453</td>\n",
        "      <td>1 min  0 sec</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>3rd</th>\n",
        "      <td>Past</td>\n",
        "      <td>21May2020</td>\n",
        "      <td>28May2020</td>\n",
        "      <td>12414318</td>\n",
        "      <td>SIR-F</td>\n",
        "      <td>1.46</td>\n",
        "      <td>0.000822</td>\n",
        "      <td>0.000085</td>\n",
        "      <td>0.009291</td>\n",
        "      <td>0.006289</td>\n",
        "      <td>360</td>\n",
        "      <td>26</td>\n",
        "      <td>2957</td>\n",
        "      <td>39</td>\n",
        "      <td>0.001</td>\n",
        "      <td>0.032680</td>\n",
        "      <td>1453</td>\n",
        "      <td>1 min  0 sec</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>4th</th>\n",
        "      <td>Past</td>\n",
        "      <td>29May2020</td>\n",
        "      <td>08Jun2020</td>\n",
        "      <td>12414318</td>\n",
        "      <td>SIR-F</td>\n",
        "      <td>0.60</td>\n",
        "      <td>0.000936</td>\n",
        "      <td>0.000031</td>\n",
        "      <td>0.010134</td>\n",
        "      <td>0.016840</td>\n",
        "      <td>360</td>\n",
        "      <td>24</td>\n",
        "      <td>7996</td>\n",
        "      <td>14</td>\n",
        "      <td>0.001</td>\n",
        "      <td>0.061890</td>\n",
        "      <td>1483</td>\n",
        "      <td>1 min  0 sec</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>5th</th>\n",
        "      <td>Past</td>\n",
        "      <td>09Jun2020</td>\n",
        "      <td>18Jun2020</td>\n",
        "      <td>12414318</td>\n",
        "      <td>SIR-F</td>\n",
        "      <td>0.89</td>\n",
        "      <td>0.001821</td>\n",
        "      <td>0.000036</td>\n",
        "      <td>0.011279</td>\n",
        "      <td>0.012559</td>\n",
        "      <td>360</td>\n",
        "      <td>22</td>\n",
        "      <td>6938</td>\n",
        "      <td>19</td>\n",
        "      <td>0.002</td>\n",
        "      <td>0.033509</td>\n",
        "      <td>1504</td>\n",
        "      <td>1 min  0 sec</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>6th</th>\n",
        "      <td>Past</td>\n",
        "      <td>19Jun2020</td>\n",
        "      <td>03Jul2020</td>\n",
        "      <td>12414318</td>\n",
        "      <td>SIR-F</td>\n",
        "      <td>0.55</td>\n",
        "      <td>0.000520</td>\n",
        "      <td>0.000076</td>\n",
        "      <td>0.006454</td>\n",
        "      <td>0.011723</td>\n",
        "      <td>360</td>\n",
        "      <td>38</td>\n",
        "      <td>3298</td>\n",
        "      <td>21</td>\n",
        "      <td>0.001</td>\n",
        "      <td>0.057808</td>\n",
        "      <td>1437</td>\n",
        "      <td>1 min  0 sec</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>7th</th>\n",
        "      <td>Past</td>\n",
        "      <td>04Jul2020</td>\n",
        "      <td>12Jul2020</td>\n",
        "      <td>12414318</td>\n",
        "      <td>SIR-F</td>\n",
        "      <td>1.59</td>\n",
        "      <td>0.000632</td>\n",
        "      <td>0.000072</td>\n",
        "      <td>0.014275</td>\n",
        "      <td>0.008876</td>\n",
        "      <td>360</td>\n",
        "      <td>17</td>\n",
        "      <td>3487</td>\n",
        "      <td>28</td>\n",
        "      <td>0.001</td>\n",
        "      <td>0.020469</td>\n",
        "      <td>1400</td>\n",
        "      <td>0 min 55 sec</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>8th</th>\n",
        "      <td>Past</td>\n",
        "      <td>13Jul2020</td>\n",
        "      <td>24Jul2020</td>\n",
        "      <td>12414318</td>\n",
        "      <td>SIR-F</td>\n",
        "      <td>0.60</td>\n",
        "      <td>0.001608</td>\n",
        "      <td>0.000084</td>\n",
        "      <td>0.016534</td>\n",
        "      <td>0.027293</td>\n",
        "      <td>360</td>\n",
        "      <td>15</td>\n",
        "      <td>2987</td>\n",
        "      <td>9</td>\n",
        "      <td>0.002</td>\n",
        "      <td>0.069248</td>\n",
        "      <td>1402</td>\n",
        "      <td>1 min  0 sec</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>9th</th>\n",
        "      <td>Past</td>\n",
        "      <td>25Jul2020</td>\n",
        "      <td>04Aug2020</td>\n",
        "      <td>12414318</td>\n",
        "      <td>SIR-F</td>\n",
        "      <td>1.06</td>\n",
        "      <td>0.000752</td>\n",
        "      <td>0.000157</td>\n",
        "      <td>0.015658</td>\n",
        "      <td>0.014671</td>\n",
        "      <td>360</td>\n",
        "      <td>15</td>\n",
        "      <td>1587</td>\n",
        "      <td>17</td>\n",
        "      <td>0.001</td>\n",
        "      <td>0.034704</td>\n",
        "      <td>1446</td>\n",
        "      <td>1 min  0 sec</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>10th</th>\n",
        "      <td>Past</td>\n",
        "      <td>05Aug2020</td>\n",
        "      <td>13Aug2020</td>\n",
        "      <td>12414318</td>\n",
        "      <td>SIR-F</td>\n",
        "      <td>1.61</td>\n",
        "      <td>0.001089</td>\n",
        "      <td>0.000026</td>\n",
        "      <td>0.022360</td>\n",
        "      <td>0.013874</td>\n",
        "      <td>360</td>\n",
        "      <td>11</td>\n",
        "      <td>9584</td>\n",
        "      <td>18</td>\n",
        "      <td>0.001</td>\n",
        "      <td>0.055944</td>\n",
        "      <td>1451</td>\n",
        "      <td>1 min  0 sec</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>11th</th>\n",
        "      <td>Past</td>\n",
        "      <td>14Aug2020</td>\n",
        "      <td>24Aug2020</td>\n",
        "      <td>12414318</td>\n",
        "      <td>SIR-F</td>\n",
        "      <td>1.50</td>\n",
        "      <td>0.000821</td>\n",
        "      <td>0.000085</td>\n",
        "      <td>0.017449</td>\n",
        "      <td>0.011571</td>\n",
        "      <td>360</td>\n",
        "      <td>14</td>\n",
        "      <td>2955</td>\n",
        "      <td>21</td>\n",
        "      <td>0.001</td>\n",
        "      <td>0.025746</td>\n",
        "      <td>1436</td>\n",
        "      <td>1 min  0 sec</td>\n",
        "    </tr>\n",
        "  </tbody>\n",
        "</table>\n",
        "</div>"
       ],
       "output_type": "pyout",
       "prompt_number": 12,
       "text": [
        "               Type      Start        End  Population    ODE    Rt     theta  \\\n",
        "Country Phase                                                                  \n",
        "Guinea  1st    Past  02May2020  11May2020    12414318  SIR-F  1.79  0.000437   \n",
        "        2nd    Past  12May2020  20May2020    12414318  SIR-F  0.48  0.021519   \n",
        "        3rd    Past  21May2020  28May2020    12414318  SIR-F  1.46  0.000822   \n",
        "        4th    Past  29May2020  08Jun2020    12414318  SIR-F  0.60  0.000936   \n",
        "        5th    Past  09Jun2020  18Jun2020    12414318  SIR-F  0.89  0.001821   \n",
        "        6th    Past  19Jun2020  03Jul2020    12414318  SIR-F  0.55  0.000520   \n",
        "        7th    Past  04Jul2020  12Jul2020    12414318  SIR-F  1.59  0.000632   \n",
        "        8th    Past  13Jul2020  24Jul2020    12414318  SIR-F  0.60  0.001608   \n",
        "        9th    Past  25Jul2020  04Aug2020    12414318  SIR-F  1.06  0.000752   \n",
        "        10th   Past  05Aug2020  13Aug2020    12414318  SIR-F  1.61  0.001089   \n",
        "        11th   Past  14Aug2020  24Aug2020    12414318  SIR-F  1.50  0.000821   \n",
        "\n",
        "                  kappa       rho     sigma  tau  1/beta [day]  \\\n",
        "Country Phase                                                    \n",
        "Guinea  1st    0.000098  0.012660  0.006991  360            19   \n",
        "        2nd    0.000050  0.004527  0.009106  360            55   \n",
        "        3rd    0.000085  0.009291  0.006289  360            26   \n",
        "        4th    0.000031  0.010134  0.016840  360            24   \n",
        "        5th    0.000036  0.011279  0.012559  360            22   \n",
        "        6th    0.000076  0.006454  0.011723  360            38   \n",
        "        7th    0.000072  0.014275  0.008876  360            17   \n",
        "        8th    0.000084  0.016534  0.027293  360            15   \n",
        "        9th    0.000157  0.015658  0.014671  360            15   \n",
        "        10th   0.000026  0.022360  0.013874  360            11   \n",
        "        11th   0.000085  0.017449  0.011571  360            14   \n",
        "\n",
        "               1/alpha2 [day]  1/gamma [day]  alpha1 [-]     RMSLE  Trials  \\\n",
        "Country Phase                                                                \n",
        "Guinea  1st              2549             35       0.000  0.073806    1453   \n",
        "        2nd              5041             27       0.022  0.118944    1453   \n",
        "        3rd              2957             39       0.001  0.032680    1453   \n",
        "        4th              7996             14       0.001  0.061890    1483   \n",
        "        5th              6938             19       0.002  0.033509    1504   \n",
        "        6th              3298             21       0.001  0.057808    1437   \n",
        "        7th              3487             28       0.001  0.020469    1400   \n",
        "        8th              2987              9       0.002  0.069248    1402   \n",
        "        9th              1587             17       0.001  0.034704    1446   \n",
        "        10th             9584             18       0.001  0.055944    1451   \n",
        "        11th             2955             21       0.001  0.025746    1436   \n",
        "\n",
        "                    Runtime  \n",
        "Country Phase                \n",
        "Guinea  1st    1 min  0 sec  \n",
        "        2nd    1 min  0 sec  \n",
        "        3rd    1 min  0 sec  \n",
        "        4th    1 min  0 sec  \n",
        "        5th    1 min  0 sec  \n",
        "        6th    1 min  0 sec  \n",
        "        7th    0 min 55 sec  \n",
        "        8th    1 min  0 sec  \n",
        "        9th    1 min  0 sec  \n",
        "        10th   1 min  0 sec  \n",
        "        11th   1 min  0 sec  "
       ]
      }
     ],
     "prompt_number": 12
    },
    {
     "cell_type": "markdown",
     "metadata": {},
     "source": [
      "## Compare the history of parameters\n",
      "Here, compare the history of parameter values if countries."
     ]
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "# All parameter/day parameter/Rt/OxCGRT\n",
      "analyser.track().head()"
     ],
     "language": "python",
     "metadata": {},
     "outputs": [
      {
       "html": [
        "<div>\n",
        "<style scoped>\n",
        "    .dataframe tbody tr th:only-of-type {\n",
        "        vertical-align: middle;\n",
        "    }\n",
        "\n",
        "    .dataframe tbody tr th {\n",
        "        vertical-align: top;\n",
        "    }\n",
        "\n",
        "    .dataframe thead th {\n",
        "        text-align: right;\n",
        "    }\n",
        "</style>\n",
        "<table border=\"1\" class=\"dataframe\">\n",
        "  <thead>\n",
        "    <tr style=\"text-align: right;\">\n",
        "      <th></th>\n",
        "      <th>Date</th>\n",
        "      <th>Country</th>\n",
        "      <th>theta</th>\n",
        "      <th>kappa</th>\n",
        "      <th>rho</th>\n",
        "      <th>sigma</th>\n",
        "      <th>alpha1 [-]</th>\n",
        "      <th>1/alpha2 [day]</th>\n",
        "      <th>1/beta [day]</th>\n",
        "      <th>1/gamma [day]</th>\n",
        "      <th>...</th>\n",
        "      <th>Cancel_events</th>\n",
        "      <th>Gatherings_restrictions</th>\n",
        "      <th>Transport_closing</th>\n",
        "      <th>Stay_home_restrictions</th>\n",
        "      <th>Internal_movement_restrictions</th>\n",
        "      <th>International_movement_restrictions</th>\n",
        "      <th>Information_campaigns</th>\n",
        "      <th>Testing_policy</th>\n",
        "      <th>Contact_tracing</th>\n",
        "      <th>Stringency_index</th>\n",
        "    </tr>\n",
        "  </thead>\n",
        "  <tbody>\n",
        "    <tr>\n",
        "      <th>0</th>\n",
        "      <td>2020-05-05</td>\n",
        "      <td>Portugal</td>\n",
        "      <td>0.0183221</td>\n",
        "      <td>8.46274e-05</td>\n",
        "      <td>0.00258809</td>\n",
        "      <td>0.00183821</td>\n",
        "      <td>0.018</td>\n",
        "      <td>2954</td>\n",
        "      <td>96</td>\n",
        "      <td>136</td>\n",
        "      <td>...</td>\n",
        "      <td>2</td>\n",
        "      <td>4</td>\n",
        "      <td>1</td>\n",
        "      <td>1</td>\n",
        "      <td>1</td>\n",
        "      <td>3</td>\n",
        "      <td>2</td>\n",
        "      <td>3</td>\n",
        "      <td>1</td>\n",
        "      <td>75.0</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>1</th>\n",
        "      <td>2020-05-06</td>\n",
        "      <td>Portugal</td>\n",
        "      <td>0.0183221</td>\n",
        "      <td>8.46274e-05</td>\n",
        "      <td>0.00258809</td>\n",
        "      <td>0.00183821</td>\n",
        "      <td>0.018</td>\n",
        "      <td>2954</td>\n",
        "      <td>96</td>\n",
        "      <td>136</td>\n",
        "      <td>...</td>\n",
        "      <td>2</td>\n",
        "      <td>4</td>\n",
        "      <td>1</td>\n",
        "      <td>1</td>\n",
        "      <td>1</td>\n",
        "      <td>3</td>\n",
        "      <td>2</td>\n",
        "      <td>3</td>\n",
        "      <td>1</td>\n",
        "      <td>75.0</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>2</th>\n",
        "      <td>2020-05-07</td>\n",
        "      <td>Portugal</td>\n",
        "      <td>0.0183221</td>\n",
        "      <td>8.46274e-05</td>\n",
        "      <td>0.00258809</td>\n",
        "      <td>0.00183821</td>\n",
        "      <td>0.018</td>\n",
        "      <td>2954</td>\n",
        "      <td>96</td>\n",
        "      <td>136</td>\n",
        "      <td>...</td>\n",
        "      <td>2</td>\n",
        "      <td>4</td>\n",
        "      <td>1</td>\n",
        "      <td>1</td>\n",
        "      <td>1</td>\n",
        "      <td>3</td>\n",
        "      <td>2</td>\n",
        "      <td>3</td>\n",
        "      <td>1</td>\n",
        "      <td>75.0</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>3</th>\n",
        "      <td>2020-05-08</td>\n",
        "      <td>Portugal</td>\n",
        "      <td>0.0183221</td>\n",
        "      <td>8.46274e-05</td>\n",
        "      <td>0.00258809</td>\n",
        "      <td>0.00183821</td>\n",
        "      <td>0.018</td>\n",
        "      <td>2954</td>\n",
        "      <td>96</td>\n",
        "      <td>136</td>\n",
        "      <td>...</td>\n",
        "      <td>2</td>\n",
        "      <td>4</td>\n",
        "      <td>1</td>\n",
        "      <td>1</td>\n",
        "      <td>1</td>\n",
        "      <td>3</td>\n",
        "      <td>2</td>\n",
        "      <td>3</td>\n",
        "      <td>1</td>\n",
        "      <td>75.0</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>4</th>\n",
        "      <td>2020-05-09</td>\n",
        "      <td>Portugal</td>\n",
        "      <td>0.0183221</td>\n",
        "      <td>8.46274e-05</td>\n",
        "      <td>0.00258809</td>\n",
        "      <td>0.00183821</td>\n",
        "      <td>0.018</td>\n",
        "      <td>2954</td>\n",
        "      <td>96</td>\n",
        "      <td>136</td>\n",
        "      <td>...</td>\n",
        "      <td>2</td>\n",
        "      <td>4</td>\n",
        "      <td>1</td>\n",
        "      <td>1</td>\n",
        "      <td>1</td>\n",
        "      <td>3</td>\n",
        "      <td>2</td>\n",
        "      <td>3</td>\n",
        "      <td>1</td>\n",
        "      <td>75.0</td>\n",
        "    </tr>\n",
        "  </tbody>\n",
        "</table>\n",
        "<p>5 rows \u00d7 23 columns</p>\n",
        "</div>"
       ],
       "output_type": "pyout",
       "prompt_number": 13,
       "text": [
        "        Date   Country      theta        kappa         rho       sigma  \\\n",
        "0 2020-05-05  Portugal  0.0183221  8.46274e-05  0.00258809  0.00183821   \n",
        "1 2020-05-06  Portugal  0.0183221  8.46274e-05  0.00258809  0.00183821   \n",
        "2 2020-05-07  Portugal  0.0183221  8.46274e-05  0.00258809  0.00183821   \n",
        "3 2020-05-08  Portugal  0.0183221  8.46274e-05  0.00258809  0.00183821   \n",
        "4 2020-05-09  Portugal  0.0183221  8.46274e-05  0.00258809  0.00183821   \n",
        "\n",
        "  alpha1 [-] 1/alpha2 [day] 1/beta [day] 1/gamma [day]  ... Cancel_events  \\\n",
        "0      0.018           2954           96           136  ...             2   \n",
        "1      0.018           2954           96           136  ...             2   \n",
        "2      0.018           2954           96           136  ...             2   \n",
        "3      0.018           2954           96           136  ...             2   \n",
        "4      0.018           2954           96           136  ...             2   \n",
        "\n",
        "   Gatherings_restrictions  Transport_closing  Stay_home_restrictions  \\\n",
        "0                        4                  1                       1   \n",
        "1                        4                  1                       1   \n",
        "2                        4                  1                       1   \n",
        "3                        4                  1                       1   \n",
        "4                        4                  1                       1   \n",
        "\n",
        "   Internal_movement_restrictions  International_movement_restrictions  \\\n",
        "0                               1                                    3   \n",
        "1                               1                                    3   \n",
        "2                               1                                    3   \n",
        "3                               1                                    3   \n",
        "4                               1                                    3   \n",
        "\n",
        "   Information_campaigns  Testing_policy  Contact_tracing  Stringency_index  \n",
        "0                      2               3                1              75.0  \n",
        "1                      2               3                1              75.0  \n",
        "2                      2               3                1              75.0  \n",
        "3                      2               3                1              75.0  \n",
        "4                      2               3                1              75.0  \n",
        "\n",
        "[5 rows x 23 columns]"
       ]
      }
     ],
     "prompt_number": 13
    },
    {
     "cell_type": "heading",
     "level": 3,
     "metadata": {},
     "source": [
      "$Rt$: Reprodcution number $\\mathrm{[-]}$"
     ]
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "analyser.param_history(\"Rt\", roll_window=None).tail()"
     ],
     "language": "python",
     "metadata": {},
     "outputs": [
      {
       "output_type": "display_data",
       "png": "\n",
       "text": [
        "<Figure size 648x432 with 1 Axes>"
       ]
      },
      {
       "html": [
        "<div>\n",
        "<style scoped>\n",
        "    .dataframe tbody tr th:only-of-type {\n",
        "        vertical-align: middle;\n",
        "    }\n",
        "\n",
        "    .dataframe tbody tr th {\n",
        "        vertical-align: top;\n",
        "    }\n",
        "\n",
        "    .dataframe thead th {\n",
        "        text-align: right;\n",
        "    }\n",
        "</style>\n",
        "<table border=\"1\" class=\"dataframe\">\n",
        "  <thead>\n",
        "    <tr style=\"text-align: right;\">\n",
        "      <th>Country</th>\n",
        "      <th>Bahrain</th>\n",
        "      <th>Bangladesh</th>\n",
        "      <th>Czech Republic</th>\n",
        "      <th>France</th>\n",
        "      <th>Guinea</th>\n",
        "      <th>Iran</th>\n",
        "      <th>Italy</th>\n",
        "      <th>Korea, South</th>\n",
        "      <th>Kuwait</th>\n",
        "      <th>Mexico</th>\n",
        "      <th>Moldova</th>\n",
        "      <th>Peru</th>\n",
        "      <th>Poland</th>\n",
        "      <th>Portugal</th>\n",
        "      <th>Romania</th>\n",
        "      <th>Russia</th>\n",
        "      <th>Senegal</th>\n",
        "      <th>United Arab Emirates</th>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>Date</th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "    </tr>\n",
        "  </thead>\n",
        "  <tbody>\n",
        "    <tr>\n",
        "      <th>2020-08-20</th>\n",
        "      <td>0.94</td>\n",
        "      <td>1.36</td>\n",
        "      <td>1.3</td>\n",
        "      <td>12.92</td>\n",
        "      <td>1.5</td>\n",
        "      <td>1.25</td>\n",
        "      <td>1.34</td>\n",
        "      <td>5.38</td>\n",
        "      <td>1.0</td>\n",
        "      <td>0.95</td>\n",
        "      <td>74.05</td>\n",
        "      <td>1.45</td>\n",
        "      <td>2.18</td>\n",
        "      <td>1.21</td>\n",
        "      <td>2.98</td>\n",
        "      <td>0.72</td>\n",
        "      <td>1.67</td>\n",
        "      <td>1.08</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>2020-08-21</th>\n",
        "      <td>0.94</td>\n",
        "      <td>1.36</td>\n",
        "      <td>1.3</td>\n",
        "      <td>12.92</td>\n",
        "      <td>1.5</td>\n",
        "      <td>1.25</td>\n",
        "      <td>1.34</td>\n",
        "      <td>5.38</td>\n",
        "      <td>1.0</td>\n",
        "      <td>0.95</td>\n",
        "      <td>74.05</td>\n",
        "      <td>1.45</td>\n",
        "      <td>2.18</td>\n",
        "      <td>1.21</td>\n",
        "      <td>2.98</td>\n",
        "      <td>0.72</td>\n",
        "      <td>1.67</td>\n",
        "      <td>1.08</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>2020-08-22</th>\n",
        "      <td>0.94</td>\n",
        "      <td>1.36</td>\n",
        "      <td>1.3</td>\n",
        "      <td>12.92</td>\n",
        "      <td>1.5</td>\n",
        "      <td>1.25</td>\n",
        "      <td>1.34</td>\n",
        "      <td>5.38</td>\n",
        "      <td>1.0</td>\n",
        "      <td>0.95</td>\n",
        "      <td>74.05</td>\n",
        "      <td>1.45</td>\n",
        "      <td>2.18</td>\n",
        "      <td>1.21</td>\n",
        "      <td>2.98</td>\n",
        "      <td>0.72</td>\n",
        "      <td>1.67</td>\n",
        "      <td>1.08</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>2020-08-23</th>\n",
        "      <td>0.94</td>\n",
        "      <td>1.36</td>\n",
        "      <td>1.3</td>\n",
        "      <td>12.92</td>\n",
        "      <td>1.5</td>\n",
        "      <td>1.25</td>\n",
        "      <td>1.34</td>\n",
        "      <td>5.38</td>\n",
        "      <td>1.0</td>\n",
        "      <td>0.95</td>\n",
        "      <td>74.05</td>\n",
        "      <td>1.45</td>\n",
        "      <td>2.18</td>\n",
        "      <td>1.21</td>\n",
        "      <td>2.98</td>\n",
        "      <td>0.72</td>\n",
        "      <td>1.67</td>\n",
        "      <td>1.08</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>2020-08-24</th>\n",
        "      <td>0.94</td>\n",
        "      <td>1.36</td>\n",
        "      <td>1.3</td>\n",
        "      <td>12.92</td>\n",
        "      <td>1.5</td>\n",
        "      <td>1.25</td>\n",
        "      <td>1.34</td>\n",
        "      <td>5.38</td>\n",
        "      <td>1.0</td>\n",
        "      <td>0.95</td>\n",
        "      <td>74.05</td>\n",
        "      <td>1.45</td>\n",
        "      <td>2.18</td>\n",
        "      <td>1.21</td>\n",
        "      <td>2.98</td>\n",
        "      <td>0.72</td>\n",
        "      <td>1.67</td>\n",
        "      <td>1.08</td>\n",
        "    </tr>\n",
        "  </tbody>\n",
        "</table>\n",
        "</div>"
       ],
       "output_type": "pyout",
       "prompt_number": 14,
       "text": [
        "Country     Bahrain  Bangladesh  Czech Republic  France  Guinea  Iran  Italy  \\\n",
        "Date                                                                           \n",
        "2020-08-20     0.94        1.36             1.3   12.92     1.5  1.25   1.34   \n",
        "2020-08-21     0.94        1.36             1.3   12.92     1.5  1.25   1.34   \n",
        "2020-08-22     0.94        1.36             1.3   12.92     1.5  1.25   1.34   \n",
        "2020-08-23     0.94        1.36             1.3   12.92     1.5  1.25   1.34   \n",
        "2020-08-24     0.94        1.36             1.3   12.92     1.5  1.25   1.34   \n",
        "\n",
        "Country     Korea, South  Kuwait  Mexico  Moldova  Peru  Poland  Portugal  \\\n",
        "Date                                                                        \n",
        "2020-08-20          5.38     1.0    0.95    74.05  1.45    2.18      1.21   \n",
        "2020-08-21          5.38     1.0    0.95    74.05  1.45    2.18      1.21   \n",
        "2020-08-22          5.38     1.0    0.95    74.05  1.45    2.18      1.21   \n",
        "2020-08-23          5.38     1.0    0.95    74.05  1.45    2.18      1.21   \n",
        "2020-08-24          5.38     1.0    0.95    74.05  1.45    2.18      1.21   \n",
        "\n",
        "Country     Romania  Russia  Senegal  United Arab Emirates  \n",
        "Date                                                        \n",
        "2020-08-20     2.98    0.72     1.67                  1.08  \n",
        "2020-08-21     2.98    0.72     1.67                  1.08  \n",
        "2020-08-22     2.98    0.72     1.67                  1.08  \n",
        "2020-08-23     2.98    0.72     1.67                  1.08  \n",
        "2020-08-24     2.98    0.72     1.67                  1.08  "
       ]
      }
     ],
     "prompt_number": 14
    },
    {
     "cell_type": "heading",
     "level": 3,
     "metadata": {},
     "source": [
      "$\\rho$: Effective contact rate $\\mathrm{[-]}$"
     ]
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "analyser.param_history(\"rho\", roll_window=None).tail()"
     ],
     "language": "python",
     "metadata": {},
     "outputs": [
      {
       "output_type": "display_data",
       "png": "\n",
       "text": [
        "<Figure size 648x432 with 1 Axes>"
       ]
      },
      {
       "html": [
        "<div>\n",
        "<style scoped>\n",
        "    .dataframe tbody tr th:only-of-type {\n",
        "        vertical-align: middle;\n",
        "    }\n",
        "\n",
        "    .dataframe tbody tr th {\n",
        "        vertical-align: top;\n",
        "    }\n",
        "\n",
        "    .dataframe thead th {\n",
        "        text-align: right;\n",
        "    }\n",
        "</style>\n",
        "<table border=\"1\" class=\"dataframe\">\n",
        "  <thead>\n",
        "    <tr style=\"text-align: right;\">\n",
        "      <th>Country</th>\n",
        "      <th>Bahrain</th>\n",
        "      <th>Bangladesh</th>\n",
        "      <th>Czech Republic</th>\n",
        "      <th>France</th>\n",
        "      <th>Guinea</th>\n",
        "      <th>Iran</th>\n",
        "      <th>Italy</th>\n",
        "      <th>Korea, South</th>\n",
        "      <th>Kuwait</th>\n",
        "      <th>Mexico</th>\n",
        "      <th>Moldova</th>\n",
        "      <th>Peru</th>\n",
        "      <th>Poland</th>\n",
        "      <th>Portugal</th>\n",
        "      <th>Romania</th>\n",
        "      <th>Russia</th>\n",
        "      <th>Senegal</th>\n",
        "      <th>United Arab Emirates</th>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>Date</th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "    </tr>\n",
        "  </thead>\n",
        "  <tbody>\n",
        "    <tr>\n",
        "      <th>2020-08-20</th>\n",
        "      <td>0.030395</td>\n",
        "      <td>0.005624</td>\n",
        "      <td>0.0122</td>\n",
        "      <td>0.005842</td>\n",
        "      <td>0.017449</td>\n",
        "      <td>0.021795</td>\n",
        "      <td>0.006366</td>\n",
        "      <td>0.029541</td>\n",
        "      <td>0.019828</td>\n",
        "      <td>0.035014</td>\n",
        "      <td>0.011348</td>\n",
        "      <td>0.004232</td>\n",
        "      <td>0.012914</td>\n",
        "      <td>0.004213</td>\n",
        "      <td>0.007665</td>\n",
        "      <td>0.001618</td>\n",
        "      <td>0.006706</td>\n",
        "      <td>0.011385</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>2020-08-21</th>\n",
        "      <td>0.030395</td>\n",
        "      <td>0.005624</td>\n",
        "      <td>0.0122</td>\n",
        "      <td>0.005842</td>\n",
        "      <td>0.017449</td>\n",
        "      <td>0.021795</td>\n",
        "      <td>0.006366</td>\n",
        "      <td>0.029541</td>\n",
        "      <td>0.019828</td>\n",
        "      <td>0.035014</td>\n",
        "      <td>0.011348</td>\n",
        "      <td>0.004232</td>\n",
        "      <td>0.012914</td>\n",
        "      <td>0.004213</td>\n",
        "      <td>0.007665</td>\n",
        "      <td>0.001618</td>\n",
        "      <td>0.006706</td>\n",
        "      <td>0.011385</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>2020-08-22</th>\n",
        "      <td>0.030395</td>\n",
        "      <td>0.005624</td>\n",
        "      <td>0.0122</td>\n",
        "      <td>0.005842</td>\n",
        "      <td>0.017449</td>\n",
        "      <td>0.021795</td>\n",
        "      <td>0.006366</td>\n",
        "      <td>0.029541</td>\n",
        "      <td>0.019828</td>\n",
        "      <td>0.035014</td>\n",
        "      <td>0.011348</td>\n",
        "      <td>0.004232</td>\n",
        "      <td>0.012914</td>\n",
        "      <td>0.004213</td>\n",
        "      <td>0.007665</td>\n",
        "      <td>0.001618</td>\n",
        "      <td>0.006706</td>\n",
        "      <td>0.011385</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>2020-08-23</th>\n",
        "      <td>0.030395</td>\n",
        "      <td>0.005624</td>\n",
        "      <td>0.0122</td>\n",
        "      <td>0.005842</td>\n",
        "      <td>0.017449</td>\n",
        "      <td>0.021795</td>\n",
        "      <td>0.006366</td>\n",
        "      <td>0.029541</td>\n",
        "      <td>0.019828</td>\n",
        "      <td>0.035014</td>\n",
        "      <td>0.011348</td>\n",
        "      <td>0.004232</td>\n",
        "      <td>0.012914</td>\n",
        "      <td>0.004213</td>\n",
        "      <td>0.007665</td>\n",
        "      <td>0.001618</td>\n",
        "      <td>0.006706</td>\n",
        "      <td>0.011385</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>2020-08-24</th>\n",
        "      <td>0.030395</td>\n",
        "      <td>0.005624</td>\n",
        "      <td>0.0122</td>\n",
        "      <td>0.005842</td>\n",
        "      <td>0.017449</td>\n",
        "      <td>0.021795</td>\n",
        "      <td>0.006366</td>\n",
        "      <td>0.029541</td>\n",
        "      <td>0.019828</td>\n",
        "      <td>0.035014</td>\n",
        "      <td>0.011348</td>\n",
        "      <td>0.004232</td>\n",
        "      <td>0.012914</td>\n",
        "      <td>0.004213</td>\n",
        "      <td>0.007665</td>\n",
        "      <td>0.001618</td>\n",
        "      <td>0.006706</td>\n",
        "      <td>0.011385</td>\n",
        "    </tr>\n",
        "  </tbody>\n",
        "</table>\n",
        "</div>"
       ],
       "output_type": "pyout",
       "prompt_number": 15,
       "text": [
        "Country      Bahrain  Bangladesh  Czech Republic    France    Guinea  \\\n",
        "Date                                                                   \n",
        "2020-08-20  0.030395    0.005624          0.0122  0.005842  0.017449   \n",
        "2020-08-21  0.030395    0.005624          0.0122  0.005842  0.017449   \n",
        "2020-08-22  0.030395    0.005624          0.0122  0.005842  0.017449   \n",
        "2020-08-23  0.030395    0.005624          0.0122  0.005842  0.017449   \n",
        "2020-08-24  0.030395    0.005624          0.0122  0.005842  0.017449   \n",
        "\n",
        "Country         Iran     Italy  Korea, South    Kuwait    Mexico   Moldova  \\\n",
        "Date                                                                         \n",
        "2020-08-20  0.021795  0.006366      0.029541  0.019828  0.035014  0.011348   \n",
        "2020-08-21  0.021795  0.006366      0.029541  0.019828  0.035014  0.011348   \n",
        "2020-08-22  0.021795  0.006366      0.029541  0.019828  0.035014  0.011348   \n",
        "2020-08-23  0.021795  0.006366      0.029541  0.019828  0.035014  0.011348   \n",
        "2020-08-24  0.021795  0.006366      0.029541  0.019828  0.035014  0.011348   \n",
        "\n",
        "Country         Peru    Poland  Portugal   Romania    Russia   Senegal  \\\n",
        "Date                                                                     \n",
        "2020-08-20  0.004232  0.012914  0.004213  0.007665  0.001618  0.006706   \n",
        "2020-08-21  0.004232  0.012914  0.004213  0.007665  0.001618  0.006706   \n",
        "2020-08-22  0.004232  0.012914  0.004213  0.007665  0.001618  0.006706   \n",
        "2020-08-23  0.004232  0.012914  0.004213  0.007665  0.001618  0.006706   \n",
        "2020-08-24  0.004232  0.012914  0.004213  0.007665  0.001618  0.006706   \n",
        "\n",
        "Country     United Arab Emirates  \n",
        "Date                              \n",
        "2020-08-20              0.011385  \n",
        "2020-08-21              0.011385  \n",
        "2020-08-22              0.011385  \n",
        "2020-08-23              0.011385  \n",
        "2020-08-24              0.011385  "
       ]
      }
     ],
     "prompt_number": 15
    },
    {
     "cell_type": "heading",
     "level": 3,
     "metadata": {},
     "source": [
      "$\\sigma$: Recovery rate $\\mathrm{[-]}$"
     ]
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "analyser.param_history(\"sigma\", roll_window=None).tail()"
     ],
     "language": "python",
     "metadata": {},
     "outputs": [
      {
       "output_type": "display_data",
       "png": "\n",
       "text": [
        "<Figure size 648x432 with 1 Axes>"
       ]
      },
      {
       "html": [
        "<div>\n",
        "<style scoped>\n",
        "    .dataframe tbody tr th:only-of-type {\n",
        "        vertical-align: middle;\n",
        "    }\n",
        "\n",
        "    .dataframe tbody tr th {\n",
        "        vertical-align: top;\n",
        "    }\n",
        "\n",
        "    .dataframe thead th {\n",
        "        text-align: right;\n",
        "    }\n",
        "</style>\n",
        "<table border=\"1\" class=\"dataframe\">\n",
        "  <thead>\n",
        "    <tr style=\"text-align: right;\">\n",
        "      <th>Country</th>\n",
        "      <th>Bahrain</th>\n",
        "      <th>Bangladesh</th>\n",
        "      <th>Czech Republic</th>\n",
        "      <th>France</th>\n",
        "      <th>Guinea</th>\n",
        "      <th>Iran</th>\n",
        "      <th>Italy</th>\n",
        "      <th>Korea, South</th>\n",
        "      <th>Kuwait</th>\n",
        "      <th>Mexico</th>\n",
        "      <th>Moldova</th>\n",
        "      <th>Peru</th>\n",
        "      <th>Poland</th>\n",
        "      <th>Portugal</th>\n",
        "      <th>Romania</th>\n",
        "      <th>Russia</th>\n",
        "      <th>Senegal</th>\n",
        "      <th>United Arab Emirates</th>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>Date</th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "    </tr>\n",
        "  </thead>\n",
        "  <tbody>\n",
        "    <tr>\n",
        "      <th>2020-08-20</th>\n",
        "      <td>0.032089</td>\n",
        "      <td>0.004046</td>\n",
        "      <td>0.009343</td>\n",
        "      <td>0.000415</td>\n",
        "      <td>0.011571</td>\n",
        "      <td>0.016052</td>\n",
        "      <td>0.004566</td>\n",
        "      <td>0.005483</td>\n",
        "      <td>0.019642</td>\n",
        "      <td>0.032674</td>\n",
        "      <td>0.0</td>\n",
        "      <td>0.00269</td>\n",
        "      <td>0.00576</td>\n",
        "      <td>0.003394</td>\n",
        "      <td>0.002453</td>\n",
        "      <td>0.002223</td>\n",
        "      <td>0.003915</td>\n",
        "      <td>0.01052</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>2020-08-21</th>\n",
        "      <td>0.032089</td>\n",
        "      <td>0.004046</td>\n",
        "      <td>0.009343</td>\n",
        "      <td>0.000415</td>\n",
        "      <td>0.011571</td>\n",
        "      <td>0.016052</td>\n",
        "      <td>0.004566</td>\n",
        "      <td>0.005483</td>\n",
        "      <td>0.019642</td>\n",
        "      <td>0.032674</td>\n",
        "      <td>0.0</td>\n",
        "      <td>0.00269</td>\n",
        "      <td>0.00576</td>\n",
        "      <td>0.003394</td>\n",
        "      <td>0.002453</td>\n",
        "      <td>0.002223</td>\n",
        "      <td>0.003915</td>\n",
        "      <td>0.01052</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>2020-08-22</th>\n",
        "      <td>0.032089</td>\n",
        "      <td>0.004046</td>\n",
        "      <td>0.009343</td>\n",
        "      <td>0.000415</td>\n",
        "      <td>0.011571</td>\n",
        "      <td>0.016052</td>\n",
        "      <td>0.004566</td>\n",
        "      <td>0.005483</td>\n",
        "      <td>0.019642</td>\n",
        "      <td>0.032674</td>\n",
        "      <td>0.0</td>\n",
        "      <td>0.00269</td>\n",
        "      <td>0.00576</td>\n",
        "      <td>0.003394</td>\n",
        "      <td>0.002453</td>\n",
        "      <td>0.002223</td>\n",
        "      <td>0.003915</td>\n",
        "      <td>0.01052</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>2020-08-23</th>\n",
        "      <td>0.032089</td>\n",
        "      <td>0.004046</td>\n",
        "      <td>0.009343</td>\n",
        "      <td>0.000415</td>\n",
        "      <td>0.011571</td>\n",
        "      <td>0.016052</td>\n",
        "      <td>0.004566</td>\n",
        "      <td>0.005483</td>\n",
        "      <td>0.019642</td>\n",
        "      <td>0.032674</td>\n",
        "      <td>0.0</td>\n",
        "      <td>0.00269</td>\n",
        "      <td>0.00576</td>\n",
        "      <td>0.003394</td>\n",
        "      <td>0.002453</td>\n",
        "      <td>0.002223</td>\n",
        "      <td>0.003915</td>\n",
        "      <td>0.01052</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>2020-08-24</th>\n",
        "      <td>0.032089</td>\n",
        "      <td>0.004046</td>\n",
        "      <td>0.009343</td>\n",
        "      <td>0.000415</td>\n",
        "      <td>0.011571</td>\n",
        "      <td>0.016052</td>\n",
        "      <td>0.004566</td>\n",
        "      <td>0.005483</td>\n",
        "      <td>0.019642</td>\n",
        "      <td>0.032674</td>\n",
        "      <td>0.0</td>\n",
        "      <td>0.00269</td>\n",
        "      <td>0.00576</td>\n",
        "      <td>0.003394</td>\n",
        "      <td>0.002453</td>\n",
        "      <td>0.002223</td>\n",
        "      <td>0.003915</td>\n",
        "      <td>0.01052</td>\n",
        "    </tr>\n",
        "  </tbody>\n",
        "</table>\n",
        "</div>"
       ],
       "output_type": "pyout",
       "prompt_number": 16,
       "text": [
        "Country      Bahrain  Bangladesh  Czech Republic    France    Guinea  \\\n",
        "Date                                                                   \n",
        "2020-08-20  0.032089    0.004046        0.009343  0.000415  0.011571   \n",
        "2020-08-21  0.032089    0.004046        0.009343  0.000415  0.011571   \n",
        "2020-08-22  0.032089    0.004046        0.009343  0.000415  0.011571   \n",
        "2020-08-23  0.032089    0.004046        0.009343  0.000415  0.011571   \n",
        "2020-08-24  0.032089    0.004046        0.009343  0.000415  0.011571   \n",
        "\n",
        "Country         Iran     Italy  Korea, South    Kuwait    Mexico  Moldova  \\\n",
        "Date                                                                        \n",
        "2020-08-20  0.016052  0.004566      0.005483  0.019642  0.032674      0.0   \n",
        "2020-08-21  0.016052  0.004566      0.005483  0.019642  0.032674      0.0   \n",
        "2020-08-22  0.016052  0.004566      0.005483  0.019642  0.032674      0.0   \n",
        "2020-08-23  0.016052  0.004566      0.005483  0.019642  0.032674      0.0   \n",
        "2020-08-24  0.016052  0.004566      0.005483  0.019642  0.032674      0.0   \n",
        "\n",
        "Country        Peru   Poland  Portugal   Romania    Russia   Senegal  \\\n",
        "Date                                                                   \n",
        "2020-08-20  0.00269  0.00576  0.003394  0.002453  0.002223  0.003915   \n",
        "2020-08-21  0.00269  0.00576  0.003394  0.002453  0.002223  0.003915   \n",
        "2020-08-22  0.00269  0.00576  0.003394  0.002453  0.002223  0.003915   \n",
        "2020-08-23  0.00269  0.00576  0.003394  0.002453  0.002223  0.003915   \n",
        "2020-08-24  0.00269  0.00576  0.003394  0.002453  0.002223  0.003915   \n",
        "\n",
        "Country     United Arab Emirates  \n",
        "Date                              \n",
        "2020-08-20               0.01052  \n",
        "2020-08-21               0.01052  \n",
        "2020-08-22               0.01052  \n",
        "2020-08-23               0.01052  \n",
        "2020-08-24               0.01052  "
       ]
      }
     ],
     "prompt_number": 16
    },
    {
     "cell_type": "heading",
     "level": 3,
     "metadata": {},
     "source": [
      "$\\kappa$: Mortality rate of infected cases $\\mathrm{[-]}$"
     ]
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "analyser.param_history(\"kappa\", roll_window=None).tail()"
     ],
     "language": "python",
     "metadata": {},
     "outputs": [
      {
       "output_type": "display_data",
       "png": "\n",
       "text": [
        "<Figure size 648x432 with 1 Axes>"
       ]
      },
      {
       "html": [
        "<div>\n",
        "<style scoped>\n",
        "    .dataframe tbody tr th:only-of-type {\n",
        "        vertical-align: middle;\n",
        "    }\n",
        "\n",
        "    .dataframe tbody tr th {\n",
        "        vertical-align: top;\n",
        "    }\n",
        "\n",
        "    .dataframe thead th {\n",
        "        text-align: right;\n",
        "    }\n",
        "</style>\n",
        "<table border=\"1\" class=\"dataframe\">\n",
        "  <thead>\n",
        "    <tr style=\"text-align: right;\">\n",
        "      <th>Country</th>\n",
        "      <th>Bahrain</th>\n",
        "      <th>Bangladesh</th>\n",
        "      <th>Czech Republic</th>\n",
        "      <th>France</th>\n",
        "      <th>Guinea</th>\n",
        "      <th>Iran</th>\n",
        "      <th>Italy</th>\n",
        "      <th>Korea, South</th>\n",
        "      <th>Kuwait</th>\n",
        "      <th>Mexico</th>\n",
        "      <th>Moldova</th>\n",
        "      <th>Peru</th>\n",
        "      <th>Poland</th>\n",
        "      <th>Portugal</th>\n",
        "      <th>Romania</th>\n",
        "      <th>Russia</th>\n",
        "      <th>Senegal</th>\n",
        "      <th>United Arab Emirates</th>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>Date</th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "    </tr>\n",
        "  </thead>\n",
        "  <tbody>\n",
        "    <tr>\n",
        "      <th>2020-08-20</th>\n",
        "      <td>0.000096</td>\n",
        "      <td>0.000098</td>\n",
        "      <td>0.000021</td>\n",
        "      <td>0.000037</td>\n",
        "      <td>0.000085</td>\n",
        "      <td>0.00064</td>\n",
        "      <td>0.000176</td>\n",
        "      <td>0.000001</td>\n",
        "      <td>0.000079</td>\n",
        "      <td>0.00008</td>\n",
        "      <td>0.000153</td>\n",
        "      <td>0.000188</td>\n",
        "      <td>0.000168</td>\n",
        "      <td>0.000076</td>\n",
        "      <td>0.00004</td>\n",
        "      <td>0.000031</td>\n",
        "      <td>0.000004</td>\n",
        "      <td>0.000037</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>2020-08-21</th>\n",
        "      <td>0.000096</td>\n",
        "      <td>0.000098</td>\n",
        "      <td>0.000021</td>\n",
        "      <td>0.000037</td>\n",
        "      <td>0.000085</td>\n",
        "      <td>0.00064</td>\n",
        "      <td>0.000176</td>\n",
        "      <td>0.000001</td>\n",
        "      <td>0.000079</td>\n",
        "      <td>0.00008</td>\n",
        "      <td>0.000153</td>\n",
        "      <td>0.000188</td>\n",
        "      <td>0.000168</td>\n",
        "      <td>0.000076</td>\n",
        "      <td>0.00004</td>\n",
        "      <td>0.000031</td>\n",
        "      <td>0.000004</td>\n",
        "      <td>0.000037</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>2020-08-22</th>\n",
        "      <td>0.000096</td>\n",
        "      <td>0.000098</td>\n",
        "      <td>0.000021</td>\n",
        "      <td>0.000037</td>\n",
        "      <td>0.000085</td>\n",
        "      <td>0.00064</td>\n",
        "      <td>0.000176</td>\n",
        "      <td>0.000001</td>\n",
        "      <td>0.000079</td>\n",
        "      <td>0.00008</td>\n",
        "      <td>0.000153</td>\n",
        "      <td>0.000188</td>\n",
        "      <td>0.000168</td>\n",
        "      <td>0.000076</td>\n",
        "      <td>0.00004</td>\n",
        "      <td>0.000031</td>\n",
        "      <td>0.000004</td>\n",
        "      <td>0.000037</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>2020-08-23</th>\n",
        "      <td>0.000096</td>\n",
        "      <td>0.000098</td>\n",
        "      <td>0.000021</td>\n",
        "      <td>0.000037</td>\n",
        "      <td>0.000085</td>\n",
        "      <td>0.00064</td>\n",
        "      <td>0.000176</td>\n",
        "      <td>0.000001</td>\n",
        "      <td>0.000079</td>\n",
        "      <td>0.00008</td>\n",
        "      <td>0.000153</td>\n",
        "      <td>0.000188</td>\n",
        "      <td>0.000168</td>\n",
        "      <td>0.000076</td>\n",
        "      <td>0.00004</td>\n",
        "      <td>0.000031</td>\n",
        "      <td>0.000004</td>\n",
        "      <td>0.000037</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>2020-08-24</th>\n",
        "      <td>0.000096</td>\n",
        "      <td>0.000098</td>\n",
        "      <td>0.000021</td>\n",
        "      <td>0.000037</td>\n",
        "      <td>0.000085</td>\n",
        "      <td>0.00064</td>\n",
        "      <td>0.000176</td>\n",
        "      <td>0.000001</td>\n",
        "      <td>0.000079</td>\n",
        "      <td>0.00008</td>\n",
        "      <td>0.000153</td>\n",
        "      <td>0.000188</td>\n",
        "      <td>0.000168</td>\n",
        "      <td>0.000076</td>\n",
        "      <td>0.00004</td>\n",
        "      <td>0.000031</td>\n",
        "      <td>0.000004</td>\n",
        "      <td>0.000037</td>\n",
        "    </tr>\n",
        "  </tbody>\n",
        "</table>\n",
        "</div>"
       ],
       "output_type": "pyout",
       "prompt_number": 17,
       "text": [
        "Country      Bahrain  Bangladesh  Czech Republic    France    Guinea     Iran  \\\n",
        "Date                                                                            \n",
        "2020-08-20  0.000096    0.000098        0.000021  0.000037  0.000085  0.00064   \n",
        "2020-08-21  0.000096    0.000098        0.000021  0.000037  0.000085  0.00064   \n",
        "2020-08-22  0.000096    0.000098        0.000021  0.000037  0.000085  0.00064   \n",
        "2020-08-23  0.000096    0.000098        0.000021  0.000037  0.000085  0.00064   \n",
        "2020-08-24  0.000096    0.000098        0.000021  0.000037  0.000085  0.00064   \n",
        "\n",
        "Country        Italy  Korea, South    Kuwait   Mexico   Moldova      Peru  \\\n",
        "Date                                                                        \n",
        "2020-08-20  0.000176      0.000001  0.000079  0.00008  0.000153  0.000188   \n",
        "2020-08-21  0.000176      0.000001  0.000079  0.00008  0.000153  0.000188   \n",
        "2020-08-22  0.000176      0.000001  0.000079  0.00008  0.000153  0.000188   \n",
        "2020-08-23  0.000176      0.000001  0.000079  0.00008  0.000153  0.000188   \n",
        "2020-08-24  0.000176      0.000001  0.000079  0.00008  0.000153  0.000188   \n",
        "\n",
        "Country       Poland  Portugal  Romania    Russia   Senegal  \\\n",
        "Date                                                          \n",
        "2020-08-20  0.000168  0.000076  0.00004  0.000031  0.000004   \n",
        "2020-08-21  0.000168  0.000076  0.00004  0.000031  0.000004   \n",
        "2020-08-22  0.000168  0.000076  0.00004  0.000031  0.000004   \n",
        "2020-08-23  0.000168  0.000076  0.00004  0.000031  0.000004   \n",
        "2020-08-24  0.000168  0.000076  0.00004  0.000031  0.000004   \n",
        "\n",
        "Country     United Arab Emirates  \n",
        "Date                              \n",
        "2020-08-20              0.000037  \n",
        "2020-08-21              0.000037  \n",
        "2020-08-22              0.000037  \n",
        "2020-08-23              0.000037  \n",
        "2020-08-24              0.000037  "
       ]
      }
     ],
     "prompt_number": 17
    },
    {
     "cell_type": "heading",
     "level": 3,
     "metadata": {},
     "source": [
      "$\\theta$: Mortality rate of S$^\\ast$ cases $\\mathrm{[-]}$"
     ]
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "analyser.param_history(\"theta\", roll_window=None).tail()"
     ],
     "language": "python",
     "metadata": {},
     "outputs": [
      {
       "output_type": "display_data",
       "png": "\n",
       "text": [
        "<Figure size 648x432 with 1 Axes>"
       ]
      },
      {
       "html": [
        "<div>\n",
        "<style scoped>\n",
        "    .dataframe tbody tr th:only-of-type {\n",
        "        vertical-align: middle;\n",
        "    }\n",
        "\n",
        "    .dataframe tbody tr th {\n",
        "        vertical-align: top;\n",
        "    }\n",
        "\n",
        "    .dataframe thead th {\n",
        "        text-align: right;\n",
        "    }\n",
        "</style>\n",
        "<table border=\"1\" class=\"dataframe\">\n",
        "  <thead>\n",
        "    <tr style=\"text-align: right;\">\n",
        "      <th>Country</th>\n",
        "      <th>Bahrain</th>\n",
        "      <th>Bangladesh</th>\n",
        "      <th>Czech Republic</th>\n",
        "      <th>France</th>\n",
        "      <th>Guinea</th>\n",
        "      <th>Iran</th>\n",
        "      <th>Italy</th>\n",
        "      <th>Korea, South</th>\n",
        "      <th>Kuwait</th>\n",
        "      <th>Mexico</th>\n",
        "      <th>Moldova</th>\n",
        "      <th>Peru</th>\n",
        "      <th>Poland</th>\n",
        "      <th>Portugal</th>\n",
        "      <th>Romania</th>\n",
        "      <th>Russia</th>\n",
        "      <th>Senegal</th>\n",
        "      <th>United Arab Emirates</th>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>Date</th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "    </tr>\n",
        "  </thead>\n",
        "  <tbody>\n",
        "    <tr>\n",
        "      <th>2020-08-20</th>\n",
        "      <td>0.000666</td>\n",
        "      <td>0.000442</td>\n",
        "      <td>0.000679</td>\n",
        "      <td>0.000679</td>\n",
        "      <td>0.000821</td>\n",
        "      <td>0.040958</td>\n",
        "      <td>0.000237</td>\n",
        "      <td>0.001256</td>\n",
        "      <td>0.000555</td>\n",
        "      <td>0.112989</td>\n",
        "      <td>0.000808</td>\n",
        "      <td>0.015475</td>\n",
        "      <td>0.000131</td>\n",
        "      <td>0.000618</td>\n",
        "      <td>0.031922</td>\n",
        "      <td>0.003396</td>\n",
        "      <td>0.022303</td>\n",
        "      <td>0.000678</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>2020-08-21</th>\n",
        "      <td>0.000666</td>\n",
        "      <td>0.000442</td>\n",
        "      <td>0.000679</td>\n",
        "      <td>0.000679</td>\n",
        "      <td>0.000821</td>\n",
        "      <td>0.040958</td>\n",
        "      <td>0.000237</td>\n",
        "      <td>0.001256</td>\n",
        "      <td>0.000555</td>\n",
        "      <td>0.112989</td>\n",
        "      <td>0.000808</td>\n",
        "      <td>0.015475</td>\n",
        "      <td>0.000131</td>\n",
        "      <td>0.000618</td>\n",
        "      <td>0.031922</td>\n",
        "      <td>0.003396</td>\n",
        "      <td>0.022303</td>\n",
        "      <td>0.000678</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>2020-08-22</th>\n",
        "      <td>0.000666</td>\n",
        "      <td>0.000442</td>\n",
        "      <td>0.000679</td>\n",
        "      <td>0.000679</td>\n",
        "      <td>0.000821</td>\n",
        "      <td>0.040958</td>\n",
        "      <td>0.000237</td>\n",
        "      <td>0.001256</td>\n",
        "      <td>0.000555</td>\n",
        "      <td>0.112989</td>\n",
        "      <td>0.000808</td>\n",
        "      <td>0.015475</td>\n",
        "      <td>0.000131</td>\n",
        "      <td>0.000618</td>\n",
        "      <td>0.031922</td>\n",
        "      <td>0.003396</td>\n",
        "      <td>0.022303</td>\n",
        "      <td>0.000678</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>2020-08-23</th>\n",
        "      <td>0.000666</td>\n",
        "      <td>0.000442</td>\n",
        "      <td>0.000679</td>\n",
        "      <td>0.000679</td>\n",
        "      <td>0.000821</td>\n",
        "      <td>0.040958</td>\n",
        "      <td>0.000237</td>\n",
        "      <td>0.001256</td>\n",
        "      <td>0.000555</td>\n",
        "      <td>0.112989</td>\n",
        "      <td>0.000808</td>\n",
        "      <td>0.015475</td>\n",
        "      <td>0.000131</td>\n",
        "      <td>0.000618</td>\n",
        "      <td>0.031922</td>\n",
        "      <td>0.003396</td>\n",
        "      <td>0.022303</td>\n",
        "      <td>0.000678</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>2020-08-24</th>\n",
        "      <td>0.000666</td>\n",
        "      <td>0.000442</td>\n",
        "      <td>0.000679</td>\n",
        "      <td>0.000679</td>\n",
        "      <td>0.000821</td>\n",
        "      <td>0.040958</td>\n",
        "      <td>0.000237</td>\n",
        "      <td>0.001256</td>\n",
        "      <td>0.000555</td>\n",
        "      <td>0.112989</td>\n",
        "      <td>0.000808</td>\n",
        "      <td>0.015475</td>\n",
        "      <td>0.000131</td>\n",
        "      <td>0.000618</td>\n",
        "      <td>0.031922</td>\n",
        "      <td>0.003396</td>\n",
        "      <td>0.022303</td>\n",
        "      <td>0.000678</td>\n",
        "    </tr>\n",
        "  </tbody>\n",
        "</table>\n",
        "</div>"
       ],
       "output_type": "pyout",
       "prompt_number": 18,
       "text": [
        "Country      Bahrain  Bangladesh  Czech Republic    France    Guinea  \\\n",
        "Date                                                                   \n",
        "2020-08-20  0.000666    0.000442        0.000679  0.000679  0.000821   \n",
        "2020-08-21  0.000666    0.000442        0.000679  0.000679  0.000821   \n",
        "2020-08-22  0.000666    0.000442        0.000679  0.000679  0.000821   \n",
        "2020-08-23  0.000666    0.000442        0.000679  0.000679  0.000821   \n",
        "2020-08-24  0.000666    0.000442        0.000679  0.000679  0.000821   \n",
        "\n",
        "Country         Iran     Italy  Korea, South    Kuwait    Mexico   Moldova  \\\n",
        "Date                                                                         \n",
        "2020-08-20  0.040958  0.000237      0.001256  0.000555  0.112989  0.000808   \n",
        "2020-08-21  0.040958  0.000237      0.001256  0.000555  0.112989  0.000808   \n",
        "2020-08-22  0.040958  0.000237      0.001256  0.000555  0.112989  0.000808   \n",
        "2020-08-23  0.040958  0.000237      0.001256  0.000555  0.112989  0.000808   \n",
        "2020-08-24  0.040958  0.000237      0.001256  0.000555  0.112989  0.000808   \n",
        "\n",
        "Country         Peru    Poland  Portugal   Romania    Russia   Senegal  \\\n",
        "Date                                                                     \n",
        "2020-08-20  0.015475  0.000131  0.000618  0.031922  0.003396  0.022303   \n",
        "2020-08-21  0.015475  0.000131  0.000618  0.031922  0.003396  0.022303   \n",
        "2020-08-22  0.015475  0.000131  0.000618  0.031922  0.003396  0.022303   \n",
        "2020-08-23  0.015475  0.000131  0.000618  0.031922  0.003396  0.022303   \n",
        "2020-08-24  0.015475  0.000131  0.000618  0.031922  0.003396  0.022303   \n",
        "\n",
        "Country     United Arab Emirates  \n",
        "Date                              \n",
        "2020-08-20              0.000678  \n",
        "2020-08-21              0.000678  \n",
        "2020-08-22              0.000678  \n",
        "2020-08-23              0.000678  \n",
        "2020-08-24              0.000678  "
       ]
      }
     ],
     "prompt_number": 18
    },
    {
     "cell_type": "markdown",
     "metadata": {},
     "source": [
      "## (Experimental): Relationship of OxCGRT index and parameter values\n",
      "Government responses will impact on parameter values of ODE models about 14 days later. Here, we will investigate on the relationship of [stringency index (from OxCGRT)](https://github.com/OxCGRT/covid-policy-tracker/blob/master/documentation/index_methodology.md) and reproduction number/model parameters.\n"
     ]
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "%matplotlib inline\n",
      "from matplotlib import pyplot as plt\n",
      "import seaborn as sns\n",
      "import pandas as pd"
     ],
     "language": "python",
     "metadata": {},
     "outputs": [],
     "prompt_number": 19
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "df = analyser.track()\n",
      "param_cols = [\"Rt\", *cs.SIRF.PARAMETERS]\n",
      "oxcgrt_cols = oxcgrt_data.OXCGRT_VARS[:]\n",
      "cols = param_cols + oxcgrt_cols\n",
      "delay = 14\n",
      "\n",
      "for col in param_cols:\n",
      "    df[col] = pd.to_numeric(df[col], errors=\"coerce\")\n",
      "    df[col] = df.groupby(\"Country\")[col].shift(0 - delay)\n",
      "\n",
      "df = df.dropna(how=\"any\")\n",
      "df = df.loc[:, [\"Date\", \"Country\", *cols]]\n",
      "track_df = df.copy()\n",
      "track_df.info()"
     ],
     "language": "python",
     "metadata": {},
     "outputs": [
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "<class 'pandas.core.frame.DataFrame'>\n",
        "Int64Index: 22843 entries, 0 to 23080\n",
        "Data columns (total 19 columns):\n",
        " #   Column                               Non-Null Count  Dtype         \n",
        "---  ------                               --------------  -----         \n",
        " 0   Date                                 22843 non-null  datetime64[ns]\n",
        " 1   Country                              22843 non-null  object        \n",
        " 2   Rt                                   22843 non-null  float64       \n",
        " 3   theta                                22843 non-null  float64       \n",
        " 4   kappa                                22843 non-null  float64       \n",
        " 5   rho                                  22843 non-null  float64       \n",
        " 6   sigma                                22843 non-null  float64       \n",
        " 7   School_closing                       22843 non-null  int64         \n",
        " 8   Workplace_closing                    22843 non-null  int64         \n",
        " 9   Cancel_events                        22843 non-null  int64         \n",
        " 10  Gatherings_restrictions              22843 non-null  int64         \n",
        " 11  Transport_closing                    22843 non-null  int64         \n",
        " 12  Stay_home_restrictions               22843 non-null  int64         \n",
        " 13  Internal_movement_restrictions       22843 non-null  int64         \n",
        " 14  International_movement_restrictions  22843 non-null  int64         \n",
        " 15  Information_campaigns                22843 non-null  int64         \n",
        " 16  Testing_policy                       22843 non-null  int64         \n",
        " 17  Contact_tracing                      22843 non-null  int64         \n",
        " 18  Stringency_index                     22843 non-null  float64       \n",
        "dtypes: datetime64[ns](1), float64(6), int64(11), object(1)\n",
        "memory usage: 3.5+ MB\n"
       ]
      }
     ],
     "prompt_number": 20
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "# Correlation\n",
      "df = track_df.copy()\n",
      "df.corr().style.background_gradient(axis=None)"
     ],
     "language": "python",
     "metadata": {},
     "outputs": [
      {
       "html": [
        "<style  type=\"text/css\" >\n",
        "#T_4334b970_e5f0_11ea_b3c1_525400deedabrow0_col0,#T_4334b970_e5f0_11ea_b3c1_525400deedabrow1_col1,#T_4334b970_e5f0_11ea_b3c1_525400deedabrow2_col2,#T_4334b970_e5f0_11ea_b3c1_525400deedabrow3_col3,#T_4334b970_e5f0_11ea_b3c1_525400deedabrow4_col4,#T_4334b970_e5f0_11ea_b3c1_525400deedabrow5_col5,#T_4334b970_e5f0_11ea_b3c1_525400deedabrow6_col6,#T_4334b970_e5f0_11ea_b3c1_525400deedabrow7_col7,#T_4334b970_e5f0_11ea_b3c1_525400deedabrow8_col8,#T_4334b970_e5f0_11ea_b3c1_525400deedabrow9_col9,#T_4334b970_e5f0_11ea_b3c1_525400deedabrow10_col10,#T_4334b970_e5f0_11ea_b3c1_525400deedabrow11_col11,#T_4334b970_e5f0_11ea_b3c1_525400deedabrow12_col12,#T_4334b970_e5f0_11ea_b3c1_525400deedabrow13_col13,#T_4334b970_e5f0_11ea_b3c1_525400deedabrow14_col14,#T_4334b970_e5f0_11ea_b3c1_525400deedabrow15_col15,#T_4334b970_e5f0_11ea_b3c1_525400deedabrow16_col16{\n",
        "            background-color:  #023858;\n",
        "            color:  #f1f1f1;\n",
        "        }#T_4334b970_e5f0_11ea_b3c1_525400deedabrow0_col1,#T_4334b970_e5f0_11ea_b3c1_525400deedabrow1_col0,#T_4334b970_e5f0_11ea_b3c1_525400deedabrow3_col8,#T_4334b970_e5f0_11ea_b3c1_525400deedabrow8_col3{\n",
        "            background-color:  #c0c9e2;\n",
        "            color:  #000000;\n",
        "        }#T_4334b970_e5f0_11ea_b3c1_525400deedabrow0_col2,#T_4334b970_e5f0_11ea_b3c1_525400deedabrow2_col0,#T_4334b970_e5f0_11ea_b3c1_525400deedabrow5_col13,#T_4334b970_e5f0_11ea_b3c1_525400deedabrow12_col14,#T_4334b970_e5f0_11ea_b3c1_525400deedabrow13_col5,#T_4334b970_e5f0_11ea_b3c1_525400deedabrow14_col12{\n",
        "            background-color:  #b5c4df;\n",
        "            color:  #000000;\n",
        "        }#T_4334b970_e5f0_11ea_b3c1_525400deedabrow0_col3,#T_4334b970_e5f0_11ea_b3c1_525400deedabrow1_col3,#T_4334b970_e5f0_11ea_b3c1_525400deedabrow3_col0,#T_4334b970_e5f0_11ea_b3c1_525400deedabrow3_col1{\n",
        "            background-color:  #83afd3;\n",
        "            color:  #000000;\n",
        "        }#T_4334b970_e5f0_11ea_b3c1_525400deedabrow0_col4,#T_4334b970_e5f0_11ea_b3c1_525400deedabrow0_col12,#T_4334b970_e5f0_11ea_b3c1_525400deedabrow4_col0,#T_4334b970_e5f0_11ea_b3c1_525400deedabrow12_col0{\n",
        "            background-color:  #d7d6e9;\n",
        "            color:  #000000;\n",
        "        }#T_4334b970_e5f0_11ea_b3c1_525400deedabrow0_col5,#T_4334b970_e5f0_11ea_b3c1_525400deedabrow5_col0{\n",
        "            background-color:  #e7e3f0;\n",
        "            color:  #000000;\n",
        "        }#T_4334b970_e5f0_11ea_b3c1_525400deedabrow0_col6,#T_4334b970_e5f0_11ea_b3c1_525400deedabrow0_col15,#T_4334b970_e5f0_11ea_b3c1_525400deedabrow6_col0,#T_4334b970_e5f0_11ea_b3c1_525400deedabrow15_col0{\n",
        "            background-color:  #c4cbe3;\n",
        "            color:  #000000;\n",
        "        }#T_4334b970_e5f0_11ea_b3c1_525400deedabrow0_col7,#T_4334b970_e5f0_11ea_b3c1_525400deedabrow3_col11,#T_4334b970_e5f0_11ea_b3c1_525400deedabrow7_col0,#T_4334b970_e5f0_11ea_b3c1_525400deedabrow9_col14,#T_4334b970_e5f0_11ea_b3c1_525400deedabrow11_col3,#T_4334b970_e5f0_11ea_b3c1_525400deedabrow13_col16,#T_4334b970_e5f0_11ea_b3c1_525400deedabrow14_col9,#T_4334b970_e5f0_11ea_b3c1_525400deedabrow16_col13{\n",
        "            background-color:  #a9bfdc;\n",
        "            color:  #000000;\n",
        "        }#T_4334b970_e5f0_11ea_b3c1_525400deedabrow0_col8,#T_4334b970_e5f0_11ea_b3c1_525400deedabrow8_col0{\n",
        "            background-color:  #8eb3d5;\n",
        "            color:  #000000;\n",
        "        }#T_4334b970_e5f0_11ea_b3c1_525400deedabrow0_col9,#T_4334b970_e5f0_11ea_b3c1_525400deedabrow5_col14,#T_4334b970_e5f0_11ea_b3c1_525400deedabrow9_col0,#T_4334b970_e5f0_11ea_b3c1_525400deedabrow14_col5{\n",
        "            background-color:  #c5cce3;\n",
        "            color:  #000000;\n",
        "        }#T_4334b970_e5f0_11ea_b3c1_525400deedabrow0_col10,#T_4334b970_e5f0_11ea_b3c1_525400deedabrow2_col13,#T_4334b970_e5f0_11ea_b3c1_525400deedabrow7_col15,#T_4334b970_e5f0_11ea_b3c1_525400deedabrow9_col13,#T_4334b970_e5f0_11ea_b3c1_525400deedabrow10_col0,#T_4334b970_e5f0_11ea_b3c1_525400deedabrow13_col2,#T_4334b970_e5f0_11ea_b3c1_525400deedabrow13_col9,#T_4334b970_e5f0_11ea_b3c1_525400deedabrow15_col7{\n",
        "            background-color:  #bcc7e1;\n",
        "            color:  #000000;\n",
        "        }#T_4334b970_e5f0_11ea_b3c1_525400deedabrow0_col11,#T_4334b970_e5f0_11ea_b3c1_525400deedabrow4_col16,#T_4334b970_e5f0_11ea_b3c1_525400deedabrow11_col0,#T_4334b970_e5f0_11ea_b3c1_525400deedabrow16_col4{\n",
        "            background-color:  #b8c6e0;\n",
        "            color:  #000000;\n",
        "        }#T_4334b970_e5f0_11ea_b3c1_525400deedabrow0_col13,#T_4334b970_e5f0_11ea_b3c1_525400deedabrow13_col0{\n",
        "            background-color:  #a8bedc;\n",
        "            color:  #000000;\n",
        "        }#T_4334b970_e5f0_11ea_b3c1_525400deedabrow0_col14,#T_4334b970_e5f0_11ea_b3c1_525400deedabrow14_col0{\n",
        "            background-color:  #d2d3e7;\n",
        "            color:  #000000;\n",
        "        }#T_4334b970_e5f0_11ea_b3c1_525400deedabrow0_col16,#T_4334b970_e5f0_11ea_b3c1_525400deedabrow8_col15,#T_4334b970_e5f0_11ea_b3c1_525400deedabrow10_col15,#T_4334b970_e5f0_11ea_b3c1_525400deedabrow15_col8,#T_4334b970_e5f0_11ea_b3c1_525400deedabrow15_col10,#T_4334b970_e5f0_11ea_b3c1_525400deedabrow16_col0{\n",
        "            background-color:  #c1cae2;\n",
        "            color:  #000000;\n",
        "        }#T_4334b970_e5f0_11ea_b3c1_525400deedabrow1_col2,#T_4334b970_e5f0_11ea_b3c1_525400deedabrow2_col1{\n",
        "            background-color:  #1077b4;\n",
        "            color:  #f1f1f1;\n",
        "        }#T_4334b970_e5f0_11ea_b3c1_525400deedabrow1_col4,#T_4334b970_e5f0_11ea_b3c1_525400deedabrow4_col1{\n",
        "            background-color:  #7dacd1;\n",
        "            color:  #000000;\n",
        "        }#T_4334b970_e5f0_11ea_b3c1_525400deedabrow1_col5,#T_4334b970_e5f0_11ea_b3c1_525400deedabrow5_col1{\n",
        "            background-color:  #69a5cc;\n",
        "            color:  #000000;\n",
        "        }#T_4334b970_e5f0_11ea_b3c1_525400deedabrow1_col6,#T_4334b970_e5f0_11ea_b3c1_525400deedabrow6_col1{\n",
        "            background-color:  #3790c0;\n",
        "            color:  #000000;\n",
        "        }#T_4334b970_e5f0_11ea_b3c1_525400deedabrow1_col7,#T_4334b970_e5f0_11ea_b3c1_525400deedabrow7_col1,#T_4334b970_e5f0_11ea_b3c1_525400deedabrow13_col15,#T_4334b970_e5f0_11ea_b3c1_525400deedabrow15_col13{\n",
        "            background-color:  #88b1d4;\n",
        "            color:  #000000;\n",
        "        }#T_4334b970_e5f0_11ea_b3c1_525400deedabrow1_col8,#T_4334b970_e5f0_11ea_b3c1_525400deedabrow8_col1{\n",
        "            background-color:  #b1c2de;\n",
        "            color:  #000000;\n",
        "        }#T_4334b970_e5f0_11ea_b3c1_525400deedabrow1_col9,#T_4334b970_e5f0_11ea_b3c1_525400deedabrow6_col13,#T_4334b970_e5f0_11ea_b3c1_525400deedabrow7_col12,#T_4334b970_e5f0_11ea_b3c1_525400deedabrow9_col1,#T_4334b970_e5f0_11ea_b3c1_525400deedabrow12_col7,#T_4334b970_e5f0_11ea_b3c1_525400deedabrow13_col6{\n",
        "            background-color:  #adc1dd;\n",
        "            color:  #000000;\n",
        "        }#T_4334b970_e5f0_11ea_b3c1_525400deedabrow1_col10,#T_4334b970_e5f0_11ea_b3c1_525400deedabrow10_col1{\n",
        "            background-color:  #b4c4df;\n",
        "            color:  #000000;\n",
        "        }#T_4334b970_e5f0_11ea_b3c1_525400deedabrow1_col11,#T_4334b970_e5f0_11ea_b3c1_525400deedabrow11_col1{\n",
        "            background-color:  #a4bcda;\n",
        "            color:  #000000;\n",
        "        }#T_4334b970_e5f0_11ea_b3c1_525400deedabrow1_col12,#T_4334b970_e5f0_11ea_b3c1_525400deedabrow12_col1{\n",
        "            background-color:  #abbfdc;\n",
        "            color:  #000000;\n",
        "        }#T_4334b970_e5f0_11ea_b3c1_525400deedabrow1_col13,#T_4334b970_e5f0_11ea_b3c1_525400deedabrow13_col1{\n",
        "            background-color:  #a7bddb;\n",
        "            color:  #000000;\n",
        "        }#T_4334b970_e5f0_11ea_b3c1_525400deedabrow1_col14,#T_4334b970_e5f0_11ea_b3c1_525400deedabrow14_col1{\n",
        "            background-color:  #fff7fb;\n",
        "            color:  #000000;\n",
        "        }#T_4334b970_e5f0_11ea_b3c1_525400deedabrow1_col15,#T_4334b970_e5f0_11ea_b3c1_525400deedabrow15_col1{\n",
        "            background-color:  #e9e5f1;\n",
        "            color:  #000000;\n",
        "        }#T_4334b970_e5f0_11ea_b3c1_525400deedabrow1_col16,#T_4334b970_e5f0_11ea_b3c1_525400deedabrow16_col1{\n",
        "            background-color:  #5c9fc9;\n",
        "            color:  #000000;\n",
        "        }#T_4334b970_e5f0_11ea_b3c1_525400deedabrow2_col3,#T_4334b970_e5f0_11ea_b3c1_525400deedabrow3_col2{\n",
        "            background-color:  #3d93c2;\n",
        "            color:  #000000;\n",
        "        }#T_4334b970_e5f0_11ea_b3c1_525400deedabrow2_col4,#T_4334b970_e5f0_11ea_b3c1_525400deedabrow4_col2{\n",
        "            background-color:  #6da6cd;\n",
        "            color:  #000000;\n",
        "        }#T_4334b970_e5f0_11ea_b3c1_525400deedabrow2_col5,#T_4334b970_e5f0_11ea_b3c1_525400deedabrow5_col2,#T_4334b970_e5f0_11ea_b3c1_525400deedabrow5_col7,#T_4334b970_e5f0_11ea_b3c1_525400deedabrow7_col5{\n",
        "            background-color:  #509ac6;\n",
        "            color:  #000000;\n",
        "        }#T_4334b970_e5f0_11ea_b3c1_525400deedabrow2_col6,#T_4334b970_e5f0_11ea_b3c1_525400deedabrow6_col2{\n",
        "            background-color:  #2a88bc;\n",
        "            color:  #000000;\n",
        "        }#T_4334b970_e5f0_11ea_b3c1_525400deedabrow2_col7,#T_4334b970_e5f0_11ea_b3c1_525400deedabrow7_col2{\n",
        "            background-color:  #8fb4d6;\n",
        "            color:  #000000;\n",
        "        }#T_4334b970_e5f0_11ea_b3c1_525400deedabrow2_col8,#T_4334b970_e5f0_11ea_b3c1_525400deedabrow8_col2{\n",
        "            background-color:  #acc0dd;\n",
        "            color:  #000000;\n",
        "        }#T_4334b970_e5f0_11ea_b3c1_525400deedabrow2_col9,#T_4334b970_e5f0_11ea_b3c1_525400deedabrow3_col6,#T_4334b970_e5f0_11ea_b3c1_525400deedabrow6_col3,#T_4334b970_e5f0_11ea_b3c1_525400deedabrow9_col2{\n",
        "            background-color:  #86b0d3;\n",
        "            color:  #000000;\n",
        "        }#T_4334b970_e5f0_11ea_b3c1_525400deedabrow2_col10,#T_4334b970_e5f0_11ea_b3c1_525400deedabrow7_col14,#T_4334b970_e5f0_11ea_b3c1_525400deedabrow10_col2,#T_4334b970_e5f0_11ea_b3c1_525400deedabrow14_col7{\n",
        "            background-color:  #94b6d7;\n",
        "            color:  #000000;\n",
        "        }#T_4334b970_e5f0_11ea_b3c1_525400deedabrow2_col11,#T_4334b970_e5f0_11ea_b3c1_525400deedabrow11_col2{\n",
        "            background-color:  #9fbad9;\n",
        "            color:  #000000;\n",
        "        }#T_4334b970_e5f0_11ea_b3c1_525400deedabrow2_col12,#T_4334b970_e5f0_11ea_b3c1_525400deedabrow4_col12,#T_4334b970_e5f0_11ea_b3c1_525400deedabrow12_col2,#T_4334b970_e5f0_11ea_b3c1_525400deedabrow12_col4{\n",
        "            background-color:  #91b5d6;\n",
        "            color:  #000000;\n",
        "        }#T_4334b970_e5f0_11ea_b3c1_525400deedabrow2_col14,#T_4334b970_e5f0_11ea_b3c1_525400deedabrow14_col2{\n",
        "            background-color:  #f6eff7;\n",
        "            color:  #000000;\n",
        "        }#T_4334b970_e5f0_11ea_b3c1_525400deedabrow2_col15,#T_4334b970_e5f0_11ea_b3c1_525400deedabrow15_col2{\n",
        "            background-color:  #f5eef6;\n",
        "            color:  #000000;\n",
        "        }#T_4334b970_e5f0_11ea_b3c1_525400deedabrow2_col16,#T_4334b970_e5f0_11ea_b3c1_525400deedabrow6_col8,#T_4334b970_e5f0_11ea_b3c1_525400deedabrow7_col11,#T_4334b970_e5f0_11ea_b3c1_525400deedabrow8_col6,#T_4334b970_e5f0_11ea_b3c1_525400deedabrow11_col7,#T_4334b970_e5f0_11ea_b3c1_525400deedabrow16_col2{\n",
        "            background-color:  #3f93c2;\n",
        "            color:  #000000;\n",
        "        }#T_4334b970_e5f0_11ea_b3c1_525400deedabrow3_col4,#T_4334b970_e5f0_11ea_b3c1_525400deedabrow4_col3,#T_4334b970_e5f0_11ea_b3c1_525400deedabrow8_col9,#T_4334b970_e5f0_11ea_b3c1_525400deedabrow9_col8{\n",
        "            background-color:  #0a73b2;\n",
        "            color:  #f1f1f1;\n",
        "        }#T_4334b970_e5f0_11ea_b3c1_525400deedabrow3_col5,#T_4334b970_e5f0_11ea_b3c1_525400deedabrow5_col3,#T_4334b970_e5f0_11ea_b3c1_525400deedabrow5_col11,#T_4334b970_e5f0_11ea_b3c1_525400deedabrow11_col5{\n",
        "            background-color:  #78abd0;\n",
        "            color:  #000000;\n",
        "        }#T_4334b970_e5f0_11ea_b3c1_525400deedabrow3_col7,#T_4334b970_e5f0_11ea_b3c1_525400deedabrow4_col10,#T_4334b970_e5f0_11ea_b3c1_525400deedabrow4_col14,#T_4334b970_e5f0_11ea_b3c1_525400deedabrow7_col3,#T_4334b970_e5f0_11ea_b3c1_525400deedabrow10_col4,#T_4334b970_e5f0_11ea_b3c1_525400deedabrow14_col4,#T_4334b970_e5f0_11ea_b3c1_525400deedabrow14_col16,#T_4334b970_e5f0_11ea_b3c1_525400deedabrow16_col14{\n",
        "            background-color:  #ced0e6;\n",
        "            color:  #000000;\n",
        "        }#T_4334b970_e5f0_11ea_b3c1_525400deedabrow3_col9,#T_4334b970_e5f0_11ea_b3c1_525400deedabrow9_col3{\n",
        "            background-color:  #9ebad9;\n",
        "            color:  #000000;\n",
        "        }#T_4334b970_e5f0_11ea_b3c1_525400deedabrow3_col10,#T_4334b970_e5f0_11ea_b3c1_525400deedabrow10_col3,#T_4334b970_e5f0_11ea_b3c1_525400deedabrow12_col13,#T_4334b970_e5f0_11ea_b3c1_525400deedabrow13_col12{\n",
        "            background-color:  #a1bbda;\n",
        "            color:  #000000;\n",
        "        }#T_4334b970_e5f0_11ea_b3c1_525400deedabrow3_col12,#T_4334b970_e5f0_11ea_b3c1_525400deedabrow12_col3{\n",
        "            background-color:  #7eadd1;\n",
        "            color:  #000000;\n",
        "        }#T_4334b970_e5f0_11ea_b3c1_525400deedabrow3_col13,#T_4334b970_e5f0_11ea_b3c1_525400deedabrow13_col3{\n",
        "            background-color:  #c6cce3;\n",
        "            color:  #000000;\n",
        "        }#T_4334b970_e5f0_11ea_b3c1_525400deedabrow3_col14,#T_4334b970_e5f0_11ea_b3c1_525400deedabrow14_col3{\n",
        "            background-color:  #e3e0ee;\n",
        "            color:  #000000;\n",
        "        }#T_4334b970_e5f0_11ea_b3c1_525400deedabrow3_col15,#T_4334b970_e5f0_11ea_b3c1_525400deedabrow15_col3{\n",
        "            background-color:  #eee8f3;\n",
        "            color:  #000000;\n",
        "        }#T_4334b970_e5f0_11ea_b3c1_525400deedabrow3_col16,#T_4334b970_e5f0_11ea_b3c1_525400deedabrow16_col3{\n",
        "            background-color:  #80aed2;\n",
        "            color:  #000000;\n",
        "        }#T_4334b970_e5f0_11ea_b3c1_525400deedabrow4_col5,#T_4334b970_e5f0_11ea_b3c1_525400deedabrow5_col4{\n",
        "            background-color:  #549cc7;\n",
        "            color:  #000000;\n",
        "        }#T_4334b970_e5f0_11ea_b3c1_525400deedabrow4_col6,#T_4334b970_e5f0_11ea_b3c1_525400deedabrow6_col4{\n",
        "            background-color:  #a5bddb;\n",
        "            color:  #000000;\n",
        "        }#T_4334b970_e5f0_11ea_b3c1_525400deedabrow4_col7,#T_4334b970_e5f0_11ea_b3c1_525400deedabrow4_col15,#T_4334b970_e5f0_11ea_b3c1_525400deedabrow7_col4,#T_4334b970_e5f0_11ea_b3c1_525400deedabrow12_col15,#T_4334b970_e5f0_11ea_b3c1_525400deedabrow15_col4,#T_4334b970_e5f0_11ea_b3c1_525400deedabrow15_col12{\n",
        "            background-color:  #c2cbe2;\n",
        "            color:  #000000;\n",
        "        }#T_4334b970_e5f0_11ea_b3c1_525400deedabrow4_col8,#T_4334b970_e5f0_11ea_b3c1_525400deedabrow8_col4,#T_4334b970_e5f0_11ea_b3c1_525400deedabrow15_col16,#T_4334b970_e5f0_11ea_b3c1_525400deedabrow16_col15{\n",
        "            background-color:  #f0eaf4;\n",
        "            color:  #000000;\n",
        "        }#T_4334b970_e5f0_11ea_b3c1_525400deedabrow4_col9,#T_4334b970_e5f0_11ea_b3c1_525400deedabrow9_col4{\n",
        "            background-color:  #d3d4e7;\n",
        "            color:  #000000;\n",
        "        }#T_4334b970_e5f0_11ea_b3c1_525400deedabrow4_col11,#T_4334b970_e5f0_11ea_b3c1_525400deedabrow11_col4{\n",
        "            background-color:  #e0deed;\n",
        "            color:  #000000;\n",
        "        }#T_4334b970_e5f0_11ea_b3c1_525400deedabrow4_col13,#T_4334b970_e5f0_11ea_b3c1_525400deedabrow6_col14,#T_4334b970_e5f0_11ea_b3c1_525400deedabrow13_col4,#T_4334b970_e5f0_11ea_b3c1_525400deedabrow14_col6{\n",
        "            background-color:  #cdd0e5;\n",
        "            color:  #000000;\n",
        "        }#T_4334b970_e5f0_11ea_b3c1_525400deedabrow5_col6,#T_4334b970_e5f0_11ea_b3c1_525400deedabrow6_col5,#T_4334b970_e5f0_11ea_b3c1_525400deedabrow12_col16,#T_4334b970_e5f0_11ea_b3c1_525400deedabrow16_col12{\n",
        "            background-color:  #1278b4;\n",
        "            color:  #f1f1f1;\n",
        "        }#T_4334b970_e5f0_11ea_b3c1_525400deedabrow5_col8,#T_4334b970_e5f0_11ea_b3c1_525400deedabrow8_col5,#T_4334b970_e5f0_11ea_b3c1_525400deedabrow10_col13,#T_4334b970_e5f0_11ea_b3c1_525400deedabrow13_col10{\n",
        "            background-color:  #9cb9d9;\n",
        "            color:  #000000;\n",
        "        }#T_4334b970_e5f0_11ea_b3c1_525400deedabrow5_col9,#T_4334b970_e5f0_11ea_b3c1_525400deedabrow9_col5{\n",
        "            background-color:  #358fc0;\n",
        "            color:  #000000;\n",
        "        }#T_4334b970_e5f0_11ea_b3c1_525400deedabrow5_col10,#T_4334b970_e5f0_11ea_b3c1_525400deedabrow10_col5{\n",
        "            background-color:  #348ebf;\n",
        "            color:  #000000;\n",
        "        }#T_4334b970_e5f0_11ea_b3c1_525400deedabrow5_col12,#T_4334b970_e5f0_11ea_b3c1_525400deedabrow12_col5{\n",
        "            background-color:  #187cb6;\n",
        "            color:  #000000;\n",
        "        }#T_4334b970_e5f0_11ea_b3c1_525400deedabrow5_col15,#T_4334b970_e5f0_11ea_b3c1_525400deedabrow15_col5{\n",
        "            background-color:  #dcdaeb;\n",
        "            color:  #000000;\n",
        "        }#T_4334b970_e5f0_11ea_b3c1_525400deedabrow5_col16,#T_4334b970_e5f0_11ea_b3c1_525400deedabrow16_col5{\n",
        "            background-color:  #0569a5;\n",
        "            color:  #f1f1f1;\n",
        "        }#T_4334b970_e5f0_11ea_b3c1_525400deedabrow6_col7,#T_4334b970_e5f0_11ea_b3c1_525400deedabrow7_col6{\n",
        "            background-color:  #308cbe;\n",
        "            color:  #000000;\n",
        "        }#T_4334b970_e5f0_11ea_b3c1_525400deedabrow6_col9,#T_4334b970_e5f0_11ea_b3c1_525400deedabrow9_col6{\n",
        "            background-color:  #2383ba;\n",
        "            color:  #000000;\n",
        "        }#T_4334b970_e5f0_11ea_b3c1_525400deedabrow6_col10,#T_4334b970_e5f0_11ea_b3c1_525400deedabrow10_col6{\n",
        "            background-color:  #0771b1;\n",
        "            color:  #f1f1f1;\n",
        "        }#T_4334b970_e5f0_11ea_b3c1_525400deedabrow6_col11,#T_4334b970_e5f0_11ea_b3c1_525400deedabrow11_col6{\n",
        "            background-color:  #2685bb;\n",
        "            color:  #000000;\n",
        "        }#T_4334b970_e5f0_11ea_b3c1_525400deedabrow6_col12,#T_4334b970_e5f0_11ea_b3c1_525400deedabrow11_col12,#T_4334b970_e5f0_11ea_b3c1_525400deedabrow12_col6,#T_4334b970_e5f0_11ea_b3c1_525400deedabrow12_col11{\n",
        "            background-color:  #73a9cf;\n",
        "            color:  #000000;\n",
        "        }#T_4334b970_e5f0_11ea_b3c1_525400deedabrow6_col15,#T_4334b970_e5f0_11ea_b3c1_525400deedabrow15_col6{\n",
        "            background-color:  #ede8f3;\n",
        "            color:  #000000;\n",
        "        }#T_4334b970_e5f0_11ea_b3c1_525400deedabrow6_col16,#T_4334b970_e5f0_11ea_b3c1_525400deedabrow16_col6{\n",
        "            background-color:  #045f95;\n",
        "            color:  #f1f1f1;\n",
        "        }#T_4334b970_e5f0_11ea_b3c1_525400deedabrow7_col8,#T_4334b970_e5f0_11ea_b3c1_525400deedabrow7_col16,#T_4334b970_e5f0_11ea_b3c1_525400deedabrow8_col7,#T_4334b970_e5f0_11ea_b3c1_525400deedabrow16_col7{\n",
        "            background-color:  #167bb6;\n",
        "            color:  #000000;\n",
        "        }#T_4334b970_e5f0_11ea_b3c1_525400deedabrow7_col9,#T_4334b970_e5f0_11ea_b3c1_525400deedabrow9_col7{\n",
        "            background-color:  #4897c4;\n",
        "            color:  #000000;\n",
        "        }#T_4334b970_e5f0_11ea_b3c1_525400deedabrow7_col10,#T_4334b970_e5f0_11ea_b3c1_525400deedabrow10_col7{\n",
        "            background-color:  #1379b5;\n",
        "            color:  #f1f1f1;\n",
        "        }#T_4334b970_e5f0_11ea_b3c1_525400deedabrow7_col13,#T_4334b970_e5f0_11ea_b3c1_525400deedabrow13_col7{\n",
        "            background-color:  #afc1dd;\n",
        "            color:  #000000;\n",
        "        }#T_4334b970_e5f0_11ea_b3c1_525400deedabrow8_col10,#T_4334b970_e5f0_11ea_b3c1_525400deedabrow10_col8{\n",
        "            background-color:  #056aa6;\n",
        "            color:  #f1f1f1;\n",
        "        }#T_4334b970_e5f0_11ea_b3c1_525400deedabrow8_col11,#T_4334b970_e5f0_11ea_b3c1_525400deedabrow11_col8{\n",
        "            background-color:  #056ead;\n",
        "            color:  #f1f1f1;\n",
        "        }#T_4334b970_e5f0_11ea_b3c1_525400deedabrow8_col12,#T_4334b970_e5f0_11ea_b3c1_525400deedabrow12_col8{\n",
        "            background-color:  #8bb2d4;\n",
        "            color:  #000000;\n",
        "        }#T_4334b970_e5f0_11ea_b3c1_525400deedabrow8_col13,#T_4334b970_e5f0_11ea_b3c1_525400deedabrow13_col8{\n",
        "            background-color:  #99b8d8;\n",
        "            color:  #000000;\n",
        "        }#T_4334b970_e5f0_11ea_b3c1_525400deedabrow8_col14,#T_4334b970_e5f0_11ea_b3c1_525400deedabrow11_col14,#T_4334b970_e5f0_11ea_b3c1_525400deedabrow14_col8,#T_4334b970_e5f0_11ea_b3c1_525400deedabrow14_col11{\n",
        "            background-color:  #75a9cf;\n",
        "            color:  #000000;\n",
        "        }#T_4334b970_e5f0_11ea_b3c1_525400deedabrow8_col16,#T_4334b970_e5f0_11ea_b3c1_525400deedabrow16_col8{\n",
        "            background-color:  #0570b0;\n",
        "            color:  #f1f1f1;\n",
        "        }#T_4334b970_e5f0_11ea_b3c1_525400deedabrow9_col10,#T_4334b970_e5f0_11ea_b3c1_525400deedabrow10_col9{\n",
        "            background-color:  #056dac;\n",
        "            color:  #f1f1f1;\n",
        "        }#T_4334b970_e5f0_11ea_b3c1_525400deedabrow9_col11,#T_4334b970_e5f0_11ea_b3c1_525400deedabrow11_col9{\n",
        "            background-color:  #046096;\n",
        "            color:  #f1f1f1;\n",
        "        }#T_4334b970_e5f0_11ea_b3c1_525400deedabrow9_col12,#T_4334b970_e5f0_11ea_b3c1_525400deedabrow12_col9{\n",
        "            background-color:  #4496c3;\n",
        "            color:  #000000;\n",
        "        }#T_4334b970_e5f0_11ea_b3c1_525400deedabrow9_col15,#T_4334b970_e5f0_11ea_b3c1_525400deedabrow15_col9{\n",
        "            background-color:  #d9d8ea;\n",
        "            color:  #000000;\n",
        "        }#T_4334b970_e5f0_11ea_b3c1_525400deedabrow9_col16,#T_4334b970_e5f0_11ea_b3c1_525400deedabrow16_col9{\n",
        "            background-color:  #045b8e;\n",
        "            color:  #f1f1f1;\n",
        "        }#T_4334b970_e5f0_11ea_b3c1_525400deedabrow10_col11,#T_4334b970_e5f0_11ea_b3c1_525400deedabrow11_col10{\n",
        "            background-color:  #04639b;\n",
        "            color:  #f1f1f1;\n",
        "        }#T_4334b970_e5f0_11ea_b3c1_525400deedabrow10_col12,#T_4334b970_e5f0_11ea_b3c1_525400deedabrow12_col10{\n",
        "            background-color:  #5ea0ca;\n",
        "            color:  #000000;\n",
        "        }#T_4334b970_e5f0_11ea_b3c1_525400deedabrow10_col14,#T_4334b970_e5f0_11ea_b3c1_525400deedabrow14_col10{\n",
        "            background-color:  #589ec8;\n",
        "            color:  #000000;\n",
        "        }#T_4334b970_e5f0_11ea_b3c1_525400deedabrow10_col16,#T_4334b970_e5f0_11ea_b3c1_525400deedabrow16_col10{\n",
        "            background-color:  #046198;\n",
        "            color:  #f1f1f1;\n",
        "        }#T_4334b970_e5f0_11ea_b3c1_525400deedabrow11_col13,#T_4334b970_e5f0_11ea_b3c1_525400deedabrow13_col11{\n",
        "            background-color:  #b3c3de;\n",
        "            color:  #000000;\n",
        "        }#T_4334b970_e5f0_11ea_b3c1_525400deedabrow11_col15,#T_4334b970_e5f0_11ea_b3c1_525400deedabrow15_col11{\n",
        "            background-color:  #d0d1e6;\n",
        "            color:  #000000;\n",
        "        }#T_4334b970_e5f0_11ea_b3c1_525400deedabrow11_col16,#T_4334b970_e5f0_11ea_b3c1_525400deedabrow16_col11{\n",
        "            background-color:  #0568a3;\n",
        "            color:  #f1f1f1;\n",
        "        }#T_4334b970_e5f0_11ea_b3c1_525400deedabrow13_col14,#T_4334b970_e5f0_11ea_b3c1_525400deedabrow14_col13{\n",
        "            background-color:  #8cb3d5;\n",
        "            color:  #000000;\n",
        "        }#T_4334b970_e5f0_11ea_b3c1_525400deedabrow14_col15,#T_4334b970_e5f0_11ea_b3c1_525400deedabrow15_col14{\n",
        "            background-color:  #0c74b2;\n",
        "            color:  #f1f1f1;\n",
        "        }</style><table id=\"T_4334b970_e5f0_11ea_b3c1_525400deedab\" ><thead>    <tr>        <th class=\"blank level0\" ></th>        <th class=\"col_heading level0 col0\" >Rt</th>        <th class=\"col_heading level0 col1\" >theta</th>        <th class=\"col_heading level0 col2\" >kappa</th>        <th class=\"col_heading level0 col3\" >rho</th>        <th class=\"col_heading level0 col4\" >sigma</th>        <th class=\"col_heading level0 col5\" >School_closing</th>        <th class=\"col_heading level0 col6\" >Workplace_closing</th>        <th class=\"col_heading level0 col7\" >Cancel_events</th>        <th class=\"col_heading level0 col8\" >Gatherings_restrictions</th>        <th class=\"col_heading level0 col9\" >Transport_closing</th>        <th class=\"col_heading level0 col10\" >Stay_home_restrictions</th>        <th class=\"col_heading level0 col11\" >Internal_movement_restrictions</th>        <th class=\"col_heading level0 col12\" >International_movement_restrictions</th>        <th class=\"col_heading level0 col13\" >Information_campaigns</th>        <th class=\"col_heading level0 col14\" >Testing_policy</th>        <th class=\"col_heading level0 col15\" >Contact_tracing</th>        <th class=\"col_heading level0 col16\" >Stringency_index</th>    </tr></thead><tbody>\n",
        "                <tr>\n",
        "                        <th id=\"T_4334b970_e5f0_11ea_b3c1_525400deedablevel0_row0\" class=\"row_heading level0 row0\" >Rt</th>\n",
        "                        <td id=\"T_4334b970_e5f0_11ea_b3c1_525400deedabrow0_col0\" class=\"data row0 col0\" >1.000000</td>\n",
        "                        <td id=\"T_4334b970_e5f0_11ea_b3c1_525400deedabrow0_col1\" class=\"data row0 col1\" >-0.101428</td>\n",
        "                        <td id=\"T_4334b970_e5f0_11ea_b3c1_525400deedabrow0_col2\" class=\"data row0 col2\" >-0.048725</td>\n",
        "                        <td id=\"T_4334b970_e5f0_11ea_b3c1_525400deedabrow0_col3\" class=\"data row0 col3\" >0.159278</td>\n",
        "                        <td id=\"T_4334b970_e5f0_11ea_b3c1_525400deedabrow0_col4\" class=\"data row0 col4\" >-0.224079</td>\n",
        "                        <td id=\"T_4334b970_e5f0_11ea_b3c1_525400deedabrow0_col5\" class=\"data row0 col5\" >-0.335652</td>\n",
        "                        <td id=\"T_4334b970_e5f0_11ea_b3c1_525400deedabrow0_col6\" class=\"data row0 col6\" >-0.120512</td>\n",
        "                        <td id=\"T_4334b970_e5f0_11ea_b3c1_525400deedabrow0_col7\" class=\"data row0 col7\" >0.001850</td>\n",
        "                        <td id=\"T_4334b970_e5f0_11ea_b3c1_525400deedabrow0_col8\" class=\"data row0 col8\" >0.116510</td>\n",
        "                        <td id=\"T_4334b970_e5f0_11ea_b3c1_525400deedabrow0_col9\" class=\"data row0 col9\" >-0.123554</td>\n",
        "                        <td id=\"T_4334b970_e5f0_11ea_b3c1_525400deedabrow0_col10\" class=\"data row0 col10\" >-0.080197</td>\n",
        "                        <td id=\"T_4334b970_e5f0_11ea_b3c1_525400deedabrow0_col11\" class=\"data row0 col11\" >-0.063679</td>\n",
        "                        <td id=\"T_4334b970_e5f0_11ea_b3c1_525400deedabrow0_col12\" class=\"data row0 col12\" >-0.222066</td>\n",
        "                        <td id=\"T_4334b970_e5f0_11ea_b3c1_525400deedabrow0_col13\" class=\"data row0 col13\" >0.011667</td>\n",
        "                        <td id=\"T_4334b970_e5f0_11ea_b3c1_525400deedabrow0_col14\" class=\"data row0 col14\" >-0.193897</td>\n",
        "                        <td id=\"T_4334b970_e5f0_11ea_b3c1_525400deedabrow0_col15\" class=\"data row0 col15\" >-0.116956</td>\n",
        "                        <td id=\"T_4334b970_e5f0_11ea_b3c1_525400deedabrow0_col16\" class=\"data row0 col16\" >-0.104869</td>\n",
        "            </tr>\n",
        "            <tr>\n",
        "                        <th id=\"T_4334b970_e5f0_11ea_b3c1_525400deedablevel0_row1\" class=\"row_heading level0 row1\" >theta</th>\n",
        "                        <td id=\"T_4334b970_e5f0_11ea_b3c1_525400deedabrow1_col0\" class=\"data row1 col0\" >-0.101428</td>\n",
        "                        <td id=\"T_4334b970_e5f0_11ea_b3c1_525400deedabrow1_col1\" class=\"data row1 col1\" >1.000000</td>\n",
        "                        <td id=\"T_4334b970_e5f0_11ea_b3c1_525400deedabrow1_col2\" class=\"data row1 col2\" >0.559018</td>\n",
        "                        <td id=\"T_4334b970_e5f0_11ea_b3c1_525400deedabrow1_col3\" class=\"data row1 col3\" >0.158664</td>\n",
        "                        <td id=\"T_4334b970_e5f0_11ea_b3c1_525400deedabrow1_col4\" class=\"data row1 col4\" >0.182437</td>\n",
        "                        <td id=\"T_4334b970_e5f0_11ea_b3c1_525400deedabrow1_col5\" class=\"data row1 col5\" >0.250809</td>\n",
        "                        <td id=\"T_4334b970_e5f0_11ea_b3c1_525400deedabrow1_col6\" class=\"data row1 col6\" >0.408436</td>\n",
        "                        <td id=\"T_4334b970_e5f0_11ea_b3c1_525400deedabrow1_col7\" class=\"data row1 col7\" >0.139543</td>\n",
        "                        <td id=\"T_4334b970_e5f0_11ea_b3c1_525400deedabrow1_col8\" class=\"data row1 col8\" >-0.035184</td>\n",
        "                        <td id=\"T_4334b970_e5f0_11ea_b3c1_525400deedabrow1_col9\" class=\"data row1 col9\" >-0.012633</td>\n",
        "                        <td id=\"T_4334b970_e5f0_11ea_b3c1_525400deedabrow1_col10\" class=\"data row1 col10\" >-0.046921</td>\n",
        "                        <td id=\"T_4334b970_e5f0_11ea_b3c1_525400deedabrow1_col11\" class=\"data row1 col11\" >0.026866</td>\n",
        "                        <td id=\"T_4334b970_e5f0_11ea_b3c1_525400deedabrow1_col12\" class=\"data row1 col12\" >-0.000757</td>\n",
        "                        <td id=\"T_4334b970_e5f0_11ea_b3c1_525400deedabrow1_col13\" class=\"data row1 col13\" >0.018362</td>\n",
        "                        <td id=\"T_4334b970_e5f0_11ea_b3c1_525400deedabrow1_col14\" class=\"data row1 col14\" >-0.569096</td>\n",
        "                        <td id=\"T_4334b970_e5f0_11ea_b3c1_525400deedabrow1_col15\" class=\"data row1 col15\" >-0.351275</td>\n",
        "                        <td id=\"T_4334b970_e5f0_11ea_b3c1_525400deedabrow1_col16\" class=\"data row1 col16\" >0.289289</td>\n",
        "            </tr>\n",
        "            <tr>\n",
        "                        <th id=\"T_4334b970_e5f0_11ea_b3c1_525400deedablevel0_row2\" class=\"row_heading level0 row2\" >kappa</th>\n",
        "                        <td id=\"T_4334b970_e5f0_11ea_b3c1_525400deedabrow2_col0\" class=\"data row2 col0\" >-0.048725</td>\n",
        "                        <td id=\"T_4334b970_e5f0_11ea_b3c1_525400deedabrow2_col1\" class=\"data row2 col1\" >0.559018</td>\n",
        "                        <td id=\"T_4334b970_e5f0_11ea_b3c1_525400deedabrow2_col2\" class=\"data row2 col2\" >1.000000</td>\n",
        "                        <td id=\"T_4334b970_e5f0_11ea_b3c1_525400deedabrow2_col3\" class=\"data row2 col3\" >0.389073</td>\n",
        "                        <td id=\"T_4334b970_e5f0_11ea_b3c1_525400deedabrow2_col4\" class=\"data row2 col4\" >0.234476</td>\n",
        "                        <td id=\"T_4334b970_e5f0_11ea_b3c1_525400deedabrow2_col5\" class=\"data row2 col5\" >0.328292</td>\n",
        "                        <td id=\"T_4334b970_e5f0_11ea_b3c1_525400deedabrow2_col6\" class=\"data row2 col6\" >0.459884</td>\n",
        "                        <td id=\"T_4334b970_e5f0_11ea_b3c1_525400deedabrow2_col7\" class=\"data row2 col7\" >0.107771</td>\n",
        "                        <td id=\"T_4334b970_e5f0_11ea_b3c1_525400deedabrow2_col8\" class=\"data row2 col8\" >-0.009609</td>\n",
        "                        <td id=\"T_4334b970_e5f0_11ea_b3c1_525400deedabrow2_col9\" class=\"data row2 col9\" >0.142272</td>\n",
        "                        <td id=\"T_4334b970_e5f0_11ea_b3c1_525400deedabrow2_col10\" class=\"data row2 col10\" >0.089416</td>\n",
        "                        <td id=\"T_4334b970_e5f0_11ea_b3c1_525400deedabrow2_col11\" class=\"data row2 col11\" >0.046712</td>\n",
        "                        <td id=\"T_4334b970_e5f0_11ea_b3c1_525400deedabrow2_col12\" class=\"data row2 col12\" >0.100990</td>\n",
        "                        <td id=\"T_4334b970_e5f0_11ea_b3c1_525400deedabrow2_col13\" class=\"data row2 col13\" >-0.079774</td>\n",
        "                        <td id=\"T_4334b970_e5f0_11ea_b3c1_525400deedabrow2_col14\" class=\"data row2 col14\" >-0.476356</td>\n",
        "                        <td id=\"T_4334b970_e5f0_11ea_b3c1_525400deedabrow2_col15\" class=\"data row2 col15\" >-0.461505</td>\n",
        "                        <td id=\"T_4334b970_e5f0_11ea_b3c1_525400deedabrow2_col16\" class=\"data row2 col16\" >0.384793</td>\n",
        "            </tr>\n",
        "            <tr>\n",
        "                        <th id=\"T_4334b970_e5f0_11ea_b3c1_525400deedablevel0_row3\" class=\"row_heading level0 row3\" >rho</th>\n",
        "                        <td id=\"T_4334b970_e5f0_11ea_b3c1_525400deedabrow3_col0\" class=\"data row3 col0\" >0.159278</td>\n",
        "                        <td id=\"T_4334b970_e5f0_11ea_b3c1_525400deedabrow3_col1\" class=\"data row3 col1\" >0.158664</td>\n",
        "                        <td id=\"T_4334b970_e5f0_11ea_b3c1_525400deedabrow3_col2\" class=\"data row3 col2\" >0.389073</td>\n",
        "                        <td id=\"T_4334b970_e5f0_11ea_b3c1_525400deedabrow3_col3\" class=\"data row3 col3\" >1.000000</td>\n",
        "                        <td id=\"T_4334b970_e5f0_11ea_b3c1_525400deedabrow3_col4\" class=\"data row3 col4\" >0.588753</td>\n",
        "                        <td id=\"T_4334b970_e5f0_11ea_b3c1_525400deedabrow3_col5\" class=\"data row3 col5\" >0.202505</td>\n",
        "                        <td id=\"T_4334b970_e5f0_11ea_b3c1_525400deedabrow3_col6\" class=\"data row3 col6\" >0.142370</td>\n",
        "                        <td id=\"T_4334b970_e5f0_11ea_b3c1_525400deedabrow3_col7\" class=\"data row3 col7\" >-0.169687</td>\n",
        "                        <td id=\"T_4334b970_e5f0_11ea_b3c1_525400deedabrow3_col8\" class=\"data row3 col8\" >-0.099826</td>\n",
        "                        <td id=\"T_4334b970_e5f0_11ea_b3c1_525400deedabrow3_col9\" class=\"data row3 col9\" >0.051737</td>\n",
        "                        <td id=\"T_4334b970_e5f0_11ea_b3c1_525400deedabrow3_col10\" class=\"data row3 col10\" >0.038385</td>\n",
        "                        <td id=\"T_4334b970_e5f0_11ea_b3c1_525400deedabrow3_col11\" class=\"data row3 col11\" >0.004959</td>\n",
        "                        <td id=\"T_4334b970_e5f0_11ea_b3c1_525400deedabrow3_col12\" class=\"data row3 col12\" >0.177261</td>\n",
        "                        <td id=\"T_4334b970_e5f0_11ea_b3c1_525400deedabrow3_col13\" class=\"data row3 col13\" >-0.127863</td>\n",
        "                        <td id=\"T_4334b970_e5f0_11ea_b3c1_525400deedabrow3_col14\" class=\"data row3 col14\" >-0.310844</td>\n",
        "                        <td id=\"T_4334b970_e5f0_11ea_b3c1_525400deedabrow3_col15\" class=\"data row3 col15\" >-0.385681</td>\n",
        "                        <td id=\"T_4334b970_e5f0_11ea_b3c1_525400deedabrow3_col16\" class=\"data row3 col16\" >0.170008</td>\n",
        "            </tr>\n",
        "            <tr>\n",
        "                        <th id=\"T_4334b970_e5f0_11ea_b3c1_525400deedablevel0_row4\" class=\"row_heading level0 row4\" >sigma</th>\n",
        "                        <td id=\"T_4334b970_e5f0_11ea_b3c1_525400deedabrow4_col0\" class=\"data row4 col0\" >-0.224079</td>\n",
        "                        <td id=\"T_4334b970_e5f0_11ea_b3c1_525400deedabrow4_col1\" class=\"data row4 col1\" >0.182437</td>\n",
        "                        <td id=\"T_4334b970_e5f0_11ea_b3c1_525400deedabrow4_col2\" class=\"data row4 col2\" >0.234476</td>\n",
        "                        <td id=\"T_4334b970_e5f0_11ea_b3c1_525400deedabrow4_col3\" class=\"data row4 col3\" >0.588753</td>\n",
        "                        <td id=\"T_4334b970_e5f0_11ea_b3c1_525400deedabrow4_col4\" class=\"data row4 col4\" >1.000000</td>\n",
        "                        <td id=\"T_4334b970_e5f0_11ea_b3c1_525400deedabrow4_col5\" class=\"data row4 col5\" >0.318039</td>\n",
        "                        <td id=\"T_4334b970_e5f0_11ea_b3c1_525400deedabrow4_col6\" class=\"data row4 col6\" >0.021127</td>\n",
        "                        <td id=\"T_4334b970_e5f0_11ea_b3c1_525400deedabrow4_col7\" class=\"data row4 col7\" >-0.109781</td>\n",
        "                        <td id=\"T_4334b970_e5f0_11ea_b3c1_525400deedabrow4_col8\" class=\"data row4 col8\" >-0.415509</td>\n",
        "                        <td id=\"T_4334b970_e5f0_11ea_b3c1_525400deedabrow4_col9\" class=\"data row4 col9\" >-0.197223</td>\n",
        "                        <td id=\"T_4334b970_e5f0_11ea_b3c1_525400deedabrow4_col10\" class=\"data row4 col10\" >-0.167343</td>\n",
        "                        <td id=\"T_4334b970_e5f0_11ea_b3c1_525400deedabrow4_col11\" class=\"data row4 col11\" >-0.290669</td>\n",
        "                        <td id=\"T_4334b970_e5f0_11ea_b3c1_525400deedabrow4_col12\" class=\"data row4 col12\" >0.103371</td>\n",
        "                        <td id=\"T_4334b970_e5f0_11ea_b3c1_525400deedabrow4_col13\" class=\"data row4 col13\" >-0.161043</td>\n",
        "                        <td id=\"T_4334b970_e5f0_11ea_b3c1_525400deedabrow4_col14\" class=\"data row4 col14\" >-0.168901</td>\n",
        "                        <td id=\"T_4334b970_e5f0_11ea_b3c1_525400deedabrow4_col15\" class=\"data row4 col15\" >-0.110883</td>\n",
        "                        <td id=\"T_4334b970_e5f0_11ea_b3c1_525400deedabrow4_col16\" class=\"data row4 col16\" >-0.062276</td>\n",
        "            </tr>\n",
        "            <tr>\n",
        "                        <th id=\"T_4334b970_e5f0_11ea_b3c1_525400deedablevel0_row5\" class=\"row_heading level0 row5\" >School_closing</th>\n",
        "                        <td id=\"T_4334b970_e5f0_11ea_b3c1_525400deedabrow5_col0\" class=\"data row5 col0\" >-0.335652</td>\n",
        "                        <td id=\"T_4334b970_e5f0_11ea_b3c1_525400deedabrow5_col1\" class=\"data row5 col1\" >0.250809</td>\n",
        "                        <td id=\"T_4334b970_e5f0_11ea_b3c1_525400deedabrow5_col2\" class=\"data row5 col2\" >0.328292</td>\n",
        "                        <td id=\"T_4334b970_e5f0_11ea_b3c1_525400deedabrow5_col3\" class=\"data row5 col3\" >0.202505</td>\n",
        "                        <td id=\"T_4334b970_e5f0_11ea_b3c1_525400deedabrow5_col4\" class=\"data row5 col4\" >0.318039</td>\n",
        "                        <td id=\"T_4334b970_e5f0_11ea_b3c1_525400deedabrow5_col5\" class=\"data row5 col5\" >1.000000</td>\n",
        "                        <td id=\"T_4334b970_e5f0_11ea_b3c1_525400deedabrow5_col6\" class=\"data row5 col6\" >0.553546</td>\n",
        "                        <td id=\"T_4334b970_e5f0_11ea_b3c1_525400deedabrow5_col7\" class=\"data row5 col7\" >0.325979</td>\n",
        "                        <td id=\"T_4334b970_e5f0_11ea_b3c1_525400deedabrow5_col8\" class=\"data row5 col8\" >0.056600</td>\n",
        "                        <td id=\"T_4334b970_e5f0_11ea_b3c1_525400deedabrow5_col9\" class=\"data row5 col9\" >0.417242</td>\n",
        "                        <td id=\"T_4334b970_e5f0_11ea_b3c1_525400deedabrow5_col10\" class=\"data row5 col10\" >0.417889</td>\n",
        "                        <td id=\"T_4334b970_e5f0_11ea_b3c1_525400deedabrow5_col11\" class=\"data row5 col11\" >0.200801</td>\n",
        "                        <td id=\"T_4334b970_e5f0_11ea_b3c1_525400deedabrow5_col12\" class=\"data row5 col12\" >0.529272</td>\n",
        "                        <td id=\"T_4334b970_e5f0_11ea_b3c1_525400deedabrow5_col13\" class=\"data row5 col13\" >-0.049544</td>\n",
        "                        <td id=\"T_4334b970_e5f0_11ea_b3c1_525400deedabrow5_col14\" class=\"data row5 col14\" >-0.124293</td>\n",
        "                        <td id=\"T_4334b970_e5f0_11ea_b3c1_525400deedabrow5_col15\" class=\"data row5 col15\" >-0.261483</td>\n",
        "                        <td id=\"T_4334b970_e5f0_11ea_b3c1_525400deedabrow5_col16\" class=\"data row5 col16\" >0.664888</td>\n",
        "            </tr>\n",
        "            <tr>\n",
        "                        <th id=\"T_4334b970_e5f0_11ea_b3c1_525400deedablevel0_row6\" class=\"row_heading level0 row6\" >Workplace_closing</th>\n",
        "                        <td id=\"T_4334b970_e5f0_11ea_b3c1_525400deedabrow6_col0\" class=\"data row6 col0\" >-0.120512</td>\n",
        "                        <td id=\"T_4334b970_e5f0_11ea_b3c1_525400deedabrow6_col1\" class=\"data row6 col1\" >0.408436</td>\n",
        "                        <td id=\"T_4334b970_e5f0_11ea_b3c1_525400deedabrow6_col2\" class=\"data row6 col2\" >0.459884</td>\n",
        "                        <td id=\"T_4334b970_e5f0_11ea_b3c1_525400deedabrow6_col3\" class=\"data row6 col3\" >0.142370</td>\n",
        "                        <td id=\"T_4334b970_e5f0_11ea_b3c1_525400deedabrow6_col4\" class=\"data row6 col4\" >0.021127</td>\n",
        "                        <td id=\"T_4334b970_e5f0_11ea_b3c1_525400deedabrow6_col5\" class=\"data row6 col5\" >0.553546</td>\n",
        "                        <td id=\"T_4334b970_e5f0_11ea_b3c1_525400deedabrow6_col6\" class=\"data row6 col6\" >1.000000</td>\n",
        "                        <td id=\"T_4334b970_e5f0_11ea_b3c1_525400deedabrow6_col7\" class=\"data row6 col7\" >0.434428</td>\n",
        "                        <td id=\"T_4334b970_e5f0_11ea_b3c1_525400deedabrow6_col8\" class=\"data row6 col8\" >0.383003</td>\n",
        "                        <td id=\"T_4334b970_e5f0_11ea_b3c1_525400deedabrow6_col9\" class=\"data row6 col9\" >0.490404</td>\n",
        "                        <td id=\"T_4334b970_e5f0_11ea_b3c1_525400deedabrow6_col10\" class=\"data row6 col10\" >0.598424</td>\n",
        "                        <td id=\"T_4334b970_e5f0_11ea_b3c1_525400deedabrow6_col11\" class=\"data row6 col11\" >0.473532</td>\n",
        "                        <td id=\"T_4334b970_e5f0_11ea_b3c1_525400deedabrow6_col12\" class=\"data row6 col12\" >0.218431</td>\n",
        "                        <td id=\"T_4334b970_e5f0_11ea_b3c1_525400deedabrow6_col13\" class=\"data row6 col13\" >-0.017340</td>\n",
        "                        <td id=\"T_4334b970_e5f0_11ea_b3c1_525400deedabrow6_col14\" class=\"data row6 col14\" >-0.159505</td>\n",
        "                        <td id=\"T_4334b970_e5f0_11ea_b3c1_525400deedabrow6_col15\" class=\"data row6 col15\" >-0.382791</td>\n",
        "                        <td id=\"T_4334b970_e5f0_11ea_b3c1_525400deedabrow6_col16\" class=\"data row6 col16\" >0.758110</td>\n",
        "            </tr>\n",
        "            <tr>\n",
        "                        <th id=\"T_4334b970_e5f0_11ea_b3c1_525400deedablevel0_row7\" class=\"row_heading level0 row7\" >Cancel_events</th>\n",
        "                        <td id=\"T_4334b970_e5f0_11ea_b3c1_525400deedabrow7_col0\" class=\"data row7 col0\" >0.001850</td>\n",
        "                        <td id=\"T_4334b970_e5f0_11ea_b3c1_525400deedabrow7_col1\" class=\"data row7 col1\" >0.139543</td>\n",
        "                        <td id=\"T_4334b970_e5f0_11ea_b3c1_525400deedabrow7_col2\" class=\"data row7 col2\" >0.107771</td>\n",
        "                        <td id=\"T_4334b970_e5f0_11ea_b3c1_525400deedabrow7_col3\" class=\"data row7 col3\" >-0.169687</td>\n",
        "                        <td id=\"T_4334b970_e5f0_11ea_b3c1_525400deedabrow7_col4\" class=\"data row7 col4\" >-0.109781</td>\n",
        "                        <td id=\"T_4334b970_e5f0_11ea_b3c1_525400deedabrow7_col5\" class=\"data row7 col5\" >0.325979</td>\n",
        "                        <td id=\"T_4334b970_e5f0_11ea_b3c1_525400deedabrow7_col6\" class=\"data row7 col6\" >0.434428</td>\n",
        "                        <td id=\"T_4334b970_e5f0_11ea_b3c1_525400deedabrow7_col7\" class=\"data row7 col7\" >1.000000</td>\n",
        "                        <td id=\"T_4334b970_e5f0_11ea_b3c1_525400deedabrow7_col8\" class=\"data row7 col8\" >0.535665</td>\n",
        "                        <td id=\"T_4334b970_e5f0_11ea_b3c1_525400deedabrow7_col9\" class=\"data row7 col9\" >0.354021</td>\n",
        "                        <td id=\"T_4334b970_e5f0_11ea_b3c1_525400deedabrow7_col10\" class=\"data row7 col10\" >0.548753</td>\n",
        "                        <td id=\"T_4334b970_e5f0_11ea_b3c1_525400deedabrow7_col11\" class=\"data row7 col11\" >0.383998</td>\n",
        "                        <td id=\"T_4334b970_e5f0_11ea_b3c1_525400deedabrow7_col12\" class=\"data row7 col12\" >-0.011670</td>\n",
        "                        <td id=\"T_4334b970_e5f0_11ea_b3c1_525400deedabrow7_col13\" class=\"data row7 col13\" >-0.019432</td>\n",
        "                        <td id=\"T_4334b970_e5f0_11ea_b3c1_525400deedabrow7_col14\" class=\"data row7 col14\" >0.088127</td>\n",
        "                        <td id=\"T_4334b970_e5f0_11ea_b3c1_525400deedabrow7_col15\" class=\"data row7 col15\" >-0.083325</td>\n",
        "                        <td id=\"T_4334b970_e5f0_11ea_b3c1_525400deedabrow7_col16\" class=\"data row7 col16\" >0.539659</td>\n",
        "            </tr>\n",
        "            <tr>\n",
        "                        <th id=\"T_4334b970_e5f0_11ea_b3c1_525400deedablevel0_row8\" class=\"row_heading level0 row8\" >Gatherings_restrictions</th>\n",
        "                        <td id=\"T_4334b970_e5f0_11ea_b3c1_525400deedabrow8_col0\" class=\"data row8 col0\" >0.116510</td>\n",
        "                        <td id=\"T_4334b970_e5f0_11ea_b3c1_525400deedabrow8_col1\" class=\"data row8 col1\" >-0.035184</td>\n",
        "                        <td id=\"T_4334b970_e5f0_11ea_b3c1_525400deedabrow8_col2\" class=\"data row8 col2\" >-0.009609</td>\n",
        "                        <td id=\"T_4334b970_e5f0_11ea_b3c1_525400deedabrow8_col3\" class=\"data row8 col3\" >-0.099826</td>\n",
        "                        <td id=\"T_4334b970_e5f0_11ea_b3c1_525400deedabrow8_col4\" class=\"data row8 col4\" >-0.415509</td>\n",
        "                        <td id=\"T_4334b970_e5f0_11ea_b3c1_525400deedabrow8_col5\" class=\"data row8 col5\" >0.056600</td>\n",
        "                        <td id=\"T_4334b970_e5f0_11ea_b3c1_525400deedabrow8_col6\" class=\"data row8 col6\" >0.383003</td>\n",
        "                        <td id=\"T_4334b970_e5f0_11ea_b3c1_525400deedabrow8_col7\" class=\"data row8 col7\" >0.535665</td>\n",
        "                        <td id=\"T_4334b970_e5f0_11ea_b3c1_525400deedabrow8_col8\" class=\"data row8 col8\" >1.000000</td>\n",
        "                        <td id=\"T_4334b970_e5f0_11ea_b3c1_525400deedabrow8_col9\" class=\"data row8 col9\" >0.585511</td>\n",
        "                        <td id=\"T_4334b970_e5f0_11ea_b3c1_525400deedabrow8_col10\" class=\"data row8 col10\" >0.662077</td>\n",
        "                        <td id=\"T_4334b970_e5f0_11ea_b3c1_525400deedabrow8_col11\" class=\"data row8 col11\" >0.624882</td>\n",
        "                        <td id=\"T_4334b970_e5f0_11ea_b3c1_525400deedabrow8_col12\" class=\"data row8 col12\" >0.127618</td>\n",
        "                        <td id=\"T_4334b970_e5f0_11ea_b3c1_525400deedabrow8_col13\" class=\"data row8 col13\" >0.068376</td>\n",
        "                        <td id=\"T_4334b970_e5f0_11ea_b3c1_525400deedabrow8_col14\" class=\"data row8 col14\" >0.214060</td>\n",
        "                        <td id=\"T_4334b970_e5f0_11ea_b3c1_525400deedabrow8_col15\" class=\"data row8 col15\" >-0.105072</td>\n",
        "                        <td id=\"T_4334b970_e5f0_11ea_b3c1_525400deedabrow8_col16\" class=\"data row8 col16\" >0.607560</td>\n",
        "            </tr>\n",
        "            <tr>\n",
        "                        <th id=\"T_4334b970_e5f0_11ea_b3c1_525400deedablevel0_row9\" class=\"row_heading level0 row9\" >Transport_closing</th>\n",
        "                        <td id=\"T_4334b970_e5f0_11ea_b3c1_525400deedabrow9_col0\" class=\"data row9 col0\" >-0.123554</td>\n",
        "                        <td id=\"T_4334b970_e5f0_11ea_b3c1_525400deedabrow9_col1\" class=\"data row9 col1\" >-0.012633</td>\n",
        "                        <td id=\"T_4334b970_e5f0_11ea_b3c1_525400deedabrow9_col2\" class=\"data row9 col2\" >0.142272</td>\n",
        "                        <td id=\"T_4334b970_e5f0_11ea_b3c1_525400deedabrow9_col3\" class=\"data row9 col3\" >0.051737</td>\n",
        "                        <td id=\"T_4334b970_e5f0_11ea_b3c1_525400deedabrow9_col4\" class=\"data row9 col4\" >-0.197223</td>\n",
        "                        <td id=\"T_4334b970_e5f0_11ea_b3c1_525400deedabrow9_col5\" class=\"data row9 col5\" >0.417242</td>\n",
        "                        <td id=\"T_4334b970_e5f0_11ea_b3c1_525400deedabrow9_col6\" class=\"data row9 col6\" >0.490404</td>\n",
        "                        <td id=\"T_4334b970_e5f0_11ea_b3c1_525400deedabrow9_col7\" class=\"data row9 col7\" >0.354021</td>\n",
        "                        <td id=\"T_4334b970_e5f0_11ea_b3c1_525400deedabrow9_col8\" class=\"data row9 col8\" >0.585511</td>\n",
        "                        <td id=\"T_4334b970_e5f0_11ea_b3c1_525400deedabrow9_col9\" class=\"data row9 col9\" >1.000000</td>\n",
        "                        <td id=\"T_4334b970_e5f0_11ea_b3c1_525400deedabrow9_col10\" class=\"data row9 col10\" >0.630083</td>\n",
        "                        <td id=\"T_4334b970_e5f0_11ea_b3c1_525400deedabrow9_col11\" class=\"data row9 col11\" >0.749438</td>\n",
        "                        <td id=\"T_4334b970_e5f0_11ea_b3c1_525400deedabrow9_col12\" class=\"data row9 col12\" >0.365093</td>\n",
        "                        <td id=\"T_4334b970_e5f0_11ea_b3c1_525400deedabrow9_col13\" class=\"data row9 col13\" >-0.082109</td>\n",
        "                        <td id=\"T_4334b970_e5f0_11ea_b3c1_525400deedabrow9_col14\" class=\"data row9 col14\" >0.004357</td>\n",
        "                        <td id=\"T_4334b970_e5f0_11ea_b3c1_525400deedabrow9_col15\" class=\"data row9 col15\" >-0.243252</td>\n",
        "                        <td id=\"T_4334b970_e5f0_11ea_b3c1_525400deedabrow9_col16\" class=\"data row9 col16\" >0.796951</td>\n",
        "            </tr>\n",
        "            <tr>\n",
        "                        <th id=\"T_4334b970_e5f0_11ea_b3c1_525400deedablevel0_row10\" class=\"row_heading level0 row10\" >Stay_home_restrictions</th>\n",
        "                        <td id=\"T_4334b970_e5f0_11ea_b3c1_525400deedabrow10_col0\" class=\"data row10 col0\" >-0.080197</td>\n",
        "                        <td id=\"T_4334b970_e5f0_11ea_b3c1_525400deedabrow10_col1\" class=\"data row10 col1\" >-0.046921</td>\n",
        "                        <td id=\"T_4334b970_e5f0_11ea_b3c1_525400deedabrow10_col2\" class=\"data row10 col2\" >0.089416</td>\n",
        "                        <td id=\"T_4334b970_e5f0_11ea_b3c1_525400deedabrow10_col3\" class=\"data row10 col3\" >0.038385</td>\n",
        "                        <td id=\"T_4334b970_e5f0_11ea_b3c1_525400deedabrow10_col4\" class=\"data row10 col4\" >-0.167343</td>\n",
        "                        <td id=\"T_4334b970_e5f0_11ea_b3c1_525400deedabrow10_col5\" class=\"data row10 col5\" >0.417889</td>\n",
        "                        <td id=\"T_4334b970_e5f0_11ea_b3c1_525400deedabrow10_col6\" class=\"data row10 col6\" >0.598424</td>\n",
        "                        <td id=\"T_4334b970_e5f0_11ea_b3c1_525400deedabrow10_col7\" class=\"data row10 col7\" >0.548753</td>\n",
        "                        <td id=\"T_4334b970_e5f0_11ea_b3c1_525400deedabrow10_col8\" class=\"data row10 col8\" >0.662077</td>\n",
        "                        <td id=\"T_4334b970_e5f0_11ea_b3c1_525400deedabrow10_col9\" class=\"data row10 col9\" >0.630083</td>\n",
        "                        <td id=\"T_4334b970_e5f0_11ea_b3c1_525400deedabrow10_col10\" class=\"data row10 col10\" >1.000000</td>\n",
        "                        <td id=\"T_4334b970_e5f0_11ea_b3c1_525400deedabrow10_col11\" class=\"data row10 col11\" >0.718583</td>\n",
        "                        <td id=\"T_4334b970_e5f0_11ea_b3c1_525400deedabrow10_col12\" class=\"data row10 col12\" >0.286790</td>\n",
        "                        <td id=\"T_4334b970_e5f0_11ea_b3c1_525400deedabrow10_col13\" class=\"data row10 col13\" >0.060269</td>\n",
        "                        <td id=\"T_4334b970_e5f0_11ea_b3c1_525400deedabrow10_col14\" class=\"data row10 col14\" >0.302852</td>\n",
        "                        <td id=\"T_4334b970_e5f0_11ea_b3c1_525400deedabrow10_col15\" class=\"data row10 col15\" >-0.105307</td>\n",
        "                        <td id=\"T_4334b970_e5f0_11ea_b3c1_525400deedabrow10_col16\" class=\"data row10 col16\" >0.742556</td>\n",
        "            </tr>\n",
        "            <tr>\n",
        "                        <th id=\"T_4334b970_e5f0_11ea_b3c1_525400deedablevel0_row11\" class=\"row_heading level0 row11\" >Internal_movement_restrictions</th>\n",
        "                        <td id=\"T_4334b970_e5f0_11ea_b3c1_525400deedabrow11_col0\" class=\"data row11 col0\" >-0.063679</td>\n",
        "                        <td id=\"T_4334b970_e5f0_11ea_b3c1_525400deedabrow11_col1\" class=\"data row11 col1\" >0.026866</td>\n",
        "                        <td id=\"T_4334b970_e5f0_11ea_b3c1_525400deedabrow11_col2\" class=\"data row11 col2\" >0.046712</td>\n",
        "                        <td id=\"T_4334b970_e5f0_11ea_b3c1_525400deedabrow11_col3\" class=\"data row11 col3\" >0.004959</td>\n",
        "                        <td id=\"T_4334b970_e5f0_11ea_b3c1_525400deedabrow11_col4\" class=\"data row11 col4\" >-0.290669</td>\n",
        "                        <td id=\"T_4334b970_e5f0_11ea_b3c1_525400deedabrow11_col5\" class=\"data row11 col5\" >0.200801</td>\n",
        "                        <td id=\"T_4334b970_e5f0_11ea_b3c1_525400deedabrow11_col6\" class=\"data row11 col6\" >0.473532</td>\n",
        "                        <td id=\"T_4334b970_e5f0_11ea_b3c1_525400deedabrow11_col7\" class=\"data row11 col7\" >0.383998</td>\n",
        "                        <td id=\"T_4334b970_e5f0_11ea_b3c1_525400deedabrow11_col8\" class=\"data row11 col8\" >0.624882</td>\n",
        "                        <td id=\"T_4334b970_e5f0_11ea_b3c1_525400deedabrow11_col9\" class=\"data row11 col9\" >0.749438</td>\n",
        "                        <td id=\"T_4334b970_e5f0_11ea_b3c1_525400deedabrow11_col10\" class=\"data row11 col10\" >0.718583</td>\n",
        "                        <td id=\"T_4334b970_e5f0_11ea_b3c1_525400deedabrow11_col11\" class=\"data row11 col11\" >1.000000</td>\n",
        "                        <td id=\"T_4334b970_e5f0_11ea_b3c1_525400deedabrow11_col12\" class=\"data row11 col12\" >0.219572</td>\n",
        "                        <td id=\"T_4334b970_e5f0_11ea_b3c1_525400deedabrow11_col13\" class=\"data row11 col13\" >-0.040021</td>\n",
        "                        <td id=\"T_4334b970_e5f0_11ea_b3c1_525400deedabrow11_col14\" class=\"data row11 col14\" >0.211247</td>\n",
        "                        <td id=\"T_4334b970_e5f0_11ea_b3c1_525400deedabrow11_col15\" class=\"data row11 col15\" >-0.174277</td>\n",
        "                        <td id=\"T_4334b970_e5f0_11ea_b3c1_525400deedabrow11_col16\" class=\"data row11 col16\" >0.675343</td>\n",
        "            </tr>\n",
        "            <tr>\n",
        "                        <th id=\"T_4334b970_e5f0_11ea_b3c1_525400deedablevel0_row12\" class=\"row_heading level0 row12\" >International_movement_restrictions</th>\n",
        "                        <td id=\"T_4334b970_e5f0_11ea_b3c1_525400deedabrow12_col0\" class=\"data row12 col0\" >-0.222066</td>\n",
        "                        <td id=\"T_4334b970_e5f0_11ea_b3c1_525400deedabrow12_col1\" class=\"data row12 col1\" >-0.000757</td>\n",
        "                        <td id=\"T_4334b970_e5f0_11ea_b3c1_525400deedabrow12_col2\" class=\"data row12 col2\" >0.100990</td>\n",
        "                        <td id=\"T_4334b970_e5f0_11ea_b3c1_525400deedabrow12_col3\" class=\"data row12 col3\" >0.177261</td>\n",
        "                        <td id=\"T_4334b970_e5f0_11ea_b3c1_525400deedabrow12_col4\" class=\"data row12 col4\" >0.103371</td>\n",
        "                        <td id=\"T_4334b970_e5f0_11ea_b3c1_525400deedabrow12_col5\" class=\"data row12 col5\" >0.529272</td>\n",
        "                        <td id=\"T_4334b970_e5f0_11ea_b3c1_525400deedabrow12_col6\" class=\"data row12 col6\" >0.218431</td>\n",
        "                        <td id=\"T_4334b970_e5f0_11ea_b3c1_525400deedabrow12_col7\" class=\"data row12 col7\" >-0.011670</td>\n",
        "                        <td id=\"T_4334b970_e5f0_11ea_b3c1_525400deedabrow12_col8\" class=\"data row12 col8\" >0.127618</td>\n",
        "                        <td id=\"T_4334b970_e5f0_11ea_b3c1_525400deedabrow12_col9\" class=\"data row12 col9\" >0.365093</td>\n",
        "                        <td id=\"T_4334b970_e5f0_11ea_b3c1_525400deedabrow12_col10\" class=\"data row12 col10\" >0.286790</td>\n",
        "                        <td id=\"T_4334b970_e5f0_11ea_b3c1_525400deedabrow12_col11\" class=\"data row12 col11\" >0.219572</td>\n",
        "                        <td id=\"T_4334b970_e5f0_11ea_b3c1_525400deedabrow12_col12\" class=\"data row12 col12\" >1.000000</td>\n",
        "                        <td id=\"T_4334b970_e5f0_11ea_b3c1_525400deedabrow12_col13\" class=\"data row12 col13\" >0.037745</td>\n",
        "                        <td id=\"T_4334b970_e5f0_11ea_b3c1_525400deedabrow12_col14\" class=\"data row12 col14\" >-0.050473</td>\n",
        "                        <td id=\"T_4334b970_e5f0_11ea_b3c1_525400deedabrow12_col15\" class=\"data row12 col15\" >-0.110471</td>\n",
        "                        <td id=\"T_4334b970_e5f0_11ea_b3c1_525400deedabrow12_col16\" class=\"data row12 col16\" >0.556493</td>\n",
        "            </tr>\n",
        "            <tr>\n",
        "                        <th id=\"T_4334b970_e5f0_11ea_b3c1_525400deedablevel0_row13\" class=\"row_heading level0 row13\" >Information_campaigns</th>\n",
        "                        <td id=\"T_4334b970_e5f0_11ea_b3c1_525400deedabrow13_col0\" class=\"data row13 col0\" >0.011667</td>\n",
        "                        <td id=\"T_4334b970_e5f0_11ea_b3c1_525400deedabrow13_col1\" class=\"data row13 col1\" >0.018362</td>\n",
        "                        <td id=\"T_4334b970_e5f0_11ea_b3c1_525400deedabrow13_col2\" class=\"data row13 col2\" >-0.079774</td>\n",
        "                        <td id=\"T_4334b970_e5f0_11ea_b3c1_525400deedabrow13_col3\" class=\"data row13 col3\" >-0.127863</td>\n",
        "                        <td id=\"T_4334b970_e5f0_11ea_b3c1_525400deedabrow13_col4\" class=\"data row13 col4\" >-0.161043</td>\n",
        "                        <td id=\"T_4334b970_e5f0_11ea_b3c1_525400deedabrow13_col5\" class=\"data row13 col5\" >-0.049544</td>\n",
        "                        <td id=\"T_4334b970_e5f0_11ea_b3c1_525400deedabrow13_col6\" class=\"data row13 col6\" >-0.017340</td>\n",
        "                        <td id=\"T_4334b970_e5f0_11ea_b3c1_525400deedabrow13_col7\" class=\"data row13 col7\" >-0.019432</td>\n",
        "                        <td id=\"T_4334b970_e5f0_11ea_b3c1_525400deedabrow13_col8\" class=\"data row13 col8\" >0.068376</td>\n",
        "                        <td id=\"T_4334b970_e5f0_11ea_b3c1_525400deedabrow13_col9\" class=\"data row13 col9\" >-0.082109</td>\n",
        "                        <td id=\"T_4334b970_e5f0_11ea_b3c1_525400deedabrow13_col10\" class=\"data row13 col10\" >0.060269</td>\n",
        "                        <td id=\"T_4334b970_e5f0_11ea_b3c1_525400deedabrow13_col11\" class=\"data row13 col11\" >-0.040021</td>\n",
        "                        <td id=\"T_4334b970_e5f0_11ea_b3c1_525400deedabrow13_col12\" class=\"data row13 col12\" >0.037745</td>\n",
        "                        <td id=\"T_4334b970_e5f0_11ea_b3c1_525400deedabrow13_col13\" class=\"data row13 col13\" >1.000000</td>\n",
        "                        <td id=\"T_4334b970_e5f0_11ea_b3c1_525400deedabrow13_col14\" class=\"data row13 col14\" >0.120955</td>\n",
        "                        <td id=\"T_4334b970_e5f0_11ea_b3c1_525400deedabrow13_col15\" class=\"data row13 col15\" >0.138664</td>\n",
        "                        <td id=\"T_4334b970_e5f0_11ea_b3c1_525400deedabrow13_col16\" class=\"data row13 col16\" >0.001687</td>\n",
        "            </tr>\n",
        "            <tr>\n",
        "                        <th id=\"T_4334b970_e5f0_11ea_b3c1_525400deedablevel0_row14\" class=\"row_heading level0 row14\" >Testing_policy</th>\n",
        "                        <td id=\"T_4334b970_e5f0_11ea_b3c1_525400deedabrow14_col0\" class=\"data row14 col0\" >-0.193897</td>\n",
        "                        <td id=\"T_4334b970_e5f0_11ea_b3c1_525400deedabrow14_col1\" class=\"data row14 col1\" >-0.569096</td>\n",
        "                        <td id=\"T_4334b970_e5f0_11ea_b3c1_525400deedabrow14_col2\" class=\"data row14 col2\" >-0.476356</td>\n",
        "                        <td id=\"T_4334b970_e5f0_11ea_b3c1_525400deedabrow14_col3\" class=\"data row14 col3\" >-0.310844</td>\n",
        "                        <td id=\"T_4334b970_e5f0_11ea_b3c1_525400deedabrow14_col4\" class=\"data row14 col4\" >-0.168901</td>\n",
        "                        <td id=\"T_4334b970_e5f0_11ea_b3c1_525400deedabrow14_col5\" class=\"data row14 col5\" >-0.124293</td>\n",
        "                        <td id=\"T_4334b970_e5f0_11ea_b3c1_525400deedabrow14_col6\" class=\"data row14 col6\" >-0.159505</td>\n",
        "                        <td id=\"T_4334b970_e5f0_11ea_b3c1_525400deedabrow14_col7\" class=\"data row14 col7\" >0.088127</td>\n",
        "                        <td id=\"T_4334b970_e5f0_11ea_b3c1_525400deedabrow14_col8\" class=\"data row14 col8\" >0.214060</td>\n",
        "                        <td id=\"T_4334b970_e5f0_11ea_b3c1_525400deedabrow14_col9\" class=\"data row14 col9\" >0.004357</td>\n",
        "                        <td id=\"T_4334b970_e5f0_11ea_b3c1_525400deedabrow14_col10\" class=\"data row14 col10\" >0.302852</td>\n",
        "                        <td id=\"T_4334b970_e5f0_11ea_b3c1_525400deedabrow14_col11\" class=\"data row14 col11\" >0.211247</td>\n",
        "                        <td id=\"T_4334b970_e5f0_11ea_b3c1_525400deedabrow14_col12\" class=\"data row14 col12\" >-0.050473</td>\n",
        "                        <td id=\"T_4334b970_e5f0_11ea_b3c1_525400deedabrow14_col13\" class=\"data row14 col13\" >0.120955</td>\n",
        "                        <td id=\"T_4334b970_e5f0_11ea_b3c1_525400deedabrow14_col14\" class=\"data row14 col14\" >1.000000</td>\n",
        "                        <td id=\"T_4334b970_e5f0_11ea_b3c1_525400deedabrow14_col15\" class=\"data row14 col15\" >0.578168</td>\n",
        "                        <td id=\"T_4334b970_e5f0_11ea_b3c1_525400deedabrow14_col16\" class=\"data row14 col16\" >-0.165644</td>\n",
        "            </tr>\n",
        "            <tr>\n",
        "                        <th id=\"T_4334b970_e5f0_11ea_b3c1_525400deedablevel0_row15\" class=\"row_heading level0 row15\" >Contact_tracing</th>\n",
        "                        <td id=\"T_4334b970_e5f0_11ea_b3c1_525400deedabrow15_col0\" class=\"data row15 col0\" >-0.116956</td>\n",
        "                        <td id=\"T_4334b970_e5f0_11ea_b3c1_525400deedabrow15_col1\" class=\"data row15 col1\" >-0.351275</td>\n",
        "                        <td id=\"T_4334b970_e5f0_11ea_b3c1_525400deedabrow15_col2\" class=\"data row15 col2\" >-0.461505</td>\n",
        "                        <td id=\"T_4334b970_e5f0_11ea_b3c1_525400deedabrow15_col3\" class=\"data row15 col3\" >-0.385681</td>\n",
        "                        <td id=\"T_4334b970_e5f0_11ea_b3c1_525400deedabrow15_col4\" class=\"data row15 col4\" >-0.110883</td>\n",
        "                        <td id=\"T_4334b970_e5f0_11ea_b3c1_525400deedabrow15_col5\" class=\"data row15 col5\" >-0.261483</td>\n",
        "                        <td id=\"T_4334b970_e5f0_11ea_b3c1_525400deedabrow15_col6\" class=\"data row15 col6\" >-0.382791</td>\n",
        "                        <td id=\"T_4334b970_e5f0_11ea_b3c1_525400deedabrow15_col7\" class=\"data row15 col7\" >-0.083325</td>\n",
        "                        <td id=\"T_4334b970_e5f0_11ea_b3c1_525400deedabrow15_col8\" class=\"data row15 col8\" >-0.105072</td>\n",
        "                        <td id=\"T_4334b970_e5f0_11ea_b3c1_525400deedabrow15_col9\" class=\"data row15 col9\" >-0.243252</td>\n",
        "                        <td id=\"T_4334b970_e5f0_11ea_b3c1_525400deedabrow15_col10\" class=\"data row15 col10\" >-0.105307</td>\n",
        "                        <td id=\"T_4334b970_e5f0_11ea_b3c1_525400deedabrow15_col11\" class=\"data row15 col11\" >-0.174277</td>\n",
        "                        <td id=\"T_4334b970_e5f0_11ea_b3c1_525400deedabrow15_col12\" class=\"data row15 col12\" >-0.110471</td>\n",
        "                        <td id=\"T_4334b970_e5f0_11ea_b3c1_525400deedabrow15_col13\" class=\"data row15 col13\" >0.138664</td>\n",
        "                        <td id=\"T_4334b970_e5f0_11ea_b3c1_525400deedabrow15_col14\" class=\"data row15 col14\" >0.578168</td>\n",
        "                        <td id=\"T_4334b970_e5f0_11ea_b3c1_525400deedabrow15_col15\" class=\"data row15 col15\" >1.000000</td>\n",
        "                        <td id=\"T_4334b970_e5f0_11ea_b3c1_525400deedabrow15_col16\" class=\"data row15 col16\" >-0.408872</td>\n",
        "            </tr>\n",
        "            <tr>\n",
        "                        <th id=\"T_4334b970_e5f0_11ea_b3c1_525400deedablevel0_row16\" class=\"row_heading level0 row16\" >Stringency_index</th>\n",
        "                        <td id=\"T_4334b970_e5f0_11ea_b3c1_525400deedabrow16_col0\" class=\"data row16 col0\" >-0.104869</td>\n",
        "                        <td id=\"T_4334b970_e5f0_11ea_b3c1_525400deedabrow16_col1\" class=\"data row16 col1\" >0.289289</td>\n",
        "                        <td id=\"T_4334b970_e5f0_11ea_b3c1_525400deedabrow16_col2\" class=\"data row16 col2\" >0.384793</td>\n",
        "                        <td id=\"T_4334b970_e5f0_11ea_b3c1_525400deedabrow16_col3\" class=\"data row16 col3\" >0.170008</td>\n",
        "                        <td id=\"T_4334b970_e5f0_11ea_b3c1_525400deedabrow16_col4\" class=\"data row16 col4\" >-0.062276</td>\n",
        "                        <td id=\"T_4334b970_e5f0_11ea_b3c1_525400deedabrow16_col5\" class=\"data row16 col5\" >0.664888</td>\n",
        "                        <td id=\"T_4334b970_e5f0_11ea_b3c1_525400deedabrow16_col6\" class=\"data row16 col6\" >0.758110</td>\n",
        "                        <td id=\"T_4334b970_e5f0_11ea_b3c1_525400deedabrow16_col7\" class=\"data row16 col7\" >0.539659</td>\n",
        "                        <td id=\"T_4334b970_e5f0_11ea_b3c1_525400deedabrow16_col8\" class=\"data row16 col8\" >0.607560</td>\n",
        "                        <td id=\"T_4334b970_e5f0_11ea_b3c1_525400deedabrow16_col9\" class=\"data row16 col9\" >0.796951</td>\n",
        "                        <td id=\"T_4334b970_e5f0_11ea_b3c1_525400deedabrow16_col10\" class=\"data row16 col10\" >0.742556</td>\n",
        "                        <td id=\"T_4334b970_e5f0_11ea_b3c1_525400deedabrow16_col11\" class=\"data row16 col11\" >0.675343</td>\n",
        "                        <td id=\"T_4334b970_e5f0_11ea_b3c1_525400deedabrow16_col12\" class=\"data row16 col12\" >0.556493</td>\n",
        "                        <td id=\"T_4334b970_e5f0_11ea_b3c1_525400deedabrow16_col13\" class=\"data row16 col13\" >0.001687</td>\n",
        "                        <td id=\"T_4334b970_e5f0_11ea_b3c1_525400deedabrow16_col14\" class=\"data row16 col14\" >-0.165644</td>\n",
        "                        <td id=\"T_4334b970_e5f0_11ea_b3c1_525400deedabrow16_col15\" class=\"data row16 col15\" >-0.408872</td>\n",
        "                        <td id=\"T_4334b970_e5f0_11ea_b3c1_525400deedabrow16_col16\" class=\"data row16 col16\" >1.000000</td>\n",
        "            </tr>\n",
        "    </tbody></table>"
       ],
       "output_type": "pyout",
       "prompt_number": 21,
       "text": [
        "<pandas.io.formats.style.Styler at 0x7f3c32cff820>"
       ]
      }
     ],
     "prompt_number": 21
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "# Scatter plot of Stringency index and Rt\n",
      "df = track_df.copy()\n",
      "sns.scatterplot(data=df, x=\"Stringency_index\", y=\"Rt\", hue=\"Country\", legend=\"brief\", marker=\"+\")\n",
      "bbox_to_anchor=(1.02, 0)\n",
      "bbox_loc=\"lower left\"\n",
      "plt.legend(bbox_to_anchor=bbox_to_anchor, loc=bbox_loc, borderaxespad=0)\n",
      "plt.title(\"Relationship of Stringency index and reproduction number\")\n",
      "plt.ylabel(\"Reproduction number\")\n",
      "plt.xlabel(\"Stringency index\")\n",
      "plt.show()"
     ],
     "language": "python",
     "metadata": {},
     "outputs": [
      {
       "output_type": "display_data",
       "png": "\n",
       "text": [
        "<Figure size 432x288 with 1 Axes>"
       ]
      }
     ],
     "prompt_number": 22
    }
   ],
   "metadata": {}
  }
 ]
}
