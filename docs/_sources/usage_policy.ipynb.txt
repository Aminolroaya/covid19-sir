{
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3.8.2 64-bit ('.venv': venv)",
   "name": "python_defaultSpec_1597669925034"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.8.2-final"
  },
  "name": ""
 },
 "nbformat": 3,
 "nbformat_minor": 0,
 "worksheets": [
  {
   "cells": [
    {
     "cell_type": "markdown",
     "metadata": {},
     "source": [
      "# Usage (details: policy measures)\n",
      "Here, we will analyse the relationship of policy measures and parameter values of SIR-derived ODE models. Policy measures are tracked by [Oxford Covid-19 Government Response Tracker (OxCGRT)](https://github.com/OxCGRT/covid-policy-tracker)."
     ]
    },
    {
     "cell_type": "heading",
     "level": 2,
     "metadata": {},
     "source": [
      "Preparation"
     ]
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "# Standard users\n",
      "# !pip install covsirphy\n",
      "# Developers (Note: this notebook is in example directory)\n",
      "import os\n",
      "os.chdir(\"../\")"
     ],
     "language": "python",
     "metadata": {},
     "outputs": [],
     "prompt_number": 1
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "from pprint import pprint"
     ],
     "language": "python",
     "metadata": {},
     "outputs": [],
     "prompt_number": 2
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "import covsirphy as cs\n",
      "cs.__version__"
     ],
     "language": "python",
     "metadata": {},
     "outputs": [
      {
       "output_type": "pyout",
       "prompt_number": 3,
       "text": [
        "'2.8.3'"
       ]
      }
     ],
     "prompt_number": 3
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "# Standard users and developers\n",
      "data_loader = cs.DataLoader(\"input\")\n",
      "# The number of cases (JHU style)\n",
      "jhu_data = data_loader.jhu(verbose=False)\n",
      "# Population in each country\n",
      "population_data = data_loader.population(verbose=False)\n",
      "# Government Response Tracker (OxCGRT)\n",
      "oxcgrt_data = data_loader.oxcgrt(verbose=False)\n",
      "# Description/citation\n",
      "print(oxcgrt_data.citation)"
     ],
     "language": "python",
     "metadata": {
      "tags": []
     },
     "outputs": [
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "(Secondary source) Guidotti, E., Ardia, D., (2020), \"COVID-19 Data Hub\", Journal of Open Source Software 5(51):2376, doi: 10.21105/joss.02376.\n",
        "We can get Citation list of primary sources with DataLoader(...).covid19dh_citation"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      }
     ],
     "prompt_number": 4
    },
    {
     "cell_type": "markdown",
     "metadata": {},
     "source": [
      "## Class for policy measure analysis\n",
      "We will `PolicyMeasures` class to find relationship of policy measures and parameter values of SIR-derived ODE models."
     ]
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "# Create analyser with tau value 360 [min] (can be changed)\n",
      "analyser = cs.PolicyMeasures(jhu_data, population_data, oxcgrt_data, tau=360)\n",
      "# The number of registerd countries\n",
      "len(analyser.countries)"
     ],
     "language": "python",
     "metadata": {
      "tags": []
     },
     "outputs": [
      {
       "output_type": "pyout",
       "prompt_number": 5,
       "text": [
        "184"
       ]
      }
     ],
     "prompt_number": 5
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "# We can get Scenario instance for detailed scenario analysis\n",
      "type(analyser.scenario(\"Japan\"))"
     ],
     "language": "python",
     "metadata": {},
     "outputs": [
      {
       "output_type": "pyout",
       "prompt_number": 6,
       "text": [
        "covsirphy.analysis.scenario.Scenario"
       ]
      }
     ],
     "prompt_number": 6
    },
    {
     "cell_type": "markdown",
     "metadata": {},
     "source": [
      "## Set phases with S-R trend analysis\n",
      "We will perform S-R trend analysis to set phases in all countries. Countries which do not have **9th phases** will be un-registered for the next analysis. This number will be adjusted for your analysis."
     ]
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "# Show the number of phases of all countries\n",
      "analyser.trend()\n",
      "pprint(analyser.phase_len(), compact=True)"
     ],
     "language": "python",
     "metadata": {},
     "outputs": [
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "{"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "3"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ": "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "['Dominica', 'Myanmar', 'Tanzania']"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        " "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "4"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ": "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "['Belize', 'Mauritius', 'Trinidad and Tobago', 'Libya']"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        " "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "5"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ": "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "["
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Antigua and Barbuda'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Papua New Guinea'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Grenada'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Brunei'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Lesotho'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        "     "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Seychelles'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Fiji'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "]"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        " "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "6"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ": "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "["
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Namibia'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Monaco'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Lebanon'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Kosovo'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Sao Tome and Principe'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        "     "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Bahamas'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Syria'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Equatorial Guinea'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Central African Republic'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        "     "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Paraguay'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Rwanda'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Guyana'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Ireland'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Yemen'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Cambodia'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Vietnam'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        "     "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Croatia'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Jamaica'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Kyrgyzstan'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Gambia'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Netherlands'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Tunisia'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        "     "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Jordan'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "]"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        " "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "7"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ": "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "["
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Spain'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Eritrea'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Liechtenstein'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Kazakhstan'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Kenya'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'South Sudan'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        "     "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'New Zealand'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Madagascar'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Thailand'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Australia'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Zambia'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Malawi'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        "     "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Palestine'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Uganda'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Iceland'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Argentina'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Venezuela'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Malta'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        "     "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Saint Vincent and the Grenadines'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Cyprus'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Zimbabwe'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Burundi'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        "     "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Costa Rica'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Angola'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Philippines'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Mongolia'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Colombia'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Barbados'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        "     "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Norway'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'San Marino'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Ethiopia'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Afghanistan'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Bhutan'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Guatemala'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        "     "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Saint Lucia'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Guinea-Bissau'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Nepal'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Comoros'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Montenegro'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        "     "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Botswana'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Morocco'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "]"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        " "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "8"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ": "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "["
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Albania'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Uruguay'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Suriname'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'India'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Qatar'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Romania'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Niger'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        "     "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Slovenia'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Benin'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Taiwan'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Greece'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Chad'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Sri Lanka'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Luxembourg'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        "     "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Maldives'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Japan'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Tajikistan'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Congo'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Slovakia'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Mozambique'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        "     "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'South Africa'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Israel'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Korea, South'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Cameroon'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Bermuda'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        "     "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Nicaragua'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "]"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        " "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "9"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ": "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "["
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Sudan'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Georgia'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Singapore'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Ghana'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Austria'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Belarus'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Somalia'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        "     "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Haiti'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Czech Republic'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Sierra Leone'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Mauritania'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Oman'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Iraq'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        "     "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Swaziland'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'China'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Moldova'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Ecuador'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Germany'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        "     "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Bosnia and Herzegovina'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Djibouti'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'El Salvador'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Azerbaijan'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        "     "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Uzbekistan'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Andorra'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Cape Verde'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Finland'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "]"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        " "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "10"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ": "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "["
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Latvia'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Hungary'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Panama'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Canada'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Pakistan'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Armenia'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        "      "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Indonesia'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Serbia'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Senegal'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Algeria'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Togo'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Bangladesh'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Mali'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        "      "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Gabon'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Dominican Republic'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Poland'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Chile'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Saudi Arabia'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        "      "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Liberia'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Belgium'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Malaysia'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Ukraine'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Honduras'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Egypt'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        "      "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Lithuania'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Cuba'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "]"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        " "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "11"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ": "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "["
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Kuwait'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'France'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Portugal'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Denmark'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Brazil'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        "      "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'United Arab Emirates'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Guinea'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Turkey'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Peru'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Mexico'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Bolivia'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        "      "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Bulgaria'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Iran'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Burkina Faso'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Macedonia'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Switzerland'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "]"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        " "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "12"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ": "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "['Italy', 'Nigeria', 'Estonia', 'Bahrain', 'United States']"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        " "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "13"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ": "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "['Russia']"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "}"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      }
     ],
     "prompt_number": 7
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "# Set phases with S-R trend analysis\n",
      "analyser.trend(min_len=11)\n",
      "# The number of countries\n",
      "len(analyser.countries)"
     ],
     "language": "python",
     "metadata": {},
     "outputs": [
      {
       "output_type": "pyout",
       "prompt_number": 8,
       "text": [
        "22"
       ]
      }
     ],
     "prompt_number": 8
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "phase_len_dict = analyser.phase_len()\n",
      "pprint(phase_len_dict, compact=True)"
     ],
     "language": "python",
     "metadata": {
      "tags": []
     },
     "outputs": [
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "{"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "11"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ": "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "["
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Kuwait'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'France'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Portugal'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Denmark'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Brazil'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        "      "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'United Arab Emirates'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Guinea'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Turkey'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Peru'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Mexico'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Bolivia'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        "      "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Bulgaria'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Iran'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Burkina Faso'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Macedonia'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Switzerland'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "]"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        " "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "12"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ": "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "['Italy', 'Nigeria', 'Estonia', 'Bahrain', 'United States']"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        " "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "13"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ": "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "['Russia']"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "}"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      }
     ],
     "prompt_number": 9
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "# Here, only show the countries which have the most phases\n",
      "countries_show = max(phase_len_dict.items(), key=lambda x: x[0])[1]\n",
      "# Show summary\n",
      "analyser.summary(countries=countries_show)"
     ],
     "language": "python",
     "metadata": {
      "tags": []
     },
     "outputs": [
      {
       "html": [
        "<div>\n",
        "<style scoped>\n",
        "    .dataframe tbody tr th:only-of-type {\n",
        "        vertical-align: middle;\n",
        "    }\n",
        "\n",
        "    .dataframe tbody tr th {\n",
        "        vertical-align: top;\n",
        "    }\n",
        "\n",
        "    .dataframe thead th {\n",
        "        text-align: right;\n",
        "    }\n",
        "</style>\n",
        "<table border=\"1\" class=\"dataframe\">\n",
        "  <thead>\n",
        "    <tr style=\"text-align: right;\">\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th>Type</th>\n",
        "      <th>Start</th>\n",
        "      <th>End</th>\n",
        "      <th>Population</th>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>Country</th>\n",
        "      <th>Phase</th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "    </tr>\n",
        "  </thead>\n",
        "  <tbody>\n",
        "    <tr>\n",
        "      <th rowspan=\"13\" valign=\"top\">Russia</th>\n",
        "      <th>0th</th>\n",
        "      <td>Past</td>\n",
        "      <td>12Feb2020</td>\n",
        "      <td>06May2020</td>\n",
        "      <td>330457362</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>1st</th>\n",
        "      <td>Past</td>\n",
        "      <td>07May2020</td>\n",
        "      <td>15May2020</td>\n",
        "      <td>330457362</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>2nd</th>\n",
        "      <td>Past</td>\n",
        "      <td>16May2020</td>\n",
        "      <td>23May2020</td>\n",
        "      <td>330457362</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>3rd</th>\n",
        "      <td>Past</td>\n",
        "      <td>24May2020</td>\n",
        "      <td>01Jun2020</td>\n",
        "      <td>330457362</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>4th</th>\n",
        "      <td>Past</td>\n",
        "      <td>02Jun2020</td>\n",
        "      <td>11Jun2020</td>\n",
        "      <td>330457362</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>5th</th>\n",
        "      <td>Past</td>\n",
        "      <td>12Jun2020</td>\n",
        "      <td>20Jun2020</td>\n",
        "      <td>330457362</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>6th</th>\n",
        "      <td>Past</td>\n",
        "      <td>21Jun2020</td>\n",
        "      <td>30Jun2020</td>\n",
        "      <td>330457362</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>7th</th>\n",
        "      <td>Past</td>\n",
        "      <td>01Jul2020</td>\n",
        "      <td>11Jul2020</td>\n",
        "      <td>330457362</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>8th</th>\n",
        "      <td>Past</td>\n",
        "      <td>12Jul2020</td>\n",
        "      <td>24Jul2020</td>\n",
        "      <td>330457362</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>9th</th>\n",
        "      <td>Past</td>\n",
        "      <td>25Jul2020</td>\n",
        "      <td>07Aug2020</td>\n",
        "      <td>330457362</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>10th</th>\n",
        "      <td>Past</td>\n",
        "      <td>08Aug2020</td>\n",
        "      <td>21Aug2020</td>\n",
        "      <td>330457362</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>11th</th>\n",
        "      <td>Past</td>\n",
        "      <td>22Aug2020</td>\n",
        "      <td>05Sep2020</td>\n",
        "      <td>330457362</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>12th</th>\n",
        "      <td>Past</td>\n",
        "      <td>06Sep2020</td>\n",
        "      <td>22Sep2020</td>\n",
        "      <td>330457362</td>\n",
        "    </tr>\n",
        "  </tbody>\n",
        "</table>\n",
        "</div>"
       ],
       "output_type": "pyout",
       "prompt_number": 10,
       "text": [
        "               Type      Start        End  Population\n",
        "Country Phase                                        \n",
        "Russia  0th    Past  12Feb2020  06May2020   330457362\n",
        "        1st    Past  07May2020  15May2020   330457362\n",
        "        2nd    Past  16May2020  23May2020   330457362\n",
        "        3rd    Past  24May2020  01Jun2020   330457362\n",
        "        4th    Past  02Jun2020  11Jun2020   330457362\n",
        "        5th    Past  12Jun2020  20Jun2020   330457362\n",
        "        6th    Past  21Jun2020  30Jun2020   330457362\n",
        "        7th    Past  01Jul2020  11Jul2020   330457362\n",
        "        8th    Past  12Jul2020  24Jul2020   330457362\n",
        "        9th    Past  25Jul2020  07Aug2020   330457362\n",
        "        10th   Past  08Aug2020  21Aug2020   330457362\n",
        "        11th   Past  22Aug2020  05Sep2020   330457362\n",
        "        12th   Past  06Sep2020  22Sep2020   330457362"
       ]
      }
     ],
     "prompt_number": 10
    },
    {
     "cell_type": "markdown",
     "metadata": {},
     "source": [
      "## Parameter estimation\n",
      "we will estimate the parameter values with SIR-derived ODE models in each country."
     ]
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "# Parameter estimation with SIR-F model\n",
      "analyser.estimate(cs.SIRF)"
     ],
     "language": "python",
     "metadata": {
      "tags": []
     },
     "outputs": [
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n",
        "<SIR-F model: parameter estimation>"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "Running optimization with 4 CPUs..."
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tITA,  4th phase (19Apr2020 - 30Apr2020): finished  398 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tNGA,  7th phase (21Jul2020 - 28Jul2020): finished  212 trials in 0 min  5 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tUSA,  6th phase (18Jul2020 - 27Jul2020): finished  391 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tMEX,  3rd phase (24Jun2020 - 06Jul2020): finished 1741 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tRUS,  2nd phase (16May2020 - 23May2020): finished 1759 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tBHR,  1st phase (09May2020 - 01Jun2020): finished 1742 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tBGR,  5th phase (17Jul2020 - 30Jul2020): finished 1402 trials in 0 min 45 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tRUS,  6th phase (21Jun2020 - 30Jun2020): finished 1699 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tGIN,  1st phase (01May2020 - 12May2020): finished 1742 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tTUR,  4th phase (23May2020 - 12Jun2020): finished 1734 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tBHR,  6th phase (15Jul2020 - 26Jul2020): finished  413 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tBOL,  0th phase (01Apr2020 - 13Jun2020): finished 1671 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tKWT,  9th phase (25Aug2020 - 06Sep2020): finished  601 trials in 0 min 15 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tNGA,  9th phase (08Aug2020 - 18Aug2020): finished  415 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tARE,  4th phase (08Jun2020 - 20Jun2020): finished 1008 trials in 0 min 30 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tIRN, 10th phase (06Sep2020 - 22Sep2020): finished  381 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tMKD,  5th phase (27Jul2020 - 05Aug2020): finished 1189 trials in 0 min 40 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tFRA,  8th phase (28Jul2020 - 17Aug2020): finished  556 trials in 0 min 20 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tPRT,  1st phase (29Apr2020 - 17May2020): finished 1503 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tBOL,  5th phase (23Jul2020 - 31Jul2020): finished  177 trials in 0 min  5 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tUSA,  5th phase (08Jul2020 - 17Jul2020): finished  334 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tDNK,  6th phase (17Jun2020 - 02Aug2020): finished 1418 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tMKD,  2nd phase (25Jun2020 - 06Jul2020): finished 1435 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tBGR,  4th phase (08Jul2020 - 16Jul2020): finished  868 trials in 0 min 30 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tIRN,  6th phase (02Jul2020 - 16Jul2020): finished  174 trials in 0 min  5 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tNGA,  4th phase (27Jun2020 - 04Jul2020): finished  179 trials in 0 min  5 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tGIN,  7th phase (23Jul2020 - 05Aug2020): finished 1492 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tPRT,  0th phase (14Mar2020 - 28Apr2020): finished 1441 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tMKD,  6th phase (06Aug2020 - 13Aug2020): finished 1493 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tPER,  9th phase (29Aug2020 - 08Sep2020): finished 1495 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tEST,  2nd phase (18Apr2020 - 29Apr2020): finished 1171 trials in 0 min 45 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tPER,  4th phase (01Jul2020 - 17Jul2020): finished 1482 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tEST,  9th phase (28Aug2020 - 04Sep2020): finished  149 trials in 0 min  5 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tBHR,  7th phase (27Jul2020 - 09Aug2020): finished  275 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tCHE,  0th phase (03Mar2020 - 28Mar2020): finished 1403 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tMEX, 10th phase (08Sep2020 - 22Sep2020): finished 1311 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tGIN,  2nd phase (13May2020 - 23May2020): finished 1308 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tKWT,  4th phase (23Jun2020 - 04Jul2020): finished 1330 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tRUS,  7th phase (01Jul2020 - 11Jul2020): finished 1320 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tNGA,  2nd phase (09Jun2020 - 18Jun2020): finished 1394 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tIRN,  5th phase (17Jun2020 - 01Jul2020): finished 1377 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tGIN,  4th phase (07Jun2020 - 19Jun2020): finished 1396 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tIRN,  0th phase (26Feb2020 - 29Mar2020): finished 1378 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tMKD,  1st phase (02Jun2020 - 24Jun2020): finished 1364 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tMKD,  7th phase (14Aug2020 - 22Aug2020): finished 1359 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tBGR,  1st phase (10May2020 - 14Jun2020): finished 1346 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tFRA,  6th phase (27May2020 - 27Jun2020): finished 1360 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tIRN,  4th phase (01Jun2020 - 16Jun2020): finished 1380 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tFRA, 10th phase (03Sep2020 - 22Sep2020): finished 1369 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tBGR,  2nd phase (15Jun2020 - 29Jun2020): finished 1376 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tPRT,  3rd phase (02Jun2020 - 13Jun2020): finished 1384 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tBOL,  8th phase (18Aug2020 - 25Aug2020): finished  655 trials in 0 min 25 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tCHE,  3rd phase (16Apr2020 - 26Apr2020): finished 1379 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tKWT,  7th phase (28Jul2020 - 10Aug2020): finished 1096 trials in 0 min 45 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tCHE,  8th phase (24Aug2020 - 31Aug2020): finished 1358 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tEST,  4th phase (14May2020 - 24May2020): finished 1387 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tUSA, 10th phase (27Aug2020 - 09Sep2020): finished  687 trials in 0 min 25 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tEST, 10th phase (05Sep2020 - 12Sep2020): finished 1365 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tITA,  0th phase (24Feb2020 - 20Mar2020): finished 1366 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tBFA,  0th phase (21Mar2020 - 31Mar2020): finished 1381 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tCHE,  9th phase (01Sep2020 - 09Sep2020): finished 1365 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tITA,  6th phase (10May2020 - 19May2020): finished  152 trials in 0 min  5 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tGIN,  9th phase (17Aug2020 - 02Sep2020): finished 1306 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tPER,  3rd phase (14Jun2020 - 30Jun2020): finished 1318 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tBOL,  6th phase (01Aug2020 - 09Aug2020): finished  145 trials in 0 min  5 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tRUS,  9th phase (25Jul2020 - 07Aug2020): finished 1329 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tIRN,  2nd phase (18Apr2020 - 12May2020): finished  410 trials in 0 min 15 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tPRT,  8th phase (11Aug2020 - 30Aug2020): finished 1311 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tUSA,  8th phase (05Aug2020 - 14Aug2020): finished  545 trials in 0 min 20 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tBGR,  9th phase (31Aug2020 - 10Sep2020): finished  542 trials in 0 min 20 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tBFA,  5th phase (21May2020 - 22Jun2020): finished 1327 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tBFA,  3rd phase (20Apr2020 - 03May2020): finished 1339 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tDNK,  4th phase (04May2020 - 17May2020): finished  157 trials in 0 min  5 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tCHE,  4th phase (27Apr2020 - 29Jun2020): finished 1320 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tMEX,  9th phase (28Aug2020 - 07Sep2020): finished  155 trials in 0 min  5 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tPRT,  7th phase (23Jul2020 - 10Aug2020): finished 1345 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tEST,  6th phase (05Jun2020 - 15Jul2020): finished 1360 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tTUR,  6th phase (28Jun2020 - 15Jul2020): finished  556 trials in 0 min 20 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tDNK,  0th phase (06Mar2020 - 04Apr2020): finished 1335 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tNGA,  1st phase (22May2020 - 08Jun2020): finished 1365 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tPER,  7th phase (11Aug2020 - 18Aug2020): finished 1332 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tRUS,  1st phase (07May2020 - 15May2020): finished 1329 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tITA,  2nd phase (29Mar2020 - 08Apr2020): finished 1317 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tGIN,  5th phase (20Jun2020 - 08Jul2020): finished  268 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tBGR,  3rd phase (30Jun2020 - 07Jul2020): finished  300 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tEST,  7th phase (16Jul2020 - 17Aug2020): finished  261 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tGIN,  8th phase (06Aug2020 - 16Aug2020): finished 1311 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tBRA,  6th phase (28Jul2020 - 04Aug2020): finished  950 trials in 0 min 40 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tITA,  1st phase (21Mar2020 - 28Mar2020): finished 1311 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tDNK,  7th phase (03Aug2020 - 17Aug2020): finished 1352 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tPRT,  4th phase (14Jun2020 - 25Jun2020): finished 1333 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tIRN,  3rd phase (13May2020 - 31May2020): finished  150 trials in 0 min  5 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tNGA,  5th phase (05Jul2020 - 12Jul2020): finished  302 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tFRA,  7th phase (28Jun2020 - 27Jul2020): finished 1306 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tBRA,  8th phase (20Aug2020 - 29Aug2020): finished 1321 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tARE,  7th phase (22Jul2020 - 14Aug2020): finished  939 trials in 0 min 40 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tUSA,  9th phase (15Aug2020 - 26Aug2020): finished  302 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tARE,  2nd phase (13May2020 - 20May2020): finished 1323 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tTUR,  1st phase (17Apr2020 - 29Apr2020): finished 1275 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tFRA,  5th phase (05May2020 - 26May2020): finished 1312 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tRUS, 10th phase (08Aug2020 - 21Aug2020): finished 1309 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tARE,  6th phase (04Jul2020 - 21Jul2020): finished 1328 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tBFA,  8th phase (13Aug2020 - 23Aug2020): finished  443 trials in 0 min 15 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tMKD,  9th phase (02Sep2020 - 11Sep2020): finished  306 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tEST,  8th phase (18Aug2020 - 27Aug2020): finished 1443 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tDNK,  2nd phase (15Apr2020 - 23Apr2020): finished  310 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tEST,  3rd phase (30Apr2020 - 13May2020): finished 1397 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tBRA,  1st phase (27May2020 - 12Jun2020): finished 1376 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tKWT, 10th phase (07Sep2020 - 22Sep2020): finished  579 trials in 0 min 20 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tPER,  1st phase (11May2020 - 28May2020): finished 1381 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tKWT,  8th phase (11Aug2020 - 24Aug2020): finished  461 trials in 0 min 15 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tITA,  8th phase (07Jun2020 - 14Jul2020): finished  294 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tCHE,  5th phase (30Jun2020 - 26Jul2020): finished 1399 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tITA, 10th phase (18Aug2020 - 08Sep2020): finished 1410 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tBOL,  4th phase (15Jul2020 - 22Jul2020): finished 1402 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tARE,  3rd phase (21May2020 - 07Jun2020): finished 1386 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tBGR,  7th phase (08Aug2020 - 19Aug2020): finished  302 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tKWT,  1st phase (13May2020 - 27May2020): finished 1386 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tIRN,  9th phase (17Aug2020 - 05Sep2020): finished  452 trials in 0 min 15 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tITA,  7th phase (20May2020 - 06Jun2020): finished  311 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tUSA,  0th phase (09Feb2020 - 18Apr2020): finished 1362 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tFRA,  4th phase (22Apr2020 - 04May2020): finished 1422 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tCHE,  6th phase (27Jul2020 - 12Aug2020): finished 1416 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tBFA,  7th phase (23Jul2020 - 12Aug2020): finished 1424 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tFRA,  0th phase (12Feb2020 - 23Mar2020): finished 1400 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tNGA,  3rd phase (19Jun2020 - 26Jun2020): finished 1393 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tUSA,  1st phase (19Apr2020 - 10May2020): finished 1383 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tBHR,  0th phase (06Mar2020 - 08May2020): finished 1327 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tKWT,  3rd phase (08Jun2020 - 22Jun2020): finished 1389 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tEST,  1st phase (08Apr2020 - 17Apr2020): finished 1431 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tARE, 10th phase (11Sep2020 - 22Sep2020): finished 1432 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tBFA,  1st phase (01Apr2020 - 09Apr2020): finished 1410 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tTUR,  9th phase (23Aug2020 - 06Sep2020): finished  324 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tPRT,  5th phase (26Jun2020 - 08Jul2020): finished 1426 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tFRA,  1st phase (24Mar2020 - 02Apr2020): finished 1444 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tFRA,  3rd phase (13Apr2020 - 21Apr2020): finished 1422 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tCHE,  2nd phase (06Apr2020 - 15Apr2020): finished 1424 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tTUR,  7th phase (16Jul2020 - 04Aug2020): finished  158 trials in 0 min  5 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tTUR,  3rd phase (09May2020 - 22May2020): finished 1395 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tBHR,  4th phase (25Jun2020 - 05Jul2020): finished  826 trials in 0 min 30 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tGIN,  3rd phase (24May2020 - 06Jun2020): finished 1429 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tRUS,  3rd phase (24May2020 - 01Jun2020): finished 1409 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tMEX,  4th phase (07Jul2020 - 16Jul2020): finished  698 trials in 0 min 25 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tMEX,  5th phase (17Jul2020 - 28Jul2020): finished 1405 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tMEX,  1st phase (24May2020 - 10Jun2020): finished 1404 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tKWT,  0th phase (08Mar2020 - 12May2020): finished 1209 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tKWT,  2nd phase (28May2020 - 07Jun2020): finished 1400 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tPER,  6th phase (31Jul2020 - 10Aug2020): finished 1395 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tPRT,  6th phase (09Jul2020 - 22Jul2020): finished 1287 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tKWT,  5th phase (05Jul2020 - 15Jul2020): finished 1270 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tARE,  9th phase (02Sep2020 - 10Sep2020): finished 1279 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tBGR,  8th phase (20Aug2020 - 30Aug2020): finished  133 trials in 0 min  5 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tMEX,  8th phase (17Aug2020 - 27Aug2020): finished 1258 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tBOL,  9th phase (26Aug2020 - 09Sep2020): finished 1265 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tRUS,  0th phase (12Feb2020 - 06May2020): finished 1287 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tEST, 11th phase (13Sep2020 - 22Sep2020): finished  476 trials in 0 min 15 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tITA,  9th phase (15Jul2020 - 17Aug2020): finished 1313 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tNGA,  8th phase (29Jul2020 - 07Aug2020): finished 1352 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tITA,  5th phase (01May2020 - 09May2020): finished  592 trials in 0 min 20 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tPER,  5th phase (18Jul2020 - 30Jul2020): finished 1451 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tBFA,  9th phase (24Aug2020 - 10Sep2020): finished 1458 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tARE,  5th phase (21Jun2020 - 03Jul2020): finished  178 trials in 0 min  5 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tRUS,  5th phase (12Jun2020 - 20Jun2020): finished 1482 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tNGA, 11th phase (02Sep2020 - 22Sep2020): finished 1480 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tCHE,  1st phase (29Mar2020 - 05Apr2020): finished 1517 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tBRA,  0th phase (16Mar2020 - 26May2020): finished 1451 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tBFA,  2nd phase (10Apr2020 - 19Apr2020): finished 1465 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tTUR,  8th phase (05Aug2020 - 22Aug2020): finished  306 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tRUS, 11th phase (22Aug2020 - 05Sep2020): finished 1165 trials in 0 min 45 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tBOL,  7th phase (10Aug2020 - 17Aug2020): finished  355 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tTUR,  5th phase (13Jun2020 - 27Jun2020): finished 1466 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tRUS,  4th phase (02Jun2020 - 11Jun2020): finished 1474 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tBHR,  8th phase (10Aug2020 - 22Aug2020): finished  167 trials in 0 min  5 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tPER,  0th phase (16Mar2020 - 10May2020): finished 1417 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tDNK,  1st phase (05Apr2020 - 14Apr2020): finished 1445 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tBGR,  6th phase (31Jul2020 - 07Aug2020): finished  699 trials in 0 min 25 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tTUR,  2nd phase (30Apr2020 - 08May2020): finished 1092 trials in 0 min 40 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tDNK,  3rd phase (24Apr2020 - 03May2020): finished 1489 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tFRA,  9th phase (18Aug2020 - 02Sep2020): finished  762 trials in 0 min 25 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tBRA,  5th phase (20Jul2020 - 27Jul2020): finished 1518 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tDNK,  5th phase (18May2020 - 16Jun2020): finished  331 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tEST,  0th phase (15Mar2020 - 07Apr2020): finished 1500 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tBRA,  2nd phase (13Jun2020 - 25Jun2020): finished  344 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tFRA,  2nd phase (03Apr2020 - 12Apr2020): finished 1495 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tITA, 11th phase (09Sep2020 - 22Sep2020): finished 1470 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tDNK,  9th phase (03Sep2020 - 11Sep2020): finished 1490 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tBFA,  4th phase (04May2020 - 20May2020): finished 1488 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tEST,  5th phase (25May2020 - 04Jun2020): finished  337 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tMEX,  6th phase (29Jul2020 - 05Aug2020): finished 1521 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tBRA,  7th phase (05Aug2020 - 19Aug2020): finished 1488 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tARE,  8th phase (15Aug2020 - 01Sep2020): finished 1498 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tBRA,  9th phase (30Aug2020 - 09Sep2020): finished  174 trials in 0 min  5 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tUSA,  3rd phase (05Jun2020 - 25Jun2020): finished 1500 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tBRA,  4th phase (09Jul2020 - 19Jul2020): finished  275 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tBGR,  0th phase (21Mar2020 - 09May2020): finished 1373 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tPER,  2nd phase (29May2020 - 13Jun2020): finished 1384 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tARE,  0th phase (12Feb2020 - 25Apr2020): finished 1292 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tNGA,  6th phase (13Jul2020 - 20Jul2020): finished  380 trials in 0 min 15 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tBOL,  3rd phase (06Jul2020 - 14Jul2020): finished  723 trials in 0 min 25 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tBRA, 10th phase (10Sep2020 - 22Sep2020): finished 1323 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tPER,  8th phase (19Aug2020 - 28Aug2020): finished 1399 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tPRT,  9th phase (31Aug2020 - 11Sep2020): finished 1425 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tUSA,  4th phase (26Jun2020 - 07Jul2020): finished 1417 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tNGA, 10th phase (19Aug2020 - 01Sep2020): finished  555 trials in 0 min 20 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tIRN,  1st phase (30Mar2020 - 17Apr2020): finished 1411 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tBFA,  6th phase (23Jun2020 - 22Jul2020): finished 1417 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tITA,  3rd phase (09Apr2020 - 18Apr2020): finished  296 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tBHR,  3rd phase (14Jun2020 - 24Jun2020): finished 1439 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tMEX,  2nd phase (11Jun2020 - 23Jun2020): finished 1416 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tPRT,  2nd phase (18May2020 - 01Jun2020): finished 1415 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tARE,  1st phase (26Apr2020 - 12May2020): finished 1422 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tMKD,  8th phase (23Aug2020 - 01Sep2020): finished 1408 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tBOL,  2nd phase (26Jun2020 - 05Jul2020): finished  327 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tGIN,  0th phase (03Apr2020 - 30Apr2020): finished 1404 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tRUS,  8th phase (12Jul2020 - 24Jul2020): finished 1421 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tIRN,  8th phase (31Jul2020 - 16Aug2020): finished  590 trials in 0 min 20 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tUSA,  2nd phase (11May2020 - 04Jun2020): finished 1413 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tNGA,  0th phase (18Mar2020 - 21May2020): finished 1367 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tMKD,  0th phase (13Mar2020 - 01Jun2020): finished 1364 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tMEX,  0th phase (03Mar2020 - 23May2020): finished 1369 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tKWT,  6th phase (16Jul2020 - 27Jul2020): finished  184 trials in 0 min  5 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tTUR,  0th phase (24Mar2020 - 16Apr2020): finished 1551 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tPRT, 10th phase (12Sep2020 - 22Sep2020): finished  731 trials in 0 min 20 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tBHR,  9th phase (23Aug2020 - 04Sep2020): finished 1795 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tMKD,  4th phase (17Jul2020 - 26Jul2020): finished  402 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "Completed optimization. Total: 46 min 18 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      }
     ],
     "prompt_number": 11
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "# Show summary\n",
      "analyser.summary(countries=countries_show)"
     ],
     "language": "python",
     "metadata": {},
     "outputs": [
      {
       "html": [
        "<div>\n",
        "<style scoped>\n",
        "    .dataframe tbody tr th:only-of-type {\n",
        "        vertical-align: middle;\n",
        "    }\n",
        "\n",
        "    .dataframe tbody tr th {\n",
        "        vertical-align: top;\n",
        "    }\n",
        "\n",
        "    .dataframe thead th {\n",
        "        text-align: right;\n",
        "    }\n",
        "</style>\n",
        "<table border=\"1\" class=\"dataframe\">\n",
        "  <thead>\n",
        "    <tr style=\"text-align: right;\">\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th>Type</th>\n",
        "      <th>Start</th>\n",
        "      <th>End</th>\n",
        "      <th>Population</th>\n",
        "      <th>ODE</th>\n",
        "      <th>Rt</th>\n",
        "      <th>theta</th>\n",
        "      <th>kappa</th>\n",
        "      <th>rho</th>\n",
        "      <th>sigma</th>\n",
        "      <th>tau</th>\n",
        "      <th>1/alpha2 [day]</th>\n",
        "      <th>1/gamma [day]</th>\n",
        "      <th>alpha1 [-]</th>\n",
        "      <th>1/beta [day]</th>\n",
        "      <th>RMSLE</th>\n",
        "      <th>Trials</th>\n",
        "      <th>Runtime</th>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>Country</th>\n",
        "      <th>Phase</th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "    </tr>\n",
        "  </thead>\n",
        "  <tbody>\n",
        "    <tr>\n",
        "      <th rowspan=\"13\" valign=\"top\">Russia</th>\n",
        "      <th>0th</th>\n",
        "      <td>Past</td>\n",
        "      <td>12Feb2020</td>\n",
        "      <td>06May2020</td>\n",
        "      <td>330457362</td>\n",
        "      <td>SIR-F</td>\n",
        "      <td>0.02</td>\n",
        "      <td>0.602763</td>\n",
        "      <td>0.544883</td>\n",
        "      <td>0.0340813</td>\n",
        "      <td>0.00229851</td>\n",
        "      <td>360</td>\n",
        "      <td>0</td>\n",
        "      <td>108</td>\n",
        "      <td>0.603</td>\n",
        "      <td>7</td>\n",
        "      <td>18.9667</td>\n",
        "      <td>1287</td>\n",
        "      <td>1 min  0 sec</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>1st</th>\n",
        "      <td>Past</td>\n",
        "      <td>07May2020</td>\n",
        "      <td>15May2020</td>\n",
        "      <td>330457362</td>\n",
        "      <td>SIR-F</td>\n",
        "      <td>2.46</td>\n",
        "      <td>0.000638701</td>\n",
        "      <td>0.000116581</td>\n",
        "      <td>0.0130188</td>\n",
        "      <td>0.00517845</td>\n",
        "      <td>360</td>\n",
        "      <td>2144</td>\n",
        "      <td>48</td>\n",
        "      <td>0.001</td>\n",
        "      <td>19</td>\n",
        "      <td>0.0663921</td>\n",
        "      <td>1329</td>\n",
        "      <td>1 min  0 sec</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>2nd</th>\n",
        "      <td>Past</td>\n",
        "      <td>16May2020</td>\n",
        "      <td>23May2020</td>\n",
        "      <td>330457362</td>\n",
        "      <td>SIR-F</td>\n",
        "      <td>1.51</td>\n",
        "      <td>0.000440065</td>\n",
        "      <td>9.8046e-05</td>\n",
        "      <td>0.00763724</td>\n",
        "      <td>0.00494162</td>\n",
        "      <td>360</td>\n",
        "      <td>2549</td>\n",
        "      <td>50</td>\n",
        "      <td>0</td>\n",
        "      <td>32</td>\n",
        "      <td>0.0570082</td>\n",
        "      <td>1759</td>\n",
        "      <td>1 min  0 sec</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>3rd</th>\n",
        "      <td>Past</td>\n",
        "      <td>24May2020</td>\n",
        "      <td>01Jun2020</td>\n",
        "      <td>330457362</td>\n",
        "      <td>SIR-F</td>\n",
        "      <td>1.08</td>\n",
        "      <td>0.000343538</td>\n",
        "      <td>0.000113249</td>\n",
        "      <td>0.00557086</td>\n",
        "      <td>0.00505496</td>\n",
        "      <td>360</td>\n",
        "      <td>2207</td>\n",
        "      <td>49</td>\n",
        "      <td>0</td>\n",
        "      <td>44</td>\n",
        "      <td>0.0763248</td>\n",
        "      <td>1409</td>\n",
        "      <td>1 min  0 sec</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>4th</th>\n",
        "      <td>Past</td>\n",
        "      <td>02Jun2020</td>\n",
        "      <td>11Jun2020</td>\n",
        "      <td>330457362</td>\n",
        "      <td>SIR-F</td>\n",
        "      <td>0.98</td>\n",
        "      <td>0.0181654</td>\n",
        "      <td>9.96754e-06</td>\n",
        "      <td>0.00479178</td>\n",
        "      <td>0.00480376</td>\n",
        "      <td>360</td>\n",
        "      <td>25081</td>\n",
        "      <td>52</td>\n",
        "      <td>0.018</td>\n",
        "      <td>52</td>\n",
        "      <td>0.0727387</td>\n",
        "      <td>1474</td>\n",
        "      <td>1 min  0 sec</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>5th</th>\n",
        "      <td>Past</td>\n",
        "      <td>12Jun2020</td>\n",
        "      <td>20Jun2020</td>\n",
        "      <td>330457362</td>\n",
        "      <td>SIR-F</td>\n",
        "      <td>0.82</td>\n",
        "      <td>0.0218621</td>\n",
        "      <td>1.88817e-06</td>\n",
        "      <td>0.00354709</td>\n",
        "      <td>0.00424531</td>\n",
        "      <td>360</td>\n",
        "      <td>132403</td>\n",
        "      <td>58</td>\n",
        "      <td>0.022</td>\n",
        "      <td>70</td>\n",
        "      <td>0.0597586</td>\n",
        "      <td>1482</td>\n",
        "      <td>1 min  0 sec</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>6th</th>\n",
        "      <td>Past</td>\n",
        "      <td>21Jun2020</td>\n",
        "      <td>30Jun2020</td>\n",
        "      <td>330457362</td>\n",
        "      <td>SIR-F</td>\n",
        "      <td>0.9</td>\n",
        "      <td>0.021825</td>\n",
        "      <td>1.88817e-06</td>\n",
        "      <td>0.00276866</td>\n",
        "      <td>0.00301643</td>\n",
        "      <td>360</td>\n",
        "      <td>132403</td>\n",
        "      <td>82</td>\n",
        "      <td>0.022</td>\n",
        "      <td>90</td>\n",
        "      <td>0.0496409</td>\n",
        "      <td>1699</td>\n",
        "      <td>1 min  0 sec</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>7th</th>\n",
        "      <td>Past</td>\n",
        "      <td>01Jul2020</td>\n",
        "      <td>11Jul2020</td>\n",
        "      <td>330457362</td>\n",
        "      <td>SIR-F</td>\n",
        "      <td>0.82</td>\n",
        "      <td>0.0167158</td>\n",
        "      <td>2.69754e-05</td>\n",
        "      <td>0.00246588</td>\n",
        "      <td>0.0029199</td>\n",
        "      <td>360</td>\n",
        "      <td>9267</td>\n",
        "      <td>85</td>\n",
        "      <td>0.017</td>\n",
        "      <td>101</td>\n",
        "      <td>0.0511025</td>\n",
        "      <td>1320</td>\n",
        "      <td>1 min  0 sec</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>8th</th>\n",
        "      <td>Past</td>\n",
        "      <td>12Jul2020</td>\n",
        "      <td>24Jul2020</td>\n",
        "      <td>330457362</td>\n",
        "      <td>SIR-F</td>\n",
        "      <td>0.71</td>\n",
        "      <td>0.0189236</td>\n",
        "      <td>1.10548e-05</td>\n",
        "      <td>0.0019371</td>\n",
        "      <td>0.00265076</td>\n",
        "      <td>360</td>\n",
        "      <td>22614</td>\n",
        "      <td>94</td>\n",
        "      <td>0.019</td>\n",
        "      <td>129</td>\n",
        "      <td>0.0630092</td>\n",
        "      <td>1421</td>\n",
        "      <td>1 min  0 sec</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>9th</th>\n",
        "      <td>Past</td>\n",
        "      <td>25Jul2020</td>\n",
        "      <td>07Aug2020</td>\n",
        "      <td>330457362</td>\n",
        "      <td>SIR-F</td>\n",
        "      <td>0.78</td>\n",
        "      <td>0.0205683</td>\n",
        "      <td>3.65782e-06</td>\n",
        "      <td>0.0016005</td>\n",
        "      <td>0.0020129</td>\n",
        "      <td>360</td>\n",
        "      <td>68346</td>\n",
        "      <td>124</td>\n",
        "      <td>0.021</td>\n",
        "      <td>156</td>\n",
        "      <td>0.0522163</td>\n",
        "      <td>1329</td>\n",
        "      <td>1 min  0 sec</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>10th</th>\n",
        "      <td>Past</td>\n",
        "      <td>08Aug2020</td>\n",
        "      <td>21Aug2020</td>\n",
        "      <td>330457362</td>\n",
        "      <td>SIR-F</td>\n",
        "      <td>0.8</td>\n",
        "      <td>0.0181375</td>\n",
        "      <td>1.1057e-05</td>\n",
        "      <td>0.00134239</td>\n",
        "      <td>0.00163139</td>\n",
        "      <td>360</td>\n",
        "      <td>22610</td>\n",
        "      <td>153</td>\n",
        "      <td>0.018</td>\n",
        "      <td>186</td>\n",
        "      <td>0.0430882</td>\n",
        "      <td>1309</td>\n",
        "      <td>1 min  0 sec</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>11th</th>\n",
        "      <td>Past</td>\n",
        "      <td>22Aug2020</td>\n",
        "      <td>05Sep2020</td>\n",
        "      <td>330457362</td>\n",
        "      <td>SIR-F</td>\n",
        "      <td>0.85</td>\n",
        "      <td>0.021308</td>\n",
        "      <td>1.88817e-06</td>\n",
        "      <td>0.00126033</td>\n",
        "      <td>0.00144149</td>\n",
        "      <td>360</td>\n",
        "      <td>132403</td>\n",
        "      <td>173</td>\n",
        "      <td>0.021</td>\n",
        "      <td>198</td>\n",
        "      <td>0.00827767</td>\n",
        "      <td>1165</td>\n",
        "      <td>0 min 45 sec</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>12th</th>\n",
        "      <td>Past</td>\n",
        "      <td>06Sep2020</td>\n",
        "      <td>22Sep2020</td>\n",
        "      <td>330457362</td>\n",
        "      <td>-</td>\n",
        "      <td>-</td>\n",
        "      <td>-</td>\n",
        "      <td>-</td>\n",
        "      <td>-</td>\n",
        "      <td>-</td>\n",
        "      <td>-</td>\n",
        "      <td>-</td>\n",
        "      <td>-</td>\n",
        "      <td>-</td>\n",
        "      <td>-</td>\n",
        "      <td>-</td>\n",
        "      <td>-</td>\n",
        "      <td>-</td>\n",
        "    </tr>\n",
        "  </tbody>\n",
        "</table>\n",
        "</div>"
       ],
       "output_type": "pyout",
       "prompt_number": 12,
       "text": [
        "               Type      Start        End  Population    ODE    Rt  \\\n",
        "Country Phase                                                        \n",
        "Russia  0th    Past  12Feb2020  06May2020   330457362  SIR-F  0.02   \n",
        "        1st    Past  07May2020  15May2020   330457362  SIR-F  2.46   \n",
        "        2nd    Past  16May2020  23May2020   330457362  SIR-F  1.51   \n",
        "        3rd    Past  24May2020  01Jun2020   330457362  SIR-F  1.08   \n",
        "        4th    Past  02Jun2020  11Jun2020   330457362  SIR-F  0.98   \n",
        "        5th    Past  12Jun2020  20Jun2020   330457362  SIR-F  0.82   \n",
        "        6th    Past  21Jun2020  30Jun2020   330457362  SIR-F   0.9   \n",
        "        7th    Past  01Jul2020  11Jul2020   330457362  SIR-F  0.82   \n",
        "        8th    Past  12Jul2020  24Jul2020   330457362  SIR-F  0.71   \n",
        "        9th    Past  25Jul2020  07Aug2020   330457362  SIR-F  0.78   \n",
        "        10th   Past  08Aug2020  21Aug2020   330457362  SIR-F   0.8   \n",
        "        11th   Past  22Aug2020  05Sep2020   330457362  SIR-F  0.85   \n",
        "        12th   Past  06Sep2020  22Sep2020   330457362      -     -   \n",
        "\n",
        "                     theta        kappa         rho       sigma  tau  \\\n",
        "Country Phase                                                          \n",
        "Russia  0th       0.602763     0.544883   0.0340813  0.00229851  360   \n",
        "        1st    0.000638701  0.000116581   0.0130188  0.00517845  360   \n",
        "        2nd    0.000440065   9.8046e-05  0.00763724  0.00494162  360   \n",
        "        3rd    0.000343538  0.000113249  0.00557086  0.00505496  360   \n",
        "        4th      0.0181654  9.96754e-06  0.00479178  0.00480376  360   \n",
        "        5th      0.0218621  1.88817e-06  0.00354709  0.00424531  360   \n",
        "        6th       0.021825  1.88817e-06  0.00276866  0.00301643  360   \n",
        "        7th      0.0167158  2.69754e-05  0.00246588   0.0029199  360   \n",
        "        8th      0.0189236  1.10548e-05   0.0019371  0.00265076  360   \n",
        "        9th      0.0205683  3.65782e-06   0.0016005   0.0020129  360   \n",
        "        10th     0.0181375   1.1057e-05  0.00134239  0.00163139  360   \n",
        "        11th      0.021308  1.88817e-06  0.00126033  0.00144149  360   \n",
        "        12th             -            -           -           -    -   \n",
        "\n",
        "              1/alpha2 [day] 1/gamma [day] alpha1 [-] 1/beta [day]  \\\n",
        "Country Phase                                                        \n",
        "Russia  0th                0           108      0.603            7   \n",
        "        1st             2144            48      0.001           19   \n",
        "        2nd             2549            50          0           32   \n",
        "        3rd             2207            49          0           44   \n",
        "        4th            25081            52      0.018           52   \n",
        "        5th           132403            58      0.022           70   \n",
        "        6th           132403            82      0.022           90   \n",
        "        7th             9267            85      0.017          101   \n",
        "        8th            22614            94      0.019          129   \n",
        "        9th            68346           124      0.021          156   \n",
        "        10th           22610           153      0.018          186   \n",
        "        11th          132403           173      0.021          198   \n",
        "        12th               -             -          -            -   \n",
        "\n",
        "                    RMSLE Trials       Runtime  \n",
        "Country Phase                                   \n",
        "Russia  0th       18.9667   1287  1 min  0 sec  \n",
        "        1st     0.0663921   1329  1 min  0 sec  \n",
        "        2nd     0.0570082   1759  1 min  0 sec  \n",
        "        3rd     0.0763248   1409  1 min  0 sec  \n",
        "        4th     0.0727387   1474  1 min  0 sec  \n",
        "        5th     0.0597586   1482  1 min  0 sec  \n",
        "        6th     0.0496409   1699  1 min  0 sec  \n",
        "        7th     0.0511025   1320  1 min  0 sec  \n",
        "        8th     0.0630092   1421  1 min  0 sec  \n",
        "        9th     0.0522163   1329  1 min  0 sec  \n",
        "        10th    0.0430882   1309  1 min  0 sec  \n",
        "        11th   0.00827767   1165  0 min 45 sec  \n",
        "        12th            -      -             -  "
       ]
      }
     ],
     "prompt_number": 12
    },
    {
     "cell_type": "markdown",
     "metadata": {},
     "source": [
      "## Compare the history of parameters\n",
      "Here, compare the history of parameter values if countries."
     ]
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "# All parameter/day parameter/Rt/OxCGRT\n",
      "analyser.track().head()"
     ],
     "language": "python",
     "metadata": {},
     "outputs": [
      {
       "html": [
        "<div>\n",
        "<style scoped>\n",
        "    .dataframe tbody tr th:only-of-type {\n",
        "        vertical-align: middle;\n",
        "    }\n",
        "\n",
        "    .dataframe tbody tr th {\n",
        "        vertical-align: top;\n",
        "    }\n",
        "\n",
        "    .dataframe thead th {\n",
        "        text-align: right;\n",
        "    }\n",
        "</style>\n",
        "<table border=\"1\" class=\"dataframe\">\n",
        "  <thead>\n",
        "    <tr style=\"text-align: right;\">\n",
        "      <th></th>\n",
        "      <th>Date</th>\n",
        "      <th>Country</th>\n",
        "      <th>theta</th>\n",
        "      <th>kappa</th>\n",
        "      <th>rho</th>\n",
        "      <th>sigma</th>\n",
        "      <th>alpha1 [-]</th>\n",
        "      <th>1/alpha2 [day]</th>\n",
        "      <th>1/beta [day]</th>\n",
        "      <th>1/gamma [day]</th>\n",
        "      <th>...</th>\n",
        "      <th>Cancel_events</th>\n",
        "      <th>Gatherings_restrictions</th>\n",
        "      <th>Transport_closing</th>\n",
        "      <th>Stay_home_restrictions</th>\n",
        "      <th>Internal_movement_restrictions</th>\n",
        "      <th>International_movement_restrictions</th>\n",
        "      <th>Information_campaigns</th>\n",
        "      <th>Testing_policy</th>\n",
        "      <th>Contact_tracing</th>\n",
        "      <th>Stringency_index</th>\n",
        "    </tr>\n",
        "  </thead>\n",
        "  <tbody>\n",
        "    <tr>\n",
        "      <th>0</th>\n",
        "      <td>2020-02-24</td>\n",
        "      <td>Italy</td>\n",
        "      <td>0.058544</td>\n",
        "      <td>8.65887e-05</td>\n",
        "      <td>0.057012</td>\n",
        "      <td>0.00294682</td>\n",
        "      <td>0.059</td>\n",
        "      <td>2887</td>\n",
        "      <td>4</td>\n",
        "      <td>84</td>\n",
        "      <td>...</td>\n",
        "      <td>2</td>\n",
        "      <td>4</td>\n",
        "      <td>0</td>\n",
        "      <td>2</td>\n",
        "      <td>2</td>\n",
        "      <td>3</td>\n",
        "      <td>2</td>\n",
        "      <td>1</td>\n",
        "      <td>2</td>\n",
        "      <td>69.91</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>1</th>\n",
        "      <td>2020-02-24</td>\n",
        "      <td>Italy</td>\n",
        "      <td>0.058544</td>\n",
        "      <td>8.65887e-05</td>\n",
        "      <td>0.057012</td>\n",
        "      <td>0.00294682</td>\n",
        "      <td>0.059</td>\n",
        "      <td>2887</td>\n",
        "      <td>4</td>\n",
        "      <td>84</td>\n",
        "      <td>...</td>\n",
        "      <td>2</td>\n",
        "      <td>4</td>\n",
        "      <td>0</td>\n",
        "      <td>2</td>\n",
        "      <td>2</td>\n",
        "      <td>3</td>\n",
        "      <td>2</td>\n",
        "      <td>1</td>\n",
        "      <td>2</td>\n",
        "      <td>69.91</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>2</th>\n",
        "      <td>2020-02-24</td>\n",
        "      <td>Italy</td>\n",
        "      <td>0.058544</td>\n",
        "      <td>8.65887e-05</td>\n",
        "      <td>0.057012</td>\n",
        "      <td>0.00294682</td>\n",
        "      <td>0.059</td>\n",
        "      <td>2887</td>\n",
        "      <td>4</td>\n",
        "      <td>84</td>\n",
        "      <td>...</td>\n",
        "      <td>2</td>\n",
        "      <td>4</td>\n",
        "      <td>0</td>\n",
        "      <td>2</td>\n",
        "      <td>2</td>\n",
        "      <td>3</td>\n",
        "      <td>2</td>\n",
        "      <td>1</td>\n",
        "      <td>2</td>\n",
        "      <td>69.91</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>3</th>\n",
        "      <td>2020-02-24</td>\n",
        "      <td>Italy</td>\n",
        "      <td>0.058544</td>\n",
        "      <td>8.65887e-05</td>\n",
        "      <td>0.057012</td>\n",
        "      <td>0.00294682</td>\n",
        "      <td>0.059</td>\n",
        "      <td>2887</td>\n",
        "      <td>4</td>\n",
        "      <td>84</td>\n",
        "      <td>...</td>\n",
        "      <td>2</td>\n",
        "      <td>4</td>\n",
        "      <td>0</td>\n",
        "      <td>2</td>\n",
        "      <td>2</td>\n",
        "      <td>3</td>\n",
        "      <td>2</td>\n",
        "      <td>1</td>\n",
        "      <td>2</td>\n",
        "      <td>69.91</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>4</th>\n",
        "      <td>2020-02-24</td>\n",
        "      <td>Italy</td>\n",
        "      <td>0.058544</td>\n",
        "      <td>8.65887e-05</td>\n",
        "      <td>0.057012</td>\n",
        "      <td>0.00294682</td>\n",
        "      <td>0.059</td>\n",
        "      <td>2887</td>\n",
        "      <td>4</td>\n",
        "      <td>84</td>\n",
        "      <td>...</td>\n",
        "      <td>2</td>\n",
        "      <td>4</td>\n",
        "      <td>0</td>\n",
        "      <td>2</td>\n",
        "      <td>2</td>\n",
        "      <td>3</td>\n",
        "      <td>2</td>\n",
        "      <td>1</td>\n",
        "      <td>2</td>\n",
        "      <td>69.91</td>\n",
        "    </tr>\n",
        "  </tbody>\n",
        "</table>\n",
        "<p>5 rows \u00d7 23 columns</p>\n",
        "</div>"
       ],
       "output_type": "pyout",
       "prompt_number": 13,
       "text": [
        "        Date Country     theta        kappa       rho       sigma alpha1 [-]  \\\n",
        "0 2020-02-24   Italy  0.058544  8.65887e-05  0.057012  0.00294682      0.059   \n",
        "1 2020-02-24   Italy  0.058544  8.65887e-05  0.057012  0.00294682      0.059   \n",
        "2 2020-02-24   Italy  0.058544  8.65887e-05  0.057012  0.00294682      0.059   \n",
        "3 2020-02-24   Italy  0.058544  8.65887e-05  0.057012  0.00294682      0.059   \n",
        "4 2020-02-24   Italy  0.058544  8.65887e-05  0.057012  0.00294682      0.059   \n",
        "\n",
        "  1/alpha2 [day] 1/beta [day] 1/gamma [day]  ... Cancel_events  \\\n",
        "0           2887            4            84  ...             2   \n",
        "1           2887            4            84  ...             2   \n",
        "2           2887            4            84  ...             2   \n",
        "3           2887            4            84  ...             2   \n",
        "4           2887            4            84  ...             2   \n",
        "\n",
        "   Gatherings_restrictions  Transport_closing  Stay_home_restrictions  \\\n",
        "0                        4                  0                       2   \n",
        "1                        4                  0                       2   \n",
        "2                        4                  0                       2   \n",
        "3                        4                  0                       2   \n",
        "4                        4                  0                       2   \n",
        "\n",
        "   Internal_movement_restrictions  International_movement_restrictions  \\\n",
        "0                               2                                    3   \n",
        "1                               2                                    3   \n",
        "2                               2                                    3   \n",
        "3                               2                                    3   \n",
        "4                               2                                    3   \n",
        "\n",
        "   Information_campaigns  Testing_policy  Contact_tracing  Stringency_index  \n",
        "0                      2               1                2             69.91  \n",
        "1                      2               1                2             69.91  \n",
        "2                      2               1                2             69.91  \n",
        "3                      2               1                2             69.91  \n",
        "4                      2               1                2             69.91  \n",
        "\n",
        "[5 rows x 23 columns]"
       ]
      }
     ],
     "prompt_number": 13
    },
    {
     "cell_type": "heading",
     "level": 3,
     "metadata": {},
     "source": [
      "$Rt$: Reprodcution number $\\mathrm{[-]}$"
     ]
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "analyser.param_history(\"Rt\", roll_window=None).tail()"
     ],
     "language": "python",
     "metadata": {},
     "outputs": [
      {
       "output_type": "display_data",
       "png": "\n",
       "text": [
        "<Figure size 648x432 with 1 Axes>"
       ]
      },
      {
       "html": [
        "<div>\n",
        "<style scoped>\n",
        "    .dataframe tbody tr th:only-of-type {\n",
        "        vertical-align: middle;\n",
        "    }\n",
        "\n",
        "    .dataframe tbody tr th {\n",
        "        vertical-align: top;\n",
        "    }\n",
        "\n",
        "    .dataframe thead th {\n",
        "        text-align: right;\n",
        "    }\n",
        "</style>\n",
        "<table border=\"1\" class=\"dataframe\">\n",
        "  <thead>\n",
        "    <tr style=\"text-align: right;\">\n",
        "      <th>Country</th>\n",
        "      <th>Bahrain</th>\n",
        "      <th>Bolivia</th>\n",
        "      <th>Brazil</th>\n",
        "      <th>Bulgaria</th>\n",
        "      <th>Burkina Faso</th>\n",
        "      <th>Denmark</th>\n",
        "      <th>Estonia</th>\n",
        "      <th>France</th>\n",
        "      <th>Guinea</th>\n",
        "      <th>Iran</th>\n",
        "      <th>...</th>\n",
        "      <th>Macedonia</th>\n",
        "      <th>Mexico</th>\n",
        "      <th>Nigeria</th>\n",
        "      <th>Peru</th>\n",
        "      <th>Portugal</th>\n",
        "      <th>Russia</th>\n",
        "      <th>Switzerland</th>\n",
        "      <th>Turkey</th>\n",
        "      <th>United Arab Emirates</th>\n",
        "      <th>United States</th>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>Date</th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "    </tr>\n",
        "  </thead>\n",
        "  <tbody>\n",
        "    <tr>\n",
        "      <th>2020-09-18</th>\n",
        "      <td>1.05</td>\n",
        "      <td>0.36</td>\n",
        "      <td>1.0</td>\n",
        "      <td>1.14</td>\n",
        "      <td>3.37</td>\n",
        "      <td>2.5</td>\n",
        "      <td>2.0</td>\n",
        "      <td>28.18</td>\n",
        "      <td>0.8</td>\n",
        "      <td>1.27</td>\n",
        "      <td>...</td>\n",
        "      <td>0.77</td>\n",
        "      <td>0.88</td>\n",
        "      <td>0.79</td>\n",
        "      <td>0.74</td>\n",
        "      <td>3.95</td>\n",
        "      <td>0.85</td>\n",
        "      <td>1.69</td>\n",
        "      <td>1.53</td>\n",
        "      <td>1.18</td>\n",
        "      <td>1.77</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>2020-09-19</th>\n",
        "      <td>1.05</td>\n",
        "      <td>0.36</td>\n",
        "      <td>1.0</td>\n",
        "      <td>1.14</td>\n",
        "      <td>3.37</td>\n",
        "      <td>2.5</td>\n",
        "      <td>2.0</td>\n",
        "      <td>28.18</td>\n",
        "      <td>0.8</td>\n",
        "      <td>1.27</td>\n",
        "      <td>...</td>\n",
        "      <td>0.77</td>\n",
        "      <td>0.88</td>\n",
        "      <td>0.79</td>\n",
        "      <td>0.74</td>\n",
        "      <td>3.95</td>\n",
        "      <td>0.85</td>\n",
        "      <td>1.69</td>\n",
        "      <td>1.53</td>\n",
        "      <td>1.18</td>\n",
        "      <td>1.77</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>2020-09-20</th>\n",
        "      <td>1.05</td>\n",
        "      <td>0.36</td>\n",
        "      <td>1.0</td>\n",
        "      <td>1.14</td>\n",
        "      <td>3.37</td>\n",
        "      <td>2.5</td>\n",
        "      <td>2.0</td>\n",
        "      <td>28.18</td>\n",
        "      <td>0.8</td>\n",
        "      <td>1.27</td>\n",
        "      <td>...</td>\n",
        "      <td>0.77</td>\n",
        "      <td>0.88</td>\n",
        "      <td>0.79</td>\n",
        "      <td>0.74</td>\n",
        "      <td>3.95</td>\n",
        "      <td>0.85</td>\n",
        "      <td>1.69</td>\n",
        "      <td>1.53</td>\n",
        "      <td>1.18</td>\n",
        "      <td>1.77</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>2020-09-21</th>\n",
        "      <td>1.05</td>\n",
        "      <td>0.36</td>\n",
        "      <td>1.0</td>\n",
        "      <td>1.14</td>\n",
        "      <td>3.37</td>\n",
        "      <td>2.5</td>\n",
        "      <td>2.0</td>\n",
        "      <td>28.18</td>\n",
        "      <td>0.8</td>\n",
        "      <td>1.27</td>\n",
        "      <td>...</td>\n",
        "      <td>0.77</td>\n",
        "      <td>0.88</td>\n",
        "      <td>0.79</td>\n",
        "      <td>0.74</td>\n",
        "      <td>3.95</td>\n",
        "      <td>0.85</td>\n",
        "      <td>1.69</td>\n",
        "      <td>1.53</td>\n",
        "      <td>1.18</td>\n",
        "      <td>1.77</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>2020-09-22</th>\n",
        "      <td>1.05</td>\n",
        "      <td>0.36</td>\n",
        "      <td>1.0</td>\n",
        "      <td>1.14</td>\n",
        "      <td>3.37</td>\n",
        "      <td>2.5</td>\n",
        "      <td>2.0</td>\n",
        "      <td>28.18</td>\n",
        "      <td>0.8</td>\n",
        "      <td>1.27</td>\n",
        "      <td>...</td>\n",
        "      <td>0.77</td>\n",
        "      <td>0.88</td>\n",
        "      <td>0.79</td>\n",
        "      <td>0.74</td>\n",
        "      <td>3.95</td>\n",
        "      <td>0.85</td>\n",
        "      <td>1.69</td>\n",
        "      <td>1.53</td>\n",
        "      <td>1.18</td>\n",
        "      <td>1.77</td>\n",
        "    </tr>\n",
        "  </tbody>\n",
        "</table>\n",
        "<p>5 rows \u00d7 22 columns</p>\n",
        "</div>"
       ],
       "output_type": "pyout",
       "prompt_number": 14,
       "text": [
        "Country     Bahrain  Bolivia  Brazil  Bulgaria  Burkina Faso  Denmark  \\\n",
        "Date                                                                    \n",
        "2020-09-18     1.05     0.36     1.0      1.14          3.37      2.5   \n",
        "2020-09-19     1.05     0.36     1.0      1.14          3.37      2.5   \n",
        "2020-09-20     1.05     0.36     1.0      1.14          3.37      2.5   \n",
        "2020-09-21     1.05     0.36     1.0      1.14          3.37      2.5   \n",
        "2020-09-22     1.05     0.36     1.0      1.14          3.37      2.5   \n",
        "\n",
        "Country     Estonia  France  Guinea  Iran  ...  Macedonia  Mexico  Nigeria  \\\n",
        "Date                                       ...                               \n",
        "2020-09-18      2.0   28.18     0.8  1.27  ...       0.77    0.88     0.79   \n",
        "2020-09-19      2.0   28.18     0.8  1.27  ...       0.77    0.88     0.79   \n",
        "2020-09-20      2.0   28.18     0.8  1.27  ...       0.77    0.88     0.79   \n",
        "2020-09-21      2.0   28.18     0.8  1.27  ...       0.77    0.88     0.79   \n",
        "2020-09-22      2.0   28.18     0.8  1.27  ...       0.77    0.88     0.79   \n",
        "\n",
        "Country     Peru  Portugal  Russia  Switzerland  Turkey  United Arab Emirates  \\\n",
        "Date                                                                            \n",
        "2020-09-18  0.74      3.95    0.85         1.69    1.53                  1.18   \n",
        "2020-09-19  0.74      3.95    0.85         1.69    1.53                  1.18   \n",
        "2020-09-20  0.74      3.95    0.85         1.69    1.53                  1.18   \n",
        "2020-09-21  0.74      3.95    0.85         1.69    1.53                  1.18   \n",
        "2020-09-22  0.74      3.95    0.85         1.69    1.53                  1.18   \n",
        "\n",
        "Country     United States  \n",
        "Date                       \n",
        "2020-09-18           1.77  \n",
        "2020-09-19           1.77  \n",
        "2020-09-20           1.77  \n",
        "2020-09-21           1.77  \n",
        "2020-09-22           1.77  \n",
        "\n",
        "[5 rows x 22 columns]"
       ]
      }
     ],
     "prompt_number": 14
    },
    {
     "cell_type": "heading",
     "level": 3,
     "metadata": {},
     "source": [
      "$\\rho$: Effective contact rate $\\mathrm{[-]}$"
     ]
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "analyser.param_history(\"rho\", roll_window=None).tail()"
     ],
     "language": "python",
     "metadata": {},
     "outputs": [
      {
       "output_type": "display_data",
       "png": "\n",
       "text": [
        "<Figure size 648x432 with 1 Axes>"
       ]
      },
      {
       "html": [
        "<div>\n",
        "<style scoped>\n",
        "    .dataframe tbody tr th:only-of-type {\n",
        "        vertical-align: middle;\n",
        "    }\n",
        "\n",
        "    .dataframe tbody tr th {\n",
        "        vertical-align: top;\n",
        "    }\n",
        "\n",
        "    .dataframe thead th {\n",
        "        text-align: right;\n",
        "    }\n",
        "</style>\n",
        "<table border=\"1\" class=\"dataframe\">\n",
        "  <thead>\n",
        "    <tr style=\"text-align: right;\">\n",
        "      <th>Country</th>\n",
        "      <th>Bahrain</th>\n",
        "      <th>Bolivia</th>\n",
        "      <th>Brazil</th>\n",
        "      <th>Bulgaria</th>\n",
        "      <th>Burkina Faso</th>\n",
        "      <th>Denmark</th>\n",
        "      <th>Estonia</th>\n",
        "      <th>France</th>\n",
        "      <th>Guinea</th>\n",
        "      <th>Iran</th>\n",
        "      <th>...</th>\n",
        "      <th>Macedonia</th>\n",
        "      <th>Mexico</th>\n",
        "      <th>Nigeria</th>\n",
        "      <th>Peru</th>\n",
        "      <th>Portugal</th>\n",
        "      <th>Russia</th>\n",
        "      <th>Switzerland</th>\n",
        "      <th>Turkey</th>\n",
        "      <th>United Arab Emirates</th>\n",
        "      <th>United States</th>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>Date</th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "    </tr>\n",
        "  </thead>\n",
        "  <tbody>\n",
        "    <tr>\n",
        "      <th>2020-09-18</th>\n",
        "      <td>0.030242</td>\n",
        "      <td>0.003869</td>\n",
        "      <td>0.019788</td>\n",
        "      <td>0.008744</td>\n",
        "      <td>0.002837</td>\n",
        "      <td>0.032315</td>\n",
        "      <td>0.019429</td>\n",
        "      <td>0.009176</td>\n",
        "      <td>0.012565</td>\n",
        "      <td>0.018741</td>\n",
        "      <td>...</td>\n",
        "      <td>0.013326</td>\n",
        "      <td>0.027694</td>\n",
        "      <td>0.003276</td>\n",
        "      <td>0.002334</td>\n",
        "      <td>0.002598</td>\n",
        "      <td>0.00126</td>\n",
        "      <td>0.00252</td>\n",
        "      <td>0.020564</td>\n",
        "      <td>0.018948</td>\n",
        "      <td>0.002987</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>2020-09-19</th>\n",
        "      <td>0.030242</td>\n",
        "      <td>0.003869</td>\n",
        "      <td>0.019788</td>\n",
        "      <td>0.008744</td>\n",
        "      <td>0.002837</td>\n",
        "      <td>0.032315</td>\n",
        "      <td>0.019429</td>\n",
        "      <td>0.009176</td>\n",
        "      <td>0.012565</td>\n",
        "      <td>0.018741</td>\n",
        "      <td>...</td>\n",
        "      <td>0.013326</td>\n",
        "      <td>0.027694</td>\n",
        "      <td>0.003276</td>\n",
        "      <td>0.002334</td>\n",
        "      <td>0.002598</td>\n",
        "      <td>0.00126</td>\n",
        "      <td>0.00252</td>\n",
        "      <td>0.020564</td>\n",
        "      <td>0.018948</td>\n",
        "      <td>0.002987</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>2020-09-20</th>\n",
        "      <td>0.030242</td>\n",
        "      <td>0.003869</td>\n",
        "      <td>0.019788</td>\n",
        "      <td>0.008744</td>\n",
        "      <td>0.002837</td>\n",
        "      <td>0.032315</td>\n",
        "      <td>0.019429</td>\n",
        "      <td>0.009176</td>\n",
        "      <td>0.012565</td>\n",
        "      <td>0.018741</td>\n",
        "      <td>...</td>\n",
        "      <td>0.013326</td>\n",
        "      <td>0.027694</td>\n",
        "      <td>0.003276</td>\n",
        "      <td>0.002334</td>\n",
        "      <td>0.002598</td>\n",
        "      <td>0.00126</td>\n",
        "      <td>0.00252</td>\n",
        "      <td>0.020564</td>\n",
        "      <td>0.018948</td>\n",
        "      <td>0.002987</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>2020-09-21</th>\n",
        "      <td>0.030242</td>\n",
        "      <td>0.003869</td>\n",
        "      <td>0.019788</td>\n",
        "      <td>0.008744</td>\n",
        "      <td>0.002837</td>\n",
        "      <td>0.032315</td>\n",
        "      <td>0.019429</td>\n",
        "      <td>0.009176</td>\n",
        "      <td>0.012565</td>\n",
        "      <td>0.018741</td>\n",
        "      <td>...</td>\n",
        "      <td>0.013326</td>\n",
        "      <td>0.027694</td>\n",
        "      <td>0.003276</td>\n",
        "      <td>0.002334</td>\n",
        "      <td>0.002598</td>\n",
        "      <td>0.00126</td>\n",
        "      <td>0.00252</td>\n",
        "      <td>0.020564</td>\n",
        "      <td>0.018948</td>\n",
        "      <td>0.002987</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>2020-09-22</th>\n",
        "      <td>0.030242</td>\n",
        "      <td>0.003869</td>\n",
        "      <td>0.019788</td>\n",
        "      <td>0.008744</td>\n",
        "      <td>0.002837</td>\n",
        "      <td>0.032315</td>\n",
        "      <td>0.019429</td>\n",
        "      <td>0.009176</td>\n",
        "      <td>0.012565</td>\n",
        "      <td>0.018741</td>\n",
        "      <td>...</td>\n",
        "      <td>0.013326</td>\n",
        "      <td>0.027694</td>\n",
        "      <td>0.003276</td>\n",
        "      <td>0.002334</td>\n",
        "      <td>0.002598</td>\n",
        "      <td>0.00126</td>\n",
        "      <td>0.00252</td>\n",
        "      <td>0.020564</td>\n",
        "      <td>0.018948</td>\n",
        "      <td>0.002987</td>\n",
        "    </tr>\n",
        "  </tbody>\n",
        "</table>\n",
        "<p>5 rows \u00d7 22 columns</p>\n",
        "</div>"
       ],
       "output_type": "pyout",
       "prompt_number": 15,
       "text": [
        "Country      Bahrain   Bolivia    Brazil  Bulgaria  Burkina Faso   Denmark  \\\n",
        "Date                                                                         \n",
        "2020-09-18  0.030242  0.003869  0.019788  0.008744      0.002837  0.032315   \n",
        "2020-09-19  0.030242  0.003869  0.019788  0.008744      0.002837  0.032315   \n",
        "2020-09-20  0.030242  0.003869  0.019788  0.008744      0.002837  0.032315   \n",
        "2020-09-21  0.030242  0.003869  0.019788  0.008744      0.002837  0.032315   \n",
        "2020-09-22  0.030242  0.003869  0.019788  0.008744      0.002837  0.032315   \n",
        "\n",
        "Country      Estonia    France    Guinea      Iran  ...  Macedonia    Mexico  \\\n",
        "Date                                                ...                        \n",
        "2020-09-18  0.019429  0.009176  0.012565  0.018741  ...   0.013326  0.027694   \n",
        "2020-09-19  0.019429  0.009176  0.012565  0.018741  ...   0.013326  0.027694   \n",
        "2020-09-20  0.019429  0.009176  0.012565  0.018741  ...   0.013326  0.027694   \n",
        "2020-09-21  0.019429  0.009176  0.012565  0.018741  ...   0.013326  0.027694   \n",
        "2020-09-22  0.019429  0.009176  0.012565  0.018741  ...   0.013326  0.027694   \n",
        "\n",
        "Country      Nigeria      Peru  Portugal   Russia  Switzerland    Turkey  \\\n",
        "Date                                                                       \n",
        "2020-09-18  0.003276  0.002334  0.002598  0.00126      0.00252  0.020564   \n",
        "2020-09-19  0.003276  0.002334  0.002598  0.00126      0.00252  0.020564   \n",
        "2020-09-20  0.003276  0.002334  0.002598  0.00126      0.00252  0.020564   \n",
        "2020-09-21  0.003276  0.002334  0.002598  0.00126      0.00252  0.020564   \n",
        "2020-09-22  0.003276  0.002334  0.002598  0.00126      0.00252  0.020564   \n",
        "\n",
        "Country     United Arab Emirates  United States  \n",
        "Date                                             \n",
        "2020-09-18              0.018948       0.002987  \n",
        "2020-09-19              0.018948       0.002987  \n",
        "2020-09-20              0.018948       0.002987  \n",
        "2020-09-21              0.018948       0.002987  \n",
        "2020-09-22              0.018948       0.002987  \n",
        "\n",
        "[5 rows x 22 columns]"
       ]
      }
     ],
     "prompt_number": 15
    },
    {
     "cell_type": "heading",
     "level": 3,
     "metadata": {},
     "source": [
      "$\\sigma$: Recovery rate $\\mathrm{[-]}$"
     ]
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "analyser.param_history(\"sigma\", roll_window=None).tail()"
     ],
     "language": "python",
     "metadata": {},
     "outputs": [
      {
       "output_type": "display_data",
       "png": "\n",
       "text": [
        "<Figure size 648x432 with 1 Axes>"
       ]
      },
      {
       "html": [
        "<div>\n",
        "<style scoped>\n",
        "    .dataframe tbody tr th:only-of-type {\n",
        "        vertical-align: middle;\n",
        "    }\n",
        "\n",
        "    .dataframe tbody tr th {\n",
        "        vertical-align: top;\n",
        "    }\n",
        "\n",
        "    .dataframe thead th {\n",
        "        text-align: right;\n",
        "    }\n",
        "</style>\n",
        "<table border=\"1\" class=\"dataframe\">\n",
        "  <thead>\n",
        "    <tr style=\"text-align: right;\">\n",
        "      <th>Country</th>\n",
        "      <th>Bahrain</th>\n",
        "      <th>Bolivia</th>\n",
        "      <th>Brazil</th>\n",
        "      <th>Bulgaria</th>\n",
        "      <th>Burkina Faso</th>\n",
        "      <th>Denmark</th>\n",
        "      <th>Estonia</th>\n",
        "      <th>France</th>\n",
        "      <th>Guinea</th>\n",
        "      <th>Iran</th>\n",
        "      <th>...</th>\n",
        "      <th>Macedonia</th>\n",
        "      <th>Mexico</th>\n",
        "      <th>Nigeria</th>\n",
        "      <th>Peru</th>\n",
        "      <th>Portugal</th>\n",
        "      <th>Russia</th>\n",
        "      <th>Switzerland</th>\n",
        "      <th>Turkey</th>\n",
        "      <th>United Arab Emirates</th>\n",
        "      <th>United States</th>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>Date</th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "    </tr>\n",
        "  </thead>\n",
        "  <tbody>\n",
        "    <tr>\n",
        "      <th>2020-09-18</th>\n",
        "      <td>0.028754</td>\n",
        "      <td>0.009938</td>\n",
        "      <td>0.019428</td>\n",
        "      <td>0.007219</td>\n",
        "      <td>0.000815</td>\n",
        "      <td>0.012885</td>\n",
        "      <td>0.009605</td>\n",
        "      <td>0.000315</td>\n",
        "      <td>0.015564</td>\n",
        "      <td>0.01381</td>\n",
        "      <td>...</td>\n",
        "      <td>0.016631</td>\n",
        "      <td>0.02844</td>\n",
        "      <td>0.00402</td>\n",
        "      <td>0.003063</td>\n",
        "      <td>0.000646</td>\n",
        "      <td>0.001441</td>\n",
        "      <td>0.001486</td>\n",
        "      <td>0.012861</td>\n",
        "      <td>0.016092</td>\n",
        "      <td>0.001626</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>2020-09-19</th>\n",
        "      <td>0.028754</td>\n",
        "      <td>0.009938</td>\n",
        "      <td>0.019428</td>\n",
        "      <td>0.007219</td>\n",
        "      <td>0.000815</td>\n",
        "      <td>0.012885</td>\n",
        "      <td>0.009605</td>\n",
        "      <td>0.000315</td>\n",
        "      <td>0.015564</td>\n",
        "      <td>0.01381</td>\n",
        "      <td>...</td>\n",
        "      <td>0.016631</td>\n",
        "      <td>0.02844</td>\n",
        "      <td>0.00402</td>\n",
        "      <td>0.003063</td>\n",
        "      <td>0.000646</td>\n",
        "      <td>0.001441</td>\n",
        "      <td>0.001486</td>\n",
        "      <td>0.012861</td>\n",
        "      <td>0.016092</td>\n",
        "      <td>0.001626</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>2020-09-20</th>\n",
        "      <td>0.028754</td>\n",
        "      <td>0.009938</td>\n",
        "      <td>0.019428</td>\n",
        "      <td>0.007219</td>\n",
        "      <td>0.000815</td>\n",
        "      <td>0.012885</td>\n",
        "      <td>0.009605</td>\n",
        "      <td>0.000315</td>\n",
        "      <td>0.015564</td>\n",
        "      <td>0.01381</td>\n",
        "      <td>...</td>\n",
        "      <td>0.016631</td>\n",
        "      <td>0.02844</td>\n",
        "      <td>0.00402</td>\n",
        "      <td>0.003063</td>\n",
        "      <td>0.000646</td>\n",
        "      <td>0.001441</td>\n",
        "      <td>0.001486</td>\n",
        "      <td>0.012861</td>\n",
        "      <td>0.016092</td>\n",
        "      <td>0.001626</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>2020-09-21</th>\n",
        "      <td>0.028754</td>\n",
        "      <td>0.009938</td>\n",
        "      <td>0.019428</td>\n",
        "      <td>0.007219</td>\n",
        "      <td>0.000815</td>\n",
        "      <td>0.012885</td>\n",
        "      <td>0.009605</td>\n",
        "      <td>0.000315</td>\n",
        "      <td>0.015564</td>\n",
        "      <td>0.01381</td>\n",
        "      <td>...</td>\n",
        "      <td>0.016631</td>\n",
        "      <td>0.02844</td>\n",
        "      <td>0.00402</td>\n",
        "      <td>0.003063</td>\n",
        "      <td>0.000646</td>\n",
        "      <td>0.001441</td>\n",
        "      <td>0.001486</td>\n",
        "      <td>0.012861</td>\n",
        "      <td>0.016092</td>\n",
        "      <td>0.001626</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>2020-09-22</th>\n",
        "      <td>0.028754</td>\n",
        "      <td>0.009938</td>\n",
        "      <td>0.019428</td>\n",
        "      <td>0.007219</td>\n",
        "      <td>0.000815</td>\n",
        "      <td>0.012885</td>\n",
        "      <td>0.009605</td>\n",
        "      <td>0.000315</td>\n",
        "      <td>0.015564</td>\n",
        "      <td>0.01381</td>\n",
        "      <td>...</td>\n",
        "      <td>0.016631</td>\n",
        "      <td>0.02844</td>\n",
        "      <td>0.00402</td>\n",
        "      <td>0.003063</td>\n",
        "      <td>0.000646</td>\n",
        "      <td>0.001441</td>\n",
        "      <td>0.001486</td>\n",
        "      <td>0.012861</td>\n",
        "      <td>0.016092</td>\n",
        "      <td>0.001626</td>\n",
        "    </tr>\n",
        "  </tbody>\n",
        "</table>\n",
        "<p>5 rows \u00d7 22 columns</p>\n",
        "</div>"
       ],
       "output_type": "pyout",
       "prompt_number": 16,
       "text": [
        "Country      Bahrain   Bolivia    Brazil  Bulgaria  Burkina Faso   Denmark  \\\n",
        "Date                                                                         \n",
        "2020-09-18  0.028754  0.009938  0.019428  0.007219      0.000815  0.012885   \n",
        "2020-09-19  0.028754  0.009938  0.019428  0.007219      0.000815  0.012885   \n",
        "2020-09-20  0.028754  0.009938  0.019428  0.007219      0.000815  0.012885   \n",
        "2020-09-21  0.028754  0.009938  0.019428  0.007219      0.000815  0.012885   \n",
        "2020-09-22  0.028754  0.009938  0.019428  0.007219      0.000815  0.012885   \n",
        "\n",
        "Country      Estonia    France    Guinea     Iran  ...  Macedonia   Mexico  \\\n",
        "Date                                               ...                       \n",
        "2020-09-18  0.009605  0.000315  0.015564  0.01381  ...   0.016631  0.02844   \n",
        "2020-09-19  0.009605  0.000315  0.015564  0.01381  ...   0.016631  0.02844   \n",
        "2020-09-20  0.009605  0.000315  0.015564  0.01381  ...   0.016631  0.02844   \n",
        "2020-09-21  0.009605  0.000315  0.015564  0.01381  ...   0.016631  0.02844   \n",
        "2020-09-22  0.009605  0.000315  0.015564  0.01381  ...   0.016631  0.02844   \n",
        "\n",
        "Country     Nigeria      Peru  Portugal    Russia  Switzerland    Turkey  \\\n",
        "Date                                                                       \n",
        "2020-09-18  0.00402  0.003063  0.000646  0.001441     0.001486  0.012861   \n",
        "2020-09-19  0.00402  0.003063  0.000646  0.001441     0.001486  0.012861   \n",
        "2020-09-20  0.00402  0.003063  0.000646  0.001441     0.001486  0.012861   \n",
        "2020-09-21  0.00402  0.003063  0.000646  0.001441     0.001486  0.012861   \n",
        "2020-09-22  0.00402  0.003063  0.000646  0.001441     0.001486  0.012861   \n",
        "\n",
        "Country     United Arab Emirates  United States  \n",
        "Date                                             \n",
        "2020-09-18              0.016092       0.001626  \n",
        "2020-09-19              0.016092       0.001626  \n",
        "2020-09-20              0.016092       0.001626  \n",
        "2020-09-21              0.016092       0.001626  \n",
        "2020-09-22              0.016092       0.001626  \n",
        "\n",
        "[5 rows x 22 columns]"
       ]
      }
     ],
     "prompt_number": 16
    },
    {
     "cell_type": "heading",
     "level": 3,
     "metadata": {},
     "source": [
      "$\\kappa$: Mortality rate of infected cases $\\mathrm{[-]}$"
     ]
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "analyser.param_history(\"kappa\", roll_window=None).tail()"
     ],
     "language": "python",
     "metadata": {},
     "outputs": [
      {
       "output_type": "display_data",
       "png": "\n",
       "text": [
        "<Figure size 648x432 with 1 Axes>"
       ]
      },
      {
       "html": [
        "<div>\n",
        "<style scoped>\n",
        "    .dataframe tbody tr th:only-of-type {\n",
        "        vertical-align: middle;\n",
        "    }\n",
        "\n",
        "    .dataframe tbody tr th {\n",
        "        vertical-align: top;\n",
        "    }\n",
        "\n",
        "    .dataframe thead th {\n",
        "        text-align: right;\n",
        "    }\n",
        "</style>\n",
        "<table border=\"1\" class=\"dataframe\">\n",
        "  <thead>\n",
        "    <tr style=\"text-align: right;\">\n",
        "      <th>Country</th>\n",
        "      <th>Bahrain</th>\n",
        "      <th>Bolivia</th>\n",
        "      <th>Brazil</th>\n",
        "      <th>Bulgaria</th>\n",
        "      <th>Burkina Faso</th>\n",
        "      <th>Denmark</th>\n",
        "      <th>Estonia</th>\n",
        "      <th>France</th>\n",
        "      <th>Guinea</th>\n",
        "      <th>Iran</th>\n",
        "      <th>...</th>\n",
        "      <th>Macedonia</th>\n",
        "      <th>Mexico</th>\n",
        "      <th>Nigeria</th>\n",
        "      <th>Peru</th>\n",
        "      <th>Portugal</th>\n",
        "      <th>Russia</th>\n",
        "      <th>Switzerland</th>\n",
        "      <th>Turkey</th>\n",
        "      <th>United Arab Emirates</th>\n",
        "      <th>United States</th>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>Date</th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "    </tr>\n",
        "  </thead>\n",
        "  <tbody>\n",
        "    <tr>\n",
        "      <th>2020-09-18</th>\n",
        "      <td>0.000024</td>\n",
        "      <td>0.000156</td>\n",
        "      <td>0.000039</td>\n",
        "      <td>0.000066</td>\n",
        "      <td>0.000011</td>\n",
        "      <td>0.00006</td>\n",
        "      <td>0.000087</td>\n",
        "      <td>0.00001</td>\n",
        "      <td>0.000185</td>\n",
        "      <td>0.000531</td>\n",
        "      <td>...</td>\n",
        "      <td>0.000557</td>\n",
        "      <td>0.000596</td>\n",
        "      <td>0.000045</td>\n",
        "      <td>0.000027</td>\n",
        "      <td>0.00001</td>\n",
        "      <td>0.000002</td>\n",
        "      <td>0.000001</td>\n",
        "      <td>0.000551</td>\n",
        "      <td>0.000002</td>\n",
        "      <td>0.00006</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>2020-09-19</th>\n",
        "      <td>0.000024</td>\n",
        "      <td>0.000156</td>\n",
        "      <td>0.000039</td>\n",
        "      <td>0.000066</td>\n",
        "      <td>0.000011</td>\n",
        "      <td>0.00006</td>\n",
        "      <td>0.000087</td>\n",
        "      <td>0.00001</td>\n",
        "      <td>0.000185</td>\n",
        "      <td>0.000531</td>\n",
        "      <td>...</td>\n",
        "      <td>0.000557</td>\n",
        "      <td>0.000596</td>\n",
        "      <td>0.000045</td>\n",
        "      <td>0.000027</td>\n",
        "      <td>0.00001</td>\n",
        "      <td>0.000002</td>\n",
        "      <td>0.000001</td>\n",
        "      <td>0.000551</td>\n",
        "      <td>0.000002</td>\n",
        "      <td>0.00006</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>2020-09-20</th>\n",
        "      <td>0.000024</td>\n",
        "      <td>0.000156</td>\n",
        "      <td>0.000039</td>\n",
        "      <td>0.000066</td>\n",
        "      <td>0.000011</td>\n",
        "      <td>0.00006</td>\n",
        "      <td>0.000087</td>\n",
        "      <td>0.00001</td>\n",
        "      <td>0.000185</td>\n",
        "      <td>0.000531</td>\n",
        "      <td>...</td>\n",
        "      <td>0.000557</td>\n",
        "      <td>0.000596</td>\n",
        "      <td>0.000045</td>\n",
        "      <td>0.000027</td>\n",
        "      <td>0.00001</td>\n",
        "      <td>0.000002</td>\n",
        "      <td>0.000001</td>\n",
        "      <td>0.000551</td>\n",
        "      <td>0.000002</td>\n",
        "      <td>0.00006</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>2020-09-21</th>\n",
        "      <td>0.000024</td>\n",
        "      <td>0.000156</td>\n",
        "      <td>0.000039</td>\n",
        "      <td>0.000066</td>\n",
        "      <td>0.000011</td>\n",
        "      <td>0.00006</td>\n",
        "      <td>0.000087</td>\n",
        "      <td>0.00001</td>\n",
        "      <td>0.000185</td>\n",
        "      <td>0.000531</td>\n",
        "      <td>...</td>\n",
        "      <td>0.000557</td>\n",
        "      <td>0.000596</td>\n",
        "      <td>0.000045</td>\n",
        "      <td>0.000027</td>\n",
        "      <td>0.00001</td>\n",
        "      <td>0.000002</td>\n",
        "      <td>0.000001</td>\n",
        "      <td>0.000551</td>\n",
        "      <td>0.000002</td>\n",
        "      <td>0.00006</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>2020-09-22</th>\n",
        "      <td>0.000024</td>\n",
        "      <td>0.000156</td>\n",
        "      <td>0.000039</td>\n",
        "      <td>0.000066</td>\n",
        "      <td>0.000011</td>\n",
        "      <td>0.00006</td>\n",
        "      <td>0.000087</td>\n",
        "      <td>0.00001</td>\n",
        "      <td>0.000185</td>\n",
        "      <td>0.000531</td>\n",
        "      <td>...</td>\n",
        "      <td>0.000557</td>\n",
        "      <td>0.000596</td>\n",
        "      <td>0.000045</td>\n",
        "      <td>0.000027</td>\n",
        "      <td>0.00001</td>\n",
        "      <td>0.000002</td>\n",
        "      <td>0.000001</td>\n",
        "      <td>0.000551</td>\n",
        "      <td>0.000002</td>\n",
        "      <td>0.00006</td>\n",
        "    </tr>\n",
        "  </tbody>\n",
        "</table>\n",
        "<p>5 rows \u00d7 22 columns</p>\n",
        "</div>"
       ],
       "output_type": "pyout",
       "prompt_number": 17,
       "text": [
        "Country      Bahrain   Bolivia    Brazil  Bulgaria  Burkina Faso  Denmark  \\\n",
        "Date                                                                        \n",
        "2020-09-18  0.000024  0.000156  0.000039  0.000066      0.000011  0.00006   \n",
        "2020-09-19  0.000024  0.000156  0.000039  0.000066      0.000011  0.00006   \n",
        "2020-09-20  0.000024  0.000156  0.000039  0.000066      0.000011  0.00006   \n",
        "2020-09-21  0.000024  0.000156  0.000039  0.000066      0.000011  0.00006   \n",
        "2020-09-22  0.000024  0.000156  0.000039  0.000066      0.000011  0.00006   \n",
        "\n",
        "Country      Estonia   France    Guinea      Iran  ...  Macedonia    Mexico  \\\n",
        "Date                                               ...                        \n",
        "2020-09-18  0.000087  0.00001  0.000185  0.000531  ...   0.000557  0.000596   \n",
        "2020-09-19  0.000087  0.00001  0.000185  0.000531  ...   0.000557  0.000596   \n",
        "2020-09-20  0.000087  0.00001  0.000185  0.000531  ...   0.000557  0.000596   \n",
        "2020-09-21  0.000087  0.00001  0.000185  0.000531  ...   0.000557  0.000596   \n",
        "2020-09-22  0.000087  0.00001  0.000185  0.000531  ...   0.000557  0.000596   \n",
        "\n",
        "Country      Nigeria      Peru  Portugal    Russia  Switzerland    Turkey  \\\n",
        "Date                                                                        \n",
        "2020-09-18  0.000045  0.000027   0.00001  0.000002     0.000001  0.000551   \n",
        "2020-09-19  0.000045  0.000027   0.00001  0.000002     0.000001  0.000551   \n",
        "2020-09-20  0.000045  0.000027   0.00001  0.000002     0.000001  0.000551   \n",
        "2020-09-21  0.000045  0.000027   0.00001  0.000002     0.000001  0.000551   \n",
        "2020-09-22  0.000045  0.000027   0.00001  0.000002     0.000001  0.000551   \n",
        "\n",
        "Country     United Arab Emirates  United States  \n",
        "Date                                             \n",
        "2020-09-18              0.000002        0.00006  \n",
        "2020-09-19              0.000002        0.00006  \n",
        "2020-09-20              0.000002        0.00006  \n",
        "2020-09-21              0.000002        0.00006  \n",
        "2020-09-22              0.000002        0.00006  \n",
        "\n",
        "[5 rows x 22 columns]"
       ]
      }
     ],
     "prompt_number": 17
    },
    {
     "cell_type": "heading",
     "level": 3,
     "metadata": {},
     "source": [
      "$\\theta$: Mortality rate of S$^\\ast$ cases $\\mathrm{[-]}$"
     ]
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "analyser.param_history(\"theta\", roll_window=None).tail()"
     ],
     "language": "python",
     "metadata": {},
     "outputs": [
      {
       "output_type": "display_data",
       "png": "\n",
       "text": [
        "<Figure size 648x432 with 1 Axes>"
       ]
      },
      {
       "html": [
        "<div>\n",
        "<style scoped>\n",
        "    .dataframe tbody tr th:only-of-type {\n",
        "        vertical-align: middle;\n",
        "    }\n",
        "\n",
        "    .dataframe tbody tr th {\n",
        "        vertical-align: top;\n",
        "    }\n",
        "\n",
        "    .dataframe thead th {\n",
        "        text-align: right;\n",
        "    }\n",
        "</style>\n",
        "<table border=\"1\" class=\"dataframe\">\n",
        "  <thead>\n",
        "    <tr style=\"text-align: right;\">\n",
        "      <th>Country</th>\n",
        "      <th>Bahrain</th>\n",
        "      <th>Bolivia</th>\n",
        "      <th>Brazil</th>\n",
        "      <th>Bulgaria</th>\n",
        "      <th>Burkina Faso</th>\n",
        "      <th>Denmark</th>\n",
        "      <th>Estonia</th>\n",
        "      <th>France</th>\n",
        "      <th>Guinea</th>\n",
        "      <th>Iran</th>\n",
        "      <th>...</th>\n",
        "      <th>Macedonia</th>\n",
        "      <th>Mexico</th>\n",
        "      <th>Nigeria</th>\n",
        "      <th>Peru</th>\n",
        "      <th>Portugal</th>\n",
        "      <th>Russia</th>\n",
        "      <th>Switzerland</th>\n",
        "      <th>Turkey</th>\n",
        "      <th>United Arab Emirates</th>\n",
        "      <th>United States</th>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>Date</th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "    </tr>\n",
        "  </thead>\n",
        "  <tbody>\n",
        "    <tr>\n",
        "      <th>2020-09-18</th>\n",
        "      <td>0.000662</td>\n",
        "      <td>0.048458</td>\n",
        "      <td>0.017393</td>\n",
        "      <td>0.049821</td>\n",
        "      <td>0.018739</td>\n",
        "      <td>0.000159</td>\n",
        "      <td>0.000301</td>\n",
        "      <td>0.001604</td>\n",
        "      <td>0.000439</td>\n",
        "      <td>0.027041</td>\n",
        "      <td>...</td>\n",
        "      <td>0.006217</td>\n",
        "      <td>0.081236</td>\n",
        "      <td>0.017337</td>\n",
        "      <td>0.017679</td>\n",
        "      <td>0.002207</td>\n",
        "      <td>0.021308</td>\n",
        "      <td>0.001324</td>\n",
        "      <td>0.000491</td>\n",
        "      <td>0.00149</td>\n",
        "      <td>0.000956</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>2020-09-19</th>\n",
        "      <td>0.000662</td>\n",
        "      <td>0.048458</td>\n",
        "      <td>0.017393</td>\n",
        "      <td>0.049821</td>\n",
        "      <td>0.018739</td>\n",
        "      <td>0.000159</td>\n",
        "      <td>0.000301</td>\n",
        "      <td>0.001604</td>\n",
        "      <td>0.000439</td>\n",
        "      <td>0.027041</td>\n",
        "      <td>...</td>\n",
        "      <td>0.006217</td>\n",
        "      <td>0.081236</td>\n",
        "      <td>0.017337</td>\n",
        "      <td>0.017679</td>\n",
        "      <td>0.002207</td>\n",
        "      <td>0.021308</td>\n",
        "      <td>0.001324</td>\n",
        "      <td>0.000491</td>\n",
        "      <td>0.00149</td>\n",
        "      <td>0.000956</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>2020-09-20</th>\n",
        "      <td>0.000662</td>\n",
        "      <td>0.048458</td>\n",
        "      <td>0.017393</td>\n",
        "      <td>0.049821</td>\n",
        "      <td>0.018739</td>\n",
        "      <td>0.000159</td>\n",
        "      <td>0.000301</td>\n",
        "      <td>0.001604</td>\n",
        "      <td>0.000439</td>\n",
        "      <td>0.027041</td>\n",
        "      <td>...</td>\n",
        "      <td>0.006217</td>\n",
        "      <td>0.081236</td>\n",
        "      <td>0.017337</td>\n",
        "      <td>0.017679</td>\n",
        "      <td>0.002207</td>\n",
        "      <td>0.021308</td>\n",
        "      <td>0.001324</td>\n",
        "      <td>0.000491</td>\n",
        "      <td>0.00149</td>\n",
        "      <td>0.000956</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>2020-09-21</th>\n",
        "      <td>0.000662</td>\n",
        "      <td>0.048458</td>\n",
        "      <td>0.017393</td>\n",
        "      <td>0.049821</td>\n",
        "      <td>0.018739</td>\n",
        "      <td>0.000159</td>\n",
        "      <td>0.000301</td>\n",
        "      <td>0.001604</td>\n",
        "      <td>0.000439</td>\n",
        "      <td>0.027041</td>\n",
        "      <td>...</td>\n",
        "      <td>0.006217</td>\n",
        "      <td>0.081236</td>\n",
        "      <td>0.017337</td>\n",
        "      <td>0.017679</td>\n",
        "      <td>0.002207</td>\n",
        "      <td>0.021308</td>\n",
        "      <td>0.001324</td>\n",
        "      <td>0.000491</td>\n",
        "      <td>0.00149</td>\n",
        "      <td>0.000956</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>2020-09-22</th>\n",
        "      <td>0.000662</td>\n",
        "      <td>0.048458</td>\n",
        "      <td>0.017393</td>\n",
        "      <td>0.049821</td>\n",
        "      <td>0.018739</td>\n",
        "      <td>0.000159</td>\n",
        "      <td>0.000301</td>\n",
        "      <td>0.001604</td>\n",
        "      <td>0.000439</td>\n",
        "      <td>0.027041</td>\n",
        "      <td>...</td>\n",
        "      <td>0.006217</td>\n",
        "      <td>0.081236</td>\n",
        "      <td>0.017337</td>\n",
        "      <td>0.017679</td>\n",
        "      <td>0.002207</td>\n",
        "      <td>0.021308</td>\n",
        "      <td>0.001324</td>\n",
        "      <td>0.000491</td>\n",
        "      <td>0.00149</td>\n",
        "      <td>0.000956</td>\n",
        "    </tr>\n",
        "  </tbody>\n",
        "</table>\n",
        "<p>5 rows \u00d7 22 columns</p>\n",
        "</div>"
       ],
       "output_type": "pyout",
       "prompt_number": 18,
       "text": [
        "Country      Bahrain   Bolivia    Brazil  Bulgaria  Burkina Faso   Denmark  \\\n",
        "Date                                                                         \n",
        "2020-09-18  0.000662  0.048458  0.017393  0.049821      0.018739  0.000159   \n",
        "2020-09-19  0.000662  0.048458  0.017393  0.049821      0.018739  0.000159   \n",
        "2020-09-20  0.000662  0.048458  0.017393  0.049821      0.018739  0.000159   \n",
        "2020-09-21  0.000662  0.048458  0.017393  0.049821      0.018739  0.000159   \n",
        "2020-09-22  0.000662  0.048458  0.017393  0.049821      0.018739  0.000159   \n",
        "\n",
        "Country      Estonia    France    Guinea      Iran  ...  Macedonia    Mexico  \\\n",
        "Date                                                ...                        \n",
        "2020-09-18  0.000301  0.001604  0.000439  0.027041  ...   0.006217  0.081236   \n",
        "2020-09-19  0.000301  0.001604  0.000439  0.027041  ...   0.006217  0.081236   \n",
        "2020-09-20  0.000301  0.001604  0.000439  0.027041  ...   0.006217  0.081236   \n",
        "2020-09-21  0.000301  0.001604  0.000439  0.027041  ...   0.006217  0.081236   \n",
        "2020-09-22  0.000301  0.001604  0.000439  0.027041  ...   0.006217  0.081236   \n",
        "\n",
        "Country      Nigeria      Peru  Portugal    Russia  Switzerland    Turkey  \\\n",
        "Date                                                                        \n",
        "2020-09-18  0.017337  0.017679  0.002207  0.021308     0.001324  0.000491   \n",
        "2020-09-19  0.017337  0.017679  0.002207  0.021308     0.001324  0.000491   \n",
        "2020-09-20  0.017337  0.017679  0.002207  0.021308     0.001324  0.000491   \n",
        "2020-09-21  0.017337  0.017679  0.002207  0.021308     0.001324  0.000491   \n",
        "2020-09-22  0.017337  0.017679  0.002207  0.021308     0.001324  0.000491   \n",
        "\n",
        "Country     United Arab Emirates  United States  \n",
        "Date                                             \n",
        "2020-09-18               0.00149       0.000956  \n",
        "2020-09-19               0.00149       0.000956  \n",
        "2020-09-20               0.00149       0.000956  \n",
        "2020-09-21               0.00149       0.000956  \n",
        "2020-09-22               0.00149       0.000956  \n",
        "\n",
        "[5 rows x 22 columns]"
       ]
      }
     ],
     "prompt_number": 18
    },
    {
     "cell_type": "markdown",
     "metadata": {},
     "source": [
      "## (Experimental): Relationship of OxCGRT index and parameter values\n",
      "Government responses will impact on parameter values of ODE models about 14 days later. Here, we will investigate on the relationship of [stringency index (from OxCGRT)](https://github.com/OxCGRT/covid-policy-tracker/blob/master/documentation/index_methodology.md) and reproduction number/model parameters.\n"
     ]
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "%matplotlib inline\n",
      "from matplotlib import pyplot as plt\n",
      "import seaborn as sns\n",
      "import pandas as pd"
     ],
     "language": "python",
     "metadata": {},
     "outputs": [],
     "prompt_number": 19
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "df = analyser.track()\n",
      "param_cols = [\"Rt\", *cs.SIRF.PARAMETERS]\n",
      "oxcgrt_cols = oxcgrt_data.OXCGRT_VARS[:]\n",
      "cols = param_cols + oxcgrt_cols\n",
      "delay = 14\n",
      "\n",
      "for col in param_cols:\n",
      "    df[col] = pd.to_numeric(df[col], errors=\"coerce\")\n",
      "    df[col] = df.groupby(\"Country\")[col].shift(0 - delay)\n",
      "\n",
      "df = df.dropna(how=\"any\")\n",
      "df = df.loc[:, [\"Date\", \"Country\", *cols]]\n",
      "track_df = df.copy()\n",
      "track_df.info()"
     ],
     "language": "python",
     "metadata": {},
     "outputs": [
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "<class 'pandas.core.frame.DataFrame'>\n",
        "Int64Index: 57487 entries, 0 to 57780\n",
        "Data columns (total 19 columns):\n",
        " #   Column                               Non-Null Count  Dtype         \n",
        "---  ------                               --------------  -----         \n",
        " 0   Date                                 57487 non-null  datetime64[ns]\n",
        " 1   Country                              57487 non-null  object        \n",
        " 2   Rt                                   57487 non-null  float64       \n",
        " 3   theta                                57487 non-null  float64       \n",
        " 4   kappa                                57487 non-null  float64       \n",
        " 5   rho                                  57487 non-null  float64       \n",
        " 6   sigma                                57487 non-null  float64       \n",
        " 7   School_closing                       57487 non-null  int64         \n",
        " 8   Workplace_closing                    57487 non-null  int64         \n",
        " 9   Cancel_events                        57487 non-null  int64         \n",
        " 10  Gatherings_restrictions              57487 non-null  int64         \n",
        " 11  Transport_closing                    57487 non-null  int64         \n",
        " 12  Stay_home_restrictions               57487 non-null  int64         \n",
        " 13  Internal_movement_restrictions       57487 non-null  int64         \n",
        " 14  International_movement_restrictions  57487 non-null  int64         \n",
        " 15  Information_campaigns                57487 non-null  int64         \n",
        " 16  Testing_policy                       57487 non-null  int64         \n",
        " 17  Contact_tracing                      57487 non-null  int64         \n",
        " 18  Stringency_index                     57487 non-null  float64       \n",
        "dtypes: datetime64[ns](1), float64(6), int64(11), object(1)\n",
        "memory usage: 8.8+ MB\n"
       ]
      }
     ],
     "prompt_number": 20
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "# Correlation\n",
      "df = track_df.copy()\n",
      "df.corr().style.background_gradient(axis=None)"
     ],
     "language": "python",
     "metadata": {},
     "outputs": [
      {
       "html": [
        "<style  type=\"text/css\" >\n",
        "#T_7bbfab1e_fcee_11ea_8f64_52540026b18brow0_col0,#T_7bbfab1e_fcee_11ea_8f64_52540026b18brow1_col1,#T_7bbfab1e_fcee_11ea_8f64_52540026b18brow2_col2,#T_7bbfab1e_fcee_11ea_8f64_52540026b18brow3_col3,#T_7bbfab1e_fcee_11ea_8f64_52540026b18brow4_col4,#T_7bbfab1e_fcee_11ea_8f64_52540026b18brow5_col5,#T_7bbfab1e_fcee_11ea_8f64_52540026b18brow6_col6,#T_7bbfab1e_fcee_11ea_8f64_52540026b18brow7_col7,#T_7bbfab1e_fcee_11ea_8f64_52540026b18brow8_col8,#T_7bbfab1e_fcee_11ea_8f64_52540026b18brow9_col9,#T_7bbfab1e_fcee_11ea_8f64_52540026b18brow10_col10,#T_7bbfab1e_fcee_11ea_8f64_52540026b18brow11_col11,#T_7bbfab1e_fcee_11ea_8f64_52540026b18brow12_col12,#T_7bbfab1e_fcee_11ea_8f64_52540026b18brow13_col13,#T_7bbfab1e_fcee_11ea_8f64_52540026b18brow14_col14,#T_7bbfab1e_fcee_11ea_8f64_52540026b18brow15_col15,#T_7bbfab1e_fcee_11ea_8f64_52540026b18brow16_col16{\n",
        "            background-color:  #023858;\n",
        "            color:  #f1f1f1;\n",
        "        }#T_7bbfab1e_fcee_11ea_8f64_52540026b18brow0_col1,#T_7bbfab1e_fcee_11ea_8f64_52540026b18brow0_col12,#T_7bbfab1e_fcee_11ea_8f64_52540026b18brow1_col0,#T_7bbfab1e_fcee_11ea_8f64_52540026b18brow2_col9,#T_7bbfab1e_fcee_11ea_8f64_52540026b18brow9_col2,#T_7bbfab1e_fcee_11ea_8f64_52540026b18brow12_col0{\n",
        "            background-color:  #e4e1ef;\n",
        "            color:  #000000;\n",
        "        }#T_7bbfab1e_fcee_11ea_8f64_52540026b18brow0_col2,#T_7bbfab1e_fcee_11ea_8f64_52540026b18brow0_col4,#T_7bbfab1e_fcee_11ea_8f64_52540026b18brow2_col0,#T_7bbfab1e_fcee_11ea_8f64_52540026b18brow4_col0{\n",
        "            background-color:  #e1dfed;\n",
        "            color:  #000000;\n",
        "        }#T_7bbfab1e_fcee_11ea_8f64_52540026b18brow0_col3,#T_7bbfab1e_fcee_11ea_8f64_52540026b18brow3_col0{\n",
        "            background-color:  #569dc8;\n",
        "            color:  #000000;\n",
        "        }#T_7bbfab1e_fcee_11ea_8f64_52540026b18brow0_col5,#T_7bbfab1e_fcee_11ea_8f64_52540026b18brow0_col7,#T_7bbfab1e_fcee_11ea_8f64_52540026b18brow5_col0,#T_7bbfab1e_fcee_11ea_8f64_52540026b18brow7_col0{\n",
        "            background-color:  #d0d1e6;\n",
        "            color:  #000000;\n",
        "        }#T_7bbfab1e_fcee_11ea_8f64_52540026b18brow0_col6,#T_7bbfab1e_fcee_11ea_8f64_52540026b18brow1_col4,#T_7bbfab1e_fcee_11ea_8f64_52540026b18brow4_col1,#T_7bbfab1e_fcee_11ea_8f64_52540026b18brow6_col0{\n",
        "            background-color:  #c8cde4;\n",
        "            color:  #000000;\n",
        "        }#T_7bbfab1e_fcee_11ea_8f64_52540026b18brow0_col8,#T_7bbfab1e_fcee_11ea_8f64_52540026b18brow4_col8,#T_7bbfab1e_fcee_11ea_8f64_52540026b18brow8_col0,#T_7bbfab1e_fcee_11ea_8f64_52540026b18brow8_col4{\n",
        "            background-color:  #d4d4e8;\n",
        "            color:  #000000;\n",
        "        }#T_7bbfab1e_fcee_11ea_8f64_52540026b18brow0_col9,#T_7bbfab1e_fcee_11ea_8f64_52540026b18brow9_col0{\n",
        "            background-color:  #dcdaeb;\n",
        "            color:  #000000;\n",
        "        }#T_7bbfab1e_fcee_11ea_8f64_52540026b18brow0_col10,#T_7bbfab1e_fcee_11ea_8f64_52540026b18brow0_col14,#T_7bbfab1e_fcee_11ea_8f64_52540026b18brow10_col0,#T_7bbfab1e_fcee_11ea_8f64_52540026b18brow14_col0{\n",
        "            background-color:  #e0deed;\n",
        "            color:  #000000;\n",
        "        }#T_7bbfab1e_fcee_11ea_8f64_52540026b18brow0_col11,#T_7bbfab1e_fcee_11ea_8f64_52540026b18brow11_col0{\n",
        "            background-color:  #e0dded;\n",
        "            color:  #000000;\n",
        "        }#T_7bbfab1e_fcee_11ea_8f64_52540026b18brow0_col13,#T_7bbfab1e_fcee_11ea_8f64_52540026b18brow13_col0{\n",
        "            background-color:  #c6cce3;\n",
        "            color:  #000000;\n",
        "        }#T_7bbfab1e_fcee_11ea_8f64_52540026b18brow0_col15,#T_7bbfab1e_fcee_11ea_8f64_52540026b18brow3_col9,#T_7bbfab1e_fcee_11ea_8f64_52540026b18brow9_col3,#T_7bbfab1e_fcee_11ea_8f64_52540026b18brow15_col0{\n",
        "            background-color:  #e6e2ef;\n",
        "            color:  #000000;\n",
        "        }#T_7bbfab1e_fcee_11ea_8f64_52540026b18brow0_col16,#T_7bbfab1e_fcee_11ea_8f64_52540026b18brow16_col0{\n",
        "            background-color:  #d6d6e9;\n",
        "            color:  #000000;\n",
        "        }#T_7bbfab1e_fcee_11ea_8f64_52540026b18brow1_col2,#T_7bbfab1e_fcee_11ea_8f64_52540026b18brow2_col1{\n",
        "            background-color:  #023c5f;\n",
        "            color:  #f1f1f1;\n",
        "        }#T_7bbfab1e_fcee_11ea_8f64_52540026b18brow1_col3,#T_7bbfab1e_fcee_11ea_8f64_52540026b18brow3_col1,#T_7bbfab1e_fcee_11ea_8f64_52540026b18brow8_col10,#T_7bbfab1e_fcee_11ea_8f64_52540026b18brow10_col8{\n",
        "            background-color:  #0a73b2;\n",
        "            color:  #f1f1f1;\n",
        "        }#T_7bbfab1e_fcee_11ea_8f64_52540026b18brow1_col5,#T_7bbfab1e_fcee_11ea_8f64_52540026b18brow5_col1{\n",
        "            background-color:  #dedcec;\n",
        "            color:  #000000;\n",
        "        }#T_7bbfab1e_fcee_11ea_8f64_52540026b18brow1_col6,#T_7bbfab1e_fcee_11ea_8f64_52540026b18brow2_col4,#T_7bbfab1e_fcee_11ea_8f64_52540026b18brow4_col2,#T_7bbfab1e_fcee_11ea_8f64_52540026b18brow6_col1{\n",
        "            background-color:  #d3d4e7;\n",
        "            color:  #000000;\n",
        "        }#T_7bbfab1e_fcee_11ea_8f64_52540026b18brow1_col7,#T_7bbfab1e_fcee_11ea_8f64_52540026b18brow1_col8,#T_7bbfab1e_fcee_11ea_8f64_52540026b18brow7_col1,#T_7bbfab1e_fcee_11ea_8f64_52540026b18brow8_col1{\n",
        "            background-color:  #efe9f3;\n",
        "            color:  #000000;\n",
        "        }#T_7bbfab1e_fcee_11ea_8f64_52540026b18brow1_col9,#T_7bbfab1e_fcee_11ea_8f64_52540026b18brow3_col15,#T_7bbfab1e_fcee_11ea_8f64_52540026b18brow9_col1,#T_7bbfab1e_fcee_11ea_8f64_52540026b18brow15_col3{\n",
        "            background-color:  #e7e3f0;\n",
        "            color:  #000000;\n",
        "        }#T_7bbfab1e_fcee_11ea_8f64_52540026b18brow1_col10,#T_7bbfab1e_fcee_11ea_8f64_52540026b18brow10_col1{\n",
        "            background-color:  #94b6d7;\n",
        "            color:  #000000;\n",
        "        }#T_7bbfab1e_fcee_11ea_8f64_52540026b18brow1_col11,#T_7bbfab1e_fcee_11ea_8f64_52540026b18brow2_col11,#T_7bbfab1e_fcee_11ea_8f64_52540026b18brow2_col15,#T_7bbfab1e_fcee_11ea_8f64_52540026b18brow11_col1,#T_7bbfab1e_fcee_11ea_8f64_52540026b18brow11_col2,#T_7bbfab1e_fcee_11ea_8f64_52540026b18brow15_col2{\n",
        "            background-color:  #c0c9e2;\n",
        "            color:  #000000;\n",
        "        }#T_7bbfab1e_fcee_11ea_8f64_52540026b18brow1_col12,#T_7bbfab1e_fcee_11ea_8f64_52540026b18brow12_col1{\n",
        "            background-color:  #9ebad9;\n",
        "            color:  #000000;\n",
        "        }#T_7bbfab1e_fcee_11ea_8f64_52540026b18brow1_col13,#T_7bbfab1e_fcee_11ea_8f64_52540026b18brow3_col13,#T_7bbfab1e_fcee_11ea_8f64_52540026b18brow13_col1,#T_7bbfab1e_fcee_11ea_8f64_52540026b18brow13_col3{\n",
        "            background-color:  #f6eff7;\n",
        "            color:  #000000;\n",
        "        }#T_7bbfab1e_fcee_11ea_8f64_52540026b18brow1_col14,#T_7bbfab1e_fcee_11ea_8f64_52540026b18brow2_col7,#T_7bbfab1e_fcee_11ea_8f64_52540026b18brow7_col2,#T_7bbfab1e_fcee_11ea_8f64_52540026b18brow14_col1{\n",
        "            background-color:  #f1ebf4;\n",
        "            color:  #000000;\n",
        "        }#T_7bbfab1e_fcee_11ea_8f64_52540026b18brow1_col15,#T_7bbfab1e_fcee_11ea_8f64_52540026b18brow4_col7,#T_7bbfab1e_fcee_11ea_8f64_52540026b18brow7_col4,#T_7bbfab1e_fcee_11ea_8f64_52540026b18brow15_col1{\n",
        "            background-color:  #c1cae2;\n",
        "            color:  #000000;\n",
        "        }#T_7bbfab1e_fcee_11ea_8f64_52540026b18brow1_col16,#T_7bbfab1e_fcee_11ea_8f64_52540026b18brow16_col1{\n",
        "            background-color:  #d7d6e9;\n",
        "            color:  #000000;\n",
        "        }#T_7bbfab1e_fcee_11ea_8f64_52540026b18brow2_col3,#T_7bbfab1e_fcee_11ea_8f64_52540026b18brow3_col2,#T_7bbfab1e_fcee_11ea_8f64_52540026b18brow8_col9,#T_7bbfab1e_fcee_11ea_8f64_52540026b18brow9_col8{\n",
        "            background-color:  #0872b1;\n",
        "            color:  #f1f1f1;\n",
        "        }#T_7bbfab1e_fcee_11ea_8f64_52540026b18brow2_col5,#T_7bbfab1e_fcee_11ea_8f64_52540026b18brow5_col2{\n",
        "            background-color:  #e3e0ee;\n",
        "            color:  #000000;\n",
        "        }#T_7bbfab1e_fcee_11ea_8f64_52540026b18brow2_col6,#T_7bbfab1e_fcee_11ea_8f64_52540026b18brow3_col16,#T_7bbfab1e_fcee_11ea_8f64_52540026b18brow4_col14,#T_7bbfab1e_fcee_11ea_8f64_52540026b18brow6_col2,#T_7bbfab1e_fcee_11ea_8f64_52540026b18brow14_col4,#T_7bbfab1e_fcee_11ea_8f64_52540026b18brow16_col3{\n",
        "            background-color:  #dad9ea;\n",
        "            color:  #000000;\n",
        "        }#T_7bbfab1e_fcee_11ea_8f64_52540026b18brow2_col8,#T_7bbfab1e_fcee_11ea_8f64_52540026b18brow8_col2{\n",
        "            background-color:  #eee8f3;\n",
        "            color:  #000000;\n",
        "        }#T_7bbfab1e_fcee_11ea_8f64_52540026b18brow2_col10,#T_7bbfab1e_fcee_11ea_8f64_52540026b18brow2_col12,#T_7bbfab1e_fcee_11ea_8f64_52540026b18brow10_col2,#T_7bbfab1e_fcee_11ea_8f64_52540026b18brow12_col2{\n",
        "            background-color:  #97b7d7;\n",
        "            color:  #000000;\n",
        "        }#T_7bbfab1e_fcee_11ea_8f64_52540026b18brow2_col13,#T_7bbfab1e_fcee_11ea_8f64_52540026b18brow13_col2{\n",
        "            background-color:  #f8f1f8;\n",
        "            color:  #000000;\n",
        "        }#T_7bbfab1e_fcee_11ea_8f64_52540026b18brow2_col14,#T_7bbfab1e_fcee_11ea_8f64_52540026b18brow14_col2{\n",
        "            background-color:  #e8e4f0;\n",
        "            color:  #000000;\n",
        "        }#T_7bbfab1e_fcee_11ea_8f64_52540026b18brow2_col16,#T_7bbfab1e_fcee_11ea_8f64_52540026b18brow16_col2{\n",
        "            background-color:  #dddbec;\n",
        "            color:  #000000;\n",
        "        }#T_7bbfab1e_fcee_11ea_8f64_52540026b18brow3_col4,#T_7bbfab1e_fcee_11ea_8f64_52540026b18brow4_col3{\n",
        "            background-color:  #abbfdc;\n",
        "            color:  #000000;\n",
        "        }#T_7bbfab1e_fcee_11ea_8f64_52540026b18brow3_col5,#T_7bbfab1e_fcee_11ea_8f64_52540026b18brow5_col3{\n",
        "            background-color:  #d5d5e8;\n",
        "            color:  #000000;\n",
        "        }#T_7bbfab1e_fcee_11ea_8f64_52540026b18brow3_col6,#T_7bbfab1e_fcee_11ea_8f64_52540026b18brow6_col3{\n",
        "            background-color:  #d2d2e7;\n",
        "            color:  #000000;\n",
        "        }#T_7bbfab1e_fcee_11ea_8f64_52540026b18brow3_col7,#T_7bbfab1e_fcee_11ea_8f64_52540026b18brow7_col3{\n",
        "            background-color:  #f4edf6;\n",
        "            color:  #000000;\n",
        "        }#T_7bbfab1e_fcee_11ea_8f64_52540026b18brow3_col8,#T_7bbfab1e_fcee_11ea_8f64_52540026b18brow8_col3{\n",
        "            background-color:  #f2ecf5;\n",
        "            color:  #000000;\n",
        "        }#T_7bbfab1e_fcee_11ea_8f64_52540026b18brow3_col10,#T_7bbfab1e_fcee_11ea_8f64_52540026b18brow10_col3{\n",
        "            background-color:  #a8bedc;\n",
        "            color:  #000000;\n",
        "        }#T_7bbfab1e_fcee_11ea_8f64_52540026b18brow3_col11,#T_7bbfab1e_fcee_11ea_8f64_52540026b18brow11_col3{\n",
        "            background-color:  #d2d3e7;\n",
        "            color:  #000000;\n",
        "        }#T_7bbfab1e_fcee_11ea_8f64_52540026b18brow3_col12,#T_7bbfab1e_fcee_11ea_8f64_52540026b18brow12_col3{\n",
        "            background-color:  #cdd0e5;\n",
        "            color:  #000000;\n",
        "        }#T_7bbfab1e_fcee_11ea_8f64_52540026b18brow3_col14,#T_7bbfab1e_fcee_11ea_8f64_52540026b18brow14_col3{\n",
        "            background-color:  #fff7fb;\n",
        "            color:  #000000;\n",
        "        }#T_7bbfab1e_fcee_11ea_8f64_52540026b18brow4_col5,#T_7bbfab1e_fcee_11ea_8f64_52540026b18brow5_col4,#T_7bbfab1e_fcee_11ea_8f64_52540026b18brow5_col15,#T_7bbfab1e_fcee_11ea_8f64_52540026b18brow15_col5{\n",
        "            background-color:  #8cb3d5;\n",
        "            color:  #000000;\n",
        "        }#T_7bbfab1e_fcee_11ea_8f64_52540026b18brow4_col6,#T_7bbfab1e_fcee_11ea_8f64_52540026b18brow6_col4{\n",
        "            background-color:  #b1c2de;\n",
        "            color:  #000000;\n",
        "        }#T_7bbfab1e_fcee_11ea_8f64_52540026b18brow4_col9,#T_7bbfab1e_fcee_11ea_8f64_52540026b18brow9_col4{\n",
        "            background-color:  #afc1dd;\n",
        "            color:  #000000;\n",
        "        }#T_7bbfab1e_fcee_11ea_8f64_52540026b18brow4_col10,#T_7bbfab1e_fcee_11ea_8f64_52540026b18brow10_col4{\n",
        "            background-color:  #b4c4df;\n",
        "            color:  #000000;\n",
        "        }#T_7bbfab1e_fcee_11ea_8f64_52540026b18brow4_col11,#T_7bbfab1e_fcee_11ea_8f64_52540026b18brow4_col12,#T_7bbfab1e_fcee_11ea_8f64_52540026b18brow11_col4,#T_7bbfab1e_fcee_11ea_8f64_52540026b18brow12_col4{\n",
        "            background-color:  #c4cbe3;\n",
        "            color:  #000000;\n",
        "        }#T_7bbfab1e_fcee_11ea_8f64_52540026b18brow4_col13,#T_7bbfab1e_fcee_11ea_8f64_52540026b18brow4_col15,#T_7bbfab1e_fcee_11ea_8f64_52540026b18brow13_col4,#T_7bbfab1e_fcee_11ea_8f64_52540026b18brow15_col4{\n",
        "            background-color:  #acc0dd;\n",
        "            color:  #000000;\n",
        "        }#T_7bbfab1e_fcee_11ea_8f64_52540026b18brow4_col16,#T_7bbfab1e_fcee_11ea_8f64_52540026b18brow16_col4{\n",
        "            background-color:  #a7bddb;\n",
        "            color:  #000000;\n",
        "        }#T_7bbfab1e_fcee_11ea_8f64_52540026b18brow5_col6,#T_7bbfab1e_fcee_11ea_8f64_52540026b18brow6_col5,#T_7bbfab1e_fcee_11ea_8f64_52540026b18brow9_col11,#T_7bbfab1e_fcee_11ea_8f64_52540026b18brow11_col9{\n",
        "            background-color:  #0567a1;\n",
        "            color:  #f1f1f1;\n",
        "        }#T_7bbfab1e_fcee_11ea_8f64_52540026b18brow5_col7,#T_7bbfab1e_fcee_11ea_8f64_52540026b18brow7_col5{\n",
        "            background-color:  #056fae;\n",
        "            color:  #f1f1f1;\n",
        "        }#T_7bbfab1e_fcee_11ea_8f64_52540026b18brow5_col8,#T_7bbfab1e_fcee_11ea_8f64_52540026b18brow6_col10,#T_7bbfab1e_fcee_11ea_8f64_52540026b18brow8_col5,#T_7bbfab1e_fcee_11ea_8f64_52540026b18brow10_col6{\n",
        "            background-color:  #056faf;\n",
        "            color:  #f1f1f1;\n",
        "        }#T_7bbfab1e_fcee_11ea_8f64_52540026b18brow5_col9,#T_7bbfab1e_fcee_11ea_8f64_52540026b18brow9_col5{\n",
        "            background-color:  #1e80b8;\n",
        "            color:  #000000;\n",
        "        }#T_7bbfab1e_fcee_11ea_8f64_52540026b18brow5_col10,#T_7bbfab1e_fcee_11ea_8f64_52540026b18brow10_col5{\n",
        "            background-color:  #0f76b3;\n",
        "            color:  #f1f1f1;\n",
        "        }#T_7bbfab1e_fcee_11ea_8f64_52540026b18brow5_col11,#T_7bbfab1e_fcee_11ea_8f64_52540026b18brow11_col5,#T_7bbfab1e_fcee_11ea_8f64_52540026b18brow13_col14,#T_7bbfab1e_fcee_11ea_8f64_52540026b18brow14_col13{\n",
        "            background-color:  #157ab5;\n",
        "            color:  #000000;\n",
        "        }#T_7bbfab1e_fcee_11ea_8f64_52540026b18brow5_col12,#T_7bbfab1e_fcee_11ea_8f64_52540026b18brow12_col5{\n",
        "            background-color:  #308cbe;\n",
        "            color:  #000000;\n",
        "        }#T_7bbfab1e_fcee_11ea_8f64_52540026b18brow5_col13,#T_7bbfab1e_fcee_11ea_8f64_52540026b18brow13_col5{\n",
        "            background-color:  #0771b1;\n",
        "            color:  #f1f1f1;\n",
        "        }#T_7bbfab1e_fcee_11ea_8f64_52540026b18brow5_col14,#T_7bbfab1e_fcee_11ea_8f64_52540026b18brow14_col5{\n",
        "            background-color:  #6ba5cd;\n",
        "            color:  #000000;\n",
        "        }#T_7bbfab1e_fcee_11ea_8f64_52540026b18brow5_col16,#T_7bbfab1e_fcee_11ea_8f64_52540026b18brow16_col5{\n",
        "            background-color:  #045a8d;\n",
        "            color:  #f1f1f1;\n",
        "        }#T_7bbfab1e_fcee_11ea_8f64_52540026b18brow6_col7,#T_7bbfab1e_fcee_11ea_8f64_52540026b18brow7_col6{\n",
        "            background-color:  #056ba9;\n",
        "            color:  #f1f1f1;\n",
        "        }#T_7bbfab1e_fcee_11ea_8f64_52540026b18brow6_col8,#T_7bbfab1e_fcee_11ea_8f64_52540026b18brow8_col6{\n",
        "            background-color:  #046198;\n",
        "            color:  #f1f1f1;\n",
        "        }#T_7bbfab1e_fcee_11ea_8f64_52540026b18brow6_col9,#T_7bbfab1e_fcee_11ea_8f64_52540026b18brow7_col11,#T_7bbfab1e_fcee_11ea_8f64_52540026b18brow9_col6,#T_7bbfab1e_fcee_11ea_8f64_52540026b18brow11_col7{\n",
        "            background-color:  #2685bb;\n",
        "            color:  #000000;\n",
        "        }#T_7bbfab1e_fcee_11ea_8f64_52540026b18brow6_col11,#T_7bbfab1e_fcee_11ea_8f64_52540026b18brow11_col6{\n",
        "            background-color:  #0c74b2;\n",
        "            color:  #f1f1f1;\n",
        "        }#T_7bbfab1e_fcee_11ea_8f64_52540026b18brow6_col12,#T_7bbfab1e_fcee_11ea_8f64_52540026b18brow12_col6{\n",
        "            background-color:  #2d8abd;\n",
        "            color:  #000000;\n",
        "        }#T_7bbfab1e_fcee_11ea_8f64_52540026b18brow6_col13,#T_7bbfab1e_fcee_11ea_8f64_52540026b18brow13_col6{\n",
        "            background-color:  #05659f;\n",
        "            color:  #f1f1f1;\n",
        "        }#T_7bbfab1e_fcee_11ea_8f64_52540026b18brow6_col14,#T_7bbfab1e_fcee_11ea_8f64_52540026b18brow14_col6{\n",
        "            background-color:  #509ac6;\n",
        "            color:  #000000;\n",
        "        }#T_7bbfab1e_fcee_11ea_8f64_52540026b18brow6_col15,#T_7bbfab1e_fcee_11ea_8f64_52540026b18brow11_col15,#T_7bbfab1e_fcee_11ea_8f64_52540026b18brow15_col6,#T_7bbfab1e_fcee_11ea_8f64_52540026b18brow15_col11{\n",
        "            background-color:  #79abd0;\n",
        "            color:  #000000;\n",
        "        }#T_7bbfab1e_fcee_11ea_8f64_52540026b18brow6_col16,#T_7bbfab1e_fcee_11ea_8f64_52540026b18brow16_col6{\n",
        "            background-color:  #045382;\n",
        "            color:  #f1f1f1;\n",
        "        }#T_7bbfab1e_fcee_11ea_8f64_52540026b18brow7_col8,#T_7bbfab1e_fcee_11ea_8f64_52540026b18brow8_col7,#T_7bbfab1e_fcee_11ea_8f64_52540026b18brow10_col16,#T_7bbfab1e_fcee_11ea_8f64_52540026b18brow16_col10{\n",
        "            background-color:  #045e94;\n",
        "            color:  #f1f1f1;\n",
        "        }#T_7bbfab1e_fcee_11ea_8f64_52540026b18brow7_col9,#T_7bbfab1e_fcee_11ea_8f64_52540026b18brow9_col7,#T_7bbfab1e_fcee_11ea_8f64_52540026b18brow14_col16,#T_7bbfab1e_fcee_11ea_8f64_52540026b18brow16_col14{\n",
        "            background-color:  #4e9ac6;\n",
        "            color:  #000000;\n",
        "        }#T_7bbfab1e_fcee_11ea_8f64_52540026b18brow7_col10,#T_7bbfab1e_fcee_11ea_8f64_52540026b18brow10_col7{\n",
        "            background-color:  #358fc0;\n",
        "            color:  #000000;\n",
        "        }#T_7bbfab1e_fcee_11ea_8f64_52540026b18brow7_col12,#T_7bbfab1e_fcee_11ea_8f64_52540026b18brow12_col7,#T_7bbfab1e_fcee_11ea_8f64_52540026b18brow13_col15,#T_7bbfab1e_fcee_11ea_8f64_52540026b18brow15_col13{\n",
        "            background-color:  #2081b9;\n",
        "            color:  #000000;\n",
        "        }#T_7bbfab1e_fcee_11ea_8f64_52540026b18brow7_col13,#T_7bbfab1e_fcee_11ea_8f64_52540026b18brow13_col7{\n",
        "            background-color:  #034e7b;\n",
        "            color:  #f1f1f1;\n",
        "        }#T_7bbfab1e_fcee_11ea_8f64_52540026b18brow7_col14,#T_7bbfab1e_fcee_11ea_8f64_52540026b18brow7_col15,#T_7bbfab1e_fcee_11ea_8f64_52540026b18brow10_col12,#T_7bbfab1e_fcee_11ea_8f64_52540026b18brow12_col10,#T_7bbfab1e_fcee_11ea_8f64_52540026b18brow14_col7,#T_7bbfab1e_fcee_11ea_8f64_52540026b18brow15_col7{\n",
        "            background-color:  #167bb6;\n",
        "            color:  #000000;\n",
        "        }#T_7bbfab1e_fcee_11ea_8f64_52540026b18brow7_col16,#T_7bbfab1e_fcee_11ea_8f64_52540026b18brow16_col7{\n",
        "            background-color:  #045e93;\n",
        "            color:  #f1f1f1;\n",
        "        }#T_7bbfab1e_fcee_11ea_8f64_52540026b18brow8_col11,#T_7bbfab1e_fcee_11ea_8f64_52540026b18brow11_col8{\n",
        "            background-color:  #056aa6;\n",
        "            color:  #f1f1f1;\n",
        "        }#T_7bbfab1e_fcee_11ea_8f64_52540026b18brow8_col12,#T_7bbfab1e_fcee_11ea_8f64_52540026b18brow12_col8{\n",
        "            background-color:  #0d75b3;\n",
        "            color:  #f1f1f1;\n",
        "        }#T_7bbfab1e_fcee_11ea_8f64_52540026b18brow8_col13,#T_7bbfab1e_fcee_11ea_8f64_52540026b18brow13_col8{\n",
        "            background-color:  #045d92;\n",
        "            color:  #f1f1f1;\n",
        "        }#T_7bbfab1e_fcee_11ea_8f64_52540026b18brow8_col14,#T_7bbfab1e_fcee_11ea_8f64_52540026b18brow14_col8{\n",
        "            background-color:  #197db7;\n",
        "            color:  #000000;\n",
        "        }#T_7bbfab1e_fcee_11ea_8f64_52540026b18brow8_col15,#T_7bbfab1e_fcee_11ea_8f64_52540026b18brow11_col14,#T_7bbfab1e_fcee_11ea_8f64_52540026b18brow14_col11,#T_7bbfab1e_fcee_11ea_8f64_52540026b18brow15_col8{\n",
        "            background-color:  #5a9ec9;\n",
        "            color:  #000000;\n",
        "        }#T_7bbfab1e_fcee_11ea_8f64_52540026b18brow8_col16,#T_7bbfab1e_fcee_11ea_8f64_52540026b18brow16_col8{\n",
        "            background-color:  #045280;\n",
        "            color:  #f1f1f1;\n",
        "        }#T_7bbfab1e_fcee_11ea_8f64_52540026b18brow9_col10,#T_7bbfab1e_fcee_11ea_8f64_52540026b18brow10_col9{\n",
        "            background-color:  #056ead;\n",
        "            color:  #f1f1f1;\n",
        "        }#T_7bbfab1e_fcee_11ea_8f64_52540026b18brow9_col12,#T_7bbfab1e_fcee_11ea_8f64_52540026b18brow12_col9{\n",
        "            background-color:  #2987bc;\n",
        "            color:  #000000;\n",
        "        }#T_7bbfab1e_fcee_11ea_8f64_52540026b18brow9_col13,#T_7bbfab1e_fcee_11ea_8f64_52540026b18brow13_col9,#T_7bbfab1e_fcee_11ea_8f64_52540026b18brow14_col15,#T_7bbfab1e_fcee_11ea_8f64_52540026b18brow15_col14{\n",
        "            background-color:  #4094c3;\n",
        "            color:  #000000;\n",
        "        }#T_7bbfab1e_fcee_11ea_8f64_52540026b18brow9_col14,#T_7bbfab1e_fcee_11ea_8f64_52540026b18brow10_col15,#T_7bbfab1e_fcee_11ea_8f64_52540026b18brow14_col9,#T_7bbfab1e_fcee_11ea_8f64_52540026b18brow15_col10{\n",
        "            background-color:  #67a4cc;\n",
        "            color:  #000000;\n",
        "        }#T_7bbfab1e_fcee_11ea_8f64_52540026b18brow9_col15,#T_7bbfab1e_fcee_11ea_8f64_52540026b18brow15_col9{\n",
        "            background-color:  #a2bcda;\n",
        "            color:  #000000;\n",
        "        }#T_7bbfab1e_fcee_11ea_8f64_52540026b18brow9_col16,#T_7bbfab1e_fcee_11ea_8f64_52540026b18brow16_col9{\n",
        "            background-color:  #0566a0;\n",
        "            color:  #f1f1f1;\n",
        "        }#T_7bbfab1e_fcee_11ea_8f64_52540026b18brow10_col11,#T_7bbfab1e_fcee_11ea_8f64_52540026b18brow11_col10{\n",
        "            background-color:  #045b8e;\n",
        "            color:  #f1f1f1;\n",
        "        }#T_7bbfab1e_fcee_11ea_8f64_52540026b18brow10_col13,#T_7bbfab1e_fcee_11ea_8f64_52540026b18brow13_col10{\n",
        "            background-color:  #4496c3;\n",
        "            color:  #000000;\n",
        "        }#T_7bbfab1e_fcee_11ea_8f64_52540026b18brow10_col14,#T_7bbfab1e_fcee_11ea_8f64_52540026b18brow14_col10{\n",
        "            background-color:  #73a9cf;\n",
        "            color:  #000000;\n",
        "        }#T_7bbfab1e_fcee_11ea_8f64_52540026b18brow11_col12,#T_7bbfab1e_fcee_11ea_8f64_52540026b18brow12_col11{\n",
        "            background-color:  #2182b9;\n",
        "            color:  #000000;\n",
        "        }#T_7bbfab1e_fcee_11ea_8f64_52540026b18brow11_col13,#T_7bbfab1e_fcee_11ea_8f64_52540026b18brow13_col11{\n",
        "            background-color:  #348ebf;\n",
        "            color:  #000000;\n",
        "        }#T_7bbfab1e_fcee_11ea_8f64_52540026b18brow11_col16,#T_7bbfab1e_fcee_11ea_8f64_52540026b18brow16_col11{\n",
        "            background-color:  #046097;\n",
        "            color:  #f1f1f1;\n",
        "        }#T_7bbfab1e_fcee_11ea_8f64_52540026b18brow12_col13,#T_7bbfab1e_fcee_11ea_8f64_52540026b18brow13_col12{\n",
        "            background-color:  #2a88bc;\n",
        "            color:  #000000;\n",
        "        }#T_7bbfab1e_fcee_11ea_8f64_52540026b18brow12_col14,#T_7bbfab1e_fcee_11ea_8f64_52540026b18brow14_col12{\n",
        "            background-color:  #3b92c1;\n",
        "            color:  #000000;\n",
        "        }#T_7bbfab1e_fcee_11ea_8f64_52540026b18brow12_col15,#T_7bbfab1e_fcee_11ea_8f64_52540026b18brow15_col12{\n",
        "            background-color:  #328dbf;\n",
        "            color:  #000000;\n",
        "        }#T_7bbfab1e_fcee_11ea_8f64_52540026b18brow12_col16,#T_7bbfab1e_fcee_11ea_8f64_52540026b18brow16_col12{\n",
        "            background-color:  #0569a5;\n",
        "            color:  #f1f1f1;\n",
        "        }#T_7bbfab1e_fcee_11ea_8f64_52540026b18brow13_col16,#T_7bbfab1e_fcee_11ea_8f64_52540026b18brow16_col13{\n",
        "            background-color:  #045c90;\n",
        "            color:  #f1f1f1;\n",
        "        }#T_7bbfab1e_fcee_11ea_8f64_52540026b18brow15_col16,#T_7bbfab1e_fcee_11ea_8f64_52540026b18brow16_col15{\n",
        "            background-color:  #4897c4;\n",
        "            color:  #000000;\n",
        "        }</style><table id=\"T_7bbfab1e_fcee_11ea_8f64_52540026b18b\" ><thead>    <tr>        <th class=\"blank level0\" ></th>        <th class=\"col_heading level0 col0\" >Rt</th>        <th class=\"col_heading level0 col1\" >theta</th>        <th class=\"col_heading level0 col2\" >kappa</th>        <th class=\"col_heading level0 col3\" >rho</th>        <th class=\"col_heading level0 col4\" >sigma</th>        <th class=\"col_heading level0 col5\" >School_closing</th>        <th class=\"col_heading level0 col6\" >Workplace_closing</th>        <th class=\"col_heading level0 col7\" >Cancel_events</th>        <th class=\"col_heading level0 col8\" >Gatherings_restrictions</th>        <th class=\"col_heading level0 col9\" >Transport_closing</th>        <th class=\"col_heading level0 col10\" >Stay_home_restrictions</th>        <th class=\"col_heading level0 col11\" >Internal_movement_restrictions</th>        <th class=\"col_heading level0 col12\" >International_movement_restrictions</th>        <th class=\"col_heading level0 col13\" >Information_campaigns</th>        <th class=\"col_heading level0 col14\" >Testing_policy</th>        <th class=\"col_heading level0 col15\" >Contact_tracing</th>        <th class=\"col_heading level0 col16\" >Stringency_index</th>    </tr></thead><tbody>\n",
        "                <tr>\n",
        "                        <th id=\"T_7bbfab1e_fcee_11ea_8f64_52540026b18blevel0_row0\" class=\"row_heading level0 row0\" >Rt</th>\n",
        "                        <td id=\"T_7bbfab1e_fcee_11ea_8f64_52540026b18brow0_col0\" class=\"data row0 col0\" >1.000000</td>\n",
        "                        <td id=\"T_7bbfab1e_fcee_11ea_8f64_52540026b18brow0_col1\" class=\"data row0 col1\" >-0.191733</td>\n",
        "                        <td id=\"T_7bbfab1e_fcee_11ea_8f64_52540026b18brow0_col2\" class=\"data row0 col2\" >-0.179172</td>\n",
        "                        <td id=\"T_7bbfab1e_fcee_11ea_8f64_52540026b18brow0_col3\" class=\"data row0 col3\" >0.374641</td>\n",
        "                        <td id=\"T_7bbfab1e_fcee_11ea_8f64_52540026b18brow0_col4\" class=\"data row0 col4\" >-0.177276</td>\n",
        "                        <td id=\"T_7bbfab1e_fcee_11ea_8f64_52540026b18brow0_col5\" class=\"data row0 col5\" >-0.068607</td>\n",
        "                        <td id=\"T_7bbfab1e_fcee_11ea_8f64_52540026b18brow0_col6\" class=\"data row0 col6\" >-0.034911</td>\n",
        "                        <td id=\"T_7bbfab1e_fcee_11ea_8f64_52540026b18brow0_col7\" class=\"data row0 col7\" >-0.066901</td>\n",
        "                        <td id=\"T_7bbfab1e_fcee_11ea_8f64_52540026b18brow0_col8\" class=\"data row0 col8\" >-0.096971</td>\n",
        "                        <td id=\"T_7bbfab1e_fcee_11ea_8f64_52540026b18brow0_col9\" class=\"data row0 col9\" >-0.142573</td>\n",
        "                        <td id=\"T_7bbfab1e_fcee_11ea_8f64_52540026b18brow0_col10\" class=\"data row0 col10\" >-0.173022</td>\n",
        "                        <td id=\"T_7bbfab1e_fcee_11ea_8f64_52540026b18brow0_col11\" class=\"data row0 col11\" >-0.165815</td>\n",
        "                        <td id=\"T_7bbfab1e_fcee_11ea_8f64_52540026b18brow0_col12\" class=\"data row0 col12\" >-0.192684</td>\n",
        "                        <td id=\"T_7bbfab1e_fcee_11ea_8f64_52540026b18brow0_col13\" class=\"data row0 col13\" >-0.027923</td>\n",
        "                        <td id=\"T_7bbfab1e_fcee_11ea_8f64_52540026b18brow0_col14\" class=\"data row0 col14\" >-0.171485</td>\n",
        "                        <td id=\"T_7bbfab1e_fcee_11ea_8f64_52540026b18brow0_col15\" class=\"data row0 col15\" >-0.207415</td>\n",
        "                        <td id=\"T_7bbfab1e_fcee_11ea_8f64_52540026b18brow0_col16\" class=\"data row0 col16\" >-0.106717</td>\n",
        "            </tr>\n",
        "            <tr>\n",
        "                        <th id=\"T_7bbfab1e_fcee_11ea_8f64_52540026b18blevel0_row1\" class=\"row_heading level0 row1\" >theta</th>\n",
        "                        <td id=\"T_7bbfab1e_fcee_11ea_8f64_52540026b18brow1_col0\" class=\"data row1 col0\" >-0.191733</td>\n",
        "                        <td id=\"T_7bbfab1e_fcee_11ea_8f64_52540026b18brow1_col1\" class=\"data row1 col1\" >1.000000</td>\n",
        "                        <td id=\"T_7bbfab1e_fcee_11ea_8f64_52540026b18brow1_col2\" class=\"data row1 col2\" >0.973209</td>\n",
        "                        <td id=\"T_7bbfab1e_fcee_11ea_8f64_52540026b18brow1_col3\" class=\"data row1 col3\" >0.625303</td>\n",
        "                        <td id=\"T_7bbfab1e_fcee_11ea_8f64_52540026b18brow1_col4\" class=\"data row1 col4\" >-0.034845</td>\n",
        "                        <td id=\"T_7bbfab1e_fcee_11ea_8f64_52540026b18brow1_col5\" class=\"data row1 col5\" >-0.153917</td>\n",
        "                        <td id=\"T_7bbfab1e_fcee_11ea_8f64_52540026b18brow1_col6\" class=\"data row1 col6\" >-0.086620</td>\n",
        "                        <td id=\"T_7bbfab1e_fcee_11ea_8f64_52540026b18brow1_col7\" class=\"data row1 col7\" >-0.274197</td>\n",
        "                        <td id=\"T_7bbfab1e_fcee_11ea_8f64_52540026b18brow1_col8\" class=\"data row1 col8\" >-0.273021</td>\n",
        "                        <td id=\"T_7bbfab1e_fcee_11ea_8f64_52540026b18brow1_col9\" class=\"data row1 col9\" >-0.209415</td>\n",
        "                        <td id=\"T_7bbfab1e_fcee_11ea_8f64_52540026b18brow1_col10\" class=\"data row1 col10\" >0.174300</td>\n",
        "                        <td id=\"T_7bbfab1e_fcee_11ea_8f64_52540026b18brow1_col11\" class=\"data row1 col11\" >-0.002353</td>\n",
        "                        <td id=\"T_7bbfab1e_fcee_11ea_8f64_52540026b18brow1_col12\" class=\"data row1 col12\" >0.140861</td>\n",
        "                        <td id=\"T_7bbfab1e_fcee_11ea_8f64_52540026b18brow1_col13\" class=\"data row1 col13\" >-0.341054</td>\n",
        "                        <td id=\"T_7bbfab1e_fcee_11ea_8f64_52540026b18brow1_col14\" class=\"data row1 col14\" >-0.290306</td>\n",
        "                        <td id=\"T_7bbfab1e_fcee_11ea_8f64_52540026b18brow1_col15\" class=\"data row1 col15\" >-0.002745</td>\n",
        "                        <td id=\"T_7bbfab1e_fcee_11ea_8f64_52540026b18brow1_col16\" class=\"data row1 col16\" >-0.111658</td>\n",
        "            </tr>\n",
        "            <tr>\n",
        "                        <th id=\"T_7bbfab1e_fcee_11ea_8f64_52540026b18blevel0_row2\" class=\"row_heading level0 row2\" >kappa</th>\n",
        "                        <td id=\"T_7bbfab1e_fcee_11ea_8f64_52540026b18brow2_col0\" class=\"data row2 col0\" >-0.179172</td>\n",
        "                        <td id=\"T_7bbfab1e_fcee_11ea_8f64_52540026b18brow2_col1\" class=\"data row2 col1\" >0.973209</td>\n",
        "                        <td id=\"T_7bbfab1e_fcee_11ea_8f64_52540026b18brow2_col2\" class=\"data row2 col2\" >1.000000</td>\n",
        "                        <td id=\"T_7bbfab1e_fcee_11ea_8f64_52540026b18brow2_col3\" class=\"data row2 col3\" >0.628832</td>\n",
        "                        <td id=\"T_7bbfab1e_fcee_11ea_8f64_52540026b18brow2_col4\" class=\"data row2 col4\" >-0.087998</td>\n",
        "                        <td id=\"T_7bbfab1e_fcee_11ea_8f64_52540026b18brow2_col5\" class=\"data row2 col5\" >-0.190220</td>\n",
        "                        <td id=\"T_7bbfab1e_fcee_11ea_8f64_52540026b18brow2_col6\" class=\"data row2 col6\" >-0.131006</td>\n",
        "                        <td id=\"T_7bbfab1e_fcee_11ea_8f64_52540026b18brow2_col7\" class=\"data row2 col7\" >-0.291646</td>\n",
        "                        <td id=\"T_7bbfab1e_fcee_11ea_8f64_52540026b18brow2_col8\" class=\"data row2 col8\" >-0.261066</td>\n",
        "                        <td id=\"T_7bbfab1e_fcee_11ea_8f64_52540026b18brow2_col9\" class=\"data row2 col9\" >-0.194653</td>\n",
        "                        <td id=\"T_7bbfab1e_fcee_11ea_8f64_52540026b18brow2_col10\" class=\"data row2 col10\" >0.159682</td>\n",
        "                        <td id=\"T_7bbfab1e_fcee_11ea_8f64_52540026b18brow2_col11\" class=\"data row2 col11\" >0.001729</td>\n",
        "                        <td id=\"T_7bbfab1e_fcee_11ea_8f64_52540026b18brow2_col12\" class=\"data row2 col12\" >0.163823</td>\n",
        "                        <td id=\"T_7bbfab1e_fcee_11ea_8f64_52540026b18brow2_col13\" class=\"data row2 col13\" >-0.357539</td>\n",
        "                        <td id=\"T_7bbfab1e_fcee_11ea_8f64_52540026b18brow2_col14\" class=\"data row2 col14\" >-0.222306</td>\n",
        "                        <td id=\"T_7bbfab1e_fcee_11ea_8f64_52540026b18brow2_col15\" class=\"data row2 col15\" >-0.001250</td>\n",
        "                        <td id=\"T_7bbfab1e_fcee_11ea_8f64_52540026b18brow2_col16\" class=\"data row2 col16\" >-0.147386</td>\n",
        "            </tr>\n",
        "            <tr>\n",
        "                        <th id=\"T_7bbfab1e_fcee_11ea_8f64_52540026b18blevel0_row3\" class=\"row_heading level0 row3\" >rho</th>\n",
        "                        <td id=\"T_7bbfab1e_fcee_11ea_8f64_52540026b18brow3_col0\" class=\"data row3 col0\" >0.374641</td>\n",
        "                        <td id=\"T_7bbfab1e_fcee_11ea_8f64_52540026b18brow3_col1\" class=\"data row3 col1\" >0.625303</td>\n",
        "                        <td id=\"T_7bbfab1e_fcee_11ea_8f64_52540026b18brow3_col2\" class=\"data row3 col2\" >0.628832</td>\n",
        "                        <td id=\"T_7bbfab1e_fcee_11ea_8f64_52540026b18brow3_col3\" class=\"data row3 col3\" >1.000000</td>\n",
        "                        <td id=\"T_7bbfab1e_fcee_11ea_8f64_52540026b18brow3_col4\" class=\"data row3 col4\" >0.089059</td>\n",
        "                        <td id=\"T_7bbfab1e_fcee_11ea_8f64_52540026b18brow3_col5\" class=\"data row3 col5\" >-0.098352</td>\n",
        "                        <td id=\"T_7bbfab1e_fcee_11ea_8f64_52540026b18brow3_col6\" class=\"data row3 col6\" >-0.075438</td>\n",
        "                        <td id=\"T_7bbfab1e_fcee_11ea_8f64_52540026b18brow3_col7\" class=\"data row3 col7\" >-0.319058</td>\n",
        "                        <td id=\"T_7bbfab1e_fcee_11ea_8f64_52540026b18brow3_col8\" class=\"data row3 col8\" >-0.300604</td>\n",
        "                        <td id=\"T_7bbfab1e_fcee_11ea_8f64_52540026b18brow3_col9\" class=\"data row3 col9\" >-0.206019</td>\n",
        "                        <td id=\"T_7bbfab1e_fcee_11ea_8f64_52540026b18brow3_col10\" class=\"data row3 col10\" >0.100152</td>\n",
        "                        <td id=\"T_7bbfab1e_fcee_11ea_8f64_52540026b18brow3_col11\" class=\"data row3 col11\" >-0.081758</td>\n",
        "                        <td id=\"T_7bbfab1e_fcee_11ea_8f64_52540026b18brow3_col12\" class=\"data row3 col12\" >-0.054427</td>\n",
        "                        <td id=\"T_7bbfab1e_fcee_11ea_8f64_52540026b18brow3_col13\" class=\"data row3 col13\" >-0.336674</td>\n",
        "                        <td id=\"T_7bbfab1e_fcee_11ea_8f64_52540026b18brow3_col14\" class=\"data row3 col14\" >-0.425615</td>\n",
        "                        <td id=\"T_7bbfab1e_fcee_11ea_8f64_52540026b18brow3_col15\" class=\"data row3 col15\" >-0.216202</td>\n",
        "                        <td id=\"T_7bbfab1e_fcee_11ea_8f64_52540026b18brow3_col16\" class=\"data row3 col16\" >-0.132025</td>\n",
        "            </tr>\n",
        "            <tr>\n",
        "                        <th id=\"T_7bbfab1e_fcee_11ea_8f64_52540026b18blevel0_row4\" class=\"row_heading level0 row4\" >sigma</th>\n",
        "                        <td id=\"T_7bbfab1e_fcee_11ea_8f64_52540026b18brow4_col0\" class=\"data row4 col0\" >-0.177276</td>\n",
        "                        <td id=\"T_7bbfab1e_fcee_11ea_8f64_52540026b18brow4_col1\" class=\"data row4 col1\" >-0.034845</td>\n",
        "                        <td id=\"T_7bbfab1e_fcee_11ea_8f64_52540026b18brow4_col2\" class=\"data row4 col2\" >-0.087998</td>\n",
        "                        <td id=\"T_7bbfab1e_fcee_11ea_8f64_52540026b18brow4_col3\" class=\"data row4 col3\" >0.089059</td>\n",
        "                        <td id=\"T_7bbfab1e_fcee_11ea_8f64_52540026b18brow4_col4\" class=\"data row4 col4\" >1.000000</td>\n",
        "                        <td id=\"T_7bbfab1e_fcee_11ea_8f64_52540026b18brow4_col5\" class=\"data row4 col5\" >0.201935</td>\n",
        "                        <td id=\"T_7bbfab1e_fcee_11ea_8f64_52540026b18brow4_col6\" class=\"data row4 col6\" >0.059384</td>\n",
        "                        <td id=\"T_7bbfab1e_fcee_11ea_8f64_52540026b18brow4_col7\" class=\"data row4 col7\" >-0.006292</td>\n",
        "                        <td id=\"T_7bbfab1e_fcee_11ea_8f64_52540026b18brow4_col8\" class=\"data row4 col8\" >-0.094881</td>\n",
        "                        <td id=\"T_7bbfab1e_fcee_11ea_8f64_52540026b18brow4_col9\" class=\"data row4 col9\" >0.071303</td>\n",
        "                        <td id=\"T_7bbfab1e_fcee_11ea_8f64_52540026b18brow4_col10\" class=\"data row4 col10\" >0.048487</td>\n",
        "                        <td id=\"T_7bbfab1e_fcee_11ea_8f64_52540026b18brow4_col11\" class=\"data row4 col11\" >-0.014708</td>\n",
        "                        <td id=\"T_7bbfab1e_fcee_11ea_8f64_52540026b18brow4_col12\" class=\"data row4 col12\" >-0.016170</td>\n",
        "                        <td id=\"T_7bbfab1e_fcee_11ea_8f64_52540026b18brow4_col13\" class=\"data row4 col13\" >0.083164</td>\n",
        "                        <td id=\"T_7bbfab1e_fcee_11ea_8f64_52540026b18brow4_col14\" class=\"data row4 col14\" >-0.132158</td>\n",
        "                        <td id=\"T_7bbfab1e_fcee_11ea_8f64_52540026b18brow4_col15\" class=\"data row4 col15\" >0.082701</td>\n",
        "                        <td id=\"T_7bbfab1e_fcee_11ea_8f64_52540026b18brow4_col16\" class=\"data row4 col16\" >0.108363</td>\n",
        "            </tr>\n",
        "            <tr>\n",
        "                        <th id=\"T_7bbfab1e_fcee_11ea_8f64_52540026b18blevel0_row5\" class=\"row_heading level0 row5\" >School_closing</th>\n",
        "                        <td id=\"T_7bbfab1e_fcee_11ea_8f64_52540026b18brow5_col0\" class=\"data row5 col0\" >-0.068607</td>\n",
        "                        <td id=\"T_7bbfab1e_fcee_11ea_8f64_52540026b18brow5_col1\" class=\"data row5 col1\" >-0.153917</td>\n",
        "                        <td id=\"T_7bbfab1e_fcee_11ea_8f64_52540026b18brow5_col2\" class=\"data row5 col2\" >-0.190220</td>\n",
        "                        <td id=\"T_7bbfab1e_fcee_11ea_8f64_52540026b18brow5_col3\" class=\"data row5 col3\" >-0.098352</td>\n",
        "                        <td id=\"T_7bbfab1e_fcee_11ea_8f64_52540026b18brow5_col4\" class=\"data row5 col4\" >0.201935</td>\n",
        "                        <td id=\"T_7bbfab1e_fcee_11ea_8f64_52540026b18brow5_col5\" class=\"data row5 col5\" >1.000000</td>\n",
        "                        <td id=\"T_7bbfab1e_fcee_11ea_8f64_52540026b18brow5_col6\" class=\"data row5 col6\" >0.719085</td>\n",
        "                        <td id=\"T_7bbfab1e_fcee_11ea_8f64_52540026b18brow5_col7\" class=\"data row5 col7\" >0.652620</td>\n",
        "                        <td id=\"T_7bbfab1e_fcee_11ea_8f64_52540026b18brow5_col8\" class=\"data row5 col8\" >0.644407</td>\n",
        "                        <td id=\"T_7bbfab1e_fcee_11ea_8f64_52540026b18brow5_col9\" class=\"data row5 col9\" >0.554318</td>\n",
        "                        <td id=\"T_7bbfab1e_fcee_11ea_8f64_52540026b18brow5_col10\" class=\"data row5 col10\" >0.605368</td>\n",
        "                        <td id=\"T_7bbfab1e_fcee_11ea_8f64_52540026b18brow5_col11\" class=\"data row5 col11\" >0.585515</td>\n",
        "                        <td id=\"T_7bbfab1e_fcee_11ea_8f64_52540026b18brow5_col12\" class=\"data row5 col12\" >0.483896</td>\n",
        "                        <td id=\"T_7bbfab1e_fcee_11ea_8f64_52540026b18brow5_col13\" class=\"data row5 col13\" >0.635044</td>\n",
        "                        <td id=\"T_7bbfab1e_fcee_11ea_8f64_52540026b18brow5_col14\" class=\"data row5 col14\" >0.312886</td>\n",
        "                        <td id=\"T_7bbfab1e_fcee_11ea_8f64_52540026b18brow5_col15\" class=\"data row5 col15\" >0.202597</td>\n",
        "                        <td id=\"T_7bbfab1e_fcee_11ea_8f64_52540026b18brow5_col16\" class=\"data row5 col16\" >0.821529</td>\n",
        "            </tr>\n",
        "            <tr>\n",
        "                        <th id=\"T_7bbfab1e_fcee_11ea_8f64_52540026b18blevel0_row6\" class=\"row_heading level0 row6\" >Workplace_closing</th>\n",
        "                        <td id=\"T_7bbfab1e_fcee_11ea_8f64_52540026b18brow6_col0\" class=\"data row6 col0\" >-0.034911</td>\n",
        "                        <td id=\"T_7bbfab1e_fcee_11ea_8f64_52540026b18brow6_col1\" class=\"data row6 col1\" >-0.086620</td>\n",
        "                        <td id=\"T_7bbfab1e_fcee_11ea_8f64_52540026b18brow6_col2\" class=\"data row6 col2\" >-0.131006</td>\n",
        "                        <td id=\"T_7bbfab1e_fcee_11ea_8f64_52540026b18brow6_col3\" class=\"data row6 col3\" >-0.075438</td>\n",
        "                        <td id=\"T_7bbfab1e_fcee_11ea_8f64_52540026b18brow6_col4\" class=\"data row6 col4\" >0.059384</td>\n",
        "                        <td id=\"T_7bbfab1e_fcee_11ea_8f64_52540026b18brow6_col5\" class=\"data row6 col5\" >0.719085</td>\n",
        "                        <td id=\"T_7bbfab1e_fcee_11ea_8f64_52540026b18brow6_col6\" class=\"data row6 col6\" >1.000000</td>\n",
        "                        <td id=\"T_7bbfab1e_fcee_11ea_8f64_52540026b18brow6_col7\" class=\"data row6 col7\" >0.680597</td>\n",
        "                        <td id=\"T_7bbfab1e_fcee_11ea_8f64_52540026b18brow6_col8\" class=\"data row6 col8\" >0.762684</td>\n",
        "                        <td id=\"T_7bbfab1e_fcee_11ea_8f64_52540026b18brow6_col9\" class=\"data row6 col9\" >0.525670</td>\n",
        "                        <td id=\"T_7bbfab1e_fcee_11ea_8f64_52540026b18brow6_col10\" class=\"data row6 col10\" >0.645844</td>\n",
        "                        <td id=\"T_7bbfab1e_fcee_11ea_8f64_52540026b18brow6_col11\" class=\"data row6 col11\" >0.616653</td>\n",
        "                        <td id=\"T_7bbfab1e_fcee_11ea_8f64_52540026b18brow6_col12\" class=\"data row6 col12\" >0.496031</td>\n",
        "                        <td id=\"T_7bbfab1e_fcee_11ea_8f64_52540026b18brow6_col13\" class=\"data row6 col13\" >0.729223</td>\n",
        "                        <td id=\"T_7bbfab1e_fcee_11ea_8f64_52540026b18brow6_col14\" class=\"data row6 col14\" >0.392509</td>\n",
        "                        <td id=\"T_7bbfab1e_fcee_11ea_8f64_52540026b18brow6_col15\" class=\"data row6 col15\" >0.265635</td>\n",
        "                        <td id=\"T_7bbfab1e_fcee_11ea_8f64_52540026b18brow6_col16\" class=\"data row6 col16\" >0.858316</td>\n",
        "            </tr>\n",
        "            <tr>\n",
        "                        <th id=\"T_7bbfab1e_fcee_11ea_8f64_52540026b18blevel0_row7\" class=\"row_heading level0 row7\" >Cancel_events</th>\n",
        "                        <td id=\"T_7bbfab1e_fcee_11ea_8f64_52540026b18brow7_col0\" class=\"data row7 col0\" >-0.066901</td>\n",
        "                        <td id=\"T_7bbfab1e_fcee_11ea_8f64_52540026b18brow7_col1\" class=\"data row7 col1\" >-0.274197</td>\n",
        "                        <td id=\"T_7bbfab1e_fcee_11ea_8f64_52540026b18brow7_col2\" class=\"data row7 col2\" >-0.291646</td>\n",
        "                        <td id=\"T_7bbfab1e_fcee_11ea_8f64_52540026b18brow7_col3\" class=\"data row7 col3\" >-0.319058</td>\n",
        "                        <td id=\"T_7bbfab1e_fcee_11ea_8f64_52540026b18brow7_col4\" class=\"data row7 col4\" >-0.006292</td>\n",
        "                        <td id=\"T_7bbfab1e_fcee_11ea_8f64_52540026b18brow7_col5\" class=\"data row7 col5\" >0.652620</td>\n",
        "                        <td id=\"T_7bbfab1e_fcee_11ea_8f64_52540026b18brow7_col6\" class=\"data row7 col6\" >0.680597</td>\n",
        "                        <td id=\"T_7bbfab1e_fcee_11ea_8f64_52540026b18brow7_col7\" class=\"data row7 col7\" >1.000000</td>\n",
        "                        <td id=\"T_7bbfab1e_fcee_11ea_8f64_52540026b18brow7_col8\" class=\"data row7 col8\" >0.783308</td>\n",
        "                        <td id=\"T_7bbfab1e_fcee_11ea_8f64_52540026b18brow7_col9\" class=\"data row7 col9\" >0.398389</td>\n",
        "                        <td id=\"T_7bbfab1e_fcee_11ea_8f64_52540026b18brow7_col10\" class=\"data row7 col10\" >0.468768</td>\n",
        "                        <td id=\"T_7bbfab1e_fcee_11ea_8f64_52540026b18brow7_col11\" class=\"data row7 col11\" >0.525684</td>\n",
        "                        <td id=\"T_7bbfab1e_fcee_11ea_8f64_52540026b18brow7_col12\" class=\"data row7 col12\" >0.544355</td>\n",
        "                        <td id=\"T_7bbfab1e_fcee_11ea_8f64_52540026b18brow7_col13\" class=\"data row7 col13\" >0.878957</td>\n",
        "                        <td id=\"T_7bbfab1e_fcee_11ea_8f64_52540026b18brow7_col14\" class=\"data row7 col14\" >0.578449</td>\n",
        "                        <td id=\"T_7bbfab1e_fcee_11ea_8f64_52540026b18brow7_col15\" class=\"data row7 col15\" >0.578785</td>\n",
        "                        <td id=\"T_7bbfab1e_fcee_11ea_8f64_52540026b18brow7_col16\" class=\"data row7 col16\" >0.793947</td>\n",
        "            </tr>\n",
        "            <tr>\n",
        "                        <th id=\"T_7bbfab1e_fcee_11ea_8f64_52540026b18blevel0_row8\" class=\"row_heading level0 row8\" >Gatherings_restrictions</th>\n",
        "                        <td id=\"T_7bbfab1e_fcee_11ea_8f64_52540026b18brow8_col0\" class=\"data row8 col0\" >-0.096971</td>\n",
        "                        <td id=\"T_7bbfab1e_fcee_11ea_8f64_52540026b18brow8_col1\" class=\"data row8 col1\" >-0.273021</td>\n",
        "                        <td id=\"T_7bbfab1e_fcee_11ea_8f64_52540026b18brow8_col2\" class=\"data row8 col2\" >-0.261066</td>\n",
        "                        <td id=\"T_7bbfab1e_fcee_11ea_8f64_52540026b18brow8_col3\" class=\"data row8 col3\" >-0.300604</td>\n",
        "                        <td id=\"T_7bbfab1e_fcee_11ea_8f64_52540026b18brow8_col4\" class=\"data row8 col4\" >-0.094881</td>\n",
        "                        <td id=\"T_7bbfab1e_fcee_11ea_8f64_52540026b18brow8_col5\" class=\"data row8 col5\" >0.644407</td>\n",
        "                        <td id=\"T_7bbfab1e_fcee_11ea_8f64_52540026b18brow8_col6\" class=\"data row8 col6\" >0.762684</td>\n",
        "                        <td id=\"T_7bbfab1e_fcee_11ea_8f64_52540026b18brow8_col7\" class=\"data row8 col7\" >0.783308</td>\n",
        "                        <td id=\"T_7bbfab1e_fcee_11ea_8f64_52540026b18brow8_col8\" class=\"data row8 col8\" >1.000000</td>\n",
        "                        <td id=\"T_7bbfab1e_fcee_11ea_8f64_52540026b18brow8_col9\" class=\"data row8 col9\" >0.629249</td>\n",
        "                        <td id=\"T_7bbfab1e_fcee_11ea_8f64_52540026b18brow8_col10\" class=\"data row8 col10\" >0.625599</td>\n",
        "                        <td id=\"T_7bbfab1e_fcee_11ea_8f64_52540026b18brow8_col11\" class=\"data row8 col11\" >0.688957</td>\n",
        "                        <td id=\"T_7bbfab1e_fcee_11ea_8f64_52540026b18brow8_col12\" class=\"data row8 col12\" >0.611158</td>\n",
        "                        <td id=\"T_7bbfab1e_fcee_11ea_8f64_52540026b18brow8_col13\" class=\"data row8 col13\" >0.796092</td>\n",
        "                        <td id=\"T_7bbfab1e_fcee_11ea_8f64_52540026b18brow8_col14\" class=\"data row8 col14\" >0.570864</td>\n",
        "                        <td id=\"T_7bbfab1e_fcee_11ea_8f64_52540026b18brow8_col15\" class=\"data row8 col15\" >0.362896</td>\n",
        "                        <td id=\"T_7bbfab1e_fcee_11ea_8f64_52540026b18brow8_col16\" class=\"data row8 col16\" >0.862308</td>\n",
        "            </tr>\n",
        "            <tr>\n",
        "                        <th id=\"T_7bbfab1e_fcee_11ea_8f64_52540026b18blevel0_row9\" class=\"row_heading level0 row9\" >Transport_closing</th>\n",
        "                        <td id=\"T_7bbfab1e_fcee_11ea_8f64_52540026b18brow9_col0\" class=\"data row9 col0\" >-0.142573</td>\n",
        "                        <td id=\"T_7bbfab1e_fcee_11ea_8f64_52540026b18brow9_col1\" class=\"data row9 col1\" >-0.209415</td>\n",
        "                        <td id=\"T_7bbfab1e_fcee_11ea_8f64_52540026b18brow9_col2\" class=\"data row9 col2\" >-0.194653</td>\n",
        "                        <td id=\"T_7bbfab1e_fcee_11ea_8f64_52540026b18brow9_col3\" class=\"data row9 col3\" >-0.206019</td>\n",
        "                        <td id=\"T_7bbfab1e_fcee_11ea_8f64_52540026b18brow9_col4\" class=\"data row9 col4\" >0.071303</td>\n",
        "                        <td id=\"T_7bbfab1e_fcee_11ea_8f64_52540026b18brow9_col5\" class=\"data row9 col5\" >0.554318</td>\n",
        "                        <td id=\"T_7bbfab1e_fcee_11ea_8f64_52540026b18brow9_col6\" class=\"data row9 col6\" >0.525670</td>\n",
        "                        <td id=\"T_7bbfab1e_fcee_11ea_8f64_52540026b18brow9_col7\" class=\"data row9 col7\" >0.398389</td>\n",
        "                        <td id=\"T_7bbfab1e_fcee_11ea_8f64_52540026b18brow9_col8\" class=\"data row9 col8\" >0.629249</td>\n",
        "                        <td id=\"T_7bbfab1e_fcee_11ea_8f64_52540026b18brow9_col9\" class=\"data row9 col9\" >1.000000</td>\n",
        "                        <td id=\"T_7bbfab1e_fcee_11ea_8f64_52540026b18brow9_col10\" class=\"data row9 col10\" >0.655759</td>\n",
        "                        <td id=\"T_7bbfab1e_fcee_11ea_8f64_52540026b18brow9_col11\" class=\"data row9 col11\" >0.718982</td>\n",
        "                        <td id=\"T_7bbfab1e_fcee_11ea_8f64_52540026b18brow9_col12\" class=\"data row9 col12\" >0.510940</td>\n",
        "                        <td id=\"T_7bbfab1e_fcee_11ea_8f64_52540026b18brow9_col13\" class=\"data row9 col13\" >0.432540</td>\n",
        "                        <td id=\"T_7bbfab1e_fcee_11ea_8f64_52540026b18brow9_col14\" class=\"data row9 col14\" >0.325734</td>\n",
        "                        <td id=\"T_7bbfab1e_fcee_11ea_8f64_52540026b18brow9_col15\" class=\"data row9 col15\" >0.122925</td>\n",
        "                        <td id=\"T_7bbfab1e_fcee_11ea_8f64_52540026b18brow9_col16\" class=\"data row9 col16\" >0.723948</td>\n",
        "            </tr>\n",
        "            <tr>\n",
        "                        <th id=\"T_7bbfab1e_fcee_11ea_8f64_52540026b18blevel0_row10\" class=\"row_heading level0 row10\" >Stay_home_restrictions</th>\n",
        "                        <td id=\"T_7bbfab1e_fcee_11ea_8f64_52540026b18brow10_col0\" class=\"data row10 col0\" >-0.173022</td>\n",
        "                        <td id=\"T_7bbfab1e_fcee_11ea_8f64_52540026b18brow10_col1\" class=\"data row10 col1\" >0.174300</td>\n",
        "                        <td id=\"T_7bbfab1e_fcee_11ea_8f64_52540026b18brow10_col2\" class=\"data row10 col2\" >0.159682</td>\n",
        "                        <td id=\"T_7bbfab1e_fcee_11ea_8f64_52540026b18brow10_col3\" class=\"data row10 col3\" >0.100152</td>\n",
        "                        <td id=\"T_7bbfab1e_fcee_11ea_8f64_52540026b18brow10_col4\" class=\"data row10 col4\" >0.048487</td>\n",
        "                        <td id=\"T_7bbfab1e_fcee_11ea_8f64_52540026b18brow10_col5\" class=\"data row10 col5\" >0.605368</td>\n",
        "                        <td id=\"T_7bbfab1e_fcee_11ea_8f64_52540026b18brow10_col6\" class=\"data row10 col6\" >0.645844</td>\n",
        "                        <td id=\"T_7bbfab1e_fcee_11ea_8f64_52540026b18brow10_col7\" class=\"data row10 col7\" >0.468768</td>\n",
        "                        <td id=\"T_7bbfab1e_fcee_11ea_8f64_52540026b18brow10_col8\" class=\"data row10 col8\" >0.625599</td>\n",
        "                        <td id=\"T_7bbfab1e_fcee_11ea_8f64_52540026b18brow10_col9\" class=\"data row10 col9\" >0.655759</td>\n",
        "                        <td id=\"T_7bbfab1e_fcee_11ea_8f64_52540026b18brow10_col10\" class=\"data row10 col10\" >1.000000</td>\n",
        "                        <td id=\"T_7bbfab1e_fcee_11ea_8f64_52540026b18brow10_col11\" class=\"data row10 col11\" >0.811041</td>\n",
        "                        <td id=\"T_7bbfab1e_fcee_11ea_8f64_52540026b18brow10_col12\" class=\"data row10 col12\" >0.581888</td>\n",
        "                        <td id=\"T_7bbfab1e_fcee_11ea_8f64_52540026b18brow10_col13\" class=\"data row10 col13\" >0.424875</td>\n",
        "                        <td id=\"T_7bbfab1e_fcee_11ea_8f64_52540026b18brow10_col14\" class=\"data row10 col14\" >0.292447</td>\n",
        "                        <td id=\"T_7bbfab1e_fcee_11ea_8f64_52540026b18brow10_col15\" class=\"data row10 col15\" >0.320721</td>\n",
        "                        <td id=\"T_7bbfab1e_fcee_11ea_8f64_52540026b18brow10_col16\" class=\"data row10 col16\" >0.783696</td>\n",
        "            </tr>\n",
        "            <tr>\n",
        "                        <th id=\"T_7bbfab1e_fcee_11ea_8f64_52540026b18blevel0_row11\" class=\"row_heading level0 row11\" >Internal_movement_restrictions</th>\n",
        "                        <td id=\"T_7bbfab1e_fcee_11ea_8f64_52540026b18brow11_col0\" class=\"data row11 col0\" >-0.165815</td>\n",
        "                        <td id=\"T_7bbfab1e_fcee_11ea_8f64_52540026b18brow11_col1\" class=\"data row11 col1\" >-0.002353</td>\n",
        "                        <td id=\"T_7bbfab1e_fcee_11ea_8f64_52540026b18brow11_col2\" class=\"data row11 col2\" >0.001729</td>\n",
        "                        <td id=\"T_7bbfab1e_fcee_11ea_8f64_52540026b18brow11_col3\" class=\"data row11 col3\" >-0.081758</td>\n",
        "                        <td id=\"T_7bbfab1e_fcee_11ea_8f64_52540026b18brow11_col4\" class=\"data row11 col4\" >-0.014708</td>\n",
        "                        <td id=\"T_7bbfab1e_fcee_11ea_8f64_52540026b18brow11_col5\" class=\"data row11 col5\" >0.585515</td>\n",
        "                        <td id=\"T_7bbfab1e_fcee_11ea_8f64_52540026b18brow11_col6\" class=\"data row11 col6\" >0.616653</td>\n",
        "                        <td id=\"T_7bbfab1e_fcee_11ea_8f64_52540026b18brow11_col7\" class=\"data row11 col7\" >0.525684</td>\n",
        "                        <td id=\"T_7bbfab1e_fcee_11ea_8f64_52540026b18brow11_col8\" class=\"data row11 col8\" >0.688957</td>\n",
        "                        <td id=\"T_7bbfab1e_fcee_11ea_8f64_52540026b18brow11_col9\" class=\"data row11 col9\" >0.718982</td>\n",
        "                        <td id=\"T_7bbfab1e_fcee_11ea_8f64_52540026b18brow11_col10\" class=\"data row11 col10\" >0.811041</td>\n",
        "                        <td id=\"T_7bbfab1e_fcee_11ea_8f64_52540026b18brow11_col11\" class=\"data row11 col11\" >1.000000</td>\n",
        "                        <td id=\"T_7bbfab1e_fcee_11ea_8f64_52540026b18brow11_col12\" class=\"data row11 col12\" >0.539336</td>\n",
        "                        <td id=\"T_7bbfab1e_fcee_11ea_8f64_52540026b18brow11_col13\" class=\"data row11 col13\" >0.473852</td>\n",
        "                        <td id=\"T_7bbfab1e_fcee_11ea_8f64_52540026b18brow11_col14\" class=\"data row11 col14\" >0.360009</td>\n",
        "                        <td id=\"T_7bbfab1e_fcee_11ea_8f64_52540026b18brow11_col15\" class=\"data row11 col15\" >0.268440</td>\n",
        "                        <td id=\"T_7bbfab1e_fcee_11ea_8f64_52540026b18brow11_col16\" class=\"data row11 col16\" >0.766347</td>\n",
        "            </tr>\n",
        "            <tr>\n",
        "                        <th id=\"T_7bbfab1e_fcee_11ea_8f64_52540026b18blevel0_row12\" class=\"row_heading level0 row12\" >International_movement_restrictions</th>\n",
        "                        <td id=\"T_7bbfab1e_fcee_11ea_8f64_52540026b18brow12_col0\" class=\"data row12 col0\" >-0.192684</td>\n",
        "                        <td id=\"T_7bbfab1e_fcee_11ea_8f64_52540026b18brow12_col1\" class=\"data row12 col1\" >0.140861</td>\n",
        "                        <td id=\"T_7bbfab1e_fcee_11ea_8f64_52540026b18brow12_col2\" class=\"data row12 col2\" >0.163823</td>\n",
        "                        <td id=\"T_7bbfab1e_fcee_11ea_8f64_52540026b18brow12_col3\" class=\"data row12 col3\" >-0.054427</td>\n",
        "                        <td id=\"T_7bbfab1e_fcee_11ea_8f64_52540026b18brow12_col4\" class=\"data row12 col4\" >-0.016170</td>\n",
        "                        <td id=\"T_7bbfab1e_fcee_11ea_8f64_52540026b18brow12_col5\" class=\"data row12 col5\" >0.483896</td>\n",
        "                        <td id=\"T_7bbfab1e_fcee_11ea_8f64_52540026b18brow12_col6\" class=\"data row12 col6\" >0.496031</td>\n",
        "                        <td id=\"T_7bbfab1e_fcee_11ea_8f64_52540026b18brow12_col7\" class=\"data row12 col7\" >0.544355</td>\n",
        "                        <td id=\"T_7bbfab1e_fcee_11ea_8f64_52540026b18brow12_col8\" class=\"data row12 col8\" >0.611158</td>\n",
        "                        <td id=\"T_7bbfab1e_fcee_11ea_8f64_52540026b18brow12_col9\" class=\"data row12 col9\" >0.510940</td>\n",
        "                        <td id=\"T_7bbfab1e_fcee_11ea_8f64_52540026b18brow12_col10\" class=\"data row12 col10\" >0.581888</td>\n",
        "                        <td id=\"T_7bbfab1e_fcee_11ea_8f64_52540026b18brow12_col11\" class=\"data row12 col11\" >0.539336</td>\n",
        "                        <td id=\"T_7bbfab1e_fcee_11ea_8f64_52540026b18brow12_col12\" class=\"data row12 col12\" >1.000000</td>\n",
        "                        <td id=\"T_7bbfab1e_fcee_11ea_8f64_52540026b18brow12_col13\" class=\"data row12 col13\" >0.509412</td>\n",
        "                        <td id=\"T_7bbfab1e_fcee_11ea_8f64_52540026b18brow12_col14\" class=\"data row12 col14\" >0.449522</td>\n",
        "                        <td id=\"T_7bbfab1e_fcee_11ea_8f64_52540026b18brow12_col15\" class=\"data row12 col15\" >0.476684</td>\n",
        "                        <td id=\"T_7bbfab1e_fcee_11ea_8f64_52540026b18brow12_col16\" class=\"data row12 col16\" >0.697257</td>\n",
        "            </tr>\n",
        "            <tr>\n",
        "                        <th id=\"T_7bbfab1e_fcee_11ea_8f64_52540026b18blevel0_row13\" class=\"row_heading level0 row13\" >Information_campaigns</th>\n",
        "                        <td id=\"T_7bbfab1e_fcee_11ea_8f64_52540026b18brow13_col0\" class=\"data row13 col0\" >-0.027923</td>\n",
        "                        <td id=\"T_7bbfab1e_fcee_11ea_8f64_52540026b18brow13_col1\" class=\"data row13 col1\" >-0.341054</td>\n",
        "                        <td id=\"T_7bbfab1e_fcee_11ea_8f64_52540026b18brow13_col2\" class=\"data row13 col2\" >-0.357539</td>\n",
        "                        <td id=\"T_7bbfab1e_fcee_11ea_8f64_52540026b18brow13_col3\" class=\"data row13 col3\" >-0.336674</td>\n",
        "                        <td id=\"T_7bbfab1e_fcee_11ea_8f64_52540026b18brow13_col4\" class=\"data row13 col4\" >0.083164</td>\n",
        "                        <td id=\"T_7bbfab1e_fcee_11ea_8f64_52540026b18brow13_col5\" class=\"data row13 col5\" >0.635044</td>\n",
        "                        <td id=\"T_7bbfab1e_fcee_11ea_8f64_52540026b18brow13_col6\" class=\"data row13 col6\" >0.729223</td>\n",
        "                        <td id=\"T_7bbfab1e_fcee_11ea_8f64_52540026b18brow13_col7\" class=\"data row13 col7\" >0.878957</td>\n",
        "                        <td id=\"T_7bbfab1e_fcee_11ea_8f64_52540026b18brow13_col8\" class=\"data row13 col8\" >0.796092</td>\n",
        "                        <td id=\"T_7bbfab1e_fcee_11ea_8f64_52540026b18brow13_col9\" class=\"data row13 col9\" >0.432540</td>\n",
        "                        <td id=\"T_7bbfab1e_fcee_11ea_8f64_52540026b18brow13_col10\" class=\"data row13 col10\" >0.424875</td>\n",
        "                        <td id=\"T_7bbfab1e_fcee_11ea_8f64_52540026b18brow13_col11\" class=\"data row13 col11\" >0.473852</td>\n",
        "                        <td id=\"T_7bbfab1e_fcee_11ea_8f64_52540026b18brow13_col12\" class=\"data row13 col12\" >0.509412</td>\n",
        "                        <td id=\"T_7bbfab1e_fcee_11ea_8f64_52540026b18brow13_col13\" class=\"data row13 col13\" >1.000000</td>\n",
        "                        <td id=\"T_7bbfab1e_fcee_11ea_8f64_52540026b18brow13_col14\" class=\"data row13 col14\" >0.583475</td>\n",
        "                        <td id=\"T_7bbfab1e_fcee_11ea_8f64_52540026b18brow13_col15\" class=\"data row13 col15\" >0.544688</td>\n",
        "                        <td id=\"T_7bbfab1e_fcee_11ea_8f64_52540026b18brow13_col16\" class=\"data row13 col16\" >0.800097</td>\n",
        "            </tr>\n",
        "            <tr>\n",
        "                        <th id=\"T_7bbfab1e_fcee_11ea_8f64_52540026b18blevel0_row14\" class=\"row_heading level0 row14\" >Testing_policy</th>\n",
        "                        <td id=\"T_7bbfab1e_fcee_11ea_8f64_52540026b18brow14_col0\" class=\"data row14 col0\" >-0.171485</td>\n",
        "                        <td id=\"T_7bbfab1e_fcee_11ea_8f64_52540026b18brow14_col1\" class=\"data row14 col1\" >-0.290306</td>\n",
        "                        <td id=\"T_7bbfab1e_fcee_11ea_8f64_52540026b18brow14_col2\" class=\"data row14 col2\" >-0.222306</td>\n",
        "                        <td id=\"T_7bbfab1e_fcee_11ea_8f64_52540026b18brow14_col3\" class=\"data row14 col3\" >-0.425615</td>\n",
        "                        <td id=\"T_7bbfab1e_fcee_11ea_8f64_52540026b18brow14_col4\" class=\"data row14 col4\" >-0.132158</td>\n",
        "                        <td id=\"T_7bbfab1e_fcee_11ea_8f64_52540026b18brow14_col5\" class=\"data row14 col5\" >0.312886</td>\n",
        "                        <td id=\"T_7bbfab1e_fcee_11ea_8f64_52540026b18brow14_col6\" class=\"data row14 col6\" >0.392509</td>\n",
        "                        <td id=\"T_7bbfab1e_fcee_11ea_8f64_52540026b18brow14_col7\" class=\"data row14 col7\" >0.578449</td>\n",
        "                        <td id=\"T_7bbfab1e_fcee_11ea_8f64_52540026b18brow14_col8\" class=\"data row14 col8\" >0.570864</td>\n",
        "                        <td id=\"T_7bbfab1e_fcee_11ea_8f64_52540026b18brow14_col9\" class=\"data row14 col9\" >0.325734</td>\n",
        "                        <td id=\"T_7bbfab1e_fcee_11ea_8f64_52540026b18brow14_col10\" class=\"data row14 col10\" >0.292447</td>\n",
        "                        <td id=\"T_7bbfab1e_fcee_11ea_8f64_52540026b18brow14_col11\" class=\"data row14 col11\" >0.360009</td>\n",
        "                        <td id=\"T_7bbfab1e_fcee_11ea_8f64_52540026b18brow14_col12\" class=\"data row14 col12\" >0.449522</td>\n",
        "                        <td id=\"T_7bbfab1e_fcee_11ea_8f64_52540026b18brow14_col13\" class=\"data row14 col13\" >0.583475</td>\n",
        "                        <td id=\"T_7bbfab1e_fcee_11ea_8f64_52540026b18brow14_col14\" class=\"data row14 col14\" >1.000000</td>\n",
        "                        <td id=\"T_7bbfab1e_fcee_11ea_8f64_52540026b18brow14_col15\" class=\"data row14 col15\" >0.432664</td>\n",
        "                        <td id=\"T_7bbfab1e_fcee_11ea_8f64_52540026b18brow14_col16\" class=\"data row14 col16\" >0.398062</td>\n",
        "            </tr>\n",
        "            <tr>\n",
        "                        <th id=\"T_7bbfab1e_fcee_11ea_8f64_52540026b18blevel0_row15\" class=\"row_heading level0 row15\" >Contact_tracing</th>\n",
        "                        <td id=\"T_7bbfab1e_fcee_11ea_8f64_52540026b18brow15_col0\" class=\"data row15 col0\" >-0.207415</td>\n",
        "                        <td id=\"T_7bbfab1e_fcee_11ea_8f64_52540026b18brow15_col1\" class=\"data row15 col1\" >-0.002745</td>\n",
        "                        <td id=\"T_7bbfab1e_fcee_11ea_8f64_52540026b18brow15_col2\" class=\"data row15 col2\" >-0.001250</td>\n",
        "                        <td id=\"T_7bbfab1e_fcee_11ea_8f64_52540026b18brow15_col3\" class=\"data row15 col3\" >-0.216202</td>\n",
        "                        <td id=\"T_7bbfab1e_fcee_11ea_8f64_52540026b18brow15_col4\" class=\"data row15 col4\" >0.082701</td>\n",
        "                        <td id=\"T_7bbfab1e_fcee_11ea_8f64_52540026b18brow15_col5\" class=\"data row15 col5\" >0.202597</td>\n",
        "                        <td id=\"T_7bbfab1e_fcee_11ea_8f64_52540026b18brow15_col6\" class=\"data row15 col6\" >0.265635</td>\n",
        "                        <td id=\"T_7bbfab1e_fcee_11ea_8f64_52540026b18brow15_col7\" class=\"data row15 col7\" >0.578785</td>\n",
        "                        <td id=\"T_7bbfab1e_fcee_11ea_8f64_52540026b18brow15_col8\" class=\"data row15 col8\" >0.362896</td>\n",
        "                        <td id=\"T_7bbfab1e_fcee_11ea_8f64_52540026b18brow15_col9\" class=\"data row15 col9\" >0.122925</td>\n",
        "                        <td id=\"T_7bbfab1e_fcee_11ea_8f64_52540026b18brow15_col10\" class=\"data row15 col10\" >0.320721</td>\n",
        "                        <td id=\"T_7bbfab1e_fcee_11ea_8f64_52540026b18brow15_col11\" class=\"data row15 col11\" >0.268440</td>\n",
        "                        <td id=\"T_7bbfab1e_fcee_11ea_8f64_52540026b18brow15_col12\" class=\"data row15 col12\" >0.476684</td>\n",
        "                        <td id=\"T_7bbfab1e_fcee_11ea_8f64_52540026b18brow15_col13\" class=\"data row15 col13\" >0.544688</td>\n",
        "                        <td id=\"T_7bbfab1e_fcee_11ea_8f64_52540026b18brow15_col14\" class=\"data row15 col14\" >0.432664</td>\n",
        "                        <td id=\"T_7bbfab1e_fcee_11ea_8f64_52540026b18brow15_col15\" class=\"data row15 col15\" >1.000000</td>\n",
        "                        <td id=\"T_7bbfab1e_fcee_11ea_8f64_52540026b18brow15_col16\" class=\"data row15 col16\" >0.414929</td>\n",
        "            </tr>\n",
        "            <tr>\n",
        "                        <th id=\"T_7bbfab1e_fcee_11ea_8f64_52540026b18blevel0_row16\" class=\"row_heading level0 row16\" >Stringency_index</th>\n",
        "                        <td id=\"T_7bbfab1e_fcee_11ea_8f64_52540026b18brow16_col0\" class=\"data row16 col0\" >-0.106717</td>\n",
        "                        <td id=\"T_7bbfab1e_fcee_11ea_8f64_52540026b18brow16_col1\" class=\"data row16 col1\" >-0.111658</td>\n",
        "                        <td id=\"T_7bbfab1e_fcee_11ea_8f64_52540026b18brow16_col2\" class=\"data row16 col2\" >-0.147386</td>\n",
        "                        <td id=\"T_7bbfab1e_fcee_11ea_8f64_52540026b18brow16_col3\" class=\"data row16 col3\" >-0.132025</td>\n",
        "                        <td id=\"T_7bbfab1e_fcee_11ea_8f64_52540026b18brow16_col4\" class=\"data row16 col4\" >0.108363</td>\n",
        "                        <td id=\"T_7bbfab1e_fcee_11ea_8f64_52540026b18brow16_col5\" class=\"data row16 col5\" >0.821529</td>\n",
        "                        <td id=\"T_7bbfab1e_fcee_11ea_8f64_52540026b18brow16_col6\" class=\"data row16 col6\" >0.858316</td>\n",
        "                        <td id=\"T_7bbfab1e_fcee_11ea_8f64_52540026b18brow16_col7\" class=\"data row16 col7\" >0.793947</td>\n",
        "                        <td id=\"T_7bbfab1e_fcee_11ea_8f64_52540026b18brow16_col8\" class=\"data row16 col8\" >0.862308</td>\n",
        "                        <td id=\"T_7bbfab1e_fcee_11ea_8f64_52540026b18brow16_col9\" class=\"data row16 col9\" >0.723948</td>\n",
        "                        <td id=\"T_7bbfab1e_fcee_11ea_8f64_52540026b18brow16_col10\" class=\"data row16 col10\" >0.783696</td>\n",
        "                        <td id=\"T_7bbfab1e_fcee_11ea_8f64_52540026b18brow16_col11\" class=\"data row16 col11\" >0.766347</td>\n",
        "                        <td id=\"T_7bbfab1e_fcee_11ea_8f64_52540026b18brow16_col12\" class=\"data row16 col12\" >0.697257</td>\n",
        "                        <td id=\"T_7bbfab1e_fcee_11ea_8f64_52540026b18brow16_col13\" class=\"data row16 col13\" >0.800097</td>\n",
        "                        <td id=\"T_7bbfab1e_fcee_11ea_8f64_52540026b18brow16_col14\" class=\"data row16 col14\" >0.398062</td>\n",
        "                        <td id=\"T_7bbfab1e_fcee_11ea_8f64_52540026b18brow16_col15\" class=\"data row16 col15\" >0.414929</td>\n",
        "                        <td id=\"T_7bbfab1e_fcee_11ea_8f64_52540026b18brow16_col16\" class=\"data row16 col16\" >1.000000</td>\n",
        "            </tr>\n",
        "    </tbody></table>"
       ],
       "output_type": "pyout",
       "prompt_number": 21,
       "text": [
        "<pandas.io.formats.style.Styler at 0x7ff120948940>"
       ]
      }
     ],
     "prompt_number": 21
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "# Scatter plot of Stringency index and Rt\n",
      "df = track_df.copy()\n",
      "sns.scatterplot(data=df, x=\"Stringency_index\", y=\"Rt\", hue=\"Country\", legend=\"brief\", marker=\"+\")\n",
      "bbox_to_anchor=(1.02, 0)\n",
      "bbox_loc=\"lower left\"\n",
      "plt.legend(bbox_to_anchor=bbox_to_anchor, loc=bbox_loc, borderaxespad=0)\n",
      "plt.title(\"Relationship of Stringency index and reproduction number\")\n",
      "plt.ylabel(\"Reproduction number\")\n",
      "plt.xlabel(\"Stringency index\")\n",
      "plt.show()"
     ],
     "language": "python",
     "metadata": {},
     "outputs": [
      {
       "output_type": "display_data",
       "png": "\n",
       "text": [
        "<Figure size 432x288 with 1 Axes>"
       ]
      }
     ],
     "prompt_number": 22
    }
   ],
   "metadata": {}
  }
 ]
}
