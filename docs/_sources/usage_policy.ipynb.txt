{
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3.8.2 64-bit ('.venv': venv)",
   "name": "python_defaultSpec_1597669925034"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.8.2-final"
  },
  "name": ""
 },
 "nbformat": 3,
 "nbformat_minor": 0,
 "worksheets": [
  {
   "cells": [
    {
     "cell_type": "markdown",
     "metadata": {},
     "source": [
      "# Usage (details: policy measures)\n",
      "Here, we will analyse the relationship of policy measures and parameter values of SIR-derived ODE models. Policy measures are tracked by [Oxford Covid-19 Government Response Tracker (OxCGRT)](https://github.com/OxCGRT/covid-policy-tracker)."
     ]
    },
    {
     "cell_type": "heading",
     "level": 2,
     "metadata": {},
     "source": [
      "Preparation"
     ]
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "# Standard users\n",
      "# !pip install covsirphy\n",
      "# Developers (Note: this notebook is in example directory)\n",
      "import os\n",
      "os.chdir(\"../\")"
     ],
     "language": "python",
     "metadata": {},
     "outputs": [],
     "prompt_number": 1
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "from pprint import pprint"
     ],
     "language": "python",
     "metadata": {},
     "outputs": [],
     "prompt_number": 2
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "import covsirphy as cs\n",
      "cs.__version__"
     ],
     "language": "python",
     "metadata": {},
     "outputs": [
      {
       "output_type": "pyout",
       "prompt_number": 3,
       "text": [
        "'2.8.3'"
       ]
      }
     ],
     "prompt_number": 3
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "# Standard users and developers\n",
      "data_loader = cs.DataLoader(\"input\")\n",
      "# The number of cases (JHU style)\n",
      "jhu_data = data_loader.jhu(verbose=False)\n",
      "# Population in each country\n",
      "population_data = data_loader.population(verbose=False)\n",
      "# Government Response Tracker (OxCGRT)\n",
      "oxcgrt_data = data_loader.oxcgrt(verbose=False)\n",
      "# Description/citation\n",
      "print(oxcgrt_data.citation)"
     ],
     "language": "python",
     "metadata": {
      "tags": []
     },
     "outputs": [
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "(Secondary source) Guidotti, E., Ardia, D., (2020), \"COVID-19 Data Hub\", Journal of Open Source Software 5(51):2376, doi: 10.21105/joss.02376.\n",
        "We can get Citation list of primary sources with DataLoader(...).covid19dh_citation"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      }
     ],
     "prompt_number": 4
    },
    {
     "cell_type": "markdown",
     "metadata": {},
     "source": [
      "## Class for policy measure analysis\n",
      "We will `PolicyMeasures` class to find relationship of policy measures and parameter values of SIR-derived ODE models."
     ]
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "# Create analyser with tau value 360 [min] (can be changed)\n",
      "analyser = cs.PolicyMeasures(jhu_data, population_data, oxcgrt_data, tau=360)\n",
      "# The number of registerd countries\n",
      "len(analyser.countries)"
     ],
     "language": "python",
     "metadata": {
      "tags": []
     },
     "outputs": [
      {
       "output_type": "pyout",
       "prompt_number": 5,
       "text": [
        "184"
       ]
      }
     ],
     "prompt_number": 5
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "# We can get Scenario instance for detailed scenario analysis\n",
      "type(analyser.scenario(\"Japan\"))"
     ],
     "language": "python",
     "metadata": {},
     "outputs": [
      {
       "output_type": "pyout",
       "prompt_number": 6,
       "text": [
        "covsirphy.analysis.scenario.Scenario"
       ]
      }
     ],
     "prompt_number": 6
    },
    {
     "cell_type": "markdown",
     "metadata": {},
     "source": [
      "## Set phases with S-R trend analysis\n",
      "We will perform S-R trend analysis to set phases in all countries. Countries which do not have **12th phases** will be un-registered for the next analysis. This number will be adjusted for your analysis."
     ]
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "# Show the number of phases of all countries\n",
      "analyser.trend()\n",
      "pprint(analyser.phase_len(), compact=True)"
     ],
     "language": "python",
     "metadata": {},
     "outputs": [
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "{"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "4"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ": "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "['Belize', 'Tanzania', 'Georgia', 'Myanmar', 'Fiji']"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        " "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "5"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ": "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "["
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Tunisia'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Grenada'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Jamaica'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Brunei'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Dominica'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Jordan'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        "     "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Papua New Guinea'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Libya'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Uganda'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Trinidad and Tobago'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "]"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        " "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "6"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ": "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "["
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Czech Republic'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Namibia'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Equatorial Guinea'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Mauritius'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Lebanon'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        "     "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Yemen'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Sao Tome and Principe'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Guyana'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Monaco'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        "     "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Antigua and Barbuda'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Burundi'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Netherlands'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Ireland'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Cambodia'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        "     "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Hungary'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "]"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        " "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "7"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ": "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "["
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'San Marino'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Paraguay'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Australia'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'New Zealand'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Colombia'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Malawi'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        "     "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Gambia'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Nepal'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Andorra'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Lesotho'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        "     "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Saint Vincent and the Grenadines'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Cyprus'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Spain'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        "     "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Central African Republic'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Seychelles'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Kazakhstan'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Syria'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Vietnam'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        "     "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Eritrea'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Guinea-Bissau'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Botswana'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Ethiopia'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Angola'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Rwanda'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        "     "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Bahamas'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Mozambique'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Comoros'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Kosovo'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Slovakia'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Kyrgyzstan'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "]"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        " "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "8"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ": "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "["
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'South Sudan'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Ukraine'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Suriname'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Saint Lucia'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Malta'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Argentina'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        "     "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Venezuela'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Guatemala'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Israel'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Barbados'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Liechtenstein'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Austria'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        "     "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Thailand'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Zambia'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Costa Rica'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Mongolia'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Philippines'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Iceland'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        "     "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Zimbabwe'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Madagascar'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Slovenia'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Montenegro'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Uruguay'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Niger'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        "     "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Norway'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Palestine'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Croatia'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Bhutan'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Maldives'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Morocco'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        "     "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Taiwan'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Afghanistan'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "]"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        " "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "9"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ": "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "["
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Congo'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Ghana'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'India'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Bermuda'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Sri Lanka'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Indonesia'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        "     "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Mauritania'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Liberia'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Sierra Leone'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Djibouti'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Somalia'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Cameroon'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        "     "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'China'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Korea, South'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Japan'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Haiti'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Finland'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Kenya'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Nicaragua'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        "     "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'South Africa'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Chad'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Serbia'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Pakistan'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Benin'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Oman'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Sudan'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        "     "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Qatar'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Tajikistan'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Greece'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "]"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        " "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "10"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ": "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "["
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Luxembourg'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Belarus'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Ecuador'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Iraq'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Malaysia'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Cape Verde'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        "      "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Honduras'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Senegal'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Chile'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Cuba'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Azerbaijan'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Estonia'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Togo'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        "      "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Singapore'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Denmark'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Switzerland'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Gabon'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Swaziland'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        "      "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Bosnia and Herzegovina'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Lithuania'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Uzbekistan'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Armenia'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Germany'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        "      "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Albania'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'El Salvador'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "]"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        " "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "11"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ": "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "["
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Belgium'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Guinea'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Romania'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Bulgaria'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Bangladesh'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'France'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        "      "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Canada'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Burkina Faso'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Nigeria'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Moldova'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Peru'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Kuwait'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        "      "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Saudi Arabia'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Egypt'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Algeria'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Latvia'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Bolivia'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Poland'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        "      "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Dominican Republic'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Mali'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Panama'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Mexico'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "]"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        " "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "12"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ": "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "["
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'United States'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Portugal'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Turkey'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Iran'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'United Arab Emirates'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        "      "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Brazil'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Macedonia'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Italy'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Bahrain'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "]"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        " "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "13"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ": "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "['Russia']"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "}"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      }
     ],
     "prompt_number": 7
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "# Set phases with S-R trend analysis\n",
      "analyser.trend(min_len=12)\n",
      "# The number of countries\n",
      "len(analyser.countries)"
     ],
     "language": "python",
     "metadata": {},
     "outputs": [
      {
       "output_type": "pyout",
       "prompt_number": 8,
       "text": [
        "10"
       ]
      }
     ],
     "prompt_number": 8
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "phase_len_dict = analyser.phase_len()\n",
      "pprint(phase_len_dict, compact=True)"
     ],
     "language": "python",
     "metadata": {
      "tags": []
     },
     "outputs": [
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "{"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "12"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ": "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "["
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'United States'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Portugal'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Turkey'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Iran'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'United Arab Emirates'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        "      "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Brazil'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Macedonia'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Italy'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Bahrain'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "]"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        " "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "13"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ": "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "['Russia']"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "}"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      }
     ],
     "prompt_number": 9
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "# Here, only show the countries which have the most phases\n",
      "countries_show = max(phase_len_dict.items(), key=lambda x: x[0])[1]\n",
      "# Show summary\n",
      "analyser.summary(countries=countries_show)"
     ],
     "language": "python",
     "metadata": {
      "tags": []
     },
     "outputs": [
      {
       "html": [
        "<div>\n",
        "<style scoped>\n",
        "    .dataframe tbody tr th:only-of-type {\n",
        "        vertical-align: middle;\n",
        "    }\n",
        "\n",
        "    .dataframe tbody tr th {\n",
        "        vertical-align: top;\n",
        "    }\n",
        "\n",
        "    .dataframe thead th {\n",
        "        text-align: right;\n",
        "    }\n",
        "</style>\n",
        "<table border=\"1\" class=\"dataframe\">\n",
        "  <thead>\n",
        "    <tr style=\"text-align: right;\">\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th>Type</th>\n",
        "      <th>Start</th>\n",
        "      <th>End</th>\n",
        "      <th>Population</th>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>Country</th>\n",
        "      <th>Phase</th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "    </tr>\n",
        "  </thead>\n",
        "  <tbody>\n",
        "    <tr>\n",
        "      <th rowspan=\"13\" valign=\"top\">Russia</th>\n",
        "      <th>0th</th>\n",
        "      <td>Past</td>\n",
        "      <td>12Feb2020</td>\n",
        "      <td>06May2020</td>\n",
        "      <td>330457362</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>1st</th>\n",
        "      <td>Past</td>\n",
        "      <td>07May2020</td>\n",
        "      <td>16May2020</td>\n",
        "      <td>330457362</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>2nd</th>\n",
        "      <td>Past</td>\n",
        "      <td>17May2020</td>\n",
        "      <td>26May2020</td>\n",
        "      <td>330457362</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>3rd</th>\n",
        "      <td>Past</td>\n",
        "      <td>27May2020</td>\n",
        "      <td>04Jun2020</td>\n",
        "      <td>330457362</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>4th</th>\n",
        "      <td>Past</td>\n",
        "      <td>05Jun2020</td>\n",
        "      <td>13Jun2020</td>\n",
        "      <td>330457362</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>5th</th>\n",
        "      <td>Past</td>\n",
        "      <td>14Jun2020</td>\n",
        "      <td>23Jun2020</td>\n",
        "      <td>330457362</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>6th</th>\n",
        "      <td>Past</td>\n",
        "      <td>24Jun2020</td>\n",
        "      <td>04Jul2020</td>\n",
        "      <td>330457362</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>7th</th>\n",
        "      <td>Past</td>\n",
        "      <td>05Jul2020</td>\n",
        "      <td>17Jul2020</td>\n",
        "      <td>330457362</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>8th</th>\n",
        "      <td>Past</td>\n",
        "      <td>18Jul2020</td>\n",
        "      <td>31Jul2020</td>\n",
        "      <td>330457362</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>9th</th>\n",
        "      <td>Past</td>\n",
        "      <td>01Aug2020</td>\n",
        "      <td>16Aug2020</td>\n",
        "      <td>330457362</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>10th</th>\n",
        "      <td>Past</td>\n",
        "      <td>17Aug2020</td>\n",
        "      <td>02Sep2020</td>\n",
        "      <td>330457362</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>11th</th>\n",
        "      <td>Past</td>\n",
        "      <td>03Sep2020</td>\n",
        "      <td>19Sep2020</td>\n",
        "      <td>330457362</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>12th</th>\n",
        "      <td>Past</td>\n",
        "      <td>20Sep2020</td>\n",
        "      <td>04Oct2020</td>\n",
        "      <td>330457362</td>\n",
        "    </tr>\n",
        "  </tbody>\n",
        "</table>\n",
        "</div>"
       ],
       "output_type": "pyout",
       "prompt_number": 10,
       "text": [
        "               Type      Start        End  Population\n",
        "Country Phase                                        \n",
        "Russia  0th    Past  12Feb2020  06May2020   330457362\n",
        "        1st    Past  07May2020  16May2020   330457362\n",
        "        2nd    Past  17May2020  26May2020   330457362\n",
        "        3rd    Past  27May2020  04Jun2020   330457362\n",
        "        4th    Past  05Jun2020  13Jun2020   330457362\n",
        "        5th    Past  14Jun2020  23Jun2020   330457362\n",
        "        6th    Past  24Jun2020  04Jul2020   330457362\n",
        "        7th    Past  05Jul2020  17Jul2020   330457362\n",
        "        8th    Past  18Jul2020  31Jul2020   330457362\n",
        "        9th    Past  01Aug2020  16Aug2020   330457362\n",
        "        10th   Past  17Aug2020  02Sep2020   330457362\n",
        "        11th   Past  03Sep2020  19Sep2020   330457362\n",
        "        12th   Past  20Sep2020  04Oct2020   330457362"
       ]
      }
     ],
     "prompt_number": 10
    },
    {
     "cell_type": "markdown",
     "metadata": {},
     "source": [
      "## Parameter estimation\n",
      "we will estimate the parameter values with SIR-derived ODE models in each country."
     ]
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "# Parameter estimation with SIR-F model\n",
      "analyser.estimate(cs.SIRF)"
     ],
     "language": "python",
     "metadata": {
      "tags": []
     },
     "outputs": [
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n",
        "<SIR-F model: parameter estimation>"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "Running optimization with 4 CPUs..."
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tITA,  9th phase (26Aug2020 - 12Sep2020): finished  245 trials in 0 min  5 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tITA,  7th phase (28May2020 - 14Jul2020): finished  638 trials in 0 min 15 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tBRA,  7th phase (06Aug2020 - 13Aug2020): finished  468 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tBHR, 11th phase (23Sep2020 - 04Oct2020): finished 1572 trials in 0 min 45 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tRUS, 10th phase (17Aug2020 - 02Sep2020): finished 1928 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tBHR,  4th phase (26Jun2020 - 07Jul2020): finished 1919 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tARE,  1st phase (28Apr2020 - 14May2020): finished 1910 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tUSA,  7th phase (29Jul2020 - 07Aug2020): finished  459 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tUSA,  8th phase (08Aug2020 - 20Aug2020): finished  642 trials in 0 min 15 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tMKD, 10th phase (16Sep2020 - 24Sep2020): finished 1574 trials in 0 min 45 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tRUS,  3rd phase (27May2020 - 04Jun2020): finished 1941 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tARE,  5th phase (20Jun2020 - 03Jul2020): finished  997 trials in 0 min 25 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tTUR,  0th phase (24Mar2020 - 16Apr2020): finished 1952 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tBRA,  3rd phase (27Jun2020 - 08Jul2020): finished 1926 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tARE,  8th phase (20Aug2020 - 07Sep2020): finished 1920 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tARE,  0th phase (12Feb2020 - 27Apr2020): finished 1846 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tPRT,  1st phase (29Apr2020 - 14May2020): finished 1902 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tUSA,  9th phase (21Aug2020 - 03Sep2020): finished  807 trials in 0 min 20 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tIRN,  0th phase (26Feb2020 - 29Mar2020): finished 1908 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tBHR,  1st phase (06May2020 - 01Jun2020): finished 1908 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tARE, 10th phase (18Sep2020 - 25Sep2020): finished  700 trials in 0 min 20 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tPRT, 11th phase (24Sep2020 - 04Oct2020): finished 1749 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tBRA,  2nd phase (15Jun2020 - 26Jun2020): finished  442 trials in 0 min 15 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tARE,  4th phase (06Jun2020 - 19Jun2020): finished  946 trials in 0 min 35 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tTUR,  7th phase (15Jul2020 - 03Aug2020): finished  155 trials in 0 min  5 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tTUR,  9th phase (22Aug2020 - 05Sep2020): finished  475 trials in 0 min 15 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tPRT,  8th phase (14Aug2020 - 02Sep2020): finished 1460 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tARE, 11th phase (26Sep2020 - 04Oct2020): finished  529 trials in 0 min 15 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tITA,  8th phase (15Jul2020 - 25Aug2020): finished 1476 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tBHR,  9th phase (04Sep2020 - 14Sep2020): finished 1509 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tTUR,  3rd phase (09May2020 - 23May2020): finished 1515 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tMKD,  8th phase (23Aug2020 - 02Sep2020): finished 1479 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tRUS,  2nd phase (17May2020 - 26May2020): finished 1533 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tIRN,  2nd phase (18Apr2020 - 14May2020): finished  442 trials in 0 min 15 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tBHR,  7th phase (04Aug2020 - 18Aug2020): finished 1508 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tPRT,  9th phase (03Sep2020 - 14Sep2020): finished 1472 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tBRA,  1st phase (28May2020 - 14Jun2020): finished 1446 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tBRA,  6th phase (29Jul2020 - 05Aug2020): finished 1208 trials in 0 min 45 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tTUR,  1st phase (17Apr2020 - 29Apr2020): finished 1524 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tITA,  0th phase (24Feb2020 - 20Mar2020): finished 1491 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tITA,  6th phase (12May2020 - 27May2020): finished  342 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tPRT,  6th phase (09Jul2020 - 23Jul2020): finished 1458 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tUSA,  5th phase (08Jul2020 - 17Jul2020): finished  342 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tPRT,  4th phase (13Jun2020 - 25Jun2020): finished 1482 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tITA,  3rd phase (09Apr2020 - 18Apr2020): finished  333 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tPRT,  3rd phase (31May2020 - 12Jun2020): finished 1462 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tIRN,  6th phase (02Jul2020 - 15Jul2020): finished  204 trials in 0 min  5 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tMKD,  4th phase (16Jul2020 - 26Jul2020): finished  181 trials in 0 min  5 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tIRN, 11th phase (21Sep2020 - 04Oct2020): finished 1553 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tTUR,  4th phase (24May2020 - 13Jun2020): finished  196 trials in 0 min  5 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tTUR,  2nd phase (30Apr2020 - 08May2020): finished 1077 trials in 0 min 35 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tMKD,  9th phase (03Sep2020 - 15Sep2020): finished 1711 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tRUS, 11th phase (03Sep2020 - 19Sep2020): finished 1760 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tRUS,  7th phase (05Jul2020 - 17Jul2020): finished 1791 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tRUS,  5th phase (14Jun2020 - 23Jun2020): finished 1818 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tUSA, 11th phase (19Sep2020 - 04Oct2020): finished  963 trials in 0 min 25 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tITA, 10th phase (13Sep2020 - 23Sep2020): finished  248 trials in 0 min  5 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tUSA,  1st phase (20Apr2020 - 10May2020): finished 1860 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tUSA,  0th phase (09Feb2020 - 19Apr2020): finished 1811 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tRUS,  0th phase (12Feb2020 - 06May2020): finished 1872 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tITA,  2nd phase (29Mar2020 - 08Apr2020): finished 1879 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tRUS,  6th phase (24Jun2020 - 04Jul2020): finished 1895 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tRUS,  1st phase (07May2020 - 16May2020): finished 1920 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tBHR,  5th phase (08Jul2020 - 18Jul2020): finished 1919 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tUSA,  2nd phase (11May2020 - 05Jun2020): finished 1901 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tUSA, 10th phase (04Sep2020 - 18Sep2020): finished 1120 trials in 0 min 30 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tUSA,  3rd phase (06Jun2020 - 24Jun2020): finished 1109 trials in 0 min 30 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tIRN,  3rd phase (15May2020 - 31May2020): finished  237 trials in 0 min  5 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tUSA,  4th phase (25Jun2020 - 07Jul2020): finished 1904 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tARE,  6th phase (04Jul2020 - 22Jul2020): finished 1910 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tARE,  9th phase (08Sep2020 - 17Sep2020): finished 1914 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tTUR, 10th phase (06Sep2020 - 19Sep2020): finished  236 trials in 0 min  5 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tARE,  3rd phase (25May2020 - 05Jun2020): finished 1901 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tBHR,  3rd phase (14Jun2020 - 25Jun2020): finished 1879 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tTUR, 11th phase (20Sep2020 - 04Oct2020): finished  181 trials in 0 min  5 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tBRA,  0th phase (16Mar2020 - 27May2020): finished 1783 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tMKD,  5th phase (27Jul2020 - 05Aug2020): finished 1136 trials in 0 min 35 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tIRN,  5th phase (17Jun2020 - 01Jul2020): finished 1634 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tITA,  1st phase (21Mar2020 - 28Mar2020): finished 1627 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tUSA,  6th phase (18Jul2020 - 28Jul2020): finished  195 trials in 0 min  5 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tMKD,  7th phase (15Aug2020 - 22Aug2020): finished 1649 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tTUR,  5th phase (14Jun2020 - 27Jun2020): finished 1314 trials in 0 min 45 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tITA,  5th phase (01May2020 - 11May2020): finished  469 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tBHR,  8th phase (19Aug2020 - 03Sep2020): finished  659 trials in 0 min 15 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tBRA,  4th phase (09Jul2020 - 20Jul2020): finished  458 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tBHR,  2nd phase (02Jun2020 - 13Jun2020): finished 1922 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tMKD,  3rd phase (07Jul2020 - 15Jul2020): finished 1947 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tPRT,  2nd phase (15May2020 - 30May2020): finished 1952 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tBRA,  9th phase (25Aug2020 - 02Sep2020): finished  469 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tMKD,  2nd phase (25Jun2020 - 06Jul2020): finished 1920 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tPRT,  5th phase (26Jun2020 - 08Jul2020): finished 1924 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tARE,  7th phase (23Jul2020 - 19Aug2020): finished 1895 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tTUR,  6th phase (28Jun2020 - 14Jul2020): finished  455 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tBHR,  6th phase (19Jul2020 - 03Aug2020): finished  248 trials in 0 min  5 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tBRA,  5th phase (21Jul2020 - 28Jul2020): finished 1933 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tIRN,  9th phase (17Aug2020 - 05Sep2020): finished  463 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tIRN,  1st phase (30Mar2020 - 17Apr2020): finished 1933 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tBHR, 10th phase (15Sep2020 - 22Sep2020): finished  463 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tBHR,  0th phase (06Mar2020 - 05May2020): finished 1888 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tBRA,  8th phase (14Aug2020 - 24Aug2020): finished 1968 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tMKD,  0th phase (13Mar2020 - 05Jun2020): finished 1892 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tMKD, 11th phase (25Sep2020 - 04Oct2020): finished  252 trials in 0 min  5 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tRUS,  8th phase (18Jul2020 - 31Jul2020): finished 1981 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tMKD,  6th phase (06Aug2020 - 14Aug2020): finished 1993 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tARE,  2nd phase (15May2020 - 24May2020): finished 1982 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tTUR,  8th phase (04Aug2020 - 21Aug2020): finished  472 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tPRT,  0th phase (14Mar2020 - 28Apr2020): finished 1964 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tIRN,  4th phase (01Jun2020 - 16Jun2020): finished 1871 trials in 0 min 55 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tIRN, 10th phase (06Sep2020 - 20Sep2020): finished 2007 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tRUS,  4th phase (05Jun2020 - 13Jun2020): finished 2021 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tIRN,  8th phase (01Aug2020 - 16Aug2020): finished  240 trials in 0 min  5 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tPRT,  7th phase (24Jul2020 - 13Aug2020): finished 2013 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tBRA, 11th phase (17Sep2020 - 04Oct2020): finished 2037 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tBRA, 10th phase (03Sep2020 - 16Sep2020): finished 2038 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tIRN,  7th phase (16Jul2020 - 31Jul2020): finished 2028 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tPRT, 10th phase (15Sep2020 - 23Sep2020): finished 2031 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tITA,  4th phase (19Apr2020 - 30Apr2020): finished 2105 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "Completed optimization. Total: 24 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      }
     ],
     "prompt_number": 11
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "# Show summary\n",
      "analyser.summary(countries=countries_show)"
     ],
     "language": "python",
     "metadata": {},
     "outputs": [
      {
       "html": [
        "<div>\n",
        "<style scoped>\n",
        "    .dataframe tbody tr th:only-of-type {\n",
        "        vertical-align: middle;\n",
        "    }\n",
        "\n",
        "    .dataframe tbody tr th {\n",
        "        vertical-align: top;\n",
        "    }\n",
        "\n",
        "    .dataframe thead th {\n",
        "        text-align: right;\n",
        "    }\n",
        "</style>\n",
        "<table border=\"1\" class=\"dataframe\">\n",
        "  <thead>\n",
        "    <tr style=\"text-align: right;\">\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th>Type</th>\n",
        "      <th>Start</th>\n",
        "      <th>End</th>\n",
        "      <th>Population</th>\n",
        "      <th>ODE</th>\n",
        "      <th>Rt</th>\n",
        "      <th>theta</th>\n",
        "      <th>kappa</th>\n",
        "      <th>rho</th>\n",
        "      <th>sigma</th>\n",
        "      <th>tau</th>\n",
        "      <th>alpha1 [-]</th>\n",
        "      <th>1/gamma [day]</th>\n",
        "      <th>1/beta [day]</th>\n",
        "      <th>1/alpha2 [day]</th>\n",
        "      <th>RMSLE</th>\n",
        "      <th>Trials</th>\n",
        "      <th>Runtime</th>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>Country</th>\n",
        "      <th>Phase</th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "    </tr>\n",
        "  </thead>\n",
        "  <tbody>\n",
        "    <tr>\n",
        "      <th rowspan=\"13\" valign=\"top\">Russia</th>\n",
        "      <th>0th</th>\n",
        "      <td>Past</td>\n",
        "      <td>12Feb2020</td>\n",
        "      <td>06May2020</td>\n",
        "      <td>330457362</td>\n",
        "      <td>SIR-F</td>\n",
        "      <td>0.02</td>\n",
        "      <td>0.602763</td>\n",
        "      <td>0.544883</td>\n",
        "      <td>0.0340813</td>\n",
        "      <td>0.00229851</td>\n",
        "      <td>360</td>\n",
        "      <td>0.603</td>\n",
        "      <td>108</td>\n",
        "      <td>7</td>\n",
        "      <td>0</td>\n",
        "      <td>18.9667</td>\n",
        "      <td>1872</td>\n",
        "      <td>1 min  0 sec</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>1st</th>\n",
        "      <td>Past</td>\n",
        "      <td>07May2020</td>\n",
        "      <td>16May2020</td>\n",
        "      <td>330457362</td>\n",
        "      <td>SIR-F</td>\n",
        "      <td>2.51</td>\n",
        "      <td>0.000729031</td>\n",
        "      <td>0.000119717</td>\n",
        "      <td>0.0129583</td>\n",
        "      <td>0.00504465</td>\n",
        "      <td>360</td>\n",
        "      <td>0.001</td>\n",
        "      <td>49</td>\n",
        "      <td>19</td>\n",
        "      <td>2088</td>\n",
        "      <td>0.0742295</td>\n",
        "      <td>1920</td>\n",
        "      <td>1 min  0 sec</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>2nd</th>\n",
        "      <td>Past</td>\n",
        "      <td>17May2020</td>\n",
        "      <td>26May2020</td>\n",
        "      <td>330457362</td>\n",
        "      <td>SIR-F</td>\n",
        "      <td>1.59</td>\n",
        "      <td>0.000437993</td>\n",
        "      <td>9.8046e-05</td>\n",
        "      <td>0.00703411</td>\n",
        "      <td>0.00431289</td>\n",
        "      <td>360</td>\n",
        "      <td>0</td>\n",
        "      <td>57</td>\n",
        "      <td>35</td>\n",
        "      <td>2549</td>\n",
        "      <td>0.0869176</td>\n",
        "      <td>1533</td>\n",
        "      <td>1 min  0 sec</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>3rd</th>\n",
        "      <td>Past</td>\n",
        "      <td>27May2020</td>\n",
        "      <td>04Jun2020</td>\n",
        "      <td>330457362</td>\n",
        "      <td>SIR-F</td>\n",
        "      <td>1.03</td>\n",
        "      <td>0.000708362</td>\n",
        "      <td>0.000116581</td>\n",
        "      <td>0.00547912</td>\n",
        "      <td>0.00519557</td>\n",
        "      <td>360</td>\n",
        "      <td>0.001</td>\n",
        "      <td>48</td>\n",
        "      <td>45</td>\n",
        "      <td>2144</td>\n",
        "      <td>0.0672237</td>\n",
        "      <td>1941</td>\n",
        "      <td>1 min  0 sec</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>4th</th>\n",
        "      <td>Past</td>\n",
        "      <td>05Jun2020</td>\n",
        "      <td>13Jun2020</td>\n",
        "      <td>330457362</td>\n",
        "      <td>SIR-F</td>\n",
        "      <td>1.25</td>\n",
        "      <td>0.000825421</td>\n",
        "      <td>8.45185e-05</td>\n",
        "      <td>0.00464652</td>\n",
        "      <td>0.00362314</td>\n",
        "      <td>360</td>\n",
        "      <td>0.001</td>\n",
        "      <td>69</td>\n",
        "      <td>53</td>\n",
        "      <td>2957</td>\n",
        "      <td>0.0483449</td>\n",
        "      <td>2021</td>\n",
        "      <td>1 min  0 sec</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>5th</th>\n",
        "      <td>Past</td>\n",
        "      <td>14Jun2020</td>\n",
        "      <td>23Jun2020</td>\n",
        "      <td>330457362</td>\n",
        "      <td>SIR-F</td>\n",
        "      <td>0.82</td>\n",
        "      <td>0.000348462</td>\n",
        "      <td>7.90578e-05</td>\n",
        "      <td>0.00346657</td>\n",
        "      <td>0.0041384</td>\n",
        "      <td>360</td>\n",
        "      <td>0</td>\n",
        "      <td>60</td>\n",
        "      <td>72</td>\n",
        "      <td>3162</td>\n",
        "      <td>0.0638472</td>\n",
        "      <td>1818</td>\n",
        "      <td>1 min  0 sec</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>6th</th>\n",
        "      <td>Past</td>\n",
        "      <td>24Jun2020</td>\n",
        "      <td>04Jul2020</td>\n",
        "      <td>330457362</td>\n",
        "      <td>SIR-F</td>\n",
        "      <td>0.94</td>\n",
        "      <td>0.0188683</td>\n",
        "      <td>1.10558e-05</td>\n",
        "      <td>0.00256772</td>\n",
        "      <td>0.00267148</td>\n",
        "      <td>360</td>\n",
        "      <td>0.019</td>\n",
        "      <td>93</td>\n",
        "      <td>97</td>\n",
        "      <td>22612</td>\n",
        "      <td>0.0500926</td>\n",
        "      <td>1895</td>\n",
        "      <td>1 min  0 sec</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>7th</th>\n",
        "      <td>Past</td>\n",
        "      <td>05Jul2020</td>\n",
        "      <td>17Jul2020</td>\n",
        "      <td>330457362</td>\n",
        "      <td>SIR-F</td>\n",
        "      <td>0.71</td>\n",
        "      <td>0.000383137</td>\n",
        "      <td>6.35698e-05</td>\n",
        "      <td>0.00219301</td>\n",
        "      <td>0.00304168</td>\n",
        "      <td>360</td>\n",
        "      <td>0</td>\n",
        "      <td>82</td>\n",
        "      <td>113</td>\n",
        "      <td>3932</td>\n",
        "      <td>0.0720015</td>\n",
        "      <td>1791</td>\n",
        "      <td>1 min  0 sec</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>8th</th>\n",
        "      <td>Past</td>\n",
        "      <td>18Jul2020</td>\n",
        "      <td>31Jul2020</td>\n",
        "      <td>330457362</td>\n",
        "      <td>SIR-F</td>\n",
        "      <td>0.76</td>\n",
        "      <td>0.0167783</td>\n",
        "      <td>9.85096e-06</td>\n",
        "      <td>0.00184458</td>\n",
        "      <td>0.00237292</td>\n",
        "      <td>360</td>\n",
        "      <td>0.017</td>\n",
        "      <td>105</td>\n",
        "      <td>135</td>\n",
        "      <td>25378</td>\n",
        "      <td>0.060159</td>\n",
        "      <td>1981</td>\n",
        "      <td>1 min  0 sec</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>9th</th>\n",
        "      <td>Past</td>\n",
        "      <td>01Aug2020</td>\n",
        "      <td>16Aug2020</td>\n",
        "      <td>330457362</td>\n",
        "      <td>-</td>\n",
        "      <td>-</td>\n",
        "      <td>-</td>\n",
        "      <td>-</td>\n",
        "      <td>-</td>\n",
        "      <td>-</td>\n",
        "      <td>-</td>\n",
        "      <td>-</td>\n",
        "      <td>-</td>\n",
        "      <td>-</td>\n",
        "      <td>-</td>\n",
        "      <td>-</td>\n",
        "      <td>-</td>\n",
        "      <td>-</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>10th</th>\n",
        "      <td>Past</td>\n",
        "      <td>17Aug2020</td>\n",
        "      <td>02Sep2020</td>\n",
        "      <td>330457362</td>\n",
        "      <td>SIR-F</td>\n",
        "      <td>0.81</td>\n",
        "      <td>0.0180826</td>\n",
        "      <td>6.10105e-06</td>\n",
        "      <td>0.00125223</td>\n",
        "      <td>0.00150289</td>\n",
        "      <td>360</td>\n",
        "      <td>0.018</td>\n",
        "      <td>166</td>\n",
        "      <td>199</td>\n",
        "      <td>40976</td>\n",
        "      <td>0.0518301</td>\n",
        "      <td>1928</td>\n",
        "      <td>1 min  0 sec</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>11th</th>\n",
        "      <td>Past</td>\n",
        "      <td>03Sep2020</td>\n",
        "      <td>19Sep2020</td>\n",
        "      <td>330457362</td>\n",
        "      <td>SIR-F</td>\n",
        "      <td>0.99</td>\n",
        "      <td>0.00423189</td>\n",
        "      <td>2.37659e-05</td>\n",
        "      <td>0.00127485</td>\n",
        "      <td>0.00125617</td>\n",
        "      <td>360</td>\n",
        "      <td>0.004</td>\n",
        "      <td>199</td>\n",
        "      <td>196</td>\n",
        "      <td>10519</td>\n",
        "      <td>0.043957</td>\n",
        "      <td>1760</td>\n",
        "      <td>1 min  0 sec</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>12th</th>\n",
        "      <td>Past</td>\n",
        "      <td>20Sep2020</td>\n",
        "      <td>04Oct2020</td>\n",
        "      <td>330457362</td>\n",
        "      <td>-</td>\n",
        "      <td>-</td>\n",
        "      <td>-</td>\n",
        "      <td>-</td>\n",
        "      <td>-</td>\n",
        "      <td>-</td>\n",
        "      <td>-</td>\n",
        "      <td>-</td>\n",
        "      <td>-</td>\n",
        "      <td>-</td>\n",
        "      <td>-</td>\n",
        "      <td>-</td>\n",
        "      <td>-</td>\n",
        "      <td>-</td>\n",
        "    </tr>\n",
        "  </tbody>\n",
        "</table>\n",
        "</div>"
       ],
       "output_type": "pyout",
       "prompt_number": 12,
       "text": [
        "               Type      Start        End  Population    ODE    Rt  \\\n",
        "Country Phase                                                        \n",
        "Russia  0th    Past  12Feb2020  06May2020   330457362  SIR-F  0.02   \n",
        "        1st    Past  07May2020  16May2020   330457362  SIR-F  2.51   \n",
        "        2nd    Past  17May2020  26May2020   330457362  SIR-F  1.59   \n",
        "        3rd    Past  27May2020  04Jun2020   330457362  SIR-F  1.03   \n",
        "        4th    Past  05Jun2020  13Jun2020   330457362  SIR-F  1.25   \n",
        "        5th    Past  14Jun2020  23Jun2020   330457362  SIR-F  0.82   \n",
        "        6th    Past  24Jun2020  04Jul2020   330457362  SIR-F  0.94   \n",
        "        7th    Past  05Jul2020  17Jul2020   330457362  SIR-F  0.71   \n",
        "        8th    Past  18Jul2020  31Jul2020   330457362  SIR-F  0.76   \n",
        "        9th    Past  01Aug2020  16Aug2020   330457362      -     -   \n",
        "        10th   Past  17Aug2020  02Sep2020   330457362  SIR-F  0.81   \n",
        "        11th   Past  03Sep2020  19Sep2020   330457362  SIR-F  0.99   \n",
        "        12th   Past  20Sep2020  04Oct2020   330457362      -     -   \n",
        "\n",
        "                     theta        kappa         rho       sigma  tau  \\\n",
        "Country Phase                                                          \n",
        "Russia  0th       0.602763     0.544883   0.0340813  0.00229851  360   \n",
        "        1st    0.000729031  0.000119717   0.0129583  0.00504465  360   \n",
        "        2nd    0.000437993   9.8046e-05  0.00703411  0.00431289  360   \n",
        "        3rd    0.000708362  0.000116581  0.00547912  0.00519557  360   \n",
        "        4th    0.000825421  8.45185e-05  0.00464652  0.00362314  360   \n",
        "        5th    0.000348462  7.90578e-05  0.00346657   0.0041384  360   \n",
        "        6th      0.0188683  1.10558e-05  0.00256772  0.00267148  360   \n",
        "        7th    0.000383137  6.35698e-05  0.00219301  0.00304168  360   \n",
        "        8th      0.0167783  9.85096e-06  0.00184458  0.00237292  360   \n",
        "        9th              -            -           -           -    -   \n",
        "        10th     0.0180826  6.10105e-06  0.00125223  0.00150289  360   \n",
        "        11th    0.00423189  2.37659e-05  0.00127485  0.00125617  360   \n",
        "        12th             -            -           -           -    -   \n",
        "\n",
        "              alpha1 [-] 1/gamma [day] 1/beta [day] 1/alpha2 [day]      RMSLE  \\\n",
        "Country Phase                                                                   \n",
        "Russia  0th        0.603           108            7              0    18.9667   \n",
        "        1st        0.001            49           19           2088  0.0742295   \n",
        "        2nd            0            57           35           2549  0.0869176   \n",
        "        3rd        0.001            48           45           2144  0.0672237   \n",
        "        4th        0.001            69           53           2957  0.0483449   \n",
        "        5th            0            60           72           3162  0.0638472   \n",
        "        6th        0.019            93           97          22612  0.0500926   \n",
        "        7th            0            82          113           3932  0.0720015   \n",
        "        8th        0.017           105          135          25378   0.060159   \n",
        "        9th            -             -            -              -          -   \n",
        "        10th       0.018           166          199          40976  0.0518301   \n",
        "        11th       0.004           199          196          10519   0.043957   \n",
        "        12th           -             -            -              -          -   \n",
        "\n",
        "              Trials       Runtime  \n",
        "Country Phase                       \n",
        "Russia  0th     1872  1 min  0 sec  \n",
        "        1st     1920  1 min  0 sec  \n",
        "        2nd     1533  1 min  0 sec  \n",
        "        3rd     1941  1 min  0 sec  \n",
        "        4th     2021  1 min  0 sec  \n",
        "        5th     1818  1 min  0 sec  \n",
        "        6th     1895  1 min  0 sec  \n",
        "        7th     1791  1 min  0 sec  \n",
        "        8th     1981  1 min  0 sec  \n",
        "        9th        -             -  \n",
        "        10th    1928  1 min  0 sec  \n",
        "        11th    1760  1 min  0 sec  \n",
        "        12th       -             -  "
       ]
      }
     ],
     "prompt_number": 12
    },
    {
     "cell_type": "markdown",
     "metadata": {},
     "source": [
      "## Compare the history of parameters\n",
      "Here, compare the history of parameter values if countries."
     ]
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "# All parameter/day parameter/Rt/OxCGRT\n",
      "analyser.track().head()"
     ],
     "language": "python",
     "metadata": {},
     "outputs": [
      {
       "html": [
        "<div>\n",
        "<style scoped>\n",
        "    .dataframe tbody tr th:only-of-type {\n",
        "        vertical-align: middle;\n",
        "    }\n",
        "\n",
        "    .dataframe tbody tr th {\n",
        "        vertical-align: top;\n",
        "    }\n",
        "\n",
        "    .dataframe thead th {\n",
        "        text-align: right;\n",
        "    }\n",
        "</style>\n",
        "<table border=\"1\" class=\"dataframe\">\n",
        "  <thead>\n",
        "    <tr style=\"text-align: right;\">\n",
        "      <th></th>\n",
        "      <th>Date</th>\n",
        "      <th>Country</th>\n",
        "      <th>theta</th>\n",
        "      <th>kappa</th>\n",
        "      <th>rho</th>\n",
        "      <th>sigma</th>\n",
        "      <th>alpha1 [-]</th>\n",
        "      <th>1/alpha2 [day]</th>\n",
        "      <th>1/beta [day]</th>\n",
        "      <th>1/gamma [day]</th>\n",
        "      <th>...</th>\n",
        "      <th>Cancel_events</th>\n",
        "      <th>Gatherings_restrictions</th>\n",
        "      <th>Transport_closing</th>\n",
        "      <th>Stay_home_restrictions</th>\n",
        "      <th>Internal_movement_restrictions</th>\n",
        "      <th>International_movement_restrictions</th>\n",
        "      <th>Information_campaigns</th>\n",
        "      <th>Testing_policy</th>\n",
        "      <th>Contact_tracing</th>\n",
        "      <th>Stringency_index</th>\n",
        "    </tr>\n",
        "  </thead>\n",
        "  <tbody>\n",
        "    <tr>\n",
        "      <th>0</th>\n",
        "      <td>2020-02-09</td>\n",
        "      <td>United States</td>\n",
        "      <td>0.00237777</td>\n",
        "      <td>0.000538589</td>\n",
        "      <td>0.0133965</td>\n",
        "      <td>0.00139547</td>\n",
        "      <td>0.002</td>\n",
        "      <td>464</td>\n",
        "      <td>18</td>\n",
        "      <td>179</td>\n",
        "      <td>...</td>\n",
        "      <td>0</td>\n",
        "      <td>0</td>\n",
        "      <td>0</td>\n",
        "      <td>0</td>\n",
        "      <td>0</td>\n",
        "      <td>2</td>\n",
        "      <td>0</td>\n",
        "      <td>0</td>\n",
        "      <td>1</td>\n",
        "      <td>5.56</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>1</th>\n",
        "      <td>2020-02-09</td>\n",
        "      <td>United States</td>\n",
        "      <td>0.00237777</td>\n",
        "      <td>0.000538589</td>\n",
        "      <td>0.0133965</td>\n",
        "      <td>0.00139547</td>\n",
        "      <td>0.002</td>\n",
        "      <td>464</td>\n",
        "      <td>18</td>\n",
        "      <td>179</td>\n",
        "      <td>...</td>\n",
        "      <td>0</td>\n",
        "      <td>0</td>\n",
        "      <td>0</td>\n",
        "      <td>0</td>\n",
        "      <td>0</td>\n",
        "      <td>0</td>\n",
        "      <td>0</td>\n",
        "      <td>0</td>\n",
        "      <td>0</td>\n",
        "      <td>0.00</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>2</th>\n",
        "      <td>2020-02-09</td>\n",
        "      <td>United States</td>\n",
        "      <td>0.00237777</td>\n",
        "      <td>0.000538589</td>\n",
        "      <td>0.0133965</td>\n",
        "      <td>0.00139547</td>\n",
        "      <td>0.002</td>\n",
        "      <td>464</td>\n",
        "      <td>18</td>\n",
        "      <td>179</td>\n",
        "      <td>...</td>\n",
        "      <td>0</td>\n",
        "      <td>0</td>\n",
        "      <td>0</td>\n",
        "      <td>0</td>\n",
        "      <td>0</td>\n",
        "      <td>0</td>\n",
        "      <td>0</td>\n",
        "      <td>0</td>\n",
        "      <td>0</td>\n",
        "      <td>0.00</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>3</th>\n",
        "      <td>2020-02-09</td>\n",
        "      <td>United States</td>\n",
        "      <td>0.00237777</td>\n",
        "      <td>0.000538589</td>\n",
        "      <td>0.0133965</td>\n",
        "      <td>0.00139547</td>\n",
        "      <td>0.002</td>\n",
        "      <td>464</td>\n",
        "      <td>18</td>\n",
        "      <td>179</td>\n",
        "      <td>...</td>\n",
        "      <td>0</td>\n",
        "      <td>0</td>\n",
        "      <td>0</td>\n",
        "      <td>0</td>\n",
        "      <td>0</td>\n",
        "      <td>0</td>\n",
        "      <td>0</td>\n",
        "      <td>0</td>\n",
        "      <td>0</td>\n",
        "      <td>0.00</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>4</th>\n",
        "      <td>2020-02-09</td>\n",
        "      <td>United States</td>\n",
        "      <td>0.00237777</td>\n",
        "      <td>0.000538589</td>\n",
        "      <td>0.0133965</td>\n",
        "      <td>0.00139547</td>\n",
        "      <td>0.002</td>\n",
        "      <td>464</td>\n",
        "      <td>18</td>\n",
        "      <td>179</td>\n",
        "      <td>...</td>\n",
        "      <td>0</td>\n",
        "      <td>0</td>\n",
        "      <td>0</td>\n",
        "      <td>0</td>\n",
        "      <td>0</td>\n",
        "      <td>0</td>\n",
        "      <td>0</td>\n",
        "      <td>0</td>\n",
        "      <td>0</td>\n",
        "      <td>0.00</td>\n",
        "    </tr>\n",
        "  </tbody>\n",
        "</table>\n",
        "<p>5 rows \u00d7 23 columns</p>\n",
        "</div>"
       ],
       "output_type": "pyout",
       "prompt_number": 13,
       "text": [
        "        Date        Country       theta        kappa        rho       sigma  \\\n",
        "0 2020-02-09  United States  0.00237777  0.000538589  0.0133965  0.00139547   \n",
        "1 2020-02-09  United States  0.00237777  0.000538589  0.0133965  0.00139547   \n",
        "2 2020-02-09  United States  0.00237777  0.000538589  0.0133965  0.00139547   \n",
        "3 2020-02-09  United States  0.00237777  0.000538589  0.0133965  0.00139547   \n",
        "4 2020-02-09  United States  0.00237777  0.000538589  0.0133965  0.00139547   \n",
        "\n",
        "  alpha1 [-] 1/alpha2 [day] 1/beta [day] 1/gamma [day]  ... Cancel_events  \\\n",
        "0      0.002            464           18           179  ...             0   \n",
        "1      0.002            464           18           179  ...             0   \n",
        "2      0.002            464           18           179  ...             0   \n",
        "3      0.002            464           18           179  ...             0   \n",
        "4      0.002            464           18           179  ...             0   \n",
        "\n",
        "   Gatherings_restrictions  Transport_closing  Stay_home_restrictions  \\\n",
        "0                        0                  0                       0   \n",
        "1                        0                  0                       0   \n",
        "2                        0                  0                       0   \n",
        "3                        0                  0                       0   \n",
        "4                        0                  0                       0   \n",
        "\n",
        "   Internal_movement_restrictions  International_movement_restrictions  \\\n",
        "0                               0                                    2   \n",
        "1                               0                                    0   \n",
        "2                               0                                    0   \n",
        "3                               0                                    0   \n",
        "4                               0                                    0   \n",
        "\n",
        "   Information_campaigns  Testing_policy  Contact_tracing  Stringency_index  \n",
        "0                      0               0                1              5.56  \n",
        "1                      0               0                0              0.00  \n",
        "2                      0               0                0              0.00  \n",
        "3                      0               0                0              0.00  \n",
        "4                      0               0                0              0.00  \n",
        "\n",
        "[5 rows x 23 columns]"
       ]
      }
     ],
     "prompt_number": 13
    },
    {
     "cell_type": "heading",
     "level": 3,
     "metadata": {},
     "source": [
      "$Rt$: Reprodcution number $\\mathrm{[-]}$"
     ]
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "analyser.param_history(\"Rt\", roll_window=None).tail()"
     ],
     "language": "python",
     "metadata": {},
     "outputs": [
      {
       "output_type": "display_data",
       "png": "\n",
       "text": [
        "<Figure size 648x432 with 1 Axes>"
       ]
      },
      {
       "html": [
        "<div>\n",
        "<style scoped>\n",
        "    .dataframe tbody tr th:only-of-type {\n",
        "        vertical-align: middle;\n",
        "    }\n",
        "\n",
        "    .dataframe tbody tr th {\n",
        "        vertical-align: top;\n",
        "    }\n",
        "\n",
        "    .dataframe thead th {\n",
        "        text-align: right;\n",
        "    }\n",
        "</style>\n",
        "<table border=\"1\" class=\"dataframe\">\n",
        "  <thead>\n",
        "    <tr style=\"text-align: right;\">\n",
        "      <th>Country</th>\n",
        "      <th>Bahrain</th>\n",
        "      <th>Brazil</th>\n",
        "      <th>Iran</th>\n",
        "      <th>Italy</th>\n",
        "      <th>Macedonia</th>\n",
        "      <th>Portugal</th>\n",
        "      <th>Russia</th>\n",
        "      <th>Turkey</th>\n",
        "      <th>United Arab Emirates</th>\n",
        "      <th>United States</th>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>Date</th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "    </tr>\n",
        "  </thead>\n",
        "  <tbody>\n",
        "    <tr>\n",
        "      <th>2020-09-30</th>\n",
        "      <td>0.87</td>\n",
        "      <td>0.93</td>\n",
        "      <td>1.55</td>\n",
        "      <td>1.83</td>\n",
        "      <td>1.44</td>\n",
        "      <td>1.84</td>\n",
        "      <td>0.99</td>\n",
        "      <td>1.16</td>\n",
        "      <td>0.95</td>\n",
        "      <td>1.74</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>2020-10-01</th>\n",
        "      <td>0.87</td>\n",
        "      <td>0.93</td>\n",
        "      <td>1.55</td>\n",
        "      <td>1.83</td>\n",
        "      <td>1.44</td>\n",
        "      <td>1.84</td>\n",
        "      <td>0.99</td>\n",
        "      <td>1.16</td>\n",
        "      <td>0.95</td>\n",
        "      <td>1.74</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>2020-10-02</th>\n",
        "      <td>0.87</td>\n",
        "      <td>0.93</td>\n",
        "      <td>1.55</td>\n",
        "      <td>1.83</td>\n",
        "      <td>1.44</td>\n",
        "      <td>1.84</td>\n",
        "      <td>0.99</td>\n",
        "      <td>1.16</td>\n",
        "      <td>0.95</td>\n",
        "      <td>1.74</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>2020-10-03</th>\n",
        "      <td>0.87</td>\n",
        "      <td>0.93</td>\n",
        "      <td>1.55</td>\n",
        "      <td>1.83</td>\n",
        "      <td>1.44</td>\n",
        "      <td>1.84</td>\n",
        "      <td>0.99</td>\n",
        "      <td>1.16</td>\n",
        "      <td>0.95</td>\n",
        "      <td>1.74</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>2020-10-04</th>\n",
        "      <td>0.87</td>\n",
        "      <td>0.93</td>\n",
        "      <td>1.55</td>\n",
        "      <td>1.83</td>\n",
        "      <td>1.44</td>\n",
        "      <td>1.84</td>\n",
        "      <td>0.99</td>\n",
        "      <td>1.16</td>\n",
        "      <td>0.95</td>\n",
        "      <td>1.74</td>\n",
        "    </tr>\n",
        "  </tbody>\n",
        "</table>\n",
        "</div>"
       ],
       "output_type": "pyout",
       "prompt_number": 14,
       "text": [
        "Country     Bahrain  Brazil  Iran  Italy  Macedonia  Portugal  Russia  Turkey  \\\n",
        "Date                                                                            \n",
        "2020-09-30     0.87    0.93  1.55   1.83       1.44      1.84    0.99    1.16   \n",
        "2020-10-01     0.87    0.93  1.55   1.83       1.44      1.84    0.99    1.16   \n",
        "2020-10-02     0.87    0.93  1.55   1.83       1.44      1.84    0.99    1.16   \n",
        "2020-10-03     0.87    0.93  1.55   1.83       1.44      1.84    0.99    1.16   \n",
        "2020-10-04     0.87    0.93  1.55   1.83       1.44      1.84    0.99    1.16   \n",
        "\n",
        "Country     United Arab Emirates  United States  \n",
        "Date                                             \n",
        "2020-09-30                  0.95           1.74  \n",
        "2020-10-01                  0.95           1.74  \n",
        "2020-10-02                  0.95           1.74  \n",
        "2020-10-03                  0.95           1.74  \n",
        "2020-10-04                  0.95           1.74  "
       ]
      }
     ],
     "prompt_number": 14
    },
    {
     "cell_type": "heading",
     "level": 3,
     "metadata": {},
     "source": [
      "$\\rho$: Effective contact rate $\\mathrm{[-]}$"
     ]
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "analyser.param_history(\"rho\", roll_window=None).tail()"
     ],
     "language": "python",
     "metadata": {},
     "outputs": [
      {
       "output_type": "display_data",
       "png": "\n",
       "text": [
        "<Figure size 648x432 with 1 Axes>"
       ]
      },
      {
       "html": [
        "<div>\n",
        "<style scoped>\n",
        "    .dataframe tbody tr th:only-of-type {\n",
        "        vertical-align: middle;\n",
        "    }\n",
        "\n",
        "    .dataframe tbody tr th {\n",
        "        vertical-align: top;\n",
        "    }\n",
        "\n",
        "    .dataframe thead th {\n",
        "        text-align: right;\n",
        "    }\n",
        "</style>\n",
        "<table border=\"1\" class=\"dataframe\">\n",
        "  <thead>\n",
        "    <tr style=\"text-align: right;\">\n",
        "      <th>Country</th>\n",
        "      <th>Bahrain</th>\n",
        "      <th>Brazil</th>\n",
        "      <th>Iran</th>\n",
        "      <th>Italy</th>\n",
        "      <th>Macedonia</th>\n",
        "      <th>Portugal</th>\n",
        "      <th>Russia</th>\n",
        "      <th>Turkey</th>\n",
        "      <th>United Arab Emirates</th>\n",
        "      <th>United States</th>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>Date</th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "    </tr>\n",
        "  </thead>\n",
        "  <tbody>\n",
        "    <tr>\n",
        "      <th>2020-09-30</th>\n",
        "      <td>0.023615</td>\n",
        "      <td>0.017493</td>\n",
        "      <td>0.019329</td>\n",
        "      <td>0.009082</td>\n",
        "      <td>0.016411</td>\n",
        "      <td>0.002218</td>\n",
        "      <td>0.001275</td>\n",
        "      <td>0.012593</td>\n",
        "      <td>0.026205</td>\n",
        "      <td>0.002536</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>2020-10-01</th>\n",
        "      <td>0.023615</td>\n",
        "      <td>0.017493</td>\n",
        "      <td>0.019329</td>\n",
        "      <td>0.009082</td>\n",
        "      <td>0.016411</td>\n",
        "      <td>0.002218</td>\n",
        "      <td>0.001275</td>\n",
        "      <td>0.012593</td>\n",
        "      <td>0.026205</td>\n",
        "      <td>0.002536</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>2020-10-02</th>\n",
        "      <td>0.023615</td>\n",
        "      <td>0.017493</td>\n",
        "      <td>0.019329</td>\n",
        "      <td>0.009082</td>\n",
        "      <td>0.016411</td>\n",
        "      <td>0.002218</td>\n",
        "      <td>0.001275</td>\n",
        "      <td>0.012593</td>\n",
        "      <td>0.026205</td>\n",
        "      <td>0.002536</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>2020-10-03</th>\n",
        "      <td>0.023615</td>\n",
        "      <td>0.017493</td>\n",
        "      <td>0.019329</td>\n",
        "      <td>0.009082</td>\n",
        "      <td>0.016411</td>\n",
        "      <td>0.002218</td>\n",
        "      <td>0.001275</td>\n",
        "      <td>0.012593</td>\n",
        "      <td>0.026205</td>\n",
        "      <td>0.002536</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>2020-10-04</th>\n",
        "      <td>0.023615</td>\n",
        "      <td>0.017493</td>\n",
        "      <td>0.019329</td>\n",
        "      <td>0.009082</td>\n",
        "      <td>0.016411</td>\n",
        "      <td>0.002218</td>\n",
        "      <td>0.001275</td>\n",
        "      <td>0.012593</td>\n",
        "      <td>0.026205</td>\n",
        "      <td>0.002536</td>\n",
        "    </tr>\n",
        "  </tbody>\n",
        "</table>\n",
        "</div>"
       ],
       "output_type": "pyout",
       "prompt_number": 15,
       "text": [
        "Country      Bahrain    Brazil      Iran     Italy  Macedonia  Portugal  \\\n",
        "Date                                                                      \n",
        "2020-09-30  0.023615  0.017493  0.019329  0.009082   0.016411  0.002218   \n",
        "2020-10-01  0.023615  0.017493  0.019329  0.009082   0.016411  0.002218   \n",
        "2020-10-02  0.023615  0.017493  0.019329  0.009082   0.016411  0.002218   \n",
        "2020-10-03  0.023615  0.017493  0.019329  0.009082   0.016411  0.002218   \n",
        "2020-10-04  0.023615  0.017493  0.019329  0.009082   0.016411  0.002218   \n",
        "\n",
        "Country       Russia    Turkey  United Arab Emirates  United States  \n",
        "Date                                                                 \n",
        "2020-09-30  0.001275  0.012593              0.026205       0.002536  \n",
        "2020-10-01  0.001275  0.012593              0.026205       0.002536  \n",
        "2020-10-02  0.001275  0.012593              0.026205       0.002536  \n",
        "2020-10-03  0.001275  0.012593              0.026205       0.002536  \n",
        "2020-10-04  0.001275  0.012593              0.026205       0.002536  "
       ]
      }
     ],
     "prompt_number": 15
    },
    {
     "cell_type": "heading",
     "level": 3,
     "metadata": {},
     "source": [
      "$\\sigma$: Recovery rate $\\mathrm{[-]}$"
     ]
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "analyser.param_history(\"sigma\", roll_window=None).tail()"
     ],
     "language": "python",
     "metadata": {},
     "outputs": [
      {
       "output_type": "display_data",
       "png": "\n",
       "text": [
        "<Figure size 648x432 with 1 Axes>"
       ]
      },
      {
       "html": [
        "<div>\n",
        "<style scoped>\n",
        "    .dataframe tbody tr th:only-of-type {\n",
        "        vertical-align: middle;\n",
        "    }\n",
        "\n",
        "    .dataframe tbody tr th {\n",
        "        vertical-align: top;\n",
        "    }\n",
        "\n",
        "    .dataframe thead th {\n",
        "        text-align: right;\n",
        "    }\n",
        "</style>\n",
        "<table border=\"1\" class=\"dataframe\">\n",
        "  <thead>\n",
        "    <tr style=\"text-align: right;\">\n",
        "      <th>Country</th>\n",
        "      <th>Bahrain</th>\n",
        "      <th>Brazil</th>\n",
        "      <th>Iran</th>\n",
        "      <th>Italy</th>\n",
        "      <th>Macedonia</th>\n",
        "      <th>Portugal</th>\n",
        "      <th>Russia</th>\n",
        "      <th>Turkey</th>\n",
        "      <th>United Arab Emirates</th>\n",
        "      <th>United States</th>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>Date</th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "    </tr>\n",
        "  </thead>\n",
        "  <tbody>\n",
        "    <tr>\n",
        "      <th>2020-09-30</th>\n",
        "      <td>0.027178</td>\n",
        "      <td>0.018432</td>\n",
        "      <td>0.011554</td>\n",
        "      <td>0.004897</td>\n",
        "      <td>0.011128</td>\n",
        "      <td>0.001191</td>\n",
        "      <td>0.001256</td>\n",
        "      <td>0.010319</td>\n",
        "      <td>0.027449</td>\n",
        "      <td>0.001432</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>2020-10-01</th>\n",
        "      <td>0.027178</td>\n",
        "      <td>0.018432</td>\n",
        "      <td>0.011554</td>\n",
        "      <td>0.004897</td>\n",
        "      <td>0.011128</td>\n",
        "      <td>0.001191</td>\n",
        "      <td>0.001256</td>\n",
        "      <td>0.010319</td>\n",
        "      <td>0.027449</td>\n",
        "      <td>0.001432</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>2020-10-02</th>\n",
        "      <td>0.027178</td>\n",
        "      <td>0.018432</td>\n",
        "      <td>0.011554</td>\n",
        "      <td>0.004897</td>\n",
        "      <td>0.011128</td>\n",
        "      <td>0.001191</td>\n",
        "      <td>0.001256</td>\n",
        "      <td>0.010319</td>\n",
        "      <td>0.027449</td>\n",
        "      <td>0.001432</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>2020-10-03</th>\n",
        "      <td>0.027178</td>\n",
        "      <td>0.018432</td>\n",
        "      <td>0.011554</td>\n",
        "      <td>0.004897</td>\n",
        "      <td>0.011128</td>\n",
        "      <td>0.001191</td>\n",
        "      <td>0.001256</td>\n",
        "      <td>0.010319</td>\n",
        "      <td>0.027449</td>\n",
        "      <td>0.001432</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>2020-10-04</th>\n",
        "      <td>0.027178</td>\n",
        "      <td>0.018432</td>\n",
        "      <td>0.011554</td>\n",
        "      <td>0.004897</td>\n",
        "      <td>0.011128</td>\n",
        "      <td>0.001191</td>\n",
        "      <td>0.001256</td>\n",
        "      <td>0.010319</td>\n",
        "      <td>0.027449</td>\n",
        "      <td>0.001432</td>\n",
        "    </tr>\n",
        "  </tbody>\n",
        "</table>\n",
        "</div>"
       ],
       "output_type": "pyout",
       "prompt_number": 16,
       "text": [
        "Country      Bahrain    Brazil      Iran     Italy  Macedonia  Portugal  \\\n",
        "Date                                                                      \n",
        "2020-09-30  0.027178  0.018432  0.011554  0.004897   0.011128  0.001191   \n",
        "2020-10-01  0.027178  0.018432  0.011554  0.004897   0.011128  0.001191   \n",
        "2020-10-02  0.027178  0.018432  0.011554  0.004897   0.011128  0.001191   \n",
        "2020-10-03  0.027178  0.018432  0.011554  0.004897   0.011128  0.001191   \n",
        "2020-10-04  0.027178  0.018432  0.011554  0.004897   0.011128  0.001191   \n",
        "\n",
        "Country       Russia    Turkey  United Arab Emirates  United States  \n",
        "Date                                                                 \n",
        "2020-09-30  0.001256  0.010319              0.027449       0.001432  \n",
        "2020-10-01  0.001256  0.010319              0.027449       0.001432  \n",
        "2020-10-02  0.001256  0.010319              0.027449       0.001432  \n",
        "2020-10-03  0.001256  0.010319              0.027449       0.001432  \n",
        "2020-10-04  0.001256  0.010319              0.027449       0.001432  "
       ]
      }
     ],
     "prompt_number": 16
    },
    {
     "cell_type": "heading",
     "level": 3,
     "metadata": {},
     "source": [
      "$\\kappa$: Mortality rate of infected cases $\\mathrm{[-]}$"
     ]
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "analyser.param_history(\"kappa\", roll_window=None).tail()"
     ],
     "language": "python",
     "metadata": {},
     "outputs": [
      {
       "output_type": "display_data",
       "png": "\n",
       "text": [
        "<Figure size 648x432 with 1 Axes>"
       ]
      },
      {
       "html": [
        "<div>\n",
        "<style scoped>\n",
        "    .dataframe tbody tr th:only-of-type {\n",
        "        vertical-align: middle;\n",
        "    }\n",
        "\n",
        "    .dataframe tbody tr th {\n",
        "        vertical-align: top;\n",
        "    }\n",
        "\n",
        "    .dataframe thead th {\n",
        "        text-align: right;\n",
        "    }\n",
        "</style>\n",
        "<table border=\"1\" class=\"dataframe\">\n",
        "  <thead>\n",
        "    <tr style=\"text-align: right;\">\n",
        "      <th>Country</th>\n",
        "      <th>Bahrain</th>\n",
        "      <th>Brazil</th>\n",
        "      <th>Iran</th>\n",
        "      <th>Italy</th>\n",
        "      <th>Macedonia</th>\n",
        "      <th>Portugal</th>\n",
        "      <th>Russia</th>\n",
        "      <th>Turkey</th>\n",
        "      <th>United Arab Emirates</th>\n",
        "      <th>United States</th>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>Date</th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "    </tr>\n",
        "  </thead>\n",
        "  <tbody>\n",
        "    <tr>\n",
        "      <th>2020-09-30</th>\n",
        "      <td>0.000084</td>\n",
        "      <td>0.000105</td>\n",
        "      <td>0.00065</td>\n",
        "      <td>0.000067</td>\n",
        "      <td>0.000014</td>\n",
        "      <td>0.00001</td>\n",
        "      <td>0.000024</td>\n",
        "      <td>0.000463</td>\n",
        "      <td>0.000037</td>\n",
        "      <td>0.000024</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>2020-10-01</th>\n",
        "      <td>0.000084</td>\n",
        "      <td>0.000105</td>\n",
        "      <td>0.00065</td>\n",
        "      <td>0.000067</td>\n",
        "      <td>0.000014</td>\n",
        "      <td>0.00001</td>\n",
        "      <td>0.000024</td>\n",
        "      <td>0.000463</td>\n",
        "      <td>0.000037</td>\n",
        "      <td>0.000024</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>2020-10-02</th>\n",
        "      <td>0.000084</td>\n",
        "      <td>0.000105</td>\n",
        "      <td>0.00065</td>\n",
        "      <td>0.000067</td>\n",
        "      <td>0.000014</td>\n",
        "      <td>0.00001</td>\n",
        "      <td>0.000024</td>\n",
        "      <td>0.000463</td>\n",
        "      <td>0.000037</td>\n",
        "      <td>0.000024</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>2020-10-03</th>\n",
        "      <td>0.000084</td>\n",
        "      <td>0.000105</td>\n",
        "      <td>0.00065</td>\n",
        "      <td>0.000067</td>\n",
        "      <td>0.000014</td>\n",
        "      <td>0.00001</td>\n",
        "      <td>0.000024</td>\n",
        "      <td>0.000463</td>\n",
        "      <td>0.000037</td>\n",
        "      <td>0.000024</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>2020-10-04</th>\n",
        "      <td>0.000084</td>\n",
        "      <td>0.000105</td>\n",
        "      <td>0.00065</td>\n",
        "      <td>0.000067</td>\n",
        "      <td>0.000014</td>\n",
        "      <td>0.00001</td>\n",
        "      <td>0.000024</td>\n",
        "      <td>0.000463</td>\n",
        "      <td>0.000037</td>\n",
        "      <td>0.000024</td>\n",
        "    </tr>\n",
        "  </tbody>\n",
        "</table>\n",
        "</div>"
       ],
       "output_type": "pyout",
       "prompt_number": 17,
       "text": [
        "Country      Bahrain    Brazil     Iran     Italy  Macedonia  Portugal  \\\n",
        "Date                                                                     \n",
        "2020-09-30  0.000084  0.000105  0.00065  0.000067   0.000014   0.00001   \n",
        "2020-10-01  0.000084  0.000105  0.00065  0.000067   0.000014   0.00001   \n",
        "2020-10-02  0.000084  0.000105  0.00065  0.000067   0.000014   0.00001   \n",
        "2020-10-03  0.000084  0.000105  0.00065  0.000067   0.000014   0.00001   \n",
        "2020-10-04  0.000084  0.000105  0.00065  0.000067   0.000014   0.00001   \n",
        "\n",
        "Country       Russia    Turkey  United Arab Emirates  United States  \n",
        "Date                                                                 \n",
        "2020-09-30  0.000024  0.000463              0.000037       0.000024  \n",
        "2020-10-01  0.000024  0.000463              0.000037       0.000024  \n",
        "2020-10-02  0.000024  0.000463              0.000037       0.000024  \n",
        "2020-10-03  0.000024  0.000463              0.000037       0.000024  \n",
        "2020-10-04  0.000024  0.000463              0.000037       0.000024  "
       ]
      }
     ],
     "prompt_number": 17
    },
    {
     "cell_type": "heading",
     "level": 3,
     "metadata": {},
     "source": [
      "$\\theta$: Mortality rate of S$^\\ast$ cases $\\mathrm{[-]}$"
     ]
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "analyser.param_history(\"theta\", roll_window=None).tail()"
     ],
     "language": "python",
     "metadata": {},
     "outputs": [
      {
       "output_type": "display_data",
       "png": "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\n",
       "text": [
        "<Figure size 648x432 with 1 Axes>"
       ]
      },
      {
       "html": [
        "<div>\n",
        "<style scoped>\n",
        "    .dataframe tbody tr th:only-of-type {\n",
        "        vertical-align: middle;\n",
        "    }\n",
        "\n",
        "    .dataframe tbody tr th {\n",
        "        vertical-align: top;\n",
        "    }\n",
        "\n",
        "    .dataframe thead th {\n",
        "        text-align: right;\n",
        "    }\n",
        "</style>\n",
        "<table border=\"1\" class=\"dataframe\">\n",
        "  <thead>\n",
        "    <tr style=\"text-align: right;\">\n",
        "      <th>Country</th>\n",
        "      <th>Bahrain</th>\n",
        "      <th>Brazil</th>\n",
        "      <th>Iran</th>\n",
        "      <th>Italy</th>\n",
        "      <th>Macedonia</th>\n",
        "      <th>Portugal</th>\n",
        "      <th>Russia</th>\n",
        "      <th>Turkey</th>\n",
        "      <th>United Arab Emirates</th>\n",
        "      <th>United States</th>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>Date</th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "    </tr>\n",
        "  </thead>\n",
        "  <tbody>\n",
        "    <tr>\n",
        "      <th>2020-09-30</th>\n",
        "      <td>0.000457</td>\n",
        "      <td>0.017717</td>\n",
        "      <td>0.021403</td>\n",
        "      <td>0.000673</td>\n",
        "      <td>0.021666</td>\n",
        "      <td>0.002197</td>\n",
        "      <td>0.004232</td>\n",
        "      <td>0.002599</td>\n",
        "      <td>0.000661</td>\n",
        "      <td>0.002383</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>2020-10-01</th>\n",
        "      <td>0.000457</td>\n",
        "      <td>0.017717</td>\n",
        "      <td>0.021403</td>\n",
        "      <td>0.000673</td>\n",
        "      <td>0.021666</td>\n",
        "      <td>0.002197</td>\n",
        "      <td>0.004232</td>\n",
        "      <td>0.002599</td>\n",
        "      <td>0.000661</td>\n",
        "      <td>0.002383</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>2020-10-02</th>\n",
        "      <td>0.000457</td>\n",
        "      <td>0.017717</td>\n",
        "      <td>0.021403</td>\n",
        "      <td>0.000673</td>\n",
        "      <td>0.021666</td>\n",
        "      <td>0.002197</td>\n",
        "      <td>0.004232</td>\n",
        "      <td>0.002599</td>\n",
        "      <td>0.000661</td>\n",
        "      <td>0.002383</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>2020-10-03</th>\n",
        "      <td>0.000457</td>\n",
        "      <td>0.017717</td>\n",
        "      <td>0.021403</td>\n",
        "      <td>0.000673</td>\n",
        "      <td>0.021666</td>\n",
        "      <td>0.002197</td>\n",
        "      <td>0.004232</td>\n",
        "      <td>0.002599</td>\n",
        "      <td>0.000661</td>\n",
        "      <td>0.002383</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>2020-10-04</th>\n",
        "      <td>0.000457</td>\n",
        "      <td>0.017717</td>\n",
        "      <td>0.021403</td>\n",
        "      <td>0.000673</td>\n",
        "      <td>0.021666</td>\n",
        "      <td>0.002197</td>\n",
        "      <td>0.004232</td>\n",
        "      <td>0.002599</td>\n",
        "      <td>0.000661</td>\n",
        "      <td>0.002383</td>\n",
        "    </tr>\n",
        "  </tbody>\n",
        "</table>\n",
        "</div>"
       ],
       "output_type": "pyout",
       "prompt_number": 18,
       "text": [
        "Country      Bahrain    Brazil      Iran     Italy  Macedonia  Portugal  \\\n",
        "Date                                                                      \n",
        "2020-09-30  0.000457  0.017717  0.021403  0.000673   0.021666  0.002197   \n",
        "2020-10-01  0.000457  0.017717  0.021403  0.000673   0.021666  0.002197   \n",
        "2020-10-02  0.000457  0.017717  0.021403  0.000673   0.021666  0.002197   \n",
        "2020-10-03  0.000457  0.017717  0.021403  0.000673   0.021666  0.002197   \n",
        "2020-10-04  0.000457  0.017717  0.021403  0.000673   0.021666  0.002197   \n",
        "\n",
        "Country       Russia    Turkey  United Arab Emirates  United States  \n",
        "Date                                                                 \n",
        "2020-09-30  0.004232  0.002599              0.000661       0.002383  \n",
        "2020-10-01  0.004232  0.002599              0.000661       0.002383  \n",
        "2020-10-02  0.004232  0.002599              0.000661       0.002383  \n",
        "2020-10-03  0.004232  0.002599              0.000661       0.002383  \n",
        "2020-10-04  0.004232  0.002599              0.000661       0.002383  "
       ]
      }
     ],
     "prompt_number": 18
    },
    {
     "cell_type": "markdown",
     "metadata": {},
     "source": [
      "## (Experimental): Relationship of OxCGRT index and parameter values\n",
      "Government responses will impact on parameter values of ODE models about 14 days later. Here, we will investigate on the relationship of [stringency index (from OxCGRT)](https://github.com/OxCGRT/covid-policy-tracker/blob/master/documentation/index_methodology.md) and reproduction number/model parameters.\n"
     ]
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "%matplotlib inline\n",
      "from matplotlib import pyplot as plt\n",
      "import seaborn as sns\n",
      "import pandas as pd"
     ],
     "language": "python",
     "metadata": {},
     "outputs": [],
     "prompt_number": 19
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "df = analyser.track()\n",
      "param_cols = [\"Rt\", *cs.SIRF.PARAMETERS]\n",
      "oxcgrt_cols = oxcgrt_data.OXCGRT_VARS[:]\n",
      "cols = param_cols + oxcgrt_cols\n",
      "delay = 14\n",
      "\n",
      "for col in param_cols:\n",
      "    df[col] = pd.to_numeric(df[col], errors=\"coerce\")\n",
      "    df[col] = df.groupby(\"Country\")[col].shift(0 - delay)\n",
      "\n",
      "df = df.dropna(how=\"any\")\n",
      "df = df.loc[:, [\"Date\", \"Country\", *cols]]\n",
      "track_df = df.copy()\n",
      "track_df.info()"
     ],
     "language": "python",
     "metadata": {},
     "outputs": [
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "<class 'pandas.core.frame.DataFrame'>\n",
        "Int64Index: 41622 entries, 0 to 41747\n",
        "Data columns (total 19 columns):\n",
        " #   Column                               Non-Null Count  Dtype         \n",
        "---  ------                               --------------  -----         \n",
        " 0   Date                                 41622 non-null  datetime64[ns]\n",
        " 1   Country                              41622 non-null  object        \n",
        " 2   Rt                                   41622 non-null  float64       \n",
        " 3   theta                                41622 non-null  float64       \n",
        " 4   kappa                                41622 non-null  float64       \n",
        " 5   rho                                  41622 non-null  float64       \n",
        " 6   sigma                                41622 non-null  float64       \n",
        " 7   School_closing                       41622 non-null  int64         \n",
        " 8   Workplace_closing                    41622 non-null  int64         \n",
        " 9   Cancel_events                        41622 non-null  int64         \n",
        " 10  Gatherings_restrictions              41622 non-null  int64         \n",
        " 11  Transport_closing                    41622 non-null  int64         \n",
        " 12  Stay_home_restrictions               41622 non-null  int64         \n",
        " 13  Internal_movement_restrictions       41622 non-null  int64         \n",
        " 14  International_movement_restrictions  41622 non-null  int64         \n",
        " 15  Information_campaigns                41622 non-null  int64         \n",
        " 16  Testing_policy                       41622 non-null  int64         \n",
        " 17  Contact_tracing                      41622 non-null  int64         \n",
        " 18  Stringency_index                     41622 non-null  float64       \n",
        "dtypes: datetime64[ns](1), float64(6), int64(11), object(1)\n",
        "memory usage: 6.4+ MB\n"
       ]
      }
     ],
     "prompt_number": 20
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "# Correlation\n",
      "df = track_df.copy()\n",
      "df.corr().style.background_gradient(axis=None)"
     ],
     "language": "python",
     "metadata": {},
     "outputs": [
      {
       "html": [
        "<style  type=\"text/css\" >\n",
        "#T_77c079be_0647_11eb_a6a3_5254004ca2acrow0_col0,#T_77c079be_0647_11eb_a6a3_5254004ca2acrow1_col1,#T_77c079be_0647_11eb_a6a3_5254004ca2acrow2_col2,#T_77c079be_0647_11eb_a6a3_5254004ca2acrow3_col3,#T_77c079be_0647_11eb_a6a3_5254004ca2acrow4_col4,#T_77c079be_0647_11eb_a6a3_5254004ca2acrow5_col5,#T_77c079be_0647_11eb_a6a3_5254004ca2acrow6_col6,#T_77c079be_0647_11eb_a6a3_5254004ca2acrow7_col7,#T_77c079be_0647_11eb_a6a3_5254004ca2acrow8_col8,#T_77c079be_0647_11eb_a6a3_5254004ca2acrow9_col9,#T_77c079be_0647_11eb_a6a3_5254004ca2acrow10_col10,#T_77c079be_0647_11eb_a6a3_5254004ca2acrow11_col11,#T_77c079be_0647_11eb_a6a3_5254004ca2acrow12_col12,#T_77c079be_0647_11eb_a6a3_5254004ca2acrow13_col13,#T_77c079be_0647_11eb_a6a3_5254004ca2acrow14_col14,#T_77c079be_0647_11eb_a6a3_5254004ca2acrow15_col15,#T_77c079be_0647_11eb_a6a3_5254004ca2acrow16_col16{\n",
        "            background-color:  #023858;\n",
        "            color:  #f1f1f1;\n",
        "        }#T_77c079be_0647_11eb_a6a3_5254004ca2acrow0_col1,#T_77c079be_0647_11eb_a6a3_5254004ca2acrow0_col2,#T_77c079be_0647_11eb_a6a3_5254004ca2acrow1_col0,#T_77c079be_0647_11eb_a6a3_5254004ca2acrow1_col5,#T_77c079be_0647_11eb_a6a3_5254004ca2acrow2_col0,#T_77c079be_0647_11eb_a6a3_5254004ca2acrow5_col1{\n",
        "            background-color:  #e3e0ee;\n",
        "            color:  #000000;\n",
        "        }#T_77c079be_0647_11eb_a6a3_5254004ca2acrow0_col3,#T_77c079be_0647_11eb_a6a3_5254004ca2acrow3_col0{\n",
        "            background-color:  #73a9cf;\n",
        "            color:  #000000;\n",
        "        }#T_77c079be_0647_11eb_a6a3_5254004ca2acrow0_col4,#T_77c079be_0647_11eb_a6a3_5254004ca2acrow4_col0{\n",
        "            background-color:  #d5d5e8;\n",
        "            color:  #000000;\n",
        "        }#T_77c079be_0647_11eb_a6a3_5254004ca2acrow0_col5,#T_77c079be_0647_11eb_a6a3_5254004ca2acrow4_col16,#T_77c079be_0647_11eb_a6a3_5254004ca2acrow5_col0,#T_77c079be_0647_11eb_a6a3_5254004ca2acrow16_col4{\n",
        "            background-color:  #9ebad9;\n",
        "            color:  #000000;\n",
        "        }#T_77c079be_0647_11eb_a6a3_5254004ca2acrow0_col6,#T_77c079be_0647_11eb_a6a3_5254004ca2acrow4_col13,#T_77c079be_0647_11eb_a6a3_5254004ca2acrow6_col0,#T_77c079be_0647_11eb_a6a3_5254004ca2acrow13_col4{\n",
        "            background-color:  #9ab8d8;\n",
        "            color:  #000000;\n",
        "        }#T_77c079be_0647_11eb_a6a3_5254004ca2acrow0_col7,#T_77c079be_0647_11eb_a6a3_5254004ca2acrow4_col8,#T_77c079be_0647_11eb_a6a3_5254004ca2acrow7_col0,#T_77c079be_0647_11eb_a6a3_5254004ca2acrow8_col4{\n",
        "            background-color:  #c1cae2;\n",
        "            color:  #000000;\n",
        "        }#T_77c079be_0647_11eb_a6a3_5254004ca2acrow0_col8,#T_77c079be_0647_11eb_a6a3_5254004ca2acrow8_col0{\n",
        "            background-color:  #a9bfdc;\n",
        "            color:  #000000;\n",
        "        }#T_77c079be_0647_11eb_a6a3_5254004ca2acrow0_col9,#T_77c079be_0647_11eb_a6a3_5254004ca2acrow2_col11,#T_77c079be_0647_11eb_a6a3_5254004ca2acrow9_col0,#T_77c079be_0647_11eb_a6a3_5254004ca2acrow11_col2{\n",
        "            background-color:  #abbfdc;\n",
        "            color:  #000000;\n",
        "        }#T_77c079be_0647_11eb_a6a3_5254004ca2acrow0_col10,#T_77c079be_0647_11eb_a6a3_5254004ca2acrow4_col9,#T_77c079be_0647_11eb_a6a3_5254004ca2acrow4_col11,#T_77c079be_0647_11eb_a6a3_5254004ca2acrow9_col4,#T_77c079be_0647_11eb_a6a3_5254004ca2acrow10_col0,#T_77c079be_0647_11eb_a6a3_5254004ca2acrow11_col4{\n",
        "            background-color:  #bbc7e0;\n",
        "            color:  #000000;\n",
        "        }#T_77c079be_0647_11eb_a6a3_5254004ca2acrow0_col11,#T_77c079be_0647_11eb_a6a3_5254004ca2acrow11_col0{\n",
        "            background-color:  #b5c4df;\n",
        "            color:  #000000;\n",
        "        }#T_77c079be_0647_11eb_a6a3_5254004ca2acrow0_col12,#T_77c079be_0647_11eb_a6a3_5254004ca2acrow3_col5,#T_77c079be_0647_11eb_a6a3_5254004ca2acrow5_col3,#T_77c079be_0647_11eb_a6a3_5254004ca2acrow12_col0{\n",
        "            background-color:  #d9d8ea;\n",
        "            color:  #000000;\n",
        "        }#T_77c079be_0647_11eb_a6a3_5254004ca2acrow0_col13,#T_77c079be_0647_11eb_a6a3_5254004ca2acrow13_col0{\n",
        "            background-color:  #bdc8e1;\n",
        "            color:  #000000;\n",
        "        }#T_77c079be_0647_11eb_a6a3_5254004ca2acrow0_col14,#T_77c079be_0647_11eb_a6a3_5254004ca2acrow3_col8,#T_77c079be_0647_11eb_a6a3_5254004ca2acrow8_col3,#T_77c079be_0647_11eb_a6a3_5254004ca2acrow14_col0{\n",
        "            background-color:  #d0d1e6;\n",
        "            color:  #000000;\n",
        "        }#T_77c079be_0647_11eb_a6a3_5254004ca2acrow0_col15,#T_77c079be_0647_11eb_a6a3_5254004ca2acrow2_col5,#T_77c079be_0647_11eb_a6a3_5254004ca2acrow5_col2,#T_77c079be_0647_11eb_a6a3_5254004ca2acrow15_col0{\n",
        "            background-color:  #e7e3f0;\n",
        "            color:  #000000;\n",
        "        }#T_77c079be_0647_11eb_a6a3_5254004ca2acrow0_col16,#T_77c079be_0647_11eb_a6a3_5254004ca2acrow16_col0{\n",
        "            background-color:  #b1c2de;\n",
        "            color:  #000000;\n",
        "        }#T_77c079be_0647_11eb_a6a3_5254004ca2acrow1_col2,#T_77c079be_0647_11eb_a6a3_5254004ca2acrow2_col1{\n",
        "            background-color:  #023a5b;\n",
        "            color:  #f1f1f1;\n",
        "        }#T_77c079be_0647_11eb_a6a3_5254004ca2acrow1_col3,#T_77c079be_0647_11eb_a6a3_5254004ca2acrow2_col3,#T_77c079be_0647_11eb_a6a3_5254004ca2acrow3_col1,#T_77c079be_0647_11eb_a6a3_5254004ca2acrow3_col2{\n",
        "            background-color:  #045c90;\n",
        "            color:  #f1f1f1;\n",
        "        }#T_77c079be_0647_11eb_a6a3_5254004ca2acrow1_col4,#T_77c079be_0647_11eb_a6a3_5254004ca2acrow4_col1{\n",
        "            background-color:  #bcc7e1;\n",
        "            color:  #000000;\n",
        "        }#T_77c079be_0647_11eb_a6a3_5254004ca2acrow1_col6,#T_77c079be_0647_11eb_a6a3_5254004ca2acrow6_col1{\n",
        "            background-color:  #d2d3e7;\n",
        "            color:  #000000;\n",
        "        }#T_77c079be_0647_11eb_a6a3_5254004ca2acrow1_col7,#T_77c079be_0647_11eb_a6a3_5254004ca2acrow7_col1{\n",
        "            background-color:  #ebe6f2;\n",
        "            color:  #000000;\n",
        "        }#T_77c079be_0647_11eb_a6a3_5254004ca2acrow1_col8,#T_77c079be_0647_11eb_a6a3_5254004ca2acrow8_col1{\n",
        "            background-color:  #d8d7e9;\n",
        "            color:  #000000;\n",
        "        }#T_77c079be_0647_11eb_a6a3_5254004ca2acrow1_col9,#T_77c079be_0647_11eb_a6a3_5254004ca2acrow9_col1{\n",
        "            background-color:  #e2dfee;\n",
        "            color:  #000000;\n",
        "        }#T_77c079be_0647_11eb_a6a3_5254004ca2acrow1_col10,#T_77c079be_0647_11eb_a6a3_5254004ca2acrow2_col10,#T_77c079be_0647_11eb_a6a3_5254004ca2acrow10_col1,#T_77c079be_0647_11eb_a6a3_5254004ca2acrow10_col2,#T_77c079be_0647_11eb_a6a3_5254004ca2acrow11_col15,#T_77c079be_0647_11eb_a6a3_5254004ca2acrow15_col11{\n",
        "            background-color:  #81aed2;\n",
        "            color:  #000000;\n",
        "        }#T_77c079be_0647_11eb_a6a3_5254004ca2acrow1_col11,#T_77c079be_0647_11eb_a6a3_5254004ca2acrow11_col1{\n",
        "            background-color:  #acc0dd;\n",
        "            color:  #000000;\n",
        "        }#T_77c079be_0647_11eb_a6a3_5254004ca2acrow1_col12,#T_77c079be_0647_11eb_a6a3_5254004ca2acrow12_col1{\n",
        "            background-color:  #84b0d3;\n",
        "            color:  #000000;\n",
        "        }#T_77c079be_0647_11eb_a6a3_5254004ca2acrow1_col13,#T_77c079be_0647_11eb_a6a3_5254004ca2acrow13_col1{\n",
        "            background-color:  #f0eaf4;\n",
        "            color:  #000000;\n",
        "        }#T_77c079be_0647_11eb_a6a3_5254004ca2acrow1_col14,#T_77c079be_0647_11eb_a6a3_5254004ca2acrow14_col1{\n",
        "            background-color:  #f8f1f8;\n",
        "            color:  #000000;\n",
        "        }#T_77c079be_0647_11eb_a6a3_5254004ca2acrow1_col15,#T_77c079be_0647_11eb_a6a3_5254004ca2acrow3_col4,#T_77c079be_0647_11eb_a6a3_5254004ca2acrow4_col3,#T_77c079be_0647_11eb_a6a3_5254004ca2acrow15_col1{\n",
        "            background-color:  #afc1dd;\n",
        "            color:  #000000;\n",
        "        }#T_77c079be_0647_11eb_a6a3_5254004ca2acrow1_col16,#T_77c079be_0647_11eb_a6a3_5254004ca2acrow2_col4,#T_77c079be_0647_11eb_a6a3_5254004ca2acrow4_col2,#T_77c079be_0647_11eb_a6a3_5254004ca2acrow4_col14,#T_77c079be_0647_11eb_a6a3_5254004ca2acrow14_col4,#T_77c079be_0647_11eb_a6a3_5254004ca2acrow16_col1{\n",
        "            background-color:  #cacee5;\n",
        "            color:  #000000;\n",
        "        }#T_77c079be_0647_11eb_a6a3_5254004ca2acrow2_col6,#T_77c079be_0647_11eb_a6a3_5254004ca2acrow2_col8,#T_77c079be_0647_11eb_a6a3_5254004ca2acrow6_col2,#T_77c079be_0647_11eb_a6a3_5254004ca2acrow8_col2{\n",
        "            background-color:  #d6d6e9;\n",
        "            color:  #000000;\n",
        "        }#T_77c079be_0647_11eb_a6a3_5254004ca2acrow2_col7,#T_77c079be_0647_11eb_a6a3_5254004ca2acrow7_col2{\n",
        "            background-color:  #ede7f2;\n",
        "            color:  #000000;\n",
        "        }#T_77c079be_0647_11eb_a6a3_5254004ca2acrow2_col9,#T_77c079be_0647_11eb_a6a3_5254004ca2acrow9_col2{\n",
        "            background-color:  #dfddec;\n",
        "            color:  #000000;\n",
        "        }#T_77c079be_0647_11eb_a6a3_5254004ca2acrow2_col12,#T_77c079be_0647_11eb_a6a3_5254004ca2acrow12_col2{\n",
        "            background-color:  #79abd0;\n",
        "            color:  #000000;\n",
        "        }#T_77c079be_0647_11eb_a6a3_5254004ca2acrow2_col13,#T_77c079be_0647_11eb_a6a3_5254004ca2acrow13_col2{\n",
        "            background-color:  #f1ebf5;\n",
        "            color:  #000000;\n",
        "        }#T_77c079be_0647_11eb_a6a3_5254004ca2acrow2_col14,#T_77c079be_0647_11eb_a6a3_5254004ca2acrow14_col2{\n",
        "            background-color:  #f5eef6;\n",
        "            color:  #000000;\n",
        "        }#T_77c079be_0647_11eb_a6a3_5254004ca2acrow2_col15,#T_77c079be_0647_11eb_a6a3_5254004ca2acrow4_col6,#T_77c079be_0647_11eb_a6a3_5254004ca2acrow6_col4,#T_77c079be_0647_11eb_a6a3_5254004ca2acrow15_col2{\n",
        "            background-color:  #b3c3de;\n",
        "            color:  #000000;\n",
        "        }#T_77c079be_0647_11eb_a6a3_5254004ca2acrow2_col16,#T_77c079be_0647_11eb_a6a3_5254004ca2acrow16_col2{\n",
        "            background-color:  #cdd0e5;\n",
        "            color:  #000000;\n",
        "        }#T_77c079be_0647_11eb_a6a3_5254004ca2acrow3_col6,#T_77c079be_0647_11eb_a6a3_5254004ca2acrow6_col3{\n",
        "            background-color:  #c6cce3;\n",
        "            color:  #000000;\n",
        "        }#T_77c079be_0647_11eb_a6a3_5254004ca2acrow3_col7,#T_77c079be_0647_11eb_a6a3_5254004ca2acrow7_col3{\n",
        "            background-color:  #efe9f3;\n",
        "            color:  #000000;\n",
        "        }#T_77c079be_0647_11eb_a6a3_5254004ca2acrow3_col9,#T_77c079be_0647_11eb_a6a3_5254004ca2acrow9_col3{\n",
        "            background-color:  #dedcec;\n",
        "            color:  #000000;\n",
        "        }#T_77c079be_0647_11eb_a6a3_5254004ca2acrow3_col10,#T_77c079be_0647_11eb_a6a3_5254004ca2acrow10_col3{\n",
        "            background-color:  #7dacd1;\n",
        "            color:  #000000;\n",
        "        }#T_77c079be_0647_11eb_a6a3_5254004ca2acrow3_col11,#T_77c079be_0647_11eb_a6a3_5254004ca2acrow11_col3{\n",
        "            background-color:  #a7bddb;\n",
        "            color:  #000000;\n",
        "        }#T_77c079be_0647_11eb_a6a3_5254004ca2acrow3_col12,#T_77c079be_0647_11eb_a6a3_5254004ca2acrow12_col3{\n",
        "            background-color:  #9fbad9;\n",
        "            color:  #000000;\n",
        "        }#T_77c079be_0647_11eb_a6a3_5254004ca2acrow3_col13,#T_77c079be_0647_11eb_a6a3_5254004ca2acrow13_col3{\n",
        "            background-color:  #f2ecf5;\n",
        "            color:  #000000;\n",
        "        }#T_77c079be_0647_11eb_a6a3_5254004ca2acrow3_col14,#T_77c079be_0647_11eb_a6a3_5254004ca2acrow14_col3{\n",
        "            background-color:  #fff7fb;\n",
        "            color:  #000000;\n",
        "        }#T_77c079be_0647_11eb_a6a3_5254004ca2acrow3_col15,#T_77c079be_0647_11eb_a6a3_5254004ca2acrow3_col16,#T_77c079be_0647_11eb_a6a3_5254004ca2acrow15_col3,#T_77c079be_0647_11eb_a6a3_5254004ca2acrow16_col3{\n",
        "            background-color:  #c5cce3;\n",
        "            color:  #000000;\n",
        "        }#T_77c079be_0647_11eb_a6a3_5254004ca2acrow4_col5,#T_77c079be_0647_11eb_a6a3_5254004ca2acrow5_col4{\n",
        "            background-color:  #8eb3d5;\n",
        "            color:  #000000;\n",
        "        }#T_77c079be_0647_11eb_a6a3_5254004ca2acrow4_col7,#T_77c079be_0647_11eb_a6a3_5254004ca2acrow7_col4{\n",
        "            background-color:  #a2bcda;\n",
        "            color:  #000000;\n",
        "        }#T_77c079be_0647_11eb_a6a3_5254004ca2acrow4_col10,#T_77c079be_0647_11eb_a6a3_5254004ca2acrow10_col4{\n",
        "            background-color:  #adc1dd;\n",
        "            color:  #000000;\n",
        "        }#T_77c079be_0647_11eb_a6a3_5254004ca2acrow4_col12,#T_77c079be_0647_11eb_a6a3_5254004ca2acrow12_col4{\n",
        "            background-color:  #c9cee4;\n",
        "            color:  #000000;\n",
        "        }#T_77c079be_0647_11eb_a6a3_5254004ca2acrow4_col15,#T_77c079be_0647_11eb_a6a3_5254004ca2acrow8_col15,#T_77c079be_0647_11eb_a6a3_5254004ca2acrow15_col4,#T_77c079be_0647_11eb_a6a3_5254004ca2acrow15_col8{\n",
        "            background-color:  #76aad0;\n",
        "            color:  #000000;\n",
        "        }#T_77c079be_0647_11eb_a6a3_5254004ca2acrow5_col6,#T_77c079be_0647_11eb_a6a3_5254004ca2acrow6_col5{\n",
        "            background-color:  #04629a;\n",
        "            color:  #f1f1f1;\n",
        "        }#T_77c079be_0647_11eb_a6a3_5254004ca2acrow5_col7,#T_77c079be_0647_11eb_a6a3_5254004ca2acrow5_col13,#T_77c079be_0647_11eb_a6a3_5254004ca2acrow7_col5,#T_77c079be_0647_11eb_a6a3_5254004ca2acrow13_col5{\n",
        "            background-color:  #045f95;\n",
        "            color:  #f1f1f1;\n",
        "        }#T_77c079be_0647_11eb_a6a3_5254004ca2acrow5_col8,#T_77c079be_0647_11eb_a6a3_5254004ca2acrow8_col5{\n",
        "            background-color:  #056fae;\n",
        "            color:  #f1f1f1;\n",
        "        }#T_77c079be_0647_11eb_a6a3_5254004ca2acrow5_col9,#T_77c079be_0647_11eb_a6a3_5254004ca2acrow9_col5{\n",
        "            background-color:  #1b7eb7;\n",
        "            color:  #000000;\n",
        "        }#T_77c079be_0647_11eb_a6a3_5254004ca2acrow5_col10,#T_77c079be_0647_11eb_a6a3_5254004ca2acrow10_col5{\n",
        "            background-color:  #2383ba;\n",
        "            color:  #000000;\n",
        "        }#T_77c079be_0647_11eb_a6a3_5254004ca2acrow5_col11,#T_77c079be_0647_11eb_a6a3_5254004ca2acrow6_col11,#T_77c079be_0647_11eb_a6a3_5254004ca2acrow9_col13,#T_77c079be_0647_11eb_a6a3_5254004ca2acrow11_col5,#T_77c079be_0647_11eb_a6a3_5254004ca2acrow11_col6,#T_77c079be_0647_11eb_a6a3_5254004ca2acrow13_col9{\n",
        "            background-color:  #1e80b8;\n",
        "            color:  #000000;\n",
        "        }#T_77c079be_0647_11eb_a6a3_5254004ca2acrow5_col12,#T_77c079be_0647_11eb_a6a3_5254004ca2acrow12_col5{\n",
        "            background-color:  #358fc0;\n",
        "            color:  #000000;\n",
        "        }#T_77c079be_0647_11eb_a6a3_5254004ca2acrow5_col14,#T_77c079be_0647_11eb_a6a3_5254004ca2acrow14_col5{\n",
        "            background-color:  #0570b0;\n",
        "            color:  #f1f1f1;\n",
        "        }#T_77c079be_0647_11eb_a6a3_5254004ca2acrow5_col15,#T_77c079be_0647_11eb_a6a3_5254004ca2acrow15_col5{\n",
        "            background-color:  #529bc7;\n",
        "            color:  #000000;\n",
        "        }#T_77c079be_0647_11eb_a6a3_5254004ca2acrow5_col16,#T_77c079be_0647_11eb_a6a3_5254004ca2acrow7_col16,#T_77c079be_0647_11eb_a6a3_5254004ca2acrow16_col5,#T_77c079be_0647_11eb_a6a3_5254004ca2acrow16_col7{\n",
        "            background-color:  #04598c;\n",
        "            color:  #f1f1f1;\n",
        "        }#T_77c079be_0647_11eb_a6a3_5254004ca2acrow6_col7,#T_77c079be_0647_11eb_a6a3_5254004ca2acrow7_col6{\n",
        "            background-color:  #046198;\n",
        "            color:  #f1f1f1;\n",
        "        }#T_77c079be_0647_11eb_a6a3_5254004ca2acrow6_col8,#T_77c079be_0647_11eb_a6a3_5254004ca2acrow8_col6{\n",
        "            background-color:  #0569a5;\n",
        "            color:  #f1f1f1;\n",
        "        }#T_77c079be_0647_11eb_a6a3_5254004ca2acrow6_col9,#T_77c079be_0647_11eb_a6a3_5254004ca2acrow9_col6{\n",
        "            background-color:  #0771b1;\n",
        "            color:  #f1f1f1;\n",
        "        }#T_77c079be_0647_11eb_a6a3_5254004ca2acrow6_col10,#T_77c079be_0647_11eb_a6a3_5254004ca2acrow8_col14,#T_77c079be_0647_11eb_a6a3_5254004ca2acrow9_col14,#T_77c079be_0647_11eb_a6a3_5254004ca2acrow10_col6,#T_77c079be_0647_11eb_a6a3_5254004ca2acrow14_col8,#T_77c079be_0647_11eb_a6a3_5254004ca2acrow14_col9{\n",
        "            background-color:  #0c74b2;\n",
        "            color:  #f1f1f1;\n",
        "        }#T_77c079be_0647_11eb_a6a3_5254004ca2acrow6_col12,#T_77c079be_0647_11eb_a6a3_5254004ca2acrow7_col10,#T_77c079be_0647_11eb_a6a3_5254004ca2acrow10_col7,#T_77c079be_0647_11eb_a6a3_5254004ca2acrow12_col6,#T_77c079be_0647_11eb_a6a3_5254004ca2acrow12_col13,#T_77c079be_0647_11eb_a6a3_5254004ca2acrow13_col12{\n",
        "            background-color:  #2f8bbe;\n",
        "            color:  #000000;\n",
        "        }#T_77c079be_0647_11eb_a6a3_5254004ca2acrow6_col13,#T_77c079be_0647_11eb_a6a3_5254004ca2acrow13_col6,#T_77c079be_0647_11eb_a6a3_5254004ca2acrow13_col16,#T_77c079be_0647_11eb_a6a3_5254004ca2acrow16_col13{\n",
        "            background-color:  #045788;\n",
        "            color:  #f1f1f1;\n",
        "        }#T_77c079be_0647_11eb_a6a3_5254004ca2acrow6_col14,#T_77c079be_0647_11eb_a6a3_5254004ca2acrow14_col6{\n",
        "            background-color:  #056faf;\n",
        "            color:  #f1f1f1;\n",
        "        }#T_77c079be_0647_11eb_a6a3_5254004ca2acrow6_col15,#T_77c079be_0647_11eb_a6a3_5254004ca2acrow15_col6{\n",
        "            background-color:  #4697c4;\n",
        "            color:  #000000;\n",
        "        }#T_77c079be_0647_11eb_a6a3_5254004ca2acrow6_col16,#T_77c079be_0647_11eb_a6a3_5254004ca2acrow16_col6{\n",
        "            background-color:  #045280;\n",
        "            color:  #f1f1f1;\n",
        "        }#T_77c079be_0647_11eb_a6a3_5254004ca2acrow7_col8,#T_77c079be_0647_11eb_a6a3_5254004ca2acrow8_col7,#T_77c079be_0647_11eb_a6a3_5254004ca2acrow12_col16,#T_77c079be_0647_11eb_a6a3_5254004ca2acrow16_col12{\n",
        "            background-color:  #056ead;\n",
        "            color:  #f1f1f1;\n",
        "        }#T_77c079be_0647_11eb_a6a3_5254004ca2acrow7_col9,#T_77c079be_0647_11eb_a6a3_5254004ca2acrow9_col7,#T_77c079be_0647_11eb_a6a3_5254004ca2acrow11_col12,#T_77c079be_0647_11eb_a6a3_5254004ca2acrow12_col11{\n",
        "            background-color:  #2a88bc;\n",
        "            color:  #000000;\n",
        "        }#T_77c079be_0647_11eb_a6a3_5254004ca2acrow7_col11,#T_77c079be_0647_11eb_a6a3_5254004ca2acrow11_col7{\n",
        "            background-color:  #2d8abd;\n",
        "            color:  #000000;\n",
        "        }#T_77c079be_0647_11eb_a6a3_5254004ca2acrow7_col12,#T_77c079be_0647_11eb_a6a3_5254004ca2acrow12_col7,#T_77c079be_0647_11eb_a6a3_5254004ca2acrow15_col16,#T_77c079be_0647_11eb_a6a3_5254004ca2acrow16_col15{\n",
        "            background-color:  #2685bb;\n",
        "            color:  #000000;\n",
        "        }#T_77c079be_0647_11eb_a6a3_5254004ca2acrow7_col13,#T_77c079be_0647_11eb_a6a3_5254004ca2acrow13_col7{\n",
        "            background-color:  #034a74;\n",
        "            color:  #f1f1f1;\n",
        "        }#T_77c079be_0647_11eb_a6a3_5254004ca2acrow7_col14,#T_77c079be_0647_11eb_a6a3_5254004ca2acrow14_col7{\n",
        "            background-color:  #04639b;\n",
        "            color:  #f1f1f1;\n",
        "        }#T_77c079be_0647_11eb_a6a3_5254004ca2acrow7_col15,#T_77c079be_0647_11eb_a6a3_5254004ca2acrow15_col7{\n",
        "            background-color:  #0872b1;\n",
        "            color:  #f1f1f1;\n",
        "        }#T_77c079be_0647_11eb_a6a3_5254004ca2acrow8_col9,#T_77c079be_0647_11eb_a6a3_5254004ca2acrow9_col8{\n",
        "            background-color:  #04588a;\n",
        "            color:  #f1f1f1;\n",
        "        }#T_77c079be_0647_11eb_a6a3_5254004ca2acrow8_col10,#T_77c079be_0647_11eb_a6a3_5254004ca2acrow10_col8{\n",
        "            background-color:  #056ba7;\n",
        "            color:  #f1f1f1;\n",
        "        }#T_77c079be_0647_11eb_a6a3_5254004ca2acrow8_col11,#T_77c079be_0647_11eb_a6a3_5254004ca2acrow11_col8,#T_77c079be_0647_11eb_a6a3_5254004ca2acrow13_col14,#T_77c079be_0647_11eb_a6a3_5254004ca2acrow14_col13{\n",
        "            background-color:  #046299;\n",
        "            color:  #f1f1f1;\n",
        "        }#T_77c079be_0647_11eb_a6a3_5254004ca2acrow8_col12,#T_77c079be_0647_11eb_a6a3_5254004ca2acrow12_col8{\n",
        "            background-color:  #2484ba;\n",
        "            color:  #000000;\n",
        "        }#T_77c079be_0647_11eb_a6a3_5254004ca2acrow8_col13,#T_77c079be_0647_11eb_a6a3_5254004ca2acrow13_col8{\n",
        "            background-color:  #056dab;\n",
        "            color:  #f1f1f1;\n",
        "        }#T_77c079be_0647_11eb_a6a3_5254004ca2acrow8_col16,#T_77c079be_0647_11eb_a6a3_5254004ca2acrow16_col8{\n",
        "            background-color:  #034f7d;\n",
        "            color:  #f1f1f1;\n",
        "        }#T_77c079be_0647_11eb_a6a3_5254004ca2acrow9_col10,#T_77c079be_0647_11eb_a6a3_5254004ca2acrow10_col9{\n",
        "            background-color:  #0a73b2;\n",
        "            color:  #f1f1f1;\n",
        "        }#T_77c079be_0647_11eb_a6a3_5254004ca2acrow9_col11,#T_77c079be_0647_11eb_a6a3_5254004ca2acrow11_col9{\n",
        "            background-color:  #05659f;\n",
        "            color:  #f1f1f1;\n",
        "        }#T_77c079be_0647_11eb_a6a3_5254004ca2acrow9_col12,#T_77c079be_0647_11eb_a6a3_5254004ca2acrow12_col9{\n",
        "            background-color:  #348ebf;\n",
        "            color:  #000000;\n",
        "        }#T_77c079be_0647_11eb_a6a3_5254004ca2acrow9_col15,#T_77c079be_0647_11eb_a6a3_5254004ca2acrow15_col9{\n",
        "            background-color:  #a1bbda;\n",
        "            color:  #000000;\n",
        "        }#T_77c079be_0647_11eb_a6a3_5254004ca2acrow9_col16,#T_77c079be_0647_11eb_a6a3_5254004ca2acrow16_col9{\n",
        "            background-color:  #046096;\n",
        "            color:  #f1f1f1;\n",
        "        }#T_77c079be_0647_11eb_a6a3_5254004ca2acrow10_col11,#T_77c079be_0647_11eb_a6a3_5254004ca2acrow11_col10{\n",
        "            background-color:  #045b8e;\n",
        "            color:  #f1f1f1;\n",
        "        }#T_77c079be_0647_11eb_a6a3_5254004ca2acrow10_col12,#T_77c079be_0647_11eb_a6a3_5254004ca2acrow12_col10,#T_77c079be_0647_11eb_a6a3_5254004ca2acrow13_col15,#T_77c079be_0647_11eb_a6a3_5254004ca2acrow15_col13{\n",
        "            background-color:  #157ab5;\n",
        "            color:  #000000;\n",
        "        }#T_77c079be_0647_11eb_a6a3_5254004ca2acrow10_col13,#T_77c079be_0647_11eb_a6a3_5254004ca2acrow11_col13,#T_77c079be_0647_11eb_a6a3_5254004ca2acrow13_col10,#T_77c079be_0647_11eb_a6a3_5254004ca2acrow13_col11{\n",
        "            background-color:  #3790c0;\n",
        "            color:  #000000;\n",
        "        }#T_77c079be_0647_11eb_a6a3_5254004ca2acrow10_col14,#T_77c079be_0647_11eb_a6a3_5254004ca2acrow14_col10{\n",
        "            background-color:  #4e9ac6;\n",
        "            color:  #000000;\n",
        "        }#T_77c079be_0647_11eb_a6a3_5254004ca2acrow10_col15,#T_77c079be_0647_11eb_a6a3_5254004ca2acrow15_col10{\n",
        "            background-color:  #4496c3;\n",
        "            color:  #000000;\n",
        "        }#T_77c079be_0647_11eb_a6a3_5254004ca2acrow10_col16,#T_77c079be_0647_11eb_a6a3_5254004ca2acrow16_col10{\n",
        "            background-color:  #045d92;\n",
        "            color:  #f1f1f1;\n",
        "        }#T_77c079be_0647_11eb_a6a3_5254004ca2acrow11_col14,#T_77c079be_0647_11eb_a6a3_5254004ca2acrow14_col11{\n",
        "            background-color:  #3f93c2;\n",
        "            color:  #000000;\n",
        "        }#T_77c079be_0647_11eb_a6a3_5254004ca2acrow11_col16,#T_77c079be_0647_11eb_a6a3_5254004ca2acrow16_col11{\n",
        "            background-color:  #046097;\n",
        "            color:  #f1f1f1;\n",
        "        }#T_77c079be_0647_11eb_a6a3_5254004ca2acrow12_col14,#T_77c079be_0647_11eb_a6a3_5254004ca2acrow14_col12{\n",
        "            background-color:  #1379b5;\n",
        "            color:  #f1f1f1;\n",
        "        }#T_77c079be_0647_11eb_a6a3_5254004ca2acrow12_col15,#T_77c079be_0647_11eb_a6a3_5254004ca2acrow15_col12{\n",
        "            background-color:  #2786bb;\n",
        "            color:  #000000;\n",
        "        }#T_77c079be_0647_11eb_a6a3_5254004ca2acrow14_col15,#T_77c079be_0647_11eb_a6a3_5254004ca2acrow15_col14{\n",
        "            background-color:  #509ac6;\n",
        "            color:  #000000;\n",
        "        }#T_77c079be_0647_11eb_a6a3_5254004ca2acrow14_col16,#T_77c079be_0647_11eb_a6a3_5254004ca2acrow16_col14{\n",
        "            background-color:  #056dac;\n",
        "            color:  #f1f1f1;\n",
        "        }</style><table id=\"T_77c079be_0647_11eb_a6a3_5254004ca2ac\" ><thead>    <tr>        <th class=\"blank level0\" ></th>        <th class=\"col_heading level0 col0\" >Rt</th>        <th class=\"col_heading level0 col1\" >theta</th>        <th class=\"col_heading level0 col2\" >kappa</th>        <th class=\"col_heading level0 col3\" >rho</th>        <th class=\"col_heading level0 col4\" >sigma</th>        <th class=\"col_heading level0 col5\" >School_closing</th>        <th class=\"col_heading level0 col6\" >Workplace_closing</th>        <th class=\"col_heading level0 col7\" >Cancel_events</th>        <th class=\"col_heading level0 col8\" >Gatherings_restrictions</th>        <th class=\"col_heading level0 col9\" >Transport_closing</th>        <th class=\"col_heading level0 col10\" >Stay_home_restrictions</th>        <th class=\"col_heading level0 col11\" >Internal_movement_restrictions</th>        <th class=\"col_heading level0 col12\" >International_movement_restrictions</th>        <th class=\"col_heading level0 col13\" >Information_campaigns</th>        <th class=\"col_heading level0 col14\" >Testing_policy</th>        <th class=\"col_heading level0 col15\" >Contact_tracing</th>        <th class=\"col_heading level0 col16\" >Stringency_index</th>    </tr></thead><tbody>\n",
        "                <tr>\n",
        "                        <th id=\"T_77c079be_0647_11eb_a6a3_5254004ca2aclevel0_row0\" class=\"row_heading level0 row0\" >Rt</th>\n",
        "                        <td id=\"T_77c079be_0647_11eb_a6a3_5254004ca2acrow0_col0\" class=\"data row0 col0\" >1.000000</td>\n",
        "                        <td id=\"T_77c079be_0647_11eb_a6a3_5254004ca2acrow0_col1\" class=\"data row0 col1\" >-0.262205</td>\n",
        "                        <td id=\"T_77c079be_0647_11eb_a6a3_5254004ca2acrow0_col2\" class=\"data row0 col2\" >-0.262536</td>\n",
        "                        <td id=\"T_77c079be_0647_11eb_a6a3_5254004ca2acrow0_col3\" class=\"data row0 col3\" >0.244392</td>\n",
        "                        <td id=\"T_77c079be_0647_11eb_a6a3_5254004ca2acrow0_col4\" class=\"data row0 col4\" >-0.166754</td>\n",
        "                        <td id=\"T_77c079be_0647_11eb_a6a3_5254004ca2acrow0_col5\" class=\"data row0 col5\" >0.088404</td>\n",
        "                        <td id=\"T_77c079be_0647_11eb_a6a3_5254004ca2acrow0_col6\" class=\"data row0 col6\" >0.099212</td>\n",
        "                        <td id=\"T_77c079be_0647_11eb_a6a3_5254004ca2acrow0_col7\" class=\"data row0 col7\" >-0.065222</td>\n",
        "                        <td id=\"T_77c079be_0647_11eb_a6a3_5254004ca2acrow0_col8\" class=\"data row0 col8\" >0.040820</td>\n",
        "                        <td id=\"T_77c079be_0647_11eb_a6a3_5254004ca2acrow0_col9\" class=\"data row0 col9\" >0.036213</td>\n",
        "                        <td id=\"T_77c079be_0647_11eb_a6a3_5254004ca2acrow0_col10\" class=\"data row0 col10\" >-0.035088</td>\n",
        "                        <td id=\"T_77c079be_0647_11eb_a6a3_5254004ca2acrow0_col11\" class=\"data row0 col11\" >-0.013214</td>\n",
        "                        <td id=\"T_77c079be_0647_11eb_a6a3_5254004ca2acrow0_col12\" class=\"data row0 col12\" >-0.196991</td>\n",
        "                        <td id=\"T_77c079be_0647_11eb_a6a3_5254004ca2acrow0_col13\" class=\"data row0 col13\" >-0.050118</td>\n",
        "                        <td id=\"T_77c079be_0647_11eb_a6a3_5254004ca2acrow0_col14\" class=\"data row0 col14\" >-0.134733</td>\n",
        "                        <td id=\"T_77c079be_0647_11eb_a6a3_5254004ca2acrow0_col15\" class=\"data row0 col15\" >-0.285071</td>\n",
        "                        <td id=\"T_77c079be_0647_11eb_a6a3_5254004ca2acrow0_col16\" class=\"data row0 col16\" >0.001867</td>\n",
        "            </tr>\n",
        "            <tr>\n",
        "                        <th id=\"T_77c079be_0647_11eb_a6a3_5254004ca2aclevel0_row1\" class=\"row_heading level0 row1\" >theta</th>\n",
        "                        <td id=\"T_77c079be_0647_11eb_a6a3_5254004ca2acrow1_col0\" class=\"data row1 col0\" >-0.262205</td>\n",
        "                        <td id=\"T_77c079be_0647_11eb_a6a3_5254004ca2acrow1_col1\" class=\"data row1 col1\" >1.000000</td>\n",
        "                        <td id=\"T_77c079be_0647_11eb_a6a3_5254004ca2acrow1_col2\" class=\"data row1 col2\" >0.986880</td>\n",
        "                        <td id=\"T_77c079be_0647_11eb_a6a3_5254004ca2acrow1_col3\" class=\"data row1 col3\" >0.788191</td>\n",
        "                        <td id=\"T_77c079be_0647_11eb_a6a3_5254004ca2acrow1_col4\" class=\"data row1 col4\" >-0.040851</td>\n",
        "                        <td id=\"T_77c079be_0647_11eb_a6a3_5254004ca2acrow1_col5\" class=\"data row1 col5\" >-0.262155</td>\n",
        "                        <td id=\"T_77c079be_0647_11eb_a6a3_5254004ca2acrow1_col6\" class=\"data row1 col6\" >-0.152042</td>\n",
        "                        <td id=\"T_77c079be_0647_11eb_a6a3_5254004ca2acrow1_col7\" class=\"data row1 col7\" >-0.317558</td>\n",
        "                        <td id=\"T_77c079be_0647_11eb_a6a3_5254004ca2acrow1_col8\" class=\"data row1 col8\" >-0.183176</td>\n",
        "                        <td id=\"T_77c079be_0647_11eb_a6a3_5254004ca2acrow1_col9\" class=\"data row1 col9\" >-0.254421</td>\n",
        "                        <td id=\"T_77c079be_0647_11eb_a6a3_5254004ca2acrow1_col10\" class=\"data row1 col10\" >0.194916</td>\n",
        "                        <td id=\"T_77c079be_0647_11eb_a6a3_5254004ca2acrow1_col11\" class=\"data row1 col11\" >0.025378</td>\n",
        "                        <td id=\"T_77c079be_0647_11eb_a6a3_5254004ca2acrow1_col12\" class=\"data row1 col12\" >0.183430</td>\n",
        "                        <td id=\"T_77c079be_0647_11eb_a6a3_5254004ca2acrow1_col13\" class=\"data row1 col13\" >-0.359469</td>\n",
        "                        <td id=\"T_77c079be_0647_11eb_a6a3_5254004ca2acrow1_col14\" class=\"data row1 col14\" >-0.438173</td>\n",
        "                        <td id=\"T_77c079be_0647_11eb_a6a3_5254004ca2acrow1_col15\" class=\"data row1 col15\" >0.015865</td>\n",
        "                        <td id=\"T_77c079be_0647_11eb_a6a3_5254004ca2acrow1_col16\" class=\"data row1 col16\" >-0.108025</td>\n",
        "            </tr>\n",
        "            <tr>\n",
        "                        <th id=\"T_77c079be_0647_11eb_a6a3_5254004ca2aclevel0_row2\" class=\"row_heading level0 row2\" >kappa</th>\n",
        "                        <td id=\"T_77c079be_0647_11eb_a6a3_5254004ca2acrow2_col0\" class=\"data row2 col0\" >-0.262536</td>\n",
        "                        <td id=\"T_77c079be_0647_11eb_a6a3_5254004ca2acrow2_col1\" class=\"data row2 col1\" >0.986880</td>\n",
        "                        <td id=\"T_77c079be_0647_11eb_a6a3_5254004ca2acrow2_col2\" class=\"data row2 col2\" >1.000000</td>\n",
        "                        <td id=\"T_77c079be_0647_11eb_a6a3_5254004ca2acrow2_col3\" class=\"data row2 col3\" >0.789877</td>\n",
        "                        <td id=\"T_77c079be_0647_11eb_a6a3_5254004ca2acrow2_col4\" class=\"data row2 col4\" >-0.108280</td>\n",
        "                        <td id=\"T_77c079be_0647_11eb_a6a3_5254004ca2acrow2_col5\" class=\"data row2 col5\" >-0.286010</td>\n",
        "                        <td id=\"T_77c079be_0647_11eb_a6a3_5254004ca2acrow2_col6\" class=\"data row2 col6\" >-0.171360</td>\n",
        "                        <td id=\"T_77c079be_0647_11eb_a6a3_5254004ca2acrow2_col7\" class=\"data row2 col7\" >-0.329724</td>\n",
        "                        <td id=\"T_77c079be_0647_11eb_a6a3_5254004ca2acrow2_col8\" class=\"data row2 col8\" >-0.172726</td>\n",
        "                        <td id=\"T_77c079be_0647_11eb_a6a3_5254004ca2acrow2_col9\" class=\"data row2 col9\" >-0.232809</td>\n",
        "                        <td id=\"T_77c079be_0647_11eb_a6a3_5254004ca2acrow2_col10\" class=\"data row2 col10\" >0.193476</td>\n",
        "                        <td id=\"T_77c079be_0647_11eb_a6a3_5254004ca2acrow2_col11\" class=\"data row2 col11\" >0.034202</td>\n",
        "                        <td id=\"T_77c079be_0647_11eb_a6a3_5254004ca2acrow2_col12\" class=\"data row2 col12\" >0.220964</td>\n",
        "                        <td id=\"T_77c079be_0647_11eb_a6a3_5254004ca2acrow2_col13\" class=\"data row2 col13\" >-0.372483</td>\n",
        "                        <td id=\"T_77c079be_0647_11eb_a6a3_5254004ca2acrow2_col14\" class=\"data row2 col14\" >-0.411297</td>\n",
        "                        <td id=\"T_77c079be_0647_11eb_a6a3_5254004ca2acrow2_col15\" class=\"data row2 col15\" >-0.004318</td>\n",
        "                        <td id=\"T_77c079be_0647_11eb_a6a3_5254004ca2acrow2_col16\" class=\"data row2 col16\" >-0.120642</td>\n",
        "            </tr>\n",
        "            <tr>\n",
        "                        <th id=\"T_77c079be_0647_11eb_a6a3_5254004ca2aclevel0_row3\" class=\"row_heading level0 row3\" >rho</th>\n",
        "                        <td id=\"T_77c079be_0647_11eb_a6a3_5254004ca2acrow3_col0\" class=\"data row3 col0\" >0.244392</td>\n",
        "                        <td id=\"T_77c079be_0647_11eb_a6a3_5254004ca2acrow3_col1\" class=\"data row3 col1\" >0.788191</td>\n",
        "                        <td id=\"T_77c079be_0647_11eb_a6a3_5254004ca2acrow3_col2\" class=\"data row3 col2\" >0.789877</td>\n",
        "                        <td id=\"T_77c079be_0647_11eb_a6a3_5254004ca2acrow3_col3\" class=\"data row3 col3\" >1.000000</td>\n",
        "                        <td id=\"T_77c079be_0647_11eb_a6a3_5254004ca2acrow3_col4\" class=\"data row3 col4\" >0.014641</td>\n",
        "                        <td id=\"T_77c079be_0647_11eb_a6a3_5254004ca2acrow3_col5\" class=\"data row3 col5\" >-0.194130</td>\n",
        "                        <td id=\"T_77c079be_0647_11eb_a6a3_5254004ca2acrow3_col6\" class=\"data row3 col6\" >-0.091212</td>\n",
        "                        <td id=\"T_77c079be_0647_11eb_a6a3_5254004ca2acrow3_col7\" class=\"data row3 col7\" >-0.348119</td>\n",
        "                        <td id=\"T_77c079be_0647_11eb_a6a3_5254004ca2acrow3_col8\" class=\"data row3 col8\" >-0.134960</td>\n",
        "                        <td id=\"T_77c079be_0647_11eb_a6a3_5254004ca2acrow3_col9\" class=\"data row3 col9\" >-0.228033</td>\n",
        "                        <td id=\"T_77c079be_0647_11eb_a6a3_5254004ca2acrow3_col10\" class=\"data row3 col10\" >0.208665</td>\n",
        "                        <td id=\"T_77c079be_0647_11eb_a6a3_5254004ca2acrow3_col11\" class=\"data row3 col11\" >0.051773</td>\n",
        "                        <td id=\"T_77c079be_0647_11eb_a6a3_5254004ca2acrow3_col12\" class=\"data row3 col12\" >0.082077</td>\n",
        "                        <td id=\"T_77c079be_0647_11eb_a6a3_5254004ca2acrow3_col13\" class=\"data row3 col13\" >-0.380536</td>\n",
        "                        <td id=\"T_77c079be_0647_11eb_a6a3_5254004ca2acrow3_col14\" class=\"data row3 col14\" >-0.513499</td>\n",
        "                        <td id=\"T_77c079be_0647_11eb_a6a3_5254004ca2acrow3_col15\" class=\"data row3 col15\" >-0.085547</td>\n",
        "                        <td id=\"T_77c079be_0647_11eb_a6a3_5254004ca2acrow3_col16\" class=\"data row3 col16\" >-0.082578</td>\n",
        "            </tr>\n",
        "            <tr>\n",
        "                        <th id=\"T_77c079be_0647_11eb_a6a3_5254004ca2aclevel0_row4\" class=\"row_heading level0 row4\" >sigma</th>\n",
        "                        <td id=\"T_77c079be_0647_11eb_a6a3_5254004ca2acrow4_col0\" class=\"data row4 col0\" >-0.166754</td>\n",
        "                        <td id=\"T_77c079be_0647_11eb_a6a3_5254004ca2acrow4_col1\" class=\"data row4 col1\" >-0.040851</td>\n",
        "                        <td id=\"T_77c079be_0647_11eb_a6a3_5254004ca2acrow4_col2\" class=\"data row4 col2\" >-0.108280</td>\n",
        "                        <td id=\"T_77c079be_0647_11eb_a6a3_5254004ca2acrow4_col3\" class=\"data row4 col3\" >0.014641</td>\n",
        "                        <td id=\"T_77c079be_0647_11eb_a6a3_5254004ca2acrow4_col4\" class=\"data row4 col4\" >1.000000</td>\n",
        "                        <td id=\"T_77c079be_0647_11eb_a6a3_5254004ca2acrow4_col5\" class=\"data row4 col5\" >0.145169</td>\n",
        "                        <td id=\"T_77c079be_0647_11eb_a6a3_5254004ca2acrow4_col6\" class=\"data row4 col6\" >-0.002851</td>\n",
        "                        <td id=\"T_77c079be_0647_11eb_a6a3_5254004ca2acrow4_col7\" class=\"data row4 col7\" >0.070428</td>\n",
        "                        <td id=\"T_77c079be_0647_11eb_a6a3_5254004ca2acrow4_col8\" class=\"data row4 col8\" >-0.067737</td>\n",
        "                        <td id=\"T_77c079be_0647_11eb_a6a3_5254004ca2acrow4_col9\" class=\"data row4 col9\" >-0.037690</td>\n",
        "                        <td id=\"T_77c079be_0647_11eb_a6a3_5254004ca2acrow4_col10\" class=\"data row4 col10\" >0.024081</td>\n",
        "                        <td id=\"T_77c079be_0647_11eb_a6a3_5254004ca2acrow4_col11\" class=\"data row4 col11\" >-0.034724</td>\n",
        "                        <td id=\"T_77c079be_0647_11eb_a6a3_5254004ca2acrow4_col12\" class=\"data row4 col12\" >-0.103259</td>\n",
        "                        <td id=\"T_77c079be_0647_11eb_a6a3_5254004ca2acrow4_col13\" class=\"data row4 col13\" >0.097144</td>\n",
        "                        <td id=\"T_77c079be_0647_11eb_a6a3_5254004ca2acrow4_col14\" class=\"data row4 col14\" >-0.109721</td>\n",
        "                        <td id=\"T_77c079be_0647_11eb_a6a3_5254004ca2acrow4_col15\" class=\"data row4 col15\" >0.233176</td>\n",
        "                        <td id=\"T_77c079be_0647_11eb_a6a3_5254004ca2acrow4_col16\" class=\"data row4 col16\" >0.088817</td>\n",
        "            </tr>\n",
        "            <tr>\n",
        "                        <th id=\"T_77c079be_0647_11eb_a6a3_5254004ca2aclevel0_row5\" class=\"row_heading level0 row5\" >School_closing</th>\n",
        "                        <td id=\"T_77c079be_0647_11eb_a6a3_5254004ca2acrow5_col0\" class=\"data row5 col0\" >0.088404</td>\n",
        "                        <td id=\"T_77c079be_0647_11eb_a6a3_5254004ca2acrow5_col1\" class=\"data row5 col1\" >-0.262155</td>\n",
        "                        <td id=\"T_77c079be_0647_11eb_a6a3_5254004ca2acrow5_col2\" class=\"data row5 col2\" >-0.286010</td>\n",
        "                        <td id=\"T_77c079be_0647_11eb_a6a3_5254004ca2acrow5_col3\" class=\"data row5 col3\" >-0.194130</td>\n",
        "                        <td id=\"T_77c079be_0647_11eb_a6a3_5254004ca2acrow5_col4\" class=\"data row5 col4\" >0.145169</td>\n",
        "                        <td id=\"T_77c079be_0647_11eb_a6a3_5254004ca2acrow5_col5\" class=\"data row5 col5\" >1.000000</td>\n",
        "                        <td id=\"T_77c079be_0647_11eb_a6a3_5254004ca2acrow5_col6\" class=\"data row5 col6\" >0.735328</td>\n",
        "                        <td id=\"T_77c079be_0647_11eb_a6a3_5254004ca2acrow5_col7\" class=\"data row5 col7\" >0.769164</td>\n",
        "                        <td id=\"T_77c079be_0647_11eb_a6a3_5254004ca2acrow5_col8\" class=\"data row5 col8\" >0.629712</td>\n",
        "                        <td id=\"T_77c079be_0647_11eb_a6a3_5254004ca2acrow5_col9\" class=\"data row5 col9\" >0.534445</td>\n",
        "                        <td id=\"T_77c079be_0647_11eb_a6a3_5254004ca2acrow5_col10\" class=\"data row5 col10\" >0.504134</td>\n",
        "                        <td id=\"T_77c079be_0647_11eb_a6a3_5254004ca2acrow5_col11\" class=\"data row5 col11\" >0.524481</td>\n",
        "                        <td id=\"T_77c079be_0647_11eb_a6a3_5254004ca2acrow5_col12\" class=\"data row5 col12\" >0.432540</td>\n",
        "                        <td id=\"T_77c079be_0647_11eb_a6a3_5254004ca2acrow5_col13\" class=\"data row5 col13\" >0.766744</td>\n",
        "                        <td id=\"T_77c079be_0647_11eb_a6a3_5254004ca2acrow5_col14\" class=\"data row5 col14\" >0.616738</td>\n",
        "                        <td id=\"T_77c079be_0647_11eb_a6a3_5254004ca2acrow5_col15\" class=\"data row5 col15\" >0.345322</td>\n",
        "                        <td id=\"T_77c079be_0647_11eb_a6a3_5254004ca2acrow5_col16\" class=\"data row5 col16\" >0.814164</td>\n",
        "            </tr>\n",
        "            <tr>\n",
        "                        <th id=\"T_77c079be_0647_11eb_a6a3_5254004ca2aclevel0_row6\" class=\"row_heading level0 row6\" >Workplace_closing</th>\n",
        "                        <td id=\"T_77c079be_0647_11eb_a6a3_5254004ca2acrow6_col0\" class=\"data row6 col0\" >0.099212</td>\n",
        "                        <td id=\"T_77c079be_0647_11eb_a6a3_5254004ca2acrow6_col1\" class=\"data row6 col1\" >-0.152042</td>\n",
        "                        <td id=\"T_77c079be_0647_11eb_a6a3_5254004ca2acrow6_col2\" class=\"data row6 col2\" >-0.171360</td>\n",
        "                        <td id=\"T_77c079be_0647_11eb_a6a3_5254004ca2acrow6_col3\" class=\"data row6 col3\" >-0.091212</td>\n",
        "                        <td id=\"T_77c079be_0647_11eb_a6a3_5254004ca2acrow6_col4\" class=\"data row6 col4\" >-0.002851</td>\n",
        "                        <td id=\"T_77c079be_0647_11eb_a6a3_5254004ca2acrow6_col5\" class=\"data row6 col5\" >0.735328</td>\n",
        "                        <td id=\"T_77c079be_0647_11eb_a6a3_5254004ca2acrow6_col6\" class=\"data row6 col6\" >1.000000</td>\n",
        "                        <td id=\"T_77c079be_0647_11eb_a6a3_5254004ca2acrow6_col7\" class=\"data row6 col7\" >0.751142</td>\n",
        "                        <td id=\"T_77c079be_0647_11eb_a6a3_5254004ca2acrow6_col8\" class=\"data row6 col8\" >0.675540</td>\n",
        "                        <td id=\"T_77c079be_0647_11eb_a6a3_5254004ca2acrow6_col9\" class=\"data row6 col9\" >0.611810</td>\n",
        "                        <td id=\"T_77c079be_0647_11eb_a6a3_5254004ca2acrow6_col10\" class=\"data row6 col10\" >0.592449</td>\n",
        "                        <td id=\"T_77c079be_0647_11eb_a6a3_5254004ca2acrow6_col11\" class=\"data row6 col11\" >0.525820</td>\n",
        "                        <td id=\"T_77c079be_0647_11eb_a6a3_5254004ca2acrow6_col12\" class=\"data row6 col12\" >0.457362</td>\n",
        "                        <td id=\"T_77c079be_0647_11eb_a6a3_5254004ca2acrow6_col13\" class=\"data row6 col13\" >0.823641</td>\n",
        "                        <td id=\"T_77c079be_0647_11eb_a6a3_5254004ca2acrow6_col14\" class=\"data row6 col14\" >0.621680</td>\n",
        "                        <td id=\"T_77c079be_0647_11eb_a6a3_5254004ca2acrow6_col15\" class=\"data row6 col15\" >0.381350</td>\n",
        "                        <td id=\"T_77c079be_0647_11eb_a6a3_5254004ca2acrow6_col16\" class=\"data row6 col16\" >0.856137</td>\n",
        "            </tr>\n",
        "            <tr>\n",
        "                        <th id=\"T_77c079be_0647_11eb_a6a3_5254004ca2aclevel0_row7\" class=\"row_heading level0 row7\" >Cancel_events</th>\n",
        "                        <td id=\"T_77c079be_0647_11eb_a6a3_5254004ca2acrow7_col0\" class=\"data row7 col0\" >-0.065222</td>\n",
        "                        <td id=\"T_77c079be_0647_11eb_a6a3_5254004ca2acrow7_col1\" class=\"data row7 col1\" >-0.317558</td>\n",
        "                        <td id=\"T_77c079be_0647_11eb_a6a3_5254004ca2acrow7_col2\" class=\"data row7 col2\" >-0.329724</td>\n",
        "                        <td id=\"T_77c079be_0647_11eb_a6a3_5254004ca2acrow7_col3\" class=\"data row7 col3\" >-0.348119</td>\n",
        "                        <td id=\"T_77c079be_0647_11eb_a6a3_5254004ca2acrow7_col4\" class=\"data row7 col4\" >0.070428</td>\n",
        "                        <td id=\"T_77c079be_0647_11eb_a6a3_5254004ca2acrow7_col5\" class=\"data row7 col5\" >0.769164</td>\n",
        "                        <td id=\"T_77c079be_0647_11eb_a6a3_5254004ca2acrow7_col6\" class=\"data row7 col6\" >0.751142</td>\n",
        "                        <td id=\"T_77c079be_0647_11eb_a6a3_5254004ca2acrow7_col7\" class=\"data row7 col7\" >1.000000</td>\n",
        "                        <td id=\"T_77c079be_0647_11eb_a6a3_5254004ca2acrow7_col8\" class=\"data row7 col8\" >0.633493</td>\n",
        "                        <td id=\"T_77c079be_0647_11eb_a6a3_5254004ca2acrow7_col9\" class=\"data row7 col9\" >0.478191</td>\n",
        "                        <td id=\"T_77c079be_0647_11eb_a6a3_5254004ca2acrow7_col10\" class=\"data row7 col10\" >0.461646</td>\n",
        "                        <td id=\"T_77c079be_0647_11eb_a6a3_5254004ca2acrow7_col11\" class=\"data row7 col11\" >0.467679</td>\n",
        "                        <td id=\"T_77c079be_0647_11eb_a6a3_5254004ca2acrow7_col12\" class=\"data row7 col12\" >0.495660</td>\n",
        "                        <td id=\"T_77c079be_0647_11eb_a6a3_5254004ca2acrow7_col13\" class=\"data row7 col13\" >0.893957</td>\n",
        "                        <td id=\"T_77c079be_0647_11eb_a6a3_5254004ca2acrow7_col14\" class=\"data row7 col14\" >0.730854</td>\n",
        "                        <td id=\"T_77c079be_0647_11eb_a6a3_5254004ca2acrow7_col15\" class=\"data row7 col15\" >0.608085</td>\n",
        "                        <td id=\"T_77c079be_0647_11eb_a6a3_5254004ca2acrow7_col16\" class=\"data row7 col16\" >0.813819</td>\n",
        "            </tr>\n",
        "            <tr>\n",
        "                        <th id=\"T_77c079be_0647_11eb_a6a3_5254004ca2aclevel0_row8\" class=\"row_heading level0 row8\" >Gatherings_restrictions</th>\n",
        "                        <td id=\"T_77c079be_0647_11eb_a6a3_5254004ca2acrow8_col0\" class=\"data row8 col0\" >0.040820</td>\n",
        "                        <td id=\"T_77c079be_0647_11eb_a6a3_5254004ca2acrow8_col1\" class=\"data row8 col1\" >-0.183176</td>\n",
        "                        <td id=\"T_77c079be_0647_11eb_a6a3_5254004ca2acrow8_col2\" class=\"data row8 col2\" >-0.172726</td>\n",
        "                        <td id=\"T_77c079be_0647_11eb_a6a3_5254004ca2acrow8_col3\" class=\"data row8 col3\" >-0.134960</td>\n",
        "                        <td id=\"T_77c079be_0647_11eb_a6a3_5254004ca2acrow8_col4\" class=\"data row8 col4\" >-0.067737</td>\n",
        "                        <td id=\"T_77c079be_0647_11eb_a6a3_5254004ca2acrow8_col5\" class=\"data row8 col5\" >0.629712</td>\n",
        "                        <td id=\"T_77c079be_0647_11eb_a6a3_5254004ca2acrow8_col6\" class=\"data row8 col6\" >0.675540</td>\n",
        "                        <td id=\"T_77c079be_0647_11eb_a6a3_5254004ca2acrow8_col7\" class=\"data row8 col7\" >0.633493</td>\n",
        "                        <td id=\"T_77c079be_0647_11eb_a6a3_5254004ca2acrow8_col8\" class=\"data row8 col8\" >1.000000</td>\n",
        "                        <td id=\"T_77c079be_0647_11eb_a6a3_5254004ca2acrow8_col9\" class=\"data row8 col9\" >0.821820</td>\n",
        "                        <td id=\"T_77c079be_0647_11eb_a6a3_5254004ca2acrow8_col10\" class=\"data row8 col10\" >0.668167</td>\n",
        "                        <td id=\"T_77c079be_0647_11eb_a6a3_5254004ca2acrow8_col11\" class=\"data row8 col11\" >0.743192</td>\n",
        "                        <td id=\"T_77c079be_0647_11eb_a6a3_5254004ca2acrow8_col12\" class=\"data row8 col12\" >0.500732</td>\n",
        "                        <td id=\"T_77c079be_0647_11eb_a6a3_5254004ca2acrow8_col13\" class=\"data row8 col13\" >0.648032</td>\n",
        "                        <td id=\"T_77c079be_0647_11eb_a6a3_5254004ca2acrow8_col14\" class=\"data row8 col14\" >0.592251</td>\n",
        "                        <td id=\"T_77c079be_0647_11eb_a6a3_5254004ca2acrow8_col15\" class=\"data row8 col15\" >0.236917</td>\n",
        "                        <td id=\"T_77c079be_0647_11eb_a6a3_5254004ca2acrow8_col16\" class=\"data row8 col16\" >0.865147</td>\n",
        "            </tr>\n",
        "            <tr>\n",
        "                        <th id=\"T_77c079be_0647_11eb_a6a3_5254004ca2aclevel0_row9\" class=\"row_heading level0 row9\" >Transport_closing</th>\n",
        "                        <td id=\"T_77c079be_0647_11eb_a6a3_5254004ca2acrow9_col0\" class=\"data row9 col0\" >0.036213</td>\n",
        "                        <td id=\"T_77c079be_0647_11eb_a6a3_5254004ca2acrow9_col1\" class=\"data row9 col1\" >-0.254421</td>\n",
        "                        <td id=\"T_77c079be_0647_11eb_a6a3_5254004ca2acrow9_col2\" class=\"data row9 col2\" >-0.232809</td>\n",
        "                        <td id=\"T_77c079be_0647_11eb_a6a3_5254004ca2acrow9_col3\" class=\"data row9 col3\" >-0.228033</td>\n",
        "                        <td id=\"T_77c079be_0647_11eb_a6a3_5254004ca2acrow9_col4\" class=\"data row9 col4\" >-0.037690</td>\n",
        "                        <td id=\"T_77c079be_0647_11eb_a6a3_5254004ca2acrow9_col5\" class=\"data row9 col5\" >0.534445</td>\n",
        "                        <td id=\"T_77c079be_0647_11eb_a6a3_5254004ca2acrow9_col6\" class=\"data row9 col6\" >0.611810</td>\n",
        "                        <td id=\"T_77c079be_0647_11eb_a6a3_5254004ca2acrow9_col7\" class=\"data row9 col7\" >0.478191</td>\n",
        "                        <td id=\"T_77c079be_0647_11eb_a6a3_5254004ca2acrow9_col8\" class=\"data row9 col8\" >0.821820</td>\n",
        "                        <td id=\"T_77c079be_0647_11eb_a6a3_5254004ca2acrow9_col9\" class=\"data row9 col9\" >1.000000</td>\n",
        "                        <td id=\"T_77c079be_0647_11eb_a6a3_5254004ca2acrow9_col10\" class=\"data row9 col10\" >0.603299</td>\n",
        "                        <td id=\"T_77c079be_0647_11eb_a6a3_5254004ca2acrow9_col11\" class=\"data row9 col11\" >0.715571</td>\n",
        "                        <td id=\"T_77c079be_0647_11eb_a6a3_5254004ca2acrow9_col12\" class=\"data row9 col12\" >0.443369</td>\n",
        "                        <td id=\"T_77c079be_0647_11eb_a6a3_5254004ca2acrow9_col13\" class=\"data row9 col13\" >0.525002</td>\n",
        "                        <td id=\"T_77c079be_0647_11eb_a6a3_5254004ca2acrow9_col14\" class=\"data row9 col14\" >0.592992</td>\n",
        "                        <td id=\"T_77c079be_0647_11eb_a6a3_5254004ca2acrow9_col15\" class=\"data row9 col15\" >0.075056</td>\n",
        "                        <td id=\"T_77c079be_0647_11eb_a6a3_5254004ca2acrow9_col16\" class=\"data row9 col16\" >0.758319</td>\n",
        "            </tr>\n",
        "            <tr>\n",
        "                        <th id=\"T_77c079be_0647_11eb_a6a3_5254004ca2aclevel0_row10\" class=\"row_heading level0 row10\" >Stay_home_restrictions</th>\n",
        "                        <td id=\"T_77c079be_0647_11eb_a6a3_5254004ca2acrow10_col0\" class=\"data row10 col0\" >-0.035088</td>\n",
        "                        <td id=\"T_77c079be_0647_11eb_a6a3_5254004ca2acrow10_col1\" class=\"data row10 col1\" >0.194916</td>\n",
        "                        <td id=\"T_77c079be_0647_11eb_a6a3_5254004ca2acrow10_col2\" class=\"data row10 col2\" >0.193476</td>\n",
        "                        <td id=\"T_77c079be_0647_11eb_a6a3_5254004ca2acrow10_col3\" class=\"data row10 col3\" >0.208665</td>\n",
        "                        <td id=\"T_77c079be_0647_11eb_a6a3_5254004ca2acrow10_col4\" class=\"data row10 col4\" >0.024081</td>\n",
        "                        <td id=\"T_77c079be_0647_11eb_a6a3_5254004ca2acrow10_col5\" class=\"data row10 col5\" >0.504134</td>\n",
        "                        <td id=\"T_77c079be_0647_11eb_a6a3_5254004ca2acrow10_col6\" class=\"data row10 col6\" >0.592449</td>\n",
        "                        <td id=\"T_77c079be_0647_11eb_a6a3_5254004ca2acrow10_col7\" class=\"data row10 col7\" >0.461646</td>\n",
        "                        <td id=\"T_77c079be_0647_11eb_a6a3_5254004ca2acrow10_col8\" class=\"data row10 col8\" >0.668167</td>\n",
        "                        <td id=\"T_77c079be_0647_11eb_a6a3_5254004ca2acrow10_col9\" class=\"data row10 col9\" >0.603299</td>\n",
        "                        <td id=\"T_77c079be_0647_11eb_a6a3_5254004ca2acrow10_col10\" class=\"data row10 col10\" >1.000000</td>\n",
        "                        <td id=\"T_77c079be_0647_11eb_a6a3_5254004ca2acrow10_col11\" class=\"data row10 col11\" >0.803417</td>\n",
        "                        <td id=\"T_77c079be_0647_11eb_a6a3_5254004ca2acrow10_col12\" class=\"data row10 col12\" >0.561842</td>\n",
        "                        <td id=\"T_77c079be_0647_11eb_a6a3_5254004ca2acrow10_col13\" class=\"data row10 col13\" >0.431061</td>\n",
        "                        <td id=\"T_77c079be_0647_11eb_a6a3_5254004ca2acrow10_col14\" class=\"data row10 col14\" >0.356776</td>\n",
        "                        <td id=\"T_77c079be_0647_11eb_a6a3_5254004ca2acrow10_col15\" class=\"data row10 col15\" >0.390448</td>\n",
        "                        <td id=\"T_77c079be_0647_11eb_a6a3_5254004ca2acrow10_col16\" class=\"data row10 col16\" >0.782068</td>\n",
        "            </tr>\n",
        "            <tr>\n",
        "                        <th id=\"T_77c079be_0647_11eb_a6a3_5254004ca2aclevel0_row11\" class=\"row_heading level0 row11\" >Internal_movement_restrictions</th>\n",
        "                        <td id=\"T_77c079be_0647_11eb_a6a3_5254004ca2acrow11_col0\" class=\"data row11 col0\" >-0.013214</td>\n",
        "                        <td id=\"T_77c079be_0647_11eb_a6a3_5254004ca2acrow11_col1\" class=\"data row11 col1\" >0.025378</td>\n",
        "                        <td id=\"T_77c079be_0647_11eb_a6a3_5254004ca2acrow11_col2\" class=\"data row11 col2\" >0.034202</td>\n",
        "                        <td id=\"T_77c079be_0647_11eb_a6a3_5254004ca2acrow11_col3\" class=\"data row11 col3\" >0.051773</td>\n",
        "                        <td id=\"T_77c079be_0647_11eb_a6a3_5254004ca2acrow11_col4\" class=\"data row11 col4\" >-0.034724</td>\n",
        "                        <td id=\"T_77c079be_0647_11eb_a6a3_5254004ca2acrow11_col5\" class=\"data row11 col5\" >0.524481</td>\n",
        "                        <td id=\"T_77c079be_0647_11eb_a6a3_5254004ca2acrow11_col6\" class=\"data row11 col6\" >0.525820</td>\n",
        "                        <td id=\"T_77c079be_0647_11eb_a6a3_5254004ca2acrow11_col7\" class=\"data row11 col7\" >0.467679</td>\n",
        "                        <td id=\"T_77c079be_0647_11eb_a6a3_5254004ca2acrow11_col8\" class=\"data row11 col8\" >0.743192</td>\n",
        "                        <td id=\"T_77c079be_0647_11eb_a6a3_5254004ca2acrow11_col9\" class=\"data row11 col9\" >0.715571</td>\n",
        "                        <td id=\"T_77c079be_0647_11eb_a6a3_5254004ca2acrow11_col10\" class=\"data row11 col10\" >0.803417</td>\n",
        "                        <td id=\"T_77c079be_0647_11eb_a6a3_5254004ca2acrow11_col11\" class=\"data row11 col11\" >1.000000</td>\n",
        "                        <td id=\"T_77c079be_0647_11eb_a6a3_5254004ca2acrow11_col12\" class=\"data row11 col12\" >0.479042</td>\n",
        "                        <td id=\"T_77c079be_0647_11eb_a6a3_5254004ca2acrow11_col13\" class=\"data row11 col13\" >0.430380</td>\n",
        "                        <td id=\"T_77c079be_0647_11eb_a6a3_5254004ca2acrow11_col14\" class=\"data row11 col14\" >0.404673</td>\n",
        "                        <td id=\"T_77c079be_0647_11eb_a6a3_5254004ca2acrow11_col15\" class=\"data row11 col15\" >0.194076</td>\n",
        "                        <td id=\"T_77c079be_0647_11eb_a6a3_5254004ca2acrow11_col16\" class=\"data row11 col16\" >0.755570</td>\n",
        "            </tr>\n",
        "            <tr>\n",
        "                        <th id=\"T_77c079be_0647_11eb_a6a3_5254004ca2aclevel0_row12\" class=\"row_heading level0 row12\" >International_movement_restrictions</th>\n",
        "                        <td id=\"T_77c079be_0647_11eb_a6a3_5254004ca2acrow12_col0\" class=\"data row12 col0\" >-0.196991</td>\n",
        "                        <td id=\"T_77c079be_0647_11eb_a6a3_5254004ca2acrow12_col1\" class=\"data row12 col1\" >0.183430</td>\n",
        "                        <td id=\"T_77c079be_0647_11eb_a6a3_5254004ca2acrow12_col2\" class=\"data row12 col2\" >0.220964</td>\n",
        "                        <td id=\"T_77c079be_0647_11eb_a6a3_5254004ca2acrow12_col3\" class=\"data row12 col3\" >0.082077</td>\n",
        "                        <td id=\"T_77c079be_0647_11eb_a6a3_5254004ca2acrow12_col4\" class=\"data row12 col4\" >-0.103259</td>\n",
        "                        <td id=\"T_77c079be_0647_11eb_a6a3_5254004ca2acrow12_col5\" class=\"data row12 col5\" >0.432540</td>\n",
        "                        <td id=\"T_77c079be_0647_11eb_a6a3_5254004ca2acrow12_col6\" class=\"data row12 col6\" >0.457362</td>\n",
        "                        <td id=\"T_77c079be_0647_11eb_a6a3_5254004ca2acrow12_col7\" class=\"data row12 col7\" >0.495660</td>\n",
        "                        <td id=\"T_77c079be_0647_11eb_a6a3_5254004ca2acrow12_col8\" class=\"data row12 col8\" >0.500732</td>\n",
        "                        <td id=\"T_77c079be_0647_11eb_a6a3_5254004ca2acrow12_col9\" class=\"data row12 col9\" >0.443369</td>\n",
        "                        <td id=\"T_77c079be_0647_11eb_a6a3_5254004ca2acrow12_col10\" class=\"data row12 col10\" >0.561842</td>\n",
        "                        <td id=\"T_77c079be_0647_11eb_a6a3_5254004ca2acrow12_col11\" class=\"data row12 col11\" >0.479042</td>\n",
        "                        <td id=\"T_77c079be_0647_11eb_a6a3_5254004ca2acrow12_col12\" class=\"data row12 col12\" >1.000000</td>\n",
        "                        <td id=\"T_77c079be_0647_11eb_a6a3_5254004ca2acrow12_col13\" class=\"data row12 col13\" >0.459954</td>\n",
        "                        <td id=\"T_77c079be_0647_11eb_a6a3_5254004ca2acrow12_col14\" class=\"data row12 col14\" >0.567820</td>\n",
        "                        <td id=\"T_77c079be_0647_11eb_a6a3_5254004ca2acrow12_col15\" class=\"data row12 col15\" >0.488976</td>\n",
        "                        <td id=\"T_77c079be_0647_11eb_a6a3_5254004ca2acrow12_col16\" class=\"data row12 col16\" >0.633490</td>\n",
        "            </tr>\n",
        "            <tr>\n",
        "                        <th id=\"T_77c079be_0647_11eb_a6a3_5254004ca2aclevel0_row13\" class=\"row_heading level0 row13\" >Information_campaigns</th>\n",
        "                        <td id=\"T_77c079be_0647_11eb_a6a3_5254004ca2acrow13_col0\" class=\"data row13 col0\" >-0.050118</td>\n",
        "                        <td id=\"T_77c079be_0647_11eb_a6a3_5254004ca2acrow13_col1\" class=\"data row13 col1\" >-0.359469</td>\n",
        "                        <td id=\"T_77c079be_0647_11eb_a6a3_5254004ca2acrow13_col2\" class=\"data row13 col2\" >-0.372483</td>\n",
        "                        <td id=\"T_77c079be_0647_11eb_a6a3_5254004ca2acrow13_col3\" class=\"data row13 col3\" >-0.380536</td>\n",
        "                        <td id=\"T_77c079be_0647_11eb_a6a3_5254004ca2acrow13_col4\" class=\"data row13 col4\" >0.097144</td>\n",
        "                        <td id=\"T_77c079be_0647_11eb_a6a3_5254004ca2acrow13_col5\" class=\"data row13 col5\" >0.766744</td>\n",
        "                        <td id=\"T_77c079be_0647_11eb_a6a3_5254004ca2acrow13_col6\" class=\"data row13 col6\" >0.823641</td>\n",
        "                        <td id=\"T_77c079be_0647_11eb_a6a3_5254004ca2acrow13_col7\" class=\"data row13 col7\" >0.893957</td>\n",
        "                        <td id=\"T_77c079be_0647_11eb_a6a3_5254004ca2acrow13_col8\" class=\"data row13 col8\" >0.648032</td>\n",
        "                        <td id=\"T_77c079be_0647_11eb_a6a3_5254004ca2acrow13_col9\" class=\"data row13 col9\" >0.525002</td>\n",
        "                        <td id=\"T_77c079be_0647_11eb_a6a3_5254004ca2acrow13_col10\" class=\"data row13 col10\" >0.431061</td>\n",
        "                        <td id=\"T_77c079be_0647_11eb_a6a3_5254004ca2acrow13_col11\" class=\"data row13 col11\" >0.430380</td>\n",
        "                        <td id=\"T_77c079be_0647_11eb_a6a3_5254004ca2acrow13_col12\" class=\"data row13 col12\" >0.459954</td>\n",
        "                        <td id=\"T_77c079be_0647_11eb_a6a3_5254004ca2acrow13_col13\" class=\"data row13 col13\" >1.000000</td>\n",
        "                        <td id=\"T_77c079be_0647_11eb_a6a3_5254004ca2acrow13_col14\" class=\"data row13 col14\" >0.744964</td>\n",
        "                        <td id=\"T_77c079be_0647_11eb_a6a3_5254004ca2acrow13_col15\" class=\"data row13 col15\" >0.560464</td>\n",
        "                        <td id=\"T_77c079be_0647_11eb_a6a3_5254004ca2acrow13_col16\" class=\"data row13 col16\" >0.825604</td>\n",
        "            </tr>\n",
        "            <tr>\n",
        "                        <th id=\"T_77c079be_0647_11eb_a6a3_5254004ca2aclevel0_row14\" class=\"row_heading level0 row14\" >Testing_policy</th>\n",
        "                        <td id=\"T_77c079be_0647_11eb_a6a3_5254004ca2acrow14_col0\" class=\"data row14 col0\" >-0.134733</td>\n",
        "                        <td id=\"T_77c079be_0647_11eb_a6a3_5254004ca2acrow14_col1\" class=\"data row14 col1\" >-0.438173</td>\n",
        "                        <td id=\"T_77c079be_0647_11eb_a6a3_5254004ca2acrow14_col2\" class=\"data row14 col2\" >-0.411297</td>\n",
        "                        <td id=\"T_77c079be_0647_11eb_a6a3_5254004ca2acrow14_col3\" class=\"data row14 col3\" >-0.513499</td>\n",
        "                        <td id=\"T_77c079be_0647_11eb_a6a3_5254004ca2acrow14_col4\" class=\"data row14 col4\" >-0.109721</td>\n",
        "                        <td id=\"T_77c079be_0647_11eb_a6a3_5254004ca2acrow14_col5\" class=\"data row14 col5\" >0.616738</td>\n",
        "                        <td id=\"T_77c079be_0647_11eb_a6a3_5254004ca2acrow14_col6\" class=\"data row14 col6\" >0.621680</td>\n",
        "                        <td id=\"T_77c079be_0647_11eb_a6a3_5254004ca2acrow14_col7\" class=\"data row14 col7\" >0.730854</td>\n",
        "                        <td id=\"T_77c079be_0647_11eb_a6a3_5254004ca2acrow14_col8\" class=\"data row14 col8\" >0.592251</td>\n",
        "                        <td id=\"T_77c079be_0647_11eb_a6a3_5254004ca2acrow14_col9\" class=\"data row14 col9\" >0.592992</td>\n",
        "                        <td id=\"T_77c079be_0647_11eb_a6a3_5254004ca2acrow14_col10\" class=\"data row14 col10\" >0.356776</td>\n",
        "                        <td id=\"T_77c079be_0647_11eb_a6a3_5254004ca2acrow14_col11\" class=\"data row14 col11\" >0.404673</td>\n",
        "                        <td id=\"T_77c079be_0647_11eb_a6a3_5254004ca2acrow14_col12\" class=\"data row14 col12\" >0.567820</td>\n",
        "                        <td id=\"T_77c079be_0647_11eb_a6a3_5254004ca2acrow14_col13\" class=\"data row14 col13\" >0.744964</td>\n",
        "                        <td id=\"T_77c079be_0647_11eb_a6a3_5254004ca2acrow14_col14\" class=\"data row14 col14\" >1.000000</td>\n",
        "                        <td id=\"T_77c079be_0647_11eb_a6a3_5254004ca2acrow14_col15\" class=\"data row14 col15\" >0.350280</td>\n",
        "                        <td id=\"T_77c079be_0647_11eb_a6a3_5254004ca2acrow14_col16\" class=\"data row14 col16\" >0.644021</td>\n",
        "            </tr>\n",
        "            <tr>\n",
        "                        <th id=\"T_77c079be_0647_11eb_a6a3_5254004ca2aclevel0_row15\" class=\"row_heading level0 row15\" >Contact_tracing</th>\n",
        "                        <td id=\"T_77c079be_0647_11eb_a6a3_5254004ca2acrow15_col0\" class=\"data row15 col0\" >-0.285071</td>\n",
        "                        <td id=\"T_77c079be_0647_11eb_a6a3_5254004ca2acrow15_col1\" class=\"data row15 col1\" >0.015865</td>\n",
        "                        <td id=\"T_77c079be_0647_11eb_a6a3_5254004ca2acrow15_col2\" class=\"data row15 col2\" >-0.004318</td>\n",
        "                        <td id=\"T_77c079be_0647_11eb_a6a3_5254004ca2acrow15_col3\" class=\"data row15 col3\" >-0.085547</td>\n",
        "                        <td id=\"T_77c079be_0647_11eb_a6a3_5254004ca2acrow15_col4\" class=\"data row15 col4\" >0.233176</td>\n",
        "                        <td id=\"T_77c079be_0647_11eb_a6a3_5254004ca2acrow15_col5\" class=\"data row15 col5\" >0.345322</td>\n",
        "                        <td id=\"T_77c079be_0647_11eb_a6a3_5254004ca2acrow15_col6\" class=\"data row15 col6\" >0.381350</td>\n",
        "                        <td id=\"T_77c079be_0647_11eb_a6a3_5254004ca2acrow15_col7\" class=\"data row15 col7\" >0.608085</td>\n",
        "                        <td id=\"T_77c079be_0647_11eb_a6a3_5254004ca2acrow15_col8\" class=\"data row15 col8\" >0.236917</td>\n",
        "                        <td id=\"T_77c079be_0647_11eb_a6a3_5254004ca2acrow15_col9\" class=\"data row15 col9\" >0.075056</td>\n",
        "                        <td id=\"T_77c079be_0647_11eb_a6a3_5254004ca2acrow15_col10\" class=\"data row15 col10\" >0.390448</td>\n",
        "                        <td id=\"T_77c079be_0647_11eb_a6a3_5254004ca2acrow15_col11\" class=\"data row15 col11\" >0.194076</td>\n",
        "                        <td id=\"T_77c079be_0647_11eb_a6a3_5254004ca2acrow15_col12\" class=\"data row15 col12\" >0.488976</td>\n",
        "                        <td id=\"T_77c079be_0647_11eb_a6a3_5254004ca2acrow15_col13\" class=\"data row15 col13\" >0.560464</td>\n",
        "                        <td id=\"T_77c079be_0647_11eb_a6a3_5254004ca2acrow15_col14\" class=\"data row15 col14\" >0.350280</td>\n",
        "                        <td id=\"T_77c079be_0647_11eb_a6a3_5254004ca2acrow15_col15\" class=\"data row15 col15\" >1.000000</td>\n",
        "                        <td id=\"T_77c079be_0647_11eb_a6a3_5254004ca2acrow15_col16\" class=\"data row15 col16\" >0.494411</td>\n",
        "            </tr>\n",
        "            <tr>\n",
        "                        <th id=\"T_77c079be_0647_11eb_a6a3_5254004ca2aclevel0_row16\" class=\"row_heading level0 row16\" >Stringency_index</th>\n",
        "                        <td id=\"T_77c079be_0647_11eb_a6a3_5254004ca2acrow16_col0\" class=\"data row16 col0\" >0.001867</td>\n",
        "                        <td id=\"T_77c079be_0647_11eb_a6a3_5254004ca2acrow16_col1\" class=\"data row16 col1\" >-0.108025</td>\n",
        "                        <td id=\"T_77c079be_0647_11eb_a6a3_5254004ca2acrow16_col2\" class=\"data row16 col2\" >-0.120642</td>\n",
        "                        <td id=\"T_77c079be_0647_11eb_a6a3_5254004ca2acrow16_col3\" class=\"data row16 col3\" >-0.082578</td>\n",
        "                        <td id=\"T_77c079be_0647_11eb_a6a3_5254004ca2acrow16_col4\" class=\"data row16 col4\" >0.088817</td>\n",
        "                        <td id=\"T_77c079be_0647_11eb_a6a3_5254004ca2acrow16_col5\" class=\"data row16 col5\" >0.814164</td>\n",
        "                        <td id=\"T_77c079be_0647_11eb_a6a3_5254004ca2acrow16_col6\" class=\"data row16 col6\" >0.856137</td>\n",
        "                        <td id=\"T_77c079be_0647_11eb_a6a3_5254004ca2acrow16_col7\" class=\"data row16 col7\" >0.813819</td>\n",
        "                        <td id=\"T_77c079be_0647_11eb_a6a3_5254004ca2acrow16_col8\" class=\"data row16 col8\" >0.865147</td>\n",
        "                        <td id=\"T_77c079be_0647_11eb_a6a3_5254004ca2acrow16_col9\" class=\"data row16 col9\" >0.758319</td>\n",
        "                        <td id=\"T_77c079be_0647_11eb_a6a3_5254004ca2acrow16_col10\" class=\"data row16 col10\" >0.782068</td>\n",
        "                        <td id=\"T_77c079be_0647_11eb_a6a3_5254004ca2acrow16_col11\" class=\"data row16 col11\" >0.755570</td>\n",
        "                        <td id=\"T_77c079be_0647_11eb_a6a3_5254004ca2acrow16_col12\" class=\"data row16 col12\" >0.633490</td>\n",
        "                        <td id=\"T_77c079be_0647_11eb_a6a3_5254004ca2acrow16_col13\" class=\"data row16 col13\" >0.825604</td>\n",
        "                        <td id=\"T_77c079be_0647_11eb_a6a3_5254004ca2acrow16_col14\" class=\"data row16 col14\" >0.644021</td>\n",
        "                        <td id=\"T_77c079be_0647_11eb_a6a3_5254004ca2acrow16_col15\" class=\"data row16 col15\" >0.494411</td>\n",
        "                        <td id=\"T_77c079be_0647_11eb_a6a3_5254004ca2acrow16_col16\" class=\"data row16 col16\" >1.000000</td>\n",
        "            </tr>\n",
        "    </tbody></table>"
       ],
       "output_type": "pyout",
       "prompt_number": 21,
       "text": [
        "<pandas.io.formats.style.Styler at 0x7ff39404ec40>"
       ]
      }
     ],
     "prompt_number": 21
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "# Scatter plot of Stringency index and Rt\n",
      "df = track_df.copy()\n",
      "sns.scatterplot(data=df, x=\"Stringency_index\", y=\"Rt\", hue=\"Country\", legend=\"brief\", marker=\"+\")\n",
      "bbox_to_anchor=(1.02, 0)\n",
      "bbox_loc=\"lower left\"\n",
      "plt.legend(bbox_to_anchor=bbox_to_anchor, loc=bbox_loc, borderaxespad=0)\n",
      "plt.title(\"Relationship of Stringency index and reproduction number\")\n",
      "plt.ylabel(\"Reproduction number\")\n",
      "plt.xlabel(\"Stringency index\")\n",
      "plt.show()"
     ],
     "language": "python",
     "metadata": {},
     "outputs": [
      {
       "output_type": "display_data",
       "png": "\n",
       "text": [
        "<Figure size 432x288 with 1 Axes>"
       ]
      }
     ],
     "prompt_number": 22
    }
   ],
   "metadata": {}
  }
 ]
}
