{
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3.8.2 64-bit ('.venv': venv)",
   "name": "python_defaultSpec_1597669925034"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.8.2-final"
  },
  "name": ""
 },
 "nbformat": 3,
 "nbformat_minor": 0,
 "worksheets": [
  {
   "cells": [
    {
     "cell_type": "markdown",
     "metadata": {},
     "source": [
      "# Usage (details: policy measures)\n",
      "Here, we will analyse the relationship of policy measures and parameter values of SIR-derived ODE models. Policy measures are tracked by [Oxford Covid-19 Government Response Tracker (OxCGRT)](https://github.com/OxCGRT/covid-policy-tracker)."
     ]
    },
    {
     "cell_type": "heading",
     "level": 2,
     "metadata": {},
     "source": [
      "Preparation"
     ]
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "# Standard users\n",
      "# !pip install covsirphy\n",
      "# Developers (Note: this notebook is in example directory)\n",
      "import os\n",
      "os.chdir(\"../\")"
     ],
     "language": "python",
     "metadata": {},
     "outputs": [],
     "prompt_number": 1
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "from pprint import pprint"
     ],
     "language": "python",
     "metadata": {},
     "outputs": [],
     "prompt_number": 2
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "import covsirphy as cs\n",
      "cs.__version__"
     ],
     "language": "python",
     "metadata": {},
     "outputs": [
      {
       "output_type": "pyout",
       "prompt_number": 3,
       "text": [
        "'2.8.3-alpha.new.224'"
       ]
      }
     ],
     "prompt_number": 3
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "# Standard users and developers\n",
      "data_loader = cs.DataLoader(\"input\")\n",
      "# The number of cases (JHU style)\n",
      "jhu_data = data_loader.jhu(verbose=False)\n",
      "# Population in each country\n",
      "population_data = data_loader.population(verbose=False)\n",
      "# Government Response Tracker (OxCGRT)\n",
      "oxcgrt_data = data_loader.oxcgrt(verbose=False)\n",
      "# Description/citation\n",
      "print(oxcgrt_data.citation)"
     ],
     "language": "python",
     "metadata": {
      "tags": []
     },
     "outputs": [
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "(Secondary source) Guidotti, E., Ardia, D., (2020), \"COVID-19 Data Hub\", Journal of Open Source Software 5(51):2376, doi: 10.21105/joss.02376.\n",
        "We can get Citation list of primary sources with DataLoader(...).covid19dh_citation"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      }
     ],
     "prompt_number": 4
    },
    {
     "cell_type": "markdown",
     "metadata": {},
     "source": [
      "## Class for policy measure analysis\n",
      "We will `PolicyMeasures` class to find relationship of policy measures and parameter values of SIR-derived ODE models."
     ]
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "# Create analyser with tau value 360 [min] (can be changed)\n",
      "analyser = cs.PolicyMeasures(jhu_data, population_data, oxcgrt_data, tau=360)\n",
      "# The number of registerd countries\n",
      "len(analyser.countries)"
     ],
     "language": "python",
     "metadata": {
      "tags": []
     },
     "outputs": [
      {
       "output_type": "pyout",
       "prompt_number": 5,
       "text": [
        "184"
       ]
      }
     ],
     "prompt_number": 5
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "# We can get Scenario instance for detailed scenario analysis\n",
      "type(analyser.scenario(\"Japan\"))"
     ],
     "language": "python",
     "metadata": {},
     "outputs": [
      {
       "output_type": "pyout",
       "prompt_number": 6,
       "text": [
        "covsirphy.analysis.scenario.Scenario"
       ]
      }
     ],
     "prompt_number": 6
    },
    {
     "cell_type": "markdown",
     "metadata": {},
     "source": [
      "## Set phases with S-R trend analysis\n",
      "We will perform S-R trend analysis to set phases in all countries. Countries which do not have **12th phases** will be un-registered for the next analysis. This number will be adjusted for your analysis."
     ]
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "# Show the number of phases of all countries\n",
      "analyser.trend()\n",
      "pprint(analyser.phase_len(), compact=True)"
     ],
     "language": "python",
     "metadata": {},
     "outputs": [
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "{"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "3"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ": "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "['Holy See']"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        " "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "4"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ": "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "['Georgia', 'Tanzania', 'Hungary']"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        " "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "5"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ": "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "["
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Papua New Guinea'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Grenada'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Fiji'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Brunei'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Myanmar'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Jordan'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        "     "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Slovakia'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "]"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        " "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "6"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ": "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "["
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Uganda'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Tunisia'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Yemen'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Andorra'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Seychelles'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Jamaica'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        "     "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Antigua and Barbuda'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Czech Republic'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Ireland'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Libya'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Cambodia'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        "     "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Equatorial Guinea'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Spain'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Dominica'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Kazakhstan'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Belize'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "]"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        " "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "7"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ": "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "["
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Mauritius'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Angola'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'San Marino'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Malta'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Zimbabwe'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Cyprus'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        "     "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Colombia'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Malawi'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Namibia'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'South Sudan'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Luxembourg'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Gambia'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        "     "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Montenegro'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Lesotho'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Guyana'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Zambia'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Paraguay'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        "     "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Sao Tome and Principe'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Nepal'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Slovenia'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Central African Republic'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        "     "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Saint Vincent and the Grenadines'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Trinidad and Tobago'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Morocco'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        "     "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Netherlands'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Bahamas'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "]"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        " "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "8"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ": "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "["
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Lebanon'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Argentina'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Austria'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Bhutan'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Israel'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Nicaragua'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        "     "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Comoros'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Monaco'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Palestine'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Saint Lucia'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Guinea-Bissau'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        "     "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Djibouti'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Greece'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Taiwan'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Mozambique'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Eritrea'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Burkina Faso'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        "     "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Iceland'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Liechtenstein'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Mongolia'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Vietnam'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Denmark'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Rwanda'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        "     "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Kyrgyzstan'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Croatia'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Afghanistan'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Niger'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'New Zealand'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Burundi'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        "     "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Benin'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Thailand'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Ukraine'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Australia'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Madagascar'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Lithuania'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "]"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        " "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "9"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ": "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "["
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Barbados'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Venezuela'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Botswana'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Kenya'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Chad'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Estonia'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Gabon'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        "     "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Ecuador'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Serbia'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Ghana'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Norway'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Philippines'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Romania'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        "     "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Ethiopia'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Suriname'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Qatar'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Costa Rica'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Cameroon'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Haiti'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        "     "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'China'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Mauritania'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Syria'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Korea, South'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Kosovo'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Tajikistan'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        "     "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Cape Verde'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Sudan'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'South Africa'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Maldives'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Sierra Leone'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        "     "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Bermuda'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "]"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        " "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "10"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ": "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "["
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'El Salvador'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Swaziland'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'India'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Singapore'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Indonesia'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Japan'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        "      "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Finland'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Uzbekistan'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Chile'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Senegal'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Sri Lanka'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Azerbaijan'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        "      "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Pakistan'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Albania'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Guatemala'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Congo'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Uruguay'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Somalia'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        "      "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Malaysia'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Oman'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Saudi Arabia'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Cuba'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Bulgaria'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Poland'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        "      "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Belarus'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "]"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        " "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "11"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ": "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "["
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Germany'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Bosnia and Herzegovina'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Iraq'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Egypt'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Liberia'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        "      "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Bangladesh'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Nigeria'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Armenia'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Canada'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'United Arab Emirates'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        "      "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Peru'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Guinea'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Togo'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Switzerland'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Mali'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Portugal'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Panama'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        "      "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Belgium'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "]"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        " "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "12"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ": "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "["
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Algeria'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Italy'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Mexico'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Macedonia'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Turkey'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Latvia'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        "      "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Dominican Republic'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Bolivia'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Honduras'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Kuwait'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Bahrain'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        "      "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Brazil'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'France'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'United States'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Moldova'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "]"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        " "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "13"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ": "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "['Iran', 'Russia']"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "}"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      }
     ],
     "prompt_number": 7
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "# Set phases with S-R trend analysis\n",
      "analyser.trend(min_len=12)\n",
      "# The number of countries\n",
      "len(analyser.countries)"
     ],
     "language": "python",
     "metadata": {},
     "outputs": [
      {
       "output_type": "pyout",
       "prompt_number": 8,
       "text": [
        "17"
       ]
      }
     ],
     "prompt_number": 8
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "phase_len_dict = analyser.phase_len()\n",
      "pprint(phase_len_dict, compact=True)"
     ],
     "language": "python",
     "metadata": {
      "tags": []
     },
     "outputs": [
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "{"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "12"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ": "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "["
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Algeria'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Italy'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Mexico'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Macedonia'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Turkey'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Latvia'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        "      "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Dominican Republic'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Bolivia'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Honduras'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Kuwait'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Bahrain'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        "      "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Brazil'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'France'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'United States'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Moldova'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "]"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        " "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "13"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ": "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "['Iran', 'Russia']"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "}"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      }
     ],
     "prompt_number": 9
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "# Here, only show the countries which have the most phases\n",
      "countries_show = max(phase_len_dict.items(), key=lambda x: x[0])[1]\n",
      "# Show summary\n",
      "analyser.summary(countries=countries_show)"
     ],
     "language": "python",
     "metadata": {
      "tags": []
     },
     "outputs": [
      {
       "html": [
        "<div>\n",
        "<style scoped>\n",
        "    .dataframe tbody tr th:only-of-type {\n",
        "        vertical-align: middle;\n",
        "    }\n",
        "\n",
        "    .dataframe tbody tr th {\n",
        "        vertical-align: top;\n",
        "    }\n",
        "\n",
        "    .dataframe thead th {\n",
        "        text-align: right;\n",
        "    }\n",
        "</style>\n",
        "<table border=\"1\" class=\"dataframe\">\n",
        "  <thead>\n",
        "    <tr style=\"text-align: right;\">\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th>Type</th>\n",
        "      <th>Start</th>\n",
        "      <th>End</th>\n",
        "      <th>Population</th>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>Country</th>\n",
        "      <th>Phase</th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "    </tr>\n",
        "  </thead>\n",
        "  <tbody>\n",
        "    <tr>\n",
        "      <th rowspan=\"13\" valign=\"top\">Iran</th>\n",
        "      <th>0th</th>\n",
        "      <td>Past</td>\n",
        "      <td>26Feb2020</td>\n",
        "      <td>28Mar2020</td>\n",
        "      <td>81800269</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>1st</th>\n",
        "      <td>Past</td>\n",
        "      <td>29Mar2020</td>\n",
        "      <td>17Apr2020</td>\n",
        "      <td>81800269</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>2nd</th>\n",
        "      <td>Past</td>\n",
        "      <td>18Apr2020</td>\n",
        "      <td>14May2020</td>\n",
        "      <td>81800269</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>3rd</th>\n",
        "      <td>Past</td>\n",
        "      <td>15May2020</td>\n",
        "      <td>01Jun2020</td>\n",
        "      <td>81800269</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>4th</th>\n",
        "      <td>Past</td>\n",
        "      <td>02Jun2020</td>\n",
        "      <td>16Jun2020</td>\n",
        "      <td>81800269</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>5th</th>\n",
        "      <td>Past</td>\n",
        "      <td>17Jun2020</td>\n",
        "      <td>01Jul2020</td>\n",
        "      <td>81800269</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>6th</th>\n",
        "      <td>Past</td>\n",
        "      <td>02Jul2020</td>\n",
        "      <td>16Jul2020</td>\n",
        "      <td>81800269</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>7th</th>\n",
        "      <td>Past</td>\n",
        "      <td>17Jul2020</td>\n",
        "      <td>31Jul2020</td>\n",
        "      <td>81800269</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>8th</th>\n",
        "      <td>Past</td>\n",
        "      <td>01Aug2020</td>\n",
        "      <td>17Aug2020</td>\n",
        "      <td>81800269</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>9th</th>\n",
        "      <td>Past</td>\n",
        "      <td>18Aug2020</td>\n",
        "      <td>06Sep2020</td>\n",
        "      <td>81800269</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>10th</th>\n",
        "      <td>Past</td>\n",
        "      <td>07Sep2020</td>\n",
        "      <td>22Sep2020</td>\n",
        "      <td>81800269</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>11th</th>\n",
        "      <td>Past</td>\n",
        "      <td>23Sep2020</td>\n",
        "      <td>05Oct2020</td>\n",
        "      <td>81800269</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>12th</th>\n",
        "      <td>Past</td>\n",
        "      <td>06Oct2020</td>\n",
        "      <td>17Oct2020</td>\n",
        "      <td>81800269</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th rowspan=\"13\" valign=\"top\">Russia</th>\n",
        "      <th>0th</th>\n",
        "      <td>Past</td>\n",
        "      <td>12Feb2020</td>\n",
        "      <td>07May2020</td>\n",
        "      <td>330457362</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>1st</th>\n",
        "      <td>Past</td>\n",
        "      <td>08May2020</td>\n",
        "      <td>18May2020</td>\n",
        "      <td>330457362</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>2nd</th>\n",
        "      <td>Past</td>\n",
        "      <td>19May2020</td>\n",
        "      <td>29May2020</td>\n",
        "      <td>330457362</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>3rd</th>\n",
        "      <td>Past</td>\n",
        "      <td>30May2020</td>\n",
        "      <td>10Jun2020</td>\n",
        "      <td>330457362</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>4th</th>\n",
        "      <td>Past</td>\n",
        "      <td>11Jun2020</td>\n",
        "      <td>20Jun2020</td>\n",
        "      <td>330457362</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>5th</th>\n",
        "      <td>Past</td>\n",
        "      <td>21Jun2020</td>\n",
        "      <td>03Jul2020</td>\n",
        "      <td>330457362</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>6th</th>\n",
        "      <td>Past</td>\n",
        "      <td>04Jul2020</td>\n",
        "      <td>17Jul2020</td>\n",
        "      <td>330457362</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>7th</th>\n",
        "      <td>Past</td>\n",
        "      <td>18Jul2020</td>\n",
        "      <td>03Aug2020</td>\n",
        "      <td>330457362</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>8th</th>\n",
        "      <td>Past</td>\n",
        "      <td>04Aug2020</td>\n",
        "      <td>22Aug2020</td>\n",
        "      <td>330457362</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>9th</th>\n",
        "      <td>Past</td>\n",
        "      <td>23Aug2020</td>\n",
        "      <td>09Sep2020</td>\n",
        "      <td>330457362</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>10th</th>\n",
        "      <td>Past</td>\n",
        "      <td>10Sep2020</td>\n",
        "      <td>25Sep2020</td>\n",
        "      <td>330457362</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>11th</th>\n",
        "      <td>Past</td>\n",
        "      <td>26Sep2020</td>\n",
        "      <td>06Oct2020</td>\n",
        "      <td>330457362</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>12th</th>\n",
        "      <td>Past</td>\n",
        "      <td>07Oct2020</td>\n",
        "      <td>17Oct2020</td>\n",
        "      <td>330457362</td>\n",
        "    </tr>\n",
        "  </tbody>\n",
        "</table>\n",
        "</div>"
       ],
       "output_type": "pyout",
       "prompt_number": 10,
       "text": [
        "               Type      Start        End  Population\n",
        "Country Phase                                        \n",
        "Iran    0th    Past  26Feb2020  28Mar2020    81800269\n",
        "        1st    Past  29Mar2020  17Apr2020    81800269\n",
        "        2nd    Past  18Apr2020  14May2020    81800269\n",
        "        3rd    Past  15May2020  01Jun2020    81800269\n",
        "        4th    Past  02Jun2020  16Jun2020    81800269\n",
        "        5th    Past  17Jun2020  01Jul2020    81800269\n",
        "        6th    Past  02Jul2020  16Jul2020    81800269\n",
        "        7th    Past  17Jul2020  31Jul2020    81800269\n",
        "        8th    Past  01Aug2020  17Aug2020    81800269\n",
        "        9th    Past  18Aug2020  06Sep2020    81800269\n",
        "        10th   Past  07Sep2020  22Sep2020    81800269\n",
        "        11th   Past  23Sep2020  05Oct2020    81800269\n",
        "        12th   Past  06Oct2020  17Oct2020    81800269\n",
        "Russia  0th    Past  12Feb2020  07May2020   330457362\n",
        "        1st    Past  08May2020  18May2020   330457362\n",
        "        2nd    Past  19May2020  29May2020   330457362\n",
        "        3rd    Past  30May2020  10Jun2020   330457362\n",
        "        4th    Past  11Jun2020  20Jun2020   330457362\n",
        "        5th    Past  21Jun2020  03Jul2020   330457362\n",
        "        6th    Past  04Jul2020  17Jul2020   330457362\n",
        "        7th    Past  18Jul2020  03Aug2020   330457362\n",
        "        8th    Past  04Aug2020  22Aug2020   330457362\n",
        "        9th    Past  23Aug2020  09Sep2020   330457362\n",
        "        10th   Past  10Sep2020  25Sep2020   330457362\n",
        "        11th   Past  26Sep2020  06Oct2020   330457362\n",
        "        12th   Past  07Oct2020  17Oct2020   330457362"
       ]
      }
     ],
     "prompt_number": 10
    },
    {
     "cell_type": "markdown",
     "metadata": {},
     "source": [
      "## Parameter estimation\n",
      "we will estimate the parameter values with SIR-derived ODE models in each country."
     ]
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "# Parameter estimation with SIR-F model\n",
      "analyser.estimate(cs.SIRF)"
     ],
     "language": "python",
     "metadata": {
      "tags": []
     },
     "outputs": [
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n",
        "<SIR-F model: parameter estimation>"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "Running optimization with 4 CPUs..."
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tFRA,  8th phase (28Aug2020 - 10Sep2020): finished  635 trials in 0 min 15 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tBOL,  5th phase (24Jul2020 - 31Jul2020): finished  644 trials in 0 min 15 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tITA, 10th phase (26Sep2020 - 04Oct2020): finished  246 trials in 0 min  5 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tUSA, 10th phase (18Sep2020 - 02Oct2020): finished  813 trials in 0 min 20 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tHND, 10th phase (27Sep2020 - 08Oct2020): finished  454 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tITA, 11th phase (05Oct2020 - 17Oct2020): finished  617 trials in 0 min 15 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tBRA, 10th phase (11Sep2020 - 24Sep2020): finished 1888 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tDOM,  8th phase (21Aug2020 - 03Sep2020): finished 1889 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tMKD,  6th phase (06Aug2020 - 20Aug2020): finished 1873 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tMEX,  6th phase (01Aug2020 - 11Aug2020): finished  432 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tIRN,  3rd phase (15May2020 - 01Jun2020): finished  225 trials in 0 min  5 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tDOM,  1st phase (23May2020 - 14Jun2020): finished 1841 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tMKD,  0th phase (13Mar2020 - 04Jun2020): finished 1780 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tRUS, 10th phase (10Sep2020 - 25Sep2020): finished 1813 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tFRA,  5th phase (29May2020 - 08Jul2020): finished 1789 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tIRN,  2nd phase (18Apr2020 - 14May2020): finished  405 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tRUS,  4th phase (11Jun2020 - 20Jun2020): finished 1802 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tDZA,  1st phase (02May2020 - 24May2020): finished 1791 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tLVA,  5th phase (16May2020 - 30May2020): finished 1786 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tBHR,  1st phase (07May2020 - 31May2020): finished 1765 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tBRA,  6th phase (30Jul2020 - 09Aug2020): finished  571 trials in 0 min 15 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tFRA,  4th phase (05May2020 - 28May2020): finished 1757 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tTUR,  1st phase (17Apr2020 - 26Apr2020): finished 1776 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tDZA, 10th phase (01Sep2020 - 16Sep2020): finished  897 trials in 0 min 25 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tMKD,  7th phase (21Aug2020 - 02Sep2020): finished 1779 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tLVA,  2nd phase (19Apr2020 - 29Apr2020): finished 1777 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tMDA,  1st phase (13May2020 - 09Jun2020): finished 1750 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tMKD,  5th phase (27Jul2020 - 05Aug2020): finished 1148 trials in 0 min 35 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tMDA,  4th phase (18Jul2020 - 01Aug2020): finished 1264 trials in 0 min 40 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tTUR,  6th phase (30Jun2020 - 20Jul2020): finished  210 trials in 0 min  5 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tIRN, 10th phase (07Sep2020 - 22Sep2020): finished 1742 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tDOM, 11th phase (03Oct2020 - 17Oct2020): finished  216 trials in 0 min  5 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tHND,  6th phase (14Aug2020 - 22Aug2020): finished  692 trials in 0 min 20 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tHND,  0th phase (28Mar2020 - 14Jun2020): finished 1665 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tMKD, 11th phase (09Oct2020 - 17Oct2020): finished  378 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tMEX,  7th phase (12Aug2020 - 24Aug2020): finished 1689 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tITA,  1st phase (21Mar2020 - 28Mar2020): finished 1690 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tMEX,  2nd phase (11Jun2020 - 24Jun2020): finished 1710 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tBHR,  4th phase (26Jun2020 - 06Jul2020): finished 1716 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tDOM,  7th phase (12Aug2020 - 20Aug2020): finished  388 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tRUS, 12th phase (07Oct2020 - 17Oct2020): finished 1132 trials in 0 min 35 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tIRN,  7th phase (17Jul2020 - 31Jul2020): finished  203 trials in 0 min  5 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tUSA,  4th phase (08Jul2020 - 17Jul2020): finished  384 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tTUR,  5th phase (14Jun2020 - 29Jun2020): finished 1702 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tTUR, 11th phase (02Oct2020 - 17Oct2020): finished  202 trials in 0 min  5 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tDOM,  4th phase (15Jul2020 - 23Jul2020): finished  396 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tBOL,  8th phase (26Aug2020 - 02Sep2020): finished  210 trials in 0 min  5 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tBOL,  0th phase (01Apr2020 - 13Jun2020): finished 1639 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tDZA,  6th phase (25Jul2020 - 01Aug2020): finished  140 trials in 0 min  5 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tRUS,  3rd phase (30May2020 - 10Jun2020): finished 1457 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tDOM,  9th phase (04Sep2020 - 15Sep2020): finished 1459 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tMDA,  3rd phase (26Jun2020 - 17Jul2020): finished 1442 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tIRN,  6th phase (02Jul2020 - 16Jul2020): finished  171 trials in 0 min  5 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tMDA,  5th phase (02Aug2020 - 15Aug2020): finished 1350 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tITA,  8th phase (25Aug2020 - 11Sep2020): finished  422 trials in 0 min 15 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tUSA,  0th phase (09Feb2020 - 02May2020): finished 1441 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tBHR,  0th phase (06Mar2020 - 06May2020): finished 1397 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tBRA,  8th phase (19Aug2020 - 29Aug2020): finished 1443 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tBHR, 11th phase (30Sep2020 - 17Oct2020): finished  345 trials in 0 min 15 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tIRN,  4th phase (02Jun2020 - 16Jun2020): finished  858 trials in 0 min 30 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tLVA,  7th phase (08Jul2020 - 05Aug2020): finished 1586 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tRUS,  1st phase (08May2020 - 18May2020): finished 1323 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tDZA,  2nd phase (25May2020 - 24Jun2020): finished 1318 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tUSA,  7th phase (08Aug2020 - 19Aug2020): finished  525 trials in 0 min 25 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tIRN,  9th phase (18Aug2020 - 06Sep2020): finished 1109 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tRUS,  5th phase (21Jun2020 - 03Jul2020): finished 1088 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tFRA,  6th phase (09Jul2020 - 10Aug2020): finished 1063 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tMDA,  2nd phase (10Jun2020 - 25Jun2020): finished  593 trials in 0 min 30 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tKWT,  5th phase (07Jul2020 - 21Jul2020): finished 1049 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tBRA,  9th phase (30Aug2020 - 10Sep2020): finished  117 trials in 0 min  5 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tBOL,  3rd phase (06Jul2020 - 15Jul2020): finished 1067 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tMEX,  9th phase (08Sep2020 - 22Sep2020): finished 1050 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tITA,  4th phase (24Apr2020 - 10May2020): finished 1059 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tUSA,  3rd phase (24Jun2020 - 07Jul2020): finished 1085 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tFRA,  1st phase (25Mar2020 - 04Apr2020): finished 1081 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tBOL,  6th phase (01Aug2020 - 10Aug2020): finished  232 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tBOL,  2nd phase (26Jun2020 - 05Jul2020): finished  230 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tBRA,  7th phase (10Aug2020 - 18Aug2020): finished 1089 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tBHR,  6th phase (20Jul2020 - 06Aug2020): finished  195 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tIRN,  8th phase (01Aug2020 - 17Aug2020): finished 1069 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tLVA, 10th phase (16Sep2020 - 24Sep2020): finished  898 trials in 0 min 40 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tFRA,  7th phase (11Aug2020 - 27Aug2020): finished  695 trials in 0 min 35 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tBHR,  8th phase (23Aug2020 - 06Sep2020): finished 1058 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tDOM,  3rd phase (02Jul2020 - 14Jul2020): finished 1065 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tTUR, 10th phase (16Sep2020 - 01Oct2020): finished  207 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tBOL,  1st phase (14Jun2020 - 25Jun2020): finished 1067 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tUSA,  2nd phase (03Jun2020 - 23Jun2020): finished  490 trials in 0 min 25 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tITA,  0th phase (24Feb2020 - 20Mar2020): finished 1059 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tMKD,  4th phase (17Jul2020 - 26Jul2020): finished  387 trials in 0 min 20 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tDOM,  0th phase (24Mar2020 - 22May2020): finished 1022 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tBOL, 11th phase (24Sep2020 - 17Oct2020): finished  722 trials in 0 min 40 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tBRA,  2nd phase (13Jun2020 - 26Jun2020): finished  322 trials in 0 min 15 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tLVA,  9th phase (29Aug2020 - 15Sep2020): finished 1186 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tIRN, 11th phase (23Sep2020 - 05Oct2020): finished  234 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tDZA,  0th phase (12Mar2020 - 01May2020): finished 1080 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tLVA,  6th phase (31May2020 - 07Jul2020): finished 1055 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tHND,  8th phase (05Sep2020 - 18Sep2020): finished 1087 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tKWT,  0th phase (08Mar2020 - 12May2020): finished  893 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tITA,  6th phase (27May2020 - 13Jul2020): finished  470 trials in 0 min 25 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tTUR,  3rd phase (07May2020 - 21May2020): finished 1059 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tKWT,  3rd phase (08Jun2020 - 22Jun2020): finished 1040 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tMEX, 10th phase (23Sep2020 - 04Oct2020): finished  313 trials in 0 min 15 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tRUS, 11th phase (26Sep2020 - 06Oct2020): finished 1075 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tKWT,  6th phase (22Jul2020 - 06Aug2020): finished  496 trials in 0 min 25 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tMKD, 10th phase (01Oct2020 - 08Oct2020): finished  928 trials in 0 min 50 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tTUR,  0th phase (24Mar2020 - 16Apr2020): finished 1047 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tDZA,  5th phase (17Jul2020 - 24Jul2020): finished 1076 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tUSA,  9th phase (03Sep2020 - 17Sep2020): finished  668 trials in 0 min 35 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tRUS,  9th phase (23Aug2020 - 09Sep2020): finished 1050 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tDZA,  4th phase (08Jul2020 - 16Jul2020): finished  767 trials in 0 min 40 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tBOL, 10th phase (11Sep2020 - 23Sep2020): finished  324 trials in 0 min 15 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tHND,  5th phase (02Aug2020 - 13Aug2020): finished  977 trials in 0 min 55 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tITA,  9th phase (12Sep2020 - 25Sep2020): finished  210 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tTUR,  7th phase (21Jul2020 - 12Aug2020): finished  407 trials in 0 min 20 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tFRA,  9th phase (11Sep2020 - 18Sep2020): finished  524 trials in 0 min 25 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tBOL,  9th phase (03Sep2020 - 10Sep2020): finished  535 trials in 0 min 25 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tUSA,  5th phase (18Jul2020 - 28Jul2020): finished  231 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tITA,  5th phase (11May2020 - 26May2020): finished  340 trials in 0 min 15 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tDOM,  2nd phase (15Jun2020 - 01Jul2020): finished  197 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tFRA,  3rd phase (21Apr2020 - 04May2020): finished 1083 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tMEX,  8th phase (25Aug2020 - 07Sep2020): finished 1081 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tDZA, 11th phase (17Sep2020 - 17Oct2020): finished  314 trials in 0 min 15 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tLVA,  0th phase (10Mar2020 - 06Apr2020): finished 1219 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tTUR,  2nd phase (27Apr2020 - 06May2020): finished  304 trials in 0 min 15 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tMKD,  8th phase (03Sep2020 - 16Sep2020): finished 1067 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tMEX,  4th phase (08Jul2020 - 18Jul2020): finished 1068 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tTUR,  9th phase (31Aug2020 - 15Sep2020): finished  226 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tTUR,  4th phase (22May2020 - 13Jun2020): finished 1036 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tUSA,  1st phase (03May2020 - 02Jun2020): finished 1028 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tITA,  7th phase (14Jul2020 - 24Aug2020): finished 1040 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tMEX,  1st phase (24May2020 - 10Jun2020): finished 1061 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tFRA,  2nd phase (05Apr2020 - 20Apr2020): finished 1052 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tDZA,  9th phase (20Aug2020 - 31Aug2020): finished  204 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tDOM,  5th phase (24Jul2020 - 01Aug2020): finished 1054 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tUSA,  6th phase (29Jul2020 - 07Aug2020): finished  388 trials in 0 min 15 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tKWT,  1st phase (13May2020 - 27May2020): finished 1210 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tITA,  2nd phase (29Mar2020 - 10Apr2020): finished 1220 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tIRN,  5th phase (17Jun2020 - 01Jul2020): finished 1268 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tDZA,  7th phase (02Aug2020 - 09Aug2020): finished  171 trials in 0 min  5 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tDOM, 10th phase (16Sep2020 - 02Oct2020): finished  297 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tUSA,  8th phase (20Aug2020 - 02Sep2020): finished  165 trials in 0 min  5 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tKWT,  4th phase (23Jun2020 - 06Jul2020): finished 1419 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tIRN,  0th phase (26Feb2020 - 28Mar2020): finished 1386 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tBHR, 10th phase (18Sep2020 - 29Sep2020): finished  415 trials in 0 min 15 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tMEX,  5th phase (19Jul2020 - 31Jul2020): finished 1364 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tLVA,  1st phase (07Apr2020 - 18Apr2020): finished 1681 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tHND,  9th phase (19Sep2020 - 26Sep2020): finished  678 trials in 0 min 25 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tBOL,  7th phase (11Aug2020 - 25Aug2020): finished 1436 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tDOM,  6th phase (02Aug2020 - 11Aug2020): finished 1318 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tDZA,  8th phase (10Aug2020 - 19Aug2020): finished  313 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tMEX,  0th phase (03Mar2020 - 23May2020): finished 1333 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tBHR,  9th phase (07Sep2020 - 17Sep2020): finished  145 trials in 0 min  5 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tLVA,  3rd phase (30Apr2020 - 07May2020): finished 1776 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tBRA,  1st phase (27May2020 - 12Jun2020): finished 1540 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tLVA,  4th phase (08May2020 - 15May2020): finished 1574 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tBRA,  3rd phase (27Jun2020 - 08Jul2020): finished 1599 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tBOL,  4th phase (16Jul2020 - 23Jul2020): finished  390 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tRUS,  0th phase (12Feb2020 - 07May2020): finished 1664 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tLVA, 11th phase (25Sep2020 - 17Oct2020): finished 1897 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tMDA,  6th phase (16Aug2020 - 24Aug2020): finished 1678 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tFRA,  0th phase (12Feb2020 - 24Mar2020): finished 1522 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tBRA,  5th phase (21Jul2020 - 29Jul2020): finished 1662 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tMDA,  9th phase (19Sep2020 - 28Sep2020): finished 1677 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tKWT, 10th phase (16Sep2020 - 30Sep2020): finished  207 trials in 0 min  5 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tITA,  3rd phase (11Apr2020 - 23Apr2020): finished 1655 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tBHR,  5th phase (07Jul2020 - 19Jul2020): finished 1676 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tBRA,  4th phase (09Jul2020 - 20Jul2020): finished  537 trials in 0 min 15 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tIRN,  1st phase (29Mar2020 - 17Apr2020): finished 1664 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tMDA, 10th phase (29Sep2020 - 06Oct2020): finished 1683 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tMDA,  0th phase (17Mar2020 - 12May2020): finished 1620 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tLVA,  8th phase (06Aug2020 - 28Aug2020): finished 1890 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tMKD,  9th phase (17Sep2020 - 30Sep2020): finished  195 trials in 0 min  5 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tBRA,  0th phase (16Mar2020 - 26May2020): finished 1619 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tKWT,  2nd phase (28May2020 - 07Jun2020): finished 1661 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tBHR,  7th phase (07Aug2020 - 22Aug2020): finished 1681 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tHND,  2nd phase (02Jul2020 - 15Jul2020): finished 1675 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tDZA,  3rd phase (25Jun2020 - 07Jul2020): finished  357 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tMKD,  1st phase (05Jun2020 - 24Jun2020): finished 1694 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tRUS,  8th phase (04Aug2020 - 22Aug2020): finished 1692 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tTUR,  8th phase (13Aug2020 - 30Aug2020): finished  209 trials in 0 min  5 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tKWT,  7th phase (07Aug2020 - 20Aug2020): finished  217 trials in 0 min  5 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tFRA, 10th phase (19Sep2020 - 01Oct2020): finished  590 trials in 0 min 15 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tRUS,  2nd phase (19May2020 - 29May2020): finished 1742 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tRUS,  7th phase (18Jul2020 - 03Aug2020): finished 1752 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tBHR,  2nd phase (01Jun2020 - 13Jun2020): finished 1772 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tMDA,  8th phase (08Sep2020 - 18Sep2020): finished 1785 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tKWT, 11th phase (01Oct2020 - 17Oct2020): finished 1009 trials in 0 min 30 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tRUS,  6th phase (04Jul2020 - 17Jul2020): finished 1824 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tHND,  7th phase (23Aug2020 - 04Sep2020): finished 1851 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tIRN, 12th phase (06Oct2020 - 17Oct2020): finished 1763 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "Completed optimization. Total: 35 min 35 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      }
     ],
     "prompt_number": 11
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "# Show summary\n",
      "analyser.summary(countries=countries_show)"
     ],
     "language": "python",
     "metadata": {},
     "outputs": [
      {
       "html": [
        "<div>\n",
        "<style scoped>\n",
        "    .dataframe tbody tr th:only-of-type {\n",
        "        vertical-align: middle;\n",
        "    }\n",
        "\n",
        "    .dataframe tbody tr th {\n",
        "        vertical-align: top;\n",
        "    }\n",
        "\n",
        "    .dataframe thead th {\n",
        "        text-align: right;\n",
        "    }\n",
        "</style>\n",
        "<table border=\"1\" class=\"dataframe\">\n",
        "  <thead>\n",
        "    <tr style=\"text-align: right;\">\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th>Type</th>\n",
        "      <th>Start</th>\n",
        "      <th>End</th>\n",
        "      <th>Population</th>\n",
        "      <th>ODE</th>\n",
        "      <th>Rt</th>\n",
        "      <th>theta</th>\n",
        "      <th>kappa</th>\n",
        "      <th>rho</th>\n",
        "      <th>sigma</th>\n",
        "      <th>tau</th>\n",
        "      <th>alpha1 [-]</th>\n",
        "      <th>1/beta [day]</th>\n",
        "      <th>1/gamma [day]</th>\n",
        "      <th>1/alpha2 [day]</th>\n",
        "      <th>RMSLE</th>\n",
        "      <th>Trials</th>\n",
        "      <th>Runtime</th>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>Country</th>\n",
        "      <th>Phase</th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "    </tr>\n",
        "  </thead>\n",
        "  <tbody>\n",
        "    <tr>\n",
        "      <th rowspan=\"13\" valign=\"top\">Iran</th>\n",
        "      <th>0th</th>\n",
        "      <td>Past</td>\n",
        "      <td>26Feb2020</td>\n",
        "      <td>28Mar2020</td>\n",
        "      <td>81800269</td>\n",
        "      <td>SIR-F</td>\n",
        "      <td>6.12</td>\n",
        "      <td>0.198486</td>\n",
        "      <td>0.000812</td>\n",
        "      <td>0.055400</td>\n",
        "      <td>0.006445</td>\n",
        "      <td>360</td>\n",
        "      <td>0.198</td>\n",
        "      <td>4</td>\n",
        "      <td>38</td>\n",
        "      <td>308</td>\n",
        "      <td>3.867782</td>\n",
        "      <td>1386</td>\n",
        "      <td>1 min  0 sec</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>1st</th>\n",
        "      <td>Past</td>\n",
        "      <td>29Mar2020</td>\n",
        "      <td>17Apr2020</td>\n",
        "      <td>81800269</td>\n",
        "      <td>SIR-F</td>\n",
        "      <td>1.00</td>\n",
        "      <td>0.063796</td>\n",
        "      <td>0.000177</td>\n",
        "      <td>0.019462</td>\n",
        "      <td>0.017997</td>\n",
        "      <td>360</td>\n",
        "      <td>0.064</td>\n",
        "      <td>12</td>\n",
        "      <td>13</td>\n",
        "      <td>1413</td>\n",
        "      <td>0.253883</td>\n",
        "      <td>1664</td>\n",
        "      <td>1 min  0 sec</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>2nd</th>\n",
        "      <td>Past</td>\n",
        "      <td>18Apr2020</td>\n",
        "      <td>14May2020</td>\n",
        "      <td>81800269</td>\n",
        "      <td>SIR-F</td>\n",
        "      <td>0.79</td>\n",
        "      <td>0.048943</td>\n",
        "      <td>0.000257</td>\n",
        "      <td>0.018584</td>\n",
        "      <td>0.021984</td>\n",
        "      <td>360</td>\n",
        "      <td>0.049</td>\n",
        "      <td>13</td>\n",
        "      <td>11</td>\n",
        "      <td>974</td>\n",
        "      <td>0.157862</td>\n",
        "      <td>405</td>\n",
        "      <td>0 min 10 sec</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>3rd</th>\n",
        "      <td>Past</td>\n",
        "      <td>15May2020</td>\n",
        "      <td>01Jun2020</td>\n",
        "      <td>81800269</td>\n",
        "      <td>SIR-F</td>\n",
        "      <td>1.25</td>\n",
        "      <td>0.000349</td>\n",
        "      <td>0.000710</td>\n",
        "      <td>0.026034</td>\n",
        "      <td>0.020153</td>\n",
        "      <td>360</td>\n",
        "      <td>0.000</td>\n",
        "      <td>9</td>\n",
        "      <td>12</td>\n",
        "      <td>352</td>\n",
        "      <td>0.031064</td>\n",
        "      <td>225</td>\n",
        "      <td>0 min  5 sec</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>4th</th>\n",
        "      <td>Past</td>\n",
        "      <td>02Jun2020</td>\n",
        "      <td>16Jun2020</td>\n",
        "      <td>81800269</td>\n",
        "      <td>SIR-F</td>\n",
        "      <td>1.14</td>\n",
        "      <td>0.000389</td>\n",
        "      <td>0.000605</td>\n",
        "      <td>0.020507</td>\n",
        "      <td>0.017367</td>\n",
        "      <td>360</td>\n",
        "      <td>0.000</td>\n",
        "      <td>12</td>\n",
        "      <td>14</td>\n",
        "      <td>412</td>\n",
        "      <td>0.029233</td>\n",
        "      <td>858</td>\n",
        "      <td>0 min 30 sec</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>5th</th>\n",
        "      <td>Past</td>\n",
        "      <td>17Jun2020</td>\n",
        "      <td>01Jul2020</td>\n",
        "      <td>81800269</td>\n",
        "      <td>SIR-F</td>\n",
        "      <td>0.93</td>\n",
        "      <td>0.029297</td>\n",
        "      <td>0.000316</td>\n",
        "      <td>0.021715</td>\n",
        "      <td>0.022390</td>\n",
        "      <td>360</td>\n",
        "      <td>0.029</td>\n",
        "      <td>11</td>\n",
        "      <td>11</td>\n",
        "      <td>792</td>\n",
        "      <td>0.023870</td>\n",
        "      <td>1268</td>\n",
        "      <td>1 min  0 sec</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>6th</th>\n",
        "      <td>Past</td>\n",
        "      <td>02Jul2020</td>\n",
        "      <td>16Jul2020</td>\n",
        "      <td>81800269</td>\n",
        "      <td>SIR-F</td>\n",
        "      <td>0.92</td>\n",
        "      <td>0.048817</td>\n",
        "      <td>0.000520</td>\n",
        "      <td>0.023954</td>\n",
        "      <td>0.024373</td>\n",
        "      <td>360</td>\n",
        "      <td>0.049</td>\n",
        "      <td>10</td>\n",
        "      <td>10</td>\n",
        "      <td>480</td>\n",
        "      <td>0.027572</td>\n",
        "      <td>171</td>\n",
        "      <td>0 min  5 sec</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>7th</th>\n",
        "      <td>Past</td>\n",
        "      <td>17Jul2020</td>\n",
        "      <td>31Jul2020</td>\n",
        "      <td>81800269</td>\n",
        "      <td>SIR-F</td>\n",
        "      <td>1.03</td>\n",
        "      <td>0.061983</td>\n",
        "      <td>0.000542</td>\n",
        "      <td>0.028007</td>\n",
        "      <td>0.024905</td>\n",
        "      <td>360</td>\n",
        "      <td>0.062</td>\n",
        "      <td>8</td>\n",
        "      <td>10</td>\n",
        "      <td>461</td>\n",
        "      <td>0.036249</td>\n",
        "      <td>203</td>\n",
        "      <td>0 min  5 sec</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>8th</th>\n",
        "      <td>Past</td>\n",
        "      <td>01Aug2020</td>\n",
        "      <td>17Aug2020</td>\n",
        "      <td>81800269</td>\n",
        "      <td>SIR-F</td>\n",
        "      <td>1.06</td>\n",
        "      <td>0.057868</td>\n",
        "      <td>0.000460</td>\n",
        "      <td>0.023989</td>\n",
        "      <td>0.020877</td>\n",
        "      <td>360</td>\n",
        "      <td>0.058</td>\n",
        "      <td>10</td>\n",
        "      <td>11</td>\n",
        "      <td>543</td>\n",
        "      <td>0.023226</td>\n",
        "      <td>1069</td>\n",
        "      <td>1 min  0 sec</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>9th</th>\n",
        "      <td>Past</td>\n",
        "      <td>18Aug2020</td>\n",
        "      <td>06Sep2020</td>\n",
        "      <td>81800269</td>\n",
        "      <td>SIR-F</td>\n",
        "      <td>1.13</td>\n",
        "      <td>0.001882</td>\n",
        "      <td>0.001045</td>\n",
        "      <td>0.018174</td>\n",
        "      <td>0.015045</td>\n",
        "      <td>360</td>\n",
        "      <td>0.002</td>\n",
        "      <td>13</td>\n",
        "      <td>16</td>\n",
        "      <td>239</td>\n",
        "      <td>0.025377</td>\n",
        "      <td>1109</td>\n",
        "      <td>1 min  0 sec</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>10th</th>\n",
        "      <td>Past</td>\n",
        "      <td>07Sep2020</td>\n",
        "      <td>22Sep2020</td>\n",
        "      <td>81800269</td>\n",
        "      <td>SIR-F</td>\n",
        "      <td>1.28</td>\n",
        "      <td>0.047663</td>\n",
        "      <td>0.000149</td>\n",
        "      <td>0.019069</td>\n",
        "      <td>0.013996</td>\n",
        "      <td>360</td>\n",
        "      <td>0.048</td>\n",
        "      <td>13</td>\n",
        "      <td>17</td>\n",
        "      <td>1675</td>\n",
        "      <td>0.020003</td>\n",
        "      <td>1742</td>\n",
        "      <td>1 min  0 sec</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>11th</th>\n",
        "      <td>Past</td>\n",
        "      <td>23Sep2020</td>\n",
        "      <td>05Oct2020</td>\n",
        "      <td>81800269</td>\n",
        "      <td>SIR-F</td>\n",
        "      <td>1.53</td>\n",
        "      <td>0.021510</td>\n",
        "      <td>0.000597</td>\n",
        "      <td>0.018679</td>\n",
        "      <td>0.011362</td>\n",
        "      <td>360</td>\n",
        "      <td>0.022</td>\n",
        "      <td>13</td>\n",
        "      <td>22</td>\n",
        "      <td>418</td>\n",
        "      <td>0.004912</td>\n",
        "      <td>234</td>\n",
        "      <td>0 min 10 sec</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>12th</th>\n",
        "      <td>Past</td>\n",
        "      <td>06Oct2020</td>\n",
        "      <td>17Oct2020</td>\n",
        "      <td>81800269</td>\n",
        "      <td>SIR-F</td>\n",
        "      <td>1.54</td>\n",
        "      <td>0.020856</td>\n",
        "      <td>0.000598</td>\n",
        "      <td>0.016443</td>\n",
        "      <td>0.009889</td>\n",
        "      <td>360</td>\n",
        "      <td>0.021</td>\n",
        "      <td>15</td>\n",
        "      <td>25</td>\n",
        "      <td>418</td>\n",
        "      <td>0.009683</td>\n",
        "      <td>1763</td>\n",
        "      <td>1 min  0 sec</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th rowspan=\"13\" valign=\"top\">Russia</th>\n",
        "      <th>0th</th>\n",
        "      <td>Past</td>\n",
        "      <td>12Feb2020</td>\n",
        "      <td>07May2020</td>\n",
        "      <td>330457362</td>\n",
        "      <td>SIR-F</td>\n",
        "      <td>0.02</td>\n",
        "      <td>0.602763</td>\n",
        "      <td>0.544883</td>\n",
        "      <td>0.033660</td>\n",
        "      <td>0.002318</td>\n",
        "      <td>360</td>\n",
        "      <td>0.603</td>\n",
        "      <td>7</td>\n",
        "      <td>107</td>\n",
        "      <td>0</td>\n",
        "      <td>19.313273</td>\n",
        "      <td>1664</td>\n",
        "      <td>1 min  0 sec</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>1st</th>\n",
        "      <td>Past</td>\n",
        "      <td>08May2020</td>\n",
        "      <td>18May2020</td>\n",
        "      <td>330457362</td>\n",
        "      <td>SIR-F</td>\n",
        "      <td>2.40</td>\n",
        "      <td>0.000593</td>\n",
        "      <td>0.000114</td>\n",
        "      <td>0.011793</td>\n",
        "      <td>0.004805</td>\n",
        "      <td>360</td>\n",
        "      <td>0.001</td>\n",
        "      <td>21</td>\n",
        "      <td>52</td>\n",
        "      <td>2200</td>\n",
        "      <td>0.090432</td>\n",
        "      <td>1323</td>\n",
        "      <td>1 min  0 sec</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>2nd</th>\n",
        "      <td>Past</td>\n",
        "      <td>19May2020</td>\n",
        "      <td>29May2020</td>\n",
        "      <td>330457362</td>\n",
        "      <td>SIR-F</td>\n",
        "      <td>1.03</td>\n",
        "      <td>0.000337</td>\n",
        "      <td>0.000113</td>\n",
        "      <td>0.006707</td>\n",
        "      <td>0.006392</td>\n",
        "      <td>360</td>\n",
        "      <td>0.000</td>\n",
        "      <td>37</td>\n",
        "      <td>39</td>\n",
        "      <td>2208</td>\n",
        "      <td>0.111343</td>\n",
        "      <td>1742</td>\n",
        "      <td>1 min  0 sec</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>3rd</th>\n",
        "      <td>Past</td>\n",
        "      <td>30May2020</td>\n",
        "      <td>10Jun2020</td>\n",
        "      <td>330457362</td>\n",
        "      <td>SIR-F</td>\n",
        "      <td>1.03</td>\n",
        "      <td>0.018709</td>\n",
        "      <td>0.000011</td>\n",
        "      <td>0.004809</td>\n",
        "      <td>0.004563</td>\n",
        "      <td>360</td>\n",
        "      <td>0.019</td>\n",
        "      <td>51</td>\n",
        "      <td>54</td>\n",
        "      <td>22593</td>\n",
        "      <td>0.098037</td>\n",
        "      <td>1457</td>\n",
        "      <td>1 min  0 sec</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>4th</th>\n",
        "      <td>Past</td>\n",
        "      <td>11Jun2020</td>\n",
        "      <td>20Jun2020</td>\n",
        "      <td>330457362</td>\n",
        "      <td>SIR-F</td>\n",
        "      <td>1.01</td>\n",
        "      <td>0.018282</td>\n",
        "      <td>0.000010</td>\n",
        "      <td>0.003841</td>\n",
        "      <td>0.003732</td>\n",
        "      <td>360</td>\n",
        "      <td>0.018</td>\n",
        "      <td>65</td>\n",
        "      <td>66</td>\n",
        "      <td>25086</td>\n",
        "      <td>0.058438</td>\n",
        "      <td>1802</td>\n",
        "      <td>1 min  0 sec</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>5th</th>\n",
        "      <td>Past</td>\n",
        "      <td>21Jun2020</td>\n",
        "      <td>03Jul2020</td>\n",
        "      <td>330457362</td>\n",
        "      <td>SIR-F</td>\n",
        "      <td>1.05</td>\n",
        "      <td>0.016197</td>\n",
        "      <td>0.000024</td>\n",
        "      <td>0.002683</td>\n",
        "      <td>0.002480</td>\n",
        "      <td>360</td>\n",
        "      <td>0.016</td>\n",
        "      <td>93</td>\n",
        "      <td>100</td>\n",
        "      <td>10529</td>\n",
        "      <td>0.070208</td>\n",
        "      <td>1088</td>\n",
        "      <td>1 min  0 sec</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>6th</th>\n",
        "      <td>Past</td>\n",
        "      <td>04Jul2020</td>\n",
        "      <td>17Jul2020</td>\n",
        "      <td>330457362</td>\n",
        "      <td>SIR-F</td>\n",
        "      <td>0.90</td>\n",
        "      <td>0.018877</td>\n",
        "      <td>0.000015</td>\n",
        "      <td>0.002311</td>\n",
        "      <td>0.002506</td>\n",
        "      <td>360</td>\n",
        "      <td>0.019</td>\n",
        "      <td>108</td>\n",
        "      <td>99</td>\n",
        "      <td>16214</td>\n",
        "      <td>0.064211</td>\n",
        "      <td>1824</td>\n",
        "      <td>1 min  0 sec</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>7th</th>\n",
        "      <td>Past</td>\n",
        "      <td>18Jul2020</td>\n",
        "      <td>03Aug2020</td>\n",
        "      <td>330457362</td>\n",
        "      <td>SIR-F</td>\n",
        "      <td>0.98</td>\n",
        "      <td>0.018850</td>\n",
        "      <td>0.000008</td>\n",
        "      <td>0.001816</td>\n",
        "      <td>0.001814</td>\n",
        "      <td>360</td>\n",
        "      <td>0.019</td>\n",
        "      <td>137</td>\n",
        "      <td>137</td>\n",
        "      <td>29965</td>\n",
        "      <td>0.064376</td>\n",
        "      <td>1752</td>\n",
        "      <td>1 min  0 sec</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>8th</th>\n",
        "      <td>Past</td>\n",
        "      <td>04Aug2020</td>\n",
        "      <td>22Aug2020</td>\n",
        "      <td>330457362</td>\n",
        "      <td>SIR-F</td>\n",
        "      <td>0.81</td>\n",
        "      <td>0.020312</td>\n",
        "      <td>0.000002</td>\n",
        "      <td>0.001419</td>\n",
        "      <td>0.001715</td>\n",
        "      <td>360</td>\n",
        "      <td>0.020</td>\n",
        "      <td>176</td>\n",
        "      <td>145</td>\n",
        "      <td>102992</td>\n",
        "      <td>0.069901</td>\n",
        "      <td>1692</td>\n",
        "      <td>1 min  0 sec</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>9th</th>\n",
        "      <td>Past</td>\n",
        "      <td>23Aug2020</td>\n",
        "      <td>09Sep2020</td>\n",
        "      <td>330457362</td>\n",
        "      <td>SIR-F</td>\n",
        "      <td>0.77</td>\n",
        "      <td>0.043567</td>\n",
        "      <td>0.000039</td>\n",
        "      <td>0.001257</td>\n",
        "      <td>0.001521</td>\n",
        "      <td>360</td>\n",
        "      <td>0.044</td>\n",
        "      <td>198</td>\n",
        "      <td>164</td>\n",
        "      <td>6349</td>\n",
        "      <td>0.135022</td>\n",
        "      <td>1050</td>\n",
        "      <td>1 min  0 sec</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>10th</th>\n",
        "      <td>Past</td>\n",
        "      <td>10Sep2020</td>\n",
        "      <td>25Sep2020</td>\n",
        "      <td>330457362</td>\n",
        "      <td>SIR-F</td>\n",
        "      <td>1.03</td>\n",
        "      <td>0.016395</td>\n",
        "      <td>0.000006</td>\n",
        "      <td>0.001334</td>\n",
        "      <td>0.001268</td>\n",
        "      <td>360</td>\n",
        "      <td>0.016</td>\n",
        "      <td>187</td>\n",
        "      <td>197</td>\n",
        "      <td>40976</td>\n",
        "      <td>0.040382</td>\n",
        "      <td>1813</td>\n",
        "      <td>1 min  0 sec</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>11th</th>\n",
        "      <td>Past</td>\n",
        "      <td>26Sep2020</td>\n",
        "      <td>06Oct2020</td>\n",
        "      <td>330457362</td>\n",
        "      <td>SIR-F</td>\n",
        "      <td>2.21</td>\n",
        "      <td>0.018155</td>\n",
        "      <td>0.000024</td>\n",
        "      <td>0.002069</td>\n",
        "      <td>0.000894</td>\n",
        "      <td>360</td>\n",
        "      <td>0.018</td>\n",
        "      <td>120</td>\n",
        "      <td>279</td>\n",
        "      <td>10521</td>\n",
        "      <td>0.031978</td>\n",
        "      <td>1075</td>\n",
        "      <td>1 min  0 sec</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>12th</th>\n",
        "      <td>Past</td>\n",
        "      <td>07Oct2020</td>\n",
        "      <td>17Oct2020</td>\n",
        "      <td>330457362</td>\n",
        "      <td>SIR-F</td>\n",
        "      <td>1.86</td>\n",
        "      <td>0.000020</td>\n",
        "      <td>0.000041</td>\n",
        "      <td>0.002381</td>\n",
        "      <td>0.001240</td>\n",
        "      <td>360</td>\n",
        "      <td>0.000</td>\n",
        "      <td>105</td>\n",
        "      <td>201</td>\n",
        "      <td>6130</td>\n",
        "      <td>0.007755</td>\n",
        "      <td>1132</td>\n",
        "      <td>0 min 35 sec</td>\n",
        "    </tr>\n",
        "  </tbody>\n",
        "</table>\n",
        "</div>"
       ],
       "output_type": "pyout",
       "prompt_number": 12,
       "text": [
        "               Type      Start        End  Population    ODE    Rt     theta  \\\n",
        "Country Phase                                                                  \n",
        "Iran    0th    Past  26Feb2020  28Mar2020    81800269  SIR-F  6.12  0.198486   \n",
        "        1st    Past  29Mar2020  17Apr2020    81800269  SIR-F  1.00  0.063796   \n",
        "        2nd    Past  18Apr2020  14May2020    81800269  SIR-F  0.79  0.048943   \n",
        "        3rd    Past  15May2020  01Jun2020    81800269  SIR-F  1.25  0.000349   \n",
        "        4th    Past  02Jun2020  16Jun2020    81800269  SIR-F  1.14  0.000389   \n",
        "        5th    Past  17Jun2020  01Jul2020    81800269  SIR-F  0.93  0.029297   \n",
        "        6th    Past  02Jul2020  16Jul2020    81800269  SIR-F  0.92  0.048817   \n",
        "        7th    Past  17Jul2020  31Jul2020    81800269  SIR-F  1.03  0.061983   \n",
        "        8th    Past  01Aug2020  17Aug2020    81800269  SIR-F  1.06  0.057868   \n",
        "        9th    Past  18Aug2020  06Sep2020    81800269  SIR-F  1.13  0.001882   \n",
        "        10th   Past  07Sep2020  22Sep2020    81800269  SIR-F  1.28  0.047663   \n",
        "        11th   Past  23Sep2020  05Oct2020    81800269  SIR-F  1.53  0.021510   \n",
        "        12th   Past  06Oct2020  17Oct2020    81800269  SIR-F  1.54  0.020856   \n",
        "Russia  0th    Past  12Feb2020  07May2020   330457362  SIR-F  0.02  0.602763   \n",
        "        1st    Past  08May2020  18May2020   330457362  SIR-F  2.40  0.000593   \n",
        "        2nd    Past  19May2020  29May2020   330457362  SIR-F  1.03  0.000337   \n",
        "        3rd    Past  30May2020  10Jun2020   330457362  SIR-F  1.03  0.018709   \n",
        "        4th    Past  11Jun2020  20Jun2020   330457362  SIR-F  1.01  0.018282   \n",
        "        5th    Past  21Jun2020  03Jul2020   330457362  SIR-F  1.05  0.016197   \n",
        "        6th    Past  04Jul2020  17Jul2020   330457362  SIR-F  0.90  0.018877   \n",
        "        7th    Past  18Jul2020  03Aug2020   330457362  SIR-F  0.98  0.018850   \n",
        "        8th    Past  04Aug2020  22Aug2020   330457362  SIR-F  0.81  0.020312   \n",
        "        9th    Past  23Aug2020  09Sep2020   330457362  SIR-F  0.77  0.043567   \n",
        "        10th   Past  10Sep2020  25Sep2020   330457362  SIR-F  1.03  0.016395   \n",
        "        11th   Past  26Sep2020  06Oct2020   330457362  SIR-F  2.21  0.018155   \n",
        "        12th   Past  07Oct2020  17Oct2020   330457362  SIR-F  1.86  0.000020   \n",
        "\n",
        "                  kappa       rho     sigma  tau  alpha1 [-]  1/beta [day]  \\\n",
        "Country Phase                                                                \n",
        "Iran    0th    0.000812  0.055400  0.006445  360       0.198             4   \n",
        "        1st    0.000177  0.019462  0.017997  360       0.064            12   \n",
        "        2nd    0.000257  0.018584  0.021984  360       0.049            13   \n",
        "        3rd    0.000710  0.026034  0.020153  360       0.000             9   \n",
        "        4th    0.000605  0.020507  0.017367  360       0.000            12   \n",
        "        5th    0.000316  0.021715  0.022390  360       0.029            11   \n",
        "        6th    0.000520  0.023954  0.024373  360       0.049            10   \n",
        "        7th    0.000542  0.028007  0.024905  360       0.062             8   \n",
        "        8th    0.000460  0.023989  0.020877  360       0.058            10   \n",
        "        9th    0.001045  0.018174  0.015045  360       0.002            13   \n",
        "        10th   0.000149  0.019069  0.013996  360       0.048            13   \n",
        "        11th   0.000597  0.018679  0.011362  360       0.022            13   \n",
        "        12th   0.000598  0.016443  0.009889  360       0.021            15   \n",
        "Russia  0th    0.544883  0.033660  0.002318  360       0.603             7   \n",
        "        1st    0.000114  0.011793  0.004805  360       0.001            21   \n",
        "        2nd    0.000113  0.006707  0.006392  360       0.000            37   \n",
        "        3rd    0.000011  0.004809  0.004563  360       0.019            51   \n",
        "        4th    0.000010  0.003841  0.003732  360       0.018            65   \n",
        "        5th    0.000024  0.002683  0.002480  360       0.016            93   \n",
        "        6th    0.000015  0.002311  0.002506  360       0.019           108   \n",
        "        7th    0.000008  0.001816  0.001814  360       0.019           137   \n",
        "        8th    0.000002  0.001419  0.001715  360       0.020           176   \n",
        "        9th    0.000039  0.001257  0.001521  360       0.044           198   \n",
        "        10th   0.000006  0.001334  0.001268  360       0.016           187   \n",
        "        11th   0.000024  0.002069  0.000894  360       0.018           120   \n",
        "        12th   0.000041  0.002381  0.001240  360       0.000           105   \n",
        "\n",
        "               1/gamma [day]  1/alpha2 [day]      RMSLE  Trials       Runtime  \n",
        "Country Phase                                                                  \n",
        "Iran    0th               38             308   3.867782    1386  1 min  0 sec  \n",
        "        1st               13            1413   0.253883    1664  1 min  0 sec  \n",
        "        2nd               11             974   0.157862     405  0 min 10 sec  \n",
        "        3rd               12             352   0.031064     225  0 min  5 sec  \n",
        "        4th               14             412   0.029233     858  0 min 30 sec  \n",
        "        5th               11             792   0.023870    1268  1 min  0 sec  \n",
        "        6th               10             480   0.027572     171  0 min  5 sec  \n",
        "        7th               10             461   0.036249     203  0 min  5 sec  \n",
        "        8th               11             543   0.023226    1069  1 min  0 sec  \n",
        "        9th               16             239   0.025377    1109  1 min  0 sec  \n",
        "        10th              17            1675   0.020003    1742  1 min  0 sec  \n",
        "        11th              22             418   0.004912     234  0 min 10 sec  \n",
        "        12th              25             418   0.009683    1763  1 min  0 sec  \n",
        "Russia  0th              107               0  19.313273    1664  1 min  0 sec  \n",
        "        1st               52            2200   0.090432    1323  1 min  0 sec  \n",
        "        2nd               39            2208   0.111343    1742  1 min  0 sec  \n",
        "        3rd               54           22593   0.098037    1457  1 min  0 sec  \n",
        "        4th               66           25086   0.058438    1802  1 min  0 sec  \n",
        "        5th              100           10529   0.070208    1088  1 min  0 sec  \n",
        "        6th               99           16214   0.064211    1824  1 min  0 sec  \n",
        "        7th              137           29965   0.064376    1752  1 min  0 sec  \n",
        "        8th              145          102992   0.069901    1692  1 min  0 sec  \n",
        "        9th              164            6349   0.135022    1050  1 min  0 sec  \n",
        "        10th             197           40976   0.040382    1813  1 min  0 sec  \n",
        "        11th             279           10521   0.031978    1075  1 min  0 sec  \n",
        "        12th             201            6130   0.007755    1132  0 min 35 sec  "
       ]
      }
     ],
     "prompt_number": 12
    },
    {
     "cell_type": "markdown",
     "metadata": {},
     "source": [
      "## Compare the history of parameters\n",
      "Here, compare the history of parameter values if countries."
     ]
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "# All parameter/day parameter/Rt/OxCGRT\n",
      "analyser.track().head()"
     ],
     "language": "python",
     "metadata": {},
     "outputs": [
      {
       "html": [
        "<div>\n",
        "<style scoped>\n",
        "    .dataframe tbody tr th:only-of-type {\n",
        "        vertical-align: middle;\n",
        "    }\n",
        "\n",
        "    .dataframe tbody tr th {\n",
        "        vertical-align: top;\n",
        "    }\n",
        "\n",
        "    .dataframe thead th {\n",
        "        text-align: right;\n",
        "    }\n",
        "</style>\n",
        "<table border=\"1\" class=\"dataframe\">\n",
        "  <thead>\n",
        "    <tr style=\"text-align: right;\">\n",
        "      <th></th>\n",
        "      <th>Date</th>\n",
        "      <th>Country</th>\n",
        "      <th>theta</th>\n",
        "      <th>kappa</th>\n",
        "      <th>rho</th>\n",
        "      <th>sigma</th>\n",
        "      <th>alpha1 [-]</th>\n",
        "      <th>1/alpha2 [day]</th>\n",
        "      <th>1/beta [day]</th>\n",
        "      <th>1/gamma [day]</th>\n",
        "      <th>...</th>\n",
        "      <th>Cancel_events</th>\n",
        "      <th>Gatherings_restrictions</th>\n",
        "      <th>Transport_closing</th>\n",
        "      <th>Stay_home_restrictions</th>\n",
        "      <th>Internal_movement_restrictions</th>\n",
        "      <th>International_movement_restrictions</th>\n",
        "      <th>Information_campaigns</th>\n",
        "      <th>Testing_policy</th>\n",
        "      <th>Contact_tracing</th>\n",
        "      <th>Stringency_index</th>\n",
        "    </tr>\n",
        "  </thead>\n",
        "  <tbody>\n",
        "    <tr>\n",
        "      <th>0</th>\n",
        "      <td>2020-03-12</td>\n",
        "      <td>Algeria</td>\n",
        "      <td>0.216348</td>\n",
        "      <td>0.000153952</td>\n",
        "      <td>0.0364888</td>\n",
        "      <td>0.00330902</td>\n",
        "      <td>0.216</td>\n",
        "      <td>1623</td>\n",
        "      <td>6</td>\n",
        "      <td>75</td>\n",
        "      <td>...</td>\n",
        "      <td>2</td>\n",
        "      <td>0</td>\n",
        "      <td>0</td>\n",
        "      <td>0</td>\n",
        "      <td>0</td>\n",
        "      <td>1</td>\n",
        "      <td>1</td>\n",
        "      <td>0</td>\n",
        "      <td>0</td>\n",
        "      <td>30.56</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>1</th>\n",
        "      <td>2020-03-13</td>\n",
        "      <td>Algeria</td>\n",
        "      <td>0.216348</td>\n",
        "      <td>0.000153952</td>\n",
        "      <td>0.0364888</td>\n",
        "      <td>0.00330902</td>\n",
        "      <td>0.216</td>\n",
        "      <td>1623</td>\n",
        "      <td>6</td>\n",
        "      <td>75</td>\n",
        "      <td>...</td>\n",
        "      <td>2</td>\n",
        "      <td>0</td>\n",
        "      <td>0</td>\n",
        "      <td>0</td>\n",
        "      <td>0</td>\n",
        "      <td>1</td>\n",
        "      <td>1</td>\n",
        "      <td>0</td>\n",
        "      <td>0</td>\n",
        "      <td>30.56</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>2</th>\n",
        "      <td>2020-03-14</td>\n",
        "      <td>Algeria</td>\n",
        "      <td>0.216348</td>\n",
        "      <td>0.000153952</td>\n",
        "      <td>0.0364888</td>\n",
        "      <td>0.00330902</td>\n",
        "      <td>0.216</td>\n",
        "      <td>1623</td>\n",
        "      <td>6</td>\n",
        "      <td>75</td>\n",
        "      <td>...</td>\n",
        "      <td>2</td>\n",
        "      <td>0</td>\n",
        "      <td>0</td>\n",
        "      <td>0</td>\n",
        "      <td>0</td>\n",
        "      <td>3</td>\n",
        "      <td>1</td>\n",
        "      <td>0</td>\n",
        "      <td>0</td>\n",
        "      <td>36.11</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>3</th>\n",
        "      <td>2020-03-15</td>\n",
        "      <td>Algeria</td>\n",
        "      <td>0.216348</td>\n",
        "      <td>0.000153952</td>\n",
        "      <td>0.0364888</td>\n",
        "      <td>0.00330902</td>\n",
        "      <td>0.216</td>\n",
        "      <td>1623</td>\n",
        "      <td>6</td>\n",
        "      <td>75</td>\n",
        "      <td>...</td>\n",
        "      <td>2</td>\n",
        "      <td>0</td>\n",
        "      <td>0</td>\n",
        "      <td>0</td>\n",
        "      <td>0</td>\n",
        "      <td>3</td>\n",
        "      <td>1</td>\n",
        "      <td>0</td>\n",
        "      <td>0</td>\n",
        "      <td>36.11</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>4</th>\n",
        "      <td>2020-03-16</td>\n",
        "      <td>Algeria</td>\n",
        "      <td>0.216348</td>\n",
        "      <td>0.000153952</td>\n",
        "      <td>0.0364888</td>\n",
        "      <td>0.00330902</td>\n",
        "      <td>0.216</td>\n",
        "      <td>1623</td>\n",
        "      <td>6</td>\n",
        "      <td>75</td>\n",
        "      <td>...</td>\n",
        "      <td>2</td>\n",
        "      <td>0</td>\n",
        "      <td>0</td>\n",
        "      <td>0</td>\n",
        "      <td>0</td>\n",
        "      <td>3</td>\n",
        "      <td>1</td>\n",
        "      <td>0</td>\n",
        "      <td>0</td>\n",
        "      <td>36.11</td>\n",
        "    </tr>\n",
        "  </tbody>\n",
        "</table>\n",
        "<p>5 rows \u00d7 23 columns</p>\n",
        "</div>"
       ],
       "output_type": "pyout",
       "prompt_number": 13,
       "text": [
        "        Date  Country     theta        kappa        rho       sigma  \\\n",
        "0 2020-03-12  Algeria  0.216348  0.000153952  0.0364888  0.00330902   \n",
        "1 2020-03-13  Algeria  0.216348  0.000153952  0.0364888  0.00330902   \n",
        "2 2020-03-14  Algeria  0.216348  0.000153952  0.0364888  0.00330902   \n",
        "3 2020-03-15  Algeria  0.216348  0.000153952  0.0364888  0.00330902   \n",
        "4 2020-03-16  Algeria  0.216348  0.000153952  0.0364888  0.00330902   \n",
        "\n",
        "  alpha1 [-] 1/alpha2 [day] 1/beta [day] 1/gamma [day]  ... Cancel_events  \\\n",
        "0      0.216           1623            6            75  ...             2   \n",
        "1      0.216           1623            6            75  ...             2   \n",
        "2      0.216           1623            6            75  ...             2   \n",
        "3      0.216           1623            6            75  ...             2   \n",
        "4      0.216           1623            6            75  ...             2   \n",
        "\n",
        "   Gatherings_restrictions  Transport_closing  Stay_home_restrictions  \\\n",
        "0                        0                  0                       0   \n",
        "1                        0                  0                       0   \n",
        "2                        0                  0                       0   \n",
        "3                        0                  0                       0   \n",
        "4                        0                  0                       0   \n",
        "\n",
        "   Internal_movement_restrictions  International_movement_restrictions  \\\n",
        "0                               0                                    1   \n",
        "1                               0                                    1   \n",
        "2                               0                                    3   \n",
        "3                               0                                    3   \n",
        "4                               0                                    3   \n",
        "\n",
        "   Information_campaigns  Testing_policy  Contact_tracing  Stringency_index  \n",
        "0                      1               0                0             30.56  \n",
        "1                      1               0                0             30.56  \n",
        "2                      1               0                0             36.11  \n",
        "3                      1               0                0             36.11  \n",
        "4                      1               0                0             36.11  \n",
        "\n",
        "[5 rows x 23 columns]"
       ]
      }
     ],
     "prompt_number": 13
    },
    {
     "cell_type": "heading",
     "level": 3,
     "metadata": {},
     "source": [
      "$Rt$: Reprodcution number $\\mathrm{[-]}$"
     ]
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "analyser.param_history(\"Rt\", roll_window=None).tail()"
     ],
     "language": "python",
     "metadata": {},
     "outputs": [
      {
       "output_type": "display_data",
       "png": "\n",
       "text": [
        "<Figure size 648x432 with 1 Axes>"
       ]
      },
      {
       "html": [
        "<div>\n",
        "<style scoped>\n",
        "    .dataframe tbody tr th:only-of-type {\n",
        "        vertical-align: middle;\n",
        "    }\n",
        "\n",
        "    .dataframe tbody tr th {\n",
        "        vertical-align: top;\n",
        "    }\n",
        "\n",
        "    .dataframe thead th {\n",
        "        text-align: right;\n",
        "    }\n",
        "</style>\n",
        "<table border=\"1\" class=\"dataframe\">\n",
        "  <thead>\n",
        "    <tr style=\"text-align: right;\">\n",
        "      <th>Country</th>\n",
        "      <th>Algeria</th>\n",
        "      <th>Bahrain</th>\n",
        "      <th>Bolivia</th>\n",
        "      <th>Brazil</th>\n",
        "      <th>Dominican Republic</th>\n",
        "      <th>France</th>\n",
        "      <th>Honduras</th>\n",
        "      <th>Iran</th>\n",
        "      <th>Italy</th>\n",
        "      <th>Kuwait</th>\n",
        "      <th>Latvia</th>\n",
        "      <th>Macedonia</th>\n",
        "      <th>Mexico</th>\n",
        "      <th>Moldova</th>\n",
        "      <th>Russia</th>\n",
        "      <th>Turkey</th>\n",
        "      <th>United States</th>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>Date</th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "    </tr>\n",
        "  </thead>\n",
        "  <tbody>\n",
        "    <tr>\n",
        "      <th>2020-10-13</th>\n",
        "      <td>1.44</td>\n",
        "      <td>0.83</td>\n",
        "      <td>0.66</td>\n",
        "      <td>0.93</td>\n",
        "      <td>0.9</td>\n",
        "      <td>21.4</td>\n",
        "      <td>1.35</td>\n",
        "      <td>1.54</td>\n",
        "      <td>3.77</td>\n",
        "      <td>0.96</td>\n",
        "      <td>233.53</td>\n",
        "      <td>2.54</td>\n",
        "      <td>1.19</td>\n",
        "      <td>1.85</td>\n",
        "      <td>1.86</td>\n",
        "      <td>1.17</td>\n",
        "      <td>1.82</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>2020-10-14</th>\n",
        "      <td>1.44</td>\n",
        "      <td>0.83</td>\n",
        "      <td>0.66</td>\n",
        "      <td>0.93</td>\n",
        "      <td>0.9</td>\n",
        "      <td>21.4</td>\n",
        "      <td>1.35</td>\n",
        "      <td>1.54</td>\n",
        "      <td>3.77</td>\n",
        "      <td>0.96</td>\n",
        "      <td>233.53</td>\n",
        "      <td>2.54</td>\n",
        "      <td>1.19</td>\n",
        "      <td>1.85</td>\n",
        "      <td>1.86</td>\n",
        "      <td>1.17</td>\n",
        "      <td>1.82</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>2020-10-15</th>\n",
        "      <td>1.44</td>\n",
        "      <td>0.83</td>\n",
        "      <td>0.66</td>\n",
        "      <td>0.93</td>\n",
        "      <td>0.9</td>\n",
        "      <td>21.4</td>\n",
        "      <td>1.35</td>\n",
        "      <td>1.54</td>\n",
        "      <td>3.77</td>\n",
        "      <td>0.96</td>\n",
        "      <td>233.53</td>\n",
        "      <td>2.54</td>\n",
        "      <td>1.19</td>\n",
        "      <td>1.85</td>\n",
        "      <td>1.86</td>\n",
        "      <td>1.17</td>\n",
        "      <td>1.82</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>2020-10-16</th>\n",
        "      <td>1.44</td>\n",
        "      <td>0.83</td>\n",
        "      <td>0.66</td>\n",
        "      <td>0.93</td>\n",
        "      <td>0.9</td>\n",
        "      <td>21.4</td>\n",
        "      <td>1.35</td>\n",
        "      <td>1.54</td>\n",
        "      <td>3.77</td>\n",
        "      <td>0.96</td>\n",
        "      <td>233.53</td>\n",
        "      <td>2.54</td>\n",
        "      <td>1.19</td>\n",
        "      <td>1.85</td>\n",
        "      <td>1.86</td>\n",
        "      <td>1.17</td>\n",
        "      <td>1.82</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>2020-10-17</th>\n",
        "      <td>1.44</td>\n",
        "      <td>0.83</td>\n",
        "      <td>0.66</td>\n",
        "      <td>0.93</td>\n",
        "      <td>0.9</td>\n",
        "      <td>21.4</td>\n",
        "      <td>1.35</td>\n",
        "      <td>1.54</td>\n",
        "      <td>3.77</td>\n",
        "      <td>0.96</td>\n",
        "      <td>233.53</td>\n",
        "      <td>2.54</td>\n",
        "      <td>1.19</td>\n",
        "      <td>1.85</td>\n",
        "      <td>1.86</td>\n",
        "      <td>1.17</td>\n",
        "      <td>1.82</td>\n",
        "    </tr>\n",
        "  </tbody>\n",
        "</table>\n",
        "</div>"
       ],
       "output_type": "pyout",
       "prompt_number": 14,
       "text": [
        "Country     Algeria  Bahrain  Bolivia  Brazil  Dominican Republic  France  \\\n",
        "Date                                                                        \n",
        "2020-10-13     1.44     0.83     0.66    0.93                 0.9    21.4   \n",
        "2020-10-14     1.44     0.83     0.66    0.93                 0.9    21.4   \n",
        "2020-10-15     1.44     0.83     0.66    0.93                 0.9    21.4   \n",
        "2020-10-16     1.44     0.83     0.66    0.93                 0.9    21.4   \n",
        "2020-10-17     1.44     0.83     0.66    0.93                 0.9    21.4   \n",
        "\n",
        "Country     Honduras  Iran  Italy  Kuwait  Latvia  Macedonia  Mexico  Moldova  \\\n",
        "Date                                                                            \n",
        "2020-10-13      1.35  1.54   3.77    0.96  233.53       2.54    1.19     1.85   \n",
        "2020-10-14      1.35  1.54   3.77    0.96  233.53       2.54    1.19     1.85   \n",
        "2020-10-15      1.35  1.54   3.77    0.96  233.53       2.54    1.19     1.85   \n",
        "2020-10-16      1.35  1.54   3.77    0.96  233.53       2.54    1.19     1.85   \n",
        "2020-10-17      1.35  1.54   3.77    0.96  233.53       2.54    1.19     1.85   \n",
        "\n",
        "Country     Russia  Turkey  United States  \n",
        "Date                                       \n",
        "2020-10-13    1.86    1.17           1.82  \n",
        "2020-10-14    1.86    1.17           1.82  \n",
        "2020-10-15    1.86    1.17           1.82  \n",
        "2020-10-16    1.86    1.17           1.82  \n",
        "2020-10-17    1.86    1.17           1.82  "
       ]
      }
     ],
     "prompt_number": 14
    },
    {
     "cell_type": "heading",
     "level": 3,
     "metadata": {},
     "source": [
      "$\\rho$: Effective contact rate $\\mathrm{[-]}$"
     ]
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "analyser.param_history(\"rho\", roll_window=None).tail()"
     ],
     "language": "python",
     "metadata": {},
     "outputs": [
      {
       "output_type": "display_data",
       "png": "\n",
       "text": [
        "<Figure size 648x432 with 1 Axes>"
       ]
      },
      {
       "html": [
        "<div>\n",
        "<style scoped>\n",
        "    .dataframe tbody tr th:only-of-type {\n",
        "        vertical-align: middle;\n",
        "    }\n",
        "\n",
        "    .dataframe tbody tr th {\n",
        "        vertical-align: top;\n",
        "    }\n",
        "\n",
        "    .dataframe thead th {\n",
        "        text-align: right;\n",
        "    }\n",
        "</style>\n",
        "<table border=\"1\" class=\"dataframe\">\n",
        "  <thead>\n",
        "    <tr style=\"text-align: right;\">\n",
        "      <th>Country</th>\n",
        "      <th>Algeria</th>\n",
        "      <th>Bahrain</th>\n",
        "      <th>Bolivia</th>\n",
        "      <th>Brazil</th>\n",
        "      <th>Dominican Republic</th>\n",
        "      <th>France</th>\n",
        "      <th>Honduras</th>\n",
        "      <th>Iran</th>\n",
        "      <th>Italy</th>\n",
        "      <th>Kuwait</th>\n",
        "      <th>Latvia</th>\n",
        "      <th>Macedonia</th>\n",
        "      <th>Mexico</th>\n",
        "      <th>Moldova</th>\n",
        "      <th>Russia</th>\n",
        "      <th>Turkey</th>\n",
        "      <th>United States</th>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>Date</th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "    </tr>\n",
        "  </thead>\n",
        "  <tbody>\n",
        "    <tr>\n",
        "      <th>2020-10-13</th>\n",
        "      <td>0.003088</td>\n",
        "      <td>0.025074</td>\n",
        "      <td>0.002778</td>\n",
        "      <td>0.015849</td>\n",
        "      <td>0.004739</td>\n",
        "      <td>0.007212</td>\n",
        "      <td>0.003472</td>\n",
        "      <td>0.016443</td>\n",
        "      <td>0.017536</td>\n",
        "      <td>0.019619</td>\n",
        "      <td>0.0073</td>\n",
        "      <td>0.019088</td>\n",
        "      <td>0.031297</td>\n",
        "      <td>0.016742</td>\n",
        "      <td>0.002381</td>\n",
        "      <td>0.012604</td>\n",
        "      <td>0.002654</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>2020-10-14</th>\n",
        "      <td>0.003088</td>\n",
        "      <td>0.025074</td>\n",
        "      <td>0.002778</td>\n",
        "      <td>0.015849</td>\n",
        "      <td>0.004739</td>\n",
        "      <td>0.007212</td>\n",
        "      <td>0.003472</td>\n",
        "      <td>0.016443</td>\n",
        "      <td>0.017536</td>\n",
        "      <td>0.019619</td>\n",
        "      <td>0.0073</td>\n",
        "      <td>0.019088</td>\n",
        "      <td>0.031297</td>\n",
        "      <td>0.016742</td>\n",
        "      <td>0.002381</td>\n",
        "      <td>0.012604</td>\n",
        "      <td>0.002654</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>2020-10-15</th>\n",
        "      <td>0.003088</td>\n",
        "      <td>0.025074</td>\n",
        "      <td>0.002778</td>\n",
        "      <td>0.015849</td>\n",
        "      <td>0.004739</td>\n",
        "      <td>0.007212</td>\n",
        "      <td>0.003472</td>\n",
        "      <td>0.016443</td>\n",
        "      <td>0.017536</td>\n",
        "      <td>0.019619</td>\n",
        "      <td>0.0073</td>\n",
        "      <td>0.019088</td>\n",
        "      <td>0.031297</td>\n",
        "      <td>0.016742</td>\n",
        "      <td>0.002381</td>\n",
        "      <td>0.012604</td>\n",
        "      <td>0.002654</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>2020-10-16</th>\n",
        "      <td>0.003088</td>\n",
        "      <td>0.025074</td>\n",
        "      <td>0.002778</td>\n",
        "      <td>0.015849</td>\n",
        "      <td>0.004739</td>\n",
        "      <td>0.007212</td>\n",
        "      <td>0.003472</td>\n",
        "      <td>0.016443</td>\n",
        "      <td>0.017536</td>\n",
        "      <td>0.019619</td>\n",
        "      <td>0.0073</td>\n",
        "      <td>0.019088</td>\n",
        "      <td>0.031297</td>\n",
        "      <td>0.016742</td>\n",
        "      <td>0.002381</td>\n",
        "      <td>0.012604</td>\n",
        "      <td>0.002654</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>2020-10-17</th>\n",
        "      <td>0.003088</td>\n",
        "      <td>0.025074</td>\n",
        "      <td>0.002778</td>\n",
        "      <td>0.015849</td>\n",
        "      <td>0.004739</td>\n",
        "      <td>0.007212</td>\n",
        "      <td>0.003472</td>\n",
        "      <td>0.016443</td>\n",
        "      <td>0.017536</td>\n",
        "      <td>0.019619</td>\n",
        "      <td>0.0073</td>\n",
        "      <td>0.019088</td>\n",
        "      <td>0.031297</td>\n",
        "      <td>0.016742</td>\n",
        "      <td>0.002381</td>\n",
        "      <td>0.012604</td>\n",
        "      <td>0.002654</td>\n",
        "    </tr>\n",
        "  </tbody>\n",
        "</table>\n",
        "</div>"
       ],
       "output_type": "pyout",
       "prompt_number": 15,
       "text": [
        "Country      Algeria   Bahrain   Bolivia    Brazil  Dominican Republic  \\\n",
        "Date                                                                     \n",
        "2020-10-13  0.003088  0.025074  0.002778  0.015849            0.004739   \n",
        "2020-10-14  0.003088  0.025074  0.002778  0.015849            0.004739   \n",
        "2020-10-15  0.003088  0.025074  0.002778  0.015849            0.004739   \n",
        "2020-10-16  0.003088  0.025074  0.002778  0.015849            0.004739   \n",
        "2020-10-17  0.003088  0.025074  0.002778  0.015849            0.004739   \n",
        "\n",
        "Country       France  Honduras      Iran     Italy    Kuwait  Latvia  \\\n",
        "Date                                                                   \n",
        "2020-10-13  0.007212  0.003472  0.016443  0.017536  0.019619  0.0073   \n",
        "2020-10-14  0.007212  0.003472  0.016443  0.017536  0.019619  0.0073   \n",
        "2020-10-15  0.007212  0.003472  0.016443  0.017536  0.019619  0.0073   \n",
        "2020-10-16  0.007212  0.003472  0.016443  0.017536  0.019619  0.0073   \n",
        "2020-10-17  0.007212  0.003472  0.016443  0.017536  0.019619  0.0073   \n",
        "\n",
        "Country     Macedonia    Mexico   Moldova    Russia    Turkey  United States  \n",
        "Date                                                                          \n",
        "2020-10-13   0.019088  0.031297  0.016742  0.002381  0.012604       0.002654  \n",
        "2020-10-14   0.019088  0.031297  0.016742  0.002381  0.012604       0.002654  \n",
        "2020-10-15   0.019088  0.031297  0.016742  0.002381  0.012604       0.002654  \n",
        "2020-10-16   0.019088  0.031297  0.016742  0.002381  0.012604       0.002654  \n",
        "2020-10-17   0.019088  0.031297  0.016742  0.002381  0.012604       0.002654  "
       ]
      }
     ],
     "prompt_number": 15
    },
    {
     "cell_type": "heading",
     "level": 3,
     "metadata": {},
     "source": [
      "$\\sigma$: Recovery rate $\\mathrm{[-]}$"
     ]
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "analyser.param_history(\"sigma\", roll_window=None).tail()"
     ],
     "language": "python",
     "metadata": {},
     "outputs": [
      {
       "output_type": "display_data",
       "png": "\n",
       "text": [
        "<Figure size 648x432 with 1 Axes>"
       ]
      },
      {
       "html": [
        "<div>\n",
        "<style scoped>\n",
        "    .dataframe tbody tr th:only-of-type {\n",
        "        vertical-align: middle;\n",
        "    }\n",
        "\n",
        "    .dataframe tbody tr th {\n",
        "        vertical-align: top;\n",
        "    }\n",
        "\n",
        "    .dataframe thead th {\n",
        "        text-align: right;\n",
        "    }\n",
        "</style>\n",
        "<table border=\"1\" class=\"dataframe\">\n",
        "  <thead>\n",
        "    <tr style=\"text-align: right;\">\n",
        "      <th>Country</th>\n",
        "      <th>Algeria</th>\n",
        "      <th>Bahrain</th>\n",
        "      <th>Bolivia</th>\n",
        "      <th>Brazil</th>\n",
        "      <th>Dominican Republic</th>\n",
        "      <th>France</th>\n",
        "      <th>Honduras</th>\n",
        "      <th>Iran</th>\n",
        "      <th>Italy</th>\n",
        "      <th>Kuwait</th>\n",
        "      <th>Latvia</th>\n",
        "      <th>Macedonia</th>\n",
        "      <th>Mexico</th>\n",
        "      <th>Moldova</th>\n",
        "      <th>Russia</th>\n",
        "      <th>Turkey</th>\n",
        "      <th>United States</th>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>Date</th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "    </tr>\n",
        "  </thead>\n",
        "  <tbody>\n",
        "    <tr>\n",
        "      <th>2020-10-13</th>\n",
        "      <td>0.002042</td>\n",
        "      <td>0.030055</td>\n",
        "      <td>0.003897</td>\n",
        "      <td>0.016609</td>\n",
        "      <td>0.005198</td>\n",
        "      <td>0.0003</td>\n",
        "      <td>0.002476</td>\n",
        "      <td>0.009889</td>\n",
        "      <td>0.004539</td>\n",
        "      <td>0.020324</td>\n",
        "      <td>0.0</td>\n",
        "      <td>0.007316</td>\n",
        "      <td>0.024131</td>\n",
        "      <td>0.008875</td>\n",
        "      <td>0.00124</td>\n",
        "      <td>0.010398</td>\n",
        "      <td>0.001429</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>2020-10-14</th>\n",
        "      <td>0.002042</td>\n",
        "      <td>0.030055</td>\n",
        "      <td>0.003897</td>\n",
        "      <td>0.016609</td>\n",
        "      <td>0.005198</td>\n",
        "      <td>0.0003</td>\n",
        "      <td>0.002476</td>\n",
        "      <td>0.009889</td>\n",
        "      <td>0.004539</td>\n",
        "      <td>0.020324</td>\n",
        "      <td>0.0</td>\n",
        "      <td>0.007316</td>\n",
        "      <td>0.024131</td>\n",
        "      <td>0.008875</td>\n",
        "      <td>0.00124</td>\n",
        "      <td>0.010398</td>\n",
        "      <td>0.001429</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>2020-10-15</th>\n",
        "      <td>0.002042</td>\n",
        "      <td>0.030055</td>\n",
        "      <td>0.003897</td>\n",
        "      <td>0.016609</td>\n",
        "      <td>0.005198</td>\n",
        "      <td>0.0003</td>\n",
        "      <td>0.002476</td>\n",
        "      <td>0.009889</td>\n",
        "      <td>0.004539</td>\n",
        "      <td>0.020324</td>\n",
        "      <td>0.0</td>\n",
        "      <td>0.007316</td>\n",
        "      <td>0.024131</td>\n",
        "      <td>0.008875</td>\n",
        "      <td>0.00124</td>\n",
        "      <td>0.010398</td>\n",
        "      <td>0.001429</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>2020-10-16</th>\n",
        "      <td>0.002042</td>\n",
        "      <td>0.030055</td>\n",
        "      <td>0.003897</td>\n",
        "      <td>0.016609</td>\n",
        "      <td>0.005198</td>\n",
        "      <td>0.0003</td>\n",
        "      <td>0.002476</td>\n",
        "      <td>0.009889</td>\n",
        "      <td>0.004539</td>\n",
        "      <td>0.020324</td>\n",
        "      <td>0.0</td>\n",
        "      <td>0.007316</td>\n",
        "      <td>0.024131</td>\n",
        "      <td>0.008875</td>\n",
        "      <td>0.00124</td>\n",
        "      <td>0.010398</td>\n",
        "      <td>0.001429</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>2020-10-17</th>\n",
        "      <td>0.002042</td>\n",
        "      <td>0.030055</td>\n",
        "      <td>0.003897</td>\n",
        "      <td>0.016609</td>\n",
        "      <td>0.005198</td>\n",
        "      <td>0.0003</td>\n",
        "      <td>0.002476</td>\n",
        "      <td>0.009889</td>\n",
        "      <td>0.004539</td>\n",
        "      <td>0.020324</td>\n",
        "      <td>0.0</td>\n",
        "      <td>0.007316</td>\n",
        "      <td>0.024131</td>\n",
        "      <td>0.008875</td>\n",
        "      <td>0.00124</td>\n",
        "      <td>0.010398</td>\n",
        "      <td>0.001429</td>\n",
        "    </tr>\n",
        "  </tbody>\n",
        "</table>\n",
        "</div>"
       ],
       "output_type": "pyout",
       "prompt_number": 16,
       "text": [
        "Country      Algeria   Bahrain   Bolivia    Brazil  Dominican Republic  \\\n",
        "Date                                                                     \n",
        "2020-10-13  0.002042  0.030055  0.003897  0.016609            0.005198   \n",
        "2020-10-14  0.002042  0.030055  0.003897  0.016609            0.005198   \n",
        "2020-10-15  0.002042  0.030055  0.003897  0.016609            0.005198   \n",
        "2020-10-16  0.002042  0.030055  0.003897  0.016609            0.005198   \n",
        "2020-10-17  0.002042  0.030055  0.003897  0.016609            0.005198   \n",
        "\n",
        "Country     France  Honduras      Iran     Italy    Kuwait  Latvia  Macedonia  \\\n",
        "Date                                                                            \n",
        "2020-10-13  0.0003  0.002476  0.009889  0.004539  0.020324     0.0   0.007316   \n",
        "2020-10-14  0.0003  0.002476  0.009889  0.004539  0.020324     0.0   0.007316   \n",
        "2020-10-15  0.0003  0.002476  0.009889  0.004539  0.020324     0.0   0.007316   \n",
        "2020-10-16  0.0003  0.002476  0.009889  0.004539  0.020324     0.0   0.007316   \n",
        "2020-10-17  0.0003  0.002476  0.009889  0.004539  0.020324     0.0   0.007316   \n",
        "\n",
        "Country       Mexico   Moldova   Russia    Turkey  United States  \n",
        "Date                                                              \n",
        "2020-10-13  0.024131  0.008875  0.00124  0.010398       0.001429  \n",
        "2020-10-14  0.024131  0.008875  0.00124  0.010398       0.001429  \n",
        "2020-10-15  0.024131  0.008875  0.00124  0.010398       0.001429  \n",
        "2020-10-16  0.024131  0.008875  0.00124  0.010398       0.001429  \n",
        "2020-10-17  0.024131  0.008875  0.00124  0.010398       0.001429  "
       ]
      }
     ],
     "prompt_number": 16
    },
    {
     "cell_type": "heading",
     "level": 3,
     "metadata": {},
     "source": [
      "$\\kappa$: Mortality rate of infected cases $\\mathrm{[-]}$"
     ]
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "analyser.param_history(\"kappa\", roll_window=None).tail()"
     ],
     "language": "python",
     "metadata": {},
     "outputs": [
      {
       "output_type": "display_data",
       "png": "\n",
       "text": [
        "<Figure size 648x432 with 1 Axes>"
       ]
      },
      {
       "html": [
        "<div>\n",
        "<style scoped>\n",
        "    .dataframe tbody tr th:only-of-type {\n",
        "        vertical-align: middle;\n",
        "    }\n",
        "\n",
        "    .dataframe tbody tr th {\n",
        "        vertical-align: top;\n",
        "    }\n",
        "\n",
        "    .dataframe thead th {\n",
        "        text-align: right;\n",
        "    }\n",
        "</style>\n",
        "<table border=\"1\" class=\"dataframe\">\n",
        "  <thead>\n",
        "    <tr style=\"text-align: right;\">\n",
        "      <th>Country</th>\n",
        "      <th>Algeria</th>\n",
        "      <th>Bahrain</th>\n",
        "      <th>Bolivia</th>\n",
        "      <th>Brazil</th>\n",
        "      <th>Dominican Republic</th>\n",
        "      <th>France</th>\n",
        "      <th>Honduras</th>\n",
        "      <th>Iran</th>\n",
        "      <th>Italy</th>\n",
        "      <th>Kuwait</th>\n",
        "      <th>Latvia</th>\n",
        "      <th>Macedonia</th>\n",
        "      <th>Mexico</th>\n",
        "      <th>Moldova</th>\n",
        "      <th>Russia</th>\n",
        "      <th>Turkey</th>\n",
        "      <th>United States</th>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>Date</th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "    </tr>\n",
        "  </thead>\n",
        "  <tbody>\n",
        "    <tr>\n",
        "      <th>2020-10-13</th>\n",
        "      <td>0.000096</td>\n",
        "      <td>0.000048</td>\n",
        "      <td>0.000117</td>\n",
        "      <td>0.000131</td>\n",
        "      <td>0.000071</td>\n",
        "      <td>0.000037</td>\n",
        "      <td>0.000098</td>\n",
        "      <td>0.000598</td>\n",
        "      <td>0.000113</td>\n",
        "      <td>0.000144</td>\n",
        "      <td>0.000031</td>\n",
        "      <td>0.00007</td>\n",
        "      <td>0.000491</td>\n",
        "      <td>0.000187</td>\n",
        "      <td>0.000041</td>\n",
        "      <td>0.000002</td>\n",
        "      <td>0.000002</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>2020-10-14</th>\n",
        "      <td>0.000096</td>\n",
        "      <td>0.000048</td>\n",
        "      <td>0.000117</td>\n",
        "      <td>0.000131</td>\n",
        "      <td>0.000071</td>\n",
        "      <td>0.000037</td>\n",
        "      <td>0.000098</td>\n",
        "      <td>0.000598</td>\n",
        "      <td>0.000113</td>\n",
        "      <td>0.000144</td>\n",
        "      <td>0.000031</td>\n",
        "      <td>0.00007</td>\n",
        "      <td>0.000491</td>\n",
        "      <td>0.000187</td>\n",
        "      <td>0.000041</td>\n",
        "      <td>0.000002</td>\n",
        "      <td>0.000002</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>2020-10-15</th>\n",
        "      <td>0.000096</td>\n",
        "      <td>0.000048</td>\n",
        "      <td>0.000117</td>\n",
        "      <td>0.000131</td>\n",
        "      <td>0.000071</td>\n",
        "      <td>0.000037</td>\n",
        "      <td>0.000098</td>\n",
        "      <td>0.000598</td>\n",
        "      <td>0.000113</td>\n",
        "      <td>0.000144</td>\n",
        "      <td>0.000031</td>\n",
        "      <td>0.00007</td>\n",
        "      <td>0.000491</td>\n",
        "      <td>0.000187</td>\n",
        "      <td>0.000041</td>\n",
        "      <td>0.000002</td>\n",
        "      <td>0.000002</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>2020-10-16</th>\n",
        "      <td>0.000096</td>\n",
        "      <td>0.000048</td>\n",
        "      <td>0.000117</td>\n",
        "      <td>0.000131</td>\n",
        "      <td>0.000071</td>\n",
        "      <td>0.000037</td>\n",
        "      <td>0.000098</td>\n",
        "      <td>0.000598</td>\n",
        "      <td>0.000113</td>\n",
        "      <td>0.000144</td>\n",
        "      <td>0.000031</td>\n",
        "      <td>0.00007</td>\n",
        "      <td>0.000491</td>\n",
        "      <td>0.000187</td>\n",
        "      <td>0.000041</td>\n",
        "      <td>0.000002</td>\n",
        "      <td>0.000002</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>2020-10-17</th>\n",
        "      <td>0.000096</td>\n",
        "      <td>0.000048</td>\n",
        "      <td>0.000117</td>\n",
        "      <td>0.000131</td>\n",
        "      <td>0.000071</td>\n",
        "      <td>0.000037</td>\n",
        "      <td>0.000098</td>\n",
        "      <td>0.000598</td>\n",
        "      <td>0.000113</td>\n",
        "      <td>0.000144</td>\n",
        "      <td>0.000031</td>\n",
        "      <td>0.00007</td>\n",
        "      <td>0.000491</td>\n",
        "      <td>0.000187</td>\n",
        "      <td>0.000041</td>\n",
        "      <td>0.000002</td>\n",
        "      <td>0.000002</td>\n",
        "    </tr>\n",
        "  </tbody>\n",
        "</table>\n",
        "</div>"
       ],
       "output_type": "pyout",
       "prompt_number": 17,
       "text": [
        "Country      Algeria   Bahrain   Bolivia    Brazil  Dominican Republic  \\\n",
        "Date                                                                     \n",
        "2020-10-13  0.000096  0.000048  0.000117  0.000131            0.000071   \n",
        "2020-10-14  0.000096  0.000048  0.000117  0.000131            0.000071   \n",
        "2020-10-15  0.000096  0.000048  0.000117  0.000131            0.000071   \n",
        "2020-10-16  0.000096  0.000048  0.000117  0.000131            0.000071   \n",
        "2020-10-17  0.000096  0.000048  0.000117  0.000131            0.000071   \n",
        "\n",
        "Country       France  Honduras      Iran     Italy    Kuwait    Latvia  \\\n",
        "Date                                                                     \n",
        "2020-10-13  0.000037  0.000098  0.000598  0.000113  0.000144  0.000031   \n",
        "2020-10-14  0.000037  0.000098  0.000598  0.000113  0.000144  0.000031   \n",
        "2020-10-15  0.000037  0.000098  0.000598  0.000113  0.000144  0.000031   \n",
        "2020-10-16  0.000037  0.000098  0.000598  0.000113  0.000144  0.000031   \n",
        "2020-10-17  0.000037  0.000098  0.000598  0.000113  0.000144  0.000031   \n",
        "\n",
        "Country     Macedonia    Mexico   Moldova    Russia    Turkey  United States  \n",
        "Date                                                                          \n",
        "2020-10-13    0.00007  0.000491  0.000187  0.000041  0.000002       0.000002  \n",
        "2020-10-14    0.00007  0.000491  0.000187  0.000041  0.000002       0.000002  \n",
        "2020-10-15    0.00007  0.000491  0.000187  0.000041  0.000002       0.000002  \n",
        "2020-10-16    0.00007  0.000491  0.000187  0.000041  0.000002       0.000002  \n",
        "2020-10-17    0.00007  0.000491  0.000187  0.000041  0.000002       0.000002  "
       ]
      }
     ],
     "prompt_number": 17
    },
    {
     "cell_type": "heading",
     "level": 3,
     "metadata": {},
     "source": [
      "$\\theta$: Mortality rate of S$^\\ast$ cases $\\mathrm{[-]}$"
     ]
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "analyser.param_history(\"theta\", roll_window=None).tail()"
     ],
     "language": "python",
     "metadata": {},
     "outputs": [
      {
       "output_type": "display_data",
       "png": "\n",
       "text": [
        "<Figure size 648x432 with 1 Axes>"
       ]
      },
      {
       "html": [
        "<div>\n",
        "<style scoped>\n",
        "    .dataframe tbody tr th:only-of-type {\n",
        "        vertical-align: middle;\n",
        "    }\n",
        "\n",
        "    .dataframe tbody tr th {\n",
        "        vertical-align: top;\n",
        "    }\n",
        "\n",
        "    .dataframe thead th {\n",
        "        text-align: right;\n",
        "    }\n",
        "</style>\n",
        "<table border=\"1\" class=\"dataframe\">\n",
        "  <thead>\n",
        "    <tr style=\"text-align: right;\">\n",
        "      <th>Country</th>\n",
        "      <th>Algeria</th>\n",
        "      <th>Bahrain</th>\n",
        "      <th>Bolivia</th>\n",
        "      <th>Brazil</th>\n",
        "      <th>Dominican Republic</th>\n",
        "      <th>France</th>\n",
        "      <th>Honduras</th>\n",
        "      <th>Iran</th>\n",
        "      <th>Italy</th>\n",
        "      <th>Kuwait</th>\n",
        "      <th>Latvia</th>\n",
        "      <th>Macedonia</th>\n",
        "      <th>Mexico</th>\n",
        "      <th>Moldova</th>\n",
        "      <th>Russia</th>\n",
        "      <th>Turkey</th>\n",
        "      <th>United States</th>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>Date</th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "    </tr>\n",
        "  </thead>\n",
        "  <tbody>\n",
        "    <tr>\n",
        "      <th>2020-10-13</th>\n",
        "      <td>0.001117</td>\n",
        "      <td>0.002846</td>\n",
        "      <td>0.045018</td>\n",
        "      <td>0.017081</td>\n",
        "      <td>0.001298</td>\n",
        "      <td>0.000673</td>\n",
        "      <td>0.001645</td>\n",
        "      <td>0.020856</td>\n",
        "      <td>0.000233</td>\n",
        "      <td>0.001108</td>\n",
        "      <td>0.000707</td>\n",
        "      <td>0.018048</td>\n",
        "      <td>0.067152</td>\n",
        "      <td>0.001151</td>\n",
        "      <td>0.00002</td>\n",
        "      <td>0.038336</td>\n",
        "      <td>0.016379</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>2020-10-14</th>\n",
        "      <td>0.001117</td>\n",
        "      <td>0.002846</td>\n",
        "      <td>0.045018</td>\n",
        "      <td>0.017081</td>\n",
        "      <td>0.001298</td>\n",
        "      <td>0.000673</td>\n",
        "      <td>0.001645</td>\n",
        "      <td>0.020856</td>\n",
        "      <td>0.000233</td>\n",
        "      <td>0.001108</td>\n",
        "      <td>0.000707</td>\n",
        "      <td>0.018048</td>\n",
        "      <td>0.067152</td>\n",
        "      <td>0.001151</td>\n",
        "      <td>0.00002</td>\n",
        "      <td>0.038336</td>\n",
        "      <td>0.016379</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>2020-10-15</th>\n",
        "      <td>0.001117</td>\n",
        "      <td>0.002846</td>\n",
        "      <td>0.045018</td>\n",
        "      <td>0.017081</td>\n",
        "      <td>0.001298</td>\n",
        "      <td>0.000673</td>\n",
        "      <td>0.001645</td>\n",
        "      <td>0.020856</td>\n",
        "      <td>0.000233</td>\n",
        "      <td>0.001108</td>\n",
        "      <td>0.000707</td>\n",
        "      <td>0.018048</td>\n",
        "      <td>0.067152</td>\n",
        "      <td>0.001151</td>\n",
        "      <td>0.00002</td>\n",
        "      <td>0.038336</td>\n",
        "      <td>0.016379</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>2020-10-16</th>\n",
        "      <td>0.001117</td>\n",
        "      <td>0.002846</td>\n",
        "      <td>0.045018</td>\n",
        "      <td>0.017081</td>\n",
        "      <td>0.001298</td>\n",
        "      <td>0.000673</td>\n",
        "      <td>0.001645</td>\n",
        "      <td>0.020856</td>\n",
        "      <td>0.000233</td>\n",
        "      <td>0.001108</td>\n",
        "      <td>0.000707</td>\n",
        "      <td>0.018048</td>\n",
        "      <td>0.067152</td>\n",
        "      <td>0.001151</td>\n",
        "      <td>0.00002</td>\n",
        "      <td>0.038336</td>\n",
        "      <td>0.016379</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>2020-10-17</th>\n",
        "      <td>0.001117</td>\n",
        "      <td>0.002846</td>\n",
        "      <td>0.045018</td>\n",
        "      <td>0.017081</td>\n",
        "      <td>0.001298</td>\n",
        "      <td>0.000673</td>\n",
        "      <td>0.001645</td>\n",
        "      <td>0.020856</td>\n",
        "      <td>0.000233</td>\n",
        "      <td>0.001108</td>\n",
        "      <td>0.000707</td>\n",
        "      <td>0.018048</td>\n",
        "      <td>0.067152</td>\n",
        "      <td>0.001151</td>\n",
        "      <td>0.00002</td>\n",
        "      <td>0.038336</td>\n",
        "      <td>0.016379</td>\n",
        "    </tr>\n",
        "  </tbody>\n",
        "</table>\n",
        "</div>"
       ],
       "output_type": "pyout",
       "prompt_number": 18,
       "text": [
        "Country      Algeria   Bahrain   Bolivia    Brazil  Dominican Republic  \\\n",
        "Date                                                                     \n",
        "2020-10-13  0.001117  0.002846  0.045018  0.017081            0.001298   \n",
        "2020-10-14  0.001117  0.002846  0.045018  0.017081            0.001298   \n",
        "2020-10-15  0.001117  0.002846  0.045018  0.017081            0.001298   \n",
        "2020-10-16  0.001117  0.002846  0.045018  0.017081            0.001298   \n",
        "2020-10-17  0.001117  0.002846  0.045018  0.017081            0.001298   \n",
        "\n",
        "Country       France  Honduras      Iran     Italy    Kuwait    Latvia  \\\n",
        "Date                                                                     \n",
        "2020-10-13  0.000673  0.001645  0.020856  0.000233  0.001108  0.000707   \n",
        "2020-10-14  0.000673  0.001645  0.020856  0.000233  0.001108  0.000707   \n",
        "2020-10-15  0.000673  0.001645  0.020856  0.000233  0.001108  0.000707   \n",
        "2020-10-16  0.000673  0.001645  0.020856  0.000233  0.001108  0.000707   \n",
        "2020-10-17  0.000673  0.001645  0.020856  0.000233  0.001108  0.000707   \n",
        "\n",
        "Country     Macedonia    Mexico   Moldova   Russia    Turkey  United States  \n",
        "Date                                                                         \n",
        "2020-10-13   0.018048  0.067152  0.001151  0.00002  0.038336       0.016379  \n",
        "2020-10-14   0.018048  0.067152  0.001151  0.00002  0.038336       0.016379  \n",
        "2020-10-15   0.018048  0.067152  0.001151  0.00002  0.038336       0.016379  \n",
        "2020-10-16   0.018048  0.067152  0.001151  0.00002  0.038336       0.016379  \n",
        "2020-10-17   0.018048  0.067152  0.001151  0.00002  0.038336       0.016379  "
       ]
      }
     ],
     "prompt_number": 18
    },
    {
     "cell_type": "markdown",
     "metadata": {},
     "source": [
      "## (Experimental): Relationship of OxCGRT index and parameter values\n",
      "Government responses will impact on parameter values of ODE models about 14 days later. Here, we will investigate on the relationship of [stringency index (from OxCGRT)](https://github.com/OxCGRT/covid-policy-tracker/blob/master/documentation/index_methodology.md) and reproduction number/model parameters.\n"
     ]
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "%matplotlib inline\n",
      "from matplotlib import pyplot as plt\n",
      "import seaborn as sns\n",
      "import pandas as pd"
     ],
     "language": "python",
     "metadata": {},
     "outputs": [],
     "prompt_number": 19
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "df = analyser.track()\n",
      "param_cols = [\"Rt\", *cs.SIRF.PARAMETERS]\n",
      "oxcgrt_cols = oxcgrt_data.OXCGRT_VARS[:]\n",
      "cols = param_cols + oxcgrt_cols\n",
      "delay = 14\n",
      "\n",
      "for col in param_cols:\n",
      "    df[col] = pd.to_numeric(df[col], errors=\"coerce\")\n",
      "    df[col] = df.groupby(\"Country\")[col].shift(0 - delay)\n",
      "\n",
      "df = df.dropna(how=\"any\")\n",
      "df = df.loc[:, [\"Date\", \"Country\", *cols]]\n",
      "track_df = df.copy()\n",
      "track_df.info()"
     ],
     "language": "python",
     "metadata": {},
     "outputs": [
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "<class 'pandas.core.frame.DataFrame'>\n",
        "Int64Index: 76223 entries, 0 to 76446\n",
        "Data columns (total 19 columns):\n",
        " #   Column                               Non-Null Count  Dtype         \n",
        "---  ------                               --------------  -----         \n",
        " 0   Date                                 76223 non-null  datetime64[ns]\n",
        " 1   Country                              76223 non-null  object        \n",
        " 2   Rt                                   76223 non-null  float64       \n",
        " 3   theta                                76223 non-null  float64       \n",
        " 4   kappa                                76223 non-null  float64       \n",
        " 5   rho                                  76223 non-null  float64       \n",
        " 6   sigma                                76223 non-null  float64       \n",
        " 7   School_closing                       76223 non-null  int64         \n",
        " 8   Workplace_closing                    76223 non-null  int64         \n",
        " 9   Cancel_events                        76223 non-null  int64         \n",
        " 10  Gatherings_restrictions              76223 non-null  int64         \n",
        " 11  Transport_closing                    76223 non-null  int64         \n",
        " 12  Stay_home_restrictions               76223 non-null  int64         \n",
        " 13  Internal_movement_restrictions       76223 non-null  int64         \n",
        " 14  International_movement_restrictions  76223 non-null  int64         \n",
        " 15  Information_campaigns                76223 non-null  int64         \n",
        " 16  Testing_policy                       76223 non-null  int64         \n",
        " 17  Contact_tracing                      76223 non-null  int64         \n",
        " 18  Stringency_index                     76223 non-null  float64       \n",
        "dtypes: datetime64[ns](1), float64(6), int64(11), object(1)\n",
        "memory usage: 11.6+ MB\n"
       ]
      }
     ],
     "prompt_number": 20
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "# Correlation\n",
      "df = track_df.copy()\n",
      "df.corr().style.background_gradient(axis=None)"
     ],
     "language": "python",
     "metadata": {},
     "outputs": [
      {
       "html": [
        "<style  type=\"text/css\" >\n",
        "#T_0f047226_108e_11eb_b858_525400842e71row0_col0,#T_0f047226_108e_11eb_b858_525400842e71row1_col1,#T_0f047226_108e_11eb_b858_525400842e71row2_col2,#T_0f047226_108e_11eb_b858_525400842e71row3_col3,#T_0f047226_108e_11eb_b858_525400842e71row4_col4,#T_0f047226_108e_11eb_b858_525400842e71row5_col5,#T_0f047226_108e_11eb_b858_525400842e71row6_col6,#T_0f047226_108e_11eb_b858_525400842e71row7_col7,#T_0f047226_108e_11eb_b858_525400842e71row8_col8,#T_0f047226_108e_11eb_b858_525400842e71row9_col9,#T_0f047226_108e_11eb_b858_525400842e71row10_col10,#T_0f047226_108e_11eb_b858_525400842e71row11_col11,#T_0f047226_108e_11eb_b858_525400842e71row12_col12,#T_0f047226_108e_11eb_b858_525400842e71row13_col13,#T_0f047226_108e_11eb_b858_525400842e71row14_col14,#T_0f047226_108e_11eb_b858_525400842e71row15_col15,#T_0f047226_108e_11eb_b858_525400842e71row16_col16{\n",
        "            background-color:  #023858;\n",
        "            color:  #f1f1f1;\n",
        "        }#T_0f047226_108e_11eb_b858_525400842e71row0_col1,#T_0f047226_108e_11eb_b858_525400842e71row1_col0,#T_0f047226_108e_11eb_b858_525400842e71row2_col14,#T_0f047226_108e_11eb_b858_525400842e71row14_col2{\n",
        "            background-color:  #e0dded;\n",
        "            color:  #000000;\n",
        "        }#T_0f047226_108e_11eb_b858_525400842e71row0_col2,#T_0f047226_108e_11eb_b858_525400842e71row0_col12,#T_0f047226_108e_11eb_b858_525400842e71row2_col0,#T_0f047226_108e_11eb_b858_525400842e71row12_col0{\n",
        "            background-color:  #d9d8ea;\n",
        "            color:  #000000;\n",
        "        }#T_0f047226_108e_11eb_b858_525400842e71row0_col3,#T_0f047226_108e_11eb_b858_525400842e71row3_col0,#T_0f047226_108e_11eb_b858_525400842e71row4_col7,#T_0f047226_108e_11eb_b858_525400842e71row5_col15,#T_0f047226_108e_11eb_b858_525400842e71row7_col4,#T_0f047226_108e_11eb_b858_525400842e71row15_col5{\n",
        "            background-color:  #75a9cf;\n",
        "            color:  #000000;\n",
        "        }#T_0f047226_108e_11eb_b858_525400842e71row0_col4,#T_0f047226_108e_11eb_b858_525400842e71row4_col0{\n",
        "            background-color:  #ede7f2;\n",
        "            color:  #000000;\n",
        "        }#T_0f047226_108e_11eb_b858_525400842e71row0_col5,#T_0f047226_108e_11eb_b858_525400842e71row5_col0{\n",
        "            background-color:  #f5eff6;\n",
        "            color:  #000000;\n",
        "        }#T_0f047226_108e_11eb_b858_525400842e71row0_col6,#T_0f047226_108e_11eb_b858_525400842e71row1_col13,#T_0f047226_108e_11eb_b858_525400842e71row6_col0,#T_0f047226_108e_11eb_b858_525400842e71row13_col1{\n",
        "            background-color:  #f1ebf4;\n",
        "            color:  #000000;\n",
        "        }#T_0f047226_108e_11eb_b858_525400842e71row0_col7,#T_0f047226_108e_11eb_b858_525400842e71row7_col0{\n",
        "            background-color:  #e9e5f1;\n",
        "            color:  #000000;\n",
        "        }#T_0f047226_108e_11eb_b858_525400842e71row0_col8,#T_0f047226_108e_11eb_b858_525400842e71row8_col0{\n",
        "            background-color:  #e4e1ef;\n",
        "            color:  #000000;\n",
        "        }#T_0f047226_108e_11eb_b858_525400842e71row0_col9,#T_0f047226_108e_11eb_b858_525400842e71row9_col0{\n",
        "            background-color:  #ebe6f2;\n",
        "            color:  #000000;\n",
        "        }#T_0f047226_108e_11eb_b858_525400842e71row0_col10,#T_0f047226_108e_11eb_b858_525400842e71row10_col0{\n",
        "            background-color:  #ede8f3;\n",
        "            color:  #000000;\n",
        "        }#T_0f047226_108e_11eb_b858_525400842e71row0_col11,#T_0f047226_108e_11eb_b858_525400842e71row11_col0{\n",
        "            background-color:  #f8f1f8;\n",
        "            color:  #000000;\n",
        "        }#T_0f047226_108e_11eb_b858_525400842e71row0_col13,#T_0f047226_108e_11eb_b858_525400842e71row13_col0{\n",
        "            background-color:  #d1d2e6;\n",
        "            color:  #000000;\n",
        "        }#T_0f047226_108e_11eb_b858_525400842e71row0_col14,#T_0f047226_108e_11eb_b858_525400842e71row14_col0{\n",
        "            background-color:  #e0deed;\n",
        "            color:  #000000;\n",
        "        }#T_0f047226_108e_11eb_b858_525400842e71row0_col15,#T_0f047226_108e_11eb_b858_525400842e71row15_col0{\n",
        "            background-color:  #e7e3f0;\n",
        "            color:  #000000;\n",
        "        }#T_0f047226_108e_11eb_b858_525400842e71row0_col16,#T_0f047226_108e_11eb_b858_525400842e71row16_col0{\n",
        "            background-color:  #eee9f3;\n",
        "            color:  #000000;\n",
        "        }#T_0f047226_108e_11eb_b858_525400842e71row1_col2,#T_0f047226_108e_11eb_b858_525400842e71row2_col1{\n",
        "            background-color:  #023d60;\n",
        "            color:  #f1f1f1;\n",
        "        }#T_0f047226_108e_11eb_b858_525400842e71row1_col3,#T_0f047226_108e_11eb_b858_525400842e71row3_col1,#T_0f047226_108e_11eb_b858_525400842e71row6_col7,#T_0f047226_108e_11eb_b858_525400842e71row7_col6{\n",
        "            background-color:  #0872b1;\n",
        "            color:  #f1f1f1;\n",
        "        }#T_0f047226_108e_11eb_b858_525400842e71row1_col4,#T_0f047226_108e_11eb_b858_525400842e71row4_col1,#T_0f047226_108e_11eb_b858_525400842e71row11_col15,#T_0f047226_108e_11eb_b858_525400842e71row15_col11{\n",
        "            background-color:  #abbfdc;\n",
        "            color:  #000000;\n",
        "        }#T_0f047226_108e_11eb_b858_525400842e71row1_col5,#T_0f047226_108e_11eb_b858_525400842e71row1_col8,#T_0f047226_108e_11eb_b858_525400842e71row2_col8,#T_0f047226_108e_11eb_b858_525400842e71row5_col1,#T_0f047226_108e_11eb_b858_525400842e71row8_col1,#T_0f047226_108e_11eb_b858_525400842e71row8_col2{\n",
        "            background-color:  #cdd0e5;\n",
        "            color:  #000000;\n",
        "        }#T_0f047226_108e_11eb_b858_525400842e71row1_col6,#T_0f047226_108e_11eb_b858_525400842e71row6_col1{\n",
        "            background-color:  #c8cde4;\n",
        "            color:  #000000;\n",
        "        }#T_0f047226_108e_11eb_b858_525400842e71row1_col7,#T_0f047226_108e_11eb_b858_525400842e71row2_col6,#T_0f047226_108e_11eb_b858_525400842e71row6_col2,#T_0f047226_108e_11eb_b858_525400842e71row7_col1{\n",
        "            background-color:  #d2d3e7;\n",
        "            color:  #000000;\n",
        "        }#T_0f047226_108e_11eb_b858_525400842e71row1_col9,#T_0f047226_108e_11eb_b858_525400842e71row2_col9,#T_0f047226_108e_11eb_b858_525400842e71row3_col7,#T_0f047226_108e_11eb_b858_525400842e71row7_col3,#T_0f047226_108e_11eb_b858_525400842e71row9_col1,#T_0f047226_108e_11eb_b858_525400842e71row9_col2{\n",
        "            background-color:  #cccfe5;\n",
        "            color:  #000000;\n",
        "        }#T_0f047226_108e_11eb_b858_525400842e71row1_col10,#T_0f047226_108e_11eb_b858_525400842e71row10_col1{\n",
        "            background-color:  #73a9cf;\n",
        "            color:  #000000;\n",
        "        }#T_0f047226_108e_11eb_b858_525400842e71row1_col11,#T_0f047226_108e_11eb_b858_525400842e71row1_col12,#T_0f047226_108e_11eb_b858_525400842e71row3_col10,#T_0f047226_108e_11eb_b858_525400842e71row10_col3,#T_0f047226_108e_11eb_b858_525400842e71row11_col1,#T_0f047226_108e_11eb_b858_525400842e71row12_col1{\n",
        "            background-color:  #8fb4d6;\n",
        "            color:  #000000;\n",
        "        }#T_0f047226_108e_11eb_b858_525400842e71row1_col14,#T_0f047226_108e_11eb_b858_525400842e71row14_col1{\n",
        "            background-color:  #e1dfed;\n",
        "            color:  #000000;\n",
        "        }#T_0f047226_108e_11eb_b858_525400842e71row1_col15,#T_0f047226_108e_11eb_b858_525400842e71row2_col4,#T_0f047226_108e_11eb_b858_525400842e71row4_col2,#T_0f047226_108e_11eb_b858_525400842e71row15_col1{\n",
        "            background-color:  #b7c5df;\n",
        "            color:  #000000;\n",
        "        }#T_0f047226_108e_11eb_b858_525400842e71row1_col16,#T_0f047226_108e_11eb_b858_525400842e71row16_col1{\n",
        "            background-color:  #b8c6e0;\n",
        "            color:  #000000;\n",
        "        }#T_0f047226_108e_11eb_b858_525400842e71row2_col3,#T_0f047226_108e_11eb_b858_525400842e71row3_col2,#T_0f047226_108e_11eb_b858_525400842e71row7_col12,#T_0f047226_108e_11eb_b858_525400842e71row12_col7{\n",
        "            background-color:  #056dac;\n",
        "            color:  #f1f1f1;\n",
        "        }#T_0f047226_108e_11eb_b858_525400842e71row2_col5,#T_0f047226_108e_11eb_b858_525400842e71row5_col2{\n",
        "            background-color:  #d4d4e8;\n",
        "            color:  #000000;\n",
        "        }#T_0f047226_108e_11eb_b858_525400842e71row2_col7,#T_0f047226_108e_11eb_b858_525400842e71row7_col2{\n",
        "            background-color:  #d3d4e7;\n",
        "            color:  #000000;\n",
        "        }#T_0f047226_108e_11eb_b858_525400842e71row2_col10,#T_0f047226_108e_11eb_b858_525400842e71row4_col5,#T_0f047226_108e_11eb_b858_525400842e71row4_col11,#T_0f047226_108e_11eb_b858_525400842e71row5_col4,#T_0f047226_108e_11eb_b858_525400842e71row10_col2,#T_0f047226_108e_11eb_b858_525400842e71row10_col15,#T_0f047226_108e_11eb_b858_525400842e71row11_col4,#T_0f047226_108e_11eb_b858_525400842e71row15_col10{\n",
        "            background-color:  #76aad0;\n",
        "            color:  #000000;\n",
        "        }#T_0f047226_108e_11eb_b858_525400842e71row2_col11,#T_0f047226_108e_11eb_b858_525400842e71row11_col2,#T_0f047226_108e_11eb_b858_525400842e71row11_col13,#T_0f047226_108e_11eb_b858_525400842e71row13_col11{\n",
        "            background-color:  #8cb3d5;\n",
        "            color:  #000000;\n",
        "        }#T_0f047226_108e_11eb_b858_525400842e71row2_col12,#T_0f047226_108e_11eb_b858_525400842e71row4_col9,#T_0f047226_108e_11eb_b858_525400842e71row9_col4,#T_0f047226_108e_11eb_b858_525400842e71row12_col2{\n",
        "            background-color:  #88b1d4;\n",
        "            color:  #000000;\n",
        "        }#T_0f047226_108e_11eb_b858_525400842e71row2_col13,#T_0f047226_108e_11eb_b858_525400842e71row13_col2{\n",
        "            background-color:  #f4edf6;\n",
        "            color:  #000000;\n",
        "        }#T_0f047226_108e_11eb_b858_525400842e71row2_col15,#T_0f047226_108e_11eb_b858_525400842e71row3_col9,#T_0f047226_108e_11eb_b858_525400842e71row9_col3,#T_0f047226_108e_11eb_b858_525400842e71row15_col2{\n",
        "            background-color:  #c1cae2;\n",
        "            color:  #000000;\n",
        "        }#T_0f047226_108e_11eb_b858_525400842e71row2_col16,#T_0f047226_108e_11eb_b858_525400842e71row9_col14,#T_0f047226_108e_11eb_b858_525400842e71row14_col9,#T_0f047226_108e_11eb_b858_525400842e71row16_col2{\n",
        "            background-color:  #c0c9e2;\n",
        "            color:  #000000;\n",
        "        }#T_0f047226_108e_11eb_b858_525400842e71row3_col4,#T_0f047226_108e_11eb_b858_525400842e71row4_col3,#T_0f047226_108e_11eb_b858_525400842e71row12_col15,#T_0f047226_108e_11eb_b858_525400842e71row15_col12{\n",
        "            background-color:  #8eb3d5;\n",
        "            color:  #000000;\n",
        "        }#T_0f047226_108e_11eb_b858_525400842e71row3_col5,#T_0f047226_108e_11eb_b858_525400842e71row5_col3,#T_0f047226_108e_11eb_b858_525400842e71row9_col15,#T_0f047226_108e_11eb_b858_525400842e71row15_col9{\n",
        "            background-color:  #d6d6e9;\n",
        "            color:  #000000;\n",
        "        }#T_0f047226_108e_11eb_b858_525400842e71row3_col6,#T_0f047226_108e_11eb_b858_525400842e71row6_col3{\n",
        "            background-color:  #dbdaeb;\n",
        "            color:  #000000;\n",
        "        }#T_0f047226_108e_11eb_b858_525400842e71row3_col8,#T_0f047226_108e_11eb_b858_525400842e71row8_col3{\n",
        "            background-color:  #c4cbe3;\n",
        "            color:  #000000;\n",
        "        }#T_0f047226_108e_11eb_b858_525400842e71row3_col11,#T_0f047226_108e_11eb_b858_525400842e71row11_col3{\n",
        "            background-color:  #93b5d6;\n",
        "            color:  #000000;\n",
        "        }#T_0f047226_108e_11eb_b858_525400842e71row3_col12,#T_0f047226_108e_11eb_b858_525400842e71row12_col3{\n",
        "            background-color:  #a4bcda;\n",
        "            color:  #000000;\n",
        "        }#T_0f047226_108e_11eb_b858_525400842e71row3_col13,#T_0f047226_108e_11eb_b858_525400842e71row13_col3{\n",
        "            background-color:  #fdf5fa;\n",
        "            color:  #000000;\n",
        "        }#T_0f047226_108e_11eb_b858_525400842e71row3_col14,#T_0f047226_108e_11eb_b858_525400842e71row14_col3{\n",
        "            background-color:  #fff7fb;\n",
        "            color:  #000000;\n",
        "        }#T_0f047226_108e_11eb_b858_525400842e71row3_col15,#T_0f047226_108e_11eb_b858_525400842e71row15_col3{\n",
        "            background-color:  #f0eaf4;\n",
        "            color:  #000000;\n",
        "        }#T_0f047226_108e_11eb_b858_525400842e71row3_col16,#T_0f047226_108e_11eb_b858_525400842e71row16_col3{\n",
        "            background-color:  #c2cbe2;\n",
        "            color:  #000000;\n",
        "        }#T_0f047226_108e_11eb_b858_525400842e71row4_col6,#T_0f047226_108e_11eb_b858_525400842e71row6_col4{\n",
        "            background-color:  #a5bddb;\n",
        "            color:  #000000;\n",
        "        }#T_0f047226_108e_11eb_b858_525400842e71row4_col8,#T_0f047226_108e_11eb_b858_525400842e71row8_col4{\n",
        "            background-color:  #a2bcda;\n",
        "            color:  #000000;\n",
        "        }#T_0f047226_108e_11eb_b858_525400842e71row4_col10,#T_0f047226_108e_11eb_b858_525400842e71row10_col4{\n",
        "            background-color:  #84b0d3;\n",
        "            color:  #000000;\n",
        "        }#T_0f047226_108e_11eb_b858_525400842e71row4_col12,#T_0f047226_108e_11eb_b858_525400842e71row12_col4{\n",
        "            background-color:  #a8bedc;\n",
        "            color:  #000000;\n",
        "        }#T_0f047226_108e_11eb_b858_525400842e71row4_col13,#T_0f047226_108e_11eb_b858_525400842e71row13_col4{\n",
        "            background-color:  #bcc7e1;\n",
        "            color:  #000000;\n",
        "        }#T_0f047226_108e_11eb_b858_525400842e71row4_col14,#T_0f047226_108e_11eb_b858_525400842e71row14_col4{\n",
        "            background-color:  #d2d2e7;\n",
        "            color:  #000000;\n",
        "        }#T_0f047226_108e_11eb_b858_525400842e71row4_col15,#T_0f047226_108e_11eb_b858_525400842e71row15_col4{\n",
        "            background-color:  #b1c2de;\n",
        "            color:  #000000;\n",
        "        }#T_0f047226_108e_11eb_b858_525400842e71row4_col16,#T_0f047226_108e_11eb_b858_525400842e71row11_col14,#T_0f047226_108e_11eb_b858_525400842e71row14_col11,#T_0f047226_108e_11eb_b858_525400842e71row16_col4{\n",
        "            background-color:  #7dacd1;\n",
        "            color:  #000000;\n",
        "        }#T_0f047226_108e_11eb_b858_525400842e71row5_col6,#T_0f047226_108e_11eb_b858_525400842e71row6_col5{\n",
        "            background-color:  #04639b;\n",
        "            color:  #f1f1f1;\n",
        "        }#T_0f047226_108e_11eb_b858_525400842e71row5_col7,#T_0f047226_108e_11eb_b858_525400842e71row6_col13,#T_0f047226_108e_11eb_b858_525400842e71row7_col5,#T_0f047226_108e_11eb_b858_525400842e71row13_col6{\n",
        "            background-color:  #0567a1;\n",
        "            color:  #f1f1f1;\n",
        "        }#T_0f047226_108e_11eb_b858_525400842e71row5_col8,#T_0f047226_108e_11eb_b858_525400842e71row8_col5,#T_0f047226_108e_11eb_b858_525400842e71row9_col10,#T_0f047226_108e_11eb_b858_525400842e71row10_col9{\n",
        "            background-color:  #1278b4;\n",
        "            color:  #f1f1f1;\n",
        "        }#T_0f047226_108e_11eb_b858_525400842e71row5_col9,#T_0f047226_108e_11eb_b858_525400842e71row9_col5,#T_0f047226_108e_11eb_b858_525400842e71row13_col14,#T_0f047226_108e_11eb_b858_525400842e71row14_col13{\n",
        "            background-color:  #1e80b8;\n",
        "            color:  #000000;\n",
        "        }#T_0f047226_108e_11eb_b858_525400842e71row5_col10,#T_0f047226_108e_11eb_b858_525400842e71row6_col10,#T_0f047226_108e_11eb_b858_525400842e71row8_col10,#T_0f047226_108e_11eb_b858_525400842e71row9_col11,#T_0f047226_108e_11eb_b858_525400842e71row10_col5,#T_0f047226_108e_11eb_b858_525400842e71row10_col6,#T_0f047226_108e_11eb_b858_525400842e71row10_col8,#T_0f047226_108e_11eb_b858_525400842e71row11_col9{\n",
        "            background-color:  #0771b1;\n",
        "            color:  #f1f1f1;\n",
        "        }#T_0f047226_108e_11eb_b858_525400842e71row5_col11,#T_0f047226_108e_11eb_b858_525400842e71row11_col5{\n",
        "            background-color:  #2182b9;\n",
        "            color:  #000000;\n",
        "        }#T_0f047226_108e_11eb_b858_525400842e71row5_col12,#T_0f047226_108e_11eb_b858_525400842e71row6_col12,#T_0f047226_108e_11eb_b858_525400842e71row12_col5,#T_0f047226_108e_11eb_b858_525400842e71row12_col6{\n",
        "            background-color:  #4897c4;\n",
        "            color:  #000000;\n",
        "        }#T_0f047226_108e_11eb_b858_525400842e71row5_col13,#T_0f047226_108e_11eb_b858_525400842e71row13_col5{\n",
        "            background-color:  #157ab5;\n",
        "            color:  #000000;\n",
        "        }#T_0f047226_108e_11eb_b858_525400842e71row5_col14,#T_0f047226_108e_11eb_b858_525400842e71row10_col13,#T_0f047226_108e_11eb_b858_525400842e71row13_col10,#T_0f047226_108e_11eb_b858_525400842e71row14_col5{\n",
        "            background-color:  #5ea0ca;\n",
        "            color:  #000000;\n",
        "        }#T_0f047226_108e_11eb_b858_525400842e71row5_col16,#T_0f047226_108e_11eb_b858_525400842e71row16_col5{\n",
        "            background-color:  #045b8e;\n",
        "            color:  #f1f1f1;\n",
        "        }#T_0f047226_108e_11eb_b858_525400842e71row6_col8,#T_0f047226_108e_11eb_b858_525400842e71row8_col6{\n",
        "            background-color:  #0c74b2;\n",
        "            color:  #f1f1f1;\n",
        "        }#T_0f047226_108e_11eb_b858_525400842e71row6_col9,#T_0f047226_108e_11eb_b858_525400842e71row7_col10,#T_0f047226_108e_11eb_b858_525400842e71row9_col6,#T_0f047226_108e_11eb_b858_525400842e71row10_col7{\n",
        "            background-color:  #2484ba;\n",
        "            color:  #000000;\n",
        "        }#T_0f047226_108e_11eb_b858_525400842e71row6_col11,#T_0f047226_108e_11eb_b858_525400842e71row11_col6{\n",
        "            background-color:  #3d93c2;\n",
        "            color:  #000000;\n",
        "        }#T_0f047226_108e_11eb_b858_525400842e71row6_col14,#T_0f047226_108e_11eb_b858_525400842e71row14_col6{\n",
        "            background-color:  #549cc7;\n",
        "            color:  #000000;\n",
        "        }#T_0f047226_108e_11eb_b858_525400842e71row6_col15,#T_0f047226_108e_11eb_b858_525400842e71row15_col6{\n",
        "            background-color:  #4e9ac6;\n",
        "            color:  #000000;\n",
        "        }#T_0f047226_108e_11eb_b858_525400842e71row6_col16,#T_0f047226_108e_11eb_b858_525400842e71row16_col6{\n",
        "            background-color:  #04598c;\n",
        "            color:  #f1f1f1;\n",
        "        }#T_0f047226_108e_11eb_b858_525400842e71row7_col8,#T_0f047226_108e_11eb_b858_525400842e71row8_col7{\n",
        "            background-color:  #056aa6;\n",
        "            color:  #f1f1f1;\n",
        "        }#T_0f047226_108e_11eb_b858_525400842e71row7_col9,#T_0f047226_108e_11eb_b858_525400842e71row9_col7{\n",
        "            background-color:  #167bb6;\n",
        "            color:  #000000;\n",
        "        }#T_0f047226_108e_11eb_b858_525400842e71row7_col11,#T_0f047226_108e_11eb_b858_525400842e71row9_col12,#T_0f047226_108e_11eb_b858_525400842e71row11_col7,#T_0f047226_108e_11eb_b858_525400842e71row12_col9,#T_0f047226_108e_11eb_b858_525400842e71row13_col15,#T_0f047226_108e_11eb_b858_525400842e71row15_col13{\n",
        "            background-color:  #197db7;\n",
        "            color:  #000000;\n",
        "        }#T_0f047226_108e_11eb_b858_525400842e71row7_col13,#T_0f047226_108e_11eb_b858_525400842e71row13_col7{\n",
        "            background-color:  #0570b0;\n",
        "            color:  #f1f1f1;\n",
        "        }#T_0f047226_108e_11eb_b858_525400842e71row7_col14,#T_0f047226_108e_11eb_b858_525400842e71row7_col15,#T_0f047226_108e_11eb_b858_525400842e71row14_col7,#T_0f047226_108e_11eb_b858_525400842e71row15_col7{\n",
        "            background-color:  #6da6cd;\n",
        "            color:  #000000;\n",
        "        }#T_0f047226_108e_11eb_b858_525400842e71row7_col16,#T_0f047226_108e_11eb_b858_525400842e71row16_col7{\n",
        "            background-color:  #045a8d;\n",
        "            color:  #f1f1f1;\n",
        "        }#T_0f047226_108e_11eb_b858_525400842e71row8_col9,#T_0f047226_108e_11eb_b858_525400842e71row9_col8{\n",
        "            background-color:  #04629a;\n",
        "            color:  #f1f1f1;\n",
        "        }#T_0f047226_108e_11eb_b858_525400842e71row8_col11,#T_0f047226_108e_11eb_b858_525400842e71row11_col8{\n",
        "            background-color:  #056ba9;\n",
        "            color:  #f1f1f1;\n",
        "        }#T_0f047226_108e_11eb_b858_525400842e71row8_col12,#T_0f047226_108e_11eb_b858_525400842e71row12_col8{\n",
        "            background-color:  #0d75b3;\n",
        "            color:  #f1f1f1;\n",
        "        }#T_0f047226_108e_11eb_b858_525400842e71row8_col13,#T_0f047226_108e_11eb_b858_525400842e71row13_col8,#T_0f047226_108e_11eb_b858_525400842e71row14_col15,#T_0f047226_108e_11eb_b858_525400842e71row15_col14{\n",
        "            background-color:  #187cb6;\n",
        "            color:  #000000;\n",
        "        }#T_0f047226_108e_11eb_b858_525400842e71row8_col14,#T_0f047226_108e_11eb_b858_525400842e71row14_col8,#T_0f047226_108e_11eb_b858_525400842e71row14_col16,#T_0f047226_108e_11eb_b858_525400842e71row16_col14{\n",
        "            background-color:  #7bacd1;\n",
        "            color:  #000000;\n",
        "        }#T_0f047226_108e_11eb_b858_525400842e71row8_col15,#T_0f047226_108e_11eb_b858_525400842e71row12_col14,#T_0f047226_108e_11eb_b858_525400842e71row14_col12,#T_0f047226_108e_11eb_b858_525400842e71row15_col8{\n",
        "            background-color:  #99b8d8;\n",
        "            color:  #000000;\n",
        "        }#T_0f047226_108e_11eb_b858_525400842e71row8_col16,#T_0f047226_108e_11eb_b858_525400842e71row16_col8{\n",
        "            background-color:  #045483;\n",
        "            color:  #f1f1f1;\n",
        "        }#T_0f047226_108e_11eb_b858_525400842e71row9_col13,#T_0f047226_108e_11eb_b858_525400842e71row13_col9,#T_0f047226_108e_11eb_b858_525400842e71row15_col16,#T_0f047226_108e_11eb_b858_525400842e71row16_col15{\n",
        "            background-color:  #69a5cc;\n",
        "            color:  #000000;\n",
        "        }#T_0f047226_108e_11eb_b858_525400842e71row9_col16,#T_0f047226_108e_11eb_b858_525400842e71row16_col9{\n",
        "            background-color:  #046198;\n",
        "            color:  #f1f1f1;\n",
        "        }#T_0f047226_108e_11eb_b858_525400842e71row10_col11,#T_0f047226_108e_11eb_b858_525400842e71row11_col10{\n",
        "            background-color:  #04649e;\n",
        "            color:  #f1f1f1;\n",
        "        }#T_0f047226_108e_11eb_b858_525400842e71row10_col12,#T_0f047226_108e_11eb_b858_525400842e71row12_col10{\n",
        "            background-color:  #348ebf;\n",
        "            color:  #000000;\n",
        "        }#T_0f047226_108e_11eb_b858_525400842e71row10_col14,#T_0f047226_108e_11eb_b858_525400842e71row14_col10{\n",
        "            background-color:  #83afd3;\n",
        "            color:  #000000;\n",
        "        }#T_0f047226_108e_11eb_b858_525400842e71row10_col16,#T_0f047226_108e_11eb_b858_525400842e71row16_col10{\n",
        "            background-color:  #045e94;\n",
        "            color:  #f1f1f1;\n",
        "        }#T_0f047226_108e_11eb_b858_525400842e71row11_col12,#T_0f047226_108e_11eb_b858_525400842e71row12_col11{\n",
        "            background-color:  #4c99c5;\n",
        "            color:  #000000;\n",
        "        }#T_0f047226_108e_11eb_b858_525400842e71row11_col16,#T_0f047226_108e_11eb_b858_525400842e71row12_col16,#T_0f047226_108e_11eb_b858_525400842e71row16_col11,#T_0f047226_108e_11eb_b858_525400842e71row16_col12{\n",
        "            background-color:  #056ba7;\n",
        "            color:  #f1f1f1;\n",
        "        }#T_0f047226_108e_11eb_b858_525400842e71row12_col13,#T_0f047226_108e_11eb_b858_525400842e71row13_col12{\n",
        "            background-color:  #3991c1;\n",
        "            color:  #000000;\n",
        "        }#T_0f047226_108e_11eb_b858_525400842e71row13_col16,#T_0f047226_108e_11eb_b858_525400842e71row16_col13{\n",
        "            background-color:  #0569a4;\n",
        "            color:  #f1f1f1;\n",
        "        }</style><table id=\"T_0f047226_108e_11eb_b858_525400842e71\" ><thead>    <tr>        <th class=\"blank level0\" ></th>        <th class=\"col_heading level0 col0\" >Rt</th>        <th class=\"col_heading level0 col1\" >theta</th>        <th class=\"col_heading level0 col2\" >kappa</th>        <th class=\"col_heading level0 col3\" >rho</th>        <th class=\"col_heading level0 col4\" >sigma</th>        <th class=\"col_heading level0 col5\" >School_closing</th>        <th class=\"col_heading level0 col6\" >Workplace_closing</th>        <th class=\"col_heading level0 col7\" >Cancel_events</th>        <th class=\"col_heading level0 col8\" >Gatherings_restrictions</th>        <th class=\"col_heading level0 col9\" >Transport_closing</th>        <th class=\"col_heading level0 col10\" >Stay_home_restrictions</th>        <th class=\"col_heading level0 col11\" >Internal_movement_restrictions</th>        <th class=\"col_heading level0 col12\" >International_movement_restrictions</th>        <th class=\"col_heading level0 col13\" >Information_campaigns</th>        <th class=\"col_heading level0 col14\" >Testing_policy</th>        <th class=\"col_heading level0 col15\" >Contact_tracing</th>        <th class=\"col_heading level0 col16\" >Stringency_index</th>    </tr></thead><tbody>\n",
        "                <tr>\n",
        "                        <th id=\"T_0f047226_108e_11eb_b858_525400842e71level0_row0\" class=\"row_heading level0 row0\" >Rt</th>\n",
        "                        <td id=\"T_0f047226_108e_11eb_b858_525400842e71row0_col0\" class=\"data row0 col0\" >1.000000</td>\n",
        "                        <td id=\"T_0f047226_108e_11eb_b858_525400842e71row0_col1\" class=\"data row0 col1\" >-0.181092</td>\n",
        "                        <td id=\"T_0f047226_108e_11eb_b858_525400842e71row0_col2\" class=\"data row0 col2\" >-0.143246</td>\n",
        "                        <td id=\"T_0f047226_108e_11eb_b858_525400842e71row0_col3\" class=\"data row0 col3\" >0.277360</td>\n",
        "                        <td id=\"T_0f047226_108e_11eb_b858_525400842e71row0_col4\" class=\"data row0 col4\" >-0.269445</td>\n",
        "                        <td id=\"T_0f047226_108e_11eb_b858_525400842e71row0_col5\" class=\"data row0 col5\" >-0.353538</td>\n",
        "                        <td id=\"T_0f047226_108e_11eb_b858_525400842e71row0_col6\" class=\"data row0 col6\" >-0.303678</td>\n",
        "                        <td id=\"T_0f047226_108e_11eb_b858_525400842e71row0_col7\" class=\"data row0 col7\" >-0.241619</td>\n",
        "                        <td id=\"T_0f047226_108e_11eb_b858_525400842e71row0_col8\" class=\"data row0 col8\" >-0.212246</td>\n",
        "                        <td id=\"T_0f047226_108e_11eb_b858_525400842e71row0_col9\" class=\"data row0 col9\" >-0.256910</td>\n",
        "                        <td id=\"T_0f047226_108e_11eb_b858_525400842e71row0_col10\" class=\"data row0 col10\" >-0.271932</td>\n",
        "                        <td id=\"T_0f047226_108e_11eb_b858_525400842e71row0_col11\" class=\"data row0 col11\" >-0.376461</td>\n",
        "                        <td id=\"T_0f047226_108e_11eb_b858_525400842e71row0_col12\" class=\"data row0 col12\" >-0.140533</td>\n",
        "                        <td id=\"T_0f047226_108e_11eb_b858_525400842e71row0_col13\" class=\"data row0 col13\" >-0.085575</td>\n",
        "                        <td id=\"T_0f047226_108e_11eb_b858_525400842e71row0_col14\" class=\"data row0 col14\" >-0.189259</td>\n",
        "                        <td id=\"T_0f047226_108e_11eb_b858_525400842e71row0_col15\" class=\"data row0 col15\" >-0.226720</td>\n",
        "                        <td id=\"T_0f047226_108e_11eb_b858_525400842e71row0_col16\" class=\"data row0 col16\" >-0.281844</td>\n",
        "            </tr>\n",
        "            <tr>\n",
        "                        <th id=\"T_0f047226_108e_11eb_b858_525400842e71level0_row1\" class=\"row_heading level0 row1\" >theta</th>\n",
        "                        <td id=\"T_0f047226_108e_11eb_b858_525400842e71row1_col0\" class=\"data row1 col0\" >-0.181092</td>\n",
        "                        <td id=\"T_0f047226_108e_11eb_b858_525400842e71row1_col1\" class=\"data row1 col1\" >1.000000</td>\n",
        "                        <td id=\"T_0f047226_108e_11eb_b858_525400842e71row1_col2\" class=\"data row1 col2\" >0.968994</td>\n",
        "                        <td id=\"T_0f047226_108e_11eb_b858_525400842e71row1_col3\" class=\"data row1 col3\" >0.627056</td>\n",
        "                        <td id=\"T_0f047226_108e_11eb_b858_525400842e71row1_col4\" class=\"data row1 col4\" >0.078429</td>\n",
        "                        <td id=\"T_0f047226_108e_11eb_b858_525400842e71row1_col5\" class=\"data row1 col5\" >-0.068547</td>\n",
        "                        <td id=\"T_0f047226_108e_11eb_b858_525400842e71row1_col6\" class=\"data row1 col6\" >-0.045667</td>\n",
        "                        <td id=\"T_0f047226_108e_11eb_b858_525400842e71row1_col7\" class=\"data row1 col7\" >-0.098095</td>\n",
        "                        <td id=\"T_0f047226_108e_11eb_b858_525400842e71row1_col8\" class=\"data row1 col8\" >-0.069546</td>\n",
        "                        <td id=\"T_0f047226_108e_11eb_b858_525400842e71row1_col9\" class=\"data row1 col9\" >-0.061038</td>\n",
        "                        <td id=\"T_0f047226_108e_11eb_b858_525400842e71row1_col10\" class=\"data row1 col10\" >0.282131</td>\n",
        "                        <td id=\"T_0f047226_108e_11eb_b858_525400842e71row1_col11\" class=\"data row1 col11\" >0.178431</td>\n",
        "                        <td id=\"T_0f047226_108e_11eb_b858_525400842e71row1_col12\" class=\"data row1 col12\" >0.181425</td>\n",
        "                        <td id=\"T_0f047226_108e_11eb_b858_525400842e71row1_col13\" class=\"data row1 col13\" >-0.304346</td>\n",
        "                        <td id=\"T_0f047226_108e_11eb_b858_525400842e71row1_col14\" class=\"data row1 col14\" >-0.195935</td>\n",
        "                        <td id=\"T_0f047226_108e_11eb_b858_525400842e71row1_col15\" class=\"data row1 col15\" >0.024273</td>\n",
        "                        <td id=\"T_0f047226_108e_11eb_b858_525400842e71row1_col16\" class=\"data row1 col16\" >0.018489</td>\n",
        "            </tr>\n",
        "            <tr>\n",
        "                        <th id=\"T_0f047226_108e_11eb_b858_525400842e71level0_row2\" class=\"row_heading level0 row2\" >kappa</th>\n",
        "                        <td id=\"T_0f047226_108e_11eb_b858_525400842e71row2_col0\" class=\"data row2 col0\" >-0.143246</td>\n",
        "                        <td id=\"T_0f047226_108e_11eb_b858_525400842e71row2_col1\" class=\"data row2 col1\" >0.968994</td>\n",
        "                        <td id=\"T_0f047226_108e_11eb_b858_525400842e71row2_col2\" class=\"data row2 col2\" >1.000000</td>\n",
        "                        <td id=\"T_0f047226_108e_11eb_b858_525400842e71row2_col3\" class=\"data row2 col3\" >0.658844</td>\n",
        "                        <td id=\"T_0f047226_108e_11eb_b858_525400842e71row2_col4\" class=\"data row2 col4\" >0.026301</td>\n",
        "                        <td id=\"T_0f047226_108e_11eb_b858_525400842e71row2_col5\" class=\"data row2 col5\" >-0.109046</td>\n",
        "                        <td id=\"T_0f047226_108e_11eb_b858_525400842e71row2_col6\" class=\"data row2 col6\" >-0.095418</td>\n",
        "                        <td id=\"T_0f047226_108e_11eb_b858_525400842e71row2_col7\" class=\"data row2 col7\" >-0.103541</td>\n",
        "                        <td id=\"T_0f047226_108e_11eb_b858_525400842e71row2_col8\" class=\"data row2 col8\" >-0.069244</td>\n",
        "                        <td id=\"T_0f047226_108e_11eb_b858_525400842e71row2_col9\" class=\"data row2 col9\" >-0.064085</td>\n",
        "                        <td id=\"T_0f047226_108e_11eb_b858_525400842e71row2_col10\" class=\"data row2 col10\" >0.267512</td>\n",
        "                        <td id=\"T_0f047226_108e_11eb_b858_525400842e71row2_col11\" class=\"data row2 col11\" >0.192391</td>\n",
        "                        <td id=\"T_0f047226_108e_11eb_b858_525400842e71row2_col12\" class=\"data row2 col12\" >0.206334</td>\n",
        "                        <td id=\"T_0f047226_108e_11eb_b858_525400842e71row2_col13\" class=\"data row2 col13\" >-0.337363</td>\n",
        "                        <td id=\"T_0f047226_108e_11eb_b858_525400842e71row2_col14\" class=\"data row2 col14\" >-0.183581</td>\n",
        "                        <td id=\"T_0f047226_108e_11eb_b858_525400842e71row2_col15\" class=\"data row2 col15\" >-0.016549</td>\n",
        "                        <td id=\"T_0f047226_108e_11eb_b858_525400842e71row2_col16\" class=\"data row2 col16\" >-0.015382</td>\n",
        "            </tr>\n",
        "            <tr>\n",
        "                        <th id=\"T_0f047226_108e_11eb_b858_525400842e71level0_row3\" class=\"row_heading level0 row3\" >rho</th>\n",
        "                        <td id=\"T_0f047226_108e_11eb_b858_525400842e71row3_col0\" class=\"data row3 col0\" >0.277360</td>\n",
        "                        <td id=\"T_0f047226_108e_11eb_b858_525400842e71row3_col1\" class=\"data row3 col1\" >0.627056</td>\n",
        "                        <td id=\"T_0f047226_108e_11eb_b858_525400842e71row3_col2\" class=\"data row3 col2\" >0.658844</td>\n",
        "                        <td id=\"T_0f047226_108e_11eb_b858_525400842e71row3_col3\" class=\"data row3 col3\" >1.000000</td>\n",
        "                        <td id=\"T_0f047226_108e_11eb_b858_525400842e71row3_col4\" class=\"data row3 col4\" >0.183104</td>\n",
        "                        <td id=\"T_0f047226_108e_11eb_b858_525400842e71row3_col5\" class=\"data row3 col5\" >-0.119725</td>\n",
        "                        <td id=\"T_0f047226_108e_11eb_b858_525400842e71row3_col6\" class=\"data row3 col6\" >-0.151703</td>\n",
        "                        <td id=\"T_0f047226_108e_11eb_b858_525400842e71row3_col7\" class=\"data row3 col7\" >-0.062814</td>\n",
        "                        <td id=\"T_0f047226_108e_11eb_b858_525400842e71row3_col8\" class=\"data row3 col8\" >-0.028099</td>\n",
        "                        <td id=\"T_0f047226_108e_11eb_b858_525400842e71row3_col9\" class=\"data row3 col9\" >-0.020033</td>\n",
        "                        <td id=\"T_0f047226_108e_11eb_b858_525400842e71row3_col10\" class=\"data row3 col10\" >0.180370</td>\n",
        "                        <td id=\"T_0f047226_108e_11eb_b858_525400842e71row3_col11\" class=\"data row3 col11\" >0.168088</td>\n",
        "                        <td id=\"T_0f047226_108e_11eb_b858_525400842e71row3_col12\" class=\"data row3 col12\" >0.106644</td>\n",
        "                        <td id=\"T_0f047226_108e_11eb_b858_525400842e71row3_col13\" class=\"data row3 col13\" >-0.417332</td>\n",
        "                        <td id=\"T_0f047226_108e_11eb_b858_525400842e71row3_col14\" class=\"data row3 col14\" >-0.444617</td>\n",
        "                        <td id=\"T_0f047226_108e_11eb_b858_525400842e71row3_col15\" class=\"data row3 col15\" >-0.295608</td>\n",
        "                        <td id=\"T_0f047226_108e_11eb_b858_525400842e71row3_col16\" class=\"data row3 col16\" >-0.025701</td>\n",
        "            </tr>\n",
        "            <tr>\n",
        "                        <th id=\"T_0f047226_108e_11eb_b858_525400842e71level0_row4\" class=\"row_heading level0 row4\" >sigma</th>\n",
        "                        <td id=\"T_0f047226_108e_11eb_b858_525400842e71row4_col0\" class=\"data row4 col0\" >-0.269445</td>\n",
        "                        <td id=\"T_0f047226_108e_11eb_b858_525400842e71row4_col1\" class=\"data row4 col1\" >0.078429</td>\n",
        "                        <td id=\"T_0f047226_108e_11eb_b858_525400842e71row4_col2\" class=\"data row4 col2\" >0.026301</td>\n",
        "                        <td id=\"T_0f047226_108e_11eb_b858_525400842e71row4_col3\" class=\"data row4 col3\" >0.183104</td>\n",
        "                        <td id=\"T_0f047226_108e_11eb_b858_525400842e71row4_col4\" class=\"data row4 col4\" >1.000000</td>\n",
        "                        <td id=\"T_0f047226_108e_11eb_b858_525400842e71row4_col5\" class=\"data row4 col5\" >0.269771</td>\n",
        "                        <td id=\"T_0f047226_108e_11eb_b858_525400842e71row4_col6\" class=\"data row4 col6\" >0.100746</td>\n",
        "                        <td id=\"T_0f047226_108e_11eb_b858_525400842e71row4_col7\" class=\"data row4 col7\" >0.277179</td>\n",
        "                        <td id=\"T_0f047226_108e_11eb_b858_525400842e71row4_col8\" class=\"data row4 col8\" >0.112913</td>\n",
        "                        <td id=\"T_0f047226_108e_11eb_b858_525400842e71row4_col9\" class=\"data row4 col9\" >0.206652</td>\n",
        "                        <td id=\"T_0f047226_108e_11eb_b858_525400842e71row4_col10\" class=\"data row4 col10\" >0.217312</td>\n",
        "                        <td id=\"T_0f047226_108e_11eb_b858_525400842e71row4_col11\" class=\"data row4 col11\" >0.271653</td>\n",
        "                        <td id=\"T_0f047226_108e_11eb_b858_525400842e71row4_col12\" class=\"data row4 col12\" >0.090581</td>\n",
        "                        <td id=\"T_0f047226_108e_11eb_b858_525400842e71row4_col13\" class=\"data row4 col13\" >0.005414</td>\n",
        "                        <td id=\"T_0f047226_108e_11eb_b858_525400842e71row4_col14\" class=\"data row4 col14\" >-0.089547</td>\n",
        "                        <td id=\"T_0f047226_108e_11eb_b858_525400842e71row4_col15\" class=\"data row4 col15\" >0.049849</td>\n",
        "                        <td id=\"T_0f047226_108e_11eb_b858_525400842e71row4_col16\" class=\"data row4 col16\" >0.244531</td>\n",
        "            </tr>\n",
        "            <tr>\n",
        "                        <th id=\"T_0f047226_108e_11eb_b858_525400842e71level0_row5\" class=\"row_heading level0 row5\" >School_closing</th>\n",
        "                        <td id=\"T_0f047226_108e_11eb_b858_525400842e71row5_col0\" class=\"data row5 col0\" >-0.353538</td>\n",
        "                        <td id=\"T_0f047226_108e_11eb_b858_525400842e71row5_col1\" class=\"data row5 col1\" >-0.068547</td>\n",
        "                        <td id=\"T_0f047226_108e_11eb_b858_525400842e71row5_col2\" class=\"data row5 col2\" >-0.109046</td>\n",
        "                        <td id=\"T_0f047226_108e_11eb_b858_525400842e71row5_col3\" class=\"data row5 col3\" >-0.119725</td>\n",
        "                        <td id=\"T_0f047226_108e_11eb_b858_525400842e71row5_col4\" class=\"data row5 col4\" >0.269771</td>\n",
        "                        <td id=\"T_0f047226_108e_11eb_b858_525400842e71row5_col5\" class=\"data row5 col5\" >1.000000</td>\n",
        "                        <td id=\"T_0f047226_108e_11eb_b858_525400842e71row5_col6\" class=\"data row5 col6\" >0.742729</td>\n",
        "                        <td id=\"T_0f047226_108e_11eb_b858_525400842e71row5_col7\" class=\"data row5 col7\" >0.716899</td>\n",
        "                        <td id=\"T_0f047226_108e_11eb_b858_525400842e71row5_col8\" class=\"data row5 col8\" >0.593579</td>\n",
        "                        <td id=\"T_0f047226_108e_11eb_b858_525400842e71row5_col9\" class=\"data row5 col9\" >0.544858</td>\n",
        "                        <td id=\"T_0f047226_108e_11eb_b858_525400842e71row5_col10\" class=\"data row5 col10\" >0.630598</td>\n",
        "                        <td id=\"T_0f047226_108e_11eb_b858_525400842e71row5_col11\" class=\"data row5 col11\" >0.535815</td>\n",
        "                        <td id=\"T_0f047226_108e_11eb_b858_525400842e71row5_col12\" class=\"data row5 col12\" >0.407076</td>\n",
        "                        <td id=\"T_0f047226_108e_11eb_b858_525400842e71row5_col13\" class=\"data row5 col13\" >0.580760</td>\n",
        "                        <td id=\"T_0f047226_108e_11eb_b858_525400842e71row5_col14\" class=\"data row5 col14\" >0.341582</td>\n",
        "                        <td id=\"T_0f047226_108e_11eb_b858_525400842e71row5_col15\" class=\"data row5 col15\" >0.275210</td>\n",
        "                        <td id=\"T_0f047226_108e_11eb_b858_525400842e71row5_col16\" class=\"data row5 col16\" >0.809960</td>\n",
        "            </tr>\n",
        "            <tr>\n",
        "                        <th id=\"T_0f047226_108e_11eb_b858_525400842e71level0_row6\" class=\"row_heading level0 row6\" >Workplace_closing</th>\n",
        "                        <td id=\"T_0f047226_108e_11eb_b858_525400842e71row6_col0\" class=\"data row6 col0\" >-0.303678</td>\n",
        "                        <td id=\"T_0f047226_108e_11eb_b858_525400842e71row6_col1\" class=\"data row6 col1\" >-0.045667</td>\n",
        "                        <td id=\"T_0f047226_108e_11eb_b858_525400842e71row6_col2\" class=\"data row6 col2\" >-0.095418</td>\n",
        "                        <td id=\"T_0f047226_108e_11eb_b858_525400842e71row6_col3\" class=\"data row6 col3\" >-0.151703</td>\n",
        "                        <td id=\"T_0f047226_108e_11eb_b858_525400842e71row6_col4\" class=\"data row6 col4\" >0.100746</td>\n",
        "                        <td id=\"T_0f047226_108e_11eb_b858_525400842e71row6_col5\" class=\"data row6 col5\" >0.742729</td>\n",
        "                        <td id=\"T_0f047226_108e_11eb_b858_525400842e71row6_col6\" class=\"data row6 col6\" >1.000000</td>\n",
        "                        <td id=\"T_0f047226_108e_11eb_b858_525400842e71row6_col7\" class=\"data row6 col7\" >0.623493</td>\n",
        "                        <td id=\"T_0f047226_108e_11eb_b858_525400842e71row6_col8\" class=\"data row6 col8\" >0.610708</td>\n",
        "                        <td id=\"T_0f047226_108e_11eb_b858_525400842e71row6_col9\" class=\"data row6 col9\" >0.523063</td>\n",
        "                        <td id=\"T_0f047226_108e_11eb_b858_525400842e71row6_col10\" class=\"data row6 col10\" >0.631073</td>\n",
        "                        <td id=\"T_0f047226_108e_11eb_b858_525400842e71row6_col11\" class=\"data row6 col11\" >0.439313</td>\n",
        "                        <td id=\"T_0f047226_108e_11eb_b858_525400842e71row6_col12\" class=\"data row6 col12\" >0.402333</td>\n",
        "                        <td id=\"T_0f047226_108e_11eb_b858_525400842e71row6_col13\" class=\"data row6 col13\" >0.716651</td>\n",
        "                        <td id=\"T_0f047226_108e_11eb_b858_525400842e71row6_col14\" class=\"data row6 col14\" >0.368050</td>\n",
        "                        <td id=\"T_0f047226_108e_11eb_b858_525400842e71row6_col15\" class=\"data row6 col15\" >0.390197</td>\n",
        "                        <td id=\"T_0f047226_108e_11eb_b858_525400842e71row6_col16\" class=\"data row6 col16\" >0.820041</td>\n",
        "            </tr>\n",
        "            <tr>\n",
        "                        <th id=\"T_0f047226_108e_11eb_b858_525400842e71level0_row7\" class=\"row_heading level0 row7\" >Cancel_events</th>\n",
        "                        <td id=\"T_0f047226_108e_11eb_b858_525400842e71row7_col0\" class=\"data row7 col0\" >-0.241619</td>\n",
        "                        <td id=\"T_0f047226_108e_11eb_b858_525400842e71row7_col1\" class=\"data row7 col1\" >-0.098095</td>\n",
        "                        <td id=\"T_0f047226_108e_11eb_b858_525400842e71row7_col2\" class=\"data row7 col2\" >-0.103541</td>\n",
        "                        <td id=\"T_0f047226_108e_11eb_b858_525400842e71row7_col3\" class=\"data row7 col3\" >-0.062814</td>\n",
        "                        <td id=\"T_0f047226_108e_11eb_b858_525400842e71row7_col4\" class=\"data row7 col4\" >0.277179</td>\n",
        "                        <td id=\"T_0f047226_108e_11eb_b858_525400842e71row7_col5\" class=\"data row7 col5\" >0.716899</td>\n",
        "                        <td id=\"T_0f047226_108e_11eb_b858_525400842e71row7_col6\" class=\"data row7 col6\" >0.623493</td>\n",
        "                        <td id=\"T_0f047226_108e_11eb_b858_525400842e71row7_col7\" class=\"data row7 col7\" >1.000000</td>\n",
        "                        <td id=\"T_0f047226_108e_11eb_b858_525400842e71row7_col8\" class=\"data row7 col8\" >0.687303</td>\n",
        "                        <td id=\"T_0f047226_108e_11eb_b858_525400842e71row7_col9\" class=\"data row7 col9\" >0.572783</td>\n",
        "                        <td id=\"T_0f047226_108e_11eb_b858_525400842e71row7_col10\" class=\"data row7 col10\" >0.525553</td>\n",
        "                        <td id=\"T_0f047226_108e_11eb_b858_525400842e71row7_col11\" class=\"data row7 col11\" >0.562706</td>\n",
        "                        <td id=\"T_0f047226_108e_11eb_b858_525400842e71row7_col12\" class=\"data row7 col12\" >0.659154</td>\n",
        "                        <td id=\"T_0f047226_108e_11eb_b858_525400842e71row7_col13\" class=\"data row7 col13\" >0.635657</td>\n",
        "                        <td id=\"T_0f047226_108e_11eb_b858_525400842e71row7_col14\" class=\"data row7 col14\" >0.296193</td>\n",
        "                        <td id=\"T_0f047226_108e_11eb_b858_525400842e71row7_col15\" class=\"data row7 col15\" >0.298110</td>\n",
        "                        <td id=\"T_0f047226_108e_11eb_b858_525400842e71row7_col16\" class=\"data row7 col16\" >0.819245</td>\n",
        "            </tr>\n",
        "            <tr>\n",
        "                        <th id=\"T_0f047226_108e_11eb_b858_525400842e71level0_row8\" class=\"row_heading level0 row8\" >Gatherings_restrictions</th>\n",
        "                        <td id=\"T_0f047226_108e_11eb_b858_525400842e71row8_col0\" class=\"data row8 col0\" >-0.212246</td>\n",
        "                        <td id=\"T_0f047226_108e_11eb_b858_525400842e71row8_col1\" class=\"data row8 col1\" >-0.069546</td>\n",
        "                        <td id=\"T_0f047226_108e_11eb_b858_525400842e71row8_col2\" class=\"data row8 col2\" >-0.069244</td>\n",
        "                        <td id=\"T_0f047226_108e_11eb_b858_525400842e71row8_col3\" class=\"data row8 col3\" >-0.028099</td>\n",
        "                        <td id=\"T_0f047226_108e_11eb_b858_525400842e71row8_col4\" class=\"data row8 col4\" >0.112913</td>\n",
        "                        <td id=\"T_0f047226_108e_11eb_b858_525400842e71row8_col5\" class=\"data row8 col5\" >0.593579</td>\n",
        "                        <td id=\"T_0f047226_108e_11eb_b858_525400842e71row8_col6\" class=\"data row8 col6\" >0.610708</td>\n",
        "                        <td id=\"T_0f047226_108e_11eb_b858_525400842e71row8_col7\" class=\"data row8 col7\" >0.687303</td>\n",
        "                        <td id=\"T_0f047226_108e_11eb_b858_525400842e71row8_col8\" class=\"data row8 col8\" >1.000000</td>\n",
        "                        <td id=\"T_0f047226_108e_11eb_b858_525400842e71row8_col9\" class=\"data row8 col9\" >0.746877</td>\n",
        "                        <td id=\"T_0f047226_108e_11eb_b858_525400842e71row8_col10\" class=\"data row8 col10\" >0.633164</td>\n",
        "                        <td id=\"T_0f047226_108e_11eb_b858_525400842e71row8_col11\" class=\"data row8 col11\" >0.674765</td>\n",
        "                        <td id=\"T_0f047226_108e_11eb_b858_525400842e71row8_col12\" class=\"data row8 col12\" >0.607670</td>\n",
        "                        <td id=\"T_0f047226_108e_11eb_b858_525400842e71row8_col13\" class=\"data row8 col13\" >0.567191</td>\n",
        "                        <td id=\"T_0f047226_108e_11eb_b858_525400842e71row8_col14\" class=\"data row8 col14\" >0.249880</td>\n",
        "                        <td id=\"T_0f047226_108e_11eb_b858_525400842e71row8_col15\" class=\"data row8 col15\" >0.142854</td>\n",
        "                        <td id=\"T_0f047226_108e_11eb_b858_525400842e71row8_col16\" class=\"data row8 col16\" >0.850861</td>\n",
        "            </tr>\n",
        "            <tr>\n",
        "                        <th id=\"T_0f047226_108e_11eb_b858_525400842e71level0_row9\" class=\"row_heading level0 row9\" >Transport_closing</th>\n",
        "                        <td id=\"T_0f047226_108e_11eb_b858_525400842e71row9_col0\" class=\"data row9 col0\" >-0.256910</td>\n",
        "                        <td id=\"T_0f047226_108e_11eb_b858_525400842e71row9_col1\" class=\"data row9 col1\" >-0.061038</td>\n",
        "                        <td id=\"T_0f047226_108e_11eb_b858_525400842e71row9_col2\" class=\"data row9 col2\" >-0.064085</td>\n",
        "                        <td id=\"T_0f047226_108e_11eb_b858_525400842e71row9_col3\" class=\"data row9 col3\" >-0.020033</td>\n",
        "                        <td id=\"T_0f047226_108e_11eb_b858_525400842e71row9_col4\" class=\"data row9 col4\" >0.206652</td>\n",
        "                        <td id=\"T_0f047226_108e_11eb_b858_525400842e71row9_col5\" class=\"data row9 col5\" >0.544858</td>\n",
        "                        <td id=\"T_0f047226_108e_11eb_b858_525400842e71row9_col6\" class=\"data row9 col6\" >0.523063</td>\n",
        "                        <td id=\"T_0f047226_108e_11eb_b858_525400842e71row9_col7\" class=\"data row9 col7\" >0.572783</td>\n",
        "                        <td id=\"T_0f047226_108e_11eb_b858_525400842e71row9_col8\" class=\"data row9 col8\" >0.746877</td>\n",
        "                        <td id=\"T_0f047226_108e_11eb_b858_525400842e71row9_col9\" class=\"data row9 col9\" >1.000000</td>\n",
        "                        <td id=\"T_0f047226_108e_11eb_b858_525400842e71row9_col10\" class=\"data row9 col10\" >0.589188</td>\n",
        "                        <td id=\"T_0f047226_108e_11eb_b858_525400842e71row9_col11\" class=\"data row9 col11\" >0.630557</td>\n",
        "                        <td id=\"T_0f047226_108e_11eb_b858_525400842e71row9_col12\" class=\"data row9 col12\" >0.562206</td>\n",
        "                        <td id=\"T_0f047226_108e_11eb_b858_525400842e71row9_col13\" class=\"data row9 col13\" >0.311167</td>\n",
        "                        <td id=\"T_0f047226_108e_11eb_b858_525400842e71row9_col14\" class=\"data row9 col14\" >-0.014361</td>\n",
        "                        <td id=\"T_0f047226_108e_11eb_b858_525400842e71row9_col15\" class=\"data row9 col15\" >-0.120532</td>\n",
        "                        <td id=\"T_0f047226_108e_11eb_b858_525400842e71row9_col16\" class=\"data row9 col16\" >0.762206</td>\n",
        "            </tr>\n",
        "            <tr>\n",
        "                        <th id=\"T_0f047226_108e_11eb_b858_525400842e71level0_row10\" class=\"row_heading level0 row10\" >Stay_home_restrictions</th>\n",
        "                        <td id=\"T_0f047226_108e_11eb_b858_525400842e71row10_col0\" class=\"data row10 col0\" >-0.271932</td>\n",
        "                        <td id=\"T_0f047226_108e_11eb_b858_525400842e71row10_col1\" class=\"data row10 col1\" >0.282131</td>\n",
        "                        <td id=\"T_0f047226_108e_11eb_b858_525400842e71row10_col2\" class=\"data row10 col2\" >0.267512</td>\n",
        "                        <td id=\"T_0f047226_108e_11eb_b858_525400842e71row10_col3\" class=\"data row10 col3\" >0.180370</td>\n",
        "                        <td id=\"T_0f047226_108e_11eb_b858_525400842e71row10_col4\" class=\"data row10 col4\" >0.217312</td>\n",
        "                        <td id=\"T_0f047226_108e_11eb_b858_525400842e71row10_col5\" class=\"data row10 col5\" >0.630598</td>\n",
        "                        <td id=\"T_0f047226_108e_11eb_b858_525400842e71row10_col6\" class=\"data row10 col6\" >0.631073</td>\n",
        "                        <td id=\"T_0f047226_108e_11eb_b858_525400842e71row10_col7\" class=\"data row10 col7\" >0.525553</td>\n",
        "                        <td id=\"T_0f047226_108e_11eb_b858_525400842e71row10_col8\" class=\"data row10 col8\" >0.633164</td>\n",
        "                        <td id=\"T_0f047226_108e_11eb_b858_525400842e71row10_col9\" class=\"data row10 col9\" >0.589188</td>\n",
        "                        <td id=\"T_0f047226_108e_11eb_b858_525400842e71row10_col10\" class=\"data row10 col10\" >1.000000</td>\n",
        "                        <td id=\"T_0f047226_108e_11eb_b858_525400842e71row10_col11\" class=\"data row10 col11\" >0.732046</td>\n",
        "                        <td id=\"T_0f047226_108e_11eb_b858_525400842e71row10_col12\" class=\"data row10 col12\" >0.468226</td>\n",
        "                        <td id=\"T_0f047226_108e_11eb_b858_525400842e71row10_col13\" class=\"data row10 col13\" >0.342980</td>\n",
        "                        <td id=\"T_0f047226_108e_11eb_b858_525400842e71row10_col14\" class=\"data row10 col14\" >0.226389</td>\n",
        "                        <td id=\"T_0f047226_108e_11eb_b858_525400842e71row10_col15\" class=\"data row10 col15\" >0.270945</td>\n",
        "                        <td id=\"T_0f047226_108e_11eb_b858_525400842e71row10_col16\" class=\"data row10 col16\" >0.783533</td>\n",
        "            </tr>\n",
        "            <tr>\n",
        "                        <th id=\"T_0f047226_108e_11eb_b858_525400842e71level0_row11\" class=\"row_heading level0 row11\" >Internal_movement_restrictions</th>\n",
        "                        <td id=\"T_0f047226_108e_11eb_b858_525400842e71row11_col0\" class=\"data row11 col0\" >-0.376461</td>\n",
        "                        <td id=\"T_0f047226_108e_11eb_b858_525400842e71row11_col1\" class=\"data row11 col1\" >0.178431</td>\n",
        "                        <td id=\"T_0f047226_108e_11eb_b858_525400842e71row11_col2\" class=\"data row11 col2\" >0.192391</td>\n",
        "                        <td id=\"T_0f047226_108e_11eb_b858_525400842e71row11_col3\" class=\"data row11 col3\" >0.168088</td>\n",
        "                        <td id=\"T_0f047226_108e_11eb_b858_525400842e71row11_col4\" class=\"data row11 col4\" >0.271653</td>\n",
        "                        <td id=\"T_0f047226_108e_11eb_b858_525400842e71row11_col5\" class=\"data row11 col5\" >0.535815</td>\n",
        "                        <td id=\"T_0f047226_108e_11eb_b858_525400842e71row11_col6\" class=\"data row11 col6\" >0.439313</td>\n",
        "                        <td id=\"T_0f047226_108e_11eb_b858_525400842e71row11_col7\" class=\"data row11 col7\" >0.562706</td>\n",
        "                        <td id=\"T_0f047226_108e_11eb_b858_525400842e71row11_col8\" class=\"data row11 col8\" >0.674765</td>\n",
        "                        <td id=\"T_0f047226_108e_11eb_b858_525400842e71row11_col9\" class=\"data row11 col9\" >0.630557</td>\n",
        "                        <td id=\"T_0f047226_108e_11eb_b858_525400842e71row11_col10\" class=\"data row11 col10\" >0.732046</td>\n",
        "                        <td id=\"T_0f047226_108e_11eb_b858_525400842e71row11_col11\" class=\"data row11 col11\" >1.000000</td>\n",
        "                        <td id=\"T_0f047226_108e_11eb_b858_525400842e71row11_col12\" class=\"data row11 col12\" >0.392887</td>\n",
        "                        <td id=\"T_0f047226_108e_11eb_b858_525400842e71row11_col13\" class=\"data row11 col13\" >0.188195</td>\n",
        "                        <td id=\"T_0f047226_108e_11eb_b858_525400842e71row11_col14\" class=\"data row11 col14\" >0.246128</td>\n",
        "                        <td id=\"T_0f047226_108e_11eb_b858_525400842e71row11_col15\" class=\"data row11 col15\" >0.078375</td>\n",
        "                        <td id=\"T_0f047226_108e_11eb_b858_525400842e71row11_col16\" class=\"data row11 col16\" >0.680775</td>\n",
        "            </tr>\n",
        "            <tr>\n",
        "                        <th id=\"T_0f047226_108e_11eb_b858_525400842e71level0_row12\" class=\"row_heading level0 row12\" >International_movement_restrictions</th>\n",
        "                        <td id=\"T_0f047226_108e_11eb_b858_525400842e71row12_col0\" class=\"data row12 col0\" >-0.140533</td>\n",
        "                        <td id=\"T_0f047226_108e_11eb_b858_525400842e71row12_col1\" class=\"data row12 col1\" >0.181425</td>\n",
        "                        <td id=\"T_0f047226_108e_11eb_b858_525400842e71row12_col2\" class=\"data row12 col2\" >0.206334</td>\n",
        "                        <td id=\"T_0f047226_108e_11eb_b858_525400842e71row12_col3\" class=\"data row12 col3\" >0.106644</td>\n",
        "                        <td id=\"T_0f047226_108e_11eb_b858_525400842e71row12_col4\" class=\"data row12 col4\" >0.090581</td>\n",
        "                        <td id=\"T_0f047226_108e_11eb_b858_525400842e71row12_col5\" class=\"data row12 col5\" >0.407076</td>\n",
        "                        <td id=\"T_0f047226_108e_11eb_b858_525400842e71row12_col6\" class=\"data row12 col6\" >0.402333</td>\n",
        "                        <td id=\"T_0f047226_108e_11eb_b858_525400842e71row12_col7\" class=\"data row12 col7\" >0.659154</td>\n",
        "                        <td id=\"T_0f047226_108e_11eb_b858_525400842e71row12_col8\" class=\"data row12 col8\" >0.607670</td>\n",
        "                        <td id=\"T_0f047226_108e_11eb_b858_525400842e71row12_col9\" class=\"data row12 col9\" >0.562206</td>\n",
        "                        <td id=\"T_0f047226_108e_11eb_b858_525400842e71row12_col10\" class=\"data row12 col10\" >0.468226</td>\n",
        "                        <td id=\"T_0f047226_108e_11eb_b858_525400842e71row12_col11\" class=\"data row12 col11\" >0.392887</td>\n",
        "                        <td id=\"T_0f047226_108e_11eb_b858_525400842e71row12_col12\" class=\"data row12 col12\" >1.000000</td>\n",
        "                        <td id=\"T_0f047226_108e_11eb_b858_525400842e71row12_col13\" class=\"data row12 col13\" >0.451724</td>\n",
        "                        <td id=\"T_0f047226_108e_11eb_b858_525400842e71row12_col14\" class=\"data row12 col14\" >0.143961</td>\n",
        "                        <td id=\"T_0f047226_108e_11eb_b858_525400842e71row12_col15\" class=\"data row12 col15\" >0.186425</td>\n",
        "                        <td id=\"T_0f047226_108e_11eb_b858_525400842e71row12_col16\" class=\"data row12 col16\" >0.680415</td>\n",
        "            </tr>\n",
        "            <tr>\n",
        "                        <th id=\"T_0f047226_108e_11eb_b858_525400842e71level0_row13\" class=\"row_heading level0 row13\" >Information_campaigns</th>\n",
        "                        <td id=\"T_0f047226_108e_11eb_b858_525400842e71row13_col0\" class=\"data row13 col0\" >-0.085575</td>\n",
        "                        <td id=\"T_0f047226_108e_11eb_b858_525400842e71row13_col1\" class=\"data row13 col1\" >-0.304346</td>\n",
        "                        <td id=\"T_0f047226_108e_11eb_b858_525400842e71row13_col2\" class=\"data row13 col2\" >-0.337363</td>\n",
        "                        <td id=\"T_0f047226_108e_11eb_b858_525400842e71row13_col3\" class=\"data row13 col3\" >-0.417332</td>\n",
        "                        <td id=\"T_0f047226_108e_11eb_b858_525400842e71row13_col4\" class=\"data row13 col4\" >0.005414</td>\n",
        "                        <td id=\"T_0f047226_108e_11eb_b858_525400842e71row13_col5\" class=\"data row13 col5\" >0.580760</td>\n",
        "                        <td id=\"T_0f047226_108e_11eb_b858_525400842e71row13_col6\" class=\"data row13 col6\" >0.716651</td>\n",
        "                        <td id=\"T_0f047226_108e_11eb_b858_525400842e71row13_col7\" class=\"data row13 col7\" >0.635657</td>\n",
        "                        <td id=\"T_0f047226_108e_11eb_b858_525400842e71row13_col8\" class=\"data row13 col8\" >0.567191</td>\n",
        "                        <td id=\"T_0f047226_108e_11eb_b858_525400842e71row13_col9\" class=\"data row13 col9\" >0.311167</td>\n",
        "                        <td id=\"T_0f047226_108e_11eb_b858_525400842e71row13_col10\" class=\"data row13 col10\" >0.342980</td>\n",
        "                        <td id=\"T_0f047226_108e_11eb_b858_525400842e71row13_col11\" class=\"data row13 col11\" >0.188195</td>\n",
        "                        <td id=\"T_0f047226_108e_11eb_b858_525400842e71row13_col12\" class=\"data row13 col12\" >0.451724</td>\n",
        "                        <td id=\"T_0f047226_108e_11eb_b858_525400842e71row13_col13\" class=\"data row13 col13\" >1.000000</td>\n",
        "                        <td id=\"T_0f047226_108e_11eb_b858_525400842e71row13_col14\" class=\"data row13 col14\" >0.543673</td>\n",
        "                        <td id=\"T_0f047226_108e_11eb_b858_525400842e71row13_col15\" class=\"data row13 col15\" >0.562780</td>\n",
        "                        <td id=\"T_0f047226_108e_11eb_b858_525400842e71row13_col16\" class=\"data row13 col16\" >0.695782</td>\n",
        "            </tr>\n",
        "            <tr>\n",
        "                        <th id=\"T_0f047226_108e_11eb_b858_525400842e71level0_row14\" class=\"row_heading level0 row14\" >Testing_policy</th>\n",
        "                        <td id=\"T_0f047226_108e_11eb_b858_525400842e71row14_col0\" class=\"data row14 col0\" >-0.189259</td>\n",
        "                        <td id=\"T_0f047226_108e_11eb_b858_525400842e71row14_col1\" class=\"data row14 col1\" >-0.195935</td>\n",
        "                        <td id=\"T_0f047226_108e_11eb_b858_525400842e71row14_col2\" class=\"data row14 col2\" >-0.183581</td>\n",
        "                        <td id=\"T_0f047226_108e_11eb_b858_525400842e71row14_col3\" class=\"data row14 col3\" >-0.444617</td>\n",
        "                        <td id=\"T_0f047226_108e_11eb_b858_525400842e71row14_col4\" class=\"data row14 col4\" >-0.089547</td>\n",
        "                        <td id=\"T_0f047226_108e_11eb_b858_525400842e71row14_col5\" class=\"data row14 col5\" >0.341582</td>\n",
        "                        <td id=\"T_0f047226_108e_11eb_b858_525400842e71row14_col6\" class=\"data row14 col6\" >0.368050</td>\n",
        "                        <td id=\"T_0f047226_108e_11eb_b858_525400842e71row14_col7\" class=\"data row14 col7\" >0.296193</td>\n",
        "                        <td id=\"T_0f047226_108e_11eb_b858_525400842e71row14_col8\" class=\"data row14 col8\" >0.249880</td>\n",
        "                        <td id=\"T_0f047226_108e_11eb_b858_525400842e71row14_col9\" class=\"data row14 col9\" >-0.014361</td>\n",
        "                        <td id=\"T_0f047226_108e_11eb_b858_525400842e71row14_col10\" class=\"data row14 col10\" >0.226389</td>\n",
        "                        <td id=\"T_0f047226_108e_11eb_b858_525400842e71row14_col11\" class=\"data row14 col11\" >0.246128</td>\n",
        "                        <td id=\"T_0f047226_108e_11eb_b858_525400842e71row14_col12\" class=\"data row14 col12\" >0.143961</td>\n",
        "                        <td id=\"T_0f047226_108e_11eb_b858_525400842e71row14_col13\" class=\"data row14 col13\" >0.543673</td>\n",
        "                        <td id=\"T_0f047226_108e_11eb_b858_525400842e71row14_col14\" class=\"data row14 col14\" >1.000000</td>\n",
        "                        <td id=\"T_0f047226_108e_11eb_b858_525400842e71row14_col15\" class=\"data row14 col15\" >0.565807</td>\n",
        "                        <td id=\"T_0f047226_108e_11eb_b858_525400842e71row14_col16\" class=\"data row14 col16\" >0.253052</td>\n",
        "            </tr>\n",
        "            <tr>\n",
        "                        <th id=\"T_0f047226_108e_11eb_b858_525400842e71level0_row15\" class=\"row_heading level0 row15\" >Contact_tracing</th>\n",
        "                        <td id=\"T_0f047226_108e_11eb_b858_525400842e71row15_col0\" class=\"data row15 col0\" >-0.226720</td>\n",
        "                        <td id=\"T_0f047226_108e_11eb_b858_525400842e71row15_col1\" class=\"data row15 col1\" >0.024273</td>\n",
        "                        <td id=\"T_0f047226_108e_11eb_b858_525400842e71row15_col2\" class=\"data row15 col2\" >-0.016549</td>\n",
        "                        <td id=\"T_0f047226_108e_11eb_b858_525400842e71row15_col3\" class=\"data row15 col3\" >-0.295608</td>\n",
        "                        <td id=\"T_0f047226_108e_11eb_b858_525400842e71row15_col4\" class=\"data row15 col4\" >0.049849</td>\n",
        "                        <td id=\"T_0f047226_108e_11eb_b858_525400842e71row15_col5\" class=\"data row15 col5\" >0.275210</td>\n",
        "                        <td id=\"T_0f047226_108e_11eb_b858_525400842e71row15_col6\" class=\"data row15 col6\" >0.390197</td>\n",
        "                        <td id=\"T_0f047226_108e_11eb_b858_525400842e71row15_col7\" class=\"data row15 col7\" >0.298110</td>\n",
        "                        <td id=\"T_0f047226_108e_11eb_b858_525400842e71row15_col8\" class=\"data row15 col8\" >0.142854</td>\n",
        "                        <td id=\"T_0f047226_108e_11eb_b858_525400842e71row15_col9\" class=\"data row15 col9\" >-0.120532</td>\n",
        "                        <td id=\"T_0f047226_108e_11eb_b858_525400842e71row15_col10\" class=\"data row15 col10\" >0.270945</td>\n",
        "                        <td id=\"T_0f047226_108e_11eb_b858_525400842e71row15_col11\" class=\"data row15 col11\" >0.078375</td>\n",
        "                        <td id=\"T_0f047226_108e_11eb_b858_525400842e71row15_col12\" class=\"data row15 col12\" >0.186425</td>\n",
        "                        <td id=\"T_0f047226_108e_11eb_b858_525400842e71row15_col13\" class=\"data row15 col13\" >0.562780</td>\n",
        "                        <td id=\"T_0f047226_108e_11eb_b858_525400842e71row15_col14\" class=\"data row15 col14\" >0.565807</td>\n",
        "                        <td id=\"T_0f047226_108e_11eb_b858_525400842e71row15_col15\" class=\"data row15 col15\" >1.000000</td>\n",
        "                        <td id=\"T_0f047226_108e_11eb_b858_525400842e71row15_col16\" class=\"data row15 col16\" >0.308756</td>\n",
        "            </tr>\n",
        "            <tr>\n",
        "                        <th id=\"T_0f047226_108e_11eb_b858_525400842e71level0_row16\" class=\"row_heading level0 row16\" >Stringency_index</th>\n",
        "                        <td id=\"T_0f047226_108e_11eb_b858_525400842e71row16_col0\" class=\"data row16 col0\" >-0.281844</td>\n",
        "                        <td id=\"T_0f047226_108e_11eb_b858_525400842e71row16_col1\" class=\"data row16 col1\" >0.018489</td>\n",
        "                        <td id=\"T_0f047226_108e_11eb_b858_525400842e71row16_col2\" class=\"data row16 col2\" >-0.015382</td>\n",
        "                        <td id=\"T_0f047226_108e_11eb_b858_525400842e71row16_col3\" class=\"data row16 col3\" >-0.025701</td>\n",
        "                        <td id=\"T_0f047226_108e_11eb_b858_525400842e71row16_col4\" class=\"data row16 col4\" >0.244531</td>\n",
        "                        <td id=\"T_0f047226_108e_11eb_b858_525400842e71row16_col5\" class=\"data row16 col5\" >0.809960</td>\n",
        "                        <td id=\"T_0f047226_108e_11eb_b858_525400842e71row16_col6\" class=\"data row16 col6\" >0.820041</td>\n",
        "                        <td id=\"T_0f047226_108e_11eb_b858_525400842e71row16_col7\" class=\"data row16 col7\" >0.819245</td>\n",
        "                        <td id=\"T_0f047226_108e_11eb_b858_525400842e71row16_col8\" class=\"data row16 col8\" >0.850861</td>\n",
        "                        <td id=\"T_0f047226_108e_11eb_b858_525400842e71row16_col9\" class=\"data row16 col9\" >0.762206</td>\n",
        "                        <td id=\"T_0f047226_108e_11eb_b858_525400842e71row16_col10\" class=\"data row16 col10\" >0.783533</td>\n",
        "                        <td id=\"T_0f047226_108e_11eb_b858_525400842e71row16_col11\" class=\"data row16 col11\" >0.680775</td>\n",
        "                        <td id=\"T_0f047226_108e_11eb_b858_525400842e71row16_col12\" class=\"data row16 col12\" >0.680415</td>\n",
        "                        <td id=\"T_0f047226_108e_11eb_b858_525400842e71row16_col13\" class=\"data row16 col13\" >0.695782</td>\n",
        "                        <td id=\"T_0f047226_108e_11eb_b858_525400842e71row16_col14\" class=\"data row16 col14\" >0.253052</td>\n",
        "                        <td id=\"T_0f047226_108e_11eb_b858_525400842e71row16_col15\" class=\"data row16 col15\" >0.308756</td>\n",
        "                        <td id=\"T_0f047226_108e_11eb_b858_525400842e71row16_col16\" class=\"data row16 col16\" >1.000000</td>\n",
        "            </tr>\n",
        "    </tbody></table>"
       ],
       "output_type": "pyout",
       "prompt_number": 21,
       "text": [
        "<pandas.io.formats.style.Styler at 0x7f45a81c7250>"
       ]
      }
     ],
     "prompt_number": 21
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "# Scatter plot of Stringency index and Rt\n",
      "df = track_df.copy()\n",
      "sns.scatterplot(data=df, x=\"Stringency_index\", y=\"Rt\", hue=\"Country\", legend=\"brief\", marker=\"+\")\n",
      "bbox_to_anchor=(1.02, 0)\n",
      "bbox_loc=\"lower left\"\n",
      "plt.legend(bbox_to_anchor=bbox_to_anchor, loc=bbox_loc, borderaxespad=0)\n",
      "plt.title(\"Relationship of Stringency index and reproduction number\")\n",
      "plt.ylabel(\"Reproduction number\")\n",
      "plt.xlabel(\"Stringency index\")\n",
      "plt.show()"
     ],
     "language": "python",
     "metadata": {},
     "outputs": [
      {
       "output_type": "display_data",
       "png": "\n",
       "text": [
        "<Figure size 432x288 with 1 Axes>"
       ]
      }
     ],
     "prompt_number": 22
    }
   ],
   "metadata": {}
  }
 ]
}
