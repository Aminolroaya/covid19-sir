{
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3.8.2 64-bit ('.venv': venv)",
   "name": "python_defaultSpec_1597669925034"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.8.2-final"
  },
  "name": ""
 },
 "nbformat": 3,
 "nbformat_minor": 0,
 "worksheets": [
  {
   "cells": [
    {
     "cell_type": "markdown",
     "metadata": {},
     "source": [
      "# Usage (details: policy measures)\n",
      "Here, we will analyse the relationship of policy measures and parameter values of SIR-derived ODE models. Policy measures are tracked by [Oxford Covid-19 Government Response Tracker (OxCGRT)](https://github.com/OxCGRT/covid-policy-tracker)."
     ]
    },
    {
     "cell_type": "heading",
     "level": 2,
     "metadata": {},
     "source": [
      "Preparation"
     ]
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "# Standard users\n",
      "# !pip install covsirphy\n",
      "# Developers (Note: this notebook is in example directory)\n",
      "import os\n",
      "os.chdir(\"../\")"
     ],
     "language": "python",
     "metadata": {},
     "outputs": [],
     "prompt_number": 1
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "from pprint import pprint"
     ],
     "language": "python",
     "metadata": {},
     "outputs": [],
     "prompt_number": 2
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "import covsirphy as cs\n",
      "cs.__version__"
     ],
     "language": "python",
     "metadata": {},
     "outputs": [
      {
       "output_type": "pyout",
       "prompt_number": 3,
       "text": [
        "'2.8.2'"
       ]
      }
     ],
     "prompt_number": 3
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "# Standard users and developers\n",
      "data_loader = cs.DataLoader(\"input\")\n",
      "# The number of cases (JHU style)\n",
      "jhu_data = data_loader.jhu(verbose=False)\n",
      "# Population in each country\n",
      "population_data = data_loader.population(verbose=False)\n",
      "# Government Response Tracker (OxCGRT)\n",
      "oxcgrt_data = data_loader.oxcgrt(verbose=False)\n",
      "# Description/citation\n",
      "print(oxcgrt_data.citation)"
     ],
     "language": "python",
     "metadata": {
      "tags": []
     },
     "outputs": [
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "(Secondary source) Guidotti, E., Ardia, D., (2020), \"COVID-19 Data Hub\", Journal of Open Source Software 5(51):2376, doi: 10.21105/joss.02376.\n",
        "We can get Citation list of primary sources with DataLoader(...).covid19dh_citation"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      }
     ],
     "prompt_number": 4
    },
    {
     "cell_type": "markdown",
     "metadata": {},
     "source": [
      "## Class for policy measure analysis\n",
      "We will `PolicyMeasures` class to find relationship of policy measures and parameter values of SIR-derived ODE models."
     ]
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "# Create analyser with tau value 360 [min] (can be changed)\n",
      "analyser = cs.PolicyMeasures(jhu_data, population_data, oxcgrt_data, tau=360)\n",
      "# The number of registerd countries\n",
      "len(analyser.countries)"
     ],
     "language": "python",
     "metadata": {
      "tags": []
     },
     "outputs": [
      {
       "output_type": "pyout",
       "prompt_number": 5,
       "text": [
        "184"
       ]
      }
     ],
     "prompt_number": 5
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "# We can get Scenario instance for detailed scenario analysis\n",
      "type(analyser.scenario(\"Japan\"))"
     ],
     "language": "python",
     "metadata": {},
     "outputs": [
      {
       "output_type": "pyout",
       "prompt_number": 6,
       "text": [
        "covsirphy.analysis.scenario.Scenario"
       ]
      }
     ],
     "prompt_number": 6
    },
    {
     "cell_type": "markdown",
     "metadata": {},
     "source": [
      "## Set phases with S-R trend analysis\n",
      "We will perform S-R trend analysis to set phases in all countries. Countries which do not have **9th phases** will be un-registered for the next analysis. This number will be adjusted for your analysis."
     ]
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "# Show the number of phases of all countries\n",
      "analyser.trend()\n",
      "pprint(analyser.phase_len(), compact=True)"
     ],
     "language": "python",
     "metadata": {},
     "outputs": [
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "{"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "3"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ": "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "['Tanzania', 'Dominica']"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        " "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "4"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ": "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "["
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Mauritius'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Belize'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Brunei'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Myanmar'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Seychelles'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Bahamas'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        "     "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Trinidad and Tobago'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "]"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        " "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "5"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ": "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "["
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Botswana'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Grenada'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Antigua and Barbuda'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Guyana'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Namibia'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        "     "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Angola'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Norway'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Fiji'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Papua New Guinea'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "]"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        " "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "6"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ": "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "["
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Kyrgyzstan'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Netherlands'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Kazakhstan'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Yemen'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Cambodia'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Gambia'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        "     "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Lebanon'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Zambia'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Israel'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Vietnam'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Mongolia'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Morocco'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Libya'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        "     "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Sao Tome and Principe'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Uganda'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Eritrea'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Ireland'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Slovakia'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        "     "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Equatorial Guinea'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Lesotho'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'South Sudan'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Ethiopia'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Philippines'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        "     "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Zimbabwe'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Montenegro'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Central African Republic'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Kosovo'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Tunisia'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        "     "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Malta'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Spain'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Paraguay'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Syria'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Iceland'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "]"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        " "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "7"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ": "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "["
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Bermuda'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Cameroon'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Bhutan'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Palestine'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Madagascar'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Luxembourg'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        "     "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Guatemala'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Suriname'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Bosnia and Herzegovina'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Afghanistan'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Taiwan'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        "     "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Venezuela'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Costa Rica'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Colombia'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Mozambique'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Kenya'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Maldives'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        "     "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Liechtenstein'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Malawi'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Argentina'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Saint Vincent and the Grenadines'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        "     "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Benin'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Barbados'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Jordan'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Thailand'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'New Zealand'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Australia'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        "     "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'San Marino'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Japan'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Burundi'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Nicaragua'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Chad'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Saint Lucia'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        "     "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Cyprus'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "]"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        " "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "8"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ": "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "["
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Somalia'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Greece'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Cape Verde'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Rwanda'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'India'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Niger'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Finland'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        "     "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'China'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Tajikistan'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Mauritania'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Comoros'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Oman'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Uzbekistan'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        "     "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Guinea-Bissau'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Sri Lanka'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Croatia'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Congo'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Ghana'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Djibouti'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        "     "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Nepal'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Monaco'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Iraq'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'South Africa'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Indonesia'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Swaziland'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        "     "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Slovenia'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Ecuador'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "]"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        " "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "9"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ": "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "["
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Cuba'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Singapore'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Belgium'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Canada'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Uruguay'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Chile'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Ukraine'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        "     "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Austria'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Togo'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Qatar'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Pakistan'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'El Salvador'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Sierra Leone'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        "     "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Germany'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Belarus'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Albania'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Romania'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Armenia'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Mali'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        "     "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Switzerland'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Gabon'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Malaysia'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Liberia'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Azerbaijan'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Jamaica'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        "     "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Brazil'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Korea, South'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Honduras'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Sudan'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Haiti'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Andorra'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "]"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        " "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "10"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ": "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "["
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Estonia'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Latvia'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Portugal'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Macedonia'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Denmark'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Lithuania'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        "      "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Moldova'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Senegal'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Serbia'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Dominican Republic'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Burkina Faso'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        "      "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Turkey'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Panama'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Algeria'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Bolivia'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Poland'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Czech Republic'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        "      "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Hungary'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Egypt'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Saudi Arabia'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Bulgaria'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Peru'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "]"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        " "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "11"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ": "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "["
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Iran'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Georgia'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Bahrain'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Kuwait'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Nigeria'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'United States'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        "      "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Italy'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Guinea'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Mexico'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'France'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'United Arab Emirates'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        "      "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Bangladesh'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "]"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        " "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "12"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ": "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "['Russia']"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "}"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      }
     ],
     "prompt_number": 7
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "# Set phases with S-R trend analysis\n",
      "analyser.trend(min_len=11)\n",
      "# The number of countries\n",
      "len(analyser.countries)"
     ],
     "language": "python",
     "metadata": {},
     "outputs": [
      {
       "output_type": "pyout",
       "prompt_number": 8,
       "text": [
        "13"
       ]
      }
     ],
     "prompt_number": 8
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "phase_len_dict = analyser.phase_len()\n",
      "pprint(phase_len_dict, compact=True)"
     ],
     "language": "python",
     "metadata": {
      "tags": []
     },
     "outputs": [
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "{"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "11"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ": "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "["
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Iran'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Georgia'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Bahrain'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Kuwait'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Nigeria'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'United States'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        "      "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Italy'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Guinea'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Mexico'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'France'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'United Arab Emirates'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        "      "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Bangladesh'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "]"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        " "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "12"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ": "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "['Russia']"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "}"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      }
     ],
     "prompt_number": 9
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "# Here, only show the countries which have the most phases\n",
      "countries_show = max(phase_len_dict.items(), key=lambda x: x[0])[1]\n",
      "# Show summary\n",
      "analyser.summary(countries=countries_show)"
     ],
     "language": "python",
     "metadata": {
      "tags": []
     },
     "outputs": [
      {
       "html": [
        "<div>\n",
        "<style scoped>\n",
        "    .dataframe tbody tr th:only-of-type {\n",
        "        vertical-align: middle;\n",
        "    }\n",
        "\n",
        "    .dataframe tbody tr th {\n",
        "        vertical-align: top;\n",
        "    }\n",
        "\n",
        "    .dataframe thead th {\n",
        "        text-align: right;\n",
        "    }\n",
        "</style>\n",
        "<table border=\"1\" class=\"dataframe\">\n",
        "  <thead>\n",
        "    <tr style=\"text-align: right;\">\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th>Type</th>\n",
        "      <th>Start</th>\n",
        "      <th>End</th>\n",
        "      <th>Population</th>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>Country</th>\n",
        "      <th>Phase</th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "    </tr>\n",
        "  </thead>\n",
        "  <tbody>\n",
        "    <tr>\n",
        "      <th rowspan=\"12\" valign=\"top\">Russia</th>\n",
        "      <th>0th</th>\n",
        "      <td>Past</td>\n",
        "      <td>12Feb2020</td>\n",
        "      <td>06May2020</td>\n",
        "      <td>330457362</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>1st</th>\n",
        "      <td>Past</td>\n",
        "      <td>07May2020</td>\n",
        "      <td>15May2020</td>\n",
        "      <td>330457362</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>2nd</th>\n",
        "      <td>Past</td>\n",
        "      <td>16May2020</td>\n",
        "      <td>23May2020</td>\n",
        "      <td>330457362</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>3rd</th>\n",
        "      <td>Past</td>\n",
        "      <td>24May2020</td>\n",
        "      <td>01Jun2020</td>\n",
        "      <td>330457362</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>4th</th>\n",
        "      <td>Past</td>\n",
        "      <td>02Jun2020</td>\n",
        "      <td>10Jun2020</td>\n",
        "      <td>330457362</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>5th</th>\n",
        "      <td>Past</td>\n",
        "      <td>11Jun2020</td>\n",
        "      <td>20Jun2020</td>\n",
        "      <td>330457362</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>6th</th>\n",
        "      <td>Past</td>\n",
        "      <td>21Jun2020</td>\n",
        "      <td>30Jun2020</td>\n",
        "      <td>330457362</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>7th</th>\n",
        "      <td>Past</td>\n",
        "      <td>01Jul2020</td>\n",
        "      <td>11Jul2020</td>\n",
        "      <td>330457362</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>8th</th>\n",
        "      <td>Past</td>\n",
        "      <td>12Jul2020</td>\n",
        "      <td>24Jul2020</td>\n",
        "      <td>330457362</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>9th</th>\n",
        "      <td>Past</td>\n",
        "      <td>25Jul2020</td>\n",
        "      <td>08Aug2020</td>\n",
        "      <td>330457362</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>10th</th>\n",
        "      <td>Past</td>\n",
        "      <td>09Aug2020</td>\n",
        "      <td>25Aug2020</td>\n",
        "      <td>330457362</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>11th</th>\n",
        "      <td>Past</td>\n",
        "      <td>26Aug2020</td>\n",
        "      <td>12Sep2020</td>\n",
        "      <td>330457362</td>\n",
        "    </tr>\n",
        "  </tbody>\n",
        "</table>\n",
        "</div>"
       ],
       "output_type": "pyout",
       "prompt_number": 10,
       "text": [
        "               Type      Start        End  Population\n",
        "Country Phase                                        \n",
        "Russia  0th    Past  12Feb2020  06May2020   330457362\n",
        "        1st    Past  07May2020  15May2020   330457362\n",
        "        2nd    Past  16May2020  23May2020   330457362\n",
        "        3rd    Past  24May2020  01Jun2020   330457362\n",
        "        4th    Past  02Jun2020  10Jun2020   330457362\n",
        "        5th    Past  11Jun2020  20Jun2020   330457362\n",
        "        6th    Past  21Jun2020  30Jun2020   330457362\n",
        "        7th    Past  01Jul2020  11Jul2020   330457362\n",
        "        8th    Past  12Jul2020  24Jul2020   330457362\n",
        "        9th    Past  25Jul2020  08Aug2020   330457362\n",
        "        10th   Past  09Aug2020  25Aug2020   330457362\n",
        "        11th   Past  26Aug2020  12Sep2020   330457362"
       ]
      }
     ],
     "prompt_number": 10
    },
    {
     "cell_type": "markdown",
     "metadata": {},
     "source": [
      "## Parameter estimation\n",
      "we will estimate the parameter values with SIR-derived ODE models in each country."
     ]
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "# Parameter estimation with SIR-F model\n",
      "analyser.estimate(cs.SIRF)"
     ],
     "language": "python",
     "metadata": {
      "tags": []
     },
     "outputs": [
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n",
        "<SIR-F model: parameter estimation>"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "Running optimization with 4 CPUs..."
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tITA,  8th phase (07Jun2020 - 16Jul2020): finished 1026 trials in 0 min 25 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tGEO,  5th phase (13Jun2020 - 06Jul2020): finished 2001 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tGIN,  1st phase (01May2020 - 12May2020): finished 2007 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tRUS,  5th phase (11Jun2020 - 20Jun2020): finished 2010 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tUSA,  3rd phase (06Jun2020 - 23Jun2020): finished  478 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tGIN,  5th phase (20Jun2020 - 08Jul2020): finished  252 trials in 0 min  5 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tITA,  2nd phase (29Mar2020 - 09Apr2020): finished 2015 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tKWT,  9th phase (21Aug2020 - 01Sep2020): finished  481 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tMEX,  6th phase (19Jul2020 - 30Jul2020): finished 2027 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tGEO,  3rd phase (13May2020 - 29May2020): finished 2015 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tBHR, 10th phase (04Sep2020 - 12Sep2020): finished  869 trials in 0 min 20 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tBHR,  4th phase (22Jun2020 - 07Jul2020): finished 2010 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tGEO, 10th phase (31Aug2020 - 12Sep2020): finished 2027 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tUSA, 10th phase (29Aug2020 - 12Sep2020): finished 1189 trials in 0 min 30 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tKWT,  7th phase (27Jul2020 - 08Aug2020): finished 1342 trials in 0 min 35 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tMEX,  5th phase (10Jul2020 - 18Jul2020): finished 2023 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tUSA,  6th phase (16Jul2020 - 23Jul2020): finished  257 trials in 0 min  5 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tITA,  6th phase (10May2020 - 19May2020): finished  259 trials in 0 min  5 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tBHR,  0th phase (06Mar2020 - 06May2020): finished 1962 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tBHR,  7th phase (27Jul2020 - 09Aug2020): finished  252 trials in 0 min  5 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tUSA,  5th phase (07Jul2020 - 15Jul2020): finished  226 trials in 0 min  5 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tFRA,  0th phase (12Feb2020 - 24Mar2020): finished 1878 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tBHR,  5th phase (08Jul2020 - 15Jul2020): finished 2029 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tBHR,  9th phase (23Aug2020 - 03Sep2020): finished 2042 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tBGD,  6th phase (16Jul2020 - 25Jul2020): finished  257 trials in 0 min  5 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tARE,  4th phase (07Jun2020 - 18Jun2020): finished 1038 trials in 0 min 25 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tFRA, 10th phase (28Aug2020 - 12Sep2020): finished 2029 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tNGA,  6th phase (13Jul2020 - 20Jul2020): finished  477 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tITA,  7th phase (20May2020 - 06Jun2020): finished  438 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tBGD,  2nd phase (12Jun2020 - 20Jun2020): finished 1986 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tIRN, 10th phase (25Aug2020 - 12Sep2020): finished  472 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tKWT,  1st phase (15May2020 - 27May2020): finished 1984 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tGEO,  2nd phase (30Apr2020 - 12May2020): finished 2018 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tGIN,  3rd phase (27May2020 - 06Jun2020): finished 2015 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tBHR,  3rd phase (12Jun2020 - 21Jun2020): finished 2012 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tGEO,  0th phase (16Mar2020 - 12Apr2020): finished 1982 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tGIN,  6th phase (09Jul2020 - 22Jul2020): finished 2007 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tRUS, 11th phase (26Aug2020 - 12Sep2020): finished 1487 trials in 0 min 40 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tIRN,  9th phase (10Aug2020 - 24Aug2020): finished 2006 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tBHR,  6th phase (16Jul2020 - 26Jul2020): finished 2001 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tUSA,  1st phase (18Apr2020 - 10May2020): finished 1989 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tGEO,  4th phase (30May2020 - 12Jun2020): finished 2006 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tIRN,  8th phase (28Jul2020 - 09Aug2020): finished 1356 trials in 0 min 35 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tNGA,  2nd phase (07Jun2020 - 17Jun2020): finished  255 trials in 0 min  5 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tMEX,  4th phase (02Jul2020 - 09Jul2020): finished 2015 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tKWT,  2nd phase (28May2020 - 07Jun2020): finished 2014 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tIRN,  7th phase (13Jul2020 - 27Jul2020): finished  254 trials in 0 min  5 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tGIN, 10th phase (30Aug2020 - 12Sep2020): finished  675 trials in 0 min 15 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tNGA,  8th phase (08Aug2020 - 17Aug2020): finished 2023 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tARE,  3rd phase (28May2020 - 06Jun2020): finished 2015 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tMEX,  8th phase (10Aug2020 - 19Aug2020): finished 2021 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tBHR,  2nd phase (01Jun2020 - 11Jun2020): finished 2011 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tUSA,  7th phase (24Jul2020 - 07Aug2020): finished  251 trials in 0 min  5 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tGIN,  7th phase (23Jul2020 - 05Aug2020): finished 2007 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tUSA,  4th phase (24Jun2020 - 06Jul2020): finished 2016 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tGIN,  4th phase (07Jun2020 - 19Jun2020): finished 2021 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tRUS,  2nd phase (16May2020 - 23May2020): finished 2030 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tIRN,  2nd phase (18Apr2020 - 12May2020): finished  470 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tFRA,  3rd phase (13Apr2020 - 24Apr2020): finished 2021 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tGIN,  2nd phase (13May2020 - 26May2020): finished 1999 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tRUS,  8th phase (12Jul2020 - 24Jul2020): finished 2005 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tITA,  4th phase (19Apr2020 - 30Apr2020): finished 2002 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tMEX,  2nd phase (08Jun2020 - 20Jun2020): finished 1994 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tRUS, 10th phase (09Aug2020 - 25Aug2020): finished 2006 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tKWT,  5th phase (04Jul2020 - 14Jul2020): finished  253 trials in 0 min  5 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tKWT,  3rd phase (08Jun2020 - 22Jun2020): finished 2003 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tARE,  2nd phase (13May2020 - 27May2020): finished 2004 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tGIN,  8th phase (06Aug2020 - 16Aug2020): finished 2019 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tITA,  5th phase (01May2020 - 09May2020): finished  676 trials in 0 min 15 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tBHR,  8th phase (10Aug2020 - 22Aug2020): finished  256 trials in 0 min  5 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tMEX,  7th phase (31Jul2020 - 09Aug2020): finished  225 trials in 0 min  5 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tIRN,  5th phase (16Jun2020 - 29Jun2020): finished 2004 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tARE,  8th phase (27Jul2020 - 17Aug2020): finished 1031 trials in 0 min 25 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tNGA,  3rd phase (18Jun2020 - 26Jun2020): finished  254 trials in 0 min  5 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tFRA,  5th phase (06May2020 - 27May2020): finished  465 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tRUS,  9th phase (25Jul2020 - 08Aug2020): finished 1994 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tIRN,  3rd phase (13May2020 - 31May2020): finished  251 trials in 0 min  5 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tGEO,  1st phase (13Apr2020 - 29Apr2020): finished 2007 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tIRN,  0th phase (26Feb2020 - 29Mar2020): finished 2000 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tARE,  1st phase (25Apr2020 - 12May2020): finished 2012 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tFRA,  4th phase (25Apr2020 - 05May2020): finished 2036 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tRUS,  0th phase (12Feb2020 - 06May2020): finished 2026 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tMEX,  0th phase (03Mar2020 - 20May2020): finished 1952 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tBGD,  3rd phase (21Jun2020 - 28Jun2020): finished 1199 trials in 0 min 30 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tBGD,  7th phase (26Jul2020 - 06Aug2020): finished  478 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tNGA,  7th phase (21Jul2020 - 07Aug2020): finished 1998 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tARE,  6th phase (02Jul2020 - 10Jul2020): finished 2019 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tGEO,  9th phase (17Aug2020 - 30Aug2020): finished 2013 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tARE,  5th phase (19Jun2020 - 01Jul2020): finished 1027 trials in 0 min 25 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tGIN,  0th phase (03Apr2020 - 30Apr2020): finished 2005 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tBGD,  0th phase (16Mar2020 - 26May2020): finished 1951 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tMEX,  9th phase (20Aug2020 - 30Aug2020): finished 1995 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tMEX,  3rd phase (21Jun2020 - 01Jul2020): finished 2006 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tNGA,  1st phase (19May2020 - 06Jun2020): finished 2008 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tITA,  9th phase (17Jul2020 - 20Aug2020): finished 1976 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tIRN,  6th phase (30Jun2020 - 12Jul2020): finished  254 trials in 0 min  5 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tFRA,  6th phase (28May2020 - 25Jun2020): finished 1474 trials in 0 min 40 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tFRA,  8th phase (23Jul2020 - 10Aug2020): finished  469 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tIRN,  1st phase (30Mar2020 - 17Apr2020): finished 2015 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tRUS,  4th phase (02Jun2020 - 10Jun2020): finished 2020 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tITA, 10th phase (21Aug2020 - 12Sep2020): finished 2003 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tGEO,  6th phase (07Jul2020 - 22Jul2020): finished  475 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tNGA, 10th phase (27Aug2020 - 12Sep2020): finished  448 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tRUS,  1st phase (07May2020 - 15May2020): finished 2001 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tGIN,  9th phase (17Aug2020 - 29Aug2020): finished 2005 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tFRA,  7th phase (26Jun2020 - 22Jul2020): finished  470 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tBGD,  9th phase (17Aug2020 - 28Aug2020): finished  255 trials in 0 min  5 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tBGD,  1st phase (27May2020 - 11Jun2020): finished 2007 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tARE,  7th phase (11Jul2020 - 26Jul2020): finished  254 trials in 0 min  5 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tGEO,  7th phase (23Jul2020 - 06Aug2020): finished 2031 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tNGA,  0th phase (18Mar2020 - 18May2020): finished 1972 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tRUS,  3rd phase (24May2020 - 01Jun2020): finished 2012 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tARE,  9th phase (18Aug2020 - 01Sep2020): finished 1017 trials in 0 min 25 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tRUS,  6th phase (21Jun2020 - 30Jun2020): finished 2020 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tFRA,  2nd phase (03Apr2020 - 12Apr2020): finished 1986 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tGEO,  8th phase (07Aug2020 - 16Aug2020): finished 1512 trials in 0 min 45 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tFRA,  1st phase (25Mar2020 - 02Apr2020): finished 1829 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tIRN,  4th phase (01Jun2020 - 15Jun2020): finished 1699 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tITA,  0th phase (24Feb2020 - 20Mar2020): finished 1606 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tNGA,  9th phase (18Aug2020 - 26Aug2020): finished 1130 trials in 0 min 40 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tITA,  3rd phase (10Apr2020 - 18Apr2020): finished  349 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tFRA,  9th phase (11Aug2020 - 27Aug2020): finished  728 trials in 0 min 20 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tUSA,  0th phase (09Feb2020 - 17Apr2020): finished 1568 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tKWT,  8th phase (09Aug2020 - 20Aug2020): finished 1736 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tKWT,  0th phase (08Mar2020 - 14May2020): finished 1706 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tBHR,  1st phase (07May2020 - 31May2020): finished 1818 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tUSA,  2nd phase (11May2020 - 05Jun2020): finished 1800 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tMEX,  1st phase (21May2020 - 07Jun2020): finished 1056 trials in 0 min 30 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tARE,  0th phase (12Feb2020 - 24Apr2020): finished 1780 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tKWT,  6th phase (15Jul2020 - 26Jul2020): finished  436 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tUSA,  9th phase (18Aug2020 - 28Aug2020): finished  218 trials in 0 min  5 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tITA,  1st phase (21Mar2020 - 28Mar2020): finished 1844 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tNGA,  4th phase (27Jun2020 - 04Jul2020): finished  257 trials in 0 min  5 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tNGA,  5th phase (05Jul2020 - 12Jul2020): finished  469 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tBGD,  4th phase (29Jun2020 - 06Jul2020): finished  829 trials in 0 min 20 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tKWT, 10th phase (02Sep2020 - 12Sep2020): finished  497 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tRUS,  7th phase (01Jul2020 - 11Jul2020): finished 2041 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tKWT,  4th phase (23Jun2020 - 03Jul2020): finished 2194 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "Completed optimization. Total: 26 min 29 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      }
     ],
     "prompt_number": 11
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "# Show summary\n",
      "analyser.summary(countries=countries_show)"
     ],
     "language": "python",
     "metadata": {},
     "outputs": [
      {
       "html": [
        "<div>\n",
        "<style scoped>\n",
        "    .dataframe tbody tr th:only-of-type {\n",
        "        vertical-align: middle;\n",
        "    }\n",
        "\n",
        "    .dataframe tbody tr th {\n",
        "        vertical-align: top;\n",
        "    }\n",
        "\n",
        "    .dataframe thead th {\n",
        "        text-align: right;\n",
        "    }\n",
        "</style>\n",
        "<table border=\"1\" class=\"dataframe\">\n",
        "  <thead>\n",
        "    <tr style=\"text-align: right;\">\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th>Type</th>\n",
        "      <th>Start</th>\n",
        "      <th>End</th>\n",
        "      <th>Population</th>\n",
        "      <th>ODE</th>\n",
        "      <th>Rt</th>\n",
        "      <th>theta</th>\n",
        "      <th>kappa</th>\n",
        "      <th>rho</th>\n",
        "      <th>sigma</th>\n",
        "      <th>tau</th>\n",
        "      <th>1/beta [day]</th>\n",
        "      <th>1/gamma [day]</th>\n",
        "      <th>alpha1 [-]</th>\n",
        "      <th>1/alpha2 [day]</th>\n",
        "      <th>RMSLE</th>\n",
        "      <th>Trials</th>\n",
        "      <th>Runtime</th>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>Country</th>\n",
        "      <th>Phase</th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "    </tr>\n",
        "  </thead>\n",
        "  <tbody>\n",
        "    <tr>\n",
        "      <th rowspan=\"12\" valign=\"top\">Russia</th>\n",
        "      <th>0th</th>\n",
        "      <td>Past</td>\n",
        "      <td>12Feb2020</td>\n",
        "      <td>06May2020</td>\n",
        "      <td>330457362</td>\n",
        "      <td>SIR-F</td>\n",
        "      <td>0.02</td>\n",
        "      <td>0.602763</td>\n",
        "      <td>0.544883</td>\n",
        "      <td>0.034081</td>\n",
        "      <td>0.002299</td>\n",
        "      <td>360</td>\n",
        "      <td>7</td>\n",
        "      <td>108</td>\n",
        "      <td>0.603</td>\n",
        "      <td>0</td>\n",
        "      <td>18.966727</td>\n",
        "      <td>2026</td>\n",
        "      <td>1 min  0 sec</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>1st</th>\n",
        "      <td>Past</td>\n",
        "      <td>07May2020</td>\n",
        "      <td>15May2020</td>\n",
        "      <td>330457362</td>\n",
        "      <td>SIR-F</td>\n",
        "      <td>2.46</td>\n",
        "      <td>0.000639</td>\n",
        "      <td>0.000117</td>\n",
        "      <td>0.013019</td>\n",
        "      <td>0.005178</td>\n",
        "      <td>360</td>\n",
        "      <td>19</td>\n",
        "      <td>48</td>\n",
        "      <td>0.001</td>\n",
        "      <td>2144</td>\n",
        "      <td>0.066392</td>\n",
        "      <td>2001</td>\n",
        "      <td>1 min  0 sec</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>2nd</th>\n",
        "      <td>Past</td>\n",
        "      <td>16May2020</td>\n",
        "      <td>23May2020</td>\n",
        "      <td>330457362</td>\n",
        "      <td>SIR-F</td>\n",
        "      <td>1.51</td>\n",
        "      <td>0.000440</td>\n",
        "      <td>0.000098</td>\n",
        "      <td>0.007637</td>\n",
        "      <td>0.004942</td>\n",
        "      <td>360</td>\n",
        "      <td>32</td>\n",
        "      <td>50</td>\n",
        "      <td>0.000</td>\n",
        "      <td>2549</td>\n",
        "      <td>0.057008</td>\n",
        "      <td>2030</td>\n",
        "      <td>1 min  0 sec</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>3rd</th>\n",
        "      <td>Past</td>\n",
        "      <td>24May2020</td>\n",
        "      <td>01Jun2020</td>\n",
        "      <td>330457362</td>\n",
        "      <td>SIR-F</td>\n",
        "      <td>0.96</td>\n",
        "      <td>0.017299</td>\n",
        "      <td>0.000018</td>\n",
        "      <td>0.005605</td>\n",
        "      <td>0.005747</td>\n",
        "      <td>360</td>\n",
        "      <td>44</td>\n",
        "      <td>43</td>\n",
        "      <td>0.017</td>\n",
        "      <td>14003</td>\n",
        "      <td>0.078909</td>\n",
        "      <td>2012</td>\n",
        "      <td>1 min  0 sec</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>4th</th>\n",
        "      <td>Past</td>\n",
        "      <td>02Jun2020</td>\n",
        "      <td>10Jun2020</td>\n",
        "      <td>330457362</td>\n",
        "      <td>SIR-F</td>\n",
        "      <td>0.93</td>\n",
        "      <td>0.018138</td>\n",
        "      <td>0.000010</td>\n",
        "      <td>0.004799</td>\n",
        "      <td>0.005076</td>\n",
        "      <td>360</td>\n",
        "      <td>52</td>\n",
        "      <td>49</td>\n",
        "      <td>0.018</td>\n",
        "      <td>25079</td>\n",
        "      <td>0.065719</td>\n",
        "      <td>2020</td>\n",
        "      <td>1 min  0 sec</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>5th</th>\n",
        "      <td>Past</td>\n",
        "      <td>11Jun2020</td>\n",
        "      <td>20Jun2020</td>\n",
        "      <td>330457362</td>\n",
        "      <td>SIR-F</td>\n",
        "      <td>1.01</td>\n",
        "      <td>0.018282</td>\n",
        "      <td>0.000010</td>\n",
        "      <td>0.003841</td>\n",
        "      <td>0.003732</td>\n",
        "      <td>360</td>\n",
        "      <td>65</td>\n",
        "      <td>66</td>\n",
        "      <td>0.018</td>\n",
        "      <td>25086</td>\n",
        "      <td>0.058438</td>\n",
        "      <td>2010</td>\n",
        "      <td>1 min  0 sec</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>6th</th>\n",
        "      <td>Past</td>\n",
        "      <td>21Jun2020</td>\n",
        "      <td>30Jun2020</td>\n",
        "      <td>330457362</td>\n",
        "      <td>SIR-F</td>\n",
        "      <td>0.90</td>\n",
        "      <td>0.021825</td>\n",
        "      <td>0.000002</td>\n",
        "      <td>0.002769</td>\n",
        "      <td>0.003016</td>\n",
        "      <td>360</td>\n",
        "      <td>90</td>\n",
        "      <td>82</td>\n",
        "      <td>0.022</td>\n",
        "      <td>132403</td>\n",
        "      <td>0.049641</td>\n",
        "      <td>2020</td>\n",
        "      <td>1 min  0 sec</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>7th</th>\n",
        "      <td>Past</td>\n",
        "      <td>01Jul2020</td>\n",
        "      <td>11Jul2020</td>\n",
        "      <td>330457362</td>\n",
        "      <td>SIR-F</td>\n",
        "      <td>0.84</td>\n",
        "      <td>0.000225</td>\n",
        "      <td>0.000064</td>\n",
        "      <td>0.002338</td>\n",
        "      <td>0.002736</td>\n",
        "      <td>360</td>\n",
        "      <td>106</td>\n",
        "      <td>91</td>\n",
        "      <td>0.000</td>\n",
        "      <td>3932</td>\n",
        "      <td>0.049666</td>\n",
        "      <td>2041</td>\n",
        "      <td>1 min  0 sec</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>8th</th>\n",
        "      <td>Past</td>\n",
        "      <td>12Jul2020</td>\n",
        "      <td>24Jul2020</td>\n",
        "      <td>330457362</td>\n",
        "      <td>SIR-F</td>\n",
        "      <td>0.72</td>\n",
        "      <td>0.000334</td>\n",
        "      <td>0.000050</td>\n",
        "      <td>0.001942</td>\n",
        "      <td>0.002635</td>\n",
        "      <td>360</td>\n",
        "      <td>128</td>\n",
        "      <td>94</td>\n",
        "      <td>0.000</td>\n",
        "      <td>4983</td>\n",
        "      <td>0.062564</td>\n",
        "      <td>2005</td>\n",
        "      <td>1 min  0 sec</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>9th</th>\n",
        "      <td>Past</td>\n",
        "      <td>25Jul2020</td>\n",
        "      <td>08Aug2020</td>\n",
        "      <td>330457362</td>\n",
        "      <td>SIR-F</td>\n",
        "      <td>0.77</td>\n",
        "      <td>0.019127</td>\n",
        "      <td>0.000006</td>\n",
        "      <td>0.001628</td>\n",
        "      <td>0.002071</td>\n",
        "      <td>360</td>\n",
        "      <td>153</td>\n",
        "      <td>120</td>\n",
        "      <td>0.019</td>\n",
        "      <td>40976</td>\n",
        "      <td>0.058755</td>\n",
        "      <td>1994</td>\n",
        "      <td>1 min  0 sec</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>10th</th>\n",
        "      <td>Past</td>\n",
        "      <td>09Aug2020</td>\n",
        "      <td>25Aug2020</td>\n",
        "      <td>330457362</td>\n",
        "      <td>SIR-F</td>\n",
        "      <td>0.88</td>\n",
        "      <td>0.018546</td>\n",
        "      <td>0.000003</td>\n",
        "      <td>0.001378</td>\n",
        "      <td>0.001540</td>\n",
        "      <td>360</td>\n",
        "      <td>181</td>\n",
        "      <td>162</td>\n",
        "      <td>0.019</td>\n",
        "      <td>83203</td>\n",
        "      <td>0.046084</td>\n",
        "      <td>2006</td>\n",
        "      <td>1 min  0 sec</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>11th</th>\n",
        "      <td>Past</td>\n",
        "      <td>26Aug2020</td>\n",
        "      <td>12Sep2020</td>\n",
        "      <td>330457362</td>\n",
        "      <td>SIR-F</td>\n",
        "      <td>1.00</td>\n",
        "      <td>0.016572</td>\n",
        "      <td>0.000006</td>\n",
        "      <td>0.001354</td>\n",
        "      <td>0.001330</td>\n",
        "      <td>360</td>\n",
        "      <td>184</td>\n",
        "      <td>188</td>\n",
        "      <td>0.017</td>\n",
        "      <td>40976</td>\n",
        "      <td>0.003516</td>\n",
        "      <td>1487</td>\n",
        "      <td>0 min 40 sec</td>\n",
        "    </tr>\n",
        "  </tbody>\n",
        "</table>\n",
        "</div>"
       ],
       "output_type": "pyout",
       "prompt_number": 12,
       "text": [
        "               Type      Start        End  Population    ODE    Rt     theta  \\\n",
        "Country Phase                                                                  \n",
        "Russia  0th    Past  12Feb2020  06May2020   330457362  SIR-F  0.02  0.602763   \n",
        "        1st    Past  07May2020  15May2020   330457362  SIR-F  2.46  0.000639   \n",
        "        2nd    Past  16May2020  23May2020   330457362  SIR-F  1.51  0.000440   \n",
        "        3rd    Past  24May2020  01Jun2020   330457362  SIR-F  0.96  0.017299   \n",
        "        4th    Past  02Jun2020  10Jun2020   330457362  SIR-F  0.93  0.018138   \n",
        "        5th    Past  11Jun2020  20Jun2020   330457362  SIR-F  1.01  0.018282   \n",
        "        6th    Past  21Jun2020  30Jun2020   330457362  SIR-F  0.90  0.021825   \n",
        "        7th    Past  01Jul2020  11Jul2020   330457362  SIR-F  0.84  0.000225   \n",
        "        8th    Past  12Jul2020  24Jul2020   330457362  SIR-F  0.72  0.000334   \n",
        "        9th    Past  25Jul2020  08Aug2020   330457362  SIR-F  0.77  0.019127   \n",
        "        10th   Past  09Aug2020  25Aug2020   330457362  SIR-F  0.88  0.018546   \n",
        "        11th   Past  26Aug2020  12Sep2020   330457362  SIR-F  1.00  0.016572   \n",
        "\n",
        "                  kappa       rho     sigma  tau  1/beta [day]  1/gamma [day]  \\\n",
        "Country Phase                                                                   \n",
        "Russia  0th    0.544883  0.034081  0.002299  360             7            108   \n",
        "        1st    0.000117  0.013019  0.005178  360            19             48   \n",
        "        2nd    0.000098  0.007637  0.004942  360            32             50   \n",
        "        3rd    0.000018  0.005605  0.005747  360            44             43   \n",
        "        4th    0.000010  0.004799  0.005076  360            52             49   \n",
        "        5th    0.000010  0.003841  0.003732  360            65             66   \n",
        "        6th    0.000002  0.002769  0.003016  360            90             82   \n",
        "        7th    0.000064  0.002338  0.002736  360           106             91   \n",
        "        8th    0.000050  0.001942  0.002635  360           128             94   \n",
        "        9th    0.000006  0.001628  0.002071  360           153            120   \n",
        "        10th   0.000003  0.001378  0.001540  360           181            162   \n",
        "        11th   0.000006  0.001354  0.001330  360           184            188   \n",
        "\n",
        "               alpha1 [-]  1/alpha2 [day]      RMSLE  Trials       Runtime  \n",
        "Country Phase                                                               \n",
        "Russia  0th         0.603               0  18.966727    2026  1 min  0 sec  \n",
        "        1st         0.001            2144   0.066392    2001  1 min  0 sec  \n",
        "        2nd         0.000            2549   0.057008    2030  1 min  0 sec  \n",
        "        3rd         0.017           14003   0.078909    2012  1 min  0 sec  \n",
        "        4th         0.018           25079   0.065719    2020  1 min  0 sec  \n",
        "        5th         0.018           25086   0.058438    2010  1 min  0 sec  \n",
        "        6th         0.022          132403   0.049641    2020  1 min  0 sec  \n",
        "        7th         0.000            3932   0.049666    2041  1 min  0 sec  \n",
        "        8th         0.000            4983   0.062564    2005  1 min  0 sec  \n",
        "        9th         0.019           40976   0.058755    1994  1 min  0 sec  \n",
        "        10th        0.019           83203   0.046084    2006  1 min  0 sec  \n",
        "        11th        0.017           40976   0.003516    1487  0 min 40 sec  "
       ]
      }
     ],
     "prompt_number": 12
    },
    {
     "cell_type": "markdown",
     "metadata": {},
     "source": [
      "## Compare the history of parameters\n",
      "Here, compare the history of parameter values if countries."
     ]
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "# All parameter/day parameter/Rt/OxCGRT\n",
      "analyser.track().head()"
     ],
     "language": "python",
     "metadata": {},
     "outputs": [
      {
       "html": [
        "<div>\n",
        "<style scoped>\n",
        "    .dataframe tbody tr th:only-of-type {\n",
        "        vertical-align: middle;\n",
        "    }\n",
        "\n",
        "    .dataframe tbody tr th {\n",
        "        vertical-align: top;\n",
        "    }\n",
        "\n",
        "    .dataframe thead th {\n",
        "        text-align: right;\n",
        "    }\n",
        "</style>\n",
        "<table border=\"1\" class=\"dataframe\">\n",
        "  <thead>\n",
        "    <tr style=\"text-align: right;\">\n",
        "      <th></th>\n",
        "      <th>Date</th>\n",
        "      <th>Country</th>\n",
        "      <th>theta</th>\n",
        "      <th>kappa</th>\n",
        "      <th>rho</th>\n",
        "      <th>sigma</th>\n",
        "      <th>alpha1 [-]</th>\n",
        "      <th>1/alpha2 [day]</th>\n",
        "      <th>1/beta [day]</th>\n",
        "      <th>1/gamma [day]</th>\n",
        "      <th>...</th>\n",
        "      <th>Cancel_events</th>\n",
        "      <th>Gatherings_restrictions</th>\n",
        "      <th>Transport_closing</th>\n",
        "      <th>Stay_home_restrictions</th>\n",
        "      <th>Internal_movement_restrictions</th>\n",
        "      <th>International_movement_restrictions</th>\n",
        "      <th>Information_campaigns</th>\n",
        "      <th>Testing_policy</th>\n",
        "      <th>Contact_tracing</th>\n",
        "      <th>Stringency_index</th>\n",
        "    </tr>\n",
        "  </thead>\n",
        "  <tbody>\n",
        "    <tr>\n",
        "      <th>0</th>\n",
        "      <td>2020-02-26</td>\n",
        "      <td>Iran</td>\n",
        "      <td>0.23731</td>\n",
        "      <td>0.00084104</td>\n",
        "      <td>0.0519427</td>\n",
        "      <td>0.00661676</td>\n",
        "      <td>0.237</td>\n",
        "      <td>297</td>\n",
        "      <td>4</td>\n",
        "      <td>37</td>\n",
        "      <td>...</td>\n",
        "      <td>2</td>\n",
        "      <td>0</td>\n",
        "      <td>0</td>\n",
        "      <td>0</td>\n",
        "      <td>0</td>\n",
        "      <td>0</td>\n",
        "      <td>1</td>\n",
        "      <td>0</td>\n",
        "      <td>0</td>\n",
        "      <td>20.37</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>1</th>\n",
        "      <td>2020-02-27</td>\n",
        "      <td>Iran</td>\n",
        "      <td>0.23731</td>\n",
        "      <td>0.00084104</td>\n",
        "      <td>0.0519427</td>\n",
        "      <td>0.00661676</td>\n",
        "      <td>0.237</td>\n",
        "      <td>297</td>\n",
        "      <td>4</td>\n",
        "      <td>37</td>\n",
        "      <td>...</td>\n",
        "      <td>2</td>\n",
        "      <td>0</td>\n",
        "      <td>0</td>\n",
        "      <td>0</td>\n",
        "      <td>0</td>\n",
        "      <td>0</td>\n",
        "      <td>1</td>\n",
        "      <td>0</td>\n",
        "      <td>0</td>\n",
        "      <td>20.37</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>2</th>\n",
        "      <td>2020-02-28</td>\n",
        "      <td>Iran</td>\n",
        "      <td>0.23731</td>\n",
        "      <td>0.00084104</td>\n",
        "      <td>0.0519427</td>\n",
        "      <td>0.00661676</td>\n",
        "      <td>0.237</td>\n",
        "      <td>297</td>\n",
        "      <td>4</td>\n",
        "      <td>37</td>\n",
        "      <td>...</td>\n",
        "      <td>2</td>\n",
        "      <td>0</td>\n",
        "      <td>0</td>\n",
        "      <td>0</td>\n",
        "      <td>0</td>\n",
        "      <td>0</td>\n",
        "      <td>1</td>\n",
        "      <td>0</td>\n",
        "      <td>0</td>\n",
        "      <td>20.37</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>3</th>\n",
        "      <td>2020-02-29</td>\n",
        "      <td>Iran</td>\n",
        "      <td>0.23731</td>\n",
        "      <td>0.00084104</td>\n",
        "      <td>0.0519427</td>\n",
        "      <td>0.00661676</td>\n",
        "      <td>0.237</td>\n",
        "      <td>297</td>\n",
        "      <td>4</td>\n",
        "      <td>37</td>\n",
        "      <td>...</td>\n",
        "      <td>2</td>\n",
        "      <td>0</td>\n",
        "      <td>0</td>\n",
        "      <td>0</td>\n",
        "      <td>0</td>\n",
        "      <td>0</td>\n",
        "      <td>1</td>\n",
        "      <td>0</td>\n",
        "      <td>0</td>\n",
        "      <td>20.37</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>4</th>\n",
        "      <td>2020-03-01</td>\n",
        "      <td>Iran</td>\n",
        "      <td>0.23731</td>\n",
        "      <td>0.00084104</td>\n",
        "      <td>0.0519427</td>\n",
        "      <td>0.00661676</td>\n",
        "      <td>0.237</td>\n",
        "      <td>297</td>\n",
        "      <td>4</td>\n",
        "      <td>37</td>\n",
        "      <td>...</td>\n",
        "      <td>2</td>\n",
        "      <td>0</td>\n",
        "      <td>0</td>\n",
        "      <td>0</td>\n",
        "      <td>0</td>\n",
        "      <td>0</td>\n",
        "      <td>1</td>\n",
        "      <td>0</td>\n",
        "      <td>0</td>\n",
        "      <td>20.37</td>\n",
        "    </tr>\n",
        "  </tbody>\n",
        "</table>\n",
        "<p>5 rows \u00d7 23 columns</p>\n",
        "</div>"
       ],
       "output_type": "pyout",
       "prompt_number": 13,
       "text": [
        "        Date Country    theta       kappa        rho       sigma alpha1 [-]  \\\n",
        "0 2020-02-26    Iran  0.23731  0.00084104  0.0519427  0.00661676      0.237   \n",
        "1 2020-02-27    Iran  0.23731  0.00084104  0.0519427  0.00661676      0.237   \n",
        "2 2020-02-28    Iran  0.23731  0.00084104  0.0519427  0.00661676      0.237   \n",
        "3 2020-02-29    Iran  0.23731  0.00084104  0.0519427  0.00661676      0.237   \n",
        "4 2020-03-01    Iran  0.23731  0.00084104  0.0519427  0.00661676      0.237   \n",
        "\n",
        "  1/alpha2 [day] 1/beta [day] 1/gamma [day]  ... Cancel_events  \\\n",
        "0            297            4            37  ...             2   \n",
        "1            297            4            37  ...             2   \n",
        "2            297            4            37  ...             2   \n",
        "3            297            4            37  ...             2   \n",
        "4            297            4            37  ...             2   \n",
        "\n",
        "   Gatherings_restrictions  Transport_closing  Stay_home_restrictions  \\\n",
        "0                        0                  0                       0   \n",
        "1                        0                  0                       0   \n",
        "2                        0                  0                       0   \n",
        "3                        0                  0                       0   \n",
        "4                        0                  0                       0   \n",
        "\n",
        "   Internal_movement_restrictions  International_movement_restrictions  \\\n",
        "0                               0                                    0   \n",
        "1                               0                                    0   \n",
        "2                               0                                    0   \n",
        "3                               0                                    0   \n",
        "4                               0                                    0   \n",
        "\n",
        "   Information_campaigns  Testing_policy  Contact_tracing  Stringency_index  \n",
        "0                      1               0                0             20.37  \n",
        "1                      1               0                0             20.37  \n",
        "2                      1               0                0             20.37  \n",
        "3                      1               0                0             20.37  \n",
        "4                      1               0                0             20.37  \n",
        "\n",
        "[5 rows x 23 columns]"
       ]
      }
     ],
     "prompt_number": 13
    },
    {
     "cell_type": "heading",
     "level": 3,
     "metadata": {},
     "source": [
      "$Rt$: Reprodcution number $\\mathrm{[-]}$"
     ]
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "analyser.param_history(\"Rt\", roll_window=None).tail()"
     ],
     "language": "python",
     "metadata": {},
     "outputs": [
      {
       "output_type": "display_data",
       "png": "\n",
       "text": [
        "<Figure size 648x432 with 1 Axes>"
       ]
      },
      {
       "html": [
        "<div>\n",
        "<style scoped>\n",
        "    .dataframe tbody tr th:only-of-type {\n",
        "        vertical-align: middle;\n",
        "    }\n",
        "\n",
        "    .dataframe tbody tr th {\n",
        "        vertical-align: top;\n",
        "    }\n",
        "\n",
        "    .dataframe thead th {\n",
        "        text-align: right;\n",
        "    }\n",
        "</style>\n",
        "<table border=\"1\" class=\"dataframe\">\n",
        "  <thead>\n",
        "    <tr style=\"text-align: right;\">\n",
        "      <th>Country</th>\n",
        "      <th>Bahrain</th>\n",
        "      <th>Bangladesh</th>\n",
        "      <th>France</th>\n",
        "      <th>Georgia</th>\n",
        "      <th>Guinea</th>\n",
        "      <th>Iran</th>\n",
        "      <th>Italy</th>\n",
        "      <th>Kuwait</th>\n",
        "      <th>Mexico</th>\n",
        "      <th>Nigeria</th>\n",
        "      <th>Russia</th>\n",
        "      <th>United Arab Emirates</th>\n",
        "      <th>United States</th>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>Date</th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "    </tr>\n",
        "  </thead>\n",
        "  <tbody>\n",
        "    <tr>\n",
        "      <th>2020-09-08</th>\n",
        "      <td>1.95</td>\n",
        "      <td>0.76</td>\n",
        "      <td>33.31</td>\n",
        "      <td>3.37</td>\n",
        "      <td>0.74</td>\n",
        "      <td>1.08</td>\n",
        "      <td>3.96</td>\n",
        "      <td>1.29</td>\n",
        "      <td>1.01</td>\n",
        "      <td>0.68</td>\n",
        "      <td>1.0</td>\n",
        "      <td>1.66</td>\n",
        "      <td>2.05</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>2020-09-09</th>\n",
        "      <td>1.95</td>\n",
        "      <td>0.76</td>\n",
        "      <td>33.31</td>\n",
        "      <td>3.37</td>\n",
        "      <td>0.74</td>\n",
        "      <td>1.08</td>\n",
        "      <td>3.96</td>\n",
        "      <td>1.29</td>\n",
        "      <td>1.01</td>\n",
        "      <td>0.68</td>\n",
        "      <td>1.0</td>\n",
        "      <td>1.66</td>\n",
        "      <td>2.05</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>2020-09-10</th>\n",
        "      <td>1.95</td>\n",
        "      <td>0.76</td>\n",
        "      <td>33.31</td>\n",
        "      <td>3.37</td>\n",
        "      <td>0.74</td>\n",
        "      <td>1.08</td>\n",
        "      <td>3.96</td>\n",
        "      <td>1.29</td>\n",
        "      <td>1.01</td>\n",
        "      <td>0.68</td>\n",
        "      <td>1.0</td>\n",
        "      <td>1.66</td>\n",
        "      <td>2.05</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>2020-09-11</th>\n",
        "      <td>1.95</td>\n",
        "      <td>0.76</td>\n",
        "      <td>33.31</td>\n",
        "      <td>3.37</td>\n",
        "      <td>0.74</td>\n",
        "      <td>1.08</td>\n",
        "      <td>3.96</td>\n",
        "      <td>1.29</td>\n",
        "      <td>1.01</td>\n",
        "      <td>0.68</td>\n",
        "      <td>1.0</td>\n",
        "      <td>1.66</td>\n",
        "      <td>2.05</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>2020-09-12</th>\n",
        "      <td>1.95</td>\n",
        "      <td>0.76</td>\n",
        "      <td>33.31</td>\n",
        "      <td>3.37</td>\n",
        "      <td>0.74</td>\n",
        "      <td>1.08</td>\n",
        "      <td>3.96</td>\n",
        "      <td>1.29</td>\n",
        "      <td>1.01</td>\n",
        "      <td>0.68</td>\n",
        "      <td>1.0</td>\n",
        "      <td>1.66</td>\n",
        "      <td>2.05</td>\n",
        "    </tr>\n",
        "  </tbody>\n",
        "</table>\n",
        "</div>"
       ],
       "output_type": "pyout",
       "prompt_number": 14,
       "text": [
        "Country     Bahrain  Bangladesh  France  Georgia  Guinea  Iran  Italy  Kuwait  \\\n",
        "Date                                                                            \n",
        "2020-09-08     1.95        0.76   33.31     3.37    0.74  1.08   3.96    1.29   \n",
        "2020-09-09     1.95        0.76   33.31     3.37    0.74  1.08   3.96    1.29   \n",
        "2020-09-10     1.95        0.76   33.31     3.37    0.74  1.08   3.96    1.29   \n",
        "2020-09-11     1.95        0.76   33.31     3.37    0.74  1.08   3.96    1.29   \n",
        "2020-09-12     1.95        0.76   33.31     3.37    0.74  1.08   3.96    1.29   \n",
        "\n",
        "Country     Mexico  Nigeria  Russia  United Arab Emirates  United States  \n",
        "Date                                                                      \n",
        "2020-09-08    1.01     0.68     1.0                  1.66           2.05  \n",
        "2020-09-09    1.01     0.68     1.0                  1.66           2.05  \n",
        "2020-09-10    1.01     0.68     1.0                  1.66           2.05  \n",
        "2020-09-11    1.01     0.68     1.0                  1.66           2.05  \n",
        "2020-09-12    1.01     0.68     1.0                  1.66           2.05  "
       ]
      }
     ],
     "prompt_number": 14
    },
    {
     "cell_type": "heading",
     "level": 3,
     "metadata": {},
     "source": [
      "$\\rho$: Effective contact rate $\\mathrm{[-]}$"
     ]
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "analyser.param_history(\"rho\", roll_window=None).tail()"
     ],
     "language": "python",
     "metadata": {},
     "outputs": [
      {
       "output_type": "display_data",
       "png": "\n",
       "text": [
        "<Figure size 648x432 with 1 Axes>"
       ]
      },
      {
       "html": [
        "<div>\n",
        "<style scoped>\n",
        "    .dataframe tbody tr th:only-of-type {\n",
        "        vertical-align: middle;\n",
        "    }\n",
        "\n",
        "    .dataframe tbody tr th {\n",
        "        vertical-align: top;\n",
        "    }\n",
        "\n",
        "    .dataframe thead th {\n",
        "        text-align: right;\n",
        "    }\n",
        "</style>\n",
        "<table border=\"1\" class=\"dataframe\">\n",
        "  <thead>\n",
        "    <tr style=\"text-align: right;\">\n",
        "      <th>Country</th>\n",
        "      <th>Bahrain</th>\n",
        "      <th>Bangladesh</th>\n",
        "      <th>France</th>\n",
        "      <th>Georgia</th>\n",
        "      <th>Guinea</th>\n",
        "      <th>Iran</th>\n",
        "      <th>Italy</th>\n",
        "      <th>Kuwait</th>\n",
        "      <th>Mexico</th>\n",
        "      <th>Nigeria</th>\n",
        "      <th>Russia</th>\n",
        "      <th>United Arab Emirates</th>\n",
        "      <th>United States</th>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>Date</th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "    </tr>\n",
        "  </thead>\n",
        "  <tbody>\n",
        "    <tr>\n",
        "      <th>2020-09-08</th>\n",
        "      <td>0.033148</td>\n",
        "      <td>0.005808</td>\n",
        "      <td>0.008931</td>\n",
        "      <td>0.024407</td>\n",
        "      <td>0.014885</td>\n",
        "      <td>0.016397</td>\n",
        "      <td>0.013813</td>\n",
        "      <td>0.020551</td>\n",
        "      <td>0.032307</td>\n",
        "      <td>0.003511</td>\n",
        "      <td>0.001354</td>\n",
        "      <td>0.014157</td>\n",
        "      <td>0.002414</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>2020-09-09</th>\n",
        "      <td>0.033148</td>\n",
        "      <td>0.005808</td>\n",
        "      <td>0.008931</td>\n",
        "      <td>0.024407</td>\n",
        "      <td>0.014885</td>\n",
        "      <td>0.016397</td>\n",
        "      <td>0.013813</td>\n",
        "      <td>0.020551</td>\n",
        "      <td>0.032307</td>\n",
        "      <td>0.003511</td>\n",
        "      <td>0.001354</td>\n",
        "      <td>0.014157</td>\n",
        "      <td>0.002414</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>2020-09-10</th>\n",
        "      <td>0.033148</td>\n",
        "      <td>0.005808</td>\n",
        "      <td>0.008931</td>\n",
        "      <td>0.024407</td>\n",
        "      <td>0.014885</td>\n",
        "      <td>0.016397</td>\n",
        "      <td>0.013813</td>\n",
        "      <td>0.020551</td>\n",
        "      <td>0.032307</td>\n",
        "      <td>0.003511</td>\n",
        "      <td>0.001354</td>\n",
        "      <td>0.014157</td>\n",
        "      <td>0.002414</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>2020-09-11</th>\n",
        "      <td>0.033148</td>\n",
        "      <td>0.005808</td>\n",
        "      <td>0.008931</td>\n",
        "      <td>0.024407</td>\n",
        "      <td>0.014885</td>\n",
        "      <td>0.016397</td>\n",
        "      <td>0.013813</td>\n",
        "      <td>0.020551</td>\n",
        "      <td>0.032307</td>\n",
        "      <td>0.003511</td>\n",
        "      <td>0.001354</td>\n",
        "      <td>0.014157</td>\n",
        "      <td>0.002414</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>2020-09-12</th>\n",
        "      <td>0.033148</td>\n",
        "      <td>0.005808</td>\n",
        "      <td>0.008931</td>\n",
        "      <td>0.024407</td>\n",
        "      <td>0.014885</td>\n",
        "      <td>0.016397</td>\n",
        "      <td>0.013813</td>\n",
        "      <td>0.020551</td>\n",
        "      <td>0.032307</td>\n",
        "      <td>0.003511</td>\n",
        "      <td>0.001354</td>\n",
        "      <td>0.014157</td>\n",
        "      <td>0.002414</td>\n",
        "    </tr>\n",
        "  </tbody>\n",
        "</table>\n",
        "</div>"
       ],
       "output_type": "pyout",
       "prompt_number": 15,
       "text": [
        "Country      Bahrain  Bangladesh    France   Georgia    Guinea      Iran  \\\n",
        "Date                                                                       \n",
        "2020-09-08  0.033148    0.005808  0.008931  0.024407  0.014885  0.016397   \n",
        "2020-09-09  0.033148    0.005808  0.008931  0.024407  0.014885  0.016397   \n",
        "2020-09-10  0.033148    0.005808  0.008931  0.024407  0.014885  0.016397   \n",
        "2020-09-11  0.033148    0.005808  0.008931  0.024407  0.014885  0.016397   \n",
        "2020-09-12  0.033148    0.005808  0.008931  0.024407  0.014885  0.016397   \n",
        "\n",
        "Country        Italy    Kuwait    Mexico   Nigeria    Russia  \\\n",
        "Date                                                           \n",
        "2020-09-08  0.013813  0.020551  0.032307  0.003511  0.001354   \n",
        "2020-09-09  0.013813  0.020551  0.032307  0.003511  0.001354   \n",
        "2020-09-10  0.013813  0.020551  0.032307  0.003511  0.001354   \n",
        "2020-09-11  0.013813  0.020551  0.032307  0.003511  0.001354   \n",
        "2020-09-12  0.013813  0.020551  0.032307  0.003511  0.001354   \n",
        "\n",
        "Country     United Arab Emirates  United States  \n",
        "Date                                             \n",
        "2020-09-08              0.014157       0.002414  \n",
        "2020-09-09              0.014157       0.002414  \n",
        "2020-09-10              0.014157       0.002414  \n",
        "2020-09-11              0.014157       0.002414  \n",
        "2020-09-12              0.014157       0.002414  "
       ]
      }
     ],
     "prompt_number": 15
    },
    {
     "cell_type": "heading",
     "level": 3,
     "metadata": {},
     "source": [
      "$\\sigma$: Recovery rate $\\mathrm{[-]}$"
     ]
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "analyser.param_history(\"sigma\", roll_window=None).tail()"
     ],
     "language": "python",
     "metadata": {},
     "outputs": [
      {
       "output_type": "display_data",
       "png": "\n",
       "text": [
        "<Figure size 648x432 with 1 Axes>"
       ]
      },
      {
       "html": [
        "<div>\n",
        "<style scoped>\n",
        "    .dataframe tbody tr th:only-of-type {\n",
        "        vertical-align: middle;\n",
        "    }\n",
        "\n",
        "    .dataframe tbody tr th {\n",
        "        vertical-align: top;\n",
        "    }\n",
        "\n",
        "    .dataframe thead th {\n",
        "        text-align: right;\n",
        "    }\n",
        "</style>\n",
        "<table border=\"1\" class=\"dataframe\">\n",
        "  <thead>\n",
        "    <tr style=\"text-align: right;\">\n",
        "      <th>Country</th>\n",
        "      <th>Bahrain</th>\n",
        "      <th>Bangladesh</th>\n",
        "      <th>France</th>\n",
        "      <th>Georgia</th>\n",
        "      <th>Guinea</th>\n",
        "      <th>Iran</th>\n",
        "      <th>Italy</th>\n",
        "      <th>Kuwait</th>\n",
        "      <th>Mexico</th>\n",
        "      <th>Nigeria</th>\n",
        "      <th>Russia</th>\n",
        "      <th>United Arab Emirates</th>\n",
        "      <th>United States</th>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>Date</th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "    </tr>\n",
        "  </thead>\n",
        "  <tbody>\n",
        "    <tr>\n",
        "      <th>2020-09-08</th>\n",
        "      <td>0.016911</td>\n",
        "      <td>0.007506</td>\n",
        "      <td>0.000244</td>\n",
        "      <td>0.007226</td>\n",
        "      <td>0.020056</td>\n",
        "      <td>0.014254</td>\n",
        "      <td>0.003425</td>\n",
        "      <td>0.01581</td>\n",
        "      <td>0.029098</td>\n",
        "      <td>0.005071</td>\n",
        "      <td>0.00133</td>\n",
        "      <td>0.008498</td>\n",
        "      <td>0.001151</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>2020-09-09</th>\n",
        "      <td>0.016911</td>\n",
        "      <td>0.007506</td>\n",
        "      <td>0.000244</td>\n",
        "      <td>0.007226</td>\n",
        "      <td>0.020056</td>\n",
        "      <td>0.014254</td>\n",
        "      <td>0.003425</td>\n",
        "      <td>0.01581</td>\n",
        "      <td>0.029098</td>\n",
        "      <td>0.005071</td>\n",
        "      <td>0.00133</td>\n",
        "      <td>0.008498</td>\n",
        "      <td>0.001151</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>2020-09-10</th>\n",
        "      <td>0.016911</td>\n",
        "      <td>0.007506</td>\n",
        "      <td>0.000244</td>\n",
        "      <td>0.007226</td>\n",
        "      <td>0.020056</td>\n",
        "      <td>0.014254</td>\n",
        "      <td>0.003425</td>\n",
        "      <td>0.01581</td>\n",
        "      <td>0.029098</td>\n",
        "      <td>0.005071</td>\n",
        "      <td>0.00133</td>\n",
        "      <td>0.008498</td>\n",
        "      <td>0.001151</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>2020-09-11</th>\n",
        "      <td>0.016911</td>\n",
        "      <td>0.007506</td>\n",
        "      <td>0.000244</td>\n",
        "      <td>0.007226</td>\n",
        "      <td>0.020056</td>\n",
        "      <td>0.014254</td>\n",
        "      <td>0.003425</td>\n",
        "      <td>0.01581</td>\n",
        "      <td>0.029098</td>\n",
        "      <td>0.005071</td>\n",
        "      <td>0.00133</td>\n",
        "      <td>0.008498</td>\n",
        "      <td>0.001151</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>2020-09-12</th>\n",
        "      <td>0.016911</td>\n",
        "      <td>0.007506</td>\n",
        "      <td>0.000244</td>\n",
        "      <td>0.007226</td>\n",
        "      <td>0.020056</td>\n",
        "      <td>0.014254</td>\n",
        "      <td>0.003425</td>\n",
        "      <td>0.01581</td>\n",
        "      <td>0.029098</td>\n",
        "      <td>0.005071</td>\n",
        "      <td>0.00133</td>\n",
        "      <td>0.008498</td>\n",
        "      <td>0.001151</td>\n",
        "    </tr>\n",
        "  </tbody>\n",
        "</table>\n",
        "</div>"
       ],
       "output_type": "pyout",
       "prompt_number": 16,
       "text": [
        "Country      Bahrain  Bangladesh    France   Georgia    Guinea      Iran  \\\n",
        "Date                                                                       \n",
        "2020-09-08  0.016911    0.007506  0.000244  0.007226  0.020056  0.014254   \n",
        "2020-09-09  0.016911    0.007506  0.000244  0.007226  0.020056  0.014254   \n",
        "2020-09-10  0.016911    0.007506  0.000244  0.007226  0.020056  0.014254   \n",
        "2020-09-11  0.016911    0.007506  0.000244  0.007226  0.020056  0.014254   \n",
        "2020-09-12  0.016911    0.007506  0.000244  0.007226  0.020056  0.014254   \n",
        "\n",
        "Country        Italy   Kuwait    Mexico   Nigeria   Russia  \\\n",
        "Date                                                         \n",
        "2020-09-08  0.003425  0.01581  0.029098  0.005071  0.00133   \n",
        "2020-09-09  0.003425  0.01581  0.029098  0.005071  0.00133   \n",
        "2020-09-10  0.003425  0.01581  0.029098  0.005071  0.00133   \n",
        "2020-09-11  0.003425  0.01581  0.029098  0.005071  0.00133   \n",
        "2020-09-12  0.003425  0.01581  0.029098  0.005071  0.00133   \n",
        "\n",
        "Country     United Arab Emirates  United States  \n",
        "Date                                             \n",
        "2020-09-08              0.008498       0.001151  \n",
        "2020-09-09              0.008498       0.001151  \n",
        "2020-09-10              0.008498       0.001151  \n",
        "2020-09-11              0.008498       0.001151  \n",
        "2020-09-12              0.008498       0.001151  "
       ]
      }
     ],
     "prompt_number": 16
    },
    {
     "cell_type": "heading",
     "level": 3,
     "metadata": {},
     "source": [
      "$\\kappa$: Mortality rate of infected cases $\\mathrm{[-]}$"
     ]
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "analyser.param_history(\"kappa\", roll_window=None).tail()"
     ],
     "language": "python",
     "metadata": {},
     "outputs": [
      {
       "output_type": "display_data",
       "png": "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\n",
       "text": [
        "<Figure size 648x432 with 1 Axes>"
       ]
      },
      {
       "html": [
        "<div>\n",
        "<style scoped>\n",
        "    .dataframe tbody tr th:only-of-type {\n",
        "        vertical-align: middle;\n",
        "    }\n",
        "\n",
        "    .dataframe tbody tr th {\n",
        "        vertical-align: top;\n",
        "    }\n",
        "\n",
        "    .dataframe thead th {\n",
        "        text-align: right;\n",
        "    }\n",
        "</style>\n",
        "<table border=\"1\" class=\"dataframe\">\n",
        "  <thead>\n",
        "    <tr style=\"text-align: right;\">\n",
        "      <th>Country</th>\n",
        "      <th>Bahrain</th>\n",
        "      <th>Bangladesh</th>\n",
        "      <th>France</th>\n",
        "      <th>Georgia</th>\n",
        "      <th>Guinea</th>\n",
        "      <th>Iran</th>\n",
        "      <th>Italy</th>\n",
        "      <th>Kuwait</th>\n",
        "      <th>Mexico</th>\n",
        "      <th>Nigeria</th>\n",
        "      <th>Russia</th>\n",
        "      <th>United Arab Emirates</th>\n",
        "      <th>United States</th>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>Date</th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "    </tr>\n",
        "  </thead>\n",
        "  <tbody>\n",
        "    <tr>\n",
        "      <th>2020-09-08</th>\n",
        "      <td>0.000079</td>\n",
        "      <td>0.000096</td>\n",
        "      <td>0.000024</td>\n",
        "      <td>0.000002</td>\n",
        "      <td>0.000113</td>\n",
        "      <td>0.000257</td>\n",
        "      <td>0.000064</td>\n",
        "      <td>0.000087</td>\n",
        "      <td>0.001293</td>\n",
        "      <td>0.000087</td>\n",
        "      <td>0.000006</td>\n",
        "      <td>0.000021</td>\n",
        "      <td>0.000002</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>2020-09-09</th>\n",
        "      <td>0.000079</td>\n",
        "      <td>0.000096</td>\n",
        "      <td>0.000024</td>\n",
        "      <td>0.000002</td>\n",
        "      <td>0.000113</td>\n",
        "      <td>0.000257</td>\n",
        "      <td>0.000064</td>\n",
        "      <td>0.000087</td>\n",
        "      <td>0.001293</td>\n",
        "      <td>0.000087</td>\n",
        "      <td>0.000006</td>\n",
        "      <td>0.000021</td>\n",
        "      <td>0.000002</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>2020-09-10</th>\n",
        "      <td>0.000079</td>\n",
        "      <td>0.000096</td>\n",
        "      <td>0.000024</td>\n",
        "      <td>0.000002</td>\n",
        "      <td>0.000113</td>\n",
        "      <td>0.000257</td>\n",
        "      <td>0.000064</td>\n",
        "      <td>0.000087</td>\n",
        "      <td>0.001293</td>\n",
        "      <td>0.000087</td>\n",
        "      <td>0.000006</td>\n",
        "      <td>0.000021</td>\n",
        "      <td>0.000002</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>2020-09-11</th>\n",
        "      <td>0.000079</td>\n",
        "      <td>0.000096</td>\n",
        "      <td>0.000024</td>\n",
        "      <td>0.000002</td>\n",
        "      <td>0.000113</td>\n",
        "      <td>0.000257</td>\n",
        "      <td>0.000064</td>\n",
        "      <td>0.000087</td>\n",
        "      <td>0.001293</td>\n",
        "      <td>0.000087</td>\n",
        "      <td>0.000006</td>\n",
        "      <td>0.000021</td>\n",
        "      <td>0.000002</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>2020-09-12</th>\n",
        "      <td>0.000079</td>\n",
        "      <td>0.000096</td>\n",
        "      <td>0.000024</td>\n",
        "      <td>0.000002</td>\n",
        "      <td>0.000113</td>\n",
        "      <td>0.000257</td>\n",
        "      <td>0.000064</td>\n",
        "      <td>0.000087</td>\n",
        "      <td>0.001293</td>\n",
        "      <td>0.000087</td>\n",
        "      <td>0.000006</td>\n",
        "      <td>0.000021</td>\n",
        "      <td>0.000002</td>\n",
        "    </tr>\n",
        "  </tbody>\n",
        "</table>\n",
        "</div>"
       ],
       "output_type": "pyout",
       "prompt_number": 17,
       "text": [
        "Country      Bahrain  Bangladesh    France   Georgia    Guinea      Iran  \\\n",
        "Date                                                                       \n",
        "2020-09-08  0.000079    0.000096  0.000024  0.000002  0.000113  0.000257   \n",
        "2020-09-09  0.000079    0.000096  0.000024  0.000002  0.000113  0.000257   \n",
        "2020-09-10  0.000079    0.000096  0.000024  0.000002  0.000113  0.000257   \n",
        "2020-09-11  0.000079    0.000096  0.000024  0.000002  0.000113  0.000257   \n",
        "2020-09-12  0.000079    0.000096  0.000024  0.000002  0.000113  0.000257   \n",
        "\n",
        "Country        Italy    Kuwait    Mexico   Nigeria    Russia  \\\n",
        "Date                                                           \n",
        "2020-09-08  0.000064  0.000087  0.001293  0.000087  0.000006   \n",
        "2020-09-09  0.000064  0.000087  0.001293  0.000087  0.000006   \n",
        "2020-09-10  0.000064  0.000087  0.001293  0.000087  0.000006   \n",
        "2020-09-11  0.000064  0.000087  0.001293  0.000087  0.000006   \n",
        "2020-09-12  0.000064  0.000087  0.001293  0.000087  0.000006   \n",
        "\n",
        "Country     United Arab Emirates  United States  \n",
        "Date                                             \n",
        "2020-09-08              0.000021       0.000002  \n",
        "2020-09-09              0.000021       0.000002  \n",
        "2020-09-10              0.000021       0.000002  \n",
        "2020-09-11              0.000021       0.000002  \n",
        "2020-09-12              0.000021       0.000002  "
       ]
      }
     ],
     "prompt_number": 17
    },
    {
     "cell_type": "heading",
     "level": 3,
     "metadata": {},
     "source": [
      "$\\theta$: Mortality rate of S$^\\ast$ cases $\\mathrm{[-]}$"
     ]
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "analyser.param_history(\"theta\", roll_window=None).tail()"
     ],
     "language": "python",
     "metadata": {},
     "outputs": [
      {
       "output_type": "display_data",
       "png": "\n",
       "text": [
        "<Figure size 648x432 with 1 Axes>"
       ]
      },
      {
       "html": [
        "<div>\n",
        "<style scoped>\n",
        "    .dataframe tbody tr th:only-of-type {\n",
        "        vertical-align: middle;\n",
        "    }\n",
        "\n",
        "    .dataframe tbody tr th {\n",
        "        vertical-align: top;\n",
        "    }\n",
        "\n",
        "    .dataframe thead th {\n",
        "        text-align: right;\n",
        "    }\n",
        "</style>\n",
        "<table border=\"1\" class=\"dataframe\">\n",
        "  <thead>\n",
        "    <tr style=\"text-align: right;\">\n",
        "      <th>Country</th>\n",
        "      <th>Bahrain</th>\n",
        "      <th>Bangladesh</th>\n",
        "      <th>France</th>\n",
        "      <th>Georgia</th>\n",
        "      <th>Guinea</th>\n",
        "      <th>Iran</th>\n",
        "      <th>Italy</th>\n",
        "      <th>Kuwait</th>\n",
        "      <th>Mexico</th>\n",
        "      <th>Nigeria</th>\n",
        "      <th>Russia</th>\n",
        "      <th>United Arab Emirates</th>\n",
        "      <th>United States</th>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>Date</th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "    </tr>\n",
        "  </thead>\n",
        "  <tbody>\n",
        "    <tr>\n",
        "      <th>2020-09-08</th>\n",
        "      <td>0.000343</td>\n",
        "      <td>0.001138</td>\n",
        "      <td>0.000997</td>\n",
        "      <td>0.000905</td>\n",
        "      <td>0.000329</td>\n",
        "      <td>0.042052</td>\n",
        "      <td>0.000221</td>\n",
        "      <td>0.000287</td>\n",
        "      <td>0.053321</td>\n",
        "      <td>0.000519</td>\n",
        "      <td>0.016572</td>\n",
        "      <td>0.000679</td>\n",
        "      <td>0.019011</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>2020-09-09</th>\n",
        "      <td>0.000343</td>\n",
        "      <td>0.001138</td>\n",
        "      <td>0.000997</td>\n",
        "      <td>0.000905</td>\n",
        "      <td>0.000329</td>\n",
        "      <td>0.042052</td>\n",
        "      <td>0.000221</td>\n",
        "      <td>0.000287</td>\n",
        "      <td>0.053321</td>\n",
        "      <td>0.000519</td>\n",
        "      <td>0.016572</td>\n",
        "      <td>0.000679</td>\n",
        "      <td>0.019011</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>2020-09-10</th>\n",
        "      <td>0.000343</td>\n",
        "      <td>0.001138</td>\n",
        "      <td>0.000997</td>\n",
        "      <td>0.000905</td>\n",
        "      <td>0.000329</td>\n",
        "      <td>0.042052</td>\n",
        "      <td>0.000221</td>\n",
        "      <td>0.000287</td>\n",
        "      <td>0.053321</td>\n",
        "      <td>0.000519</td>\n",
        "      <td>0.016572</td>\n",
        "      <td>0.000679</td>\n",
        "      <td>0.019011</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>2020-09-11</th>\n",
        "      <td>0.000343</td>\n",
        "      <td>0.001138</td>\n",
        "      <td>0.000997</td>\n",
        "      <td>0.000905</td>\n",
        "      <td>0.000329</td>\n",
        "      <td>0.042052</td>\n",
        "      <td>0.000221</td>\n",
        "      <td>0.000287</td>\n",
        "      <td>0.053321</td>\n",
        "      <td>0.000519</td>\n",
        "      <td>0.016572</td>\n",
        "      <td>0.000679</td>\n",
        "      <td>0.019011</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>2020-09-12</th>\n",
        "      <td>0.000343</td>\n",
        "      <td>0.001138</td>\n",
        "      <td>0.000997</td>\n",
        "      <td>0.000905</td>\n",
        "      <td>0.000329</td>\n",
        "      <td>0.042052</td>\n",
        "      <td>0.000221</td>\n",
        "      <td>0.000287</td>\n",
        "      <td>0.053321</td>\n",
        "      <td>0.000519</td>\n",
        "      <td>0.016572</td>\n",
        "      <td>0.000679</td>\n",
        "      <td>0.019011</td>\n",
        "    </tr>\n",
        "  </tbody>\n",
        "</table>\n",
        "</div>"
       ],
       "output_type": "pyout",
       "prompt_number": 18,
       "text": [
        "Country      Bahrain  Bangladesh    France   Georgia    Guinea      Iran  \\\n",
        "Date                                                                       \n",
        "2020-09-08  0.000343    0.001138  0.000997  0.000905  0.000329  0.042052   \n",
        "2020-09-09  0.000343    0.001138  0.000997  0.000905  0.000329  0.042052   \n",
        "2020-09-10  0.000343    0.001138  0.000997  0.000905  0.000329  0.042052   \n",
        "2020-09-11  0.000343    0.001138  0.000997  0.000905  0.000329  0.042052   \n",
        "2020-09-12  0.000343    0.001138  0.000997  0.000905  0.000329  0.042052   \n",
        "\n",
        "Country        Italy    Kuwait    Mexico   Nigeria    Russia  \\\n",
        "Date                                                           \n",
        "2020-09-08  0.000221  0.000287  0.053321  0.000519  0.016572   \n",
        "2020-09-09  0.000221  0.000287  0.053321  0.000519  0.016572   \n",
        "2020-09-10  0.000221  0.000287  0.053321  0.000519  0.016572   \n",
        "2020-09-11  0.000221  0.000287  0.053321  0.000519  0.016572   \n",
        "2020-09-12  0.000221  0.000287  0.053321  0.000519  0.016572   \n",
        "\n",
        "Country     United Arab Emirates  United States  \n",
        "Date                                             \n",
        "2020-09-08              0.000679       0.019011  \n",
        "2020-09-09              0.000679       0.019011  \n",
        "2020-09-10              0.000679       0.019011  \n",
        "2020-09-11              0.000679       0.019011  \n",
        "2020-09-12              0.000679       0.019011  "
       ]
      }
     ],
     "prompt_number": 18
    },
    {
     "cell_type": "markdown",
     "metadata": {},
     "source": [
      "## (Experimental): Relationship of OxCGRT index and parameter values\n",
      "Government responses will impact on parameter values of ODE models about 14 days later. Here, we will investigate on the relationship of [stringency index (from OxCGRT)](https://github.com/OxCGRT/covid-policy-tracker/blob/master/documentation/index_methodology.md) and reproduction number/model parameters.\n"
     ]
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "%matplotlib inline\n",
      "from matplotlib import pyplot as plt\n",
      "import seaborn as sns\n",
      "import pandas as pd"
     ],
     "language": "python",
     "metadata": {},
     "outputs": [],
     "prompt_number": 19
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "df = analyser.track()\n",
      "param_cols = [\"Rt\", *cs.SIRF.PARAMETERS]\n",
      "oxcgrt_cols = oxcgrt_data.OXCGRT_VARS[:]\n",
      "cols = param_cols + oxcgrt_cols\n",
      "delay = 14\n",
      "\n",
      "for col in param_cols:\n",
      "    df[col] = pd.to_numeric(df[col], errors=\"coerce\")\n",
      "    df[col] = df.groupby(\"Country\")[col].shift(0 - delay)\n",
      "\n",
      "df = df.dropna(how=\"any\")\n",
      "df = df.loc[:, [\"Date\", \"Country\", *cols]]\n",
      "track_df = df.copy()\n",
      "track_df.info()"
     ],
     "language": "python",
     "metadata": {},
     "outputs": [
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "<class 'pandas.core.frame.DataFrame'>\n",
        "Int64Index: 42077 entries, 0 to 42244\n",
        "Data columns (total 19 columns):\n",
        " #   Column                               Non-Null Count  Dtype         \n",
        "---  ------                               --------------  -----         \n",
        " 0   Date                                 42077 non-null  datetime64[ns]\n",
        " 1   Country                              42077 non-null  object        \n",
        " 2   Rt                                   42077 non-null  float64       \n",
        " 3   theta                                42077 non-null  float64       \n",
        " 4   kappa                                42077 non-null  float64       \n",
        " 5   rho                                  42077 non-null  float64       \n",
        " 6   sigma                                42077 non-null  float64       \n",
        " 7   School_closing                       42077 non-null  int64         \n",
        " 8   Workplace_closing                    42077 non-null  int64         \n",
        " 9   Cancel_events                        42077 non-null  int64         \n",
        " 10  Gatherings_restrictions              42077 non-null  int64         \n",
        " 11  Transport_closing                    42077 non-null  int64         \n",
        " 12  Stay_home_restrictions               42077 non-null  int64         \n",
        " 13  Internal_movement_restrictions       42077 non-null  int64         \n",
        " 14  International_movement_restrictions  42077 non-null  int64         \n",
        " 15  Information_campaigns                42077 non-null  int64         \n",
        " 16  Testing_policy                       42077 non-null  int64         \n",
        " 17  Contact_tracing                      42077 non-null  int64         \n",
        " 18  Stringency_index                     42077 non-null  float64       \n",
        "dtypes: datetime64[ns](1), float64(6), int64(11), object(1)\n",
        "memory usage: 6.4+ MB\n"
       ]
      }
     ],
     "prompt_number": 20
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "# Correlation\n",
      "df = track_df.copy()\n",
      "df.corr().style.background_gradient(axis=None)"
     ],
     "language": "python",
     "metadata": {},
     "outputs": [
      {
       "html": [
        "<style  type=\"text/css\" >\n",
        "#T_85a05028_f4c6_11ea_86a2_525400e1035crow0_col0,#T_85a05028_f4c6_11ea_86a2_525400e1035crow1_col1,#T_85a05028_f4c6_11ea_86a2_525400e1035crow2_col2,#T_85a05028_f4c6_11ea_86a2_525400e1035crow3_col3,#T_85a05028_f4c6_11ea_86a2_525400e1035crow4_col4,#T_85a05028_f4c6_11ea_86a2_525400e1035crow5_col5,#T_85a05028_f4c6_11ea_86a2_525400e1035crow6_col6,#T_85a05028_f4c6_11ea_86a2_525400e1035crow7_col7,#T_85a05028_f4c6_11ea_86a2_525400e1035crow8_col8,#T_85a05028_f4c6_11ea_86a2_525400e1035crow9_col9,#T_85a05028_f4c6_11ea_86a2_525400e1035crow10_col10,#T_85a05028_f4c6_11ea_86a2_525400e1035crow11_col11,#T_85a05028_f4c6_11ea_86a2_525400e1035crow12_col12,#T_85a05028_f4c6_11ea_86a2_525400e1035crow13_col13,#T_85a05028_f4c6_11ea_86a2_525400e1035crow14_col14,#T_85a05028_f4c6_11ea_86a2_525400e1035crow15_col15,#T_85a05028_f4c6_11ea_86a2_525400e1035crow16_col16{\n",
        "            background-color:  #023858;\n",
        "            color:  #f1f1f1;\n",
        "        }#T_85a05028_f4c6_11ea_86a2_525400e1035crow0_col1,#T_85a05028_f4c6_11ea_86a2_525400e1035crow1_col0{\n",
        "            background-color:  #ebe6f2;\n",
        "            color:  #000000;\n",
        "        }#T_85a05028_f4c6_11ea_86a2_525400e1035crow0_col2,#T_85a05028_f4c6_11ea_86a2_525400e1035crow1_col8,#T_85a05028_f4c6_11ea_86a2_525400e1035crow2_col0,#T_85a05028_f4c6_11ea_86a2_525400e1035crow2_col14,#T_85a05028_f4c6_11ea_86a2_525400e1035crow8_col1,#T_85a05028_f4c6_11ea_86a2_525400e1035crow14_col2{\n",
        "            background-color:  #e7e3f0;\n",
        "            color:  #000000;\n",
        "        }#T_85a05028_f4c6_11ea_86a2_525400e1035crow0_col3,#T_85a05028_f4c6_11ea_86a2_525400e1035crow3_col0{\n",
        "            background-color:  #93b5d6;\n",
        "            color:  #000000;\n",
        "        }#T_85a05028_f4c6_11ea_86a2_525400e1035crow0_col4,#T_85a05028_f4c6_11ea_86a2_525400e1035crow0_col11,#T_85a05028_f4c6_11ea_86a2_525400e1035crow4_col0,#T_85a05028_f4c6_11ea_86a2_525400e1035crow11_col0{\n",
        "            background-color:  #dddbec;\n",
        "            color:  #000000;\n",
        "        }#T_85a05028_f4c6_11ea_86a2_525400e1035crow0_col5,#T_85a05028_f4c6_11ea_86a2_525400e1035crow1_col5,#T_85a05028_f4c6_11ea_86a2_525400e1035crow5_col0,#T_85a05028_f4c6_11ea_86a2_525400e1035crow5_col1{\n",
        "            background-color:  #dad9ea;\n",
        "            color:  #000000;\n",
        "        }#T_85a05028_f4c6_11ea_86a2_525400e1035crow0_col6,#T_85a05028_f4c6_11ea_86a2_525400e1035crow3_col15,#T_85a05028_f4c6_11ea_86a2_525400e1035crow6_col0,#T_85a05028_f4c6_11ea_86a2_525400e1035crow15_col3{\n",
        "            background-color:  #d1d2e6;\n",
        "            color:  #000000;\n",
        "        }#T_85a05028_f4c6_11ea_86a2_525400e1035crow0_col7,#T_85a05028_f4c6_11ea_86a2_525400e1035crow7_col0{\n",
        "            background-color:  #ced0e6;\n",
        "            color:  #000000;\n",
        "        }#T_85a05028_f4c6_11ea_86a2_525400e1035crow0_col8,#T_85a05028_f4c6_11ea_86a2_525400e1035crow1_col4,#T_85a05028_f4c6_11ea_86a2_525400e1035crow4_col1,#T_85a05028_f4c6_11ea_86a2_525400e1035crow8_col0{\n",
        "            background-color:  #c0c9e2;\n",
        "            color:  #000000;\n",
        "        }#T_85a05028_f4c6_11ea_86a2_525400e1035crow0_col9,#T_85a05028_f4c6_11ea_86a2_525400e1035crow0_col14,#T_85a05028_f4c6_11ea_86a2_525400e1035crow9_col0,#T_85a05028_f4c6_11ea_86a2_525400e1035crow14_col0{\n",
        "            background-color:  #dfddec;\n",
        "            color:  #000000;\n",
        "        }#T_85a05028_f4c6_11ea_86a2_525400e1035crow0_col10,#T_85a05028_f4c6_11ea_86a2_525400e1035crow10_col0{\n",
        "            background-color:  #e0deed;\n",
        "            color:  #000000;\n",
        "        }#T_85a05028_f4c6_11ea_86a2_525400e1035crow0_col12,#T_85a05028_f4c6_11ea_86a2_525400e1035crow12_col0{\n",
        "            background-color:  #fff7fb;\n",
        "            color:  #000000;\n",
        "        }#T_85a05028_f4c6_11ea_86a2_525400e1035crow0_col13,#T_85a05028_f4c6_11ea_86a2_525400e1035crow1_col16,#T_85a05028_f4c6_11ea_86a2_525400e1035crow2_col4,#T_85a05028_f4c6_11ea_86a2_525400e1035crow3_col6,#T_85a05028_f4c6_11ea_86a2_525400e1035crow4_col2,#T_85a05028_f4c6_11ea_86a2_525400e1035crow6_col3,#T_85a05028_f4c6_11ea_86a2_525400e1035crow13_col0,#T_85a05028_f4c6_11ea_86a2_525400e1035crow16_col1{\n",
        "            background-color:  #cccfe5;\n",
        "            color:  #000000;\n",
        "        }#T_85a05028_f4c6_11ea_86a2_525400e1035crow0_col15,#T_85a05028_f4c6_11ea_86a2_525400e1035crow2_col5,#T_85a05028_f4c6_11ea_86a2_525400e1035crow5_col2,#T_85a05028_f4c6_11ea_86a2_525400e1035crow15_col0{\n",
        "            background-color:  #e0dded;\n",
        "            color:  #000000;\n",
        "        }#T_85a05028_f4c6_11ea_86a2_525400e1035crow0_col16,#T_85a05028_f4c6_11ea_86a2_525400e1035crow16_col0{\n",
        "            background-color:  #dedcec;\n",
        "            color:  #000000;\n",
        "        }#T_85a05028_f4c6_11ea_86a2_525400e1035crow1_col2,#T_85a05028_f4c6_11ea_86a2_525400e1035crow2_col1{\n",
        "            background-color:  #023d60;\n",
        "            color:  #f1f1f1;\n",
        "        }#T_85a05028_f4c6_11ea_86a2_525400e1035crow1_col3,#T_85a05028_f4c6_11ea_86a2_525400e1035crow3_col1,#T_85a05028_f4c6_11ea_86a2_525400e1035crow5_col7,#T_85a05028_f4c6_11ea_86a2_525400e1035crow7_col5{\n",
        "            background-color:  #04639b;\n",
        "            color:  #f1f1f1;\n",
        "        }#T_85a05028_f4c6_11ea_86a2_525400e1035crow1_col6,#T_85a05028_f4c6_11ea_86a2_525400e1035crow6_col1{\n",
        "            background-color:  #c6cce3;\n",
        "            color:  #000000;\n",
        "        }#T_85a05028_f4c6_11ea_86a2_525400e1035crow1_col7,#T_85a05028_f4c6_11ea_86a2_525400e1035crow7_col1{\n",
        "            background-color:  #e5e1ef;\n",
        "            color:  #000000;\n",
        "        }#T_85a05028_f4c6_11ea_86a2_525400e1035crow1_col9,#T_85a05028_f4c6_11ea_86a2_525400e1035crow9_col1{\n",
        "            background-color:  #e2dfee;\n",
        "            color:  #000000;\n",
        "        }#T_85a05028_f4c6_11ea_86a2_525400e1035crow1_col10,#T_85a05028_f4c6_11ea_86a2_525400e1035crow4_col16,#T_85a05028_f4c6_11ea_86a2_525400e1035crow10_col1,#T_85a05028_f4c6_11ea_86a2_525400e1035crow16_col4{\n",
        "            background-color:  #8fb4d6;\n",
        "            color:  #000000;\n",
        "        }#T_85a05028_f4c6_11ea_86a2_525400e1035crow1_col11,#T_85a05028_f4c6_11ea_86a2_525400e1035crow11_col1{\n",
        "            background-color:  #bdc8e1;\n",
        "            color:  #000000;\n",
        "        }#T_85a05028_f4c6_11ea_86a2_525400e1035crow1_col12,#T_85a05028_f4c6_11ea_86a2_525400e1035crow12_col1{\n",
        "            background-color:  #79abd0;\n",
        "            color:  #000000;\n",
        "        }#T_85a05028_f4c6_11ea_86a2_525400e1035crow1_col13,#T_85a05028_f4c6_11ea_86a2_525400e1035crow3_col9,#T_85a05028_f4c6_11ea_86a2_525400e1035crow9_col3,#T_85a05028_f4c6_11ea_86a2_525400e1035crow13_col1{\n",
        "            background-color:  #ece7f2;\n",
        "            color:  #000000;\n",
        "        }#T_85a05028_f4c6_11ea_86a2_525400e1035crow1_col14,#T_85a05028_f4c6_11ea_86a2_525400e1035crow14_col1{\n",
        "            background-color:  #eee8f3;\n",
        "            color:  #000000;\n",
        "        }#T_85a05028_f4c6_11ea_86a2_525400e1035crow1_col15,#T_85a05028_f4c6_11ea_86a2_525400e1035crow2_col15,#T_85a05028_f4c6_11ea_86a2_525400e1035crow15_col1,#T_85a05028_f4c6_11ea_86a2_525400e1035crow15_col2{\n",
        "            background-color:  #b3c3de;\n",
        "            color:  #000000;\n",
        "        }#T_85a05028_f4c6_11ea_86a2_525400e1035crow2_col3,#T_85a05028_f4c6_11ea_86a2_525400e1035crow3_col2,#T_85a05028_f4c6_11ea_86a2_525400e1035crow9_col11,#T_85a05028_f4c6_11ea_86a2_525400e1035crow11_col9{\n",
        "            background-color:  #046097;\n",
        "            color:  #f1f1f1;\n",
        "        }#T_85a05028_f4c6_11ea_86a2_525400e1035crow2_col6,#T_85a05028_f4c6_11ea_86a2_525400e1035crow6_col2{\n",
        "            background-color:  #d2d2e7;\n",
        "            color:  #000000;\n",
        "        }#T_85a05028_f4c6_11ea_86a2_525400e1035crow2_col7,#T_85a05028_f4c6_11ea_86a2_525400e1035crow7_col2{\n",
        "            background-color:  #e9e5f1;\n",
        "            color:  #000000;\n",
        "        }#T_85a05028_f4c6_11ea_86a2_525400e1035crow2_col8,#T_85a05028_f4c6_11ea_86a2_525400e1035crow8_col2{\n",
        "            background-color:  #e8e4f0;\n",
        "            color:  #000000;\n",
        "        }#T_85a05028_f4c6_11ea_86a2_525400e1035crow2_col9,#T_85a05028_f4c6_11ea_86a2_525400e1035crow9_col2{\n",
        "            background-color:  #e4e1ef;\n",
        "            color:  #000000;\n",
        "        }#T_85a05028_f4c6_11ea_86a2_525400e1035crow2_col10,#T_85a05028_f4c6_11ea_86a2_525400e1035crow4_col13,#T_85a05028_f4c6_11ea_86a2_525400e1035crow10_col2,#T_85a05028_f4c6_11ea_86a2_525400e1035crow13_col4{\n",
        "            background-color:  #91b5d6;\n",
        "            color:  #000000;\n",
        "        }#T_85a05028_f4c6_11ea_86a2_525400e1035crow2_col11,#T_85a05028_f4c6_11ea_86a2_525400e1035crow11_col2{\n",
        "            background-color:  #c2cbe2;\n",
        "            color:  #000000;\n",
        "        }#T_85a05028_f4c6_11ea_86a2_525400e1035crow2_col12,#T_85a05028_f4c6_11ea_86a2_525400e1035crow12_col2{\n",
        "            background-color:  #78abd0;\n",
        "            color:  #000000;\n",
        "        }#T_85a05028_f4c6_11ea_86a2_525400e1035crow2_col13,#T_85a05028_f4c6_11ea_86a2_525400e1035crow13_col2{\n",
        "            background-color:  #efe9f3;\n",
        "            color:  #000000;\n",
        "        }#T_85a05028_f4c6_11ea_86a2_525400e1035crow2_col16,#T_85a05028_f4c6_11ea_86a2_525400e1035crow3_col11,#T_85a05028_f4c6_11ea_86a2_525400e1035crow11_col3,#T_85a05028_f4c6_11ea_86a2_525400e1035crow16_col2{\n",
        "            background-color:  #d4d4e8;\n",
        "            color:  #000000;\n",
        "        }#T_85a05028_f4c6_11ea_86a2_525400e1035crow3_col4,#T_85a05028_f4c6_11ea_86a2_525400e1035crow4_col3{\n",
        "            background-color:  #a2bcda;\n",
        "            color:  #000000;\n",
        "        }#T_85a05028_f4c6_11ea_86a2_525400e1035crow3_col5,#T_85a05028_f4c6_11ea_86a2_525400e1035crow5_col3{\n",
        "            background-color:  #d6d6e9;\n",
        "            color:  #000000;\n",
        "        }#T_85a05028_f4c6_11ea_86a2_525400e1035crow3_col7,#T_85a05028_f4c6_11ea_86a2_525400e1035crow7_col3{\n",
        "            background-color:  #f0eaf4;\n",
        "            color:  #000000;\n",
        "        }#T_85a05028_f4c6_11ea_86a2_525400e1035crow3_col8,#T_85a05028_f4c6_11ea_86a2_525400e1035crow8_col3{\n",
        "            background-color:  #eee9f3;\n",
        "            color:  #000000;\n",
        "        }#T_85a05028_f4c6_11ea_86a2_525400e1035crow3_col10,#T_85a05028_f4c6_11ea_86a2_525400e1035crow10_col3{\n",
        "            background-color:  #a9bfdc;\n",
        "            color:  #000000;\n",
        "        }#T_85a05028_f4c6_11ea_86a2_525400e1035crow3_col12,#T_85a05028_f4c6_11ea_86a2_525400e1035crow12_col3{\n",
        "            background-color:  #a4bcda;\n",
        "            color:  #000000;\n",
        "        }#T_85a05028_f4c6_11ea_86a2_525400e1035crow3_col13,#T_85a05028_f4c6_11ea_86a2_525400e1035crow13_col3{\n",
        "            background-color:  #f2ecf5;\n",
        "            color:  #000000;\n",
        "        }#T_85a05028_f4c6_11ea_86a2_525400e1035crow3_col14,#T_85a05028_f4c6_11ea_86a2_525400e1035crow14_col3{\n",
        "            background-color:  #f9f2f8;\n",
        "            color:  #000000;\n",
        "        }#T_85a05028_f4c6_11ea_86a2_525400e1035crow3_col16,#T_85a05028_f4c6_11ea_86a2_525400e1035crow16_col3{\n",
        "            background-color:  #d9d8ea;\n",
        "            color:  #000000;\n",
        "        }#T_85a05028_f4c6_11ea_86a2_525400e1035crow4_col5,#T_85a05028_f4c6_11ea_86a2_525400e1035crow5_col4{\n",
        "            background-color:  #71a8ce;\n",
        "            color:  #000000;\n",
        "        }#T_85a05028_f4c6_11ea_86a2_525400e1035crow4_col6,#T_85a05028_f4c6_11ea_86a2_525400e1035crow6_col4{\n",
        "            background-color:  #9ebad9;\n",
        "            color:  #000000;\n",
        "        }#T_85a05028_f4c6_11ea_86a2_525400e1035crow4_col7,#T_85a05028_f4c6_11ea_86a2_525400e1035crow7_col4{\n",
        "            background-color:  #94b6d7;\n",
        "            color:  #000000;\n",
        "        }#T_85a05028_f4c6_11ea_86a2_525400e1035crow4_col8,#T_85a05028_f4c6_11ea_86a2_525400e1035crow8_col4{\n",
        "            background-color:  #c8cde4;\n",
        "            color:  #000000;\n",
        "        }#T_85a05028_f4c6_11ea_86a2_525400e1035crow4_col9,#T_85a05028_f4c6_11ea_86a2_525400e1035crow9_col4{\n",
        "            background-color:  #b0c2de;\n",
        "            color:  #000000;\n",
        "        }#T_85a05028_f4c6_11ea_86a2_525400e1035crow4_col10,#T_85a05028_f4c6_11ea_86a2_525400e1035crow10_col4{\n",
        "            background-color:  #afc1dd;\n",
        "            color:  #000000;\n",
        "        }#T_85a05028_f4c6_11ea_86a2_525400e1035crow4_col11,#T_85a05028_f4c6_11ea_86a2_525400e1035crow4_col14,#T_85a05028_f4c6_11ea_86a2_525400e1035crow11_col4,#T_85a05028_f4c6_11ea_86a2_525400e1035crow14_col4{\n",
        "            background-color:  #c1cae2;\n",
        "            color:  #000000;\n",
        "        }#T_85a05028_f4c6_11ea_86a2_525400e1035crow4_col12,#T_85a05028_f4c6_11ea_86a2_525400e1035crow12_col4{\n",
        "            background-color:  #a1bbda;\n",
        "            color:  #000000;\n",
        "        }#T_85a05028_f4c6_11ea_86a2_525400e1035crow4_col15,#T_85a05028_f4c6_11ea_86a2_525400e1035crow15_col4{\n",
        "            background-color:  #86b0d3;\n",
        "            color:  #000000;\n",
        "        }#T_85a05028_f4c6_11ea_86a2_525400e1035crow5_col6,#T_85a05028_f4c6_11ea_86a2_525400e1035crow6_col5,#T_85a05028_f4c6_11ea_86a2_525400e1035crow8_col11,#T_85a05028_f4c6_11ea_86a2_525400e1035crow11_col8{\n",
        "            background-color:  #045f95;\n",
        "            color:  #f1f1f1;\n",
        "        }#T_85a05028_f4c6_11ea_86a2_525400e1035crow5_col8,#T_85a05028_f4c6_11ea_86a2_525400e1035crow7_col10,#T_85a05028_f4c6_11ea_86a2_525400e1035crow8_col5,#T_85a05028_f4c6_11ea_86a2_525400e1035crow10_col7,#T_85a05028_f4c6_11ea_86a2_525400e1035crow14_col16,#T_85a05028_f4c6_11ea_86a2_525400e1035crow16_col14{\n",
        "            background-color:  #0a73b2;\n",
        "            color:  #f1f1f1;\n",
        "        }#T_85a05028_f4c6_11ea_86a2_525400e1035crow5_col9,#T_85a05028_f4c6_11ea_86a2_525400e1035crow5_col12,#T_85a05028_f4c6_11ea_86a2_525400e1035crow9_col5,#T_85a05028_f4c6_11ea_86a2_525400e1035crow9_col13,#T_85a05028_f4c6_11ea_86a2_525400e1035crow12_col5,#T_85a05028_f4c6_11ea_86a2_525400e1035crow13_col9{\n",
        "            background-color:  #1077b4;\n",
        "            color:  #f1f1f1;\n",
        "        }#T_85a05028_f4c6_11ea_86a2_525400e1035crow5_col10,#T_85a05028_f4c6_11ea_86a2_525400e1035crow6_col14,#T_85a05028_f4c6_11ea_86a2_525400e1035crow10_col5,#T_85a05028_f4c6_11ea_86a2_525400e1035crow14_col6{\n",
        "            background-color:  #2182b9;\n",
        "            color:  #000000;\n",
        "        }#T_85a05028_f4c6_11ea_86a2_525400e1035crow5_col11,#T_85a05028_f4c6_11ea_86a2_525400e1035crow11_col5{\n",
        "            background-color:  #1e80b8;\n",
        "            color:  #000000;\n",
        "        }#T_85a05028_f4c6_11ea_86a2_525400e1035crow5_col13,#T_85a05028_f4c6_11ea_86a2_525400e1035crow6_col7,#T_85a05028_f4c6_11ea_86a2_525400e1035crow7_col6,#T_85a05028_f4c6_11ea_86a2_525400e1035crow13_col5{\n",
        "            background-color:  #04649e;\n",
        "            color:  #f1f1f1;\n",
        "        }#T_85a05028_f4c6_11ea_86a2_525400e1035crow5_col14,#T_85a05028_f4c6_11ea_86a2_525400e1035crow14_col5{\n",
        "            background-color:  #167bb6;\n",
        "            color:  #000000;\n",
        "        }#T_85a05028_f4c6_11ea_86a2_525400e1035crow5_col15,#T_85a05028_f4c6_11ea_86a2_525400e1035crow15_col5{\n",
        "            background-color:  #60a1ca;\n",
        "            color:  #000000;\n",
        "        }#T_85a05028_f4c6_11ea_86a2_525400e1035crow5_col16,#T_85a05028_f4c6_11ea_86a2_525400e1035crow16_col5{\n",
        "            background-color:  #045a8d;\n",
        "            color:  #f1f1f1;\n",
        "        }#T_85a05028_f4c6_11ea_86a2_525400e1035crow6_col8,#T_85a05028_f4c6_11ea_86a2_525400e1035crow8_col6{\n",
        "            background-color:  #046198;\n",
        "            color:  #f1f1f1;\n",
        "        }#T_85a05028_f4c6_11ea_86a2_525400e1035crow6_col9,#T_85a05028_f4c6_11ea_86a2_525400e1035crow9_col6{\n",
        "            background-color:  #0566a0;\n",
        "            color:  #f1f1f1;\n",
        "        }#T_85a05028_f4c6_11ea_86a2_525400e1035crow6_col10,#T_85a05028_f4c6_11ea_86a2_525400e1035crow10_col6{\n",
        "            background-color:  #05659f;\n",
        "            color:  #f1f1f1;\n",
        "        }#T_85a05028_f4c6_11ea_86a2_525400e1035crow6_col11,#T_85a05028_f4c6_11ea_86a2_525400e1035crow8_col14,#T_85a05028_f4c6_11ea_86a2_525400e1035crow11_col6,#T_85a05028_f4c6_11ea_86a2_525400e1035crow14_col8{\n",
        "            background-color:  #0567a2;\n",
        "            color:  #f1f1f1;\n",
        "        }#T_85a05028_f4c6_11ea_86a2_525400e1035crow6_col12,#T_85a05028_f4c6_11ea_86a2_525400e1035crow12_col6{\n",
        "            background-color:  #2383ba;\n",
        "            color:  #000000;\n",
        "        }#T_85a05028_f4c6_11ea_86a2_525400e1035crow6_col13,#T_85a05028_f4c6_11ea_86a2_525400e1035crow13_col6{\n",
        "            background-color:  #045e93;\n",
        "            color:  #f1f1f1;\n",
        "        }#T_85a05028_f4c6_11ea_86a2_525400e1035crow6_col15,#T_85a05028_f4c6_11ea_86a2_525400e1035crow15_col6{\n",
        "            background-color:  #509ac6;\n",
        "            color:  #000000;\n",
        "        }#T_85a05028_f4c6_11ea_86a2_525400e1035crow6_col16,#T_85a05028_f4c6_11ea_86a2_525400e1035crow7_col13,#T_85a05028_f4c6_11ea_86a2_525400e1035crow13_col7,#T_85a05028_f4c6_11ea_86a2_525400e1035crow16_col6{\n",
        "            background-color:  #034a74;\n",
        "            color:  #f1f1f1;\n",
        "        }#T_85a05028_f4c6_11ea_86a2_525400e1035crow7_col8,#T_85a05028_f4c6_11ea_86a2_525400e1035crow8_col7{\n",
        "            background-color:  #045788;\n",
        "            color:  #f1f1f1;\n",
        "        }#T_85a05028_f4c6_11ea_86a2_525400e1035crow7_col9,#T_85a05028_f4c6_11ea_86a2_525400e1035crow9_col7,#T_85a05028_f4c6_11ea_86a2_525400e1035crow12_col14,#T_85a05028_f4c6_11ea_86a2_525400e1035crow14_col12{\n",
        "            background-color:  #1b7eb7;\n",
        "            color:  #000000;\n",
        "        }#T_85a05028_f4c6_11ea_86a2_525400e1035crow7_col11,#T_85a05028_f4c6_11ea_86a2_525400e1035crow11_col7{\n",
        "            background-color:  #056ba7;\n",
        "            color:  #f1f1f1;\n",
        "        }#T_85a05028_f4c6_11ea_86a2_525400e1035crow7_col12,#T_85a05028_f4c6_11ea_86a2_525400e1035crow12_col7{\n",
        "            background-color:  #348ebf;\n",
        "            color:  #000000;\n",
        "        }#T_85a05028_f4c6_11ea_86a2_525400e1035crow7_col14,#T_85a05028_f4c6_11ea_86a2_525400e1035crow14_col7{\n",
        "            background-color:  #056caa;\n",
        "            color:  #f1f1f1;\n",
        "        }#T_85a05028_f4c6_11ea_86a2_525400e1035crow7_col15,#T_85a05028_f4c6_11ea_86a2_525400e1035crow15_col7{\n",
        "            background-color:  #056dab;\n",
        "            color:  #f1f1f1;\n",
        "        }#T_85a05028_f4c6_11ea_86a2_525400e1035crow7_col16,#T_85a05028_f4c6_11ea_86a2_525400e1035crow8_col16,#T_85a05028_f4c6_11ea_86a2_525400e1035crow16_col7,#T_85a05028_f4c6_11ea_86a2_525400e1035crow16_col8{\n",
        "            background-color:  #034f7d;\n",
        "            color:  #f1f1f1;\n",
        "        }#T_85a05028_f4c6_11ea_86a2_525400e1035crow8_col9,#T_85a05028_f4c6_11ea_86a2_525400e1035crow9_col8{\n",
        "            background-color:  #04649d;\n",
        "            color:  #f1f1f1;\n",
        "        }#T_85a05028_f4c6_11ea_86a2_525400e1035crow8_col10,#T_85a05028_f4c6_11ea_86a2_525400e1035crow10_col8{\n",
        "            background-color:  #056aa6;\n",
        "            color:  #f1f1f1;\n",
        "        }#T_85a05028_f4c6_11ea_86a2_525400e1035crow8_col12,#T_85a05028_f4c6_11ea_86a2_525400e1035crow12_col8{\n",
        "            background-color:  #2f8bbe;\n",
        "            color:  #000000;\n",
        "        }#T_85a05028_f4c6_11ea_86a2_525400e1035crow8_col13,#T_85a05028_f4c6_11ea_86a2_525400e1035crow13_col8{\n",
        "            background-color:  #045382;\n",
        "            color:  #f1f1f1;\n",
        "        }#T_85a05028_f4c6_11ea_86a2_525400e1035crow8_col15,#T_85a05028_f4c6_11ea_86a2_525400e1035crow15_col8{\n",
        "            background-color:  #2a88bc;\n",
        "            color:  #000000;\n",
        "        }#T_85a05028_f4c6_11ea_86a2_525400e1035crow9_col10,#T_85a05028_f4c6_11ea_86a2_525400e1035crow10_col9,#T_85a05028_f4c6_11ea_86a2_525400e1035crow12_col16,#T_85a05028_f4c6_11ea_86a2_525400e1035crow16_col12{\n",
        "            background-color:  #056dac;\n",
        "            color:  #f1f1f1;\n",
        "        }#T_85a05028_f4c6_11ea_86a2_525400e1035crow9_col12,#T_85a05028_f4c6_11ea_86a2_525400e1035crow12_col9{\n",
        "            background-color:  #187cb6;\n",
        "            color:  #000000;\n",
        "        }#T_85a05028_f4c6_11ea_86a2_525400e1035crow9_col14,#T_85a05028_f4c6_11ea_86a2_525400e1035crow14_col9{\n",
        "            background-color:  #0771b1;\n",
        "            color:  #f1f1f1;\n",
        "        }#T_85a05028_f4c6_11ea_86a2_525400e1035crow9_col15,#T_85a05028_f4c6_11ea_86a2_525400e1035crow15_col9{\n",
        "            background-color:  #7bacd1;\n",
        "            color:  #000000;\n",
        "        }#T_85a05028_f4c6_11ea_86a2_525400e1035crow9_col16,#T_85a05028_f4c6_11ea_86a2_525400e1035crow16_col9{\n",
        "            background-color:  #046096;\n",
        "            color:  #f1f1f1;\n",
        "        }#T_85a05028_f4c6_11ea_86a2_525400e1035crow10_col11,#T_85a05028_f4c6_11ea_86a2_525400e1035crow11_col10{\n",
        "            background-color:  #045b8f;\n",
        "            color:  #f1f1f1;\n",
        "        }#T_85a05028_f4c6_11ea_86a2_525400e1035crow10_col12,#T_85a05028_f4c6_11ea_86a2_525400e1035crow12_col10{\n",
        "            background-color:  #0570b0;\n",
        "            color:  #f1f1f1;\n",
        "        }#T_85a05028_f4c6_11ea_86a2_525400e1035crow10_col13,#T_85a05028_f4c6_11ea_86a2_525400e1035crow11_col12,#T_85a05028_f4c6_11ea_86a2_525400e1035crow12_col11,#T_85a05028_f4c6_11ea_86a2_525400e1035crow13_col10,#T_85a05028_f4c6_11ea_86a2_525400e1035crow15_col16,#T_85a05028_f4c6_11ea_86a2_525400e1035crow16_col15{\n",
        "            background-color:  #1379b5;\n",
        "            color:  #f1f1f1;\n",
        "        }#T_85a05028_f4c6_11ea_86a2_525400e1035crow10_col14,#T_85a05028_f4c6_11ea_86a2_525400e1035crow14_col10{\n",
        "            background-color:  #2484ba;\n",
        "            color:  #000000;\n",
        "        }#T_85a05028_f4c6_11ea_86a2_525400e1035crow10_col15,#T_85a05028_f4c6_11ea_86a2_525400e1035crow15_col10{\n",
        "            background-color:  #197db7;\n",
        "            color:  #000000;\n",
        "        }#T_85a05028_f4c6_11ea_86a2_525400e1035crow10_col16,#T_85a05028_f4c6_11ea_86a2_525400e1035crow16_col10{\n",
        "            background-color:  #045c90;\n",
        "            color:  #f1f1f1;\n",
        "        }#T_85a05028_f4c6_11ea_86a2_525400e1035crow11_col13,#T_85a05028_f4c6_11ea_86a2_525400e1035crow13_col11{\n",
        "            background-color:  #056fae;\n",
        "            color:  #f1f1f1;\n",
        "        }#T_85a05028_f4c6_11ea_86a2_525400e1035crow11_col14,#T_85a05028_f4c6_11ea_86a2_525400e1035crow14_col11{\n",
        "            background-color:  #1278b4;\n",
        "            color:  #f1f1f1;\n",
        "        }#T_85a05028_f4c6_11ea_86a2_525400e1035crow11_col15,#T_85a05028_f4c6_11ea_86a2_525400e1035crow14_col15,#T_85a05028_f4c6_11ea_86a2_525400e1035crow15_col11,#T_85a05028_f4c6_11ea_86a2_525400e1035crow15_col14{\n",
        "            background-color:  #3b92c1;\n",
        "            color:  #000000;\n",
        "        }#T_85a05028_f4c6_11ea_86a2_525400e1035crow11_col16,#T_85a05028_f4c6_11ea_86a2_525400e1035crow16_col11{\n",
        "            background-color:  #045b8e;\n",
        "            color:  #f1f1f1;\n",
        "        }#T_85a05028_f4c6_11ea_86a2_525400e1035crow12_col13,#T_85a05028_f4c6_11ea_86a2_525400e1035crow12_col15,#T_85a05028_f4c6_11ea_86a2_525400e1035crow13_col12,#T_85a05028_f4c6_11ea_86a2_525400e1035crow15_col12{\n",
        "            background-color:  #4094c3;\n",
        "            color:  #000000;\n",
        "        }#T_85a05028_f4c6_11ea_86a2_525400e1035crow13_col14,#T_85a05028_f4c6_11ea_86a2_525400e1035crow14_col13{\n",
        "            background-color:  #056ba9;\n",
        "            color:  #f1f1f1;\n",
        "        }#T_85a05028_f4c6_11ea_86a2_525400e1035crow13_col15,#T_85a05028_f4c6_11ea_86a2_525400e1035crow15_col13{\n",
        "            background-color:  #0c74b2;\n",
        "            color:  #f1f1f1;\n",
        "        }#T_85a05028_f4c6_11ea_86a2_525400e1035crow13_col16,#T_85a05028_f4c6_11ea_86a2_525400e1035crow16_col13{\n",
        "            background-color:  #034e7b;\n",
        "            color:  #f1f1f1;\n",
        "        }</style><table id=\"T_85a05028_f4c6_11ea_86a2_525400e1035c\" ><thead>    <tr>        <th class=\"blank level0\" ></th>        <th class=\"col_heading level0 col0\" >Rt</th>        <th class=\"col_heading level0 col1\" >theta</th>        <th class=\"col_heading level0 col2\" >kappa</th>        <th class=\"col_heading level0 col3\" >rho</th>        <th class=\"col_heading level0 col4\" >sigma</th>        <th class=\"col_heading level0 col5\" >School_closing</th>        <th class=\"col_heading level0 col6\" >Workplace_closing</th>        <th class=\"col_heading level0 col7\" >Cancel_events</th>        <th class=\"col_heading level0 col8\" >Gatherings_restrictions</th>        <th class=\"col_heading level0 col9\" >Transport_closing</th>        <th class=\"col_heading level0 col10\" >Stay_home_restrictions</th>        <th class=\"col_heading level0 col11\" >Internal_movement_restrictions</th>        <th class=\"col_heading level0 col12\" >International_movement_restrictions</th>        <th class=\"col_heading level0 col13\" >Information_campaigns</th>        <th class=\"col_heading level0 col14\" >Testing_policy</th>        <th class=\"col_heading level0 col15\" >Contact_tracing</th>        <th class=\"col_heading level0 col16\" >Stringency_index</th>    </tr></thead><tbody>\n",
        "                <tr>\n",
        "                        <th id=\"T_85a05028_f4c6_11ea_86a2_525400e1035clevel0_row0\" class=\"row_heading level0 row0\" >Rt</th>\n",
        "                        <td id=\"T_85a05028_f4c6_11ea_86a2_525400e1035crow0_col0\" class=\"data row0 col0\" >1.000000</td>\n",
        "                        <td id=\"T_85a05028_f4c6_11ea_86a2_525400e1035crow0_col1\" class=\"data row0 col1\" >-0.319120</td>\n",
        "                        <td id=\"T_85a05028_f4c6_11ea_86a2_525400e1035crow0_col2\" class=\"data row0 col2\" >-0.291587</td>\n",
        "                        <td id=\"T_85a05028_f4c6_11ea_86a2_525400e1035crow0_col3\" class=\"data row0 col3\" >0.126952</td>\n",
        "                        <td id=\"T_85a05028_f4c6_11ea_86a2_525400e1035crow0_col4\" class=\"data row0 col4\" >-0.220496</td>\n",
        "                        <td id=\"T_85a05028_f4c6_11ea_86a2_525400e1035crow0_col5\" class=\"data row0 col5\" >-0.205412</td>\n",
        "                        <td id=\"T_85a05028_f4c6_11ea_86a2_525400e1035crow0_col6\" class=\"data row0 col6\" >-0.141004</td>\n",
        "                        <td id=\"T_85a05028_f4c6_11ea_86a2_525400e1035crow0_col7\" class=\"data row0 col7\" >-0.127679</td>\n",
        "                        <td id=\"T_85a05028_f4c6_11ea_86a2_525400e1035crow0_col8\" class=\"data row0 col8\" >-0.062828</td>\n",
        "                        <td id=\"T_85a05028_f4c6_11ea_86a2_525400e1035crow0_col9\" class=\"data row0 col9\" >-0.235507</td>\n",
        "                        <td id=\"T_85a05028_f4c6_11ea_86a2_525400e1035crow0_col10\" class=\"data row0 col10\" >-0.245850</td>\n",
        "                        <td id=\"T_85a05028_f4c6_11ea_86a2_525400e1035crow0_col11\" class=\"data row0 col11\" >-0.222116</td>\n",
        "                        <td id=\"T_85a05028_f4c6_11ea_86a2_525400e1035crow0_col12\" class=\"data row0 col12\" >-0.514826</td>\n",
        "                        <td id=\"T_85a05028_f4c6_11ea_86a2_525400e1035crow0_col13\" class=\"data row0 col13\" >-0.115006</td>\n",
        "                        <td id=\"T_85a05028_f4c6_11ea_86a2_525400e1035crow0_col14\" class=\"data row0 col14\" >-0.233646</td>\n",
        "                        <td id=\"T_85a05028_f4c6_11ea_86a2_525400e1035crow0_col15\" class=\"data row0 col15\" >-0.238323</td>\n",
        "                        <td id=\"T_85a05028_f4c6_11ea_86a2_525400e1035crow0_col16\" class=\"data row0 col16\" >-0.226908</td>\n",
        "            </tr>\n",
        "            <tr>\n",
        "                        <th id=\"T_85a05028_f4c6_11ea_86a2_525400e1035clevel0_row1\" class=\"row_heading level0 row1\" >theta</th>\n",
        "                        <td id=\"T_85a05028_f4c6_11ea_86a2_525400e1035crow1_col0\" class=\"data row1 col0\" >-0.319120</td>\n",
        "                        <td id=\"T_85a05028_f4c6_11ea_86a2_525400e1035crow1_col1\" class=\"data row1 col1\" >1.000000</td>\n",
        "                        <td id=\"T_85a05028_f4c6_11ea_86a2_525400e1035crow1_col2\" class=\"data row1 col2\" >0.966190</td>\n",
        "                        <td id=\"T_85a05028_f4c6_11ea_86a2_525400e1035crow1_col3\" class=\"data row1 col3\" >0.730660</td>\n",
        "                        <td id=\"T_85a05028_f4c6_11ea_86a2_525400e1035crow1_col4\" class=\"data row1 col4\" >-0.060144</td>\n",
        "                        <td id=\"T_85a05028_f4c6_11ea_86a2_525400e1035crow1_col5\" class=\"data row1 col5\" >-0.205333</td>\n",
        "                        <td id=\"T_85a05028_f4c6_11ea_86a2_525400e1035crow1_col6\" class=\"data row1 col6\" >-0.090454</td>\n",
        "                        <td id=\"T_85a05028_f4c6_11ea_86a2_525400e1035crow1_col7\" class=\"data row1 col7\" >-0.276472</td>\n",
        "                        <td id=\"T_85a05028_f4c6_11ea_86a2_525400e1035crow1_col8\" class=\"data row1 col8\" >-0.289525</td>\n",
        "                        <td id=\"T_85a05028_f4c6_11ea_86a2_525400e1035crow1_col9\" class=\"data row1 col9\" >-0.255009</td>\n",
        "                        <td id=\"T_85a05028_f4c6_11ea_86a2_525400e1035crow1_col10\" class=\"data row1 col10\" >0.138547</td>\n",
        "                        <td id=\"T_85a05028_f4c6_11ea_86a2_525400e1035crow1_col11\" class=\"data row1 col11\" >-0.052867</td>\n",
        "                        <td id=\"T_85a05028_f4c6_11ea_86a2_525400e1035crow1_col12\" class=\"data row1 col12\" >0.219723</td>\n",
        "                        <td id=\"T_85a05028_f4c6_11ea_86a2_525400e1035crow1_col13\" class=\"data row1 col13\" >-0.323497</td>\n",
        "                        <td id=\"T_85a05028_f4c6_11ea_86a2_525400e1035crow1_col14\" class=\"data row1 col14\" >-0.342663</td>\n",
        "                        <td id=\"T_85a05028_f4c6_11ea_86a2_525400e1035crow1_col15\" class=\"data row1 col15\" >-0.003226</td>\n",
        "                        <td id=\"T_85a05028_f4c6_11ea_86a2_525400e1035crow1_col16\" class=\"data row1 col16\" >-0.113550</td>\n",
        "            </tr>\n",
        "            <tr>\n",
        "                        <th id=\"T_85a05028_f4c6_11ea_86a2_525400e1035clevel0_row2\" class=\"row_heading level0 row2\" >kappa</th>\n",
        "                        <td id=\"T_85a05028_f4c6_11ea_86a2_525400e1035crow2_col0\" class=\"data row2 col0\" >-0.291587</td>\n",
        "                        <td id=\"T_85a05028_f4c6_11ea_86a2_525400e1035crow2_col1\" class=\"data row2 col1\" >0.966190</td>\n",
        "                        <td id=\"T_85a05028_f4c6_11ea_86a2_525400e1035crow2_col2\" class=\"data row2 col2\" >1.000000</td>\n",
        "                        <td id=\"T_85a05028_f4c6_11ea_86a2_525400e1035crow2_col3\" class=\"data row2 col3\" >0.751831</td>\n",
        "                        <td id=\"T_85a05028_f4c6_11ea_86a2_525400e1035crow2_col4\" class=\"data row2 col4\" >-0.115224</td>\n",
        "                        <td id=\"T_85a05028_f4c6_11ea_86a2_525400e1035crow2_col5\" class=\"data row2 col5\" >-0.241130</td>\n",
        "                        <td id=\"T_85a05028_f4c6_11ea_86a2_525400e1035crow2_col6\" class=\"data row2 col6\" >-0.144898</td>\n",
        "                        <td id=\"T_85a05028_f4c6_11ea_86a2_525400e1035crow2_col7\" class=\"data row2 col7\" >-0.302925</td>\n",
        "                        <td id=\"T_85a05028_f4c6_11ea_86a2_525400e1035crow2_col8\" class=\"data row2 col8\" >-0.295960</td>\n",
        "                        <td id=\"T_85a05028_f4c6_11ea_86a2_525400e1035crow2_col9\" class=\"data row2 col9\" >-0.266773</td>\n",
        "                        <td id=\"T_85a05028_f4c6_11ea_86a2_525400e1035crow2_col10\" class=\"data row2 col10\" >0.134937</td>\n",
        "                        <td id=\"T_85a05028_f4c6_11ea_86a2_525400e1035crow2_col11\" class=\"data row2 col11\" >-0.071151</td>\n",
        "                        <td id=\"T_85a05028_f4c6_11ea_86a2_525400e1035crow2_col12\" class=\"data row2 col12\" >0.229331</td>\n",
        "                        <td id=\"T_85a05028_f4c6_11ea_86a2_525400e1035crow2_col13\" class=\"data row2 col13\" >-0.350133</td>\n",
        "                        <td id=\"T_85a05028_f4c6_11ea_86a2_525400e1035crow2_col14\" class=\"data row2 col14\" >-0.285635</td>\n",
        "                        <td id=\"T_85a05028_f4c6_11ea_86a2_525400e1035crow2_col15\" class=\"data row2 col15\" >-0.001542</td>\n",
        "                        <td id=\"T_85a05028_f4c6_11ea_86a2_525400e1035crow2_col16\" class=\"data row2 col16\" >-0.162383</td>\n",
        "            </tr>\n",
        "            <tr>\n",
        "                        <th id=\"T_85a05028_f4c6_11ea_86a2_525400e1035clevel0_row3\" class=\"row_heading level0 row3\" >rho</th>\n",
        "                        <td id=\"T_85a05028_f4c6_11ea_86a2_525400e1035crow3_col0\" class=\"data row3 col0\" >0.126952</td>\n",
        "                        <td id=\"T_85a05028_f4c6_11ea_86a2_525400e1035crow3_col1\" class=\"data row3 col1\" >0.730660</td>\n",
        "                        <td id=\"T_85a05028_f4c6_11ea_86a2_525400e1035crow3_col2\" class=\"data row3 col2\" >0.751831</td>\n",
        "                        <td id=\"T_85a05028_f4c6_11ea_86a2_525400e1035crow3_col3\" class=\"data row3 col3\" >1.000000</td>\n",
        "                        <td id=\"T_85a05028_f4c6_11ea_86a2_525400e1035crow3_col4\" class=\"data row3 col4\" >0.069233</td>\n",
        "                        <td id=\"T_85a05028_f4c6_11ea_86a2_525400e1035crow3_col5\" class=\"data row3 col5\" >-0.174252</td>\n",
        "                        <td id=\"T_85a05028_f4c6_11ea_86a2_525400e1035crow3_col6\" class=\"data row3 col6\" >-0.116255</td>\n",
        "                        <td id=\"T_85a05028_f4c6_11ea_86a2_525400e1035crow3_col7\" class=\"data row3 col7\" >-0.355114</td>\n",
        "                        <td id=\"T_85a05028_f4c6_11ea_86a2_525400e1035crow3_col8\" class=\"data row3 col8\" >-0.345715</td>\n",
        "                        <td id=\"T_85a05028_f4c6_11ea_86a2_525400e1035crow3_col9\" class=\"data row3 col9\" >-0.321125</td>\n",
        "                        <td id=\"T_85a05028_f4c6_11ea_86a2_525400e1035crow3_col10\" class=\"data row3 col10\" >0.040875</td>\n",
        "                        <td id=\"T_85a05028_f4c6_11ea_86a2_525400e1035crow3_col11\" class=\"data row3 col11\" >-0.165141</td>\n",
        "                        <td id=\"T_85a05028_f4c6_11ea_86a2_525400e1035crow3_col12\" class=\"data row3 col12\" >0.060210</td>\n",
        "                        <td id=\"T_85a05028_f4c6_11ea_86a2_525400e1035crow3_col13\" class=\"data row3 col13\" >-0.386754</td>\n",
        "                        <td id=\"T_85a05028_f4c6_11ea_86a2_525400e1035crow3_col14\" class=\"data row3 col14\" >-0.450963</td>\n",
        "                        <td id=\"T_85a05028_f4c6_11ea_86a2_525400e1035crow3_col15\" class=\"data row3 col15\" >-0.137248</td>\n",
        "                        <td id=\"T_85a05028_f4c6_11ea_86a2_525400e1035crow3_col16\" class=\"data row3 col16\" >-0.195106</td>\n",
        "            </tr>\n",
        "            <tr>\n",
        "                        <th id=\"T_85a05028_f4c6_11ea_86a2_525400e1035clevel0_row4\" class=\"row_heading level0 row4\" >sigma</th>\n",
        "                        <td id=\"T_85a05028_f4c6_11ea_86a2_525400e1035crow4_col0\" class=\"data row4 col0\" >-0.220496</td>\n",
        "                        <td id=\"T_85a05028_f4c6_11ea_86a2_525400e1035crow4_col1\" class=\"data row4 col1\" >-0.060144</td>\n",
        "                        <td id=\"T_85a05028_f4c6_11ea_86a2_525400e1035crow4_col2\" class=\"data row4 col2\" >-0.115224</td>\n",
        "                        <td id=\"T_85a05028_f4c6_11ea_86a2_525400e1035crow4_col3\" class=\"data row4 col3\" >0.069233</td>\n",
        "                        <td id=\"T_85a05028_f4c6_11ea_86a2_525400e1035crow4_col4\" class=\"data row4 col4\" >1.000000</td>\n",
        "                        <td id=\"T_85a05028_f4c6_11ea_86a2_525400e1035crow4_col5\" class=\"data row4 col5\" >0.249822</td>\n",
        "                        <td id=\"T_85a05028_f4c6_11ea_86a2_525400e1035crow4_col6\" class=\"data row4 col6\" >0.087571</td>\n",
        "                        <td id=\"T_85a05028_f4c6_11ea_86a2_525400e1035crow4_col7\" class=\"data row4 col7\" >0.118881</td>\n",
        "                        <td id=\"T_85a05028_f4c6_11ea_86a2_525400e1035crow4_col8\" class=\"data row4 col8\" >-0.095558</td>\n",
        "                        <td id=\"T_85a05028_f4c6_11ea_86a2_525400e1035crow4_col9\" class=\"data row4 col9\" >0.007525</td>\n",
        "                        <td id=\"T_85a05028_f4c6_11ea_86a2_525400e1035crow4_col10\" class=\"data row4 col10\" >0.017194</td>\n",
        "                        <td id=\"T_85a05028_f4c6_11ea_86a2_525400e1035crow4_col11\" class=\"data row4 col11\" >-0.069617</td>\n",
        "                        <td id=\"T_85a05028_f4c6_11ea_86a2_525400e1035crow4_col12\" class=\"data row4 col12\" >0.071211</td>\n",
        "                        <td id=\"T_85a05028_f4c6_11ea_86a2_525400e1035crow4_col13\" class=\"data row4 col13\" >0.135690</td>\n",
        "                        <td id=\"T_85a05028_f4c6_11ea_86a2_525400e1035crow4_col14\" class=\"data row4 col14\" >-0.068025</td>\n",
        "                        <td id=\"T_85a05028_f4c6_11ea_86a2_525400e1035crow4_col15\" class=\"data row4 col15\" >0.174481</td>\n",
        "                        <td id=\"T_85a05028_f4c6_11ea_86a2_525400e1035crow4_col16\" class=\"data row4 col16\" >0.136696</td>\n",
        "            </tr>\n",
        "            <tr>\n",
        "                        <th id=\"T_85a05028_f4c6_11ea_86a2_525400e1035clevel0_row5\" class=\"row_heading level0 row5\" >School_closing</th>\n",
        "                        <td id=\"T_85a05028_f4c6_11ea_86a2_525400e1035crow5_col0\" class=\"data row5 col0\" >-0.205412</td>\n",
        "                        <td id=\"T_85a05028_f4c6_11ea_86a2_525400e1035crow5_col1\" class=\"data row5 col1\" >-0.205333</td>\n",
        "                        <td id=\"T_85a05028_f4c6_11ea_86a2_525400e1035crow5_col2\" class=\"data row5 col2\" >-0.241130</td>\n",
        "                        <td id=\"T_85a05028_f4c6_11ea_86a2_525400e1035crow5_col3\" class=\"data row5 col3\" >-0.174252</td>\n",
        "                        <td id=\"T_85a05028_f4c6_11ea_86a2_525400e1035crow5_col4\" class=\"data row5 col4\" >0.249822</td>\n",
        "                        <td id=\"T_85a05028_f4c6_11ea_86a2_525400e1035crow5_col5\" class=\"data row5 col5\" >1.000000</td>\n",
        "                        <td id=\"T_85a05028_f4c6_11ea_86a2_525400e1035crow5_col6\" class=\"data row5 col6\" >0.764754</td>\n",
        "                        <td id=\"T_85a05028_f4c6_11ea_86a2_525400e1035crow5_col7\" class=\"data row5 col7\" >0.730381</td>\n",
        "                        <td id=\"T_85a05028_f4c6_11ea_86a2_525400e1035crow5_col8\" class=\"data row5 col8\" >0.601034</td>\n",
        "                        <td id=\"T_85a05028_f4c6_11ea_86a2_525400e1035crow5_col9\" class=\"data row5 col9\" >0.575316</td>\n",
        "                        <td id=\"T_85a05028_f4c6_11ea_86a2_525400e1035crow5_col10\" class=\"data row5 col10\" >0.514138</td>\n",
        "                        <td id=\"T_85a05028_f4c6_11ea_86a2_525400e1035crow5_col11\" class=\"data row5 col11\" >0.521724</td>\n",
        "                        <td id=\"T_85a05028_f4c6_11ea_86a2_525400e1035crow5_col12\" class=\"data row5 col12\" >0.574738</td>\n",
        "                        <td id=\"T_85a05028_f4c6_11ea_86a2_525400e1035crow5_col13\" class=\"data row5 col13\" >0.719335</td>\n",
        "                        <td id=\"T_85a05028_f4c6_11ea_86a2_525400e1035crow5_col14\" class=\"data row5 col14\" >0.553788</td>\n",
        "                        <td id=\"T_85a05028_f4c6_11ea_86a2_525400e1035crow5_col15\" class=\"data row5 col15\" >0.307371</td>\n",
        "                        <td id=\"T_85a05028_f4c6_11ea_86a2_525400e1035crow5_col16\" class=\"data row5 col16\" >0.807931</td>\n",
        "            </tr>\n",
        "            <tr>\n",
        "                        <th id=\"T_85a05028_f4c6_11ea_86a2_525400e1035clevel0_row6\" class=\"row_heading level0 row6\" >Workplace_closing</th>\n",
        "                        <td id=\"T_85a05028_f4c6_11ea_86a2_525400e1035crow6_col0\" class=\"data row6 col0\" >-0.141004</td>\n",
        "                        <td id=\"T_85a05028_f4c6_11ea_86a2_525400e1035crow6_col1\" class=\"data row6 col1\" >-0.090454</td>\n",
        "                        <td id=\"T_85a05028_f4c6_11ea_86a2_525400e1035crow6_col2\" class=\"data row6 col2\" >-0.144898</td>\n",
        "                        <td id=\"T_85a05028_f4c6_11ea_86a2_525400e1035crow6_col3\" class=\"data row6 col3\" >-0.116255</td>\n",
        "                        <td id=\"T_85a05028_f4c6_11ea_86a2_525400e1035crow6_col4\" class=\"data row6 col4\" >0.087571</td>\n",
        "                        <td id=\"T_85a05028_f4c6_11ea_86a2_525400e1035crow6_col5\" class=\"data row6 col5\" >0.764754</td>\n",
        "                        <td id=\"T_85a05028_f4c6_11ea_86a2_525400e1035crow6_col6\" class=\"data row6 col6\" >1.000000</td>\n",
        "                        <td id=\"T_85a05028_f4c6_11ea_86a2_525400e1035crow6_col7\" class=\"data row6 col7\" >0.719613</td>\n",
        "                        <td id=\"T_85a05028_f4c6_11ea_86a2_525400e1035crow6_col8\" class=\"data row6 col8\" >0.746720</td>\n",
        "                        <td id=\"T_85a05028_f4c6_11ea_86a2_525400e1035crow6_col9\" class=\"data row6 col9\" >0.704489</td>\n",
        "                        <td id=\"T_85a05028_f4c6_11ea_86a2_525400e1035crow6_col10\" class=\"data row6 col10\" >0.711801</td>\n",
        "                        <td id=\"T_85a05028_f4c6_11ea_86a2_525400e1035crow6_col11\" class=\"data row6 col11\" >0.696919</td>\n",
        "                        <td id=\"T_85a05028_f4c6_11ea_86a2_525400e1035crow6_col12\" class=\"data row6 col12\" >0.502970</td>\n",
        "                        <td id=\"T_85a05028_f4c6_11ea_86a2_525400e1035crow6_col13\" class=\"data row6 col13\" >0.777506</td>\n",
        "                        <td id=\"T_85a05028_f4c6_11ea_86a2_525400e1035crow6_col14\" class=\"data row6 col14\" >0.514533</td>\n",
        "                        <td id=\"T_85a05028_f4c6_11ea_86a2_525400e1035crow6_col15\" class=\"data row6 col15\" >0.350736</td>\n",
        "                        <td id=\"T_85a05028_f4c6_11ea_86a2_525400e1035crow6_col16\" class=\"data row6 col16\" >0.899364</td>\n",
        "            </tr>\n",
        "            <tr>\n",
        "                        <th id=\"T_85a05028_f4c6_11ea_86a2_525400e1035clevel0_row7\" class=\"row_heading level0 row7\" >Cancel_events</th>\n",
        "                        <td id=\"T_85a05028_f4c6_11ea_86a2_525400e1035crow7_col0\" class=\"data row7 col0\" >-0.127679</td>\n",
        "                        <td id=\"T_85a05028_f4c6_11ea_86a2_525400e1035crow7_col1\" class=\"data row7 col1\" >-0.276472</td>\n",
        "                        <td id=\"T_85a05028_f4c6_11ea_86a2_525400e1035crow7_col2\" class=\"data row7 col2\" >-0.302925</td>\n",
        "                        <td id=\"T_85a05028_f4c6_11ea_86a2_525400e1035crow7_col3\" class=\"data row7 col3\" >-0.355114</td>\n",
        "                        <td id=\"T_85a05028_f4c6_11ea_86a2_525400e1035crow7_col4\" class=\"data row7 col4\" >0.118881</td>\n",
        "                        <td id=\"T_85a05028_f4c6_11ea_86a2_525400e1035crow7_col5\" class=\"data row7 col5\" >0.730381</td>\n",
        "                        <td id=\"T_85a05028_f4c6_11ea_86a2_525400e1035crow7_col6\" class=\"data row7 col6\" >0.719613</td>\n",
        "                        <td id=\"T_85a05028_f4c6_11ea_86a2_525400e1035crow7_col7\" class=\"data row7 col7\" >1.000000</td>\n",
        "                        <td id=\"T_85a05028_f4c6_11ea_86a2_525400e1035crow7_col8\" class=\"data row7 col8\" >0.827772</td>\n",
        "                        <td id=\"T_85a05028_f4c6_11ea_86a2_525400e1035crow7_col9\" class=\"data row7 col9\" >0.534996</td>\n",
        "                        <td id=\"T_85a05028_f4c6_11ea_86a2_525400e1035crow7_col10\" class=\"data row7 col10\" >0.597946</td>\n",
        "                        <td id=\"T_85a05028_f4c6_11ea_86a2_525400e1035crow7_col11\" class=\"data row7 col11\" >0.663865</td>\n",
        "                        <td id=\"T_85a05028_f4c6_11ea_86a2_525400e1035crow7_col12\" class=\"data row7 col12\" >0.438940</td>\n",
        "                        <td id=\"T_85a05028_f4c6_11ea_86a2_525400e1035crow7_col13\" class=\"data row7 col13\" >0.897208</td>\n",
        "                        <td id=\"T_85a05028_f4c6_11ea_86a2_525400e1035crow7_col14\" class=\"data row7 col14\" >0.654791</td>\n",
        "                        <td id=\"T_85a05028_f4c6_11ea_86a2_525400e1035crow7_col15\" class=\"data row7 col15\" >0.647539</td>\n",
        "                        <td id=\"T_85a05028_f4c6_11ea_86a2_525400e1035crow7_col16\" class=\"data row7 col16\" >0.864406</td>\n",
        "            </tr>\n",
        "            <tr>\n",
        "                        <th id=\"T_85a05028_f4c6_11ea_86a2_525400e1035clevel0_row8\" class=\"row_heading level0 row8\" >Gatherings_restrictions</th>\n",
        "                        <td id=\"T_85a05028_f4c6_11ea_86a2_525400e1035crow8_col0\" class=\"data row8 col0\" >-0.062828</td>\n",
        "                        <td id=\"T_85a05028_f4c6_11ea_86a2_525400e1035crow8_col1\" class=\"data row8 col1\" >-0.289525</td>\n",
        "                        <td id=\"T_85a05028_f4c6_11ea_86a2_525400e1035crow8_col2\" class=\"data row8 col2\" >-0.295960</td>\n",
        "                        <td id=\"T_85a05028_f4c6_11ea_86a2_525400e1035crow8_col3\" class=\"data row8 col3\" >-0.345715</td>\n",
        "                        <td id=\"T_85a05028_f4c6_11ea_86a2_525400e1035crow8_col4\" class=\"data row8 col4\" >-0.095558</td>\n",
        "                        <td id=\"T_85a05028_f4c6_11ea_86a2_525400e1035crow8_col5\" class=\"data row8 col5\" >0.601034</td>\n",
        "                        <td id=\"T_85a05028_f4c6_11ea_86a2_525400e1035crow8_col6\" class=\"data row8 col6\" >0.746720</td>\n",
        "                        <td id=\"T_85a05028_f4c6_11ea_86a2_525400e1035crow8_col7\" class=\"data row8 col7\" >0.827772</td>\n",
        "                        <td id=\"T_85a05028_f4c6_11ea_86a2_525400e1035crow8_col8\" class=\"data row8 col8\" >1.000000</td>\n",
        "                        <td id=\"T_85a05028_f4c6_11ea_86a2_525400e1035crow8_col9\" class=\"data row8 col9\" >0.727360</td>\n",
        "                        <td id=\"T_85a05028_f4c6_11ea_86a2_525400e1035crow8_col10\" class=\"data row8 col10\" >0.670639</td>\n",
        "                        <td id=\"T_85a05028_f4c6_11ea_86a2_525400e1035crow8_col11\" class=\"data row8 col11\" >0.765547</td>\n",
        "                        <td id=\"T_85a05028_f4c6_11ea_86a2_525400e1035crow8_col12\" class=\"data row8 col12\" >0.461230</td>\n",
        "                        <td id=\"T_85a05028_f4c6_11ea_86a2_525400e1035crow8_col13\" class=\"data row8 col13\" >0.850425</td>\n",
        "                        <td id=\"T_85a05028_f4c6_11ea_86a2_525400e1035crow8_col14\" class=\"data row8 col14\" >0.695443</td>\n",
        "                        <td id=\"T_85a05028_f4c6_11ea_86a2_525400e1035crow8_col15\" class=\"data row8 col15\" >0.477169</td>\n",
        "                        <td id=\"T_85a05028_f4c6_11ea_86a2_525400e1035crow8_col16\" class=\"data row8 col16\" >0.866213</td>\n",
        "            </tr>\n",
        "            <tr>\n",
        "                        <th id=\"T_85a05028_f4c6_11ea_86a2_525400e1035clevel0_row9\" class=\"row_heading level0 row9\" >Transport_closing</th>\n",
        "                        <td id=\"T_85a05028_f4c6_11ea_86a2_525400e1035crow9_col0\" class=\"data row9 col0\" >-0.235507</td>\n",
        "                        <td id=\"T_85a05028_f4c6_11ea_86a2_525400e1035crow9_col1\" class=\"data row9 col1\" >-0.255009</td>\n",
        "                        <td id=\"T_85a05028_f4c6_11ea_86a2_525400e1035crow9_col2\" class=\"data row9 col2\" >-0.266773</td>\n",
        "                        <td id=\"T_85a05028_f4c6_11ea_86a2_525400e1035crow9_col3\" class=\"data row9 col3\" >-0.321125</td>\n",
        "                        <td id=\"T_85a05028_f4c6_11ea_86a2_525400e1035crow9_col4\" class=\"data row9 col4\" >0.007525</td>\n",
        "                        <td id=\"T_85a05028_f4c6_11ea_86a2_525400e1035crow9_col5\" class=\"data row9 col5\" >0.575316</td>\n",
        "                        <td id=\"T_85a05028_f4c6_11ea_86a2_525400e1035crow9_col6\" class=\"data row9 col6\" >0.704489</td>\n",
        "                        <td id=\"T_85a05028_f4c6_11ea_86a2_525400e1035crow9_col7\" class=\"data row9 col7\" >0.534996</td>\n",
        "                        <td id=\"T_85a05028_f4c6_11ea_86a2_525400e1035crow9_col8\" class=\"data row9 col8\" >0.727360</td>\n",
        "                        <td id=\"T_85a05028_f4c6_11ea_86a2_525400e1035crow9_col9\" class=\"data row9 col9\" >1.000000</td>\n",
        "                        <td id=\"T_85a05028_f4c6_11ea_86a2_525400e1035crow9_col10\" class=\"data row9 col10\" >0.641091</td>\n",
        "                        <td id=\"T_85a05028_f4c6_11ea_86a2_525400e1035crow9_col11\" class=\"data row9 col11\" >0.755184</td>\n",
        "                        <td id=\"T_85a05028_f4c6_11ea_86a2_525400e1035crow9_col12\" class=\"data row9 col12\" >0.547366</td>\n",
        "                        <td id=\"T_85a05028_f4c6_11ea_86a2_525400e1035crow9_col13\" class=\"data row9 col13\" >0.579867</td>\n",
        "                        <td id=\"T_85a05028_f4c6_11ea_86a2_525400e1035crow9_col14\" class=\"data row9 col14\" >0.611032</td>\n",
        "                        <td id=\"T_85a05028_f4c6_11ea_86a2_525400e1035crow9_col15\" class=\"data row9 col15\" >0.213224</td>\n",
        "                        <td id=\"T_85a05028_f4c6_11ea_86a2_525400e1035crow9_col16\" class=\"data row9 col16\" >0.762192</td>\n",
        "            </tr>\n",
        "            <tr>\n",
        "                        <th id=\"T_85a05028_f4c6_11ea_86a2_525400e1035clevel0_row10\" class=\"row_heading level0 row10\" >Stay_home_restrictions</th>\n",
        "                        <td id=\"T_85a05028_f4c6_11ea_86a2_525400e1035crow10_col0\" class=\"data row10 col0\" >-0.245850</td>\n",
        "                        <td id=\"T_85a05028_f4c6_11ea_86a2_525400e1035crow10_col1\" class=\"data row10 col1\" >0.138547</td>\n",
        "                        <td id=\"T_85a05028_f4c6_11ea_86a2_525400e1035crow10_col2\" class=\"data row10 col2\" >0.134937</td>\n",
        "                        <td id=\"T_85a05028_f4c6_11ea_86a2_525400e1035crow10_col3\" class=\"data row10 col3\" >0.040875</td>\n",
        "                        <td id=\"T_85a05028_f4c6_11ea_86a2_525400e1035crow10_col4\" class=\"data row10 col4\" >0.017194</td>\n",
        "                        <td id=\"T_85a05028_f4c6_11ea_86a2_525400e1035crow10_col5\" class=\"data row10 col5\" >0.514138</td>\n",
        "                        <td id=\"T_85a05028_f4c6_11ea_86a2_525400e1035crow10_col6\" class=\"data row10 col6\" >0.711801</td>\n",
        "                        <td id=\"T_85a05028_f4c6_11ea_86a2_525400e1035crow10_col7\" class=\"data row10 col7\" >0.597946</td>\n",
        "                        <td id=\"T_85a05028_f4c6_11ea_86a2_525400e1035crow10_col8\" class=\"data row10 col8\" >0.670639</td>\n",
        "                        <td id=\"T_85a05028_f4c6_11ea_86a2_525400e1035crow10_col9\" class=\"data row10 col9\" >0.641091</td>\n",
        "                        <td id=\"T_85a05028_f4c6_11ea_86a2_525400e1035crow10_col10\" class=\"data row10 col10\" >1.000000</td>\n",
        "                        <td id=\"T_85a05028_f4c6_11ea_86a2_525400e1035crow10_col11\" class=\"data row10 col11\" >0.797235</td>\n",
        "                        <td id=\"T_85a05028_f4c6_11ea_86a2_525400e1035crow10_col12\" class=\"data row10 col12\" >0.616764</td>\n",
        "                        <td id=\"T_85a05028_f4c6_11ea_86a2_525400e1035crow10_col13\" class=\"data row10 col13\" >0.567811</td>\n",
        "                        <td id=\"T_85a05028_f4c6_11ea_86a2_525400e1035crow10_col14\" class=\"data row10 col14\" >0.501220</td>\n",
        "                        <td id=\"T_85a05028_f4c6_11ea_86a2_525400e1035crow10_col15\" class=\"data row10 col15\" >0.541007</td>\n",
        "                        <td id=\"T_85a05028_f4c6_11ea_86a2_525400e1035crow10_col16\" class=\"data row10 col16\" >0.790672</td>\n",
        "            </tr>\n",
        "            <tr>\n",
        "                        <th id=\"T_85a05028_f4c6_11ea_86a2_525400e1035clevel0_row11\" class=\"row_heading level0 row11\" >Internal_movement_restrictions</th>\n",
        "                        <td id=\"T_85a05028_f4c6_11ea_86a2_525400e1035crow11_col0\" class=\"data row11 col0\" >-0.222116</td>\n",
        "                        <td id=\"T_85a05028_f4c6_11ea_86a2_525400e1035crow11_col1\" class=\"data row11 col1\" >-0.052867</td>\n",
        "                        <td id=\"T_85a05028_f4c6_11ea_86a2_525400e1035crow11_col2\" class=\"data row11 col2\" >-0.071151</td>\n",
        "                        <td id=\"T_85a05028_f4c6_11ea_86a2_525400e1035crow11_col3\" class=\"data row11 col3\" >-0.165141</td>\n",
        "                        <td id=\"T_85a05028_f4c6_11ea_86a2_525400e1035crow11_col4\" class=\"data row11 col4\" >-0.069617</td>\n",
        "                        <td id=\"T_85a05028_f4c6_11ea_86a2_525400e1035crow11_col5\" class=\"data row11 col5\" >0.521724</td>\n",
        "                        <td id=\"T_85a05028_f4c6_11ea_86a2_525400e1035crow11_col6\" class=\"data row11 col6\" >0.696919</td>\n",
        "                        <td id=\"T_85a05028_f4c6_11ea_86a2_525400e1035crow11_col7\" class=\"data row11 col7\" >0.663865</td>\n",
        "                        <td id=\"T_85a05028_f4c6_11ea_86a2_525400e1035crow11_col8\" class=\"data row11 col8\" >0.765547</td>\n",
        "                        <td id=\"T_85a05028_f4c6_11ea_86a2_525400e1035crow11_col9\" class=\"data row11 col9\" >0.755184</td>\n",
        "                        <td id=\"T_85a05028_f4c6_11ea_86a2_525400e1035crow11_col10\" class=\"data row11 col10\" >0.797235</td>\n",
        "                        <td id=\"T_85a05028_f4c6_11ea_86a2_525400e1035crow11_col11\" class=\"data row11 col11\" >1.000000</td>\n",
        "                        <td id=\"T_85a05028_f4c6_11ea_86a2_525400e1035crow11_col12\" class=\"data row11 col12\" >0.565804</td>\n",
        "                        <td id=\"T_85a05028_f4c6_11ea_86a2_525400e1035crow11_col13\" class=\"data row11 col13\" >0.627610</td>\n",
        "                        <td id=\"T_85a05028_f4c6_11ea_86a2_525400e1035crow11_col14\" class=\"data row11 col14\" >0.568358</td>\n",
        "                        <td id=\"T_85a05028_f4c6_11ea_86a2_525400e1035crow11_col15\" class=\"data row11 col15\" >0.416825</td>\n",
        "                        <td id=\"T_85a05028_f4c6_11ea_86a2_525400e1035crow11_col16\" class=\"data row11 col16\" >0.802325</td>\n",
        "            </tr>\n",
        "            <tr>\n",
        "                        <th id=\"T_85a05028_f4c6_11ea_86a2_525400e1035clevel0_row12\" class=\"row_heading level0 row12\" >International_movement_restrictions</th>\n",
        "                        <td id=\"T_85a05028_f4c6_11ea_86a2_525400e1035crow12_col0\" class=\"data row12 col0\" >-0.514826</td>\n",
        "                        <td id=\"T_85a05028_f4c6_11ea_86a2_525400e1035crow12_col1\" class=\"data row12 col1\" >0.219723</td>\n",
        "                        <td id=\"T_85a05028_f4c6_11ea_86a2_525400e1035crow12_col2\" class=\"data row12 col2\" >0.229331</td>\n",
        "                        <td id=\"T_85a05028_f4c6_11ea_86a2_525400e1035crow12_col3\" class=\"data row12 col3\" >0.060210</td>\n",
        "                        <td id=\"T_85a05028_f4c6_11ea_86a2_525400e1035crow12_col4\" class=\"data row12 col4\" >0.071211</td>\n",
        "                        <td id=\"T_85a05028_f4c6_11ea_86a2_525400e1035crow12_col5\" class=\"data row12 col5\" >0.574738</td>\n",
        "                        <td id=\"T_85a05028_f4c6_11ea_86a2_525400e1035crow12_col6\" class=\"data row12 col6\" >0.502970</td>\n",
        "                        <td id=\"T_85a05028_f4c6_11ea_86a2_525400e1035crow12_col7\" class=\"data row12 col7\" >0.438940</td>\n",
        "                        <td id=\"T_85a05028_f4c6_11ea_86a2_525400e1035crow12_col8\" class=\"data row12 col8\" >0.461230</td>\n",
        "                        <td id=\"T_85a05028_f4c6_11ea_86a2_525400e1035crow12_col9\" class=\"data row12 col9\" >0.547366</td>\n",
        "                        <td id=\"T_85a05028_f4c6_11ea_86a2_525400e1035crow12_col10\" class=\"data row12 col10\" >0.616764</td>\n",
        "                        <td id=\"T_85a05028_f4c6_11ea_86a2_525400e1035crow12_col11\" class=\"data row12 col11\" >0.565804</td>\n",
        "                        <td id=\"T_85a05028_f4c6_11ea_86a2_525400e1035crow12_col12\" class=\"data row12 col12\" >1.000000</td>\n",
        "                        <td id=\"T_85a05028_f4c6_11ea_86a2_525400e1035crow12_col13\" class=\"data row12 col13\" >0.399462</td>\n",
        "                        <td id=\"T_85a05028_f4c6_11ea_86a2_525400e1035crow12_col14\" class=\"data row12 col14\" >0.534718</td>\n",
        "                        <td id=\"T_85a05028_f4c6_11ea_86a2_525400e1035crow12_col15\" class=\"data row12 col15\" >0.397993</td>\n",
        "                        <td id=\"T_85a05028_f4c6_11ea_86a2_525400e1035crow12_col16\" class=\"data row12 col16\" >0.643512</td>\n",
        "            </tr>\n",
        "            <tr>\n",
        "                        <th id=\"T_85a05028_f4c6_11ea_86a2_525400e1035clevel0_row13\" class=\"row_heading level0 row13\" >Information_campaigns</th>\n",
        "                        <td id=\"T_85a05028_f4c6_11ea_86a2_525400e1035crow13_col0\" class=\"data row13 col0\" >-0.115006</td>\n",
        "                        <td id=\"T_85a05028_f4c6_11ea_86a2_525400e1035crow13_col1\" class=\"data row13 col1\" >-0.323497</td>\n",
        "                        <td id=\"T_85a05028_f4c6_11ea_86a2_525400e1035crow13_col2\" class=\"data row13 col2\" >-0.350133</td>\n",
        "                        <td id=\"T_85a05028_f4c6_11ea_86a2_525400e1035crow13_col3\" class=\"data row13 col3\" >-0.386754</td>\n",
        "                        <td id=\"T_85a05028_f4c6_11ea_86a2_525400e1035crow13_col4\" class=\"data row13 col4\" >0.135690</td>\n",
        "                        <td id=\"T_85a05028_f4c6_11ea_86a2_525400e1035crow13_col5\" class=\"data row13 col5\" >0.719335</td>\n",
        "                        <td id=\"T_85a05028_f4c6_11ea_86a2_525400e1035crow13_col6\" class=\"data row13 col6\" >0.777506</td>\n",
        "                        <td id=\"T_85a05028_f4c6_11ea_86a2_525400e1035crow13_col7\" class=\"data row13 col7\" >0.897208</td>\n",
        "                        <td id=\"T_85a05028_f4c6_11ea_86a2_525400e1035crow13_col8\" class=\"data row13 col8\" >0.850425</td>\n",
        "                        <td id=\"T_85a05028_f4c6_11ea_86a2_525400e1035crow13_col9\" class=\"data row13 col9\" >0.579867</td>\n",
        "                        <td id=\"T_85a05028_f4c6_11ea_86a2_525400e1035crow13_col10\" class=\"data row13 col10\" >0.567811</td>\n",
        "                        <td id=\"T_85a05028_f4c6_11ea_86a2_525400e1035crow13_col11\" class=\"data row13 col11\" >0.627610</td>\n",
        "                        <td id=\"T_85a05028_f4c6_11ea_86a2_525400e1035crow13_col12\" class=\"data row13 col12\" >0.399462</td>\n",
        "                        <td id=\"T_85a05028_f4c6_11ea_86a2_525400e1035crow13_col13\" class=\"data row13 col13\" >1.000000</td>\n",
        "                        <td id=\"T_85a05028_f4c6_11ea_86a2_525400e1035crow13_col14\" class=\"data row13 col14\" >0.657455</td>\n",
        "                        <td id=\"T_85a05028_f4c6_11ea_86a2_525400e1035crow13_col15\" class=\"data row13 col15\" >0.594069</td>\n",
        "                        <td id=\"T_85a05028_f4c6_11ea_86a2_525400e1035crow13_col16\" class=\"data row13 col16\" >0.874840</td>\n",
        "            </tr>\n",
        "            <tr>\n",
        "                        <th id=\"T_85a05028_f4c6_11ea_86a2_525400e1035clevel0_row14\" class=\"row_heading level0 row14\" >Testing_policy</th>\n",
        "                        <td id=\"T_85a05028_f4c6_11ea_86a2_525400e1035crow14_col0\" class=\"data row14 col0\" >-0.233646</td>\n",
        "                        <td id=\"T_85a05028_f4c6_11ea_86a2_525400e1035crow14_col1\" class=\"data row14 col1\" >-0.342663</td>\n",
        "                        <td id=\"T_85a05028_f4c6_11ea_86a2_525400e1035crow14_col2\" class=\"data row14 col2\" >-0.285635</td>\n",
        "                        <td id=\"T_85a05028_f4c6_11ea_86a2_525400e1035crow14_col3\" class=\"data row14 col3\" >-0.450963</td>\n",
        "                        <td id=\"T_85a05028_f4c6_11ea_86a2_525400e1035crow14_col4\" class=\"data row14 col4\" >-0.068025</td>\n",
        "                        <td id=\"T_85a05028_f4c6_11ea_86a2_525400e1035crow14_col5\" class=\"data row14 col5\" >0.553788</td>\n",
        "                        <td id=\"T_85a05028_f4c6_11ea_86a2_525400e1035crow14_col6\" class=\"data row14 col6\" >0.514533</td>\n",
        "                        <td id=\"T_85a05028_f4c6_11ea_86a2_525400e1035crow14_col7\" class=\"data row14 col7\" >0.654791</td>\n",
        "                        <td id=\"T_85a05028_f4c6_11ea_86a2_525400e1035crow14_col8\" class=\"data row14 col8\" >0.695443</td>\n",
        "                        <td id=\"T_85a05028_f4c6_11ea_86a2_525400e1035crow14_col9\" class=\"data row14 col9\" >0.611032</td>\n",
        "                        <td id=\"T_85a05028_f4c6_11ea_86a2_525400e1035crow14_col10\" class=\"data row14 col10\" >0.501220</td>\n",
        "                        <td id=\"T_85a05028_f4c6_11ea_86a2_525400e1035crow14_col11\" class=\"data row14 col11\" >0.568358</td>\n",
        "                        <td id=\"T_85a05028_f4c6_11ea_86a2_525400e1035crow14_col12\" class=\"data row14 col12\" >0.534718</td>\n",
        "                        <td id=\"T_85a05028_f4c6_11ea_86a2_525400e1035crow14_col13\" class=\"data row14 col13\" >0.657455</td>\n",
        "                        <td id=\"T_85a05028_f4c6_11ea_86a2_525400e1035crow14_col14\" class=\"data row14 col14\" >1.000000</td>\n",
        "                        <td id=\"T_85a05028_f4c6_11ea_86a2_525400e1035crow14_col15\" class=\"data row14 col15\" >0.415842</td>\n",
        "                        <td id=\"T_85a05028_f4c6_11ea_86a2_525400e1035crow14_col16\" class=\"data row14 col16\" >0.598867</td>\n",
        "            </tr>\n",
        "            <tr>\n",
        "                        <th id=\"T_85a05028_f4c6_11ea_86a2_525400e1035clevel0_row15\" class=\"row_heading level0 row15\" >Contact_tracing</th>\n",
        "                        <td id=\"T_85a05028_f4c6_11ea_86a2_525400e1035crow15_col0\" class=\"data row15 col0\" >-0.238323</td>\n",
        "                        <td id=\"T_85a05028_f4c6_11ea_86a2_525400e1035crow15_col1\" class=\"data row15 col1\" >-0.003226</td>\n",
        "                        <td id=\"T_85a05028_f4c6_11ea_86a2_525400e1035crow15_col2\" class=\"data row15 col2\" >-0.001542</td>\n",
        "                        <td id=\"T_85a05028_f4c6_11ea_86a2_525400e1035crow15_col3\" class=\"data row15 col3\" >-0.137248</td>\n",
        "                        <td id=\"T_85a05028_f4c6_11ea_86a2_525400e1035crow15_col4\" class=\"data row15 col4\" >0.174481</td>\n",
        "                        <td id=\"T_85a05028_f4c6_11ea_86a2_525400e1035crow15_col5\" class=\"data row15 col5\" >0.307371</td>\n",
        "                        <td id=\"T_85a05028_f4c6_11ea_86a2_525400e1035crow15_col6\" class=\"data row15 col6\" >0.350736</td>\n",
        "                        <td id=\"T_85a05028_f4c6_11ea_86a2_525400e1035crow15_col7\" class=\"data row15 col7\" >0.647539</td>\n",
        "                        <td id=\"T_85a05028_f4c6_11ea_86a2_525400e1035crow15_col8\" class=\"data row15 col8\" >0.477169</td>\n",
        "                        <td id=\"T_85a05028_f4c6_11ea_86a2_525400e1035crow15_col9\" class=\"data row15 col9\" >0.213224</td>\n",
        "                        <td id=\"T_85a05028_f4c6_11ea_86a2_525400e1035crow15_col10\" class=\"data row15 col10\" >0.541007</td>\n",
        "                        <td id=\"T_85a05028_f4c6_11ea_86a2_525400e1035crow15_col11\" class=\"data row15 col11\" >0.416825</td>\n",
        "                        <td id=\"T_85a05028_f4c6_11ea_86a2_525400e1035crow15_col12\" class=\"data row15 col12\" >0.397993</td>\n",
        "                        <td id=\"T_85a05028_f4c6_11ea_86a2_525400e1035crow15_col13\" class=\"data row15 col13\" >0.594069</td>\n",
        "                        <td id=\"T_85a05028_f4c6_11ea_86a2_525400e1035crow15_col14\" class=\"data row15 col14\" >0.415842</td>\n",
        "                        <td id=\"T_85a05028_f4c6_11ea_86a2_525400e1035crow15_col15\" class=\"data row15 col15\" >1.000000</td>\n",
        "                        <td id=\"T_85a05028_f4c6_11ea_86a2_525400e1035crow15_col16\" class=\"data row15 col16\" >0.565932</td>\n",
        "            </tr>\n",
        "            <tr>\n",
        "                        <th id=\"T_85a05028_f4c6_11ea_86a2_525400e1035clevel0_row16\" class=\"row_heading level0 row16\" >Stringency_index</th>\n",
        "                        <td id=\"T_85a05028_f4c6_11ea_86a2_525400e1035crow16_col0\" class=\"data row16 col0\" >-0.226908</td>\n",
        "                        <td id=\"T_85a05028_f4c6_11ea_86a2_525400e1035crow16_col1\" class=\"data row16 col1\" >-0.113550</td>\n",
        "                        <td id=\"T_85a05028_f4c6_11ea_86a2_525400e1035crow16_col2\" class=\"data row16 col2\" >-0.162383</td>\n",
        "                        <td id=\"T_85a05028_f4c6_11ea_86a2_525400e1035crow16_col3\" class=\"data row16 col3\" >-0.195106</td>\n",
        "                        <td id=\"T_85a05028_f4c6_11ea_86a2_525400e1035crow16_col4\" class=\"data row16 col4\" >0.136696</td>\n",
        "                        <td id=\"T_85a05028_f4c6_11ea_86a2_525400e1035crow16_col5\" class=\"data row16 col5\" >0.807931</td>\n",
        "                        <td id=\"T_85a05028_f4c6_11ea_86a2_525400e1035crow16_col6\" class=\"data row16 col6\" >0.899364</td>\n",
        "                        <td id=\"T_85a05028_f4c6_11ea_86a2_525400e1035crow16_col7\" class=\"data row16 col7\" >0.864406</td>\n",
        "                        <td id=\"T_85a05028_f4c6_11ea_86a2_525400e1035crow16_col8\" class=\"data row16 col8\" >0.866213</td>\n",
        "                        <td id=\"T_85a05028_f4c6_11ea_86a2_525400e1035crow16_col9\" class=\"data row16 col9\" >0.762192</td>\n",
        "                        <td id=\"T_85a05028_f4c6_11ea_86a2_525400e1035crow16_col10\" class=\"data row16 col10\" >0.790672</td>\n",
        "                        <td id=\"T_85a05028_f4c6_11ea_86a2_525400e1035crow16_col11\" class=\"data row16 col11\" >0.802325</td>\n",
        "                        <td id=\"T_85a05028_f4c6_11ea_86a2_525400e1035crow16_col12\" class=\"data row16 col12\" >0.643512</td>\n",
        "                        <td id=\"T_85a05028_f4c6_11ea_86a2_525400e1035crow16_col13\" class=\"data row16 col13\" >0.874840</td>\n",
        "                        <td id=\"T_85a05028_f4c6_11ea_86a2_525400e1035crow16_col14\" class=\"data row16 col14\" >0.598867</td>\n",
        "                        <td id=\"T_85a05028_f4c6_11ea_86a2_525400e1035crow16_col15\" class=\"data row16 col15\" >0.565932</td>\n",
        "                        <td id=\"T_85a05028_f4c6_11ea_86a2_525400e1035crow16_col16\" class=\"data row16 col16\" >1.000000</td>\n",
        "            </tr>\n",
        "    </tbody></table>"
       ],
       "output_type": "pyout",
       "prompt_number": 21,
       "text": [
        "<pandas.io.formats.style.Styler at 0x7f1997b738b0>"
       ]
      }
     ],
     "prompt_number": 21
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "# Scatter plot of Stringency index and Rt\n",
      "df = track_df.copy()\n",
      "sns.scatterplot(data=df, x=\"Stringency_index\", y=\"Rt\", hue=\"Country\", legend=\"brief\", marker=\"+\")\n",
      "bbox_to_anchor=(1.02, 0)\n",
      "bbox_loc=\"lower left\"\n",
      "plt.legend(bbox_to_anchor=bbox_to_anchor, loc=bbox_loc, borderaxespad=0)\n",
      "plt.title(\"Relationship of Stringency index and reproduction number\")\n",
      "plt.ylabel(\"Reproduction number\")\n",
      "plt.xlabel(\"Stringency index\")\n",
      "plt.show()"
     ],
     "language": "python",
     "metadata": {},
     "outputs": [
      {
       "output_type": "display_data",
       "png": "\n",
       "text": [
        "<Figure size 432x288 with 1 Axes>"
       ]
      }
     ],
     "prompt_number": 22
    }
   ],
   "metadata": {}
  }
 ]
}
