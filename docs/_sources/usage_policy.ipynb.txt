{
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3.8.2 64-bit ('.venv': venv)",
   "name": "python_defaultSpec_1597669925034"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.8.2-final"
  },
  "name": ""
 },
 "nbformat": 3,
 "nbformat_minor": 0,
 "worksheets": [
  {
   "cells": [
    {
     "cell_type": "markdown",
     "metadata": {},
     "source": [
      "# Usage (details: policy measures)\n",
      "Here, we will analyse the relationship of policy measures and parameter values of SIR-derived ODE models. Policy measures are tracked by [Oxford Covid-19 Government Response Tracker (OxCGRT)](https://github.com/OxCGRT/covid-policy-tracker)."
     ]
    },
    {
     "cell_type": "heading",
     "level": 2,
     "metadata": {},
     "source": [
      "Preparation"
     ]
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "# Standard users\n",
      "# !pip install covsirphy\n",
      "# Developers (Note: this notebook is in example directory)\n",
      "import os\n",
      "os.chdir(\"../\")"
     ],
     "language": "python",
     "metadata": {},
     "outputs": [],
     "prompt_number": 1
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "from pprint import pprint"
     ],
     "language": "python",
     "metadata": {},
     "outputs": [],
     "prompt_number": 2
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "import covsirphy as cs\n",
      "cs.__version__"
     ],
     "language": "python",
     "metadata": {},
     "outputs": [
      {
       "output_type": "pyout",
       "prompt_number": 3,
       "text": [
        "'2.8.3'"
       ]
      }
     ],
     "prompt_number": 3
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "# Standard users and developers\n",
      "data_loader = cs.DataLoader(\"input\")\n",
      "# The number of cases (JHU style)\n",
      "jhu_data = data_loader.jhu(verbose=False)\n",
      "# Population in each country\n",
      "population_data = data_loader.population(verbose=False)\n",
      "# Government Response Tracker (OxCGRT)\n",
      "oxcgrt_data = data_loader.oxcgrt(verbose=False)\n",
      "# Description/citation\n",
      "print(oxcgrt_data.citation)"
     ],
     "language": "python",
     "metadata": {
      "tags": []
     },
     "outputs": [
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "(Secondary source) Guidotti, E., Ardia, D., (2020), \"COVID-19 Data Hub\", Journal of Open Source Software 5(51):2376, doi: 10.21105/joss.02376.\n",
        "We can get Citation list of primary sources with DataLoader(...).covid19dh_citation"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      }
     ],
     "prompt_number": 4
    },
    {
     "cell_type": "markdown",
     "metadata": {},
     "source": [
      "## Class for policy measure analysis\n",
      "We will `PolicyMeasures` class to find relationship of policy measures and parameter values of SIR-derived ODE models."
     ]
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "# Create analyser with tau value 360 [min] (can be changed)\n",
      "analyser = cs.PolicyMeasures(jhu_data, population_data, oxcgrt_data, tau=360)\n",
      "# The number of registerd countries\n",
      "len(analyser.countries)"
     ],
     "language": "python",
     "metadata": {
      "tags": []
     },
     "outputs": [
      {
       "output_type": "pyout",
       "prompt_number": 5,
       "text": [
        "184"
       ]
      }
     ],
     "prompt_number": 5
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "# We can get Scenario instance for detailed scenario analysis\n",
      "type(analyser.scenario(\"Japan\"))"
     ],
     "language": "python",
     "metadata": {},
     "outputs": [
      {
       "output_type": "pyout",
       "prompt_number": 6,
       "text": [
        "covsirphy.analysis.scenario.Scenario"
       ]
      }
     ],
     "prompt_number": 6
    },
    {
     "cell_type": "markdown",
     "metadata": {},
     "source": [
      "## Set phases with S-R trend analysis\n",
      "We will perform S-R trend analysis to set phases in all countries. Countries which do not have **12th phases** will be un-registered for the next analysis. This number will be adjusted for your analysis."
     ]
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "# Show the number of phases of all countries\n",
      "analyser.trend()\n",
      "pprint(analyser.phase_len(), compact=True)"
     ],
     "language": "python",
     "metadata": {},
     "outputs": [
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "{"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "4"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ": "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "['Tanzania', 'Myanmar', 'Fiji', 'Georgia']"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        " "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "5"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ": "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "["
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Grenada'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Papua New Guinea'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Hungary'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Belize'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Brunei'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Tunisia'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        "     "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Jordan'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "]"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        " "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "6"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ": "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "["
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Jamaica'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Dominica'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Lebanon'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Kyrgyzstan'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Czech Republic'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        "     "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Cambodia'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Equatorial Guinea'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Guyana'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Seychelles'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Guinea-Bissau'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        "     "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Andorra'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Lesotho'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Uganda'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Kosovo'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Burundi'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Mauritius'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        "     "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Antigua and Barbuda'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Ireland'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Trinidad and Tobago'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Monaco'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Yemen'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        "     "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Libya'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "]"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        " "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "7"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ": "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "["
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Saint Vincent and the Grenadines'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Colombia'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'South Sudan'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Bahamas'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        "     "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Mozambique'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Rwanda'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Kazakhstan'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Nepal'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'New Zealand'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Vietnam'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        "     "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Spain'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Netherlands'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Botswana'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'San Marino'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Malawi'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Montenegro'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        "     "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Namibia'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Comoros'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Paraguay'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Cyprus'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Gambia'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        "     "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Central African Republic'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Sao Tome and Principe'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Australia'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        "     "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Ethiopia'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Iceland'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Slovenia'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Israel'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "]"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        " "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "8"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ": "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "["
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Norway'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Costa Rica'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Sudan'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Ecuador'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Mongolia'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Slovakia'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        "     "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Angola'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Maldives'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Liechtenstein'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Djibouti'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Suriname'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        "     "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Madagascar'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Bhutan'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Niger'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Ghana'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Zambia'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Saint Lucia'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Malta'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        "     "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Philippines'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Syria'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Afghanistan'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Croatia'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Barbados'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Argentina'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        "     "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Kenya'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Denmark'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Morocco'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Palestine'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Zimbabwe'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Guatemala'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        "     "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Thailand'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Eritrea'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Venezuela'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Austria'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "]"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        " "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "9"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ": "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "["
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Sri Lanka'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Finland'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'India'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Iraq'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Congo'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'South Africa'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        "     "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Mauritania'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Bermuda'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Taiwan'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Liberia'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Lithuania'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Serbia'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        "     "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'China'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Indonesia'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Haiti'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Uruguay'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Chad'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Qatar'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Benin'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Oman'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        "     "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Greece'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Cameroon'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Tajikistan'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Ukraine'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Korea, South'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Pakistan'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        "     "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Japan'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "]"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        " "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "10"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ": "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "["
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Guinea'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Senegal'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Sierra Leone'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Gabon'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Romania'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Switzerland'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        "      "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Nicaragua'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Cape Verde'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'El Salvador'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Mali'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Saudi Arabia'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        "      "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Azerbaijan'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Somalia'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Albania'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Cuba'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Moldova'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Estonia'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Togo'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        "      "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Armenia'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Singapore'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Uzbekistan'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Swaziland'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Germany'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        "      "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Luxembourg'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Chile'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "]"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        " "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "11"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ": "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "["
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Poland'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Mexico'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Honduras'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'France'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Algeria'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Belarus'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        "      "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'United Arab Emirates'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Canada'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Panama'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Malaysia'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Egypt'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        "      "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Bolivia'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Bangladesh'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Burkina Faso'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Bulgaria'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Nigeria'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Latvia'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        "      "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Bosnia and Herzegovina'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Belgium'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Kuwait'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Dominican Republic'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        "      "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Peru'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "]"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        " "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "12"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ": "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "["
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Italy'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Brazil'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Turkey'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Portugal'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'United States'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Bahrain'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        "      "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Iran'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Macedonia'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "]"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        " "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "13"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ": "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "['Russia']"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "}"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      }
     ],
     "prompt_number": 7
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "# Set phases with S-R trend analysis\n",
      "analyser.trend(min_len=12)\n",
      "# The number of countries\n",
      "len(analyser.countries)"
     ],
     "language": "python",
     "metadata": {},
     "outputs": [
      {
       "output_type": "pyout",
       "prompt_number": 8,
       "text": [
        "9"
       ]
      }
     ],
     "prompt_number": 8
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "phase_len_dict = analyser.phase_len()\n",
      "pprint(phase_len_dict, compact=True)"
     ],
     "language": "python",
     "metadata": {
      "tags": []
     },
     "outputs": [
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "{"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "12"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ": "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "["
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Italy'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Brazil'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Turkey'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Portugal'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'United States'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Bahrain'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        "      "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Iran'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Macedonia'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "]"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        " "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "13"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ": "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "['Russia']"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "}"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      }
     ],
     "prompt_number": 9
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "# Here, only show the countries which have the most phases\n",
      "countries_show = max(phase_len_dict.items(), key=lambda x: x[0])[1]\n",
      "# Show summary\n",
      "analyser.summary(countries=countries_show)"
     ],
     "language": "python",
     "metadata": {
      "tags": []
     },
     "outputs": [
      {
       "html": [
        "<div>\n",
        "<style scoped>\n",
        "    .dataframe tbody tr th:only-of-type {\n",
        "        vertical-align: middle;\n",
        "    }\n",
        "\n",
        "    .dataframe tbody tr th {\n",
        "        vertical-align: top;\n",
        "    }\n",
        "\n",
        "    .dataframe thead th {\n",
        "        text-align: right;\n",
        "    }\n",
        "</style>\n",
        "<table border=\"1\" class=\"dataframe\">\n",
        "  <thead>\n",
        "    <tr style=\"text-align: right;\">\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th>Type</th>\n",
        "      <th>Start</th>\n",
        "      <th>End</th>\n",
        "      <th>Population</th>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>Country</th>\n",
        "      <th>Phase</th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "    </tr>\n",
        "  </thead>\n",
        "  <tbody>\n",
        "    <tr>\n",
        "      <th rowspan=\"13\" valign=\"top\">Russia</th>\n",
        "      <th>0th</th>\n",
        "      <td>Past</td>\n",
        "      <td>12Feb2020</td>\n",
        "      <td>06May2020</td>\n",
        "      <td>330457362</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>1st</th>\n",
        "      <td>Past</td>\n",
        "      <td>07May2020</td>\n",
        "      <td>16May2020</td>\n",
        "      <td>330457362</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>2nd</th>\n",
        "      <td>Past</td>\n",
        "      <td>17May2020</td>\n",
        "      <td>27May2020</td>\n",
        "      <td>330457362</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>3rd</th>\n",
        "      <td>Past</td>\n",
        "      <td>28May2020</td>\n",
        "      <td>05Jun2020</td>\n",
        "      <td>330457362</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>4th</th>\n",
        "      <td>Past</td>\n",
        "      <td>06Jun2020</td>\n",
        "      <td>15Jun2020</td>\n",
        "      <td>330457362</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>5th</th>\n",
        "      <td>Past</td>\n",
        "      <td>16Jun2020</td>\n",
        "      <td>27Jun2020</td>\n",
        "      <td>330457362</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>6th</th>\n",
        "      <td>Past</td>\n",
        "      <td>28Jun2020</td>\n",
        "      <td>10Jul2020</td>\n",
        "      <td>330457362</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>7th</th>\n",
        "      <td>Past</td>\n",
        "      <td>11Jul2020</td>\n",
        "      <td>24Jul2020</td>\n",
        "      <td>330457362</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>8th</th>\n",
        "      <td>Past</td>\n",
        "      <td>25Jul2020</td>\n",
        "      <td>07Aug2020</td>\n",
        "      <td>330457362</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>9th</th>\n",
        "      <td>Past</td>\n",
        "      <td>08Aug2020</td>\n",
        "      <td>23Aug2020</td>\n",
        "      <td>330457362</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>10th</th>\n",
        "      <td>Past</td>\n",
        "      <td>24Aug2020</td>\n",
        "      <td>08Sep2020</td>\n",
        "      <td>330457362</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>11th</th>\n",
        "      <td>Past</td>\n",
        "      <td>09Sep2020</td>\n",
        "      <td>23Sep2020</td>\n",
        "      <td>330457362</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>12th</th>\n",
        "      <td>Past</td>\n",
        "      <td>24Sep2020</td>\n",
        "      <td>06Oct2020</td>\n",
        "      <td>330457362</td>\n",
        "    </tr>\n",
        "  </tbody>\n",
        "</table>\n",
        "</div>"
       ],
       "output_type": "pyout",
       "prompt_number": 10,
       "text": [
        "               Type      Start        End  Population\n",
        "Country Phase                                        \n",
        "Russia  0th    Past  12Feb2020  06May2020   330457362\n",
        "        1st    Past  07May2020  16May2020   330457362\n",
        "        2nd    Past  17May2020  27May2020   330457362\n",
        "        3rd    Past  28May2020  05Jun2020   330457362\n",
        "        4th    Past  06Jun2020  15Jun2020   330457362\n",
        "        5th    Past  16Jun2020  27Jun2020   330457362\n",
        "        6th    Past  28Jun2020  10Jul2020   330457362\n",
        "        7th    Past  11Jul2020  24Jul2020   330457362\n",
        "        8th    Past  25Jul2020  07Aug2020   330457362\n",
        "        9th    Past  08Aug2020  23Aug2020   330457362\n",
        "        10th   Past  24Aug2020  08Sep2020   330457362\n",
        "        11th   Past  09Sep2020  23Sep2020   330457362\n",
        "        12th   Past  24Sep2020  06Oct2020   330457362"
       ]
      }
     ],
     "prompt_number": 10
    },
    {
     "cell_type": "markdown",
     "metadata": {},
     "source": [
      "## Parameter estimation\n",
      "we will estimate the parameter values with SIR-derived ODE models in each country."
     ]
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "# Parameter estimation with SIR-F model\n",
      "analyser.estimate(cs.SIRF)"
     ],
     "language": "python",
     "metadata": {
      "tags": []
     },
     "outputs": [
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n",
        "<SIR-F model: parameter estimation>"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "Running optimization with 4 CPUs..."
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tBHR,  6th phase (19Jul2020 - 03Aug2020): finished  227 trials in 0 min 15 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tBHR, 11th phase (24Sep2020 - 06Oct2020): finished  260 trials in 0 min 15 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tBRA,  5th phase (21Jul2020 - 28Jul2020): finished  900 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tRUS,  1st phase (07May2020 - 16May2020): finished  890 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tBRA,  6th phase (29Jul2020 - 05Aug2020): finished  875 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tUSA,  3rd phase (06Jun2020 - 24Jun2020): finished  878 trials in 1 min  1 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tIRN,  9th phase (18Aug2020 - 06Sep2020): finished  757 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tRUS,  5th phase (16Jun2020 - 27Jun2020): finished  769 trials in 1 min  1 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tIRN,  1st phase (30Mar2020 - 17Apr2020): finished  753 trials in 1 min  1 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tIRN,  3rd phase (15May2020 - 31May2020): finished  178 trials in 0 min 15 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tIRN, 11th phase (22Sep2020 - 06Oct2020): finished  156 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tUSA,  1st phase (20Apr2020 - 10May2020): finished  720 trials in 1 min  1 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tIRN,  7th phase (17Jul2020 - 31Jul2020): finished  215 trials in 0 min 15 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tBRA, 10th phase (04Sep2020 - 16Sep2020): finished  724 trials in 1 min  1 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tRUS,  0th phase (12Feb2020 - 06May2020): finished  733 trials in 1 min  1 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tPRT,  9th phase (08Sep2020 - 18Sep2020): finished  677 trials in 1 min  1 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tRUS, 11th phase (09Sep2020 - 23Sep2020): finished  585 trials in 1 min  1 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tBHR,  4th phase (25Jun2020 - 06Jul2020): finished  502 trials in 0 min 56 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tMKD,  8th phase (23Aug2020 - 02Sep2020): finished  566 trials in 1 min  1 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tTUR,  8th phase (04Aug2020 - 21Aug2020): finished  475 trials in 0 min 40 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tMKD,  0th phase (13Mar2020 - 06Jun2020): finished  573 trials in 1 min  1 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tMKD,  3rd phase (08Jul2020 - 16Jul2020): finished  397 trials in 0 min 30 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tPRT,  1st phase (29Apr2020 - 14May2020): finished  688 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tBRA,  2nd phase (15Jun2020 - 26Jun2020): finished  469 trials in 0 min 40 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tTUR,  3rd phase (09May2020 - 22May2020): finished  686 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tRUS,  7th phase (11Jul2020 - 24Jul2020): finished  681 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tPRT, 10th phase (19Sep2020 - 26Sep2020): finished  690 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tITA,  9th phase (24Aug2020 - 11Sep2020): finished  407 trials in 0 min 30 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tBRA, 11th phase (17Sep2020 - 06Oct2020): finished  725 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tUSA,  5th phase (08Jul2020 - 17Jul2020): finished  324 trials in 0 min 20 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tPRT,  0th phase (14Mar2020 - 28Apr2020): finished  756 trials in 1 min  1 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tUSA,  0th phase (09Feb2020 - 19Apr2020): finished  764 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tTUR,  2nd phase (30Apr2020 - 08May2020): finished  798 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tUSA,  6th phase (18Jul2020 - 28Jul2020): finished  252 trials in 0 min 15 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tRUS,  3rd phase (28May2020 - 05Jun2020): finished  818 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tBHR, 10th phase (15Sep2020 - 23Sep2020): finished  770 trials in 1 min  1 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tBRA,  4th phase (09Jul2020 - 20Jul2020): finished  399 trials in 0 min 31 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tITA,  1st phase (21Mar2020 - 28Mar2020): finished  759 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tBHR,  9th phase (04Sep2020 - 14Sep2020): finished  741 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tIRN,  6th phase (02Jul2020 - 16Jul2020): finished  119 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tBRA,  8th phase (14Aug2020 - 24Aug2020): finished  747 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tITA,  4th phase (19Apr2020 - 30Apr2020): finished  143 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tTUR,  0th phase (24Mar2020 - 16Apr2020): finished  706 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tTUR, 11th phase (20Sep2020 - 06Oct2020): finished  304 trials in 0 min 25 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tBHR,  0th phase (06Mar2020 - 05May2020): finished  635 trials in 1 min  1 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tBHR,  7th phase (04Aug2020 - 18Aug2020): finished  722 trials in 1 min  1 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tPRT,  8th phase (19Aug2020 - 07Sep2020): finished  723 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tUSA,  9th phase (21Aug2020 - 02Sep2020): finished  164 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tUSA,  2nd phase (11May2020 - 05Jun2020): finished  755 trials in 1 min  1 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tIRN,  8th phase (01Aug2020 - 17Aug2020): finished  774 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tMKD,  4th phase (17Jul2020 - 26Jul2020): finished  388 trials in 0 min 25 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tTUR,  9th phase (22Aug2020 - 05Sep2020): finished  377 trials in 0 min 25 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tTUR, 10th phase (06Sep2020 - 19Sep2020): finished  145 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tUSA, 11th phase (19Sep2020 - 06Oct2020): finished  829 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tBHR,  8th phase (19Aug2020 - 03Sep2020): finished  668 trials in 0 min 50 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tUSA,  4th phase (25Jun2020 - 07Jul2020): finished  775 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tBHR,  3rd phase (14Jun2020 - 24Jun2020): finished  777 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tUSA,  7th phase (29Jul2020 - 08Aug2020): finished  330 trials in 0 min 20 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tBRA,  1st phase (28May2020 - 14Jun2020): finished  783 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tITA,  0th phase (24Feb2020 - 20Mar2020): finished  818 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tBRA,  0th phase (16Mar2020 - 27May2020): finished  785 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tTUR,  5th phase (13Jun2020 - 28Jun2020): finished  844 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tMKD,  5th phase (27Jul2020 - 05Aug2020): finished  853 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tBHR,  1st phase (06May2020 - 01Jun2020): finished  835 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tIRN,  2nd phase (18Apr2020 - 14May2020): finished  395 trials in 0 min 25 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tIRN, 10th phase (07Sep2020 - 21Sep2020): finished  824 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tPRT,  5th phase (26Jun2020 - 08Jul2020): finished  767 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tITA,  3rd phase (09Apr2020 - 18Apr2020): finished  227 trials in 0 min 15 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tRUS,  4th phase (06Jun2020 - 15Jun2020): finished  760 trials in 1 min  1 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tPRT,  7th phase (25Jul2020 - 18Aug2020): finished  740 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tUSA,  8th phase (09Aug2020 - 20Aug2020): finished  670 trials in 0 min 50 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tITA, 10th phase (12Sep2020 - 25Sep2020): finished  145 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tITA,  8th phase (10Jul2020 - 23Aug2020): finished  752 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tIRN,  0th phase (26Feb2020 - 29Mar2020): finished  758 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tTUR,  4th phase (23May2020 - 12Jun2020): finished  736 trials in 1 min  1 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tPRT,  2nd phase (15May2020 - 30May2020): finished  700 trials in 1 min  1 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tTUR,  7th phase (15Jul2020 - 03Aug2020): finished  168 trials in 0 min 15 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tTUR,  6th phase (29Jun2020 - 14Jul2020): finished   69 trials in 0 min  5 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tBRA,  7th phase (06Aug2020 - 13Aug2020): finished  336 trials in 0 min 25 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tPRT,  3rd phase (31May2020 - 12Jun2020): finished  701 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tMKD,  9th phase (03Sep2020 - 15Sep2020): finished  727 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tIRN,  4th phase (01Jun2020 - 16Jun2020): finished  723 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tITA,  5th phase (01May2020 - 10May2020): finished  413 trials in 0 min 30 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tTUR,  1st phase (17Apr2020 - 29Apr2020): finished  733 trials in 1 min  1 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tRUS,  2nd phase (17May2020 - 27May2020): finished  779 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tRUS,  6th phase (28Jun2020 - 10Jul2020): finished  773 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tPRT,  6th phase (09Jul2020 - 24Jul2020): finished  761 trials in 1 min  1 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tUSA, 10th phase (03Sep2020 - 18Sep2020): finished  723 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tITA, 11th phase (26Sep2020 - 06Oct2020): finished  230 trials in 0 min 15 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tBRA,  9th phase (25Aug2020 - 03Sep2020): finished  342 trials in 0 min 25 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tBRA,  3rd phase (27Jun2020 - 08Jul2020): finished  807 trials in 1 min  1 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tRUS, 10th phase (24Aug2020 - 08Sep2020): finished  912 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tRUS,  9th phase (08Aug2020 - 23Aug2020): finished  967 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tRUS,  8th phase (25Jul2020 - 07Aug2020): finished  927 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tPRT,  4th phase (13Jun2020 - 25Jun2020): finished 1054 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tBHR,  2nd phase (02Jun2020 - 13Jun2020): finished 1125 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tPRT, 11th phase (27Sep2020 - 06Oct2020): finished 1134 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tITA,  6th phase (11May2020 - 26May2020): finished  341 trials in 0 min 15 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tITA,  7th phase (27May2020 - 09Jul2020): finished  517 trials in 0 min 25 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tIRN,  5th phase (17Jun2020 - 01Jul2020): finished 1095 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tMKD, 10th phase (16Sep2020 - 25Sep2020): finished  587 trials in 0 min 35 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tMKD,  7th phase (14Aug2020 - 22Aug2020): finished  991 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tBHR,  5th phase (07Jul2020 - 18Jul2020): finished  949 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tITA,  2nd phase (29Mar2020 - 08Apr2020): finished 1038 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tMKD,  1st phase (07Jun2020 - 24Jun2020): finished 1242 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "Completed optimization. Total: 23 min 37 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      }
     ],
     "prompt_number": 11
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "# Show summary\n",
      "analyser.summary(countries=countries_show)"
     ],
     "language": "python",
     "metadata": {},
     "outputs": [
      {
       "html": [
        "<div>\n",
        "<style scoped>\n",
        "    .dataframe tbody tr th:only-of-type {\n",
        "        vertical-align: middle;\n",
        "    }\n",
        "\n",
        "    .dataframe tbody tr th {\n",
        "        vertical-align: top;\n",
        "    }\n",
        "\n",
        "    .dataframe thead th {\n",
        "        text-align: right;\n",
        "    }\n",
        "</style>\n",
        "<table border=\"1\" class=\"dataframe\">\n",
        "  <thead>\n",
        "    <tr style=\"text-align: right;\">\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th>Type</th>\n",
        "      <th>Start</th>\n",
        "      <th>End</th>\n",
        "      <th>Population</th>\n",
        "      <th>ODE</th>\n",
        "      <th>Rt</th>\n",
        "      <th>theta</th>\n",
        "      <th>kappa</th>\n",
        "      <th>rho</th>\n",
        "      <th>sigma</th>\n",
        "      <th>tau</th>\n",
        "      <th>alpha1 [-]</th>\n",
        "      <th>1/beta [day]</th>\n",
        "      <th>1/alpha2 [day]</th>\n",
        "      <th>1/gamma [day]</th>\n",
        "      <th>RMSLE</th>\n",
        "      <th>Trials</th>\n",
        "      <th>Runtime</th>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>Country</th>\n",
        "      <th>Phase</th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "    </tr>\n",
        "  </thead>\n",
        "  <tbody>\n",
        "    <tr>\n",
        "      <th rowspan=\"13\" valign=\"top\">Russia</th>\n",
        "      <th>0th</th>\n",
        "      <td>Past</td>\n",
        "      <td>12Feb2020</td>\n",
        "      <td>06May2020</td>\n",
        "      <td>330457362</td>\n",
        "      <td>SIR-F</td>\n",
        "      <td>0.02</td>\n",
        "      <td>0.602763</td>\n",
        "      <td>0.544883</td>\n",
        "      <td>0.0340813</td>\n",
        "      <td>0.00229851</td>\n",
        "      <td>360</td>\n",
        "      <td>0.603</td>\n",
        "      <td>7</td>\n",
        "      <td>0</td>\n",
        "      <td>108</td>\n",
        "      <td>18.9667</td>\n",
        "      <td>733</td>\n",
        "      <td>1 min  1 sec</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>1st</th>\n",
        "      <td>Past</td>\n",
        "      <td>07May2020</td>\n",
        "      <td>16May2020</td>\n",
        "      <td>330457362</td>\n",
        "      <td>SIR-F</td>\n",
        "      <td>2.58</td>\n",
        "      <td>0.00180556</td>\n",
        "      <td>9.34529e-05</td>\n",
        "      <td>0.0131342</td>\n",
        "      <td>0.00499299</td>\n",
        "      <td>360</td>\n",
        "      <td>0.002</td>\n",
        "      <td>19</td>\n",
        "      <td>2675</td>\n",
        "      <td>50</td>\n",
        "      <td>0.0716556</td>\n",
        "      <td>890</td>\n",
        "      <td>1 min  0 sec</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>2nd</th>\n",
        "      <td>Past</td>\n",
        "      <td>17May2020</td>\n",
        "      <td>27May2020</td>\n",
        "      <td>330457362</td>\n",
        "      <td>SIR-F</td>\n",
        "      <td>1.15</td>\n",
        "      <td>0.000245149</td>\n",
        "      <td>0.000113228</td>\n",
        "      <td>0.00683065</td>\n",
        "      <td>0.00582833</td>\n",
        "      <td>360</td>\n",
        "      <td>0</td>\n",
        "      <td>36</td>\n",
        "      <td>2207</td>\n",
        "      <td>42</td>\n",
        "      <td>0.108726</td>\n",
        "      <td>779</td>\n",
        "      <td>1 min  0 sec</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>3rd</th>\n",
        "      <td>Past</td>\n",
        "      <td>28May2020</td>\n",
        "      <td>05Jun2020</td>\n",
        "      <td>330457362</td>\n",
        "      <td>SIR-F</td>\n",
        "      <td>1.1</td>\n",
        "      <td>0.000596242</td>\n",
        "      <td>0.000113634</td>\n",
        "      <td>0.0051706</td>\n",
        "      <td>0.00457356</td>\n",
        "      <td>360</td>\n",
        "      <td>0.001</td>\n",
        "      <td>48</td>\n",
        "      <td>2200</td>\n",
        "      <td>54</td>\n",
        "      <td>0.0627844</td>\n",
        "      <td>818</td>\n",
        "      <td>1 min  0 sec</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>4th</th>\n",
        "      <td>Past</td>\n",
        "      <td>06Jun2020</td>\n",
        "      <td>15Jun2020</td>\n",
        "      <td>330457362</td>\n",
        "      <td>SIR-F</td>\n",
        "      <td>1.32</td>\n",
        "      <td>0.000348294</td>\n",
        "      <td>7.9064e-05</td>\n",
        "      <td>0.00432651</td>\n",
        "      <td>0.00319399</td>\n",
        "      <td>360</td>\n",
        "      <td>0</td>\n",
        "      <td>57</td>\n",
        "      <td>3161</td>\n",
        "      <td>78</td>\n",
        "      <td>0.0549177</td>\n",
        "      <td>760</td>\n",
        "      <td>1 min  1 sec</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>5th</th>\n",
        "      <td>Past</td>\n",
        "      <td>16Jun2020</td>\n",
        "      <td>27Jun2020</td>\n",
        "      <td>330457362</td>\n",
        "      <td>SIR-F</td>\n",
        "      <td>0.8</td>\n",
        "      <td>0.000390937</td>\n",
        "      <td>7.58064e-05</td>\n",
        "      <td>0.00341093</td>\n",
        "      <td>0.00418775</td>\n",
        "      <td>360</td>\n",
        "      <td>0</td>\n",
        "      <td>73</td>\n",
        "      <td>3297</td>\n",
        "      <td>59</td>\n",
        "      <td>0.081878</td>\n",
        "      <td>769</td>\n",
        "      <td>1 min  1 sec</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>6th</th>\n",
        "      <td>Past</td>\n",
        "      <td>28Jun2020</td>\n",
        "      <td>10Jul2020</td>\n",
        "      <td>330457362</td>\n",
        "      <td>SIR-F</td>\n",
        "      <td>0.9</td>\n",
        "      <td>0.0315663</td>\n",
        "      <td>5.962e-05</td>\n",
        "      <td>0.00236461</td>\n",
        "      <td>0.00248191</td>\n",
        "      <td>360</td>\n",
        "      <td>0.032</td>\n",
        "      <td>105</td>\n",
        "      <td>4193</td>\n",
        "      <td>100</td>\n",
        "      <td>0.108488</td>\n",
        "      <td>773</td>\n",
        "      <td>1 min  0 sec</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>7th</th>\n",
        "      <td>Past</td>\n",
        "      <td>11Jul2020</td>\n",
        "      <td>24Jul2020</td>\n",
        "      <td>330457362</td>\n",
        "      <td>SIR-F</td>\n",
        "      <td>0.7</td>\n",
        "      <td>0.178843</td>\n",
        "      <td>5.95719e-05</td>\n",
        "      <td>0.00198296</td>\n",
        "      <td>0.00226741</td>\n",
        "      <td>360</td>\n",
        "      <td>0.179</td>\n",
        "      <td>126</td>\n",
        "      <td>4196</td>\n",
        "      <td>110</td>\n",
        "      <td>0.382905</td>\n",
        "      <td>681</td>\n",
        "      <td>1 min  0 sec</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>8th</th>\n",
        "      <td>Past</td>\n",
        "      <td>25Jul2020</td>\n",
        "      <td>07Aug2020</td>\n",
        "      <td>330457362</td>\n",
        "      <td>SIR-F</td>\n",
        "      <td>0.78</td>\n",
        "      <td>0.0205683</td>\n",
        "      <td>3.65782e-06</td>\n",
        "      <td>0.0016005</td>\n",
        "      <td>0.0020129</td>\n",
        "      <td>360</td>\n",
        "      <td>0.021</td>\n",
        "      <td>156</td>\n",
        "      <td>68346</td>\n",
        "      <td>124</td>\n",
        "      <td>0.0522163</td>\n",
        "      <td>927</td>\n",
        "      <td>1 min  0 sec</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>9th</th>\n",
        "      <td>Past</td>\n",
        "      <td>08Aug2020</td>\n",
        "      <td>23Aug2020</td>\n",
        "      <td>330457362</td>\n",
        "      <td>SIR-F</td>\n",
        "      <td>0.68</td>\n",
        "      <td>0.24861</td>\n",
        "      <td>2.12553e-05</td>\n",
        "      <td>0.00134528</td>\n",
        "      <td>0.00145721</td>\n",
        "      <td>360</td>\n",
        "      <td>0.249</td>\n",
        "      <td>185</td>\n",
        "      <td>11761</td>\n",
        "      <td>171</td>\n",
        "      <td>0.404772</td>\n",
        "      <td>967</td>\n",
        "      <td>1 min  0 sec</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>10th</th>\n",
        "      <td>Past</td>\n",
        "      <td>24Aug2020</td>\n",
        "      <td>08Sep2020</td>\n",
        "      <td>330457362</td>\n",
        "      <td>SIR-F</td>\n",
        "      <td>0.76</td>\n",
        "      <td>0.0724654</td>\n",
        "      <td>3.65943e-06</td>\n",
        "      <td>0.0012449</td>\n",
        "      <td>0.00151932</td>\n",
        "      <td>360</td>\n",
        "      <td>0.072</td>\n",
        "      <td>200</td>\n",
        "      <td>68316</td>\n",
        "      <td>164</td>\n",
        "      <td>0.112623</td>\n",
        "      <td>912</td>\n",
        "      <td>1 min  0 sec</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>11th</th>\n",
        "      <td>Past</td>\n",
        "      <td>09Sep2020</td>\n",
        "      <td>23Sep2020</td>\n",
        "      <td>330457362</td>\n",
        "      <td>SIR-F</td>\n",
        "      <td>0.61</td>\n",
        "      <td>0.388707</td>\n",
        "      <td>7.03663e-05</td>\n",
        "      <td>0.00134482</td>\n",
        "      <td>0.00127697</td>\n",
        "      <td>360</td>\n",
        "      <td>0.389</td>\n",
        "      <td>185</td>\n",
        "      <td>3552</td>\n",
        "      <td>195</td>\n",
        "      <td>0.544157</td>\n",
        "      <td>585</td>\n",
        "      <td>1 min  1 sec</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>12th</th>\n",
        "      <td>Past</td>\n",
        "      <td>24Sep2020</td>\n",
        "      <td>06Oct2020</td>\n",
        "      <td>330457362</td>\n",
        "      <td>-</td>\n",
        "      <td>-</td>\n",
        "      <td>-</td>\n",
        "      <td>-</td>\n",
        "      <td>-</td>\n",
        "      <td>-</td>\n",
        "      <td>-</td>\n",
        "      <td>-</td>\n",
        "      <td>-</td>\n",
        "      <td>-</td>\n",
        "      <td>-</td>\n",
        "      <td>-</td>\n",
        "      <td>-</td>\n",
        "      <td>-</td>\n",
        "    </tr>\n",
        "  </tbody>\n",
        "</table>\n",
        "</div>"
       ],
       "output_type": "pyout",
       "prompt_number": 12,
       "text": [
        "               Type      Start        End  Population    ODE    Rt  \\\n",
        "Country Phase                                                        \n",
        "Russia  0th    Past  12Feb2020  06May2020   330457362  SIR-F  0.02   \n",
        "        1st    Past  07May2020  16May2020   330457362  SIR-F  2.58   \n",
        "        2nd    Past  17May2020  27May2020   330457362  SIR-F  1.15   \n",
        "        3rd    Past  28May2020  05Jun2020   330457362  SIR-F   1.1   \n",
        "        4th    Past  06Jun2020  15Jun2020   330457362  SIR-F  1.32   \n",
        "        5th    Past  16Jun2020  27Jun2020   330457362  SIR-F   0.8   \n",
        "        6th    Past  28Jun2020  10Jul2020   330457362  SIR-F   0.9   \n",
        "        7th    Past  11Jul2020  24Jul2020   330457362  SIR-F   0.7   \n",
        "        8th    Past  25Jul2020  07Aug2020   330457362  SIR-F  0.78   \n",
        "        9th    Past  08Aug2020  23Aug2020   330457362  SIR-F  0.68   \n",
        "        10th   Past  24Aug2020  08Sep2020   330457362  SIR-F  0.76   \n",
        "        11th   Past  09Sep2020  23Sep2020   330457362  SIR-F  0.61   \n",
        "        12th   Past  24Sep2020  06Oct2020   330457362      -     -   \n",
        "\n",
        "                     theta        kappa         rho       sigma  tau  \\\n",
        "Country Phase                                                          \n",
        "Russia  0th       0.602763     0.544883   0.0340813  0.00229851  360   \n",
        "        1st     0.00180556  9.34529e-05   0.0131342  0.00499299  360   \n",
        "        2nd    0.000245149  0.000113228  0.00683065  0.00582833  360   \n",
        "        3rd    0.000596242  0.000113634   0.0051706  0.00457356  360   \n",
        "        4th    0.000348294   7.9064e-05  0.00432651  0.00319399  360   \n",
        "        5th    0.000390937  7.58064e-05  0.00341093  0.00418775  360   \n",
        "        6th      0.0315663    5.962e-05  0.00236461  0.00248191  360   \n",
        "        7th       0.178843  5.95719e-05  0.00198296  0.00226741  360   \n",
        "        8th      0.0205683  3.65782e-06   0.0016005   0.0020129  360   \n",
        "        9th        0.24861  2.12553e-05  0.00134528  0.00145721  360   \n",
        "        10th     0.0724654  3.65943e-06   0.0012449  0.00151932  360   \n",
        "        11th      0.388707  7.03663e-05  0.00134482  0.00127697  360   \n",
        "        12th             -            -           -           -    -   \n",
        "\n",
        "              alpha1 [-] 1/beta [day] 1/alpha2 [day] 1/gamma [day]      RMSLE  \\\n",
        "Country Phase                                                                   \n",
        "Russia  0th        0.603            7              0           108    18.9667   \n",
        "        1st        0.002           19           2675            50  0.0716556   \n",
        "        2nd            0           36           2207            42   0.108726   \n",
        "        3rd        0.001           48           2200            54  0.0627844   \n",
        "        4th            0           57           3161            78  0.0549177   \n",
        "        5th            0           73           3297            59   0.081878   \n",
        "        6th        0.032          105           4193           100   0.108488   \n",
        "        7th        0.179          126           4196           110   0.382905   \n",
        "        8th        0.021          156          68346           124  0.0522163   \n",
        "        9th        0.249          185          11761           171   0.404772   \n",
        "        10th       0.072          200          68316           164   0.112623   \n",
        "        11th       0.389          185           3552           195   0.544157   \n",
        "        12th           -            -              -             -          -   \n",
        "\n",
        "              Trials       Runtime  \n",
        "Country Phase                       \n",
        "Russia  0th      733  1 min  1 sec  \n",
        "        1st      890  1 min  0 sec  \n",
        "        2nd      779  1 min  0 sec  \n",
        "        3rd      818  1 min  0 sec  \n",
        "        4th      760  1 min  1 sec  \n",
        "        5th      769  1 min  1 sec  \n",
        "        6th      773  1 min  0 sec  \n",
        "        7th      681  1 min  0 sec  \n",
        "        8th      927  1 min  0 sec  \n",
        "        9th      967  1 min  0 sec  \n",
        "        10th     912  1 min  0 sec  \n",
        "        11th     585  1 min  1 sec  \n",
        "        12th       -             -  "
       ]
      }
     ],
     "prompt_number": 12
    },
    {
     "cell_type": "markdown",
     "metadata": {},
     "source": [
      "## Compare the history of parameters\n",
      "Here, compare the history of parameter values if countries."
     ]
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "# All parameter/day parameter/Rt/OxCGRT\n",
      "analyser.track().head()"
     ],
     "language": "python",
     "metadata": {},
     "outputs": [
      {
       "html": [
        "<div>\n",
        "<style scoped>\n",
        "    .dataframe tbody tr th:only-of-type {\n",
        "        vertical-align: middle;\n",
        "    }\n",
        "\n",
        "    .dataframe tbody tr th {\n",
        "        vertical-align: top;\n",
        "    }\n",
        "\n",
        "    .dataframe thead th {\n",
        "        text-align: right;\n",
        "    }\n",
        "</style>\n",
        "<table border=\"1\" class=\"dataframe\">\n",
        "  <thead>\n",
        "    <tr style=\"text-align: right;\">\n",
        "      <th></th>\n",
        "      <th>Date</th>\n",
        "      <th>Country</th>\n",
        "      <th>theta</th>\n",
        "      <th>kappa</th>\n",
        "      <th>rho</th>\n",
        "      <th>sigma</th>\n",
        "      <th>alpha1 [-]</th>\n",
        "      <th>1/alpha2 [day]</th>\n",
        "      <th>1/beta [day]</th>\n",
        "      <th>1/gamma [day]</th>\n",
        "      <th>...</th>\n",
        "      <th>Cancel_events</th>\n",
        "      <th>Gatherings_restrictions</th>\n",
        "      <th>Transport_closing</th>\n",
        "      <th>Stay_home_restrictions</th>\n",
        "      <th>Internal_movement_restrictions</th>\n",
        "      <th>International_movement_restrictions</th>\n",
        "      <th>Information_campaigns</th>\n",
        "      <th>Testing_policy</th>\n",
        "      <th>Contact_tracing</th>\n",
        "      <th>Stringency_index</th>\n",
        "    </tr>\n",
        "  </thead>\n",
        "  <tbody>\n",
        "    <tr>\n",
        "      <th>0</th>\n",
        "      <td>2020-02-24</td>\n",
        "      <td>Italy</td>\n",
        "      <td>0.0428818</td>\n",
        "      <td>0.000931691</td>\n",
        "      <td>0.0570058</td>\n",
        "      <td>0.00405785</td>\n",
        "      <td>0.043</td>\n",
        "      <td>268</td>\n",
        "      <td>4</td>\n",
        "      <td>61</td>\n",
        "      <td>...</td>\n",
        "      <td>2</td>\n",
        "      <td>4</td>\n",
        "      <td>0</td>\n",
        "      <td>2</td>\n",
        "      <td>2</td>\n",
        "      <td>3</td>\n",
        "      <td>2</td>\n",
        "      <td>1</td>\n",
        "      <td>2</td>\n",
        "      <td>69.91</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>1</th>\n",
        "      <td>2020-02-24</td>\n",
        "      <td>Italy</td>\n",
        "      <td>0.0428818</td>\n",
        "      <td>0.000931691</td>\n",
        "      <td>0.0570058</td>\n",
        "      <td>0.00405785</td>\n",
        "      <td>0.043</td>\n",
        "      <td>268</td>\n",
        "      <td>4</td>\n",
        "      <td>61</td>\n",
        "      <td>...</td>\n",
        "      <td>2</td>\n",
        "      <td>4</td>\n",
        "      <td>0</td>\n",
        "      <td>2</td>\n",
        "      <td>2</td>\n",
        "      <td>3</td>\n",
        "      <td>2</td>\n",
        "      <td>1</td>\n",
        "      <td>2</td>\n",
        "      <td>69.91</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>2</th>\n",
        "      <td>2020-02-24</td>\n",
        "      <td>Italy</td>\n",
        "      <td>0.0428818</td>\n",
        "      <td>0.000931691</td>\n",
        "      <td>0.0570058</td>\n",
        "      <td>0.00405785</td>\n",
        "      <td>0.043</td>\n",
        "      <td>268</td>\n",
        "      <td>4</td>\n",
        "      <td>61</td>\n",
        "      <td>...</td>\n",
        "      <td>2</td>\n",
        "      <td>4</td>\n",
        "      <td>0</td>\n",
        "      <td>2</td>\n",
        "      <td>2</td>\n",
        "      <td>3</td>\n",
        "      <td>2</td>\n",
        "      <td>1</td>\n",
        "      <td>2</td>\n",
        "      <td>69.91</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>3</th>\n",
        "      <td>2020-02-24</td>\n",
        "      <td>Italy</td>\n",
        "      <td>0.0428818</td>\n",
        "      <td>0.000931691</td>\n",
        "      <td>0.0570058</td>\n",
        "      <td>0.00405785</td>\n",
        "      <td>0.043</td>\n",
        "      <td>268</td>\n",
        "      <td>4</td>\n",
        "      <td>61</td>\n",
        "      <td>...</td>\n",
        "      <td>2</td>\n",
        "      <td>4</td>\n",
        "      <td>0</td>\n",
        "      <td>2</td>\n",
        "      <td>2</td>\n",
        "      <td>3</td>\n",
        "      <td>2</td>\n",
        "      <td>1</td>\n",
        "      <td>2</td>\n",
        "      <td>69.91</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>4</th>\n",
        "      <td>2020-02-24</td>\n",
        "      <td>Italy</td>\n",
        "      <td>0.0428818</td>\n",
        "      <td>0.000931691</td>\n",
        "      <td>0.0570058</td>\n",
        "      <td>0.00405785</td>\n",
        "      <td>0.043</td>\n",
        "      <td>268</td>\n",
        "      <td>4</td>\n",
        "      <td>61</td>\n",
        "      <td>...</td>\n",
        "      <td>2</td>\n",
        "      <td>4</td>\n",
        "      <td>0</td>\n",
        "      <td>2</td>\n",
        "      <td>2</td>\n",
        "      <td>3</td>\n",
        "      <td>2</td>\n",
        "      <td>1</td>\n",
        "      <td>2</td>\n",
        "      <td>69.91</td>\n",
        "    </tr>\n",
        "  </tbody>\n",
        "</table>\n",
        "<p>5 rows \u00d7 23 columns</p>\n",
        "</div>"
       ],
       "output_type": "pyout",
       "prompt_number": 13,
       "text": [
        "        Date Country      theta        kappa        rho       sigma  \\\n",
        "0 2020-02-24   Italy  0.0428818  0.000931691  0.0570058  0.00405785   \n",
        "1 2020-02-24   Italy  0.0428818  0.000931691  0.0570058  0.00405785   \n",
        "2 2020-02-24   Italy  0.0428818  0.000931691  0.0570058  0.00405785   \n",
        "3 2020-02-24   Italy  0.0428818  0.000931691  0.0570058  0.00405785   \n",
        "4 2020-02-24   Italy  0.0428818  0.000931691  0.0570058  0.00405785   \n",
        "\n",
        "  alpha1 [-] 1/alpha2 [day] 1/beta [day] 1/gamma [day]  ... Cancel_events  \\\n",
        "0      0.043            268            4            61  ...             2   \n",
        "1      0.043            268            4            61  ...             2   \n",
        "2      0.043            268            4            61  ...             2   \n",
        "3      0.043            268            4            61  ...             2   \n",
        "4      0.043            268            4            61  ...             2   \n",
        "\n",
        "   Gatherings_restrictions  Transport_closing  Stay_home_restrictions  \\\n",
        "0                        4                  0                       2   \n",
        "1                        4                  0                       2   \n",
        "2                        4                  0                       2   \n",
        "3                        4                  0                       2   \n",
        "4                        4                  0                       2   \n",
        "\n",
        "   Internal_movement_restrictions  International_movement_restrictions  \\\n",
        "0                               2                                    3   \n",
        "1                               2                                    3   \n",
        "2                               2                                    3   \n",
        "3                               2                                    3   \n",
        "4                               2                                    3   \n",
        "\n",
        "   Information_campaigns  Testing_policy  Contact_tracing  Stringency_index  \n",
        "0                      2               1                2             69.91  \n",
        "1                      2               1                2             69.91  \n",
        "2                      2               1                2             69.91  \n",
        "3                      2               1                2             69.91  \n",
        "4                      2               1                2             69.91  \n",
        "\n",
        "[5 rows x 23 columns]"
       ]
      }
     ],
     "prompt_number": 13
    },
    {
     "cell_type": "heading",
     "level": 3,
     "metadata": {},
     "source": [
      "$Rt$: Reprodcution number $\\mathrm{[-]}$"
     ]
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "analyser.param_history(\"Rt\", roll_window=None).tail()"
     ],
     "language": "python",
     "metadata": {},
     "outputs": [
      {
       "output_type": "display_data",
       "png": "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\n",
       "text": [
        "<Figure size 648x432 with 1 Axes>"
       ]
      },
      {
       "html": [
        "<div>\n",
        "<style scoped>\n",
        "    .dataframe tbody tr th:only-of-type {\n",
        "        vertical-align: middle;\n",
        "    }\n",
        "\n",
        "    .dataframe tbody tr th {\n",
        "        vertical-align: top;\n",
        "    }\n",
        "\n",
        "    .dataframe thead th {\n",
        "        text-align: right;\n",
        "    }\n",
        "</style>\n",
        "<table border=\"1\" class=\"dataframe\">\n",
        "  <thead>\n",
        "    <tr style=\"text-align: right;\">\n",
        "      <th>Country</th>\n",
        "      <th>Bahrain</th>\n",
        "      <th>Brazil</th>\n",
        "      <th>Iran</th>\n",
        "      <th>Italy</th>\n",
        "      <th>Macedonia</th>\n",
        "      <th>Portugal</th>\n",
        "      <th>Russia</th>\n",
        "      <th>Turkey</th>\n",
        "      <th>United States</th>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>Date</th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "    </tr>\n",
        "  </thead>\n",
        "  <tbody>\n",
        "    <tr>\n",
        "      <th>2020-10-02</th>\n",
        "      <td>0.78</td>\n",
        "      <td>0.9</td>\n",
        "      <td>1.5</td>\n",
        "      <td>1.99</td>\n",
        "      <td>1.41</td>\n",
        "      <td>1.93</td>\n",
        "      <td>0.61</td>\n",
        "      <td>1.17</td>\n",
        "      <td>1.64</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>2020-10-03</th>\n",
        "      <td>0.78</td>\n",
        "      <td>0.9</td>\n",
        "      <td>1.5</td>\n",
        "      <td>1.99</td>\n",
        "      <td>1.41</td>\n",
        "      <td>1.93</td>\n",
        "      <td>0.61</td>\n",
        "      <td>1.17</td>\n",
        "      <td>1.64</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>2020-10-04</th>\n",
        "      <td>0.78</td>\n",
        "      <td>0.9</td>\n",
        "      <td>1.5</td>\n",
        "      <td>1.99</td>\n",
        "      <td>1.41</td>\n",
        "      <td>1.93</td>\n",
        "      <td>0.61</td>\n",
        "      <td>1.17</td>\n",
        "      <td>1.64</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>2020-10-05</th>\n",
        "      <td>0.78</td>\n",
        "      <td>0.9</td>\n",
        "      <td>1.5</td>\n",
        "      <td>1.99</td>\n",
        "      <td>1.41</td>\n",
        "      <td>1.93</td>\n",
        "      <td>0.61</td>\n",
        "      <td>1.17</td>\n",
        "      <td>1.64</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>2020-10-06</th>\n",
        "      <td>0.78</td>\n",
        "      <td>0.9</td>\n",
        "      <td>1.5</td>\n",
        "      <td>1.99</td>\n",
        "      <td>1.41</td>\n",
        "      <td>1.93</td>\n",
        "      <td>0.61</td>\n",
        "      <td>1.17</td>\n",
        "      <td>1.64</td>\n",
        "    </tr>\n",
        "  </tbody>\n",
        "</table>\n",
        "</div>"
       ],
       "output_type": "pyout",
       "prompt_number": 14,
       "text": [
        "Country     Bahrain  Brazil  Iran  Italy  Macedonia  Portugal  Russia  Turkey  \\\n",
        "Date                                                                            \n",
        "2020-10-02     0.78     0.9   1.5   1.99       1.41      1.93    0.61    1.17   \n",
        "2020-10-03     0.78     0.9   1.5   1.99       1.41      1.93    0.61    1.17   \n",
        "2020-10-04     0.78     0.9   1.5   1.99       1.41      1.93    0.61    1.17   \n",
        "2020-10-05     0.78     0.9   1.5   1.99       1.41      1.93    0.61    1.17   \n",
        "2020-10-06     0.78     0.9   1.5   1.99       1.41      1.93    0.61    1.17   \n",
        "\n",
        "Country     United States  \n",
        "Date                       \n",
        "2020-10-02           1.64  \n",
        "2020-10-03           1.64  \n",
        "2020-10-04           1.64  \n",
        "2020-10-05           1.64  \n",
        "2020-10-06           1.64  "
       ]
      }
     ],
     "prompt_number": 14
    },
    {
     "cell_type": "heading",
     "level": 3,
     "metadata": {},
     "source": [
      "$\\rho$: Effective contact rate $\\mathrm{[-]}$"
     ]
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "analyser.param_history(\"rho\", roll_window=None).tail()"
     ],
     "language": "python",
     "metadata": {},
     "outputs": [
      {
       "output_type": "display_data",
       "png": "\n",
       "text": [
        "<Figure size 648x432 with 1 Axes>"
       ]
      },
      {
       "html": [
        "<div>\n",
        "<style scoped>\n",
        "    .dataframe tbody tr th:only-of-type {\n",
        "        vertical-align: middle;\n",
        "    }\n",
        "\n",
        "    .dataframe tbody tr th {\n",
        "        vertical-align: top;\n",
        "    }\n",
        "\n",
        "    .dataframe thead th {\n",
        "        text-align: right;\n",
        "    }\n",
        "</style>\n",
        "<table border=\"1\" class=\"dataframe\">\n",
        "  <thead>\n",
        "    <tr style=\"text-align: right;\">\n",
        "      <th>Country</th>\n",
        "      <th>Bahrain</th>\n",
        "      <th>Brazil</th>\n",
        "      <th>Iran</th>\n",
        "      <th>Italy</th>\n",
        "      <th>Macedonia</th>\n",
        "      <th>Portugal</th>\n",
        "      <th>Russia</th>\n",
        "      <th>Turkey</th>\n",
        "      <th>United States</th>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>Date</th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "    </tr>\n",
        "  </thead>\n",
        "  <tbody>\n",
        "    <tr>\n",
        "      <th>2020-10-02</th>\n",
        "      <td>0.020851</td>\n",
        "      <td>0.015297</td>\n",
        "      <td>0.018197</td>\n",
        "      <td>0.010786</td>\n",
        "      <td>0.018098</td>\n",
        "      <td>0.002413</td>\n",
        "      <td>0.001345</td>\n",
        "      <td>0.01249</td>\n",
        "      <td>0.002384</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>2020-10-03</th>\n",
        "      <td>0.020851</td>\n",
        "      <td>0.015297</td>\n",
        "      <td>0.018197</td>\n",
        "      <td>0.010786</td>\n",
        "      <td>0.018098</td>\n",
        "      <td>0.002413</td>\n",
        "      <td>0.001345</td>\n",
        "      <td>0.01249</td>\n",
        "      <td>0.002384</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>2020-10-04</th>\n",
        "      <td>0.020851</td>\n",
        "      <td>0.015297</td>\n",
        "      <td>0.018197</td>\n",
        "      <td>0.010786</td>\n",
        "      <td>0.018098</td>\n",
        "      <td>0.002413</td>\n",
        "      <td>0.001345</td>\n",
        "      <td>0.01249</td>\n",
        "      <td>0.002384</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>2020-10-05</th>\n",
        "      <td>0.020851</td>\n",
        "      <td>0.015297</td>\n",
        "      <td>0.018197</td>\n",
        "      <td>0.010786</td>\n",
        "      <td>0.018098</td>\n",
        "      <td>0.002413</td>\n",
        "      <td>0.001345</td>\n",
        "      <td>0.01249</td>\n",
        "      <td>0.002384</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>2020-10-06</th>\n",
        "      <td>0.020851</td>\n",
        "      <td>0.015297</td>\n",
        "      <td>0.018197</td>\n",
        "      <td>0.010786</td>\n",
        "      <td>0.018098</td>\n",
        "      <td>0.002413</td>\n",
        "      <td>0.001345</td>\n",
        "      <td>0.01249</td>\n",
        "      <td>0.002384</td>\n",
        "    </tr>\n",
        "  </tbody>\n",
        "</table>\n",
        "</div>"
       ],
       "output_type": "pyout",
       "prompt_number": 15,
       "text": [
        "Country      Bahrain    Brazil      Iran     Italy  Macedonia  Portugal  \\\n",
        "Date                                                                      \n",
        "2020-10-02  0.020851  0.015297  0.018197  0.010786   0.018098  0.002413   \n",
        "2020-10-03  0.020851  0.015297  0.018197  0.010786   0.018098  0.002413   \n",
        "2020-10-04  0.020851  0.015297  0.018197  0.010786   0.018098  0.002413   \n",
        "2020-10-05  0.020851  0.015297  0.018197  0.010786   0.018098  0.002413   \n",
        "2020-10-06  0.020851  0.015297  0.018197  0.010786   0.018098  0.002413   \n",
        "\n",
        "Country       Russia   Turkey  United States  \n",
        "Date                                          \n",
        "2020-10-02  0.001345  0.01249       0.002384  \n",
        "2020-10-03  0.001345  0.01249       0.002384  \n",
        "2020-10-04  0.001345  0.01249       0.002384  \n",
        "2020-10-05  0.001345  0.01249       0.002384  \n",
        "2020-10-06  0.001345  0.01249       0.002384  "
       ]
      }
     ],
     "prompt_number": 15
    },
    {
     "cell_type": "heading",
     "level": 3,
     "metadata": {},
     "source": [
      "$\\sigma$: Recovery rate $\\mathrm{[-]}$"
     ]
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "analyser.param_history(\"sigma\", roll_window=None).tail()"
     ],
     "language": "python",
     "metadata": {},
     "outputs": [
      {
       "output_type": "display_data",
       "png": "\n",
       "text": [
        "<Figure size 648x432 with 1 Axes>"
       ]
      },
      {
       "html": [
        "<div>\n",
        "<style scoped>\n",
        "    .dataframe tbody tr th:only-of-type {\n",
        "        vertical-align: middle;\n",
        "    }\n",
        "\n",
        "    .dataframe tbody tr th {\n",
        "        vertical-align: top;\n",
        "    }\n",
        "\n",
        "    .dataframe thead th {\n",
        "        text-align: right;\n",
        "    }\n",
        "</style>\n",
        "<table border=\"1\" class=\"dataframe\">\n",
        "  <thead>\n",
        "    <tr style=\"text-align: right;\">\n",
        "      <th>Country</th>\n",
        "      <th>Bahrain</th>\n",
        "      <th>Brazil</th>\n",
        "      <th>Iran</th>\n",
        "      <th>Italy</th>\n",
        "      <th>Macedonia</th>\n",
        "      <th>Portugal</th>\n",
        "      <th>Russia</th>\n",
        "      <th>Turkey</th>\n",
        "      <th>United States</th>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>Date</th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "    </tr>\n",
        "  </thead>\n",
        "  <tbody>\n",
        "    <tr>\n",
        "      <th>2020-10-02</th>\n",
        "      <td>0.026695</td>\n",
        "      <td>0.016628</td>\n",
        "      <td>0.01139</td>\n",
        "      <td>0.005351</td>\n",
        "      <td>0.012282</td>\n",
        "      <td>0.001224</td>\n",
        "      <td>0.001277</td>\n",
        "      <td>0.010128</td>\n",
        "      <td>0.00144</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>2020-10-03</th>\n",
        "      <td>0.026695</td>\n",
        "      <td>0.016628</td>\n",
        "      <td>0.01139</td>\n",
        "      <td>0.005351</td>\n",
        "      <td>0.012282</td>\n",
        "      <td>0.001224</td>\n",
        "      <td>0.001277</td>\n",
        "      <td>0.010128</td>\n",
        "      <td>0.00144</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>2020-10-04</th>\n",
        "      <td>0.026695</td>\n",
        "      <td>0.016628</td>\n",
        "      <td>0.01139</td>\n",
        "      <td>0.005351</td>\n",
        "      <td>0.012282</td>\n",
        "      <td>0.001224</td>\n",
        "      <td>0.001277</td>\n",
        "      <td>0.010128</td>\n",
        "      <td>0.00144</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>2020-10-05</th>\n",
        "      <td>0.026695</td>\n",
        "      <td>0.016628</td>\n",
        "      <td>0.01139</td>\n",
        "      <td>0.005351</td>\n",
        "      <td>0.012282</td>\n",
        "      <td>0.001224</td>\n",
        "      <td>0.001277</td>\n",
        "      <td>0.010128</td>\n",
        "      <td>0.00144</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>2020-10-06</th>\n",
        "      <td>0.026695</td>\n",
        "      <td>0.016628</td>\n",
        "      <td>0.01139</td>\n",
        "      <td>0.005351</td>\n",
        "      <td>0.012282</td>\n",
        "      <td>0.001224</td>\n",
        "      <td>0.001277</td>\n",
        "      <td>0.010128</td>\n",
        "      <td>0.00144</td>\n",
        "    </tr>\n",
        "  </tbody>\n",
        "</table>\n",
        "</div>"
       ],
       "output_type": "pyout",
       "prompt_number": 16,
       "text": [
        "Country      Bahrain    Brazil     Iran     Italy  Macedonia  Portugal  \\\n",
        "Date                                                                     \n",
        "2020-10-02  0.026695  0.016628  0.01139  0.005351   0.012282  0.001224   \n",
        "2020-10-03  0.026695  0.016628  0.01139  0.005351   0.012282  0.001224   \n",
        "2020-10-04  0.026695  0.016628  0.01139  0.005351   0.012282  0.001224   \n",
        "2020-10-05  0.026695  0.016628  0.01139  0.005351   0.012282  0.001224   \n",
        "2020-10-06  0.026695  0.016628  0.01139  0.005351   0.012282  0.001224   \n",
        "\n",
        "Country       Russia    Turkey  United States  \n",
        "Date                                           \n",
        "2020-10-02  0.001277  0.010128        0.00144  \n",
        "2020-10-03  0.001277  0.010128        0.00144  \n",
        "2020-10-04  0.001277  0.010128        0.00144  \n",
        "2020-10-05  0.001277  0.010128        0.00144  \n",
        "2020-10-06  0.001277  0.010128        0.00144  "
       ]
      }
     ],
     "prompt_number": 16
    },
    {
     "cell_type": "heading",
     "level": 3,
     "metadata": {},
     "source": [
      "$\\kappa$: Mortality rate of infected cases $\\mathrm{[-]}$"
     ]
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "analyser.param_history(\"kappa\", roll_window=None).tail()"
     ],
     "language": "python",
     "metadata": {},
     "outputs": [
      {
       "output_type": "display_data",
       "png": "\n",
       "text": [
        "<Figure size 648x432 with 1 Axes>"
       ]
      },
      {
       "html": [
        "<div>\n",
        "<style scoped>\n",
        "    .dataframe tbody tr th:only-of-type {\n",
        "        vertical-align: middle;\n",
        "    }\n",
        "\n",
        "    .dataframe tbody tr th {\n",
        "        vertical-align: top;\n",
        "    }\n",
        "\n",
        "    .dataframe thead th {\n",
        "        text-align: right;\n",
        "    }\n",
        "</style>\n",
        "<table border=\"1\" class=\"dataframe\">\n",
        "  <thead>\n",
        "    <tr style=\"text-align: right;\">\n",
        "      <th>Country</th>\n",
        "      <th>Bahrain</th>\n",
        "      <th>Brazil</th>\n",
        "      <th>Iran</th>\n",
        "      <th>Italy</th>\n",
        "      <th>Macedonia</th>\n",
        "      <th>Portugal</th>\n",
        "      <th>Russia</th>\n",
        "      <th>Turkey</th>\n",
        "      <th>United States</th>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>Date</th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "    </tr>\n",
        "  </thead>\n",
        "  <tbody>\n",
        "    <tr>\n",
        "      <th>2020-10-02</th>\n",
        "      <td>0.000096</td>\n",
        "      <td>0.000426</td>\n",
        "      <td>0.000093</td>\n",
        "      <td>0.000071</td>\n",
        "      <td>0.000071</td>\n",
        "      <td>0.000025</td>\n",
        "      <td>0.00007</td>\n",
        "      <td>0.000552</td>\n",
        "      <td>0.00001</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>2020-10-03</th>\n",
        "      <td>0.000096</td>\n",
        "      <td>0.000426</td>\n",
        "      <td>0.000093</td>\n",
        "      <td>0.000071</td>\n",
        "      <td>0.000071</td>\n",
        "      <td>0.000025</td>\n",
        "      <td>0.00007</td>\n",
        "      <td>0.000552</td>\n",
        "      <td>0.00001</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>2020-10-04</th>\n",
        "      <td>0.000096</td>\n",
        "      <td>0.000426</td>\n",
        "      <td>0.000093</td>\n",
        "      <td>0.000071</td>\n",
        "      <td>0.000071</td>\n",
        "      <td>0.000025</td>\n",
        "      <td>0.00007</td>\n",
        "      <td>0.000552</td>\n",
        "      <td>0.00001</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>2020-10-05</th>\n",
        "      <td>0.000096</td>\n",
        "      <td>0.000426</td>\n",
        "      <td>0.000093</td>\n",
        "      <td>0.000071</td>\n",
        "      <td>0.000071</td>\n",
        "      <td>0.000025</td>\n",
        "      <td>0.00007</td>\n",
        "      <td>0.000552</td>\n",
        "      <td>0.00001</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>2020-10-06</th>\n",
        "      <td>0.000096</td>\n",
        "      <td>0.000426</td>\n",
        "      <td>0.000093</td>\n",
        "      <td>0.000071</td>\n",
        "      <td>0.000071</td>\n",
        "      <td>0.000025</td>\n",
        "      <td>0.00007</td>\n",
        "      <td>0.000552</td>\n",
        "      <td>0.00001</td>\n",
        "    </tr>\n",
        "  </tbody>\n",
        "</table>\n",
        "</div>"
       ],
       "output_type": "pyout",
       "prompt_number": 17,
       "text": [
        "Country      Bahrain    Brazil      Iran     Italy  Macedonia  Portugal  \\\n",
        "Date                                                                      \n",
        "2020-10-02  0.000096  0.000426  0.000093  0.000071   0.000071  0.000025   \n",
        "2020-10-03  0.000096  0.000426  0.000093  0.000071   0.000071  0.000025   \n",
        "2020-10-04  0.000096  0.000426  0.000093  0.000071   0.000071  0.000025   \n",
        "2020-10-05  0.000096  0.000426  0.000093  0.000071   0.000071  0.000025   \n",
        "2020-10-06  0.000096  0.000426  0.000093  0.000071   0.000071  0.000025   \n",
        "\n",
        "Country      Russia    Turkey  United States  \n",
        "Date                                          \n",
        "2020-10-02  0.00007  0.000552        0.00001  \n",
        "2020-10-03  0.00007  0.000552        0.00001  \n",
        "2020-10-04  0.00007  0.000552        0.00001  \n",
        "2020-10-05  0.00007  0.000552        0.00001  \n",
        "2020-10-06  0.00007  0.000552        0.00001  "
       ]
      }
     ],
     "prompt_number": 17
    },
    {
     "cell_type": "heading",
     "level": 3,
     "metadata": {},
     "source": [
      "$\\theta$: Mortality rate of S$^\\ast$ cases $\\mathrm{[-]}$"
     ]
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "analyser.param_history(\"theta\", roll_window=None).tail()"
     ],
     "language": "python",
     "metadata": {},
     "outputs": [
      {
       "output_type": "display_data",
       "png": "\n",
       "text": [
        "<Figure size 648x432 with 1 Axes>"
       ]
      },
      {
       "html": [
        "<div>\n",
        "<style scoped>\n",
        "    .dataframe tbody tr th:only-of-type {\n",
        "        vertical-align: middle;\n",
        "    }\n",
        "\n",
        "    .dataframe tbody tr th {\n",
        "        vertical-align: top;\n",
        "    }\n",
        "\n",
        "    .dataframe thead th {\n",
        "        text-align: right;\n",
        "    }\n",
        "</style>\n",
        "<table border=\"1\" class=\"dataframe\">\n",
        "  <thead>\n",
        "    <tr style=\"text-align: right;\">\n",
        "      <th>Country</th>\n",
        "      <th>Bahrain</th>\n",
        "      <th>Brazil</th>\n",
        "      <th>Iran</th>\n",
        "      <th>Italy</th>\n",
        "      <th>Macedonia</th>\n",
        "      <th>Portugal</th>\n",
        "      <th>Russia</th>\n",
        "      <th>Turkey</th>\n",
        "      <th>United States</th>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>Date</th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "    </tr>\n",
        "  </thead>\n",
        "  <tbody>\n",
        "    <tr>\n",
        "      <th>2020-10-02</th>\n",
        "      <td>0.000517</td>\n",
        "      <td>0.000571</td>\n",
        "      <td>0.052795</td>\n",
        "      <td>0.000909</td>\n",
        "      <td>0.036441</td>\n",
        "      <td>0.002349</td>\n",
        "      <td>0.388707</td>\n",
        "      <td>0.000681</td>\n",
        "      <td>0.002209</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>2020-10-03</th>\n",
        "      <td>0.000517</td>\n",
        "      <td>0.000571</td>\n",
        "      <td>0.052795</td>\n",
        "      <td>0.000909</td>\n",
        "      <td>0.036441</td>\n",
        "      <td>0.002349</td>\n",
        "      <td>0.388707</td>\n",
        "      <td>0.000681</td>\n",
        "      <td>0.002209</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>2020-10-04</th>\n",
        "      <td>0.000517</td>\n",
        "      <td>0.000571</td>\n",
        "      <td>0.052795</td>\n",
        "      <td>0.000909</td>\n",
        "      <td>0.036441</td>\n",
        "      <td>0.002349</td>\n",
        "      <td>0.388707</td>\n",
        "      <td>0.000681</td>\n",
        "      <td>0.002209</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>2020-10-05</th>\n",
        "      <td>0.000517</td>\n",
        "      <td>0.000571</td>\n",
        "      <td>0.052795</td>\n",
        "      <td>0.000909</td>\n",
        "      <td>0.036441</td>\n",
        "      <td>0.002349</td>\n",
        "      <td>0.388707</td>\n",
        "      <td>0.000681</td>\n",
        "      <td>0.002209</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>2020-10-06</th>\n",
        "      <td>0.000517</td>\n",
        "      <td>0.000571</td>\n",
        "      <td>0.052795</td>\n",
        "      <td>0.000909</td>\n",
        "      <td>0.036441</td>\n",
        "      <td>0.002349</td>\n",
        "      <td>0.388707</td>\n",
        "      <td>0.000681</td>\n",
        "      <td>0.002209</td>\n",
        "    </tr>\n",
        "  </tbody>\n",
        "</table>\n",
        "</div>"
       ],
       "output_type": "pyout",
       "prompt_number": 18,
       "text": [
        "Country      Bahrain    Brazil      Iran     Italy  Macedonia  Portugal  \\\n",
        "Date                                                                      \n",
        "2020-10-02  0.000517  0.000571  0.052795  0.000909   0.036441  0.002349   \n",
        "2020-10-03  0.000517  0.000571  0.052795  0.000909   0.036441  0.002349   \n",
        "2020-10-04  0.000517  0.000571  0.052795  0.000909   0.036441  0.002349   \n",
        "2020-10-05  0.000517  0.000571  0.052795  0.000909   0.036441  0.002349   \n",
        "2020-10-06  0.000517  0.000571  0.052795  0.000909   0.036441  0.002349   \n",
        "\n",
        "Country       Russia    Turkey  United States  \n",
        "Date                                           \n",
        "2020-10-02  0.388707  0.000681       0.002209  \n",
        "2020-10-03  0.388707  0.000681       0.002209  \n",
        "2020-10-04  0.388707  0.000681       0.002209  \n",
        "2020-10-05  0.388707  0.000681       0.002209  \n",
        "2020-10-06  0.388707  0.000681       0.002209  "
       ]
      }
     ],
     "prompt_number": 18
    },
    {
     "cell_type": "markdown",
     "metadata": {},
     "source": [
      "## (Experimental): Relationship of OxCGRT index and parameter values\n",
      "Government responses will impact on parameter values of ODE models about 14 days later. Here, we will investigate on the relationship of [stringency index (from OxCGRT)](https://github.com/OxCGRT/covid-policy-tracker/blob/master/documentation/index_methodology.md) and reproduction number/model parameters.\n"
     ]
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "%matplotlib inline\n",
      "from matplotlib import pyplot as plt\n",
      "import seaborn as sns\n",
      "import pandas as pd"
     ],
     "language": "python",
     "metadata": {},
     "outputs": [],
     "prompt_number": 19
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "df = analyser.track()\n",
      "param_cols = [\"Rt\", *cs.SIRF.PARAMETERS]\n",
      "oxcgrt_cols = oxcgrt_data.OXCGRT_VARS[:]\n",
      "cols = param_cols + oxcgrt_cols\n",
      "delay = 14\n",
      "\n",
      "for col in param_cols:\n",
      "    df[col] = pd.to_numeric(df[col], errors=\"coerce\")\n",
      "    df[col] = df.groupby(\"Country\")[col].shift(0 - delay)\n",
      "\n",
      "df = df.dropna(how=\"any\")\n",
      "df = df.loc[:, [\"Date\", \"Country\", *cols]]\n",
      "track_df = df.copy()\n",
      "track_df.info()"
     ],
     "language": "python",
     "metadata": {},
     "outputs": [
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "<class 'pandas.core.frame.DataFrame'>\n",
        "Int64Index: 41756 entries, 0 to 41867\n",
        "Data columns (total 19 columns):\n",
        " #   Column                               Non-Null Count  Dtype         \n",
        "---  ------                               --------------  -----         \n",
        " 0   Date                                 41756 non-null  datetime64[ns]\n",
        " 1   Country                              41756 non-null  object        \n",
        " 2   Rt                                   41756 non-null  float64       \n",
        " 3   theta                                41756 non-null  float64       \n",
        " 4   kappa                                41756 non-null  float64       \n",
        " 5   rho                                  41756 non-null  float64       \n",
        " 6   sigma                                41756 non-null  float64       \n",
        " 7   School_closing                       41756 non-null  int64         \n",
        " 8   Workplace_closing                    41756 non-null  int64         \n",
        " 9   Cancel_events                        41756 non-null  int64         \n",
        " 10  Gatherings_restrictions              41756 non-null  int64         \n",
        " 11  Transport_closing                    41756 non-null  int64         \n",
        " 12  Stay_home_restrictions               41756 non-null  int64         \n",
        " 13  Internal_movement_restrictions       41756 non-null  int64         \n",
        " 14  International_movement_restrictions  41756 non-null  int64         \n",
        " 15  Information_campaigns                41756 non-null  int64         \n",
        " 16  Testing_policy                       41756 non-null  int64         \n",
        " 17  Contact_tracing                      41756 non-null  int64         \n",
        " 18  Stringency_index                     41756 non-null  float64       \n",
        "dtypes: datetime64[ns](1), float64(6), int64(11), object(1)\n",
        "memory usage: 6.4+ MB\n"
       ]
      }
     ],
     "prompt_number": 20
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "# Correlation\n",
      "df = track_df.copy()\n",
      "df.corr().style.background_gradient(axis=None)"
     ],
     "language": "python",
     "metadata": {},
     "outputs": [
      {
       "html": [
        "<style  type=\"text/css\" >\n",
        "#T_a45403d2_07ec_11eb_8fbb_525400897695row0_col0,#T_a45403d2_07ec_11eb_8fbb_525400897695row1_col1,#T_a45403d2_07ec_11eb_8fbb_525400897695row2_col2,#T_a45403d2_07ec_11eb_8fbb_525400897695row3_col3,#T_a45403d2_07ec_11eb_8fbb_525400897695row4_col4,#T_a45403d2_07ec_11eb_8fbb_525400897695row5_col5,#T_a45403d2_07ec_11eb_8fbb_525400897695row6_col6,#T_a45403d2_07ec_11eb_8fbb_525400897695row7_col7,#T_a45403d2_07ec_11eb_8fbb_525400897695row8_col8,#T_a45403d2_07ec_11eb_8fbb_525400897695row9_col9,#T_a45403d2_07ec_11eb_8fbb_525400897695row10_col10,#T_a45403d2_07ec_11eb_8fbb_525400897695row11_col11,#T_a45403d2_07ec_11eb_8fbb_525400897695row12_col12,#T_a45403d2_07ec_11eb_8fbb_525400897695row13_col13,#T_a45403d2_07ec_11eb_8fbb_525400897695row14_col14,#T_a45403d2_07ec_11eb_8fbb_525400897695row15_col15,#T_a45403d2_07ec_11eb_8fbb_525400897695row16_col16{\n",
        "            background-color:  #023858;\n",
        "            color:  #f1f1f1;\n",
        "        }#T_a45403d2_07ec_11eb_8fbb_525400897695row0_col1,#T_a45403d2_07ec_11eb_8fbb_525400897695row1_col0{\n",
        "            background-color:  #ede8f3;\n",
        "            color:  #000000;\n",
        "        }#T_a45403d2_07ec_11eb_8fbb_525400897695row0_col2,#T_a45403d2_07ec_11eb_8fbb_525400897695row0_col12,#T_a45403d2_07ec_11eb_8fbb_525400897695row2_col0,#T_a45403d2_07ec_11eb_8fbb_525400897695row2_col5,#T_a45403d2_07ec_11eb_8fbb_525400897695row5_col2,#T_a45403d2_07ec_11eb_8fbb_525400897695row12_col0{\n",
        "            background-color:  #e5e1ef;\n",
        "            color:  #000000;\n",
        "        }#T_a45403d2_07ec_11eb_8fbb_525400897695row0_col3,#T_a45403d2_07ec_11eb_8fbb_525400897695row3_col0{\n",
        "            background-color:  #83afd3;\n",
        "            color:  #000000;\n",
        "        }#T_a45403d2_07ec_11eb_8fbb_525400897695row0_col4,#T_a45403d2_07ec_11eb_8fbb_525400897695row2_col6,#T_a45403d2_07ec_11eb_8fbb_525400897695row4_col0,#T_a45403d2_07ec_11eb_8fbb_525400897695row6_col2{\n",
        "            background-color:  #d5d5e8;\n",
        "            color:  #000000;\n",
        "        }#T_a45403d2_07ec_11eb_8fbb_525400897695row0_col5,#T_a45403d2_07ec_11eb_8fbb_525400897695row3_col11,#T_a45403d2_07ec_11eb_8fbb_525400897695row5_col0,#T_a45403d2_07ec_11eb_8fbb_525400897695row11_col3{\n",
        "            background-color:  #a5bddb;\n",
        "            color:  #000000;\n",
        "        }#T_a45403d2_07ec_11eb_8fbb_525400897695row0_col6,#T_a45403d2_07ec_11eb_8fbb_525400897695row6_col0{\n",
        "            background-color:  #a9bfdc;\n",
        "            color:  #000000;\n",
        "        }#T_a45403d2_07ec_11eb_8fbb_525400897695row0_col7,#T_a45403d2_07ec_11eb_8fbb_525400897695row1_col11,#T_a45403d2_07ec_11eb_8fbb_525400897695row3_col8,#T_a45403d2_07ec_11eb_8fbb_525400897695row4_col14,#T_a45403d2_07ec_11eb_8fbb_525400897695row7_col0,#T_a45403d2_07ec_11eb_8fbb_525400897695row8_col3,#T_a45403d2_07ec_11eb_8fbb_525400897695row11_col1,#T_a45403d2_07ec_11eb_8fbb_525400897695row14_col4{\n",
        "            background-color:  #ced0e6;\n",
        "            color:  #000000;\n",
        "        }#T_a45403d2_07ec_11eb_8fbb_525400897695row0_col8,#T_a45403d2_07ec_11eb_8fbb_525400897695row4_col6,#T_a45403d2_07ec_11eb_8fbb_525400897695row6_col4,#T_a45403d2_07ec_11eb_8fbb_525400897695row8_col0{\n",
        "            background-color:  #afc1dd;\n",
        "            color:  #000000;\n",
        "        }#T_a45403d2_07ec_11eb_8fbb_525400897695row0_col9,#T_a45403d2_07ec_11eb_8fbb_525400897695row9_col0{\n",
        "            background-color:  #abbfdc;\n",
        "            color:  #000000;\n",
        "        }#T_a45403d2_07ec_11eb_8fbb_525400897695row0_col10,#T_a45403d2_07ec_11eb_8fbb_525400897695row4_col8,#T_a45403d2_07ec_11eb_8fbb_525400897695row8_col4,#T_a45403d2_07ec_11eb_8fbb_525400897695row10_col0{\n",
        "            background-color:  #c0c9e2;\n",
        "            color:  #000000;\n",
        "        }#T_a45403d2_07ec_11eb_8fbb_525400897695row0_col11,#T_a45403d2_07ec_11eb_8fbb_525400897695row11_col0{\n",
        "            background-color:  #b9c6e0;\n",
        "            color:  #000000;\n",
        "        }#T_a45403d2_07ec_11eb_8fbb_525400897695row0_col13,#T_a45403d2_07ec_11eb_8fbb_525400897695row13_col0{\n",
        "            background-color:  #cdd0e5;\n",
        "            color:  #000000;\n",
        "        }#T_a45403d2_07ec_11eb_8fbb_525400897695row0_col14,#T_a45403d2_07ec_11eb_8fbb_525400897695row1_col6,#T_a45403d2_07ec_11eb_8fbb_525400897695row6_col1,#T_a45403d2_07ec_11eb_8fbb_525400897695row14_col0{\n",
        "            background-color:  #d3d4e7;\n",
        "            color:  #000000;\n",
        "        }#T_a45403d2_07ec_11eb_8fbb_525400897695row0_col15,#T_a45403d2_07ec_11eb_8fbb_525400897695row15_col0{\n",
        "            background-color:  #f1ebf4;\n",
        "            color:  #000000;\n",
        "        }#T_a45403d2_07ec_11eb_8fbb_525400897695row0_col16,#T_a45403d2_07ec_11eb_8fbb_525400897695row4_col9,#T_a45403d2_07ec_11eb_8fbb_525400897695row9_col4,#T_a45403d2_07ec_11eb_8fbb_525400897695row16_col0{\n",
        "            background-color:  #bfc9e1;\n",
        "            color:  #000000;\n",
        "        }#T_a45403d2_07ec_11eb_8fbb_525400897695row1_col2,#T_a45403d2_07ec_11eb_8fbb_525400897695row2_col1{\n",
        "            background-color:  #034973;\n",
        "            color:  #f1f1f1;\n",
        "        }#T_a45403d2_07ec_11eb_8fbb_525400897695row1_col3,#T_a45403d2_07ec_11eb_8fbb_525400897695row3_col1{\n",
        "            background-color:  #056caa;\n",
        "            color:  #f1f1f1;\n",
        "        }#T_a45403d2_07ec_11eb_8fbb_525400897695row1_col4,#T_a45403d2_07ec_11eb_8fbb_525400897695row4_col1{\n",
        "            background-color:  #d0d1e6;\n",
        "            color:  #000000;\n",
        "        }#T_a45403d2_07ec_11eb_8fbb_525400897695row1_col5,#T_a45403d2_07ec_11eb_8fbb_525400897695row1_col8,#T_a45403d2_07ec_11eb_8fbb_525400897695row5_col1,#T_a45403d2_07ec_11eb_8fbb_525400897695row8_col1{\n",
        "            background-color:  #ede7f2;\n",
        "            color:  #000000;\n",
        "        }#T_a45403d2_07ec_11eb_8fbb_525400897695row1_col7,#T_a45403d2_07ec_11eb_8fbb_525400897695row7_col1{\n",
        "            background-color:  #e4e1ef;\n",
        "            color:  #000000;\n",
        "        }#T_a45403d2_07ec_11eb_8fbb_525400897695row1_col9,#T_a45403d2_07ec_11eb_8fbb_525400897695row9_col1{\n",
        "            background-color:  #eee9f3;\n",
        "            color:  #000000;\n",
        "        }#T_a45403d2_07ec_11eb_8fbb_525400897695row1_col10,#T_a45403d2_07ec_11eb_8fbb_525400897695row4_col16,#T_a45403d2_07ec_11eb_8fbb_525400897695row10_col1,#T_a45403d2_07ec_11eb_8fbb_525400897695row16_col4{\n",
        "            background-color:  #9cb9d9;\n",
        "            color:  #000000;\n",
        "        }#T_a45403d2_07ec_11eb_8fbb_525400897695row1_col12,#T_a45403d2_07ec_11eb_8fbb_525400897695row12_col1{\n",
        "            background-color:  #86b0d3;\n",
        "            color:  #000000;\n",
        "        }#T_a45403d2_07ec_11eb_8fbb_525400897695row1_col13,#T_a45403d2_07ec_11eb_8fbb_525400897695row13_col1{\n",
        "            background-color:  #e9e5f1;\n",
        "            color:  #000000;\n",
        "        }#T_a45403d2_07ec_11eb_8fbb_525400897695row1_col14,#T_a45403d2_07ec_11eb_8fbb_525400897695row14_col1{\n",
        "            background-color:  #eee8f3;\n",
        "            color:  #000000;\n",
        "        }#T_a45403d2_07ec_11eb_8fbb_525400897695row1_col15,#T_a45403d2_07ec_11eb_8fbb_525400897695row15_col1{\n",
        "            background-color:  #93b5d6;\n",
        "            color:  #000000;\n",
        "        }#T_a45403d2_07ec_11eb_8fbb_525400897695row1_col16,#T_a45403d2_07ec_11eb_8fbb_525400897695row3_col5,#T_a45403d2_07ec_11eb_8fbb_525400897695row5_col3,#T_a45403d2_07ec_11eb_8fbb_525400897695row16_col1{\n",
        "            background-color:  #d9d8ea;\n",
        "            color:  #000000;\n",
        "        }#T_a45403d2_07ec_11eb_8fbb_525400897695row2_col3,#T_a45403d2_07ec_11eb_8fbb_525400897695row3_col2{\n",
        "            background-color:  #045c90;\n",
        "            color:  #f1f1f1;\n",
        "        }#T_a45403d2_07ec_11eb_8fbb_525400897695row2_col4,#T_a45403d2_07ec_11eb_8fbb_525400897695row4_col2,#T_a45403d2_07ec_11eb_8fbb_525400897695row4_col12,#T_a45403d2_07ec_11eb_8fbb_525400897695row12_col4{\n",
        "            background-color:  #c8cde4;\n",
        "            color:  #000000;\n",
        "        }#T_a45403d2_07ec_11eb_8fbb_525400897695row2_col7,#T_a45403d2_07ec_11eb_8fbb_525400897695row7_col2{\n",
        "            background-color:  #ece7f2;\n",
        "            color:  #000000;\n",
        "        }#T_a45403d2_07ec_11eb_8fbb_525400897695row2_col8,#T_a45403d2_07ec_11eb_8fbb_525400897695row8_col2{\n",
        "            background-color:  #d4d4e8;\n",
        "            color:  #000000;\n",
        "        }#T_a45403d2_07ec_11eb_8fbb_525400897695row2_col9,#T_a45403d2_07ec_11eb_8fbb_525400897695row3_col9,#T_a45403d2_07ec_11eb_8fbb_525400897695row9_col2,#T_a45403d2_07ec_11eb_8fbb_525400897695row9_col3{\n",
        "            background-color:  #dddbec;\n",
        "            color:  #000000;\n",
        "        }#T_a45403d2_07ec_11eb_8fbb_525400897695row2_col10,#T_a45403d2_07ec_11eb_8fbb_525400897695row10_col2{\n",
        "            background-color:  #80aed2;\n",
        "            color:  #000000;\n",
        "        }#T_a45403d2_07ec_11eb_8fbb_525400897695row2_col11,#T_a45403d2_07ec_11eb_8fbb_525400897695row3_col4,#T_a45403d2_07ec_11eb_8fbb_525400897695row4_col3,#T_a45403d2_07ec_11eb_8fbb_525400897695row4_col10,#T_a45403d2_07ec_11eb_8fbb_525400897695row10_col4,#T_a45403d2_07ec_11eb_8fbb_525400897695row11_col2{\n",
        "            background-color:  #a8bedc;\n",
        "            color:  #000000;\n",
        "        }#T_a45403d2_07ec_11eb_8fbb_525400897695row2_col12,#T_a45403d2_07ec_11eb_8fbb_525400897695row12_col2{\n",
        "            background-color:  #78abd0;\n",
        "            color:  #000000;\n",
        "        }#T_a45403d2_07ec_11eb_8fbb_525400897695row2_col13,#T_a45403d2_07ec_11eb_8fbb_525400897695row13_col2{\n",
        "            background-color:  #f0eaf4;\n",
        "            color:  #000000;\n",
        "        }#T_a45403d2_07ec_11eb_8fbb_525400897695row2_col14,#T_a45403d2_07ec_11eb_8fbb_525400897695row14_col2{\n",
        "            background-color:  #f4eef6;\n",
        "            color:  #000000;\n",
        "        }#T_a45403d2_07ec_11eb_8fbb_525400897695row2_col15,#T_a45403d2_07ec_11eb_8fbb_525400897695row15_col2{\n",
        "            background-color:  #b1c2de;\n",
        "            color:  #000000;\n",
        "        }#T_a45403d2_07ec_11eb_8fbb_525400897695row2_col16,#T_a45403d2_07ec_11eb_8fbb_525400897695row16_col2{\n",
        "            background-color:  #cacee5;\n",
        "            color:  #000000;\n",
        "        }#T_a45403d2_07ec_11eb_8fbb_525400897695row3_col6,#T_a45403d2_07ec_11eb_8fbb_525400897695row6_col3{\n",
        "            background-color:  #c6cce3;\n",
        "            color:  #000000;\n",
        "        }#T_a45403d2_07ec_11eb_8fbb_525400897695row3_col7,#T_a45403d2_07ec_11eb_8fbb_525400897695row7_col3{\n",
        "            background-color:  #efe9f3;\n",
        "            color:  #000000;\n",
        "        }#T_a45403d2_07ec_11eb_8fbb_525400897695row3_col10,#T_a45403d2_07ec_11eb_8fbb_525400897695row10_col3{\n",
        "            background-color:  #7dacd1;\n",
        "            color:  #000000;\n",
        "        }#T_a45403d2_07ec_11eb_8fbb_525400897695row3_col12,#T_a45403d2_07ec_11eb_8fbb_525400897695row4_col7,#T_a45403d2_07ec_11eb_8fbb_525400897695row7_col4,#T_a45403d2_07ec_11eb_8fbb_525400897695row12_col3{\n",
        "            background-color:  #9fbad9;\n",
        "            color:  #000000;\n",
        "        }#T_a45403d2_07ec_11eb_8fbb_525400897695row3_col13,#T_a45403d2_07ec_11eb_8fbb_525400897695row13_col3{\n",
        "            background-color:  #f2ecf5;\n",
        "            color:  #000000;\n",
        "        }#T_a45403d2_07ec_11eb_8fbb_525400897695row3_col14,#T_a45403d2_07ec_11eb_8fbb_525400897695row14_col3{\n",
        "            background-color:  #fff7fb;\n",
        "            color:  #000000;\n",
        "        }#T_a45403d2_07ec_11eb_8fbb_525400897695row3_col15,#T_a45403d2_07ec_11eb_8fbb_525400897695row3_col16,#T_a45403d2_07ec_11eb_8fbb_525400897695row15_col3,#T_a45403d2_07ec_11eb_8fbb_525400897695row16_col3{\n",
        "            background-color:  #c5cce3;\n",
        "            color:  #000000;\n",
        "        }#T_a45403d2_07ec_11eb_8fbb_525400897695row4_col5,#T_a45403d2_07ec_11eb_8fbb_525400897695row5_col4{\n",
        "            background-color:  #8bb2d4;\n",
        "            color:  #000000;\n",
        "        }#T_a45403d2_07ec_11eb_8fbb_525400897695row4_col11,#T_a45403d2_07ec_11eb_8fbb_525400897695row11_col4{\n",
        "            background-color:  #bbc7e0;\n",
        "            color:  #000000;\n",
        "        }#T_a45403d2_07ec_11eb_8fbb_525400897695row4_col13,#T_a45403d2_07ec_11eb_8fbb_525400897695row13_col4{\n",
        "            background-color:  #a2bcda;\n",
        "            color:  #000000;\n",
        "        }#T_a45403d2_07ec_11eb_8fbb_525400897695row4_col15,#T_a45403d2_07ec_11eb_8fbb_525400897695row15_col4{\n",
        "            background-color:  #76aad0;\n",
        "            color:  #000000;\n",
        "        }#T_a45403d2_07ec_11eb_8fbb_525400897695row5_col6,#T_a45403d2_07ec_11eb_8fbb_525400897695row6_col5,#T_a45403d2_07ec_11eb_8fbb_525400897695row7_col14,#T_a45403d2_07ec_11eb_8fbb_525400897695row14_col7{\n",
        "            background-color:  #04629a;\n",
        "            color:  #f1f1f1;\n",
        "        }#T_a45403d2_07ec_11eb_8fbb_525400897695row5_col7,#T_a45403d2_07ec_11eb_8fbb_525400897695row7_col5{\n",
        "            background-color:  #045f95;\n",
        "            color:  #f1f1f1;\n",
        "        }#T_a45403d2_07ec_11eb_8fbb_525400897695row5_col8,#T_a45403d2_07ec_11eb_8fbb_525400897695row6_col14,#T_a45403d2_07ec_11eb_8fbb_525400897695row8_col5,#T_a45403d2_07ec_11eb_8fbb_525400897695row14_col6{\n",
        "            background-color:  #056fae;\n",
        "            color:  #f1f1f1;\n",
        "        }#T_a45403d2_07ec_11eb_8fbb_525400897695row5_col9,#T_a45403d2_07ec_11eb_8fbb_525400897695row9_col5{\n",
        "            background-color:  #197db7;\n",
        "            color:  #000000;\n",
        "        }#T_a45403d2_07ec_11eb_8fbb_525400897695row5_col10,#T_a45403d2_07ec_11eb_8fbb_525400897695row10_col5{\n",
        "            background-color:  #2182b9;\n",
        "            color:  #000000;\n",
        "        }#T_a45403d2_07ec_11eb_8fbb_525400897695row5_col11,#T_a45403d2_07ec_11eb_8fbb_525400897695row11_col5{\n",
        "            background-color:  #1c7fb8;\n",
        "            color:  #000000;\n",
        "        }#T_a45403d2_07ec_11eb_8fbb_525400897695row5_col12,#T_a45403d2_07ec_11eb_8fbb_525400897695row10_col13,#T_a45403d2_07ec_11eb_8fbb_525400897695row12_col5,#T_a45403d2_07ec_11eb_8fbb_525400897695row13_col10{\n",
        "            background-color:  #358fc0;\n",
        "            color:  #000000;\n",
        "        }#T_a45403d2_07ec_11eb_8fbb_525400897695row5_col13,#T_a45403d2_07ec_11eb_8fbb_525400897695row9_col16,#T_a45403d2_07ec_11eb_8fbb_525400897695row11_col16,#T_a45403d2_07ec_11eb_8fbb_525400897695row13_col5,#T_a45403d2_07ec_11eb_8fbb_525400897695row16_col9,#T_a45403d2_07ec_11eb_8fbb_525400897695row16_col11{\n",
        "            background-color:  #046096;\n",
        "            color:  #f1f1f1;\n",
        "        }#T_a45403d2_07ec_11eb_8fbb_525400897695row5_col14,#T_a45403d2_07ec_11eb_8fbb_525400897695row6_col9,#T_a45403d2_07ec_11eb_8fbb_525400897695row7_col15,#T_a45403d2_07ec_11eb_8fbb_525400897695row9_col6,#T_a45403d2_07ec_11eb_8fbb_525400897695row14_col5,#T_a45403d2_07ec_11eb_8fbb_525400897695row15_col7{\n",
        "            background-color:  #0570b0;\n",
        "            color:  #f1f1f1;\n",
        "        }#T_a45403d2_07ec_11eb_8fbb_525400897695row5_col15,#T_a45403d2_07ec_11eb_8fbb_525400897695row15_col5{\n",
        "            background-color:  #529bc7;\n",
        "            color:  #000000;\n",
        "        }#T_a45403d2_07ec_11eb_8fbb_525400897695row5_col16,#T_a45403d2_07ec_11eb_8fbb_525400897695row13_col16,#T_a45403d2_07ec_11eb_8fbb_525400897695row16_col5,#T_a45403d2_07ec_11eb_8fbb_525400897695row16_col13{\n",
        "            background-color:  #04588a;\n",
        "            color:  #f1f1f1;\n",
        "        }#T_a45403d2_07ec_11eb_8fbb_525400897695row6_col7,#T_a45403d2_07ec_11eb_8fbb_525400897695row7_col6{\n",
        "            background-color:  #046097;\n",
        "            color:  #f1f1f1;\n",
        "        }#T_a45403d2_07ec_11eb_8fbb_525400897695row6_col8,#T_a45403d2_07ec_11eb_8fbb_525400897695row8_col6,#T_a45403d2_07ec_11eb_8fbb_525400897695row8_col10,#T_a45403d2_07ec_11eb_8fbb_525400897695row10_col8{\n",
        "            background-color:  #056aa6;\n",
        "            color:  #f1f1f1;\n",
        "        }#T_a45403d2_07ec_11eb_8fbb_525400897695row6_col10,#T_a45403d2_07ec_11eb_8fbb_525400897695row8_col14,#T_a45403d2_07ec_11eb_8fbb_525400897695row9_col14,#T_a45403d2_07ec_11eb_8fbb_525400897695row10_col6,#T_a45403d2_07ec_11eb_8fbb_525400897695row14_col8,#T_a45403d2_07ec_11eb_8fbb_525400897695row14_col9{\n",
        "            background-color:  #0d75b3;\n",
        "            color:  #f1f1f1;\n",
        "        }#T_a45403d2_07ec_11eb_8fbb_525400897695row6_col11,#T_a45403d2_07ec_11eb_8fbb_525400897695row11_col6{\n",
        "            background-color:  #1e80b8;\n",
        "            color:  #000000;\n",
        "        }#T_a45403d2_07ec_11eb_8fbb_525400897695row6_col12,#T_a45403d2_07ec_11eb_8fbb_525400897695row7_col10,#T_a45403d2_07ec_11eb_8fbb_525400897695row10_col7,#T_a45403d2_07ec_11eb_8fbb_525400897695row12_col6{\n",
        "            background-color:  #2f8bbe;\n",
        "            color:  #000000;\n",
        "        }#T_a45403d2_07ec_11eb_8fbb_525400897695row6_col13,#T_a45403d2_07ec_11eb_8fbb_525400897695row13_col6{\n",
        "            background-color:  #045687;\n",
        "            color:  #f1f1f1;\n",
        "        }#T_a45403d2_07ec_11eb_8fbb_525400897695row6_col15,#T_a45403d2_07ec_11eb_8fbb_525400897695row15_col6{\n",
        "            background-color:  #4295c3;\n",
        "            color:  #000000;\n",
        "        }#T_a45403d2_07ec_11eb_8fbb_525400897695row6_col16,#T_a45403d2_07ec_11eb_8fbb_525400897695row16_col6{\n",
        "            background-color:  #045280;\n",
        "            color:  #f1f1f1;\n",
        "        }#T_a45403d2_07ec_11eb_8fbb_525400897695row7_col8,#T_a45403d2_07ec_11eb_8fbb_525400897695row8_col7{\n",
        "            background-color:  #056faf;\n",
        "            color:  #f1f1f1;\n",
        "        }#T_a45403d2_07ec_11eb_8fbb_525400897695row7_col9,#T_a45403d2_07ec_11eb_8fbb_525400897695row9_col7{\n",
        "            background-color:  #2a88bc;\n",
        "            color:  #000000;\n",
        "        }#T_a45403d2_07ec_11eb_8fbb_525400897695row7_col11,#T_a45403d2_07ec_11eb_8fbb_525400897695row11_col7{\n",
        "            background-color:  #2d8abd;\n",
        "            color:  #000000;\n",
        "        }#T_a45403d2_07ec_11eb_8fbb_525400897695row7_col12,#T_a45403d2_07ec_11eb_8fbb_525400897695row12_col7,#T_a45403d2_07ec_11eb_8fbb_525400897695row12_col15,#T_a45403d2_07ec_11eb_8fbb_525400897695row15_col12,#T_a45403d2_07ec_11eb_8fbb_525400897695row15_col16,#T_a45403d2_07ec_11eb_8fbb_525400897695row16_col15{\n",
        "            background-color:  #2685bb;\n",
        "            color:  #000000;\n",
        "        }#T_a45403d2_07ec_11eb_8fbb_525400897695row7_col13,#T_a45403d2_07ec_11eb_8fbb_525400897695row13_col7{\n",
        "            background-color:  #034a74;\n",
        "            color:  #f1f1f1;\n",
        "        }#T_a45403d2_07ec_11eb_8fbb_525400897695row7_col16,#T_a45403d2_07ec_11eb_8fbb_525400897695row16_col7{\n",
        "            background-color:  #045a8d;\n",
        "            color:  #f1f1f1;\n",
        "        }#T_a45403d2_07ec_11eb_8fbb_525400897695row8_col9,#T_a45403d2_07ec_11eb_8fbb_525400897695row9_col8{\n",
        "            background-color:  #045788;\n",
        "            color:  #f1f1f1;\n",
        "        }#T_a45403d2_07ec_11eb_8fbb_525400897695row8_col11,#T_a45403d2_07ec_11eb_8fbb_525400897695row11_col8,#T_a45403d2_07ec_11eb_8fbb_525400897695row13_col14,#T_a45403d2_07ec_11eb_8fbb_525400897695row14_col13{\n",
        "            background-color:  #046198;\n",
        "            color:  #f1f1f1;\n",
        "        }#T_a45403d2_07ec_11eb_8fbb_525400897695row8_col12,#T_a45403d2_07ec_11eb_8fbb_525400897695row12_col8{\n",
        "            background-color:  #2484ba;\n",
        "            color:  #000000;\n",
        "        }#T_a45403d2_07ec_11eb_8fbb_525400897695row8_col13,#T_a45403d2_07ec_11eb_8fbb_525400897695row13_col8{\n",
        "            background-color:  #056dab;\n",
        "            color:  #f1f1f1;\n",
        "        }#T_a45403d2_07ec_11eb_8fbb_525400897695row8_col15,#T_a45403d2_07ec_11eb_8fbb_525400897695row15_col8{\n",
        "            background-color:  #75a9cf;\n",
        "            color:  #000000;\n",
        "        }#T_a45403d2_07ec_11eb_8fbb_525400897695row8_col16,#T_a45403d2_07ec_11eb_8fbb_525400897695row16_col8{\n",
        "            background-color:  #034f7d;\n",
        "            color:  #f1f1f1;\n",
        "        }#T_a45403d2_07ec_11eb_8fbb_525400897695row9_col10,#T_a45403d2_07ec_11eb_8fbb_525400897695row10_col9{\n",
        "            background-color:  #0771b1;\n",
        "            color:  #f1f1f1;\n",
        "        }#T_a45403d2_07ec_11eb_8fbb_525400897695row9_col11,#T_a45403d2_07ec_11eb_8fbb_525400897695row11_col9{\n",
        "            background-color:  #04649d;\n",
        "            color:  #f1f1f1;\n",
        "        }#T_a45403d2_07ec_11eb_8fbb_525400897695row9_col12,#T_a45403d2_07ec_11eb_8fbb_525400897695row12_col9{\n",
        "            background-color:  #328dbf;\n",
        "            color:  #000000;\n",
        "        }#T_a45403d2_07ec_11eb_8fbb_525400897695row9_col13,#T_a45403d2_07ec_11eb_8fbb_525400897695row13_col9{\n",
        "            background-color:  #2081b9;\n",
        "            color:  #000000;\n",
        "        }#T_a45403d2_07ec_11eb_8fbb_525400897695row9_col15,#T_a45403d2_07ec_11eb_8fbb_525400897695row15_col9{\n",
        "            background-color:  #a1bbda;\n",
        "            color:  #000000;\n",
        "        }#T_a45403d2_07ec_11eb_8fbb_525400897695row10_col11,#T_a45403d2_07ec_11eb_8fbb_525400897695row11_col10{\n",
        "            background-color:  #045b8e;\n",
        "            color:  #f1f1f1;\n",
        "        }#T_a45403d2_07ec_11eb_8fbb_525400897695row10_col12,#T_a45403d2_07ec_11eb_8fbb_525400897695row12_col10{\n",
        "            background-color:  #1379b5;\n",
        "            color:  #f1f1f1;\n",
        "        }#T_a45403d2_07ec_11eb_8fbb_525400897695row10_col14,#T_a45403d2_07ec_11eb_8fbb_525400897695row14_col10{\n",
        "            background-color:  #4c99c5;\n",
        "            color:  #000000;\n",
        "        }#T_a45403d2_07ec_11eb_8fbb_525400897695row10_col15,#T_a45403d2_07ec_11eb_8fbb_525400897695row15_col10{\n",
        "            background-color:  #4094c3;\n",
        "            color:  #000000;\n",
        "        }#T_a45403d2_07ec_11eb_8fbb_525400897695row10_col16,#T_a45403d2_07ec_11eb_8fbb_525400897695row16_col10{\n",
        "            background-color:  #045d92;\n",
        "            color:  #f1f1f1;\n",
        "        }#T_a45403d2_07ec_11eb_8fbb_525400897695row11_col12,#T_a45403d2_07ec_11eb_8fbb_525400897695row12_col11{\n",
        "            background-color:  #2987bc;\n",
        "            color:  #000000;\n",
        "        }#T_a45403d2_07ec_11eb_8fbb_525400897695row11_col13,#T_a45403d2_07ec_11eb_8fbb_525400897695row13_col11{\n",
        "            background-color:  #3991c1;\n",
        "            color:  #000000;\n",
        "        }#T_a45403d2_07ec_11eb_8fbb_525400897695row11_col14,#T_a45403d2_07ec_11eb_8fbb_525400897695row14_col11{\n",
        "            background-color:  #3f93c2;\n",
        "            color:  #000000;\n",
        "        }#T_a45403d2_07ec_11eb_8fbb_525400897695row11_col15,#T_a45403d2_07ec_11eb_8fbb_525400897695row15_col11{\n",
        "            background-color:  #81aed2;\n",
        "            color:  #000000;\n",
        "        }#T_a45403d2_07ec_11eb_8fbb_525400897695row12_col13,#T_a45403d2_07ec_11eb_8fbb_525400897695row13_col12{\n",
        "            background-color:  #2c89bd;\n",
        "            color:  #000000;\n",
        "        }#T_a45403d2_07ec_11eb_8fbb_525400897695row12_col14,#T_a45403d2_07ec_11eb_8fbb_525400897695row14_col12{\n",
        "            background-color:  #1278b4;\n",
        "            color:  #f1f1f1;\n",
        "        }#T_a45403d2_07ec_11eb_8fbb_525400897695row12_col16,#T_a45403d2_07ec_11eb_8fbb_525400897695row16_col12{\n",
        "            background-color:  #056ead;\n",
        "            color:  #f1f1f1;\n",
        "        }#T_a45403d2_07ec_11eb_8fbb_525400897695row13_col15,#T_a45403d2_07ec_11eb_8fbb_525400897695row15_col13{\n",
        "            background-color:  #157ab5;\n",
        "            color:  #000000;\n",
        "        }#T_a45403d2_07ec_11eb_8fbb_525400897695row14_col15,#T_a45403d2_07ec_11eb_8fbb_525400897695row15_col14{\n",
        "            background-color:  #4e9ac6;\n",
        "            color:  #000000;\n",
        "        }#T_a45403d2_07ec_11eb_8fbb_525400897695row14_col16,#T_a45403d2_07ec_11eb_8fbb_525400897695row16_col14{\n",
        "            background-color:  #056dac;\n",
        "            color:  #f1f1f1;\n",
        "        }</style><table id=\"T_a45403d2_07ec_11eb_8fbb_525400897695\" ><thead>    <tr>        <th class=\"blank level0\" ></th>        <th class=\"col_heading level0 col0\" >Rt</th>        <th class=\"col_heading level0 col1\" >theta</th>        <th class=\"col_heading level0 col2\" >kappa</th>        <th class=\"col_heading level0 col3\" >rho</th>        <th class=\"col_heading level0 col4\" >sigma</th>        <th class=\"col_heading level0 col5\" >School_closing</th>        <th class=\"col_heading level0 col6\" >Workplace_closing</th>        <th class=\"col_heading level0 col7\" >Cancel_events</th>        <th class=\"col_heading level0 col8\" >Gatherings_restrictions</th>        <th class=\"col_heading level0 col9\" >Transport_closing</th>        <th class=\"col_heading level0 col10\" >Stay_home_restrictions</th>        <th class=\"col_heading level0 col11\" >Internal_movement_restrictions</th>        <th class=\"col_heading level0 col12\" >International_movement_restrictions</th>        <th class=\"col_heading level0 col13\" >Information_campaigns</th>        <th class=\"col_heading level0 col14\" >Testing_policy</th>        <th class=\"col_heading level0 col15\" >Contact_tracing</th>        <th class=\"col_heading level0 col16\" >Stringency_index</th>    </tr></thead><tbody>\n",
        "                <tr>\n",
        "                        <th id=\"T_a45403d2_07ec_11eb_8fbb_525400897695level0_row0\" class=\"row_heading level0 row0\" >Rt</th>\n",
        "                        <td id=\"T_a45403d2_07ec_11eb_8fbb_525400897695row0_col0\" class=\"data row0 col0\" >1.000000</td>\n",
        "                        <td id=\"T_a45403d2_07ec_11eb_8fbb_525400897695row0_col1\" class=\"data row0 col1\" >-0.345122</td>\n",
        "                        <td id=\"T_a45403d2_07ec_11eb_8fbb_525400897695row0_col2\" class=\"data row0 col2\" >-0.286170</td>\n",
        "                        <td id=\"T_a45403d2_07ec_11eb_8fbb_525400897695row0_col3\" class=\"data row0 col3\" >0.179382</td>\n",
        "                        <td id=\"T_a45403d2_07ec_11eb_8fbb_525400897695row0_col4\" class=\"data row0 col4\" >-0.176843</td>\n",
        "                        <td id=\"T_a45403d2_07ec_11eb_8fbb_525400897695row0_col5\" class=\"data row0 col5\" >0.051209</td>\n",
        "                        <td id=\"T_a45403d2_07ec_11eb_8fbb_525400897695row0_col6\" class=\"data row0 col6\" >0.031537</td>\n",
        "                        <td id=\"T_a45403d2_07ec_11eb_8fbb_525400897695row0_col7\" class=\"data row0 col7\" >-0.135820</td>\n",
        "                        <td id=\"T_a45403d2_07ec_11eb_8fbb_525400897695row0_col8\" class=\"data row0 col8\" >0.009657</td>\n",
        "                        <td id=\"T_a45403d2_07ec_11eb_8fbb_525400897695row0_col9\" class=\"data row0 col9\" >0.028776</td>\n",
        "                        <td id=\"T_a45403d2_07ec_11eb_8fbb_525400897695row0_col10\" class=\"data row0 col10\" >-0.069388</td>\n",
        "                        <td id=\"T_a45403d2_07ec_11eb_8fbb_525400897695row0_col11\" class=\"data row0 col11\" >-0.038916</td>\n",
        "                        <td id=\"T_a45403d2_07ec_11eb_8fbb_525400897695row0_col12\" class=\"data row0 col12\" >-0.282011</td>\n",
        "                        <td id=\"T_a45403d2_07ec_11eb_8fbb_525400897695row0_col13\" class=\"data row0 col13\" >-0.126992</td>\n",
        "                        <td id=\"T_a45403d2_07ec_11eb_8fbb_525400897695row0_col14\" class=\"data row0 col14\" >-0.162535</td>\n",
        "                        <td id=\"T_a45403d2_07ec_11eb_8fbb_525400897695row0_col15\" class=\"data row0 col15\" >-0.378705</td>\n",
        "                        <td id=\"T_a45403d2_07ec_11eb_8fbb_525400897695row0_col16\" class=\"data row0 col16\" >-0.064043</td>\n",
        "            </tr>\n",
        "            <tr>\n",
        "                        <th id=\"T_a45403d2_07ec_11eb_8fbb_525400897695level0_row1\" class=\"row_heading level0 row1\" >theta</th>\n",
        "                        <td id=\"T_a45403d2_07ec_11eb_8fbb_525400897695row1_col0\" class=\"data row1 col0\" >-0.345122</td>\n",
        "                        <td id=\"T_a45403d2_07ec_11eb_8fbb_525400897695row1_col1\" class=\"data row1 col1\" >1.000000</td>\n",
        "                        <td id=\"T_a45403d2_07ec_11eb_8fbb_525400897695row1_col2\" class=\"data row1 col2\" >0.899495</td>\n",
        "                        <td id=\"T_a45403d2_07ec_11eb_8fbb_525400897695row1_col3\" class=\"data row1 col3\" >0.650515</td>\n",
        "                        <td id=\"T_a45403d2_07ec_11eb_8fbb_525400897695row1_col4\" class=\"data row1 col4\" >-0.138231</td>\n",
        "                        <td id=\"T_a45403d2_07ec_11eb_8fbb_525400897695row1_col5\" class=\"data row1 col5\" >-0.337331</td>\n",
        "                        <td id=\"T_a45403d2_07ec_11eb_8fbb_525400897695row1_col6\" class=\"data row1 col6\" >-0.167240</td>\n",
        "                        <td id=\"T_a45403d2_07ec_11eb_8fbb_525400897695row1_col7\" class=\"data row1 col7\" >-0.279865</td>\n",
        "                        <td id=\"T_a45403d2_07ec_11eb_8fbb_525400897695row1_col8\" class=\"data row1 col8\" >-0.335014</td>\n",
        "                        <td id=\"T_a45403d2_07ec_11eb_8fbb_525400897695row1_col9\" class=\"data row1 col9\" >-0.356512</td>\n",
        "                        <td id=\"T_a45403d2_07ec_11eb_8fbb_525400897695row1_col10\" class=\"data row1 col10\" >0.085906</td>\n",
        "                        <td id=\"T_a45403d2_07ec_11eb_8fbb_525400897695row1_col11\" class=\"data row1 col11\" >-0.134896</td>\n",
        "                        <td id=\"T_a45403d2_07ec_11eb_8fbb_525400897695row1_col12\" class=\"data row1 col12\" >0.167629</td>\n",
        "                        <td id=\"T_a45403d2_07ec_11eb_8fbb_525400897695row1_col13\" class=\"data row1 col13\" >-0.311743</td>\n",
        "                        <td id=\"T_a45403d2_07ec_11eb_8fbb_525400897695row1_col14\" class=\"data row1 col14\" >-0.349199</td>\n",
        "                        <td id=\"T_a45403d2_07ec_11eb_8fbb_525400897695row1_col15\" class=\"data row1 col15\" >0.121919</td>\n",
        "                        <td id=\"T_a45403d2_07ec_11eb_8fbb_525400897695row1_col16\" class=\"data row1 col16\" >-0.204425</td>\n",
        "            </tr>\n",
        "            <tr>\n",
        "                        <th id=\"T_a45403d2_07ec_11eb_8fbb_525400897695level0_row2\" class=\"row_heading level0 row2\" >kappa</th>\n",
        "                        <td id=\"T_a45403d2_07ec_11eb_8fbb_525400897695row2_col0\" class=\"data row2 col0\" >-0.286170</td>\n",
        "                        <td id=\"T_a45403d2_07ec_11eb_8fbb_525400897695row2_col1\" class=\"data row2 col1\" >0.899495</td>\n",
        "                        <td id=\"T_a45403d2_07ec_11eb_8fbb_525400897695row2_col2\" class=\"data row2 col2\" >1.000000</td>\n",
        "                        <td id=\"T_a45403d2_07ec_11eb_8fbb_525400897695row2_col3\" class=\"data row2 col3\" >0.791360</td>\n",
        "                        <td id=\"T_a45403d2_07ec_11eb_8fbb_525400897695row2_col4\" class=\"data row2 col4\" >-0.103765</td>\n",
        "                        <td id=\"T_a45403d2_07ec_11eb_8fbb_525400897695row2_col5\" class=\"data row2 col5\" >-0.283624</td>\n",
        "                        <td id=\"T_a45403d2_07ec_11eb_8fbb_525400897695row2_col6\" class=\"data row2 col6\" >-0.174619</td>\n",
        "                        <td id=\"T_a45403d2_07ec_11eb_8fbb_525400897695row2_col7\" class=\"data row2 col7\" >-0.333966</td>\n",
        "                        <td id=\"T_a45403d2_07ec_11eb_8fbb_525400897695row2_col8\" class=\"data row2 col8\" >-0.169471</td>\n",
        "                        <td id=\"T_a45403d2_07ec_11eb_8fbb_525400897695row2_col9\" class=\"data row2 col9\" >-0.228219</td>\n",
        "                        <td id=\"T_a45403d2_07ec_11eb_8fbb_525400897695row2_col10\" class=\"data row2 col10\" >0.194049</td>\n",
        "                        <td id=\"T_a45403d2_07ec_11eb_8fbb_525400897695row2_col11\" class=\"data row2 col11\" >0.036215</td>\n",
        "                        <td id=\"T_a45403d2_07ec_11eb_8fbb_525400897695row2_col12\" class=\"data row2 col12\" >0.222274</td>\n",
        "                        <td id=\"T_a45403d2_07ec_11eb_8fbb_525400897695row2_col13\" class=\"data row2 col13\" >-0.371354</td>\n",
        "                        <td id=\"T_a45403d2_07ec_11eb_8fbb_525400897695row2_col14\" class=\"data row2 col14\" >-0.414278</td>\n",
        "                        <td id=\"T_a45403d2_07ec_11eb_8fbb_525400897695row2_col15\" class=\"data row2 col15\" >-0.002924</td>\n",
        "                        <td id=\"T_a45403d2_07ec_11eb_8fbb_525400897695row2_col16\" class=\"data row2 col16\" >-0.117798</td>\n",
        "            </tr>\n",
        "            <tr>\n",
        "                        <th id=\"T_a45403d2_07ec_11eb_8fbb_525400897695level0_row3\" class=\"row_heading level0 row3\" >rho</th>\n",
        "                        <td id=\"T_a45403d2_07ec_11eb_8fbb_525400897695row3_col0\" class=\"data row3 col0\" >0.179382</td>\n",
        "                        <td id=\"T_a45403d2_07ec_11eb_8fbb_525400897695row3_col1\" class=\"data row3 col1\" >0.650515</td>\n",
        "                        <td id=\"T_a45403d2_07ec_11eb_8fbb_525400897695row3_col2\" class=\"data row3 col2\" >0.791360</td>\n",
        "                        <td id=\"T_a45403d2_07ec_11eb_8fbb_525400897695row3_col3\" class=\"data row3 col3\" >1.000000</td>\n",
        "                        <td id=\"T_a45403d2_07ec_11eb_8fbb_525400897695row3_col4\" class=\"data row3 col4\" >0.038082</td>\n",
        "                        <td id=\"T_a45403d2_07ec_11eb_8fbb_525400897695row3_col5\" class=\"data row3 col5\" >-0.202494</td>\n",
        "                        <td id=\"T_a45403d2_07ec_11eb_8fbb_525400897695row3_col6\" class=\"data row3 col6\" >-0.101029</td>\n",
        "                        <td id=\"T_a45403d2_07ec_11eb_8fbb_525400897695row3_col7\" class=\"data row3 col7\" >-0.358878</td>\n",
        "                        <td id=\"T_a45403d2_07ec_11eb_8fbb_525400897695row3_col8\" class=\"data row3 col8\" >-0.135667</td>\n",
        "                        <td id=\"T_a45403d2_07ec_11eb_8fbb_525400897695row3_col9\" class=\"data row3 col9\" >-0.232012</td>\n",
        "                        <td id=\"T_a45403d2_07ec_11eb_8fbb_525400897695row3_col10\" class=\"data row3 col10\" >0.204468</td>\n",
        "                        <td id=\"T_a45403d2_07ec_11eb_8fbb_525400897695row3_col11\" class=\"data row3 col11\" >0.049240</td>\n",
        "                        <td id=\"T_a45403d2_07ec_11eb_8fbb_525400897695row3_col12\" class=\"data row3 col12\" >0.074947</td>\n",
        "                        <td id=\"T_a45403d2_07ec_11eb_8fbb_525400897695row3_col13\" class=\"data row3 col13\" >-0.397252</td>\n",
        "                        <td id=\"T_a45403d2_07ec_11eb_8fbb_525400897695row3_col14\" class=\"data row3 col14\" >-0.525092</td>\n",
        "                        <td id=\"T_a45403d2_07ec_11eb_8fbb_525400897695row3_col15\" class=\"data row3 col15\" >-0.094053</td>\n",
        "                        <td id=\"T_a45403d2_07ec_11eb_8fbb_525400897695row3_col16\" class=\"data row3 col16\" >-0.091540</td>\n",
        "            </tr>\n",
        "            <tr>\n",
        "                        <th id=\"T_a45403d2_07ec_11eb_8fbb_525400897695level0_row4\" class=\"row_heading level0 row4\" >sigma</th>\n",
        "                        <td id=\"T_a45403d2_07ec_11eb_8fbb_525400897695row4_col0\" class=\"data row4 col0\" >-0.176843</td>\n",
        "                        <td id=\"T_a45403d2_07ec_11eb_8fbb_525400897695row4_col1\" class=\"data row4 col1\" >-0.138231</td>\n",
        "                        <td id=\"T_a45403d2_07ec_11eb_8fbb_525400897695row4_col2\" class=\"data row4 col2\" >-0.103765</td>\n",
        "                        <td id=\"T_a45403d2_07ec_11eb_8fbb_525400897695row4_col3\" class=\"data row4 col3\" >0.038082</td>\n",
        "                        <td id=\"T_a45403d2_07ec_11eb_8fbb_525400897695row4_col4\" class=\"data row4 col4\" >1.000000</td>\n",
        "                        <td id=\"T_a45403d2_07ec_11eb_8fbb_525400897695row4_col5\" class=\"data row4 col5\" >0.151976</td>\n",
        "                        <td id=\"T_a45403d2_07ec_11eb_8fbb_525400897695row4_col6\" class=\"data row4 col6\" >0.010793</td>\n",
        "                        <td id=\"T_a45403d2_07ec_11eb_8fbb_525400897695row4_col7\" class=\"data row4 col7\" >0.075355</td>\n",
        "                        <td id=\"T_a45403d2_07ec_11eb_8fbb_525400897695row4_col8\" class=\"data row4 col8\" >-0.068079</td>\n",
        "                        <td id=\"T_a45403d2_07ec_11eb_8fbb_525400897695row4_col9\" class=\"data row4 col9\" >-0.061080</td>\n",
        "                        <td id=\"T_a45403d2_07ec_11eb_8fbb_525400897695row4_col10\" class=\"data row4 col10\" >0.036273</td>\n",
        "                        <td id=\"T_a45403d2_07ec_11eb_8fbb_525400897695row4_col11\" class=\"data row4 col11\" >-0.045106</td>\n",
        "                        <td id=\"T_a45403d2_07ec_11eb_8fbb_525400897695row4_col12\" class=\"data row4 col12\" >-0.103321</td>\n",
        "                        <td id=\"T_a45403d2_07ec_11eb_8fbb_525400897695row4_col13\" class=\"data row4 col13\" >0.063422</td>\n",
        "                        <td id=\"T_a45403d2_07ec_11eb_8fbb_525400897695row4_col14\" class=\"data row4 col14\" >-0.135243</td>\n",
        "                        <td id=\"T_a45403d2_07ec_11eb_8fbb_525400897695row4_col15\" class=\"data row4 col15\" >0.227065</td>\n",
        "                        <td id=\"T_a45403d2_07ec_11eb_8fbb_525400897695row4_col16\" class=\"data row4 col16\" >0.085678</td>\n",
        "            </tr>\n",
        "            <tr>\n",
        "                        <th id=\"T_a45403d2_07ec_11eb_8fbb_525400897695level0_row5\" class=\"row_heading level0 row5\" >School_closing</th>\n",
        "                        <td id=\"T_a45403d2_07ec_11eb_8fbb_525400897695row5_col0\" class=\"data row5 col0\" >0.051209</td>\n",
        "                        <td id=\"T_a45403d2_07ec_11eb_8fbb_525400897695row5_col1\" class=\"data row5 col1\" >-0.337331</td>\n",
        "                        <td id=\"T_a45403d2_07ec_11eb_8fbb_525400897695row5_col2\" class=\"data row5 col2\" >-0.283624</td>\n",
        "                        <td id=\"T_a45403d2_07ec_11eb_8fbb_525400897695row5_col3\" class=\"data row5 col3\" >-0.202494</td>\n",
        "                        <td id=\"T_a45403d2_07ec_11eb_8fbb_525400897695row5_col4\" class=\"data row5 col4\" >0.151976</td>\n",
        "                        <td id=\"T_a45403d2_07ec_11eb_8fbb_525400897695row5_col5\" class=\"data row5 col5\" >1.000000</td>\n",
        "                        <td id=\"T_a45403d2_07ec_11eb_8fbb_525400897695row5_col6\" class=\"data row5 col6\" >0.734199</td>\n",
        "                        <td id=\"T_a45403d2_07ec_11eb_8fbb_525400897695row5_col7\" class=\"data row5 col7\" >0.765821</td>\n",
        "                        <td id=\"T_a45403d2_07ec_11eb_8fbb_525400897695row5_col8\" class=\"data row5 col8\" >0.627482</td>\n",
        "                        <td id=\"T_a45403d2_07ec_11eb_8fbb_525400897695row5_col9\" class=\"data row5 col9\" >0.537063</td>\n",
        "                        <td id=\"T_a45403d2_07ec_11eb_8fbb_525400897695row5_col10\" class=\"data row5 col10\" >0.507064</td>\n",
        "                        <td id=\"T_a45403d2_07ec_11eb_8fbb_525400897695row5_col11\" class=\"data row5 col11\" >0.527170</td>\n",
        "                        <td id=\"T_a45403d2_07ec_11eb_8fbb_525400897695row5_col12\" class=\"data row5 col12\" >0.429933</td>\n",
        "                        <td id=\"T_a45403d2_07ec_11eb_8fbb_525400897695row5_col13\" class=\"data row5 col13\" >0.760072</td>\n",
        "                        <td id=\"T_a45403d2_07ec_11eb_8fbb_525400897695row5_col14\" class=\"data row5 col14\" >0.616078</td>\n",
        "                        <td id=\"T_a45403d2_07ec_11eb_8fbb_525400897695row5_col15\" class=\"data row5 col15\" >0.340321</td>\n",
        "                        <td id=\"T_a45403d2_07ec_11eb_8fbb_525400897695row5_col16\" class=\"data row5 col16\" >0.815532</td>\n",
        "            </tr>\n",
        "            <tr>\n",
        "                        <th id=\"T_a45403d2_07ec_11eb_8fbb_525400897695level0_row6\" class=\"row_heading level0 row6\" >Workplace_closing</th>\n",
        "                        <td id=\"T_a45403d2_07ec_11eb_8fbb_525400897695row6_col0\" class=\"data row6 col0\" >0.031537</td>\n",
        "                        <td id=\"T_a45403d2_07ec_11eb_8fbb_525400897695row6_col1\" class=\"data row6 col1\" >-0.167240</td>\n",
        "                        <td id=\"T_a45403d2_07ec_11eb_8fbb_525400897695row6_col2\" class=\"data row6 col2\" >-0.174619</td>\n",
        "                        <td id=\"T_a45403d2_07ec_11eb_8fbb_525400897695row6_col3\" class=\"data row6 col3\" >-0.101029</td>\n",
        "                        <td id=\"T_a45403d2_07ec_11eb_8fbb_525400897695row6_col4\" class=\"data row6 col4\" >0.010793</td>\n",
        "                        <td id=\"T_a45403d2_07ec_11eb_8fbb_525400897695row6_col5\" class=\"data row6 col5\" >0.734199</td>\n",
        "                        <td id=\"T_a45403d2_07ec_11eb_8fbb_525400897695row6_col6\" class=\"data row6 col6\" >1.000000</td>\n",
        "                        <td id=\"T_a45403d2_07ec_11eb_8fbb_525400897695row6_col7\" class=\"data row6 col7\" >0.749984</td>\n",
        "                        <td id=\"T_a45403d2_07ec_11eb_8fbb_525400897695row6_col8\" class=\"data row6 col8\" >0.669151</td>\n",
        "                        <td id=\"T_a45403d2_07ec_11eb_8fbb_525400897695row6_col9\" class=\"data row6 col9\" >0.613620</td>\n",
        "                        <td id=\"T_a45403d2_07ec_11eb_8fbb_525400897695row6_col10\" class=\"data row6 col10\" >0.588623</td>\n",
        "                        <td id=\"T_a45403d2_07ec_11eb_8fbb_525400897695row6_col11\" class=\"data row6 col11\" >0.521328</td>\n",
        "                        <td id=\"T_a45403d2_07ec_11eb_8fbb_525400897695row6_col12\" class=\"data row6 col12\" >0.454296</td>\n",
        "                        <td id=\"T_a45403d2_07ec_11eb_8fbb_525400897695row6_col13\" class=\"data row6 col13\" >0.827805</td>\n",
        "                        <td id=\"T_a45403d2_07ec_11eb_8fbb_525400897695row6_col14\" class=\"data row6 col14\" >0.625802</td>\n",
        "                        <td id=\"T_a45403d2_07ec_11eb_8fbb_525400897695row6_col15\" class=\"data row6 col15\" >0.387845</td>\n",
        "                        <td id=\"T_a45403d2_07ec_11eb_8fbb_525400897695row6_col16\" class=\"data row6 col16\" >0.853906</td>\n",
        "            </tr>\n",
        "            <tr>\n",
        "                        <th id=\"T_a45403d2_07ec_11eb_8fbb_525400897695level0_row7\" class=\"row_heading level0 row7\" >Cancel_events</th>\n",
        "                        <td id=\"T_a45403d2_07ec_11eb_8fbb_525400897695row7_col0\" class=\"data row7 col0\" >-0.135820</td>\n",
        "                        <td id=\"T_a45403d2_07ec_11eb_8fbb_525400897695row7_col1\" class=\"data row7 col1\" >-0.279865</td>\n",
        "                        <td id=\"T_a45403d2_07ec_11eb_8fbb_525400897695row7_col2\" class=\"data row7 col2\" >-0.333966</td>\n",
        "                        <td id=\"T_a45403d2_07ec_11eb_8fbb_525400897695row7_col3\" class=\"data row7 col3\" >-0.358878</td>\n",
        "                        <td id=\"T_a45403d2_07ec_11eb_8fbb_525400897695row7_col4\" class=\"data row7 col4\" >0.075355</td>\n",
        "                        <td id=\"T_a45403d2_07ec_11eb_8fbb_525400897695row7_col5\" class=\"data row7 col5\" >0.765821</td>\n",
        "                        <td id=\"T_a45403d2_07ec_11eb_8fbb_525400897695row7_col6\" class=\"data row7 col6\" >0.749984</td>\n",
        "                        <td id=\"T_a45403d2_07ec_11eb_8fbb_525400897695row7_col7\" class=\"data row7 col7\" >1.000000</td>\n",
        "                        <td id=\"T_a45403d2_07ec_11eb_8fbb_525400897695row7_col8\" class=\"data row7 col8\" >0.623894</td>\n",
        "                        <td id=\"T_a45403d2_07ec_11eb_8fbb_525400897695row7_col9\" class=\"data row7 col9\" >0.474520</td>\n",
        "                        <td id=\"T_a45403d2_07ec_11eb_8fbb_525400897695row7_col10\" class=\"data row7 col10\" >0.456130</td>\n",
        "                        <td id=\"T_a45403d2_07ec_11eb_8fbb_525400897695row7_col11\" class=\"data row7 col11\" >0.460089</td>\n",
        "                        <td id=\"T_a45403d2_07ec_11eb_8fbb_525400897695row7_col12\" class=\"data row7 col12\" >0.492751</td>\n",
        "                        <td id=\"T_a45403d2_07ec_11eb_8fbb_525400897695row7_col13\" class=\"data row7 col13\" >0.894802</td>\n",
        "                        <td id=\"T_a45403d2_07ec_11eb_8fbb_525400897695row7_col14\" class=\"data row7 col14\" >0.733147</td>\n",
        "                        <td id=\"T_a45403d2_07ec_11eb_8fbb_525400897695row7_col15\" class=\"data row7 col15\" >0.614368</td>\n",
        "                        <td id=\"T_a45403d2_07ec_11eb_8fbb_525400897695row7_col16\" class=\"data row7 col16\" >0.807552</td>\n",
        "            </tr>\n",
        "            <tr>\n",
        "                        <th id=\"T_a45403d2_07ec_11eb_8fbb_525400897695level0_row8\" class=\"row_heading level0 row8\" >Gatherings_restrictions</th>\n",
        "                        <td id=\"T_a45403d2_07ec_11eb_8fbb_525400897695row8_col0\" class=\"data row8 col0\" >0.009657</td>\n",
        "                        <td id=\"T_a45403d2_07ec_11eb_8fbb_525400897695row8_col1\" class=\"data row8 col1\" >-0.335014</td>\n",
        "                        <td id=\"T_a45403d2_07ec_11eb_8fbb_525400897695row8_col2\" class=\"data row8 col2\" >-0.169471</td>\n",
        "                        <td id=\"T_a45403d2_07ec_11eb_8fbb_525400897695row8_col3\" class=\"data row8 col3\" >-0.135667</td>\n",
        "                        <td id=\"T_a45403d2_07ec_11eb_8fbb_525400897695row8_col4\" class=\"data row8 col4\" >-0.068079</td>\n",
        "                        <td id=\"T_a45403d2_07ec_11eb_8fbb_525400897695row8_col5\" class=\"data row8 col5\" >0.627482</td>\n",
        "                        <td id=\"T_a45403d2_07ec_11eb_8fbb_525400897695row8_col6\" class=\"data row8 col6\" >0.669151</td>\n",
        "                        <td id=\"T_a45403d2_07ec_11eb_8fbb_525400897695row8_col7\" class=\"data row8 col7\" >0.623894</td>\n",
        "                        <td id=\"T_a45403d2_07ec_11eb_8fbb_525400897695row8_col8\" class=\"data row8 col8\" >1.000000</td>\n",
        "                        <td id=\"T_a45403d2_07ec_11eb_8fbb_525400897695row8_col9\" class=\"data row8 col9\" >0.825656</td>\n",
        "                        <td id=\"T_a45403d2_07ec_11eb_8fbb_525400897695row8_col10\" class=\"data row8 col10\" >0.667507</td>\n",
        "                        <td id=\"T_a45403d2_07ec_11eb_8fbb_525400897695row8_col11\" class=\"data row8 col11\" >0.745858</td>\n",
        "                        <td id=\"T_a45403d2_07ec_11eb_8fbb_525400897695row8_col12\" class=\"data row8 col12\" >0.495018</td>\n",
        "                        <td id=\"T_a45403d2_07ec_11eb_8fbb_525400897695row8_col13\" class=\"data row8 col13\" >0.646848</td>\n",
        "                        <td id=\"T_a45403d2_07ec_11eb_8fbb_525400897695row8_col14\" class=\"data row8 col14\" >0.584946</td>\n",
        "                        <td id=\"T_a45403d2_07ec_11eb_8fbb_525400897695row8_col15\" class=\"data row8 col15\" >0.231874</td>\n",
        "                        <td id=\"T_a45403d2_07ec_11eb_8fbb_525400897695row8_col16\" class=\"data row8 col16\" >0.864757</td>\n",
        "            </tr>\n",
        "            <tr>\n",
        "                        <th id=\"T_a45403d2_07ec_11eb_8fbb_525400897695level0_row9\" class=\"row_heading level0 row9\" >Transport_closing</th>\n",
        "                        <td id=\"T_a45403d2_07ec_11eb_8fbb_525400897695row9_col0\" class=\"data row9 col0\" >0.028776</td>\n",
        "                        <td id=\"T_a45403d2_07ec_11eb_8fbb_525400897695row9_col1\" class=\"data row9 col1\" >-0.356512</td>\n",
        "                        <td id=\"T_a45403d2_07ec_11eb_8fbb_525400897695row9_col2\" class=\"data row9 col2\" >-0.228219</td>\n",
        "                        <td id=\"T_a45403d2_07ec_11eb_8fbb_525400897695row9_col3\" class=\"data row9 col3\" >-0.232012</td>\n",
        "                        <td id=\"T_a45403d2_07ec_11eb_8fbb_525400897695row9_col4\" class=\"data row9 col4\" >-0.061080</td>\n",
        "                        <td id=\"T_a45403d2_07ec_11eb_8fbb_525400897695row9_col5\" class=\"data row9 col5\" >0.537063</td>\n",
        "                        <td id=\"T_a45403d2_07ec_11eb_8fbb_525400897695row9_col6\" class=\"data row9 col6\" >0.613620</td>\n",
        "                        <td id=\"T_a45403d2_07ec_11eb_8fbb_525400897695row9_col7\" class=\"data row9 col7\" >0.474520</td>\n",
        "                        <td id=\"T_a45403d2_07ec_11eb_8fbb_525400897695row9_col8\" class=\"data row9 col8\" >0.825656</td>\n",
        "                        <td id=\"T_a45403d2_07ec_11eb_8fbb_525400897695row9_col9\" class=\"data row9 col9\" >1.000000</td>\n",
        "                        <td id=\"T_a45403d2_07ec_11eb_8fbb_525400897695row9_col10\" class=\"data row9 col10\" >0.608531</td>\n",
        "                        <td id=\"T_a45403d2_07ec_11eb_8fbb_525400897695row9_col11\" class=\"data row9 col11\" >0.720850</td>\n",
        "                        <td id=\"T_a45403d2_07ec_11eb_8fbb_525400897695row9_col12\" class=\"data row9 col12\" >0.442397</td>\n",
        "                        <td id=\"T_a45403d2_07ec_11eb_8fbb_525400897695row9_col13\" class=\"data row9 col13\" >0.514737</td>\n",
        "                        <td id=\"T_a45403d2_07ec_11eb_8fbb_525400897695row9_col14\" class=\"data row9 col14\" >0.587065</td>\n",
        "                        <td id=\"T_a45403d2_07ec_11eb_8fbb_525400897695row9_col15\" class=\"data row9 col15\" >0.067041</td>\n",
        "                        <td id=\"T_a45403d2_07ec_11eb_8fbb_525400897695row9_col16\" class=\"data row9 col16\" >0.761009</td>\n",
        "            </tr>\n",
        "            <tr>\n",
        "                        <th id=\"T_a45403d2_07ec_11eb_8fbb_525400897695level0_row10\" class=\"row_heading level0 row10\" >Stay_home_restrictions</th>\n",
        "                        <td id=\"T_a45403d2_07ec_11eb_8fbb_525400897695row10_col0\" class=\"data row10 col0\" >-0.069388</td>\n",
        "                        <td id=\"T_a45403d2_07ec_11eb_8fbb_525400897695row10_col1\" class=\"data row10 col1\" >0.085906</td>\n",
        "                        <td id=\"T_a45403d2_07ec_11eb_8fbb_525400897695row10_col2\" class=\"data row10 col2\" >0.194049</td>\n",
        "                        <td id=\"T_a45403d2_07ec_11eb_8fbb_525400897695row10_col3\" class=\"data row10 col3\" >0.204468</td>\n",
        "                        <td id=\"T_a45403d2_07ec_11eb_8fbb_525400897695row10_col4\" class=\"data row10 col4\" >0.036273</td>\n",
        "                        <td id=\"T_a45403d2_07ec_11eb_8fbb_525400897695row10_col5\" class=\"data row10 col5\" >0.507064</td>\n",
        "                        <td id=\"T_a45403d2_07ec_11eb_8fbb_525400897695row10_col6\" class=\"data row10 col6\" >0.588623</td>\n",
        "                        <td id=\"T_a45403d2_07ec_11eb_8fbb_525400897695row10_col7\" class=\"data row10 col7\" >0.456130</td>\n",
        "                        <td id=\"T_a45403d2_07ec_11eb_8fbb_525400897695row10_col8\" class=\"data row10 col8\" >0.667507</td>\n",
        "                        <td id=\"T_a45403d2_07ec_11eb_8fbb_525400897695row10_col9\" class=\"data row10 col9\" >0.608531</td>\n",
        "                        <td id=\"T_a45403d2_07ec_11eb_8fbb_525400897695row10_col10\" class=\"data row10 col10\" >1.000000</td>\n",
        "                        <td id=\"T_a45403d2_07ec_11eb_8fbb_525400897695row10_col11\" class=\"data row10 col11\" >0.801746</td>\n",
        "                        <td id=\"T_a45403d2_07ec_11eb_8fbb_525400897695row10_col12\" class=\"data row10 col12\" >0.562983</td>\n",
        "                        <td id=\"T_a45403d2_07ec_11eb_8fbb_525400897695row10_col13\" class=\"data row10 col13\" >0.431391</td>\n",
        "                        <td id=\"T_a45403d2_07ec_11eb_8fbb_525400897695row10_col14\" class=\"data row10 col14\" >0.357087</td>\n",
        "                        <td id=\"T_a45403d2_07ec_11eb_8fbb_525400897695row10_col15\" class=\"data row10 col15\" >0.393918</td>\n",
        "                        <td id=\"T_a45403d2_07ec_11eb_8fbb_525400897695row10_col16\" class=\"data row10 col16\" >0.785155</td>\n",
        "            </tr>\n",
        "            <tr>\n",
        "                        <th id=\"T_a45403d2_07ec_11eb_8fbb_525400897695level0_row11\" class=\"row_heading level0 row11\" >Internal_movement_restrictions</th>\n",
        "                        <td id=\"T_a45403d2_07ec_11eb_8fbb_525400897695row11_col0\" class=\"data row11 col0\" >-0.038916</td>\n",
        "                        <td id=\"T_a45403d2_07ec_11eb_8fbb_525400897695row11_col1\" class=\"data row11 col1\" >-0.134896</td>\n",
        "                        <td id=\"T_a45403d2_07ec_11eb_8fbb_525400897695row11_col2\" class=\"data row11 col2\" >0.036215</td>\n",
        "                        <td id=\"T_a45403d2_07ec_11eb_8fbb_525400897695row11_col3\" class=\"data row11 col3\" >0.049240</td>\n",
        "                        <td id=\"T_a45403d2_07ec_11eb_8fbb_525400897695row11_col4\" class=\"data row11 col4\" >-0.045106</td>\n",
        "                        <td id=\"T_a45403d2_07ec_11eb_8fbb_525400897695row11_col5\" class=\"data row11 col5\" >0.527170</td>\n",
        "                        <td id=\"T_a45403d2_07ec_11eb_8fbb_525400897695row11_col6\" class=\"data row11 col6\" >0.521328</td>\n",
        "                        <td id=\"T_a45403d2_07ec_11eb_8fbb_525400897695row11_col7\" class=\"data row11 col7\" >0.460089</td>\n",
        "                        <td id=\"T_a45403d2_07ec_11eb_8fbb_525400897695row11_col8\" class=\"data row11 col8\" >0.745858</td>\n",
        "                        <td id=\"T_a45403d2_07ec_11eb_8fbb_525400897695row11_col9\" class=\"data row11 col9\" >0.720850</td>\n",
        "                        <td id=\"T_a45403d2_07ec_11eb_8fbb_525400897695row11_col10\" class=\"data row11 col10\" >0.801746</td>\n",
        "                        <td id=\"T_a45403d2_07ec_11eb_8fbb_525400897695row11_col11\" class=\"data row11 col11\" >1.000000</td>\n",
        "                        <td id=\"T_a45403d2_07ec_11eb_8fbb_525400897695row11_col12\" class=\"data row11 col12\" >0.477093</td>\n",
        "                        <td id=\"T_a45403d2_07ec_11eb_8fbb_525400897695row11_col13\" class=\"data row11 col13\" >0.420042</td>\n",
        "                        <td id=\"T_a45403d2_07ec_11eb_8fbb_525400897695row11_col14\" class=\"data row11 col14\" >0.398930</td>\n",
        "                        <td id=\"T_a45403d2_07ec_11eb_8fbb_525400897695row11_col15\" class=\"data row11 col15\" >0.187623</td>\n",
        "                        <td id=\"T_a45403d2_07ec_11eb_8fbb_525400897695row11_col16\" class=\"data row11 col16\" >0.756902</td>\n",
        "            </tr>\n",
        "            <tr>\n",
        "                        <th id=\"T_a45403d2_07ec_11eb_8fbb_525400897695level0_row12\" class=\"row_heading level0 row12\" >International_movement_restrictions</th>\n",
        "                        <td id=\"T_a45403d2_07ec_11eb_8fbb_525400897695row12_col0\" class=\"data row12 col0\" >-0.282011</td>\n",
        "                        <td id=\"T_a45403d2_07ec_11eb_8fbb_525400897695row12_col1\" class=\"data row12 col1\" >0.167629</td>\n",
        "                        <td id=\"T_a45403d2_07ec_11eb_8fbb_525400897695row12_col2\" class=\"data row12 col2\" >0.222274</td>\n",
        "                        <td id=\"T_a45403d2_07ec_11eb_8fbb_525400897695row12_col3\" class=\"data row12 col3\" >0.074947</td>\n",
        "                        <td id=\"T_a45403d2_07ec_11eb_8fbb_525400897695row12_col4\" class=\"data row12 col4\" >-0.103321</td>\n",
        "                        <td id=\"T_a45403d2_07ec_11eb_8fbb_525400897695row12_col5\" class=\"data row12 col5\" >0.429933</td>\n",
        "                        <td id=\"T_a45403d2_07ec_11eb_8fbb_525400897695row12_col6\" class=\"data row12 col6\" >0.454296</td>\n",
        "                        <td id=\"T_a45403d2_07ec_11eb_8fbb_525400897695row12_col7\" class=\"data row12 col7\" >0.492751</td>\n",
        "                        <td id=\"T_a45403d2_07ec_11eb_8fbb_525400897695row12_col8\" class=\"data row12 col8\" >0.495018</td>\n",
        "                        <td id=\"T_a45403d2_07ec_11eb_8fbb_525400897695row12_col9\" class=\"data row12 col9\" >0.442397</td>\n",
        "                        <td id=\"T_a45403d2_07ec_11eb_8fbb_525400897695row12_col10\" class=\"data row12 col10\" >0.562983</td>\n",
        "                        <td id=\"T_a45403d2_07ec_11eb_8fbb_525400897695row12_col11\" class=\"data row12 col11\" >0.477093</td>\n",
        "                        <td id=\"T_a45403d2_07ec_11eb_8fbb_525400897695row12_col12\" class=\"data row12 col12\" >1.000000</td>\n",
        "                        <td id=\"T_a45403d2_07ec_11eb_8fbb_525400897695row12_col13\" class=\"data row12 col13\" >0.466333</td>\n",
        "                        <td id=\"T_a45403d2_07ec_11eb_8fbb_525400897695row12_col14\" class=\"data row12 col14\" >0.569531</td>\n",
        "                        <td id=\"T_a45403d2_07ec_11eb_8fbb_525400897695row12_col15\" class=\"data row12 col15\" >0.490678</td>\n",
        "                        <td id=\"T_a45403d2_07ec_11eb_8fbb_525400897695row12_col16\" class=\"data row12 col16\" >0.631156</td>\n",
        "            </tr>\n",
        "            <tr>\n",
        "                        <th id=\"T_a45403d2_07ec_11eb_8fbb_525400897695level0_row13\" class=\"row_heading level0 row13\" >Information_campaigns</th>\n",
        "                        <td id=\"T_a45403d2_07ec_11eb_8fbb_525400897695row13_col0\" class=\"data row13 col0\" >-0.126992</td>\n",
        "                        <td id=\"T_a45403d2_07ec_11eb_8fbb_525400897695row13_col1\" class=\"data row13 col1\" >-0.311743</td>\n",
        "                        <td id=\"T_a45403d2_07ec_11eb_8fbb_525400897695row13_col2\" class=\"data row13 col2\" >-0.371354</td>\n",
        "                        <td id=\"T_a45403d2_07ec_11eb_8fbb_525400897695row13_col3\" class=\"data row13 col3\" >-0.397252</td>\n",
        "                        <td id=\"T_a45403d2_07ec_11eb_8fbb_525400897695row13_col4\" class=\"data row13 col4\" >0.063422</td>\n",
        "                        <td id=\"T_a45403d2_07ec_11eb_8fbb_525400897695row13_col5\" class=\"data row13 col5\" >0.760072</td>\n",
        "                        <td id=\"T_a45403d2_07ec_11eb_8fbb_525400897695row13_col6\" class=\"data row13 col6\" >0.827805</td>\n",
        "                        <td id=\"T_a45403d2_07ec_11eb_8fbb_525400897695row13_col7\" class=\"data row13 col7\" >0.894802</td>\n",
        "                        <td id=\"T_a45403d2_07ec_11eb_8fbb_525400897695row13_col8\" class=\"data row13 col8\" >0.646848</td>\n",
        "                        <td id=\"T_a45403d2_07ec_11eb_8fbb_525400897695row13_col9\" class=\"data row13 col9\" >0.514737</td>\n",
        "                        <td id=\"T_a45403d2_07ec_11eb_8fbb_525400897695row13_col10\" class=\"data row13 col10\" >0.431391</td>\n",
        "                        <td id=\"T_a45403d2_07ec_11eb_8fbb_525400897695row13_col11\" class=\"data row13 col11\" >0.420042</td>\n",
        "                        <td id=\"T_a45403d2_07ec_11eb_8fbb_525400897695row13_col12\" class=\"data row13 col12\" >0.466333</td>\n",
        "                        <td id=\"T_a45403d2_07ec_11eb_8fbb_525400897695row13_col13\" class=\"data row13 col13\" >1.000000</td>\n",
        "                        <td id=\"T_a45403d2_07ec_11eb_8fbb_525400897695row13_col14\" class=\"data row13 col14\" >0.746269</td>\n",
        "                        <td id=\"T_a45403d2_07ec_11eb_8fbb_525400897695row13_col15\" class=\"data row13 col15\" >0.557345</td>\n",
        "                        <td id=\"T_a45403d2_07ec_11eb_8fbb_525400897695row13_col16\" class=\"data row13 col16\" >0.820987</td>\n",
        "            </tr>\n",
        "            <tr>\n",
        "                        <th id=\"T_a45403d2_07ec_11eb_8fbb_525400897695level0_row14\" class=\"row_heading level0 row14\" >Testing_policy</th>\n",
        "                        <td id=\"T_a45403d2_07ec_11eb_8fbb_525400897695row14_col0\" class=\"data row14 col0\" >-0.162535</td>\n",
        "                        <td id=\"T_a45403d2_07ec_11eb_8fbb_525400897695row14_col1\" class=\"data row14 col1\" >-0.349199</td>\n",
        "                        <td id=\"T_a45403d2_07ec_11eb_8fbb_525400897695row14_col2\" class=\"data row14 col2\" >-0.414278</td>\n",
        "                        <td id=\"T_a45403d2_07ec_11eb_8fbb_525400897695row14_col3\" class=\"data row14 col3\" >-0.525092</td>\n",
        "                        <td id=\"T_a45403d2_07ec_11eb_8fbb_525400897695row14_col4\" class=\"data row14 col4\" >-0.135243</td>\n",
        "                        <td id=\"T_a45403d2_07ec_11eb_8fbb_525400897695row14_col5\" class=\"data row14 col5\" >0.616078</td>\n",
        "                        <td id=\"T_a45403d2_07ec_11eb_8fbb_525400897695row14_col6\" class=\"data row14 col6\" >0.625802</td>\n",
        "                        <td id=\"T_a45403d2_07ec_11eb_8fbb_525400897695row14_col7\" class=\"data row14 col7\" >0.733147</td>\n",
        "                        <td id=\"T_a45403d2_07ec_11eb_8fbb_525400897695row14_col8\" class=\"data row14 col8\" >0.584946</td>\n",
        "                        <td id=\"T_a45403d2_07ec_11eb_8fbb_525400897695row14_col9\" class=\"data row14 col9\" >0.587065</td>\n",
        "                        <td id=\"T_a45403d2_07ec_11eb_8fbb_525400897695row14_col10\" class=\"data row14 col10\" >0.357087</td>\n",
        "                        <td id=\"T_a45403d2_07ec_11eb_8fbb_525400897695row14_col11\" class=\"data row14 col11\" >0.398930</td>\n",
        "                        <td id=\"T_a45403d2_07ec_11eb_8fbb_525400897695row14_col12\" class=\"data row14 col12\" >0.569531</td>\n",
        "                        <td id=\"T_a45403d2_07ec_11eb_8fbb_525400897695row14_col13\" class=\"data row14 col13\" >0.746269</td>\n",
        "                        <td id=\"T_a45403d2_07ec_11eb_8fbb_525400897695row14_col14\" class=\"data row14 col14\" >1.000000</td>\n",
        "                        <td id=\"T_a45403d2_07ec_11eb_8fbb_525400897695row14_col15\" class=\"data row14 col15\" >0.352122</td>\n",
        "                        <td id=\"T_a45403d2_07ec_11eb_8fbb_525400897695row14_col16\" class=\"data row14 col16\" >0.641929</td>\n",
        "            </tr>\n",
        "            <tr>\n",
        "                        <th id=\"T_a45403d2_07ec_11eb_8fbb_525400897695level0_row15\" class=\"row_heading level0 row15\" >Contact_tracing</th>\n",
        "                        <td id=\"T_a45403d2_07ec_11eb_8fbb_525400897695row15_col0\" class=\"data row15 col0\" >-0.378705</td>\n",
        "                        <td id=\"T_a45403d2_07ec_11eb_8fbb_525400897695row15_col1\" class=\"data row15 col1\" >0.121919</td>\n",
        "                        <td id=\"T_a45403d2_07ec_11eb_8fbb_525400897695row15_col2\" class=\"data row15 col2\" >-0.002924</td>\n",
        "                        <td id=\"T_a45403d2_07ec_11eb_8fbb_525400897695row15_col3\" class=\"data row15 col3\" >-0.094053</td>\n",
        "                        <td id=\"T_a45403d2_07ec_11eb_8fbb_525400897695row15_col4\" class=\"data row15 col4\" >0.227065</td>\n",
        "                        <td id=\"T_a45403d2_07ec_11eb_8fbb_525400897695row15_col5\" class=\"data row15 col5\" >0.340321</td>\n",
        "                        <td id=\"T_a45403d2_07ec_11eb_8fbb_525400897695row15_col6\" class=\"data row15 col6\" >0.387845</td>\n",
        "                        <td id=\"T_a45403d2_07ec_11eb_8fbb_525400897695row15_col7\" class=\"data row15 col7\" >0.614368</td>\n",
        "                        <td id=\"T_a45403d2_07ec_11eb_8fbb_525400897695row15_col8\" class=\"data row15 col8\" >0.231874</td>\n",
        "                        <td id=\"T_a45403d2_07ec_11eb_8fbb_525400897695row15_col9\" class=\"data row15 col9\" >0.067041</td>\n",
        "                        <td id=\"T_a45403d2_07ec_11eb_8fbb_525400897695row15_col10\" class=\"data row15 col10\" >0.393918</td>\n",
        "                        <td id=\"T_a45403d2_07ec_11eb_8fbb_525400897695row15_col11\" class=\"data row15 col11\" >0.187623</td>\n",
        "                        <td id=\"T_a45403d2_07ec_11eb_8fbb_525400897695row15_col12\" class=\"data row15 col12\" >0.490678</td>\n",
        "                        <td id=\"T_a45403d2_07ec_11eb_8fbb_525400897695row15_col13\" class=\"data row15 col13\" >0.557345</td>\n",
        "                        <td id=\"T_a45403d2_07ec_11eb_8fbb_525400897695row15_col14\" class=\"data row15 col14\" >0.352122</td>\n",
        "                        <td id=\"T_a45403d2_07ec_11eb_8fbb_525400897695row15_col15\" class=\"data row15 col15\" >1.000000</td>\n",
        "                        <td id=\"T_a45403d2_07ec_11eb_8fbb_525400897695row15_col16\" class=\"data row15 col16\" >0.490151</td>\n",
        "            </tr>\n",
        "            <tr>\n",
        "                        <th id=\"T_a45403d2_07ec_11eb_8fbb_525400897695level0_row16\" class=\"row_heading level0 row16\" >Stringency_index</th>\n",
        "                        <td id=\"T_a45403d2_07ec_11eb_8fbb_525400897695row16_col0\" class=\"data row16 col0\" >-0.064043</td>\n",
        "                        <td id=\"T_a45403d2_07ec_11eb_8fbb_525400897695row16_col1\" class=\"data row16 col1\" >-0.204425</td>\n",
        "                        <td id=\"T_a45403d2_07ec_11eb_8fbb_525400897695row16_col2\" class=\"data row16 col2\" >-0.117798</td>\n",
        "                        <td id=\"T_a45403d2_07ec_11eb_8fbb_525400897695row16_col3\" class=\"data row16 col3\" >-0.091540</td>\n",
        "                        <td id=\"T_a45403d2_07ec_11eb_8fbb_525400897695row16_col4\" class=\"data row16 col4\" >0.085678</td>\n",
        "                        <td id=\"T_a45403d2_07ec_11eb_8fbb_525400897695row16_col5\" class=\"data row16 col5\" >0.815532</td>\n",
        "                        <td id=\"T_a45403d2_07ec_11eb_8fbb_525400897695row16_col6\" class=\"data row16 col6\" >0.853906</td>\n",
        "                        <td id=\"T_a45403d2_07ec_11eb_8fbb_525400897695row16_col7\" class=\"data row16 col7\" >0.807552</td>\n",
        "                        <td id=\"T_a45403d2_07ec_11eb_8fbb_525400897695row16_col8\" class=\"data row16 col8\" >0.864757</td>\n",
        "                        <td id=\"T_a45403d2_07ec_11eb_8fbb_525400897695row16_col9\" class=\"data row16 col9\" >0.761009</td>\n",
        "                        <td id=\"T_a45403d2_07ec_11eb_8fbb_525400897695row16_col10\" class=\"data row16 col10\" >0.785155</td>\n",
        "                        <td id=\"T_a45403d2_07ec_11eb_8fbb_525400897695row16_col11\" class=\"data row16 col11\" >0.756902</td>\n",
        "                        <td id=\"T_a45403d2_07ec_11eb_8fbb_525400897695row16_col12\" class=\"data row16 col12\" >0.631156</td>\n",
        "                        <td id=\"T_a45403d2_07ec_11eb_8fbb_525400897695row16_col13\" class=\"data row16 col13\" >0.820987</td>\n",
        "                        <td id=\"T_a45403d2_07ec_11eb_8fbb_525400897695row16_col14\" class=\"data row16 col14\" >0.641929</td>\n",
        "                        <td id=\"T_a45403d2_07ec_11eb_8fbb_525400897695row16_col15\" class=\"data row16 col15\" >0.490151</td>\n",
        "                        <td id=\"T_a45403d2_07ec_11eb_8fbb_525400897695row16_col16\" class=\"data row16 col16\" >1.000000</td>\n",
        "            </tr>\n",
        "    </tbody></table>"
       ],
       "output_type": "pyout",
       "prompt_number": 21,
       "text": [
        "<pandas.io.formats.style.Styler at 0x7f61fd7cda90>"
       ]
      }
     ],
     "prompt_number": 21
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "# Scatter plot of Stringency index and Rt\n",
      "df = track_df.copy()\n",
      "sns.scatterplot(data=df, x=\"Stringency_index\", y=\"Rt\", hue=\"Country\", legend=\"brief\", marker=\"+\")\n",
      "bbox_to_anchor=(1.02, 0)\n",
      "bbox_loc=\"lower left\"\n",
      "plt.legend(bbox_to_anchor=bbox_to_anchor, loc=bbox_loc, borderaxespad=0)\n",
      "plt.title(\"Relationship of Stringency index and reproduction number\")\n",
      "plt.ylabel(\"Reproduction number\")\n",
      "plt.xlabel(\"Stringency index\")\n",
      "plt.show()"
     ],
     "language": "python",
     "metadata": {},
     "outputs": [
      {
       "output_type": "display_data",
       "png": "\n",
       "text": [
        "<Figure size 432x288 with 1 Axes>"
       ]
      }
     ],
     "prompt_number": 22
    }
   ],
   "metadata": {}
  }
 ]
}
