{
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3.8.2 64-bit ('.venv': venv)",
   "name": "python_defaultSpec_1597669925034"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.8.2-final"
  },
  "name": ""
 },
 "nbformat": 3,
 "nbformat_minor": 0,
 "worksheets": [
  {
   "cells": [
    {
     "cell_type": "markdown",
     "metadata": {},
     "source": [
      "# Usage (details: policy measures)\n",
      "Here, we will analyse the relationship of policy measures and parameter values of SIR-derived ODE models. Policy measures are tracked by [Oxford Covid-19 Government Response Tracker (OxCGRT)](https://github.com/OxCGRT/covid-policy-tracker)."
     ]
    },
    {
     "cell_type": "heading",
     "level": 2,
     "metadata": {},
     "source": [
      "Preparation"
     ]
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "# Standard users\n",
      "# !pip install covsirphy\n",
      "# Developers (Note: this notebook is in example directory)\n",
      "import os\n",
      "os.chdir(\"../\")"
     ],
     "language": "python",
     "metadata": {},
     "outputs": [],
     "prompt_number": 1
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "from pprint import pprint"
     ],
     "language": "python",
     "metadata": {},
     "outputs": [],
     "prompt_number": 2
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "import covsirphy as cs\n",
      "cs.__version__"
     ],
     "language": "python",
     "metadata": {},
     "outputs": [
      {
       "output_type": "pyout",
       "prompt_number": 3,
       "text": [
        "'2.9.1-delta.new.290.fix.282.283.296'"
       ]
      }
     ],
     "prompt_number": 3
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "# Standard users and developers\n",
      "data_loader = cs.DataLoader(\"input\")\n",
      "# The number of cases (JHU style)\n",
      "jhu_data = data_loader.jhu(verbose=False)\n",
      "# Population in each country\n",
      "population_data = data_loader.population(verbose=False)\n",
      "# Government Response Tracker (OxCGRT)\n",
      "oxcgrt_data = data_loader.oxcgrt(verbose=False)\n",
      "# Description/citation\n",
      "print(oxcgrt_data.citation)"
     ],
     "language": "python",
     "metadata": {
      "tags": []
     },
     "outputs": [
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "(Secondary source) Guidotti, E., Ardia, D., (2020), \"COVID-19 Data Hub\", Journal of Open Source Software 5(51):2376, doi: 10.21105/joss.02376.\n",
        "We can get Citation list of primary sources with DataLoader(...).covid19dh_citation\n"
       ]
      }
     ],
     "prompt_number": 4
    },
    {
     "cell_type": "markdown",
     "metadata": {},
     "source": [
      "## Class for policy measure analysis\n",
      "We will `PolicyMeasures` class to find relationship of policy measures and parameter values of SIR-derived ODE models."
     ]
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "# Create analyser with tau value 360 [min] (can be changed)\n",
      "analyser = cs.PolicyMeasures(jhu_data, population_data, oxcgrt_data, tau=360)\n",
      "# The number of registerd countries\n",
      "len(analyser.countries)"
     ],
     "language": "python",
     "metadata": {
      "tags": []
     },
     "outputs": [
      {
       "output_type": "pyout",
       "prompt_number": 5,
       "text": [
        "184"
       ]
      }
     ],
     "prompt_number": 5
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "# We can get Scenario instance for detailed scenario analysis\n",
      "type(analyser.scenario(\"Japan\"))"
     ],
     "language": "python",
     "metadata": {},
     "outputs": [
      {
       "output_type": "pyout",
       "prompt_number": 6,
       "text": [
        "covsirphy.analysis.scenario.Scenario"
       ]
      }
     ],
     "prompt_number": 6
    },
    {
     "cell_type": "markdown",
     "metadata": {},
     "source": [
      "## Set phases with S-R trend analysis\n",
      "We will perform S-R trend analysis to set phases in all countries. Countries which do not have **12th phases** will be un-registered for the next analysis. This number will be adjusted for your analysis."
     ]
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "# Show the number of phases of all countries\n",
      "analyser.trend()\n",
      "pprint(analyser.phase_len(), compact=True)"
     ],
     "language": "python",
     "metadata": {},
     "outputs": [
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "{4: ['Fiji', 'Tanzania', 'Holy See'],\n",
        " 5: ['Grenada', 'Slovenia', 'Liechtenstein', 'Brunei', 'Georgia', 'Slovakia'],\n",
        " 6: ['Ireland', 'Botswana', 'Lithuania', 'Poland', 'Hungary',\n",
        "     'Papua New Guinea', 'Andorra', 'Yemen', 'Antigua and Barbuda', 'Tunisia',\n",
        "     'Myanmar', 'Cambodia', 'Jordan', 'Czech Republic'],\n",
        " 7: ['Angola', 'Seychelles', 'Sao Tome and Principe', 'Zimbabwe', 'Mauritius',\n",
        "     'Dominica', 'Cyprus', 'Spain', 'Malaysia', 'Jamaica', 'Gambia', 'Libya',\n",
        "     'Nepal', 'Bahamas', 'Trinidad and Tobago', 'Central African Republic',\n",
        "     'Belize', 'Iceland'],\n",
        " 8: ['Saint Vincent and the Grenadines', 'Djibouti', 'Thailand', 'Kazakhstan',\n",
        "     'Cameroon', 'Australia', 'Malawi', 'Guyana', 'Comoros', 'Croatia',\n",
        "     'Morocco', 'Paraguay', 'Ukraine', 'Monaco', 'Madagascar', 'Montenegro',\n",
        "     'Nicaragua', 'Malta', 'Equatorial Guinea', 'Mozambique', 'Lebanon',\n",
        "     'Kyrgyzstan', 'Namibia', 'South Sudan', 'Saint Lucia', 'Mongolia',\n",
        "     'Israel', 'New Zealand', 'Sri Lanka', 'Guinea-Bissau', 'Uganda', 'Rwanda',\n",
        "     'Uruguay', 'Burundi', 'Niger'],\n",
        " 9: ['Argentina', 'Vietnam', 'Switzerland', 'Greece', 'Mauritania', 'Chad',\n",
        "     'Tajikistan', 'San Marino', 'Zambia', 'Serbia', 'Romania', 'Barbados',\n",
        "     'Haiti', 'Afghanistan', 'Kenya', 'Burkina Faso', 'Bermuda', 'Costa Rica',\n",
        "     'Lesotho', 'Eritrea', 'Austria', 'Taiwan', 'Estonia', 'China',\n",
        "     'Sierra Leone', 'Portugal', 'Benin'],\n",
        " 10: ['Venezuela', 'Belgium', 'Oman', 'North Macedonia', 'Ecuador',\n",
        "      'South Africa', 'Luxembourg', 'Sudan', 'Bulgaria', 'Saudi Arabia',\n",
        "      'Qatar', 'Bhutan', 'Denmark', 'Senegal', 'Ghana', 'Philippines',\n",
        "      'Korea, South', 'Chile', 'Suriname', 'Singapore', 'Liberia', 'Ethiopia',\n",
        "      'Somalia', 'Norway', 'Maldives', 'Gabon'],\n",
        " 11: ['Japan', 'Canada', 'Swaziland', 'Cape Verde', 'Cuba', 'Finland',\n",
        "      'Algeria', 'Uzbekistan', 'Indonesia', 'Guatemala', 'Italy', 'Colombia',\n",
        "      'Mali', 'Germany', 'Pakistan', 'Congo', 'Azerbaijan', 'Kosovo', 'Moldova',\n",
        "      'Syria', 'Palestine', 'Bosnia and Herzegovina', 'India', 'Armenia',\n",
        "      'El Salvador'],\n",
        " 12: ['Panama', 'United States', 'Iran', 'Bangladesh', 'Guinea', 'Albania',\n",
        "      'Latvia', 'Dominican Republic', 'United Arab Emirates', 'Egypt',\n",
        "      'Bahrain', 'Iraq', 'Brazil', 'Mexico', 'Peru', 'Togo', 'France',\n",
        "      'Nigeria', 'Belarus'],\n",
        " 13: ['Honduras', 'Kuwait', 'Bolivia', 'Turkey'],\n",
        " 14: ['Russia']}\n"
       ]
      }
     ],
     "prompt_number": 7
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "# Set phases with S-R trend analysis\n",
      "analyser.trend(min_len=12)\n",
      "# The number of countries\n",
      "len(analyser.countries)"
     ],
     "language": "python",
     "metadata": {},
     "outputs": [
      {
       "output_type": "pyout",
       "prompt_number": 8,
       "text": [
        "24"
       ]
      }
     ],
     "prompt_number": 8
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "phase_len_dict = analyser.phase_len()\n",
      "pprint(phase_len_dict, compact=True)"
     ],
     "language": "python",
     "metadata": {
      "tags": []
     },
     "outputs": [
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "{12: ['Panama', 'United States', 'Iran', 'Bangladesh', 'Guinea', 'Albania',\n",
        "      'Latvia', 'Dominican Republic', 'United Arab Emirates', 'Egypt',\n",
        "      'Bahrain', 'Iraq', 'Brazil', 'Mexico', 'Peru', 'Togo', 'France',\n",
        "      'Nigeria', 'Belarus'],\n",
        " 13: ['Honduras', 'Kuwait', 'Bolivia', 'Turkey'],\n",
        " 14: ['Russia']}\n"
       ]
      }
     ],
     "prompt_number": 9
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "# Here, only show the countries which have the most phases\n",
      "countries_show = max(phase_len_dict.items(), key=lambda x: x[0])[1]\n",
      "# Show summary\n",
      "analyser.summary(countries=countries_show)"
     ],
     "language": "python",
     "metadata": {
      "tags": []
     },
     "outputs": [
      {
       "html": [
        "<div>\n",
        "<style scoped>\n",
        "    .dataframe tbody tr th:only-of-type {\n",
        "        vertical-align: middle;\n",
        "    }\n",
        "\n",
        "    .dataframe tbody tr th {\n",
        "        vertical-align: top;\n",
        "    }\n",
        "\n",
        "    .dataframe thead th {\n",
        "        text-align: right;\n",
        "    }\n",
        "</style>\n",
        "<table border=\"1\" class=\"dataframe\">\n",
        "  <thead>\n",
        "    <tr style=\"text-align: right;\">\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th>Type</th>\n",
        "      <th>Start</th>\n",
        "      <th>End</th>\n",
        "      <th>Population</th>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>Country</th>\n",
        "      <th>Phase</th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "    </tr>\n",
        "  </thead>\n",
        "  <tbody>\n",
        "    <tr>\n",
        "      <th rowspan=\"14\" valign=\"top\">Russia</th>\n",
        "      <th>0th</th>\n",
        "      <td>Past</td>\n",
        "      <td>12Feb2020</td>\n",
        "      <td>07May2020</td>\n",
        "      <td>330457362</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>1st</th>\n",
        "      <td>Past</td>\n",
        "      <td>08May2020</td>\n",
        "      <td>19May2020</td>\n",
        "      <td>330457362</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>2nd</th>\n",
        "      <td>Past</td>\n",
        "      <td>20May2020</td>\n",
        "      <td>30May2020</td>\n",
        "      <td>330457362</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>3rd</th>\n",
        "      <td>Past</td>\n",
        "      <td>31May2020</td>\n",
        "      <td>11Jun2020</td>\n",
        "      <td>330457362</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>4th</th>\n",
        "      <td>Past</td>\n",
        "      <td>12Jun2020</td>\n",
        "      <td>26Jun2020</td>\n",
        "      <td>330457362</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>5th</th>\n",
        "      <td>Past</td>\n",
        "      <td>27Jun2020</td>\n",
        "      <td>10Jul2020</td>\n",
        "      <td>330457362</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>6th</th>\n",
        "      <td>Past</td>\n",
        "      <td>11Jul2020</td>\n",
        "      <td>27Jul2020</td>\n",
        "      <td>330457362</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>7th</th>\n",
        "      <td>Past</td>\n",
        "      <td>28Jul2020</td>\n",
        "      <td>14Aug2020</td>\n",
        "      <td>330457362</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>8th</th>\n",
        "      <td>Past</td>\n",
        "      <td>15Aug2020</td>\n",
        "      <td>04Sep2020</td>\n",
        "      <td>330457362</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>9th</th>\n",
        "      <td>Past</td>\n",
        "      <td>05Sep2020</td>\n",
        "      <td>24Sep2020</td>\n",
        "      <td>330457362</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>10th</th>\n",
        "      <td>Past</td>\n",
        "      <td>25Sep2020</td>\n",
        "      <td>07Oct2020</td>\n",
        "      <td>330457362</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>11th</th>\n",
        "      <td>Past</td>\n",
        "      <td>08Oct2020</td>\n",
        "      <td>16Oct2020</td>\n",
        "      <td>330457362</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>12th</th>\n",
        "      <td>Past</td>\n",
        "      <td>17Oct2020</td>\n",
        "      <td>24Oct2020</td>\n",
        "      <td>330457362</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>13th</th>\n",
        "      <td>Past</td>\n",
        "      <td>25Oct2020</td>\n",
        "      <td>03Nov2020</td>\n",
        "      <td>330457362</td>\n",
        "    </tr>\n",
        "  </tbody>\n",
        "</table>\n",
        "</div>"
       ],
       "output_type": "pyout",
       "prompt_number": 10,
       "text": [
        "               Type      Start        End  Population\n",
        "Country Phase                                        \n",
        "Russia  0th    Past  12Feb2020  07May2020   330457362\n",
        "        1st    Past  08May2020  19May2020   330457362\n",
        "        2nd    Past  20May2020  30May2020   330457362\n",
        "        3rd    Past  31May2020  11Jun2020   330457362\n",
        "        4th    Past  12Jun2020  26Jun2020   330457362\n",
        "        5th    Past  27Jun2020  10Jul2020   330457362\n",
        "        6th    Past  11Jul2020  27Jul2020   330457362\n",
        "        7th    Past  28Jul2020  14Aug2020   330457362\n",
        "        8th    Past  15Aug2020  04Sep2020   330457362\n",
        "        9th    Past  05Sep2020  24Sep2020   330457362\n",
        "        10th   Past  25Sep2020  07Oct2020   330457362\n",
        "        11th   Past  08Oct2020  16Oct2020   330457362\n",
        "        12th   Past  17Oct2020  24Oct2020   330457362\n",
        "        13th   Past  25Oct2020  03Nov2020   330457362"
       ]
      }
     ],
     "prompt_number": 10
    },
    {
     "cell_type": "markdown",
     "metadata": {},
     "source": [
      "## Parameter estimation\n",
      "we will estimate the parameter values with SIR-derived ODE models in each country."
     ]
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "# Parameter estimation with SIR-F model\n",
      "analyser.estimate(cs.SIRF)"
     ],
     "language": "python",
     "metadata": {
      "tags": []
     },
     "outputs": [
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n",
        "<SIR-F model: parameter estimation>\n",
        "Running optimization with 4 CPUs...\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tMEX,  6th phase (11Aug2020 - 24Aug2020): finished 1376 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tBLR,  8th phase (06Sep2020 - 02Oct2020): finished 1382 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tNGA,  1st phase (20May2020 - 07Jun2020): finished 1366 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tBRA,  7th phase (20Aug2020 - 29Aug2020): finished 1411 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tPER,  2nd phase (29May2020 - 18Jun2020): finished 1414 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tARE,  3rd phase (02Jun2020 - 23Jun2020): finished 1451 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tMEX,  4th phase (17Jul2020 - 30Jul2020): finished 1426 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tEGY,  3rd phase (05Jun2020 - 17Jun2020): finished 1429 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tDOM,  8th phase (21Aug2020 - 04Sep2020): finished  318 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tBHR,  8th phase (04Sep2020 - 15Sep2020): finished  893 trials in 0 min 35 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tGIN,  5th phase (08Jul2020 - 23Jul2020): finished 1423 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tPAN,  1st phase (31May2020 - 24Jun2020): finished 1412 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tGIN,  2nd phase (13May2020 - 27May2020): finished 1401 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tHND,  4th phase (27Jul2020 - 05Aug2020): finished  301 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tEGY,  9th phase (28Aug2020 - 11Sep2020): finished  443 trials in 0 min 15 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tPER,  9th phase (10Sep2020 - 21Sep2020): finished 1397 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tHND, 10th phase (30Sep2020 - 08Oct2020): finished  444 trials in 0 min 15 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tPER,  0th phase (16Mar2020 - 09May2020): finished 1352 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tARE,  6th phase (15Aug2020 - 09Sep2020): finished 1379 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tDOM,  9th phase (05Sep2020 - 17Sep2020): finished  418 trials in 0 min 15 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tHND,  3rd phase (18Jul2020 - 26Jul2020): finished  296 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tBHR,  0th phase (06Mar2020 - 06May2020): finished 1327 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tTUR,  6th phase (02Jul2020 - 23Jul2020): finished  162 trials in 0 min  5 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tFRA, 10th phase (14Oct2020 - 22Oct2020): finished  676 trials in 0 min 25 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tFRA,  4th phase (28May2020 - 15Jul2020): finished 1352 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tBLR,  3rd phase (17May2020 - 30May2020): finished  679 trials in 0 min 25 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tPAN,  8th phase (09Sep2020 - 23Sep2020): finished  151 trials in 0 min  5 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tBHR,  7th phase (14Aug2020 - 03Sep2020): finished 1393 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tALB,  1st phase (13Jun2020 - 12Jul2020): finished 1378 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tLVA,  7th phase (06Aug2020 - 28Aug2020): finished 1585 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tKWT,  8th phase (22Aug2020 - 06Sep2020): finished 1470 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tIRN,  1st phase (01Apr2020 - 05May2020): finished 1426 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tRUS, 10th phase (25Sep2020 - 07Oct2020): finished 1454 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tBHR,  4th phase (28Jun2020 - 10Jul2020): finished 1423 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tBRA,  3rd phase (08Jul2020 - 20Jul2020): finished  409 trials in 0 min 15 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tUSA,  4th phase (18Jul2020 - 29Jul2020): finished  291 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tFRA,  6th phase (17Aug2020 - 02Sep2020): finished 1078 trials in 0 min 45 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tRUS,  6th phase (11Jul2020 - 27Jul2020): finished 1396 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tBGD,  9th phase (08Sep2020 - 22Sep2020): finished  358 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tKWT,  4th phase (23Jun2020 - 06Jul2020): finished 1437 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tARE,  7th phase (10Sep2020 - 22Sep2020): finished  631 trials in 0 min 20 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tNGA, 10th phase (03Sep2020 - 29Sep2020): finished 1528 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tARE, 10th phase (11Oct2020 - 23Oct2020): finished  191 trials in 0 min  5 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tMEX,  3rd phase (04Jul2020 - 16Jul2020): finished 1515 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tBOL, 12th phase (30Sep2020 - 03Nov2020): finished  895 trials in 0 min 30 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tNGA,  4th phase (29Jun2020 - 08Jul2020): finished  179 trials in 0 min  5 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tEGY,  0th phase (28Feb2020 - 11May2020): finished 1535 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tTGO,  6th phase (21Aug2020 - 02Sep2020): finished 1567 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tBGD,  7th phase (14Aug2020 - 25Aug2020): finished 1577 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tKWT,  9th phase (07Sep2020 - 20Sep2020): finished  358 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tUSA, 10th phase (14Oct2020 - 23Oct2020): finished  522 trials in 0 min 15 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tBOL,  4th phase (15Jul2020 - 22Jul2020): finished 1611 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tMEX,  8th phase (08Sep2020 - 23Sep2020): finished 1644 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tARE,  4th phase (24Jun2020 - 10Jul2020): finished 1866 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tTUR,  4th phase (22May2020 - 13Jun2020): finished 1919 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tBOL,  0th phase (01Apr2020 - 13Jun2020): finished 1884 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tNGA,  3rd phase (19Jun2020 - 28Jun2020): finished 1934 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tBOL,  8th phase (18Aug2020 - 25Aug2020): finished  661 trials in 0 min 15 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tBGD,  3rd phase (29Jun2020 - 07Jul2020): finished 1159 trials in 0 min 30 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tIRN,  4th phase (18Jun2020 - 05Jul2020): finished  243 trials in 0 min  5 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tTGO, 10th phase (12Oct2020 - 22Oct2020): finished 1166 trials in 0 min 30 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tBOL,  2nd phase (26Jun2020 - 05Jul2020): finished  246 trials in 0 min  5 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tKWT, 11th phase (07Oct2020 - 19Oct2020): finished  458 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tRUS,  9th phase (05Sep2020 - 24Sep2020): finished 1940 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tPAN,  2nd phase (25Jun2020 - 11Jul2020): finished 1946 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tLVA,  3rd phase (07May2020 - 15May2020): finished 2235 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tTUR,  7th phase (24Jul2020 - 15Aug2020): finished 1928 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tBRA, 10th phase (24Sep2020 - 09Oct2020): finished  245 trials in 0 min  5 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tDOM,  0th phase (24Mar2020 - 22May2020): finished 1872 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tBHR,  6th phase (26Jul2020 - 13Aug2020): finished 1897 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tUSA,  8th phase (14Sep2020 - 30Sep2020): finished  822 trials in 0 min 20 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tTUR,  9th phase (04Sep2020 - 20Sep2020): finished 1899 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tUSA,  3rd phase (06Jul2020 - 17Jul2020): finished  458 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tBRA,  9th phase (11Sep2020 - 23Sep2020): finished  246 trials in 0 min  5 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tDOM,  4th phase (15Jul2020 - 23Jul2020): finished  463 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tBLR,  4th phase (31May2020 - 13Jun2020): finished 1948 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tHND,  0th phase (28Mar2020 - 16Jun2020): finished 1897 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tBOL,  1st phase (14Jun2020 - 25Jun2020): finished 1951 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tTGO,  4th phase (23Jul2020 - 06Aug2020): finished 1960 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tBHR, 10th phase (27Sep2020 - 10Oct2020): finished  243 trials in 0 min  5 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tTGO,  9th phase (30Sep2020 - 11Oct2020): finished 1929 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tGIN, 11th phase (08Oct2020 - 03Nov2020): finished 1903 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tBLR,  1st phase (29Apr2020 - 08May2020): finished 1926 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tKWT, 12th phase (20Oct2020 - 03Nov2020): finished 1914 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tBOL,  7th phase (10Aug2020 - 17Aug2020): finished  458 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tEGY,  6th phase (13Jul2020 - 22Jul2020): finished  457 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tARE,  2nd phase (20May2020 - 01Jun2020): finished 1936 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tIRN,  7th phase (18Aug2020 - 11Sep2020): finished  239 trials in 0 min  5 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tBOL, 11th phase (13Sep2020 - 29Sep2020): finished  456 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tIRQ,  3rd phase (30Jul2020 - 12Aug2020): finished  651 trials in 0 min 15 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tHND,  9th phase (20Sep2020 - 29Sep2020): finished  656 trials in 0 min 15 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tPER,  7th phase (19Aug2020 - 28Aug2020): finished 1942 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tPER, 10th phase (22Sep2020 - 07Oct2020): finished 1935 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tUSA,  0th phase (09Feb2020 - 05May2020): finished 1862 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tKWT,  6th phase (23Jul2020 - 07Aug2020): finished  240 trials in 0 min  5 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tEGY,  8th phase (11Aug2020 - 27Aug2020): finished  240 trials in 0 min  5 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tKWT,  0th phase (08Mar2020 - 13May2020): finished 1709 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tGIN,  3rd phase (28May2020 - 14Jun2020): finished 1918 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tHND,  1st phase (17Jun2020 - 03Jul2020): finished 1952 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tBLR, 11th phase (26Oct2020 - 03Nov2020): finished 1942 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tBOL, 10th phase (04Sep2020 - 12Sep2020): finished 1937 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tBGD,  4th phase (08Jul2020 - 18Jul2020): finished  454 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tLVA, 10th phase (30Sep2020 - 23Oct2020): finished 2194 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tBHR,  1st phase (07May2020 - 31May2020): finished 1907 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tIRQ,  4th phase (13Aug2020 - 23Aug2020): finished 1926 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tALB,  0th phase (21Mar2020 - 12Jun2020): finished 1872 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tEGY,  5th phase (02Jul2020 - 12Jul2020): finished  245 trials in 0 min  5 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tTGO,  8th phase (17Sep2020 - 29Sep2020): finished 1935 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tARE,  5th phase (11Jul2020 - 14Aug2020): finished  978 trials in 0 min 25 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tBLR,  6th phase (04Jul2020 - 30Jul2020): finished  444 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tUSA, 11th phase (24Oct2020 - 03Nov2020): finished  987 trials in 0 min 25 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tFRA,  0th phase (12Feb2020 - 27Mar2020): finished 1910 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tNGA,  6th phase (19Jul2020 - 27Jul2020): finished  242 trials in 0 min  5 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tBRA,  4th phase (21Jul2020 - 30Jul2020): finished 1949 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tUSA,  9th phase (01Oct2020 - 13Oct2020): finished  988 trials in 0 min 25 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tBHR,  5th phase (11Jul2020 - 25Jul2020): finished 1932 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tIRN, 10th phase (13Oct2020 - 23Oct2020): finished  429 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tNGA,  9th phase (19Aug2020 - 02Sep2020): finished  451 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tARE,  0th phase (12Feb2020 - 03May2020): finished 1803 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tPER,  6th phase (08Aug2020 - 18Aug2020): finished 1835 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tTGO,  3rd phase (27Jun2020 - 22Jul2020): finished 1743 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tKWT, 10th phase (21Sep2020 - 06Oct2020): finished  332 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tPAN,  6th phase (12Aug2020 - 25Aug2020): finished 1600 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tALB,  6th phase (07Sep2020 - 17Sep2020): finished  151 trials in 0 min  5 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tPAN,  7th phase (26Aug2020 - 08Sep2020): finished  615 trials in 0 min 15 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tBHR,  2nd phase (01Jun2020 - 14Jun2020): finished 1621 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tIRN,  8th phase (12Sep2020 - 29Sep2020): finished  452 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tRUS,  5th phase (27Jun2020 - 10Jul2020): finished 1714 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tLVA,  6th phase (08Jul2020 - 05Aug2020): finished 1957 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tIRQ, 10th phase (11Oct2020 - 20Oct2020): finished  435 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tUSA,  7th phase (28Aug2020 - 13Sep2020): finished  812 trials in 0 min 20 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tEGY,  7th phase (23Jul2020 - 10Aug2020): finished  826 trials in 0 min 20 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tIRQ,  1st phase (26Jun2020 - 14Jul2020): finished 1926 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tBOL,  3rd phase (06Jul2020 - 14Jul2020): finished  831 trials in 0 min 20 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tIRN,  2nd phase (06May2020 - 30May2020): finished 1914 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tBHR,  3rd phase (15Jun2020 - 27Jun2020): finished  454 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tTUR,  8th phase (16Aug2020 - 03Sep2020): finished  454 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tEGY, 10th phase (12Sep2020 - 30Sep2020): finished  237 trials in 0 min  5 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tRUS,  8th phase (15Aug2020 - 04Sep2020): finished 1949 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tPAN,  9th phase (24Sep2020 - 07Oct2020): finished  243 trials in 0 min  5 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tPAN, 11th phase (21Oct2020 - 03Nov2020): finished  812 trials in 0 min 20 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tLVA,  0th phase (10Mar2020 - 10Apr2020): finished 2186 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tIRN,  5th phase (06Jul2020 - 26Jul2020): finished  237 trials in 0 min  5 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tKWT,  3rd phase (08Jun2020 - 22Jun2020): finished 1928 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tIRN,  3rd phase (31May2020 - 17Jun2020): finished  935 trials in 0 min 25 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tIRQ,  0th phase (09Mar2020 - 25Jun2020): finished 1841 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tLVA,  2nd phase (22Apr2020 - 06May2020): finished 2170 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tFRA,  1st phase (28Mar2020 - 11Apr2020): finished 1898 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tPAN,  5th phase (02Aug2020 - 11Aug2020): finished  449 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tHND,  6th phase (21Aug2020 - 30Aug2020): finished 1906 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tFRA,  8th phase (16Sep2020 - 30Sep2020): finished  817 trials in 0 min 20 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tBRA,  8th phase (30Aug2020 - 10Sep2020): finished 1926 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tARE,  1st phase (04May2020 - 19May2020): finished  239 trials in 0 min  5 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tNGA,  0th phase (18Mar2020 - 19May2020): finished 1870 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tIRQ,  7th phase (12Sep2020 - 21Sep2020): finished  244 trials in 0 min  5 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tPAN,  3rd phase (12Jul2020 - 23Jul2020): finished 1430 trials in 0 min 40 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tUSA,  6th phase (12Aug2020 - 27Aug2020): finished  237 trials in 0 min  5 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tEGY,  1st phase (12May2020 - 26May2020): finished 1910 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tNGA,  5th phase (09Jul2020 - 18Jul2020): finished 1912 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tPAN, 10th phase (08Oct2020 - 20Oct2020): finished  241 trials in 0 min  5 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tTUR,  1st phase (17Apr2020 - 26Apr2020): finished 1920 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tMEX, 10th phase (06Oct2020 - 19Oct2020): finished  452 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tBGD,  1st phase (05Jun2020 - 19Jun2020): finished 1928 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tBGD,  5th phase (19Jul2020 - 30Jul2020): finished 1935 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tKWT,  5th phase (07Jul2020 - 22Jul2020): finished 1940 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tTGO,  0th phase (20Mar2020 - 10May2020): finished 1904 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tRUS,  7th phase (28Jul2020 - 14Aug2020): finished 1909 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tGIN,  1st phase (29Apr2020 - 12May2020): finished 1919 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tRUS, 13th phase (25Oct2020 - 03Nov2020): finished 1930 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tTGO,  5th phase (07Aug2020 - 20Aug2020): finished 1936 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tEGY, 11th phase (01Oct2020 - 03Nov2020): finished 1915 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tARE,  9th phase (02Oct2020 - 10Oct2020): finished 1921 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tBRA, 11th phase (10Oct2020 - 03Nov2020): finished 1921 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tBRA,  1st phase (29May2020 - 21Jun2020): finished 1924 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tALB,  5th phase (26Aug2020 - 06Sep2020): finished  453 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tBGD,  2nd phase (20Jun2020 - 28Jun2020): finished 1930 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tALB,  2nd phase (13Jul2020 - 31Jul2020): finished  617 trials in 0 min 15 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tTUR,  3rd phase (07May2020 - 21May2020): finished 1904 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tTGO,  1st phase (11May2020 - 02Jun2020): finished 1929 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tRUS, 12th phase (17Oct2020 - 24Oct2020): finished 1941 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tTGO,  2nd phase (03Jun2020 - 26Jun2020): finished 1909 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tMEX,  2nd phase (18Jun2020 - 03Jul2020): finished 1800 trials in 0 min 55 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tHND, 12th phase (17Oct2020 - 03Nov2020): finished 1929 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tGIN,  4th phase (15Jun2020 - 07Jul2020): finished 1903 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tEGY,  2nd phase (27May2020 - 04Jun2020): finished 1923 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tALB,  4th phase (15Aug2020 - 25Aug2020): finished  243 trials in 0 min  5 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tBLR,  7th phase (31Jul2020 - 05Sep2020): finished 1870 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tBLR,  5th phase (14Jun2020 - 03Jul2020): finished 1919 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tALB,  3rd phase (01Aug2020 - 14Aug2020): finished  650 trials in 0 min 15 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tTUR, 12th phase (22Oct2020 - 03Nov2020): finished  244 trials in 0 min  5 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tPAN,  4th phase (24Jul2020 - 01Aug2020): finished  460 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tBRA,  5th phase (31Jul2020 - 10Aug2020): finished  998 trials in 0 min 25 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tHND,  8th phase (12Sep2020 - 19Sep2020): finished  659 trials in 0 min 15 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tMEX,  1st phase (29May2020 - 17Jun2020): finished  454 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tIRN,  6th phase (27Jul2020 - 17Aug2020): finished  451 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tBLR,  0th phase (09Mar2020 - 28Apr2020): finished 1908 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tTUR,  0th phase (24Mar2020 - 16Apr2020): finished 1940 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tTGO,  7th phase (03Sep2020 - 16Sep2020): finished 1934 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tLVA,  1st phase (11Apr2020 - 21Apr2020): finished 1933 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tBLR,  9th phase (03Oct2020 - 15Oct2020): finished 1914 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tBGD, 11th phase (12Oct2020 - 03Nov2020): finished  608 trials in 0 min 15 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tGIN,  9th phase (03Sep2020 - 17Sep2020): finished 1903 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tDOM,  1st phase (23May2020 - 15Jun2020): finished 1921 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tTUR, 11th phase (08Oct2020 - 21Oct2020): finished  241 trials in 0 min  5 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tMEX,  9th phase (24Sep2020 - 05Oct2020): finished 1920 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tBHR,  9th phase (16Sep2020 - 26Sep2020): finished 1912 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tTUR, 10th phase (21Sep2020 - 07Oct2020): finished  242 trials in 0 min  5 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tHND, 11th phase (09Oct2020 - 16Oct2020): finished  456 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tUSA,  5th phase (30Jul2020 - 11Aug2020): finished  455 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tIRQ,  9th phase (01Oct2020 - 10Oct2020): finished  244 trials in 0 min  5 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tGIN,  6th phase (24Jul2020 - 06Aug2020): finished 1939 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tIRN,  0th phase (26Feb2020 - 31Mar2020): finished 1919 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tBGD,  6th phase (31Jul2020 - 13Aug2020): finished 1413 trials in 0 min 40 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tBRA,  6th phase (11Aug2020 - 19Aug2020): finished 1923 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tGIN,  7th phase (07Aug2020 - 17Aug2020): finished  646 trials in 0 min 15 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tHND,  7th phase (31Aug2020 - 11Sep2020): finished 1923 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tBOL,  6th phase (01Aug2020 - 09Aug2020): finished  229 trials in 0 min  5 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tBOL,  9th phase (26Aug2020 - 03Sep2020): finished  241 trials in 0 min  5 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tPER,  5th phase (28Jul2020 - 07Aug2020): finished 1915 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tHND,  2nd phase (04Jul2020 - 17Jul2020): finished 1923 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tKWT,  7th phase (08Aug2020 - 21Aug2020): finished  241 trials in 0 min  5 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tGIN,  0th phase (03Apr2020 - 28Apr2020): finished 1905 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tALB,  8th phase (29Sep2020 - 07Oct2020): finished  452 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tBOL,  5th phase (23Jul2020 - 31Jul2020): finished  242 trials in 0 min  5 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tRUS,  3rd phase (31May2020 - 11Jun2020): finished 1934 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tRUS,  1st phase (08May2020 - 19May2020): finished 1926 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tUSA,  1st phase (06May2020 - 15Jun2020): finished 1900 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tIRN,  9th phase (30Sep2020 - 12Oct2020): finished  242 trials in 0 min  5 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tDOM,  2nd phase (16Jun2020 - 02Jul2020): finished 1912 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tBHR, 11th phase (11Oct2020 - 03Nov2020): finished  235 trials in 0 min  5 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tTUR,  5th phase (14Jun2020 - 01Jul2020): finished 1904 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tLVA,  8th phase (29Aug2020 - 18Sep2020): finished 2181 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tLVA,  4th phase (16May2020 - 29May2020): finished 1916 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tMEX,  0th phase (03Mar2020 - 28May2020): finished 1852 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tLVA,  9th phase (19Sep2020 - 29Sep2020): finished 1916 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tEGY,  4th phase (18Jun2020 - 01Jul2020): finished 1924 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tUSA,  2nd phase (16Jun2020 - 05Jul2020): finished 1903 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tFRA,  7th phase (03Sep2020 - 15Sep2020): finished  988 trials in 0 min 25 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tKWT,  2nd phase (28May2020 - 07Jun2020): finished 1899 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tRUS, 11th phase (08Oct2020 - 16Oct2020): finished  819 trials in 0 min 20 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tMEX,  7th phase (25Aug2020 - 07Sep2020): finished 1913 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tTGO, 11th phase (23Oct2020 - 03Nov2020): finished  453 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tBLR, 10th phase (16Oct2020 - 25Oct2020): finished  822 trials in 0 min 20 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tLVA,  5th phase (30May2020 - 07Jul2020): finished 1922 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tDOM,  7th phase (12Aug2020 - 20Aug2020): finished  456 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tFRA,  2nd phase (12Apr2020 - 25Apr2020): finished 1917 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tRUS,  0th phase (12Feb2020 - 07May2020): finished 1941 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tHND,  5th phase (06Aug2020 - 20Aug2020): finished  427 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tRUS,  4th phase (12Jun2020 - 26Jun2020): finished 1909 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tPER,  8th phase (29Aug2020 - 09Sep2020): finished 1942 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tNGA,  2nd phase (08Jun2020 - 18Jun2020): finished 1916 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tGIN,  8th phase (18Aug2020 - 02Sep2020): finished 1929 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tALB,  7th phase (18Sep2020 - 28Sep2020): finished  453 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tBRA,  0th phase (16Mar2020 - 28May2020): finished 1881 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tBGD,  0th phase (16Mar2020 - 04Jun2020): finished 1913 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tPAN,  0th phase (24Mar2020 - 30May2020): finished 1890 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tIRQ,  8th phase (22Sep2020 - 30Sep2020): finished  245 trials in 0 min  5 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tIRQ,  2nd phase (15Jul2020 - 29Jul2020): finished 1958 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tRUS,  2nd phase (20May2020 - 30May2020): finished 1992 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tDOM,  3rd phase (03Jul2020 - 14Jul2020): finished 2012 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tBGD, 10th phase (23Sep2020 - 11Oct2020): finished  464 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tIRQ,  6th phase (03Sep2020 - 11Sep2020): finished  251 trials in 0 min  5 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tKWT,  1st phase (14May2020 - 27May2020): finished 2023 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tPER,  1st phase (10May2020 - 28May2020): finished 1989 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tBRA,  2nd phase (22Jun2020 - 07Jul2020): finished 2006 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tPER,  3rd phase (19Jun2020 - 10Jul2020): finished 1984 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tFRA,  5th phase (16Jul2020 - 16Aug2020): finished 1997 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tGIN, 10th phase (18Sep2020 - 07Oct2020): finished  468 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tIRQ,  5th phase (24Aug2020 - 02Sep2020): finished  256 trials in 0 min  5 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tARE,  8th phase (23Sep2020 - 01Oct2020): finished  255 trials in 0 min  5 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tTUR,  2nd phase (27Apr2020 - 06May2020): finished  253 trials in 0 min  5 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tBLR,  2nd phase (09May2020 - 16May2020): finished 2021 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tBGD,  8th phase (26Aug2020 - 07Sep2020): finished  463 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tFRA,  3rd phase (26Apr2020 - 27May2020): finished 2019 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "Completed optimization. Total: 49 min 36 sec\n"
       ]
      }
     ],
     "prompt_number": 11
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "# Show summary\n",
      "analyser.summary(countries=countries_show)"
     ],
     "language": "python",
     "metadata": {},
     "outputs": [
      {
       "html": [
        "<div>\n",
        "<style scoped>\n",
        "    .dataframe tbody tr th:only-of-type {\n",
        "        vertical-align: middle;\n",
        "    }\n",
        "\n",
        "    .dataframe tbody tr th {\n",
        "        vertical-align: top;\n",
        "    }\n",
        "\n",
        "    .dataframe thead th {\n",
        "        text-align: right;\n",
        "    }\n",
        "</style>\n",
        "<table border=\"1\" class=\"dataframe\">\n",
        "  <thead>\n",
        "    <tr style=\"text-align: right;\">\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th>Type</th>\n",
        "      <th>Start</th>\n",
        "      <th>End</th>\n",
        "      <th>Population</th>\n",
        "      <th>ODE</th>\n",
        "      <th>Rt</th>\n",
        "      <th>theta</th>\n",
        "      <th>kappa</th>\n",
        "      <th>rho</th>\n",
        "      <th>sigma</th>\n",
        "      <th>tau</th>\n",
        "      <th>1/beta [day]</th>\n",
        "      <th>1/alpha2 [day]</th>\n",
        "      <th>alpha1 [-]</th>\n",
        "      <th>1/gamma [day]</th>\n",
        "      <th>RMSLE</th>\n",
        "      <th>Trials</th>\n",
        "      <th>Runtime</th>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>Country</th>\n",
        "      <th>Phase</th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "    </tr>\n",
        "  </thead>\n",
        "  <tbody>\n",
        "    <tr>\n",
        "      <th rowspan=\"14\" valign=\"top\">Russia</th>\n",
        "      <th>0th</th>\n",
        "      <td>Past</td>\n",
        "      <td>12Feb2020</td>\n",
        "      <td>07May2020</td>\n",
        "      <td>330457362</td>\n",
        "      <td>SIR-F</td>\n",
        "      <td>0.02</td>\n",
        "      <td>0.602763</td>\n",
        "      <td>0.544883</td>\n",
        "      <td>0.033660</td>\n",
        "      <td>0.002318</td>\n",
        "      <td>360</td>\n",
        "      <td>7</td>\n",
        "      <td>0</td>\n",
        "      <td>0.603</td>\n",
        "      <td>107</td>\n",
        "      <td>19.313273</td>\n",
        "      <td>1941</td>\n",
        "      <td>1 min  0 sec</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>1st</th>\n",
        "      <td>Past</td>\n",
        "      <td>08May2020</td>\n",
        "      <td>19May2020</td>\n",
        "      <td>330457362</td>\n",
        "      <td>SIR-F</td>\n",
        "      <td>2.43</td>\n",
        "      <td>0.000905</td>\n",
        "      <td>0.000108</td>\n",
        "      <td>0.011584</td>\n",
        "      <td>0.004649</td>\n",
        "      <td>360</td>\n",
        "      <td>21</td>\n",
        "      <td>2321</td>\n",
        "      <td>0.001</td>\n",
        "      <td>53</td>\n",
        "      <td>0.103062</td>\n",
        "      <td>1926</td>\n",
        "      <td>1 min  0 sec</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>2nd</th>\n",
        "      <td>Past</td>\n",
        "      <td>20May2020</td>\n",
        "      <td>30May2020</td>\n",
        "      <td>330457362</td>\n",
        "      <td>SIR-F</td>\n",
        "      <td>1.16</td>\n",
        "      <td>0.016609</td>\n",
        "      <td>0.000010</td>\n",
        "      <td>0.006347</td>\n",
        "      <td>0.005390</td>\n",
        "      <td>360</td>\n",
        "      <td>39</td>\n",
        "      <td>25338</td>\n",
        "      <td>0.017</td>\n",
        "      <td>46</td>\n",
        "      <td>0.103277</td>\n",
        "      <td>1992</td>\n",
        "      <td>1 min  0 sec</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>3rd</th>\n",
        "      <td>Past</td>\n",
        "      <td>31May2020</td>\n",
        "      <td>11Jun2020</td>\n",
        "      <td>330457362</td>\n",
        "      <td>SIR-F</td>\n",
        "      <td>1.00</td>\n",
        "      <td>0.018740</td>\n",
        "      <td>0.000015</td>\n",
        "      <td>0.004728</td>\n",
        "      <td>0.004611</td>\n",
        "      <td>360</td>\n",
        "      <td>52</td>\n",
        "      <td>16202</td>\n",
        "      <td>0.019</td>\n",
        "      <td>54</td>\n",
        "      <td>0.097882</td>\n",
        "      <td>1934</td>\n",
        "      <td>1 min  0 sec</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>4th</th>\n",
        "      <td>Past</td>\n",
        "      <td>12Jun2020</td>\n",
        "      <td>26Jun2020</td>\n",
        "      <td>330457362</td>\n",
        "      <td>SIR-F</td>\n",
        "      <td>0.95</td>\n",
        "      <td>0.001066</td>\n",
        "      <td>0.000069</td>\n",
        "      <td>0.003507</td>\n",
        "      <td>0.003615</td>\n",
        "      <td>360</td>\n",
        "      <td>71</td>\n",
        "      <td>3612</td>\n",
        "      <td>0.001</td>\n",
        "      <td>69</td>\n",
        "      <td>0.106753</td>\n",
        "      <td>1909</td>\n",
        "      <td>1 min  0 sec</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>5th</th>\n",
        "      <td>Past</td>\n",
        "      <td>27Jun2020</td>\n",
        "      <td>10Jul2020</td>\n",
        "      <td>330457362</td>\n",
        "      <td>SIR-F</td>\n",
        "      <td>0.96</td>\n",
        "      <td>0.000236</td>\n",
        "      <td>0.000057</td>\n",
        "      <td>0.002486</td>\n",
        "      <td>0.002521</td>\n",
        "      <td>360</td>\n",
        "      <td>100</td>\n",
        "      <td>4387</td>\n",
        "      <td>0.000</td>\n",
        "      <td>99</td>\n",
        "      <td>0.066580</td>\n",
        "      <td>1714</td>\n",
        "      <td>1 min  0 sec</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>6th</th>\n",
        "      <td>Past</td>\n",
        "      <td>11Jul2020</td>\n",
        "      <td>27Jul2020</td>\n",
        "      <td>330457362</td>\n",
        "      <td>SIR-F</td>\n",
        "      <td>1.05</td>\n",
        "      <td>0.021577</td>\n",
        "      <td>0.000010</td>\n",
        "      <td>0.001919</td>\n",
        "      <td>0.001773</td>\n",
        "      <td>360</td>\n",
        "      <td>130</td>\n",
        "      <td>25090</td>\n",
        "      <td>0.022</td>\n",
        "      <td>140</td>\n",
        "      <td>0.070602</td>\n",
        "      <td>1396</td>\n",
        "      <td>1 min  0 sec</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>7th</th>\n",
        "      <td>Past</td>\n",
        "      <td>28Jul2020</td>\n",
        "      <td>14Aug2020</td>\n",
        "      <td>330457362</td>\n",
        "      <td>SIR-F</td>\n",
        "      <td>0.73</td>\n",
        "      <td>0.018626</td>\n",
        "      <td>0.000015</td>\n",
        "      <td>0.001562</td>\n",
        "      <td>0.002098</td>\n",
        "      <td>360</td>\n",
        "      <td>160</td>\n",
        "      <td>16203</td>\n",
        "      <td>0.019</td>\n",
        "      <td>119</td>\n",
        "      <td>0.080021</td>\n",
        "      <td>1909</td>\n",
        "      <td>1 min  0 sec</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>8th</th>\n",
        "      <td>Past</td>\n",
        "      <td>15Aug2020</td>\n",
        "      <td>04Sep2020</td>\n",
        "      <td>330457362</td>\n",
        "      <td>SIR-F</td>\n",
        "      <td>0.92</td>\n",
        "      <td>0.015810</td>\n",
        "      <td>0.000006</td>\n",
        "      <td>0.001238</td>\n",
        "      <td>0.001315</td>\n",
        "      <td>360</td>\n",
        "      <td>201</td>\n",
        "      <td>40976</td>\n",
        "      <td>0.016</td>\n",
        "      <td>190</td>\n",
        "      <td>0.064156</td>\n",
        "      <td>1949</td>\n",
        "      <td>1 min  0 sec</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>9th</th>\n",
        "      <td>Past</td>\n",
        "      <td>05Sep2020</td>\n",
        "      <td>24Sep2020</td>\n",
        "      <td>330457362</td>\n",
        "      <td>SIR-F</td>\n",
        "      <td>1.08</td>\n",
        "      <td>0.002973</td>\n",
        "      <td>0.000024</td>\n",
        "      <td>0.001297</td>\n",
        "      <td>0.001178</td>\n",
        "      <td>360</td>\n",
        "      <td>192</td>\n",
        "      <td>10518</td>\n",
        "      <td>0.003</td>\n",
        "      <td>212</td>\n",
        "      <td>0.052758</td>\n",
        "      <td>1940</td>\n",
        "      <td>1 min  0 sec</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>10th</th>\n",
        "      <td>Past</td>\n",
        "      <td>25Sep2020</td>\n",
        "      <td>07Oct2020</td>\n",
        "      <td>330457362</td>\n",
        "      <td>SIR-F</td>\n",
        "      <td>1.98</td>\n",
        "      <td>0.002496</td>\n",
        "      <td>0.000024</td>\n",
        "      <td>0.002017</td>\n",
        "      <td>0.000990</td>\n",
        "      <td>360</td>\n",
        "      <td>123</td>\n",
        "      <td>10518</td>\n",
        "      <td>0.002</td>\n",
        "      <td>252</td>\n",
        "      <td>0.020167</td>\n",
        "      <td>1454</td>\n",
        "      <td>1 min  0 sec</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>11th</th>\n",
        "      <td>Past</td>\n",
        "      <td>08Oct2020</td>\n",
        "      <td>16Oct2020</td>\n",
        "      <td>330457362</td>\n",
        "      <td>SIR-F</td>\n",
        "      <td>1.83</td>\n",
        "      <td>0.001350</td>\n",
        "      <td>0.000025</td>\n",
        "      <td>0.002594</td>\n",
        "      <td>0.001387</td>\n",
        "      <td>360</td>\n",
        "      <td>96</td>\n",
        "      <td>10000</td>\n",
        "      <td>0.001</td>\n",
        "      <td>180</td>\n",
        "      <td>0.013334</td>\n",
        "      <td>819</td>\n",
        "      <td>0 min 20 sec</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>12th</th>\n",
        "      <td>Past</td>\n",
        "      <td>17Oct2020</td>\n",
        "      <td>24Oct2020</td>\n",
        "      <td>330457362</td>\n",
        "      <td>SIR-F</td>\n",
        "      <td>1.52</td>\n",
        "      <td>0.001782</td>\n",
        "      <td>0.000036</td>\n",
        "      <td>0.003023</td>\n",
        "      <td>0.001955</td>\n",
        "      <td>360</td>\n",
        "      <td>82</td>\n",
        "      <td>6891</td>\n",
        "      <td>0.002</td>\n",
        "      <td>127</td>\n",
        "      <td>0.011863</td>\n",
        "      <td>1941</td>\n",
        "      <td>1 min  0 sec</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>13th</th>\n",
        "      <td>Past</td>\n",
        "      <td>25Oct2020</td>\n",
        "      <td>03Nov2020</td>\n",
        "      <td>330457362</td>\n",
        "      <td>SIR-F</td>\n",
        "      <td>1.41</td>\n",
        "      <td>0.018482</td>\n",
        "      <td>0.000002</td>\n",
        "      <td>0.003099</td>\n",
        "      <td>0.002160</td>\n",
        "      <td>360</td>\n",
        "      <td>80</td>\n",
        "      <td>103628</td>\n",
        "      <td>0.018</td>\n",
        "      <td>115</td>\n",
        "      <td>0.014831</td>\n",
        "      <td>1930</td>\n",
        "      <td>1 min  0 sec</td>\n",
        "    </tr>\n",
        "  </tbody>\n",
        "</table>\n",
        "</div>"
       ],
       "output_type": "pyout",
       "prompt_number": 12,
       "text": [
        "               Type      Start        End  Population    ODE    Rt     theta  \\\n",
        "Country Phase                                                                  \n",
        "Russia  0th    Past  12Feb2020  07May2020   330457362  SIR-F  0.02  0.602763   \n",
        "        1st    Past  08May2020  19May2020   330457362  SIR-F  2.43  0.000905   \n",
        "        2nd    Past  20May2020  30May2020   330457362  SIR-F  1.16  0.016609   \n",
        "        3rd    Past  31May2020  11Jun2020   330457362  SIR-F  1.00  0.018740   \n",
        "        4th    Past  12Jun2020  26Jun2020   330457362  SIR-F  0.95  0.001066   \n",
        "        5th    Past  27Jun2020  10Jul2020   330457362  SIR-F  0.96  0.000236   \n",
        "        6th    Past  11Jul2020  27Jul2020   330457362  SIR-F  1.05  0.021577   \n",
        "        7th    Past  28Jul2020  14Aug2020   330457362  SIR-F  0.73  0.018626   \n",
        "        8th    Past  15Aug2020  04Sep2020   330457362  SIR-F  0.92  0.015810   \n",
        "        9th    Past  05Sep2020  24Sep2020   330457362  SIR-F  1.08  0.002973   \n",
        "        10th   Past  25Sep2020  07Oct2020   330457362  SIR-F  1.98  0.002496   \n",
        "        11th   Past  08Oct2020  16Oct2020   330457362  SIR-F  1.83  0.001350   \n",
        "        12th   Past  17Oct2020  24Oct2020   330457362  SIR-F  1.52  0.001782   \n",
        "        13th   Past  25Oct2020  03Nov2020   330457362  SIR-F  1.41  0.018482   \n",
        "\n",
        "                  kappa       rho     sigma  tau  1/beta [day]  \\\n",
        "Country Phase                                                    \n",
        "Russia  0th    0.544883  0.033660  0.002318  360             7   \n",
        "        1st    0.000108  0.011584  0.004649  360            21   \n",
        "        2nd    0.000010  0.006347  0.005390  360            39   \n",
        "        3rd    0.000015  0.004728  0.004611  360            52   \n",
        "        4th    0.000069  0.003507  0.003615  360            71   \n",
        "        5th    0.000057  0.002486  0.002521  360           100   \n",
        "        6th    0.000010  0.001919  0.001773  360           130   \n",
        "        7th    0.000015  0.001562  0.002098  360           160   \n",
        "        8th    0.000006  0.001238  0.001315  360           201   \n",
        "        9th    0.000024  0.001297  0.001178  360           192   \n",
        "        10th   0.000024  0.002017  0.000990  360           123   \n",
        "        11th   0.000025  0.002594  0.001387  360            96   \n",
        "        12th   0.000036  0.003023  0.001955  360            82   \n",
        "        13th   0.000002  0.003099  0.002160  360            80   \n",
        "\n",
        "               1/alpha2 [day]  alpha1 [-]  1/gamma [day]      RMSLE  Trials  \\\n",
        "Country Phase                                                                 \n",
        "Russia  0th                 0       0.603            107  19.313273    1941   \n",
        "        1st              2321       0.001             53   0.103062    1926   \n",
        "        2nd             25338       0.017             46   0.103277    1992   \n",
        "        3rd             16202       0.019             54   0.097882    1934   \n",
        "        4th              3612       0.001             69   0.106753    1909   \n",
        "        5th              4387       0.000             99   0.066580    1714   \n",
        "        6th             25090       0.022            140   0.070602    1396   \n",
        "        7th             16203       0.019            119   0.080021    1909   \n",
        "        8th             40976       0.016            190   0.064156    1949   \n",
        "        9th             10518       0.003            212   0.052758    1940   \n",
        "        10th            10518       0.002            252   0.020167    1454   \n",
        "        11th            10000       0.001            180   0.013334     819   \n",
        "        12th             6891       0.002            127   0.011863    1941   \n",
        "        13th           103628       0.018            115   0.014831    1930   \n",
        "\n",
        "                    Runtime  \n",
        "Country Phase                \n",
        "Russia  0th    1 min  0 sec  \n",
        "        1st    1 min  0 sec  \n",
        "        2nd    1 min  0 sec  \n",
        "        3rd    1 min  0 sec  \n",
        "        4th    1 min  0 sec  \n",
        "        5th    1 min  0 sec  \n",
        "        6th    1 min  0 sec  \n",
        "        7th    1 min  0 sec  \n",
        "        8th    1 min  0 sec  \n",
        "        9th    1 min  0 sec  \n",
        "        10th   1 min  0 sec  \n",
        "        11th   0 min 20 sec  \n",
        "        12th   1 min  0 sec  \n",
        "        13th   1 min  0 sec  "
       ]
      }
     ],
     "prompt_number": 12
    },
    {
     "cell_type": "markdown",
     "metadata": {},
     "source": [
      "## Compare the history of parameters\n",
      "Here, compare the history of parameter values if countries."
     ]
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "# All parameter/day parameter/Rt/OxCGRT\n",
      "analyser.track().head()"
     ],
     "language": "python",
     "metadata": {},
     "outputs": [
      {
       "html": [
        "<div>\n",
        "<style scoped>\n",
        "    .dataframe tbody tr th:only-of-type {\n",
        "        vertical-align: middle;\n",
        "    }\n",
        "\n",
        "    .dataframe tbody tr th {\n",
        "        vertical-align: top;\n",
        "    }\n",
        "\n",
        "    .dataframe thead th {\n",
        "        text-align: right;\n",
        "    }\n",
        "</style>\n",
        "<table border=\"1\" class=\"dataframe\">\n",
        "  <thead>\n",
        "    <tr style=\"text-align: right;\">\n",
        "      <th></th>\n",
        "      <th>Date</th>\n",
        "      <th>Country</th>\n",
        "      <th>theta</th>\n",
        "      <th>kappa</th>\n",
        "      <th>rho</th>\n",
        "      <th>sigma</th>\n",
        "      <th>alpha1 [-]</th>\n",
        "      <th>1/alpha2 [day]</th>\n",
        "      <th>1/beta [day]</th>\n",
        "      <th>1/gamma [day]</th>\n",
        "      <th>...</th>\n",
        "      <th>Cancel_events</th>\n",
        "      <th>Gatherings_restrictions</th>\n",
        "      <th>Transport_closing</th>\n",
        "      <th>Stay_home_restrictions</th>\n",
        "      <th>Internal_movement_restrictions</th>\n",
        "      <th>International_movement_restrictions</th>\n",
        "      <th>Information_campaigns</th>\n",
        "      <th>Testing_policy</th>\n",
        "      <th>Contact_tracing</th>\n",
        "      <th>Stringency_index</th>\n",
        "    </tr>\n",
        "  </thead>\n",
        "  <tbody>\n",
        "    <tr>\n",
        "      <th>0</th>\n",
        "      <td>2020-03-24</td>\n",
        "      <td>Panama</td>\n",
        "      <td>0.0550853</td>\n",
        "      <td>0.000490929</td>\n",
        "      <td>0.0119081</td>\n",
        "      <td>0.000522719</td>\n",
        "      <td>0.055</td>\n",
        "      <td>509</td>\n",
        "      <td>20</td>\n",
        "      <td>478</td>\n",
        "      <td>...</td>\n",
        "      <td>2</td>\n",
        "      <td>3</td>\n",
        "      <td>0</td>\n",
        "      <td>1</td>\n",
        "      <td>2</td>\n",
        "      <td>3</td>\n",
        "      <td>2</td>\n",
        "      <td>2</td>\n",
        "      <td>1</td>\n",
        "      <td>75.93</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>1</th>\n",
        "      <td>2020-03-25</td>\n",
        "      <td>Panama</td>\n",
        "      <td>0.0550853</td>\n",
        "      <td>0.000490929</td>\n",
        "      <td>0.0119081</td>\n",
        "      <td>0.000522719</td>\n",
        "      <td>0.055</td>\n",
        "      <td>509</td>\n",
        "      <td>20</td>\n",
        "      <td>478</td>\n",
        "      <td>...</td>\n",
        "      <td>2</td>\n",
        "      <td>3</td>\n",
        "      <td>0</td>\n",
        "      <td>1</td>\n",
        "      <td>2</td>\n",
        "      <td>3</td>\n",
        "      <td>2</td>\n",
        "      <td>2</td>\n",
        "      <td>1</td>\n",
        "      <td>75.93</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>2</th>\n",
        "      <td>2020-03-26</td>\n",
        "      <td>Panama</td>\n",
        "      <td>0.0550853</td>\n",
        "      <td>0.000490929</td>\n",
        "      <td>0.0119081</td>\n",
        "      <td>0.000522719</td>\n",
        "      <td>0.055</td>\n",
        "      <td>509</td>\n",
        "      <td>20</td>\n",
        "      <td>478</td>\n",
        "      <td>...</td>\n",
        "      <td>2</td>\n",
        "      <td>3</td>\n",
        "      <td>0</td>\n",
        "      <td>1</td>\n",
        "      <td>2</td>\n",
        "      <td>3</td>\n",
        "      <td>2</td>\n",
        "      <td>2</td>\n",
        "      <td>1</td>\n",
        "      <td>75.93</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>3</th>\n",
        "      <td>2020-03-27</td>\n",
        "      <td>Panama</td>\n",
        "      <td>0.0550853</td>\n",
        "      <td>0.000490929</td>\n",
        "      <td>0.0119081</td>\n",
        "      <td>0.000522719</td>\n",
        "      <td>0.055</td>\n",
        "      <td>509</td>\n",
        "      <td>20</td>\n",
        "      <td>478</td>\n",
        "      <td>...</td>\n",
        "      <td>2</td>\n",
        "      <td>3</td>\n",
        "      <td>0</td>\n",
        "      <td>1</td>\n",
        "      <td>2</td>\n",
        "      <td>3</td>\n",
        "      <td>2</td>\n",
        "      <td>2</td>\n",
        "      <td>1</td>\n",
        "      <td>75.93</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>4</th>\n",
        "      <td>2020-03-28</td>\n",
        "      <td>Panama</td>\n",
        "      <td>0.0550853</td>\n",
        "      <td>0.000490929</td>\n",
        "      <td>0.0119081</td>\n",
        "      <td>0.000522719</td>\n",
        "      <td>0.055</td>\n",
        "      <td>509</td>\n",
        "      <td>20</td>\n",
        "      <td>478</td>\n",
        "      <td>...</td>\n",
        "      <td>2</td>\n",
        "      <td>3</td>\n",
        "      <td>0</td>\n",
        "      <td>1</td>\n",
        "      <td>2</td>\n",
        "      <td>3</td>\n",
        "      <td>2</td>\n",
        "      <td>2</td>\n",
        "      <td>1</td>\n",
        "      <td>75.93</td>\n",
        "    </tr>\n",
        "  </tbody>\n",
        "</table>\n",
        "<p>5 rows \u00d7 23 columns</p>\n",
        "</div>"
       ],
       "output_type": "pyout",
       "prompt_number": 13,
       "text": [
        "        Date Country      theta        kappa        rho        sigma  \\\n",
        "0 2020-03-24  Panama  0.0550853  0.000490929  0.0119081  0.000522719   \n",
        "1 2020-03-25  Panama  0.0550853  0.000490929  0.0119081  0.000522719   \n",
        "2 2020-03-26  Panama  0.0550853  0.000490929  0.0119081  0.000522719   \n",
        "3 2020-03-27  Panama  0.0550853  0.000490929  0.0119081  0.000522719   \n",
        "4 2020-03-28  Panama  0.0550853  0.000490929  0.0119081  0.000522719   \n",
        "\n",
        "  alpha1 [-] 1/alpha2 [day] 1/beta [day] 1/gamma [day]  ... Cancel_events  \\\n",
        "0      0.055            509           20           478  ...             2   \n",
        "1      0.055            509           20           478  ...             2   \n",
        "2      0.055            509           20           478  ...             2   \n",
        "3      0.055            509           20           478  ...             2   \n",
        "4      0.055            509           20           478  ...             2   \n",
        "\n",
        "   Gatherings_restrictions  Transport_closing  Stay_home_restrictions  \\\n",
        "0                        3                  0                       1   \n",
        "1                        3                  0                       1   \n",
        "2                        3                  0                       1   \n",
        "3                        3                  0                       1   \n",
        "4                        3                  0                       1   \n",
        "\n",
        "   Internal_movement_restrictions  International_movement_restrictions  \\\n",
        "0                               2                                    3   \n",
        "1                               2                                    3   \n",
        "2                               2                                    3   \n",
        "3                               2                                    3   \n",
        "4                               2                                    3   \n",
        "\n",
        "   Information_campaigns  Testing_policy  Contact_tracing  Stringency_index  \n",
        "0                      2               2                1             75.93  \n",
        "1                      2               2                1             75.93  \n",
        "2                      2               2                1             75.93  \n",
        "3                      2               2                1             75.93  \n",
        "4                      2               2                1             75.93  \n",
        "\n",
        "[5 rows x 23 columns]"
       ]
      }
     ],
     "prompt_number": 13
    },
    {
     "cell_type": "heading",
     "level": 3,
     "metadata": {},
     "source": [
      "$Rt$: Reprodcution number $\\mathrm{[-]}$"
     ]
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "analyser.history(\"Rt\", roll_window=None).tail()"
     ],
     "language": "python",
     "metadata": {},
     "outputs": [
      {
       "output_type": "display_data",
       "png": "\n",
       "text": [
        "<Figure size 648x432 with 1 Axes>"
       ]
      },
      {
       "html": [
        "<div>\n",
        "<style scoped>\n",
        "    .dataframe tbody tr th:only-of-type {\n",
        "        vertical-align: middle;\n",
        "    }\n",
        "\n",
        "    .dataframe tbody tr th {\n",
        "        vertical-align: top;\n",
        "    }\n",
        "\n",
        "    .dataframe thead th {\n",
        "        text-align: right;\n",
        "    }\n",
        "</style>\n",
        "<table border=\"1\" class=\"dataframe\">\n",
        "  <thead>\n",
        "    <tr style=\"text-align: right;\">\n",
        "      <th>Country</th>\n",
        "      <th>Albania</th>\n",
        "      <th>Bahrain</th>\n",
        "      <th>Bangladesh</th>\n",
        "      <th>Belarus</th>\n",
        "      <th>Bolivia</th>\n",
        "      <th>Brazil</th>\n",
        "      <th>Dominican Republic</th>\n",
        "      <th>Egypt</th>\n",
        "      <th>France</th>\n",
        "      <th>Guinea</th>\n",
        "      <th>...</th>\n",
        "      <th>Latvia</th>\n",
        "      <th>Mexico</th>\n",
        "      <th>Nigeria</th>\n",
        "      <th>Panama</th>\n",
        "      <th>Peru</th>\n",
        "      <th>Russia</th>\n",
        "      <th>Togo</th>\n",
        "      <th>Turkey</th>\n",
        "      <th>United Arab Emirates</th>\n",
        "      <th>United States</th>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>Date</th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "    </tr>\n",
        "  </thead>\n",
        "  <tbody>\n",
        "    <tr>\n",
        "      <th>2020-10-30</th>\n",
        "      <td>0.84</td>\n",
        "      <td>0.86</td>\n",
        "      <td>0.96</td>\n",
        "      <td>1.67</td>\n",
        "      <td>0.38</td>\n",
        "      <td>6.68</td>\n",
        "      <td>1.01</td>\n",
        "      <td>1.56</td>\n",
        "      <td>35.91</td>\n",
        "      <td>12.92</td>\n",
        "      <td>...</td>\n",
        "      <td>305.54</td>\n",
        "      <td>1.19</td>\n",
        "      <td>0.76</td>\n",
        "      <td>0.92</td>\n",
        "      <td>0.74</td>\n",
        "      <td>1.41</td>\n",
        "      <td>2.1</td>\n",
        "      <td>1.38</td>\n",
        "      <td>0.84</td>\n",
        "      <td>2.59</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>2020-10-31</th>\n",
        "      <td>0.84</td>\n",
        "      <td>0.86</td>\n",
        "      <td>0.96</td>\n",
        "      <td>1.67</td>\n",
        "      <td>0.38</td>\n",
        "      <td>6.68</td>\n",
        "      <td>1.01</td>\n",
        "      <td>1.56</td>\n",
        "      <td>35.91</td>\n",
        "      <td>12.92</td>\n",
        "      <td>...</td>\n",
        "      <td>305.54</td>\n",
        "      <td>1.19</td>\n",
        "      <td>0.76</td>\n",
        "      <td>0.92</td>\n",
        "      <td>0.74</td>\n",
        "      <td>1.41</td>\n",
        "      <td>2.1</td>\n",
        "      <td>1.38</td>\n",
        "      <td>0.84</td>\n",
        "      <td>2.59</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>2020-11-01</th>\n",
        "      <td>0.84</td>\n",
        "      <td>0.86</td>\n",
        "      <td>0.96</td>\n",
        "      <td>1.67</td>\n",
        "      <td>0.38</td>\n",
        "      <td>6.68</td>\n",
        "      <td>1.01</td>\n",
        "      <td>1.56</td>\n",
        "      <td>35.91</td>\n",
        "      <td>12.92</td>\n",
        "      <td>...</td>\n",
        "      <td>305.54</td>\n",
        "      <td>1.19</td>\n",
        "      <td>0.76</td>\n",
        "      <td>0.92</td>\n",
        "      <td>0.74</td>\n",
        "      <td>1.41</td>\n",
        "      <td>2.1</td>\n",
        "      <td>1.38</td>\n",
        "      <td>0.84</td>\n",
        "      <td>2.59</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>2020-11-02</th>\n",
        "      <td>0.84</td>\n",
        "      <td>0.86</td>\n",
        "      <td>0.96</td>\n",
        "      <td>1.67</td>\n",
        "      <td>0.38</td>\n",
        "      <td>6.68</td>\n",
        "      <td>1.01</td>\n",
        "      <td>1.56</td>\n",
        "      <td>35.91</td>\n",
        "      <td>12.92</td>\n",
        "      <td>...</td>\n",
        "      <td>305.54</td>\n",
        "      <td>1.19</td>\n",
        "      <td>0.76</td>\n",
        "      <td>0.92</td>\n",
        "      <td>0.74</td>\n",
        "      <td>1.41</td>\n",
        "      <td>2.1</td>\n",
        "      <td>1.38</td>\n",
        "      <td>0.84</td>\n",
        "      <td>2.59</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>2020-11-03</th>\n",
        "      <td>0.84</td>\n",
        "      <td>0.86</td>\n",
        "      <td>0.96</td>\n",
        "      <td>1.67</td>\n",
        "      <td>0.38</td>\n",
        "      <td>6.68</td>\n",
        "      <td>1.01</td>\n",
        "      <td>1.56</td>\n",
        "      <td>35.91</td>\n",
        "      <td>12.92</td>\n",
        "      <td>...</td>\n",
        "      <td>305.54</td>\n",
        "      <td>1.19</td>\n",
        "      <td>0.76</td>\n",
        "      <td>0.92</td>\n",
        "      <td>0.74</td>\n",
        "      <td>1.41</td>\n",
        "      <td>2.1</td>\n",
        "      <td>1.38</td>\n",
        "      <td>0.84</td>\n",
        "      <td>2.59</td>\n",
        "    </tr>\n",
        "  </tbody>\n",
        "</table>\n",
        "<p>5 rows \u00d7 24 columns</p>\n",
        "</div>"
       ],
       "output_type": "pyout",
       "prompt_number": 14,
       "text": [
        "Country     Albania  Bahrain  Bangladesh  Belarus  Bolivia  Brazil  \\\n",
        "Date                                                                 \n",
        "2020-10-30     0.84     0.86        0.96     1.67     0.38    6.68   \n",
        "2020-10-31     0.84     0.86        0.96     1.67     0.38    6.68   \n",
        "2020-11-01     0.84     0.86        0.96     1.67     0.38    6.68   \n",
        "2020-11-02     0.84     0.86        0.96     1.67     0.38    6.68   \n",
        "2020-11-03     0.84     0.86        0.96     1.67     0.38    6.68   \n",
        "\n",
        "Country     Dominican Republic  Egypt  France  Guinea  ...  Latvia  Mexico  \\\n",
        "Date                                                   ...                   \n",
        "2020-10-30                1.01   1.56   35.91   12.92  ...  305.54    1.19   \n",
        "2020-10-31                1.01   1.56   35.91   12.92  ...  305.54    1.19   \n",
        "2020-11-01                1.01   1.56   35.91   12.92  ...  305.54    1.19   \n",
        "2020-11-02                1.01   1.56   35.91   12.92  ...  305.54    1.19   \n",
        "2020-11-03                1.01   1.56   35.91   12.92  ...  305.54    1.19   \n",
        "\n",
        "Country     Nigeria  Panama  Peru  Russia  Togo  Turkey  United Arab Emirates  \\\n",
        "Date                                                                            \n",
        "2020-10-30     0.76    0.92  0.74    1.41   2.1    1.38                  0.84   \n",
        "2020-10-31     0.76    0.92  0.74    1.41   2.1    1.38                  0.84   \n",
        "2020-11-01     0.76    0.92  0.74    1.41   2.1    1.38                  0.84   \n",
        "2020-11-02     0.76    0.92  0.74    1.41   2.1    1.38                  0.84   \n",
        "2020-11-03     0.76    0.92  0.74    1.41   2.1    1.38                  0.84   \n",
        "\n",
        "Country     United States  \n",
        "Date                       \n",
        "2020-10-30           2.59  \n",
        "2020-10-31           2.59  \n",
        "2020-11-01           2.59  \n",
        "2020-11-02           2.59  \n",
        "2020-11-03           2.59  \n",
        "\n",
        "[5 rows x 24 columns]"
       ]
      }
     ],
     "prompt_number": 14
    },
    {
     "cell_type": "heading",
     "level": 3,
     "metadata": {},
     "source": [
      "$\\rho$: Effective contact rate $\\mathrm{[-]}$"
     ]
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "analyser.history(\"rho\", roll_window=None).tail()"
     ],
     "language": "python",
     "metadata": {},
     "outputs": [
      {
       "output_type": "display_data",
       "png": "\n",
       "text": [
        "<Figure size 648x432 with 1 Axes>"
       ]
      },
      {
       "html": [
        "<div>\n",
        "<style scoped>\n",
        "    .dataframe tbody tr th:only-of-type {\n",
        "        vertical-align: middle;\n",
        "    }\n",
        "\n",
        "    .dataframe tbody tr th {\n",
        "        vertical-align: top;\n",
        "    }\n",
        "\n",
        "    .dataframe thead th {\n",
        "        text-align: right;\n",
        "    }\n",
        "</style>\n",
        "<table border=\"1\" class=\"dataframe\">\n",
        "  <thead>\n",
        "    <tr style=\"text-align: right;\">\n",
        "      <th>Country</th>\n",
        "      <th>Albania</th>\n",
        "      <th>Bahrain</th>\n",
        "      <th>Bangladesh</th>\n",
        "      <th>Belarus</th>\n",
        "      <th>Bolivia</th>\n",
        "      <th>Brazil</th>\n",
        "      <th>Dominican Republic</th>\n",
        "      <th>Egypt</th>\n",
        "      <th>France</th>\n",
        "      <th>Guinea</th>\n",
        "      <th>...</th>\n",
        "      <th>Latvia</th>\n",
        "      <th>Mexico</th>\n",
        "      <th>Nigeria</th>\n",
        "      <th>Panama</th>\n",
        "      <th>Peru</th>\n",
        "      <th>Russia</th>\n",
        "      <th>Togo</th>\n",
        "      <th>Turkey</th>\n",
        "      <th>United Arab Emirates</th>\n",
        "      <th>United States</th>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>Date</th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "    </tr>\n",
        "  </thead>\n",
        "  <tbody>\n",
        "    <tr>\n",
        "      <th>2020-10-30</th>\n",
        "      <td>0.00746</td>\n",
        "      <td>0.024077</td>\n",
        "      <td>0.004753</td>\n",
        "      <td>0.023342</td>\n",
        "      <td>0.00158</td>\n",
        "      <td>0.007029</td>\n",
        "      <td>0.006761</td>\n",
        "      <td>0.032087</td>\n",
        "      <td>0.009597</td>\n",
        "      <td>0.010593</td>\n",
        "      <td>...</td>\n",
        "      <td>0.009331</td>\n",
        "      <td>0.030681</td>\n",
        "      <td>0.003651</td>\n",
        "      <td>0.008755</td>\n",
        "      <td>0.001519</td>\n",
        "      <td>0.003099</td>\n",
        "      <td>0.008357</td>\n",
        "      <td>0.013813</td>\n",
        "      <td>0.042605</td>\n",
        "      <td>0.003484</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>2020-10-31</th>\n",
        "      <td>0.00746</td>\n",
        "      <td>0.024077</td>\n",
        "      <td>0.004753</td>\n",
        "      <td>0.023342</td>\n",
        "      <td>0.00158</td>\n",
        "      <td>0.007029</td>\n",
        "      <td>0.006761</td>\n",
        "      <td>0.032087</td>\n",
        "      <td>0.009597</td>\n",
        "      <td>0.010593</td>\n",
        "      <td>...</td>\n",
        "      <td>0.009331</td>\n",
        "      <td>0.030681</td>\n",
        "      <td>0.003651</td>\n",
        "      <td>0.008755</td>\n",
        "      <td>0.001519</td>\n",
        "      <td>0.003099</td>\n",
        "      <td>0.008357</td>\n",
        "      <td>0.013813</td>\n",
        "      <td>0.042605</td>\n",
        "      <td>0.003484</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>2020-11-01</th>\n",
        "      <td>0.00746</td>\n",
        "      <td>0.024077</td>\n",
        "      <td>0.004753</td>\n",
        "      <td>0.023342</td>\n",
        "      <td>0.00158</td>\n",
        "      <td>0.007029</td>\n",
        "      <td>0.006761</td>\n",
        "      <td>0.032087</td>\n",
        "      <td>0.009597</td>\n",
        "      <td>0.010593</td>\n",
        "      <td>...</td>\n",
        "      <td>0.009331</td>\n",
        "      <td>0.030681</td>\n",
        "      <td>0.003651</td>\n",
        "      <td>0.008755</td>\n",
        "      <td>0.001519</td>\n",
        "      <td>0.003099</td>\n",
        "      <td>0.008357</td>\n",
        "      <td>0.013813</td>\n",
        "      <td>0.042605</td>\n",
        "      <td>0.003484</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>2020-11-02</th>\n",
        "      <td>0.00746</td>\n",
        "      <td>0.024077</td>\n",
        "      <td>0.004753</td>\n",
        "      <td>0.023342</td>\n",
        "      <td>0.00158</td>\n",
        "      <td>0.007029</td>\n",
        "      <td>0.006761</td>\n",
        "      <td>0.032087</td>\n",
        "      <td>0.009597</td>\n",
        "      <td>0.010593</td>\n",
        "      <td>...</td>\n",
        "      <td>0.009331</td>\n",
        "      <td>0.030681</td>\n",
        "      <td>0.003651</td>\n",
        "      <td>0.008755</td>\n",
        "      <td>0.001519</td>\n",
        "      <td>0.003099</td>\n",
        "      <td>0.008357</td>\n",
        "      <td>0.013813</td>\n",
        "      <td>0.042605</td>\n",
        "      <td>0.003484</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>2020-11-03</th>\n",
        "      <td>0.00746</td>\n",
        "      <td>0.024077</td>\n",
        "      <td>0.004753</td>\n",
        "      <td>0.023342</td>\n",
        "      <td>0.00158</td>\n",
        "      <td>0.007029</td>\n",
        "      <td>0.006761</td>\n",
        "      <td>0.032087</td>\n",
        "      <td>0.009597</td>\n",
        "      <td>0.010593</td>\n",
        "      <td>...</td>\n",
        "      <td>0.009331</td>\n",
        "      <td>0.030681</td>\n",
        "      <td>0.003651</td>\n",
        "      <td>0.008755</td>\n",
        "      <td>0.001519</td>\n",
        "      <td>0.003099</td>\n",
        "      <td>0.008357</td>\n",
        "      <td>0.013813</td>\n",
        "      <td>0.042605</td>\n",
        "      <td>0.003484</td>\n",
        "    </tr>\n",
        "  </tbody>\n",
        "</table>\n",
        "<p>5 rows \u00d7 24 columns</p>\n",
        "</div>"
       ],
       "output_type": "pyout",
       "prompt_number": 15,
       "text": [
        "Country     Albania   Bahrain  Bangladesh   Belarus  Bolivia    Brazil  \\\n",
        "Date                                                                     \n",
        "2020-10-30  0.00746  0.024077    0.004753  0.023342  0.00158  0.007029   \n",
        "2020-10-31  0.00746  0.024077    0.004753  0.023342  0.00158  0.007029   \n",
        "2020-11-01  0.00746  0.024077    0.004753  0.023342  0.00158  0.007029   \n",
        "2020-11-02  0.00746  0.024077    0.004753  0.023342  0.00158  0.007029   \n",
        "2020-11-03  0.00746  0.024077    0.004753  0.023342  0.00158  0.007029   \n",
        "\n",
        "Country     Dominican Republic     Egypt    France    Guinea  ...    Latvia  \\\n",
        "Date                                                          ...             \n",
        "2020-10-30            0.006761  0.032087  0.009597  0.010593  ...  0.009331   \n",
        "2020-10-31            0.006761  0.032087  0.009597  0.010593  ...  0.009331   \n",
        "2020-11-01            0.006761  0.032087  0.009597  0.010593  ...  0.009331   \n",
        "2020-11-02            0.006761  0.032087  0.009597  0.010593  ...  0.009331   \n",
        "2020-11-03            0.006761  0.032087  0.009597  0.010593  ...  0.009331   \n",
        "\n",
        "Country       Mexico   Nigeria    Panama      Peru    Russia      Togo  \\\n",
        "Date                                                                     \n",
        "2020-10-30  0.030681  0.003651  0.008755  0.001519  0.003099  0.008357   \n",
        "2020-10-31  0.030681  0.003651  0.008755  0.001519  0.003099  0.008357   \n",
        "2020-11-01  0.030681  0.003651  0.008755  0.001519  0.003099  0.008357   \n",
        "2020-11-02  0.030681  0.003651  0.008755  0.001519  0.003099  0.008357   \n",
        "2020-11-03  0.030681  0.003651  0.008755  0.001519  0.003099  0.008357   \n",
        "\n",
        "Country       Turkey  United Arab Emirates  United States  \n",
        "Date                                                       \n",
        "2020-10-30  0.013813              0.042605       0.003484  \n",
        "2020-10-31  0.013813              0.042605       0.003484  \n",
        "2020-11-01  0.013813              0.042605       0.003484  \n",
        "2020-11-02  0.013813              0.042605       0.003484  \n",
        "2020-11-03  0.013813              0.042605       0.003484  \n",
        "\n",
        "[5 rows x 24 columns]"
       ]
      }
     ],
     "prompt_number": 15
    },
    {
     "cell_type": "heading",
     "level": 3,
     "metadata": {},
     "source": [
      "$\\sigma$: Recovery rate $\\mathrm{[-]}$"
     ]
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "analyser.history(\"sigma\", roll_window=None).tail()"
     ],
     "language": "python",
     "metadata": {},
     "outputs": [
      {
       "output_type": "display_data",
       "png": "\n",
       "text": [
        "<Figure size 648x432 with 1 Axes>"
       ]
      },
      {
       "html": [
        "<div>\n",
        "<style scoped>\n",
        "    .dataframe tbody tr th:only-of-type {\n",
        "        vertical-align: middle;\n",
        "    }\n",
        "\n",
        "    .dataframe tbody tr th {\n",
        "        vertical-align: top;\n",
        "    }\n",
        "\n",
        "    .dataframe thead th {\n",
        "        text-align: right;\n",
        "    }\n",
        "</style>\n",
        "<table border=\"1\" class=\"dataframe\">\n",
        "  <thead>\n",
        "    <tr style=\"text-align: right;\">\n",
        "      <th>Country</th>\n",
        "      <th>Albania</th>\n",
        "      <th>Bahrain</th>\n",
        "      <th>Bangladesh</th>\n",
        "      <th>Belarus</th>\n",
        "      <th>Bolivia</th>\n",
        "      <th>Brazil</th>\n",
        "      <th>Dominican Republic</th>\n",
        "      <th>Egypt</th>\n",
        "      <th>France</th>\n",
        "      <th>Guinea</th>\n",
        "      <th>...</th>\n",
        "      <th>Latvia</th>\n",
        "      <th>Mexico</th>\n",
        "      <th>Nigeria</th>\n",
        "      <th>Panama</th>\n",
        "      <th>Peru</th>\n",
        "      <th>Russia</th>\n",
        "      <th>Togo</th>\n",
        "      <th>Turkey</th>\n",
        "      <th>United Arab Emirates</th>\n",
        "      <th>United States</th>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>Date</th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "    </tr>\n",
        "  </thead>\n",
        "  <tbody>\n",
        "    <tr>\n",
        "      <th>2020-10-30</th>\n",
        "      <td>0.008815</td>\n",
        "      <td>0.027815</td>\n",
        "      <td>0.004918</td>\n",
        "      <td>0.013888</td>\n",
        "      <td>0.003863</td>\n",
        "      <td>0.000992</td>\n",
        "      <td>0.006492</td>\n",
        "      <td>0.018572</td>\n",
        "      <td>0.000231</td>\n",
        "      <td>0.000779</td>\n",
        "      <td>...</td>\n",
        "      <td>0.0</td>\n",
        "      <td>0.023638</td>\n",
        "      <td>0.004712</td>\n",
        "      <td>0.009404</td>\n",
        "      <td>0.001991</td>\n",
        "      <td>0.00216</td>\n",
        "      <td>0.00386</td>\n",
        "      <td>0.009591</td>\n",
        "      <td>0.050318</td>\n",
        "      <td>0.001315</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>2020-10-31</th>\n",
        "      <td>0.008815</td>\n",
        "      <td>0.027815</td>\n",
        "      <td>0.004918</td>\n",
        "      <td>0.013888</td>\n",
        "      <td>0.003863</td>\n",
        "      <td>0.000992</td>\n",
        "      <td>0.006492</td>\n",
        "      <td>0.018572</td>\n",
        "      <td>0.000231</td>\n",
        "      <td>0.000779</td>\n",
        "      <td>...</td>\n",
        "      <td>0.0</td>\n",
        "      <td>0.023638</td>\n",
        "      <td>0.004712</td>\n",
        "      <td>0.009404</td>\n",
        "      <td>0.001991</td>\n",
        "      <td>0.00216</td>\n",
        "      <td>0.00386</td>\n",
        "      <td>0.009591</td>\n",
        "      <td>0.050318</td>\n",
        "      <td>0.001315</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>2020-11-01</th>\n",
        "      <td>0.008815</td>\n",
        "      <td>0.027815</td>\n",
        "      <td>0.004918</td>\n",
        "      <td>0.013888</td>\n",
        "      <td>0.003863</td>\n",
        "      <td>0.000992</td>\n",
        "      <td>0.006492</td>\n",
        "      <td>0.018572</td>\n",
        "      <td>0.000231</td>\n",
        "      <td>0.000779</td>\n",
        "      <td>...</td>\n",
        "      <td>0.0</td>\n",
        "      <td>0.023638</td>\n",
        "      <td>0.004712</td>\n",
        "      <td>0.009404</td>\n",
        "      <td>0.001991</td>\n",
        "      <td>0.00216</td>\n",
        "      <td>0.00386</td>\n",
        "      <td>0.009591</td>\n",
        "      <td>0.050318</td>\n",
        "      <td>0.001315</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>2020-11-02</th>\n",
        "      <td>0.008815</td>\n",
        "      <td>0.027815</td>\n",
        "      <td>0.004918</td>\n",
        "      <td>0.013888</td>\n",
        "      <td>0.003863</td>\n",
        "      <td>0.000992</td>\n",
        "      <td>0.006492</td>\n",
        "      <td>0.018572</td>\n",
        "      <td>0.000231</td>\n",
        "      <td>0.000779</td>\n",
        "      <td>...</td>\n",
        "      <td>0.0</td>\n",
        "      <td>0.023638</td>\n",
        "      <td>0.004712</td>\n",
        "      <td>0.009404</td>\n",
        "      <td>0.001991</td>\n",
        "      <td>0.00216</td>\n",
        "      <td>0.00386</td>\n",
        "      <td>0.009591</td>\n",
        "      <td>0.050318</td>\n",
        "      <td>0.001315</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>2020-11-03</th>\n",
        "      <td>0.008815</td>\n",
        "      <td>0.027815</td>\n",
        "      <td>0.004918</td>\n",
        "      <td>0.013888</td>\n",
        "      <td>0.003863</td>\n",
        "      <td>0.000992</td>\n",
        "      <td>0.006492</td>\n",
        "      <td>0.018572</td>\n",
        "      <td>0.000231</td>\n",
        "      <td>0.000779</td>\n",
        "      <td>...</td>\n",
        "      <td>0.0</td>\n",
        "      <td>0.023638</td>\n",
        "      <td>0.004712</td>\n",
        "      <td>0.009404</td>\n",
        "      <td>0.001991</td>\n",
        "      <td>0.00216</td>\n",
        "      <td>0.00386</td>\n",
        "      <td>0.009591</td>\n",
        "      <td>0.050318</td>\n",
        "      <td>0.001315</td>\n",
        "    </tr>\n",
        "  </tbody>\n",
        "</table>\n",
        "<p>5 rows \u00d7 24 columns</p>\n",
        "</div>"
       ],
       "output_type": "pyout",
       "prompt_number": 16,
       "text": [
        "Country      Albania   Bahrain  Bangladesh   Belarus   Bolivia    Brazil  \\\n",
        "Date                                                                       \n",
        "2020-10-30  0.008815  0.027815    0.004918  0.013888  0.003863  0.000992   \n",
        "2020-10-31  0.008815  0.027815    0.004918  0.013888  0.003863  0.000992   \n",
        "2020-11-01  0.008815  0.027815    0.004918  0.013888  0.003863  0.000992   \n",
        "2020-11-02  0.008815  0.027815    0.004918  0.013888  0.003863  0.000992   \n",
        "2020-11-03  0.008815  0.027815    0.004918  0.013888  0.003863  0.000992   \n",
        "\n",
        "Country     Dominican Republic     Egypt    France    Guinea  ...  Latvia  \\\n",
        "Date                                                          ...           \n",
        "2020-10-30            0.006492  0.018572  0.000231  0.000779  ...     0.0   \n",
        "2020-10-31            0.006492  0.018572  0.000231  0.000779  ...     0.0   \n",
        "2020-11-01            0.006492  0.018572  0.000231  0.000779  ...     0.0   \n",
        "2020-11-02            0.006492  0.018572  0.000231  0.000779  ...     0.0   \n",
        "2020-11-03            0.006492  0.018572  0.000231  0.000779  ...     0.0   \n",
        "\n",
        "Country       Mexico   Nigeria    Panama      Peru   Russia     Togo  \\\n",
        "Date                                                                   \n",
        "2020-10-30  0.023638  0.004712  0.009404  0.001991  0.00216  0.00386   \n",
        "2020-10-31  0.023638  0.004712  0.009404  0.001991  0.00216  0.00386   \n",
        "2020-11-01  0.023638  0.004712  0.009404  0.001991  0.00216  0.00386   \n",
        "2020-11-02  0.023638  0.004712  0.009404  0.001991  0.00216  0.00386   \n",
        "2020-11-03  0.023638  0.004712  0.009404  0.001991  0.00216  0.00386   \n",
        "\n",
        "Country       Turkey  United Arab Emirates  United States  \n",
        "Date                                                       \n",
        "2020-10-30  0.009591              0.050318       0.001315  \n",
        "2020-10-31  0.009591              0.050318       0.001315  \n",
        "2020-11-01  0.009591              0.050318       0.001315  \n",
        "2020-11-02  0.009591              0.050318       0.001315  \n",
        "2020-11-03  0.009591              0.050318       0.001315  \n",
        "\n",
        "[5 rows x 24 columns]"
       ]
      }
     ],
     "prompt_number": 16
    },
    {
     "cell_type": "heading",
     "level": 3,
     "metadata": {},
     "source": [
      "$\\kappa$: Mortality rate of infected cases $\\mathrm{[-]}$"
     ]
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "analyser.history(\"kappa\", roll_window=None).tail()"
     ],
     "language": "python",
     "metadata": {},
     "outputs": [
      {
       "output_type": "display_data",
       "png": "\n",
       "text": [
        "<Figure size 648x432 with 1 Axes>"
       ]
      },
      {
       "html": [
        "<div>\n",
        "<style scoped>\n",
        "    .dataframe tbody tr th:only-of-type {\n",
        "        vertical-align: middle;\n",
        "    }\n",
        "\n",
        "    .dataframe tbody tr th {\n",
        "        vertical-align: top;\n",
        "    }\n",
        "\n",
        "    .dataframe thead th {\n",
        "        text-align: right;\n",
        "    }\n",
        "</style>\n",
        "<table border=\"1\" class=\"dataframe\">\n",
        "  <thead>\n",
        "    <tr style=\"text-align: right;\">\n",
        "      <th>Country</th>\n",
        "      <th>Albania</th>\n",
        "      <th>Bahrain</th>\n",
        "      <th>Bangladesh</th>\n",
        "      <th>Belarus</th>\n",
        "      <th>Bolivia</th>\n",
        "      <th>Brazil</th>\n",
        "      <th>Dominican Republic</th>\n",
        "      <th>Egypt</th>\n",
        "      <th>France</th>\n",
        "      <th>Guinea</th>\n",
        "      <th>...</th>\n",
        "      <th>Latvia</th>\n",
        "      <th>Mexico</th>\n",
        "      <th>Nigeria</th>\n",
        "      <th>Panama</th>\n",
        "      <th>Peru</th>\n",
        "      <th>Russia</th>\n",
        "      <th>Togo</th>\n",
        "      <th>Turkey</th>\n",
        "      <th>United Arab Emirates</th>\n",
        "      <th>United States</th>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>Date</th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "    </tr>\n",
        "  </thead>\n",
        "  <tbody>\n",
        "    <tr>\n",
        "      <th>2020-10-30</th>\n",
        "      <td>0.000087</td>\n",
        "      <td>0.000014</td>\n",
        "      <td>0.000037</td>\n",
        "      <td>0.000099</td>\n",
        "      <td>0.000224</td>\n",
        "      <td>0.000026</td>\n",
        "      <td>0.000169</td>\n",
        "      <td>0.00042</td>\n",
        "      <td>0.000036</td>\n",
        "      <td>0.000041</td>\n",
        "      <td>...</td>\n",
        "      <td>0.000031</td>\n",
        "      <td>0.001148</td>\n",
        "      <td>0.000094</td>\n",
        "      <td>0.000117</td>\n",
        "      <td>0.00005</td>\n",
        "      <td>0.000002</td>\n",
        "      <td>0.000048</td>\n",
        "      <td>0.000288</td>\n",
        "      <td>0.000079</td>\n",
        "      <td>0.000024</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>2020-10-31</th>\n",
        "      <td>0.000087</td>\n",
        "      <td>0.000014</td>\n",
        "      <td>0.000037</td>\n",
        "      <td>0.000099</td>\n",
        "      <td>0.000224</td>\n",
        "      <td>0.000026</td>\n",
        "      <td>0.000169</td>\n",
        "      <td>0.00042</td>\n",
        "      <td>0.000036</td>\n",
        "      <td>0.000041</td>\n",
        "      <td>...</td>\n",
        "      <td>0.000031</td>\n",
        "      <td>0.001148</td>\n",
        "      <td>0.000094</td>\n",
        "      <td>0.000117</td>\n",
        "      <td>0.00005</td>\n",
        "      <td>0.000002</td>\n",
        "      <td>0.000048</td>\n",
        "      <td>0.000288</td>\n",
        "      <td>0.000079</td>\n",
        "      <td>0.000024</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>2020-11-01</th>\n",
        "      <td>0.000087</td>\n",
        "      <td>0.000014</td>\n",
        "      <td>0.000037</td>\n",
        "      <td>0.000099</td>\n",
        "      <td>0.000224</td>\n",
        "      <td>0.000026</td>\n",
        "      <td>0.000169</td>\n",
        "      <td>0.00042</td>\n",
        "      <td>0.000036</td>\n",
        "      <td>0.000041</td>\n",
        "      <td>...</td>\n",
        "      <td>0.000031</td>\n",
        "      <td>0.001148</td>\n",
        "      <td>0.000094</td>\n",
        "      <td>0.000117</td>\n",
        "      <td>0.00005</td>\n",
        "      <td>0.000002</td>\n",
        "      <td>0.000048</td>\n",
        "      <td>0.000288</td>\n",
        "      <td>0.000079</td>\n",
        "      <td>0.000024</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>2020-11-02</th>\n",
        "      <td>0.000087</td>\n",
        "      <td>0.000014</td>\n",
        "      <td>0.000037</td>\n",
        "      <td>0.000099</td>\n",
        "      <td>0.000224</td>\n",
        "      <td>0.000026</td>\n",
        "      <td>0.000169</td>\n",
        "      <td>0.00042</td>\n",
        "      <td>0.000036</td>\n",
        "      <td>0.000041</td>\n",
        "      <td>...</td>\n",
        "      <td>0.000031</td>\n",
        "      <td>0.001148</td>\n",
        "      <td>0.000094</td>\n",
        "      <td>0.000117</td>\n",
        "      <td>0.00005</td>\n",
        "      <td>0.000002</td>\n",
        "      <td>0.000048</td>\n",
        "      <td>0.000288</td>\n",
        "      <td>0.000079</td>\n",
        "      <td>0.000024</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>2020-11-03</th>\n",
        "      <td>0.000087</td>\n",
        "      <td>0.000014</td>\n",
        "      <td>0.000037</td>\n",
        "      <td>0.000099</td>\n",
        "      <td>0.000224</td>\n",
        "      <td>0.000026</td>\n",
        "      <td>0.000169</td>\n",
        "      <td>0.00042</td>\n",
        "      <td>0.000036</td>\n",
        "      <td>0.000041</td>\n",
        "      <td>...</td>\n",
        "      <td>0.000031</td>\n",
        "      <td>0.001148</td>\n",
        "      <td>0.000094</td>\n",
        "      <td>0.000117</td>\n",
        "      <td>0.00005</td>\n",
        "      <td>0.000002</td>\n",
        "      <td>0.000048</td>\n",
        "      <td>0.000288</td>\n",
        "      <td>0.000079</td>\n",
        "      <td>0.000024</td>\n",
        "    </tr>\n",
        "  </tbody>\n",
        "</table>\n",
        "<p>5 rows \u00d7 24 columns</p>\n",
        "</div>"
       ],
       "output_type": "pyout",
       "prompt_number": 17,
       "text": [
        "Country      Albania   Bahrain  Bangladesh   Belarus   Bolivia    Brazil  \\\n",
        "Date                                                                       \n",
        "2020-10-30  0.000087  0.000014    0.000037  0.000099  0.000224  0.000026   \n",
        "2020-10-31  0.000087  0.000014    0.000037  0.000099  0.000224  0.000026   \n",
        "2020-11-01  0.000087  0.000014    0.000037  0.000099  0.000224  0.000026   \n",
        "2020-11-02  0.000087  0.000014    0.000037  0.000099  0.000224  0.000026   \n",
        "2020-11-03  0.000087  0.000014    0.000037  0.000099  0.000224  0.000026   \n",
        "\n",
        "Country     Dominican Republic    Egypt    France    Guinea  ...    Latvia  \\\n",
        "Date                                                         ...             \n",
        "2020-10-30            0.000169  0.00042  0.000036  0.000041  ...  0.000031   \n",
        "2020-10-31            0.000169  0.00042  0.000036  0.000041  ...  0.000031   \n",
        "2020-11-01            0.000169  0.00042  0.000036  0.000041  ...  0.000031   \n",
        "2020-11-02            0.000169  0.00042  0.000036  0.000041  ...  0.000031   \n",
        "2020-11-03            0.000169  0.00042  0.000036  0.000041  ...  0.000031   \n",
        "\n",
        "Country       Mexico   Nigeria    Panama     Peru    Russia      Togo  \\\n",
        "Date                                                                    \n",
        "2020-10-30  0.001148  0.000094  0.000117  0.00005  0.000002  0.000048   \n",
        "2020-10-31  0.001148  0.000094  0.000117  0.00005  0.000002  0.000048   \n",
        "2020-11-01  0.001148  0.000094  0.000117  0.00005  0.000002  0.000048   \n",
        "2020-11-02  0.001148  0.000094  0.000117  0.00005  0.000002  0.000048   \n",
        "2020-11-03  0.001148  0.000094  0.000117  0.00005  0.000002  0.000048   \n",
        "\n",
        "Country       Turkey  United Arab Emirates  United States  \n",
        "Date                                                       \n",
        "2020-10-30  0.000288              0.000079       0.000024  \n",
        "2020-10-31  0.000288              0.000079       0.000024  \n",
        "2020-11-01  0.000288              0.000079       0.000024  \n",
        "2020-11-02  0.000288              0.000079       0.000024  \n",
        "2020-11-03  0.000288              0.000079       0.000024  \n",
        "\n",
        "[5 rows x 24 columns]"
       ]
      }
     ],
     "prompt_number": 17
    },
    {
     "cell_type": "heading",
     "level": 3,
     "metadata": {},
     "source": [
      "$\\theta$: Mortality rate of S$^\\ast$ cases $\\mathrm{[-]}$"
     ]
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "analyser.history(\"theta\", roll_window=None).tail()"
     ],
     "language": "python",
     "metadata": {},
     "outputs": [
      {
       "output_type": "display_data",
       "png": "\n",
       "text": [
        "<Figure size 648x432 with 1 Axes>"
       ]
      },
      {
       "html": [
        "<div>\n",
        "<style scoped>\n",
        "    .dataframe tbody tr th:only-of-type {\n",
        "        vertical-align: middle;\n",
        "    }\n",
        "\n",
        "    .dataframe tbody tr th {\n",
        "        vertical-align: top;\n",
        "    }\n",
        "\n",
        "    .dataframe thead th {\n",
        "        text-align: right;\n",
        "    }\n",
        "</style>\n",
        "<table border=\"1\" class=\"dataframe\">\n",
        "  <thead>\n",
        "    <tr style=\"text-align: right;\">\n",
        "      <th>Country</th>\n",
        "      <th>Albania</th>\n",
        "      <th>Bahrain</th>\n",
        "      <th>Bangladesh</th>\n",
        "      <th>Belarus</th>\n",
        "      <th>Bolivia</th>\n",
        "      <th>Brazil</th>\n",
        "      <th>Dominican Republic</th>\n",
        "      <th>Egypt</th>\n",
        "      <th>France</th>\n",
        "      <th>Guinea</th>\n",
        "      <th>...</th>\n",
        "      <th>Latvia</th>\n",
        "      <th>Mexico</th>\n",
        "      <th>Nigeria</th>\n",
        "      <th>Panama</th>\n",
        "      <th>Peru</th>\n",
        "      <th>Russia</th>\n",
        "      <th>Togo</th>\n",
        "      <th>Turkey</th>\n",
        "      <th>United Arab Emirates</th>\n",
        "      <th>United States</th>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>Date</th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "    </tr>\n",
        "  </thead>\n",
        "  <tbody>\n",
        "    <tr>\n",
        "      <th>2020-10-30</th>\n",
        "      <td>0.000653</td>\n",
        "      <td>0.00587</td>\n",
        "      <td>0.000933</td>\n",
        "      <td>0.000011</td>\n",
        "      <td>0.018157</td>\n",
        "      <td>0.032494</td>\n",
        "      <td>0.000136</td>\n",
        "      <td>0.078592</td>\n",
        "      <td>0.000992</td>\n",
        "      <td>0.000019</td>\n",
        "      <td>...</td>\n",
        "      <td>0.000463</td>\n",
        "      <td>0.035365</td>\n",
        "      <td>0.000543</td>\n",
        "      <td>0.000966</td>\n",
        "      <td>0.000446</td>\n",
        "      <td>0.018482</td>\n",
        "      <td>0.018201</td>\n",
        "      <td>0.016537</td>\n",
        "      <td>0.000793</td>\n",
        "      <td>0.002961</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>2020-10-31</th>\n",
        "      <td>0.000653</td>\n",
        "      <td>0.00587</td>\n",
        "      <td>0.000933</td>\n",
        "      <td>0.000011</td>\n",
        "      <td>0.018157</td>\n",
        "      <td>0.032494</td>\n",
        "      <td>0.000136</td>\n",
        "      <td>0.078592</td>\n",
        "      <td>0.000992</td>\n",
        "      <td>0.000019</td>\n",
        "      <td>...</td>\n",
        "      <td>0.000463</td>\n",
        "      <td>0.035365</td>\n",
        "      <td>0.000543</td>\n",
        "      <td>0.000966</td>\n",
        "      <td>0.000446</td>\n",
        "      <td>0.018482</td>\n",
        "      <td>0.018201</td>\n",
        "      <td>0.016537</td>\n",
        "      <td>0.000793</td>\n",
        "      <td>0.002961</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>2020-11-01</th>\n",
        "      <td>0.000653</td>\n",
        "      <td>0.00587</td>\n",
        "      <td>0.000933</td>\n",
        "      <td>0.000011</td>\n",
        "      <td>0.018157</td>\n",
        "      <td>0.032494</td>\n",
        "      <td>0.000136</td>\n",
        "      <td>0.078592</td>\n",
        "      <td>0.000992</td>\n",
        "      <td>0.000019</td>\n",
        "      <td>...</td>\n",
        "      <td>0.000463</td>\n",
        "      <td>0.035365</td>\n",
        "      <td>0.000543</td>\n",
        "      <td>0.000966</td>\n",
        "      <td>0.000446</td>\n",
        "      <td>0.018482</td>\n",
        "      <td>0.018201</td>\n",
        "      <td>0.016537</td>\n",
        "      <td>0.000793</td>\n",
        "      <td>0.002961</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>2020-11-02</th>\n",
        "      <td>0.000653</td>\n",
        "      <td>0.00587</td>\n",
        "      <td>0.000933</td>\n",
        "      <td>0.000011</td>\n",
        "      <td>0.018157</td>\n",
        "      <td>0.032494</td>\n",
        "      <td>0.000136</td>\n",
        "      <td>0.078592</td>\n",
        "      <td>0.000992</td>\n",
        "      <td>0.000019</td>\n",
        "      <td>...</td>\n",
        "      <td>0.000463</td>\n",
        "      <td>0.035365</td>\n",
        "      <td>0.000543</td>\n",
        "      <td>0.000966</td>\n",
        "      <td>0.000446</td>\n",
        "      <td>0.018482</td>\n",
        "      <td>0.018201</td>\n",
        "      <td>0.016537</td>\n",
        "      <td>0.000793</td>\n",
        "      <td>0.002961</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>2020-11-03</th>\n",
        "      <td>0.000653</td>\n",
        "      <td>0.00587</td>\n",
        "      <td>0.000933</td>\n",
        "      <td>0.000011</td>\n",
        "      <td>0.018157</td>\n",
        "      <td>0.032494</td>\n",
        "      <td>0.000136</td>\n",
        "      <td>0.078592</td>\n",
        "      <td>0.000992</td>\n",
        "      <td>0.000019</td>\n",
        "      <td>...</td>\n",
        "      <td>0.000463</td>\n",
        "      <td>0.035365</td>\n",
        "      <td>0.000543</td>\n",
        "      <td>0.000966</td>\n",
        "      <td>0.000446</td>\n",
        "      <td>0.018482</td>\n",
        "      <td>0.018201</td>\n",
        "      <td>0.016537</td>\n",
        "      <td>0.000793</td>\n",
        "      <td>0.002961</td>\n",
        "    </tr>\n",
        "  </tbody>\n",
        "</table>\n",
        "<p>5 rows \u00d7 24 columns</p>\n",
        "</div>"
       ],
       "output_type": "pyout",
       "prompt_number": 18,
       "text": [
        "Country      Albania  Bahrain  Bangladesh   Belarus   Bolivia    Brazil  \\\n",
        "Date                                                                      \n",
        "2020-10-30  0.000653  0.00587    0.000933  0.000011  0.018157  0.032494   \n",
        "2020-10-31  0.000653  0.00587    0.000933  0.000011  0.018157  0.032494   \n",
        "2020-11-01  0.000653  0.00587    0.000933  0.000011  0.018157  0.032494   \n",
        "2020-11-02  0.000653  0.00587    0.000933  0.000011  0.018157  0.032494   \n",
        "2020-11-03  0.000653  0.00587    0.000933  0.000011  0.018157  0.032494   \n",
        "\n",
        "Country     Dominican Republic     Egypt    France    Guinea  ...    Latvia  \\\n",
        "Date                                                          ...             \n",
        "2020-10-30            0.000136  0.078592  0.000992  0.000019  ...  0.000463   \n",
        "2020-10-31            0.000136  0.078592  0.000992  0.000019  ...  0.000463   \n",
        "2020-11-01            0.000136  0.078592  0.000992  0.000019  ...  0.000463   \n",
        "2020-11-02            0.000136  0.078592  0.000992  0.000019  ...  0.000463   \n",
        "2020-11-03            0.000136  0.078592  0.000992  0.000019  ...  0.000463   \n",
        "\n",
        "Country       Mexico   Nigeria    Panama      Peru    Russia      Togo  \\\n",
        "Date                                                                     \n",
        "2020-10-30  0.035365  0.000543  0.000966  0.000446  0.018482  0.018201   \n",
        "2020-10-31  0.035365  0.000543  0.000966  0.000446  0.018482  0.018201   \n",
        "2020-11-01  0.035365  0.000543  0.000966  0.000446  0.018482  0.018201   \n",
        "2020-11-02  0.035365  0.000543  0.000966  0.000446  0.018482  0.018201   \n",
        "2020-11-03  0.035365  0.000543  0.000966  0.000446  0.018482  0.018201   \n",
        "\n",
        "Country       Turkey  United Arab Emirates  United States  \n",
        "Date                                                       \n",
        "2020-10-30  0.016537              0.000793       0.002961  \n",
        "2020-10-31  0.016537              0.000793       0.002961  \n",
        "2020-11-01  0.016537              0.000793       0.002961  \n",
        "2020-11-02  0.016537              0.000793       0.002961  \n",
        "2020-11-03  0.016537              0.000793       0.002961  \n",
        "\n",
        "[5 rows x 24 columns]"
       ]
      }
     ],
     "prompt_number": 18
    },
    {
     "cell_type": "markdown",
     "metadata": {},
     "source": [
      "## (Experimental): Relationship of OxCGRT index and parameter values\n",
      "Government responses will impact on parameter values of ODE models about 14 days later. Here, we will investigate on the relationship of [stringency index (from OxCGRT)](https://github.com/OxCGRT/covid-policy-tracker/blob/master/documentation/index_methodology.md) and reproduction number/model parameters.\n"
     ]
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "%matplotlib inline\n",
      "from matplotlib import pyplot as plt\n",
      "import seaborn as sns\n",
      "import pandas as pd"
     ],
     "language": "python",
     "metadata": {},
     "outputs": [],
     "prompt_number": 19
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "df = analyser.track()\n",
      "param_cols = [\"Rt\", *cs.SIRF.PARAMETERS]\n",
      "oxcgrt_cols = oxcgrt_data.OXCGRT_VARS[:]\n",
      "cols = param_cols + oxcgrt_cols\n",
      "delay = 14\n",
      "\n",
      "for col in param_cols:\n",
      "    df[col] = pd.to_numeric(df[col], errors=\"coerce\")\n",
      "    df[col] = df.groupby(\"Country\")[col].shift(0 - delay)\n",
      "\n",
      "df = df.dropna(how=\"any\")\n",
      "df = df.loc[:, [\"Date\", \"Country\", *cols]]\n",
      "track_df = df.copy()\n",
      "track_df.info()"
     ],
     "language": "python",
     "metadata": {},
     "outputs": [
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "<class 'pandas.core.frame.DataFrame'>\n",
        "Int64Index: 83721 entries, 0 to 84042\n",
        "Data columns (total 19 columns):\n",
        " #   Column                               Non-Null Count  Dtype         \n",
        "---  ------                               --------------  -----         \n",
        " 0   Date                                 83721 non-null  datetime64[ns]\n",
        " 1   Country                              83721 non-null  object        \n",
        " 2   Rt                                   83721 non-null  float64       \n",
        " 3   theta                                83721 non-null  float64       \n",
        " 4   kappa                                83721 non-null  float64       \n",
        " 5   rho                                  83721 non-null  float64       \n",
        " 6   sigma                                83721 non-null  float64       \n",
        " 7   School_closing                       83721 non-null  int64         \n",
        " 8   Workplace_closing                    83721 non-null  int64         \n",
        " 9   Cancel_events                        83721 non-null  int64         \n",
        " 10  Gatherings_restrictions              83721 non-null  int64         \n",
        " 11  Transport_closing                    83721 non-null  int64         \n",
        " 12  Stay_home_restrictions               83721 non-null  int64         \n",
        " 13  Internal_movement_restrictions       83721 non-null  int64         \n",
        " 14  International_movement_restrictions  83721 non-null  int64         \n",
        " 15  Information_campaigns                83721 non-null  int64         \n",
        " 16  Testing_policy                       83721 non-null  int64         \n",
        " 17  Contact_tracing                      83721 non-null  int64         \n",
        " 18  Stringency_index                     83721 non-null  float64       \n",
        "dtypes: datetime64[ns](1), float64(6), int64(11), object(1)\n",
        "memory usage: 12.8+ MB\n"
       ]
      }
     ],
     "prompt_number": 20
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "# Correlation\n",
      "df = track_df.copy()\n",
      "df.corr().style.background_gradient(axis=None)"
     ],
     "language": "python",
     "metadata": {},
     "outputs": [
      {
       "html": [
        "<style  type=\"text/css\" >\n",
        "#T_332f6f04_1d89_11eb_aafb_525400e133c8row0_col0,#T_332f6f04_1d89_11eb_aafb_525400e133c8row1_col1,#T_332f6f04_1d89_11eb_aafb_525400e133c8row2_col2,#T_332f6f04_1d89_11eb_aafb_525400e133c8row3_col3,#T_332f6f04_1d89_11eb_aafb_525400e133c8row4_col4,#T_332f6f04_1d89_11eb_aafb_525400e133c8row5_col5,#T_332f6f04_1d89_11eb_aafb_525400e133c8row6_col6,#T_332f6f04_1d89_11eb_aafb_525400e133c8row7_col7,#T_332f6f04_1d89_11eb_aafb_525400e133c8row8_col8,#T_332f6f04_1d89_11eb_aafb_525400e133c8row9_col9,#T_332f6f04_1d89_11eb_aafb_525400e133c8row10_col10,#T_332f6f04_1d89_11eb_aafb_525400e133c8row11_col11,#T_332f6f04_1d89_11eb_aafb_525400e133c8row12_col12,#T_332f6f04_1d89_11eb_aafb_525400e133c8row13_col13,#T_332f6f04_1d89_11eb_aafb_525400e133c8row14_col14,#T_332f6f04_1d89_11eb_aafb_525400e133c8row15_col15,#T_332f6f04_1d89_11eb_aafb_525400e133c8row16_col16{\n",
        "            background-color:  #023858;\n",
        "            color:  #f1f1f1;\n",
        "        }#T_332f6f04_1d89_11eb_aafb_525400e133c8row0_col1,#T_332f6f04_1d89_11eb_aafb_525400e133c8row0_col6,#T_332f6f04_1d89_11eb_aafb_525400e133c8row1_col0,#T_332f6f04_1d89_11eb_aafb_525400e133c8row1_col14,#T_332f6f04_1d89_11eb_aafb_525400e133c8row6_col0,#T_332f6f04_1d89_11eb_aafb_525400e133c8row14_col1{\n",
        "            background-color:  #dedcec;\n",
        "            color:  #000000;\n",
        "        }#T_332f6f04_1d89_11eb_aafb_525400e133c8row0_col2,#T_332f6f04_1d89_11eb_aafb_525400e133c8row2_col0{\n",
        "            background-color:  #dfddec;\n",
        "            color:  #000000;\n",
        "        }#T_332f6f04_1d89_11eb_aafb_525400e133c8row0_col3,#T_332f6f04_1d89_11eb_aafb_525400e133c8row3_col0{\n",
        "            background-color:  #d8d7e9;\n",
        "            color:  #000000;\n",
        "        }#T_332f6f04_1d89_11eb_aafb_525400e133c8row0_col4,#T_332f6f04_1d89_11eb_aafb_525400e133c8row4_col0{\n",
        "            background-color:  #f2ecf5;\n",
        "            color:  #000000;\n",
        "        }#T_332f6f04_1d89_11eb_aafb_525400e133c8row0_col5,#T_332f6f04_1d89_11eb_aafb_525400e133c8row5_col0{\n",
        "            background-color:  #f0eaf4;\n",
        "            color:  #000000;\n",
        "        }#T_332f6f04_1d89_11eb_aafb_525400e133c8row0_col7,#T_332f6f04_1d89_11eb_aafb_525400e133c8row7_col0{\n",
        "            background-color:  #eee9f3;\n",
        "            color:  #000000;\n",
        "        }#T_332f6f04_1d89_11eb_aafb_525400e133c8row0_col8,#T_332f6f04_1d89_11eb_aafb_525400e133c8row8_col0{\n",
        "            background-color:  #eee8f3;\n",
        "            color:  #000000;\n",
        "        }#T_332f6f04_1d89_11eb_aafb_525400e133c8row0_col9,#T_332f6f04_1d89_11eb_aafb_525400e133c8row1_col12,#T_332f6f04_1d89_11eb_aafb_525400e133c8row9_col0,#T_332f6f04_1d89_11eb_aafb_525400e133c8row12_col1{\n",
        "            background-color:  #9ebad9;\n",
        "            color:  #000000;\n",
        "        }#T_332f6f04_1d89_11eb_aafb_525400e133c8row0_col10,#T_332f6f04_1d89_11eb_aafb_525400e133c8row10_col0{\n",
        "            background-color:  #e9e5f1;\n",
        "            color:  #000000;\n",
        "        }#T_332f6f04_1d89_11eb_aafb_525400e133c8row0_col11,#T_332f6f04_1d89_11eb_aafb_525400e133c8row11_col0{\n",
        "            background-color:  #f1ebf4;\n",
        "            color:  #000000;\n",
        "        }#T_332f6f04_1d89_11eb_aafb_525400e133c8row0_col12,#T_332f6f04_1d89_11eb_aafb_525400e133c8row1_col8,#T_332f6f04_1d89_11eb_aafb_525400e133c8row8_col1,#T_332f6f04_1d89_11eb_aafb_525400e133c8row12_col0{\n",
        "            background-color:  #ece7f2;\n",
        "            color:  #000000;\n",
        "        }#T_332f6f04_1d89_11eb_aafb_525400e133c8row0_col13,#T_332f6f04_1d89_11eb_aafb_525400e133c8row9_col12,#T_332f6f04_1d89_11eb_aafb_525400e133c8row12_col9,#T_332f6f04_1d89_11eb_aafb_525400e133c8row13_col0{\n",
        "            background-color:  #acc0dd;\n",
        "            color:  #000000;\n",
        "        }#T_332f6f04_1d89_11eb_aafb_525400e133c8row0_col14,#T_332f6f04_1d89_11eb_aafb_525400e133c8row4_col8,#T_332f6f04_1d89_11eb_aafb_525400e133c8row8_col4,#T_332f6f04_1d89_11eb_aafb_525400e133c8row14_col0{\n",
        "            background-color:  #afc1dd;\n",
        "            color:  #000000;\n",
        "        }#T_332f6f04_1d89_11eb_aafb_525400e133c8row0_col15,#T_332f6f04_1d89_11eb_aafb_525400e133c8row15_col0{\n",
        "            background-color:  #d3d4e7;\n",
        "            color:  #000000;\n",
        "        }#T_332f6f04_1d89_11eb_aafb_525400e133c8row0_col16,#T_332f6f04_1d89_11eb_aafb_525400e133c8row16_col0{\n",
        "            background-color:  #f5eff6;\n",
        "            color:  #000000;\n",
        "        }#T_332f6f04_1d89_11eb_aafb_525400e133c8row1_col2,#T_332f6f04_1d89_11eb_aafb_525400e133c8row2_col1{\n",
        "            background-color:  #023d60;\n",
        "            color:  #f1f1f1;\n",
        "        }#T_332f6f04_1d89_11eb_aafb_525400e133c8row1_col3,#T_332f6f04_1d89_11eb_aafb_525400e133c8row3_col1{\n",
        "            background-color:  #0567a1;\n",
        "            color:  #f1f1f1;\n",
        "        }#T_332f6f04_1d89_11eb_aafb_525400e133c8row1_col4,#T_332f6f04_1d89_11eb_aafb_525400e133c8row4_col1{\n",
        "            background-color:  #bcc7e1;\n",
        "            color:  #000000;\n",
        "        }#T_332f6f04_1d89_11eb_aafb_525400e133c8row1_col5,#T_332f6f04_1d89_11eb_aafb_525400e133c8row1_col11,#T_332f6f04_1d89_11eb_aafb_525400e133c8row5_col1,#T_332f6f04_1d89_11eb_aafb_525400e133c8row11_col1{\n",
        "            background-color:  #e1dfed;\n",
        "            color:  #000000;\n",
        "        }#T_332f6f04_1d89_11eb_aafb_525400e133c8row1_col6,#T_332f6f04_1d89_11eb_aafb_525400e133c8row3_col7,#T_332f6f04_1d89_11eb_aafb_525400e133c8row6_col1,#T_332f6f04_1d89_11eb_aafb_525400e133c8row7_col3{\n",
        "            background-color:  #d6d6e9;\n",
        "            color:  #000000;\n",
        "        }#T_332f6f04_1d89_11eb_aafb_525400e133c8row1_col7,#T_332f6f04_1d89_11eb_aafb_525400e133c8row7_col1{\n",
        "            background-color:  #dad9ea;\n",
        "            color:  #000000;\n",
        "        }#T_332f6f04_1d89_11eb_aafb_525400e133c8row1_col9,#T_332f6f04_1d89_11eb_aafb_525400e133c8row9_col1{\n",
        "            background-color:  #f9f2f8;\n",
        "            color:  #000000;\n",
        "        }#T_332f6f04_1d89_11eb_aafb_525400e133c8row1_col10,#T_332f6f04_1d89_11eb_aafb_525400e133c8row10_col1{\n",
        "            background-color:  #d1d2e6;\n",
        "            color:  #000000;\n",
        "        }#T_332f6f04_1d89_11eb_aafb_525400e133c8row1_col13,#T_332f6f04_1d89_11eb_aafb_525400e133c8row13_col1{\n",
        "            background-color:  #f6eff7;\n",
        "            color:  #000000;\n",
        "        }#T_332f6f04_1d89_11eb_aafb_525400e133c8row1_col15,#T_332f6f04_1d89_11eb_aafb_525400e133c8row15_col1{\n",
        "            background-color:  #ced0e6;\n",
        "            color:  #000000;\n",
        "        }#T_332f6f04_1d89_11eb_aafb_525400e133c8row1_col16,#T_332f6f04_1d89_11eb_aafb_525400e133c8row16_col1{\n",
        "            background-color:  #c0c9e2;\n",
        "            color:  #000000;\n",
        "        }#T_332f6f04_1d89_11eb_aafb_525400e133c8row2_col3,#T_332f6f04_1d89_11eb_aafb_525400e133c8row3_col2,#T_332f6f04_1d89_11eb_aafb_525400e133c8row8_col10,#T_332f6f04_1d89_11eb_aafb_525400e133c8row8_col16,#T_332f6f04_1d89_11eb_aafb_525400e133c8row10_col8,#T_332f6f04_1d89_11eb_aafb_525400e133c8row16_col8{\n",
        "            background-color:  #04649e;\n",
        "            color:  #f1f1f1;\n",
        "        }#T_332f6f04_1d89_11eb_aafb_525400e133c8row2_col4,#T_332f6f04_1d89_11eb_aafb_525400e133c8row4_col2,#T_332f6f04_1d89_11eb_aafb_525400e133c8row6_col11,#T_332f6f04_1d89_11eb_aafb_525400e133c8row11_col6{\n",
        "            background-color:  #bdc8e1;\n",
        "            color:  #000000;\n",
        "        }#T_332f6f04_1d89_11eb_aafb_525400e133c8row2_col5,#T_332f6f04_1d89_11eb_aafb_525400e133c8row5_col2{\n",
        "            background-color:  #e2dfee;\n",
        "            color:  #000000;\n",
        "        }#T_332f6f04_1d89_11eb_aafb_525400e133c8row2_col6,#T_332f6f04_1d89_11eb_aafb_525400e133c8row2_col14,#T_332f6f04_1d89_11eb_aafb_525400e133c8row6_col2,#T_332f6f04_1d89_11eb_aafb_525400e133c8row11_col14,#T_332f6f04_1d89_11eb_aafb_525400e133c8row14_col2,#T_332f6f04_1d89_11eb_aafb_525400e133c8row14_col11{\n",
        "            background-color:  #d9d8ea;\n",
        "            color:  #000000;\n",
        "        }#T_332f6f04_1d89_11eb_aafb_525400e133c8row2_col7,#T_332f6f04_1d89_11eb_aafb_525400e133c8row7_col2{\n",
        "            background-color:  #dbdaeb;\n",
        "            color:  #000000;\n",
        "        }#T_332f6f04_1d89_11eb_aafb_525400e133c8row2_col8,#T_332f6f04_1d89_11eb_aafb_525400e133c8row8_col2{\n",
        "            background-color:  #e8e4f0;\n",
        "            color:  #000000;\n",
        "        }#T_332f6f04_1d89_11eb_aafb_525400e133c8row2_col9,#T_332f6f04_1d89_11eb_aafb_525400e133c8row3_col14,#T_332f6f04_1d89_11eb_aafb_525400e133c8row9_col2,#T_332f6f04_1d89_11eb_aafb_525400e133c8row14_col3{\n",
        "            background-color:  #fbf4f9;\n",
        "            color:  #000000;\n",
        "        }#T_332f6f04_1d89_11eb_aafb_525400e133c8row2_col10,#T_332f6f04_1d89_11eb_aafb_525400e133c8row10_col2{\n",
        "            background-color:  #d2d2e7;\n",
        "            color:  #000000;\n",
        "        }#T_332f6f04_1d89_11eb_aafb_525400e133c8row2_col11,#T_332f6f04_1d89_11eb_aafb_525400e133c8row3_col8,#T_332f6f04_1d89_11eb_aafb_525400e133c8row8_col3,#T_332f6f04_1d89_11eb_aafb_525400e133c8row11_col2{\n",
        "            background-color:  #e7e3f0;\n",
        "            color:  #000000;\n",
        "        }#T_332f6f04_1d89_11eb_aafb_525400e133c8row2_col12,#T_332f6f04_1d89_11eb_aafb_525400e133c8row12_col2{\n",
        "            background-color:  #96b6d7;\n",
        "            color:  #000000;\n",
        "        }#T_332f6f04_1d89_11eb_aafb_525400e133c8row2_col13,#T_332f6f04_1d89_11eb_aafb_525400e133c8row3_col9,#T_332f6f04_1d89_11eb_aafb_525400e133c8row9_col3,#T_332f6f04_1d89_11eb_aafb_525400e133c8row13_col2{\n",
        "            background-color:  #f7f0f7;\n",
        "            color:  #000000;\n",
        "        }#T_332f6f04_1d89_11eb_aafb_525400e133c8row2_col15,#T_332f6f04_1d89_11eb_aafb_525400e133c8row4_col9,#T_332f6f04_1d89_11eb_aafb_525400e133c8row9_col4,#T_332f6f04_1d89_11eb_aafb_525400e133c8row11_col15,#T_332f6f04_1d89_11eb_aafb_525400e133c8row15_col2,#T_332f6f04_1d89_11eb_aafb_525400e133c8row15_col11{\n",
        "            background-color:  #c9cee4;\n",
        "            color:  #000000;\n",
        "        }#T_332f6f04_1d89_11eb_aafb_525400e133c8row2_col16,#T_332f6f04_1d89_11eb_aafb_525400e133c8row16_col2{\n",
        "            background-color:  #c5cce3;\n",
        "            color:  #000000;\n",
        "        }#T_332f6f04_1d89_11eb_aafb_525400e133c8row3_col4,#T_332f6f04_1d89_11eb_aafb_525400e133c8row4_col3{\n",
        "            background-color:  #73a9cf;\n",
        "            color:  #000000;\n",
        "        }#T_332f6f04_1d89_11eb_aafb_525400e133c8row3_col5,#T_332f6f04_1d89_11eb_aafb_525400e133c8row5_col3{\n",
        "            background-color:  #ebe6f2;\n",
        "            color:  #000000;\n",
        "        }#T_332f6f04_1d89_11eb_aafb_525400e133c8row3_col6,#T_332f6f04_1d89_11eb_aafb_525400e133c8row6_col3{\n",
        "            background-color:  #eae6f1;\n",
        "            color:  #000000;\n",
        "        }#T_332f6f04_1d89_11eb_aafb_525400e133c8row3_col10,#T_332f6f04_1d89_11eb_aafb_525400e133c8row10_col3{\n",
        "            background-color:  #d2d3e7;\n",
        "            color:  #000000;\n",
        "        }#T_332f6f04_1d89_11eb_aafb_525400e133c8row3_col11,#T_332f6f04_1d89_11eb_aafb_525400e133c8row11_col3{\n",
        "            background-color:  #c2cbe2;\n",
        "            color:  #000000;\n",
        "        }#T_332f6f04_1d89_11eb_aafb_525400e133c8row3_col12,#T_332f6f04_1d89_11eb_aafb_525400e133c8row12_col3{\n",
        "            background-color:  #a4bcda;\n",
        "            color:  #000000;\n",
        "        }#T_332f6f04_1d89_11eb_aafb_525400e133c8row3_col13,#T_332f6f04_1d89_11eb_aafb_525400e133c8row13_col3{\n",
        "            background-color:  #fff7fb;\n",
        "            color:  #000000;\n",
        "        }#T_332f6f04_1d89_11eb_aafb_525400e133c8row3_col15,#T_332f6f04_1d89_11eb_aafb_525400e133c8row15_col3{\n",
        "            background-color:  #f8f1f8;\n",
        "            color:  #000000;\n",
        "        }#T_332f6f04_1d89_11eb_aafb_525400e133c8row3_col16,#T_332f6f04_1d89_11eb_aafb_525400e133c8row16_col3{\n",
        "            background-color:  #bfc9e1;\n",
        "            color:  #000000;\n",
        "        }#T_332f6f04_1d89_11eb_aafb_525400e133c8row4_col5,#T_332f6f04_1d89_11eb_aafb_525400e133c8row5_col4{\n",
        "            background-color:  #97b7d7;\n",
        "            color:  #000000;\n",
        "        }#T_332f6f04_1d89_11eb_aafb_525400e133c8row4_col6,#T_332f6f04_1d89_11eb_aafb_525400e133c8row6_col4{\n",
        "            background-color:  #bbc7e0;\n",
        "            color:  #000000;\n",
        "        }#T_332f6f04_1d89_11eb_aafb_525400e133c8row4_col7,#T_332f6f04_1d89_11eb_aafb_525400e133c8row7_col4{\n",
        "            background-color:  #93b5d6;\n",
        "            color:  #000000;\n",
        "        }#T_332f6f04_1d89_11eb_aafb_525400e133c8row4_col10,#T_332f6f04_1d89_11eb_aafb_525400e133c8row10_col4,#T_332f6f04_1d89_11eb_aafb_525400e133c8row12_col14,#T_332f6f04_1d89_11eb_aafb_525400e133c8row14_col12{\n",
        "            background-color:  #a1bbda;\n",
        "            color:  #000000;\n",
        "        }#T_332f6f04_1d89_11eb_aafb_525400e133c8row4_col11,#T_332f6f04_1d89_11eb_aafb_525400e133c8row11_col4{\n",
        "            background-color:  #80aed2;\n",
        "            color:  #000000;\n",
        "        }#T_332f6f04_1d89_11eb_aafb_525400e133c8row4_col12,#T_332f6f04_1d89_11eb_aafb_525400e133c8row12_col4{\n",
        "            background-color:  #b0c2de;\n",
        "            color:  #000000;\n",
        "        }#T_332f6f04_1d89_11eb_aafb_525400e133c8row4_col13,#T_332f6f04_1d89_11eb_aafb_525400e133c8row13_col4{\n",
        "            background-color:  #cdd0e5;\n",
        "            color:  #000000;\n",
        "        }#T_332f6f04_1d89_11eb_aafb_525400e133c8row4_col14,#T_332f6f04_1d89_11eb_aafb_525400e133c8row14_col4{\n",
        "            background-color:  #d0d1e6;\n",
        "            color:  #000000;\n",
        "        }#T_332f6f04_1d89_11eb_aafb_525400e133c8row4_col15,#T_332f6f04_1d89_11eb_aafb_525400e133c8row15_col4{\n",
        "            background-color:  #c4cbe3;\n",
        "            color:  #000000;\n",
        "        }#T_332f6f04_1d89_11eb_aafb_525400e133c8row4_col16,#T_332f6f04_1d89_11eb_aafb_525400e133c8row16_col4{\n",
        "            background-color:  #8bb2d4;\n",
        "            color:  #000000;\n",
        "        }#T_332f6f04_1d89_11eb_aafb_525400e133c8row5_col6,#T_332f6f04_1d89_11eb_aafb_525400e133c8row5_col10,#T_332f6f04_1d89_11eb_aafb_525400e133c8row5_col16,#T_332f6f04_1d89_11eb_aafb_525400e133c8row6_col5,#T_332f6f04_1d89_11eb_aafb_525400e133c8row10_col5,#T_332f6f04_1d89_11eb_aafb_525400e133c8row16_col5{\n",
        "            background-color:  #045b8f;\n",
        "            color:  #f1f1f1;\n",
        "        }#T_332f6f04_1d89_11eb_aafb_525400e133c8row5_col7,#T_332f6f04_1d89_11eb_aafb_525400e133c8row6_col10,#T_332f6f04_1d89_11eb_aafb_525400e133c8row7_col5,#T_332f6f04_1d89_11eb_aafb_525400e133c8row10_col6{\n",
        "            background-color:  #045b8e;\n",
        "            color:  #f1f1f1;\n",
        "        }#T_332f6f04_1d89_11eb_aafb_525400e133c8row5_col8,#T_332f6f04_1d89_11eb_aafb_525400e133c8row6_col7,#T_332f6f04_1d89_11eb_aafb_525400e133c8row7_col6,#T_332f6f04_1d89_11eb_aafb_525400e133c8row7_col10,#T_332f6f04_1d89_11eb_aafb_525400e133c8row8_col5,#T_332f6f04_1d89_11eb_aafb_525400e133c8row10_col7{\n",
        "            background-color:  #046299;\n",
        "            color:  #f1f1f1;\n",
        "        }#T_332f6f04_1d89_11eb_aafb_525400e133c8row5_col9,#T_332f6f04_1d89_11eb_aafb_525400e133c8row8_col9,#T_332f6f04_1d89_11eb_aafb_525400e133c8row9_col5,#T_332f6f04_1d89_11eb_aafb_525400e133c8row9_col8{\n",
        "            background-color:  #83afd3;\n",
        "            color:  #000000;\n",
        "        }#T_332f6f04_1d89_11eb_aafb_525400e133c8row5_col11,#T_332f6f04_1d89_11eb_aafb_525400e133c8row8_col15,#T_332f6f04_1d89_11eb_aafb_525400e133c8row11_col5,#T_332f6f04_1d89_11eb_aafb_525400e133c8row15_col8{\n",
        "            background-color:  #69a5cc;\n",
        "            color:  #000000;\n",
        "        }#T_332f6f04_1d89_11eb_aafb_525400e133c8row5_col12,#T_332f6f04_1d89_11eb_aafb_525400e133c8row12_col5{\n",
        "            background-color:  #1e80b8;\n",
        "            color:  #000000;\n",
        "        }#T_332f6f04_1d89_11eb_aafb_525400e133c8row5_col13,#T_332f6f04_1d89_11eb_aafb_525400e133c8row13_col5,#T_332f6f04_1d89_11eb_aafb_525400e133c8row14_col15,#T_332f6f04_1d89_11eb_aafb_525400e133c8row15_col14{\n",
        "            background-color:  #0567a2;\n",
        "            color:  #f1f1f1;\n",
        "        }#T_332f6f04_1d89_11eb_aafb_525400e133c8row5_col14,#T_332f6f04_1d89_11eb_aafb_525400e133c8row14_col5{\n",
        "            background-color:  #529bc7;\n",
        "            color:  #000000;\n",
        "        }#T_332f6f04_1d89_11eb_aafb_525400e133c8row5_col15,#T_332f6f04_1d89_11eb_aafb_525400e133c8row12_col13,#T_332f6f04_1d89_11eb_aafb_525400e133c8row13_col12,#T_332f6f04_1d89_11eb_aafb_525400e133c8row15_col5{\n",
        "            background-color:  #2d8abd;\n",
        "            color:  #000000;\n",
        "        }#T_332f6f04_1d89_11eb_aafb_525400e133c8row6_col8,#T_332f6f04_1d89_11eb_aafb_525400e133c8row8_col6{\n",
        "            background-color:  #0566a0;\n",
        "            color:  #f1f1f1;\n",
        "        }#T_332f6f04_1d89_11eb_aafb_525400e133c8row6_col9,#T_332f6f04_1d89_11eb_aafb_525400e133c8row9_col6{\n",
        "            background-color:  #9cb9d9;\n",
        "            color:  #000000;\n",
        "        }#T_332f6f04_1d89_11eb_aafb_525400e133c8row6_col12,#T_332f6f04_1d89_11eb_aafb_525400e133c8row12_col6{\n",
        "            background-color:  #358fc0;\n",
        "            color:  #000000;\n",
        "        }#T_332f6f04_1d89_11eb_aafb_525400e133c8row6_col13,#T_332f6f04_1d89_11eb_aafb_525400e133c8row7_col13,#T_332f6f04_1d89_11eb_aafb_525400e133c8row13_col6,#T_332f6f04_1d89_11eb_aafb_525400e133c8row13_col7{\n",
        "            background-color:  #056ba9;\n",
        "            color:  #f1f1f1;\n",
        "        }#T_332f6f04_1d89_11eb_aafb_525400e133c8row6_col14,#T_332f6f04_1d89_11eb_aafb_525400e133c8row14_col6{\n",
        "            background-color:  #4295c3;\n",
        "            color:  #000000;\n",
        "        }#T_332f6f04_1d89_11eb_aafb_525400e133c8row6_col15,#T_332f6f04_1d89_11eb_aafb_525400e133c8row15_col6{\n",
        "            background-color:  #2c89bd;\n",
        "            color:  #000000;\n",
        "        }#T_332f6f04_1d89_11eb_aafb_525400e133c8row6_col16,#T_332f6f04_1d89_11eb_aafb_525400e133c8row16_col6{\n",
        "            background-color:  #0569a5;\n",
        "            color:  #f1f1f1;\n",
        "        }#T_332f6f04_1d89_11eb_aafb_525400e133c8row7_col8,#T_332f6f04_1d89_11eb_aafb_525400e133c8row8_col7{\n",
        "            background-color:  #046198;\n",
        "            color:  #f1f1f1;\n",
        "        }#T_332f6f04_1d89_11eb_aafb_525400e133c8row7_col9,#T_332f6f04_1d89_11eb_aafb_525400e133c8row9_col7{\n",
        "            background-color:  #8eb3d5;\n",
        "            color:  #000000;\n",
        "        }#T_332f6f04_1d89_11eb_aafb_525400e133c8row7_col11,#T_332f6f04_1d89_11eb_aafb_525400e133c8row10_col11,#T_332f6f04_1d89_11eb_aafb_525400e133c8row11_col7,#T_332f6f04_1d89_11eb_aafb_525400e133c8row11_col10{\n",
        "            background-color:  #75a9cf;\n",
        "            color:  #000000;\n",
        "        }#T_332f6f04_1d89_11eb_aafb_525400e133c8row7_col12,#T_332f6f04_1d89_11eb_aafb_525400e133c8row12_col7,#T_332f6f04_1d89_11eb_aafb_525400e133c8row13_col16,#T_332f6f04_1d89_11eb_aafb_525400e133c8row16_col13{\n",
        "            background-color:  #056ead;\n",
        "            color:  #f1f1f1;\n",
        "        }#T_332f6f04_1d89_11eb_aafb_525400e133c8row7_col14,#T_332f6f04_1d89_11eb_aafb_525400e133c8row14_col7{\n",
        "            background-color:  #84b0d3;\n",
        "            color:  #000000;\n",
        "        }#T_332f6f04_1d89_11eb_aafb_525400e133c8row7_col15,#T_332f6f04_1d89_11eb_aafb_525400e133c8row15_col7{\n",
        "            background-color:  #5c9fc9;\n",
        "            color:  #000000;\n",
        "        }#T_332f6f04_1d89_11eb_aafb_525400e133c8row7_col16,#T_332f6f04_1d89_11eb_aafb_525400e133c8row16_col7{\n",
        "            background-color:  #04598c;\n",
        "            color:  #f1f1f1;\n",
        "        }#T_332f6f04_1d89_11eb_aafb_525400e133c8row8_col11,#T_332f6f04_1d89_11eb_aafb_525400e133c8row11_col8{\n",
        "            background-color:  #71a8ce;\n",
        "            color:  #000000;\n",
        "        }#T_332f6f04_1d89_11eb_aafb_525400e133c8row8_col12,#T_332f6f04_1d89_11eb_aafb_525400e133c8row12_col8{\n",
        "            background-color:  #1379b5;\n",
        "            color:  #f1f1f1;\n",
        "        }#T_332f6f04_1d89_11eb_aafb_525400e133c8row8_col13,#T_332f6f04_1d89_11eb_aafb_525400e133c8row13_col8{\n",
        "            background-color:  #0f76b3;\n",
        "            color:  #f1f1f1;\n",
        "        }#T_332f6f04_1d89_11eb_aafb_525400e133c8row8_col14,#T_332f6f04_1d89_11eb_aafb_525400e133c8row14_col8{\n",
        "            background-color:  #7eadd1;\n",
        "            color:  #000000;\n",
        "        }#T_332f6f04_1d89_11eb_aafb_525400e133c8row9_col10,#T_332f6f04_1d89_11eb_aafb_525400e133c8row10_col9{\n",
        "            background-color:  #89b1d4;\n",
        "            color:  #000000;\n",
        "        }#T_332f6f04_1d89_11eb_aafb_525400e133c8row9_col11,#T_332f6f04_1d89_11eb_aafb_525400e133c8row11_col9{\n",
        "            background-color:  #4897c4;\n",
        "            color:  #000000;\n",
        "        }#T_332f6f04_1d89_11eb_aafb_525400e133c8row9_col13,#T_332f6f04_1d89_11eb_aafb_525400e133c8row13_col9{\n",
        "            background-color:  #589ec8;\n",
        "            color:  #000000;\n",
        "        }#T_332f6f04_1d89_11eb_aafb_525400e133c8row9_col14,#T_332f6f04_1d89_11eb_aafb_525400e133c8row14_col9{\n",
        "            background-color:  #b4c4df;\n",
        "            color:  #000000;\n",
        "        }#T_332f6f04_1d89_11eb_aafb_525400e133c8row9_col15,#T_332f6f04_1d89_11eb_aafb_525400e133c8row15_col9{\n",
        "            background-color:  #9fbad9;\n",
        "            color:  #000000;\n",
        "        }#T_332f6f04_1d89_11eb_aafb_525400e133c8row9_col16,#T_332f6f04_1d89_11eb_aafb_525400e133c8row12_col15,#T_332f6f04_1d89_11eb_aafb_525400e133c8row15_col12,#T_332f6f04_1d89_11eb_aafb_525400e133c8row16_col9{\n",
        "            background-color:  #7dacd1;\n",
        "            color:  #000000;\n",
        "        }#T_332f6f04_1d89_11eb_aafb_525400e133c8row10_col12,#T_332f6f04_1d89_11eb_aafb_525400e133c8row12_col10{\n",
        "            background-color:  #2383ba;\n",
        "            color:  #000000;\n",
        "        }#T_332f6f04_1d89_11eb_aafb_525400e133c8row10_col13,#T_332f6f04_1d89_11eb_aafb_525400e133c8row13_col10{\n",
        "            background-color:  #157ab5;\n",
        "            color:  #000000;\n",
        "        }#T_332f6f04_1d89_11eb_aafb_525400e133c8row10_col14,#T_332f6f04_1d89_11eb_aafb_525400e133c8row14_col10{\n",
        "            background-color:  #5ea0ca;\n",
        "            color:  #000000;\n",
        "        }#T_332f6f04_1d89_11eb_aafb_525400e133c8row10_col15,#T_332f6f04_1d89_11eb_aafb_525400e133c8row15_col10{\n",
        "            background-color:  #4a98c5;\n",
        "            color:  #000000;\n",
        "        }#T_332f6f04_1d89_11eb_aafb_525400e133c8row10_col16,#T_332f6f04_1d89_11eb_aafb_525400e133c8row16_col10{\n",
        "            background-color:  #04629a;\n",
        "            color:  #f1f1f1;\n",
        "        }#T_332f6f04_1d89_11eb_aafb_525400e133c8row11_col12,#T_332f6f04_1d89_11eb_aafb_525400e133c8row12_col11{\n",
        "            background-color:  #88b1d4;\n",
        "            color:  #000000;\n",
        "        }#T_332f6f04_1d89_11eb_aafb_525400e133c8row11_col13,#T_332f6f04_1d89_11eb_aafb_525400e133c8row13_col11{\n",
        "            background-color:  #91b5d6;\n",
        "            color:  #000000;\n",
        "        }#T_332f6f04_1d89_11eb_aafb_525400e133c8row11_col16,#T_332f6f04_1d89_11eb_aafb_525400e133c8row16_col11{\n",
        "            background-color:  #348ebf;\n",
        "            color:  #000000;\n",
        "        }#T_332f6f04_1d89_11eb_aafb_525400e133c8row12_col16,#T_332f6f04_1d89_11eb_aafb_525400e133c8row16_col12{\n",
        "            background-color:  #04649d;\n",
        "            color:  #f1f1f1;\n",
        "        }#T_332f6f04_1d89_11eb_aafb_525400e133c8row13_col14,#T_332f6f04_1d89_11eb_aafb_525400e133c8row14_col13{\n",
        "            background-color:  #2987bc;\n",
        "            color:  #000000;\n",
        "        }#T_332f6f04_1d89_11eb_aafb_525400e133c8row13_col15,#T_332f6f04_1d89_11eb_aafb_525400e133c8row15_col13{\n",
        "            background-color:  #1278b4;\n",
        "            color:  #f1f1f1;\n",
        "        }#T_332f6f04_1d89_11eb_aafb_525400e133c8row14_col16,#T_332f6f04_1d89_11eb_aafb_525400e133c8row16_col14{\n",
        "            background-color:  #a2bcda;\n",
        "            color:  #000000;\n",
        "        }#T_332f6f04_1d89_11eb_aafb_525400e133c8row15_col16,#T_332f6f04_1d89_11eb_aafb_525400e133c8row16_col15{\n",
        "            background-color:  #62a2cb;\n",
        "            color:  #000000;\n",
        "        }</style><table id=\"T_332f6f04_1d89_11eb_aafb_525400e133c8\" ><thead>    <tr>        <th class=\"blank level0\" ></th>        <th class=\"col_heading level0 col0\" >Rt</th>        <th class=\"col_heading level0 col1\" >theta</th>        <th class=\"col_heading level0 col2\" >kappa</th>        <th class=\"col_heading level0 col3\" >rho</th>        <th class=\"col_heading level0 col4\" >sigma</th>        <th class=\"col_heading level0 col5\" >School_closing</th>        <th class=\"col_heading level0 col6\" >Workplace_closing</th>        <th class=\"col_heading level0 col7\" >Cancel_events</th>        <th class=\"col_heading level0 col8\" >Gatherings_restrictions</th>        <th class=\"col_heading level0 col9\" >Transport_closing</th>        <th class=\"col_heading level0 col10\" >Stay_home_restrictions</th>        <th class=\"col_heading level0 col11\" >Internal_movement_restrictions</th>        <th class=\"col_heading level0 col12\" >International_movement_restrictions</th>        <th class=\"col_heading level0 col13\" >Information_campaigns</th>        <th class=\"col_heading level0 col14\" >Testing_policy</th>        <th class=\"col_heading level0 col15\" >Contact_tracing</th>        <th class=\"col_heading level0 col16\" >Stringency_index</th>    </tr></thead><tbody>\n",
        "                <tr>\n",
        "                        <th id=\"T_332f6f04_1d89_11eb_aafb_525400e133c8level0_row0\" class=\"row_heading level0 row0\" >Rt</th>\n",
        "                        <td id=\"T_332f6f04_1d89_11eb_aafb_525400e133c8row0_col0\" class=\"data row0 col0\" >1.000000</td>\n",
        "                        <td id=\"T_332f6f04_1d89_11eb_aafb_525400e133c8row0_col1\" class=\"data row0 col1\" >-0.138020</td>\n",
        "                        <td id=\"T_332f6f04_1d89_11eb_aafb_525400e133c8row0_col2\" class=\"data row0 col2\" >-0.146389</td>\n",
        "                        <td id=\"T_332f6f04_1d89_11eb_aafb_525400e133c8row0_col3\" class=\"data row0 col3\" >-0.102697</td>\n",
        "                        <td id=\"T_332f6f04_1d89_11eb_aafb_525400e133c8row0_col4\" class=\"data row0 col4\" >-0.281272</td>\n",
        "                        <td id=\"T_332f6f04_1d89_11eb_aafb_525400e133c8row0_col5\" class=\"data row0 col5\" >-0.266200</td>\n",
        "                        <td id=\"T_332f6f04_1d89_11eb_aafb_525400e133c8row0_col6\" class=\"data row0 col6\" >-0.138508</td>\n",
        "                        <td id=\"T_332f6f04_1d89_11eb_aafb_525400e133c8row0_col7\" class=\"data row0 col7\" >-0.249500</td>\n",
        "                        <td id=\"T_332f6f04_1d89_11eb_aafb_525400e133c8row0_col8\" class=\"data row0 col8\" >-0.241369</td>\n",
        "                        <td id=\"T_332f6f04_1d89_11eb_aafb_525400e133c8row0_col9\" class=\"data row0 col9\" >0.153254</td>\n",
        "                        <td id=\"T_332f6f04_1d89_11eb_aafb_525400e133c8row0_col10\" class=\"data row0 col10\" >-0.211794</td>\n",
        "                        <td id=\"T_332f6f04_1d89_11eb_aafb_525400e133c8row0_col11\" class=\"data row0 col11\" >-0.272057</td>\n",
        "                        <td id=\"T_332f6f04_1d89_11eb_aafb_525400e133c8row0_col12\" class=\"data row0 col12\" >-0.227218</td>\n",
        "                        <td id=\"T_332f6f04_1d89_11eb_aafb_525400e133c8row0_col13\" class=\"data row0 col13\" >0.097319</td>\n",
        "                        <td id=\"T_332f6f04_1d89_11eb_aafb_525400e133c8row0_col14\" class=\"data row0 col14\" >0.087617</td>\n",
        "                        <td id=\"T_332f6f04_1d89_11eb_aafb_525400e133c8row0_col15\" class=\"data row0 col15\" >-0.074232</td>\n",
        "                        <td id=\"T_332f6f04_1d89_11eb_aafb_525400e133c8row0_col16\" class=\"data row0 col16\" >-0.313635</td>\n",
        "            </tr>\n",
        "            <tr>\n",
        "                        <th id=\"T_332f6f04_1d89_11eb_aafb_525400e133c8level0_row1\" class=\"row_heading level0 row1\" >theta</th>\n",
        "                        <td id=\"T_332f6f04_1d89_11eb_aafb_525400e133c8row1_col0\" class=\"data row1 col0\" >-0.138020</td>\n",
        "                        <td id=\"T_332f6f04_1d89_11eb_aafb_525400e133c8row1_col1\" class=\"data row1 col1\" >1.000000</td>\n",
        "                        <td id=\"T_332f6f04_1d89_11eb_aafb_525400e133c8row1_col2\" class=\"data row1 col2\" >0.971543</td>\n",
        "                        <td id=\"T_332f6f04_1d89_11eb_aafb_525400e133c8row1_col3\" class=\"data row1 col3\" >0.722690</td>\n",
        "                        <td id=\"T_332f6f04_1d89_11eb_aafb_525400e133c8row1_col4\" class=\"data row1 col4\" >0.032947</td>\n",
        "                        <td id=\"T_332f6f04_1d89_11eb_aafb_525400e133c8row1_col5\" class=\"data row1 col5\" >-0.158807</td>\n",
        "                        <td id=\"T_332f6f04_1d89_11eb_aafb_525400e133c8row1_col6\" class=\"data row1 col6\" >-0.088824</td>\n",
        "                        <td id=\"T_332f6f04_1d89_11eb_aafb_525400e133c8row1_col7\" class=\"data row1 col7\" >-0.118554</td>\n",
        "                        <td id=\"T_332f6f04_1d89_11eb_aafb_525400e133c8row1_col8\" class=\"data row1 col8\" >-0.228883</td>\n",
        "                        <td id=\"T_332f6f04_1d89_11eb_aafb_525400e133c8row1_col9\" class=\"data row1 col9\" >-0.346213</td>\n",
        "                        <td id=\"T_332f6f04_1d89_11eb_aafb_525400e133c8row1_col10\" class=\"data row1 col10\" >-0.057724</td>\n",
        "                        <td id=\"T_332f6f04_1d89_11eb_aafb_525400e133c8row1_col11\" class=\"data row1 col11\" >-0.160225</td>\n",
        "                        <td id=\"T_332f6f04_1d89_11eb_aafb_525400e133c8row1_col12\" class=\"data row1 col12\" >0.152994</td>\n",
        "                        <td id=\"T_332f6f04_1d89_11eb_aafb_525400e133c8row1_col13\" class=\"data row1 col13\" >-0.321672</td>\n",
        "                        <td id=\"T_332f6f04_1d89_11eb_aafb_525400e133c8row1_col14\" class=\"data row1 col14\" >-0.138425</td>\n",
        "                        <td id=\"T_332f6f04_1d89_11eb_aafb_525400e133c8row1_col15\" class=\"data row1 col15\" >-0.046741</td>\n",
        "                        <td id=\"T_332f6f04_1d89_11eb_aafb_525400e133c8row1_col16\" class=\"data row1 col16\" >0.012216</td>\n",
        "            </tr>\n",
        "            <tr>\n",
        "                        <th id=\"T_332f6f04_1d89_11eb_aafb_525400e133c8level0_row2\" class=\"row_heading level0 row2\" >kappa</th>\n",
        "                        <td id=\"T_332f6f04_1d89_11eb_aafb_525400e133c8row2_col0\" class=\"data row2 col0\" >-0.146389</td>\n",
        "                        <td id=\"T_332f6f04_1d89_11eb_aafb_525400e133c8row2_col1\" class=\"data row2 col1\" >0.971543</td>\n",
        "                        <td id=\"T_332f6f04_1d89_11eb_aafb_525400e133c8row2_col2\" class=\"data row2 col2\" >1.000000</td>\n",
        "                        <td id=\"T_332f6f04_1d89_11eb_aafb_525400e133c8row2_col3\" class=\"data row2 col3\" >0.736659</td>\n",
        "                        <td id=\"T_332f6f04_1d89_11eb_aafb_525400e133c8row2_col4\" class=\"data row2 col4\" >0.025905</td>\n",
        "                        <td id=\"T_332f6f04_1d89_11eb_aafb_525400e133c8row2_col5\" class=\"data row2 col5\" >-0.165661</td>\n",
        "                        <td id=\"T_332f6f04_1d89_11eb_aafb_525400e133c8row2_col6\" class=\"data row2 col6\" >-0.108072</td>\n",
        "                        <td id=\"T_332f6f04_1d89_11eb_aafb_525400e133c8row2_col7\" class=\"data row2 col7\" >-0.121687</td>\n",
        "                        <td id=\"T_332f6f04_1d89_11eb_aafb_525400e133c8row2_col8\" class=\"data row2 col8\" >-0.203906</td>\n",
        "                        <td id=\"T_332f6f04_1d89_11eb_aafb_525400e133c8row2_col9\" class=\"data row2 col9\" >-0.368013</td>\n",
        "                        <td id=\"T_332f6f04_1d89_11eb_aafb_525400e133c8row2_col10\" class=\"data row2 col10\" >-0.059306</td>\n",
        "                        <td id=\"T_332f6f04_1d89_11eb_aafb_525400e133c8row2_col11\" class=\"data row2 col11\" >-0.196297</td>\n",
        "                        <td id=\"T_332f6f04_1d89_11eb_aafb_525400e133c8row2_col12\" class=\"data row2 col12\" >0.181316</td>\n",
        "                        <td id=\"T_332f6f04_1d89_11eb_aafb_525400e133c8row2_col13\" class=\"data row2 col13\" >-0.325004</td>\n",
        "                        <td id=\"T_332f6f04_1d89_11eb_aafb_525400e133c8row2_col14\" class=\"data row2 col14\" >-0.112590</td>\n",
        "                        <td id=\"T_332f6f04_1d89_11eb_aafb_525400e133c8row2_col15\" class=\"data row2 col15\" >-0.024279</td>\n",
        "                        <td id=\"T_332f6f04_1d89_11eb_aafb_525400e133c8row2_col16\" class=\"data row2 col16\" >-0.005399</td>\n",
        "            </tr>\n",
        "            <tr>\n",
        "                        <th id=\"T_332f6f04_1d89_11eb_aafb_525400e133c8level0_row3\" class=\"row_heading level0 row3\" >rho</th>\n",
        "                        <td id=\"T_332f6f04_1d89_11eb_aafb_525400e133c8row3_col0\" class=\"data row3 col0\" >-0.102697</td>\n",
        "                        <td id=\"T_332f6f04_1d89_11eb_aafb_525400e133c8row3_col1\" class=\"data row3 col1\" >0.722690</td>\n",
        "                        <td id=\"T_332f6f04_1d89_11eb_aafb_525400e133c8row3_col2\" class=\"data row3 col2\" >0.736659</td>\n",
        "                        <td id=\"T_332f6f04_1d89_11eb_aafb_525400e133c8row3_col3\" class=\"data row3 col3\" >1.000000</td>\n",
        "                        <td id=\"T_332f6f04_1d89_11eb_aafb_525400e133c8row3_col4\" class=\"data row3 col4\" >0.298030</td>\n",
        "                        <td id=\"T_332f6f04_1d89_11eb_aafb_525400e133c8row3_col5\" class=\"data row3 col5\" >-0.221187</td>\n",
        "                        <td id=\"T_332f6f04_1d89_11eb_aafb_525400e133c8row3_col6\" class=\"data row3 col6\" >-0.214726</td>\n",
        "                        <td id=\"T_332f6f04_1d89_11eb_aafb_525400e133c8row3_col7\" class=\"data row3 col7\" >-0.087383</td>\n",
        "                        <td id=\"T_332f6f04_1d89_11eb_aafb_525400e133c8row3_col8\" class=\"data row3 col8\" >-0.194944</td>\n",
        "                        <td id=\"T_332f6f04_1d89_11eb_aafb_525400e133c8row3_col9\" class=\"data row3 col9\" >-0.329391</td>\n",
        "                        <td id=\"T_332f6f04_1d89_11eb_aafb_525400e133c8row3_col10\" class=\"data row3 col10\" >-0.065431</td>\n",
        "                        <td id=\"T_332f6f04_1d89_11eb_aafb_525400e133c8row3_col11\" class=\"data row3 col11\" >0.002912</td>\n",
        "                        <td id=\"T_332f6f04_1d89_11eb_aafb_525400e133c8row3_col12\" class=\"data row3 col12\" >0.127344</td>\n",
        "                        <td id=\"T_332f6f04_1d89_11eb_aafb_525400e133c8row3_col13\" class=\"data row3 col13\" >-0.405041</td>\n",
        "                        <td id=\"T_332f6f04_1d89_11eb_aafb_525400e133c8row3_col14\" class=\"data row3 col14\" >-0.366712</td>\n",
        "                        <td id=\"T_332f6f04_1d89_11eb_aafb_525400e133c8row3_col15\" class=\"data row3 col15\" >-0.334412</td>\n",
        "                        <td id=\"T_332f6f04_1d89_11eb_aafb_525400e133c8row3_col16\" class=\"data row3 col16\" >0.020257</td>\n",
        "            </tr>\n",
        "            <tr>\n",
        "                        <th id=\"T_332f6f04_1d89_11eb_aafb_525400e133c8level0_row4\" class=\"row_heading level0 row4\" >sigma</th>\n",
        "                        <td id=\"T_332f6f04_1d89_11eb_aafb_525400e133c8row4_col0\" class=\"data row4 col0\" >-0.281272</td>\n",
        "                        <td id=\"T_332f6f04_1d89_11eb_aafb_525400e133c8row4_col1\" class=\"data row4 col1\" >0.032947</td>\n",
        "                        <td id=\"T_332f6f04_1d89_11eb_aafb_525400e133c8row4_col2\" class=\"data row4 col2\" >0.025905</td>\n",
        "                        <td id=\"T_332f6f04_1d89_11eb_aafb_525400e133c8row4_col3\" class=\"data row4 col3\" >0.298030</td>\n",
        "                        <td id=\"T_332f6f04_1d89_11eb_aafb_525400e133c8row4_col4\" class=\"data row4 col4\" >1.000000</td>\n",
        "                        <td id=\"T_332f6f04_1d89_11eb_aafb_525400e133c8row4_col5\" class=\"data row4 col5\" >0.172406</td>\n",
        "                        <td id=\"T_332f6f04_1d89_11eb_aafb_525400e133c8row4_col6\" class=\"data row4 col6\" >0.038621</td>\n",
        "                        <td id=\"T_332f6f04_1d89_11eb_aafb_525400e133c8row4_col7\" class=\"data row4 col7\" >0.191086</td>\n",
        "                        <td id=\"T_332f6f04_1d89_11eb_aafb_525400e133c8row4_col8\" class=\"data row4 col8\" >0.086166</td>\n",
        "                        <td id=\"T_332f6f04_1d89_11eb_aafb_525400e133c8row4_col9\" class=\"data row4 col9\" >-0.024777</td>\n",
        "                        <td id=\"T_332f6f04_1d89_11eb_aafb_525400e133c8row4_col10\" class=\"data row4 col10\" >0.139528</td>\n",
        "                        <td id=\"T_332f6f04_1d89_11eb_aafb_525400e133c8row4_col11\" class=\"data row4 col11\" >0.258491</td>\n",
        "                        <td id=\"T_332f6f04_1d89_11eb_aafb_525400e133c8row4_col12\" class=\"data row4 col12\" >0.078338</td>\n",
        "                        <td id=\"T_332f6f04_1d89_11eb_aafb_525400e133c8row4_col13\" class=\"data row4 col13\" >-0.039260</td>\n",
        "                        <td id=\"T_332f6f04_1d89_11eb_aafb_525400e133c8row4_col14\" class=\"data row4 col14\" >-0.051832</td>\n",
        "                        <td id=\"T_332f6f04_1d89_11eb_aafb_525400e133c8row4_col15\" class=\"data row4 col15\" >0.000122</td>\n",
        "                        <td id=\"T_332f6f04_1d89_11eb_aafb_525400e133c8row4_col16\" class=\"data row4 col16\" >0.215551</td>\n",
        "            </tr>\n",
        "            <tr>\n",
        "                        <th id=\"T_332f6f04_1d89_11eb_aafb_525400e133c8level0_row5\" class=\"row_heading level0 row5\" >School_closing</th>\n",
        "                        <td id=\"T_332f6f04_1d89_11eb_aafb_525400e133c8row5_col0\" class=\"data row5 col0\" >-0.266200</td>\n",
        "                        <td id=\"T_332f6f04_1d89_11eb_aafb_525400e133c8row5_col1\" class=\"data row5 col1\" >-0.158807</td>\n",
        "                        <td id=\"T_332f6f04_1d89_11eb_aafb_525400e133c8row5_col2\" class=\"data row5 col2\" >-0.165661</td>\n",
        "                        <td id=\"T_332f6f04_1d89_11eb_aafb_525400e133c8row5_col3\" class=\"data row5 col3\" >-0.221187</td>\n",
        "                        <td id=\"T_332f6f04_1d89_11eb_aafb_525400e133c8row5_col4\" class=\"data row5 col4\" >0.172406</td>\n",
        "                        <td id=\"T_332f6f04_1d89_11eb_aafb_525400e133c8row5_col5\" class=\"data row5 col5\" >1.000000</td>\n",
        "                        <td id=\"T_332f6f04_1d89_11eb_aafb_525400e133c8row5_col6\" class=\"data row5 col6\" >0.810279</td>\n",
        "                        <td id=\"T_332f6f04_1d89_11eb_aafb_525400e133c8row5_col7\" class=\"data row5 col7\" >0.814637</td>\n",
        "                        <td id=\"T_332f6f04_1d89_11eb_aafb_525400e133c8row5_col8\" class=\"data row5 col8\" >0.758857</td>\n",
        "                        <td id=\"T_332f6f04_1d89_11eb_aafb_525400e133c8row5_col9\" class=\"data row5 col9\" >0.246443</td>\n",
        "                        <td id=\"T_332f6f04_1d89_11eb_aafb_525400e133c8row5_col10\" class=\"data row5 col10\" >0.808699</td>\n",
        "                        <td id=\"T_332f6f04_1d89_11eb_aafb_525400e133c8row5_col11\" class=\"data row5 col11\" >0.329760</td>\n",
        "                        <td id=\"T_332f6f04_1d89_11eb_aafb_525400e133c8row5_col12\" class=\"data row5 col12\" >0.560330</td>\n",
        "                        <td id=\"T_332f6f04_1d89_11eb_aafb_525400e133c8row5_col13\" class=\"data row5 col13\" >0.716926</td>\n",
        "                        <td id=\"T_332f6f04_1d89_11eb_aafb_525400e133c8row5_col14\" class=\"data row5 col14\" >0.393836</td>\n",
        "                        <td id=\"T_332f6f04_1d89_11eb_aafb_525400e133c8row5_col15\" class=\"data row5 col15\" >0.501913</td>\n",
        "                        <td id=\"T_332f6f04_1d89_11eb_aafb_525400e133c8row5_col16\" class=\"data row5 col16\" >0.810409</td>\n",
        "            </tr>\n",
        "            <tr>\n",
        "                        <th id=\"T_332f6f04_1d89_11eb_aafb_525400e133c8level0_row6\" class=\"row_heading level0 row6\" >Workplace_closing</th>\n",
        "                        <td id=\"T_332f6f04_1d89_11eb_aafb_525400e133c8row6_col0\" class=\"data row6 col0\" >-0.138508</td>\n",
        "                        <td id=\"T_332f6f04_1d89_11eb_aafb_525400e133c8row6_col1\" class=\"data row6 col1\" >-0.088824</td>\n",
        "                        <td id=\"T_332f6f04_1d89_11eb_aafb_525400e133c8row6_col2\" class=\"data row6 col2\" >-0.108072</td>\n",
        "                        <td id=\"T_332f6f04_1d89_11eb_aafb_525400e133c8row6_col3\" class=\"data row6 col3\" >-0.214726</td>\n",
        "                        <td id=\"T_332f6f04_1d89_11eb_aafb_525400e133c8row6_col4\" class=\"data row6 col4\" >0.038621</td>\n",
        "                        <td id=\"T_332f6f04_1d89_11eb_aafb_525400e133c8row6_col5\" class=\"data row6 col5\" >0.810279</td>\n",
        "                        <td id=\"T_332f6f04_1d89_11eb_aafb_525400e133c8row6_col6\" class=\"data row6 col6\" >1.000000</td>\n",
        "                        <td id=\"T_332f6f04_1d89_11eb_aafb_525400e133c8row6_col7\" class=\"data row6 col7\" >0.760656</td>\n",
        "                        <td id=\"T_332f6f04_1d89_11eb_aafb_525400e133c8row6_col8\" class=\"data row6 col8\" >0.730936</td>\n",
        "                        <td id=\"T_332f6f04_1d89_11eb_aafb_525400e133c8row6_col9\" class=\"data row6 col9\" >0.159044</td>\n",
        "                        <td id=\"T_332f6f04_1d89_11eb_aafb_525400e133c8row6_col10\" class=\"data row6 col10\" >0.814028</td>\n",
        "                        <td id=\"T_332f6f04_1d89_11eb_aafb_525400e133c8row6_col11\" class=\"data row6 col11\" >0.028031</td>\n",
        "                        <td id=\"T_332f6f04_1d89_11eb_aafb_525400e133c8row6_col12\" class=\"data row6 col12\" >0.473326</td>\n",
        "                        <td id=\"T_332f6f04_1d89_11eb_aafb_525400e133c8row6_col13\" class=\"data row6 col13\" >0.682480</td>\n",
        "                        <td id=\"T_332f6f04_1d89_11eb_aafb_525400e133c8row6_col14\" class=\"data row6 col14\" >0.435459</td>\n",
        "                        <td id=\"T_332f6f04_1d89_11eb_aafb_525400e133c8row6_col15\" class=\"data row6 col15\" >0.509954</td>\n",
        "                        <td id=\"T_332f6f04_1d89_11eb_aafb_525400e133c8row6_col16\" class=\"data row6 col16\" >0.703389</td>\n",
        "            </tr>\n",
        "            <tr>\n",
        "                        <th id=\"T_332f6f04_1d89_11eb_aafb_525400e133c8level0_row7\" class=\"row_heading level0 row7\" >Cancel_events</th>\n",
        "                        <td id=\"T_332f6f04_1d89_11eb_aafb_525400e133c8row7_col0\" class=\"data row7 col0\" >-0.249500</td>\n",
        "                        <td id=\"T_332f6f04_1d89_11eb_aafb_525400e133c8row7_col1\" class=\"data row7 col1\" >-0.118554</td>\n",
        "                        <td id=\"T_332f6f04_1d89_11eb_aafb_525400e133c8row7_col2\" class=\"data row7 col2\" >-0.121687</td>\n",
        "                        <td id=\"T_332f6f04_1d89_11eb_aafb_525400e133c8row7_col3\" class=\"data row7 col3\" >-0.087383</td>\n",
        "                        <td id=\"T_332f6f04_1d89_11eb_aafb_525400e133c8row7_col4\" class=\"data row7 col4\" >0.191086</td>\n",
        "                        <td id=\"T_332f6f04_1d89_11eb_aafb_525400e133c8row7_col5\" class=\"data row7 col5\" >0.814637</td>\n",
        "                        <td id=\"T_332f6f04_1d89_11eb_aafb_525400e133c8row7_col6\" class=\"data row7 col6\" >0.760656</td>\n",
        "                        <td id=\"T_332f6f04_1d89_11eb_aafb_525400e133c8row7_col7\" class=\"data row7 col7\" >1.000000</td>\n",
        "                        <td id=\"T_332f6f04_1d89_11eb_aafb_525400e133c8row7_col8\" class=\"data row7 col8\" >0.768653</td>\n",
        "                        <td id=\"T_332f6f04_1d89_11eb_aafb_525400e133c8row7_col9\" class=\"data row7 col9\" >0.204918</td>\n",
        "                        <td id=\"T_332f6f04_1d89_11eb_aafb_525400e133c8row7_col10\" class=\"data row7 col10\" >0.762547</td>\n",
        "                        <td id=\"T_332f6f04_1d89_11eb_aafb_525400e133c8row7_col11\" class=\"data row7 col11\" >0.297132</td>\n",
        "                        <td id=\"T_332f6f04_1d89_11eb_aafb_525400e133c8row7_col12\" class=\"data row7 col12\" >0.660277</td>\n",
        "                        <td id=\"T_332f6f04_1d89_11eb_aafb_525400e133c8row7_col13\" class=\"data row7 col13\" >0.686507</td>\n",
        "                        <td id=\"T_332f6f04_1d89_11eb_aafb_525400e133c8row7_col14\" class=\"data row7 col14\" >0.241388</td>\n",
        "                        <td id=\"T_332f6f04_1d89_11eb_aafb_525400e133c8row7_col15\" class=\"data row7 col15\" >0.364519</td>\n",
        "                        <td id=\"T_332f6f04_1d89_11eb_aafb_525400e133c8row7_col16\" class=\"data row7 col16\" >0.824470</td>\n",
        "            </tr>\n",
        "            <tr>\n",
        "                        <th id=\"T_332f6f04_1d89_11eb_aafb_525400e133c8level0_row8\" class=\"row_heading level0 row8\" >Gatherings_restrictions</th>\n",
        "                        <td id=\"T_332f6f04_1d89_11eb_aafb_525400e133c8row8_col0\" class=\"data row8 col0\" >-0.241369</td>\n",
        "                        <td id=\"T_332f6f04_1d89_11eb_aafb_525400e133c8row8_col1\" class=\"data row8 col1\" >-0.228883</td>\n",
        "                        <td id=\"T_332f6f04_1d89_11eb_aafb_525400e133c8row8_col2\" class=\"data row8 col2\" >-0.203906</td>\n",
        "                        <td id=\"T_332f6f04_1d89_11eb_aafb_525400e133c8row8_col3\" class=\"data row8 col3\" >-0.194944</td>\n",
        "                        <td id=\"T_332f6f04_1d89_11eb_aafb_525400e133c8row8_col4\" class=\"data row8 col4\" >0.086166</td>\n",
        "                        <td id=\"T_332f6f04_1d89_11eb_aafb_525400e133c8row8_col5\" class=\"data row8 col5\" >0.758857</td>\n",
        "                        <td id=\"T_332f6f04_1d89_11eb_aafb_525400e133c8row8_col6\" class=\"data row8 col6\" >0.730936</td>\n",
        "                        <td id=\"T_332f6f04_1d89_11eb_aafb_525400e133c8row8_col7\" class=\"data row8 col7\" >0.768653</td>\n",
        "                        <td id=\"T_332f6f04_1d89_11eb_aafb_525400e133c8row8_col8\" class=\"data row8 col8\" >1.000000</td>\n",
        "                        <td id=\"T_332f6f04_1d89_11eb_aafb_525400e133c8row8_col9\" class=\"data row8 col9\" >0.246524</td>\n",
        "                        <td id=\"T_332f6f04_1d89_11eb_aafb_525400e133c8row8_col10\" class=\"data row8 col10\" >0.737419</td>\n",
        "                        <td id=\"T_332f6f04_1d89_11eb_aafb_525400e133c8row8_col11\" class=\"data row8 col11\" >0.304160</td>\n",
        "                        <td id=\"T_332f6f04_1d89_11eb_aafb_525400e133c8row8_col12\" class=\"data row8 col12\" >0.599224</td>\n",
        "                        <td id=\"T_332f6f04_1d89_11eb_aafb_525400e133c8row8_col13\" class=\"data row8 col13\" >0.611826</td>\n",
        "                        <td id=\"T_332f6f04_1d89_11eb_aafb_525400e133c8row8_col14\" class=\"data row8 col14\" >0.261651</td>\n",
        "                        <td id=\"T_332f6f04_1d89_11eb_aafb_525400e133c8row8_col15\" class=\"data row8 col15\" >0.325745</td>\n",
        "                        <td id=\"T_332f6f04_1d89_11eb_aafb_525400e133c8row8_col16\" class=\"data row8 col16\" >0.739596</td>\n",
        "            </tr>\n",
        "            <tr>\n",
        "                        <th id=\"T_332f6f04_1d89_11eb_aafb_525400e133c8level0_row9\" class=\"row_heading level0 row9\" >Transport_closing</th>\n",
        "                        <td id=\"T_332f6f04_1d89_11eb_aafb_525400e133c8row9_col0\" class=\"data row9 col0\" >0.153254</td>\n",
        "                        <td id=\"T_332f6f04_1d89_11eb_aafb_525400e133c8row9_col1\" class=\"data row9 col1\" >-0.346213</td>\n",
        "                        <td id=\"T_332f6f04_1d89_11eb_aafb_525400e133c8row9_col2\" class=\"data row9 col2\" >-0.368013</td>\n",
        "                        <td id=\"T_332f6f04_1d89_11eb_aafb_525400e133c8row9_col3\" class=\"data row9 col3\" >-0.329391</td>\n",
        "                        <td id=\"T_332f6f04_1d89_11eb_aafb_525400e133c8row9_col4\" class=\"data row9 col4\" >-0.024777</td>\n",
        "                        <td id=\"T_332f6f04_1d89_11eb_aafb_525400e133c8row9_col5\" class=\"data row9 col5\" >0.246443</td>\n",
        "                        <td id=\"T_332f6f04_1d89_11eb_aafb_525400e133c8row9_col6\" class=\"data row9 col6\" >0.159044</td>\n",
        "                        <td id=\"T_332f6f04_1d89_11eb_aafb_525400e133c8row9_col7\" class=\"data row9 col7\" >0.204918</td>\n",
        "                        <td id=\"T_332f6f04_1d89_11eb_aafb_525400e133c8row9_col8\" class=\"data row9 col8\" >0.246524</td>\n",
        "                        <td id=\"T_332f6f04_1d89_11eb_aafb_525400e133c8row9_col9\" class=\"data row9 col9\" >1.000000</td>\n",
        "                        <td id=\"T_332f6f04_1d89_11eb_aafb_525400e133c8row9_col10\" class=\"data row9 col10\" >0.225576</td>\n",
        "                        <td id=\"T_332f6f04_1d89_11eb_aafb_525400e133c8row9_col11\" class=\"data row9 col11\" >0.420104</td>\n",
        "                        <td id=\"T_332f6f04_1d89_11eb_aafb_525400e133c8row9_col12\" class=\"data row9 col12\" >0.097393</td>\n",
        "                        <td id=\"T_332f6f04_1d89_11eb_aafb_525400e133c8row9_col13\" class=\"data row9 col13\" >0.376547</td>\n",
        "                        <td id=\"T_332f6f04_1d89_11eb_aafb_525400e133c8row9_col14\" class=\"data row9 col14\" >0.063367</td>\n",
        "                        <td id=\"T_332f6f04_1d89_11eb_aafb_525400e133c8row9_col15\" class=\"data row9 col15\" >0.145405</td>\n",
        "                        <td id=\"T_332f6f04_1d89_11eb_aafb_525400e133c8row9_col16\" class=\"data row9 col16\" >0.265923</td>\n",
        "            </tr>\n",
        "            <tr>\n",
        "                        <th id=\"T_332f6f04_1d89_11eb_aafb_525400e133c8level0_row10\" class=\"row_heading level0 row10\" >Stay_home_restrictions</th>\n",
        "                        <td id=\"T_332f6f04_1d89_11eb_aafb_525400e133c8row10_col0\" class=\"data row10 col0\" >-0.211794</td>\n",
        "                        <td id=\"T_332f6f04_1d89_11eb_aafb_525400e133c8row10_col1\" class=\"data row10 col1\" >-0.057724</td>\n",
        "                        <td id=\"T_332f6f04_1d89_11eb_aafb_525400e133c8row10_col2\" class=\"data row10 col2\" >-0.059306</td>\n",
        "                        <td id=\"T_332f6f04_1d89_11eb_aafb_525400e133c8row10_col3\" class=\"data row10 col3\" >-0.065431</td>\n",
        "                        <td id=\"T_332f6f04_1d89_11eb_aafb_525400e133c8row10_col4\" class=\"data row10 col4\" >0.139528</td>\n",
        "                        <td id=\"T_332f6f04_1d89_11eb_aafb_525400e133c8row10_col5\" class=\"data row10 col5\" >0.808699</td>\n",
        "                        <td id=\"T_332f6f04_1d89_11eb_aafb_525400e133c8row10_col6\" class=\"data row10 col6\" >0.814028</td>\n",
        "                        <td id=\"T_332f6f04_1d89_11eb_aafb_525400e133c8row10_col7\" class=\"data row10 col7\" >0.762547</td>\n",
        "                        <td id=\"T_332f6f04_1d89_11eb_aafb_525400e133c8row10_col8\" class=\"data row10 col8\" >0.737419</td>\n",
        "                        <td id=\"T_332f6f04_1d89_11eb_aafb_525400e133c8row10_col9\" class=\"data row10 col9\" >0.225576</td>\n",
        "                        <td id=\"T_332f6f04_1d89_11eb_aafb_525400e133c8row10_col10\" class=\"data row10 col10\" >1.000000</td>\n",
        "                        <td id=\"T_332f6f04_1d89_11eb_aafb_525400e133c8row10_col11\" class=\"data row10 col11\" >0.292599</td>\n",
        "                        <td id=\"T_332f6f04_1d89_11eb_aafb_525400e133c8row10_col12\" class=\"data row10 col12\" >0.542251</td>\n",
        "                        <td id=\"T_332f6f04_1d89_11eb_aafb_525400e133c8row10_col13\" class=\"data row10 col13\" >0.593442</td>\n",
        "                        <td id=\"T_332f6f04_1d89_11eb_aafb_525400e133c8row10_col14\" class=\"data row10 col14\" >0.358086</td>\n",
        "                        <td id=\"T_332f6f04_1d89_11eb_aafb_525400e133c8row10_col15\" class=\"data row10 col15\" >0.417419</td>\n",
        "                        <td id=\"T_332f6f04_1d89_11eb_aafb_525400e133c8row10_col16\" class=\"data row10 col16\" >0.753023</td>\n",
        "            </tr>\n",
        "            <tr>\n",
        "                        <th id=\"T_332f6f04_1d89_11eb_aafb_525400e133c8level0_row11\" class=\"row_heading level0 row11\" >Internal_movement_restrictions</th>\n",
        "                        <td id=\"T_332f6f04_1d89_11eb_aafb_525400e133c8row11_col0\" class=\"data row11 col0\" >-0.272057</td>\n",
        "                        <td id=\"T_332f6f04_1d89_11eb_aafb_525400e133c8row11_col1\" class=\"data row11 col1\" >-0.160225</td>\n",
        "                        <td id=\"T_332f6f04_1d89_11eb_aafb_525400e133c8row11_col2\" class=\"data row11 col2\" >-0.196297</td>\n",
        "                        <td id=\"T_332f6f04_1d89_11eb_aafb_525400e133c8row11_col3\" class=\"data row11 col3\" >0.002912</td>\n",
        "                        <td id=\"T_332f6f04_1d89_11eb_aafb_525400e133c8row11_col4\" class=\"data row11 col4\" >0.258491</td>\n",
        "                        <td id=\"T_332f6f04_1d89_11eb_aafb_525400e133c8row11_col5\" class=\"data row11 col5\" >0.329760</td>\n",
        "                        <td id=\"T_332f6f04_1d89_11eb_aafb_525400e133c8row11_col6\" class=\"data row11 col6\" >0.028031</td>\n",
        "                        <td id=\"T_332f6f04_1d89_11eb_aafb_525400e133c8row11_col7\" class=\"data row11 col7\" >0.297132</td>\n",
        "                        <td id=\"T_332f6f04_1d89_11eb_aafb_525400e133c8row11_col8\" class=\"data row11 col8\" >0.304160</td>\n",
        "                        <td id=\"T_332f6f04_1d89_11eb_aafb_525400e133c8row11_col9\" class=\"data row11 col9\" >0.420104</td>\n",
        "                        <td id=\"T_332f6f04_1d89_11eb_aafb_525400e133c8row11_col10\" class=\"data row11 col10\" >0.292599</td>\n",
        "                        <td id=\"T_332f6f04_1d89_11eb_aafb_525400e133c8row11_col11\" class=\"data row11 col11\" >1.000000</td>\n",
        "                        <td id=\"T_332f6f04_1d89_11eb_aafb_525400e133c8row11_col12\" class=\"data row11 col12\" >0.230685</td>\n",
        "                        <td id=\"T_332f6f04_1d89_11eb_aafb_525400e133c8row11_col13\" class=\"data row11 col13\" >0.197615</td>\n",
        "                        <td id=\"T_332f6f04_1d89_11eb_aafb_525400e133c8row11_col14\" class=\"data row11 col14\" >-0.112306</td>\n",
        "                        <td id=\"T_332f6f04_1d89_11eb_aafb_525400e133c8row11_col15\" class=\"data row11 col15\" >-0.021343</td>\n",
        "                        <td id=\"T_332f6f04_1d89_11eb_aafb_525400e133c8row11_col16\" class=\"data row11 col16\" >0.483322</td>\n",
        "            </tr>\n",
        "            <tr>\n",
        "                        <th id=\"T_332f6f04_1d89_11eb_aafb_525400e133c8level0_row12\" class=\"row_heading level0 row12\" >International_movement_restrictions</th>\n",
        "                        <td id=\"T_332f6f04_1d89_11eb_aafb_525400e133c8row12_col0\" class=\"data row12 col0\" >-0.227218</td>\n",
        "                        <td id=\"T_332f6f04_1d89_11eb_aafb_525400e133c8row12_col1\" class=\"data row12 col1\" >0.152994</td>\n",
        "                        <td id=\"T_332f6f04_1d89_11eb_aafb_525400e133c8row12_col2\" class=\"data row12 col2\" >0.181316</td>\n",
        "                        <td id=\"T_332f6f04_1d89_11eb_aafb_525400e133c8row12_col3\" class=\"data row12 col3\" >0.127344</td>\n",
        "                        <td id=\"T_332f6f04_1d89_11eb_aafb_525400e133c8row12_col4\" class=\"data row12 col4\" >0.078338</td>\n",
        "                        <td id=\"T_332f6f04_1d89_11eb_aafb_525400e133c8row12_col5\" class=\"data row12 col5\" >0.560330</td>\n",
        "                        <td id=\"T_332f6f04_1d89_11eb_aafb_525400e133c8row12_col6\" class=\"data row12 col6\" >0.473326</td>\n",
        "                        <td id=\"T_332f6f04_1d89_11eb_aafb_525400e133c8row12_col7\" class=\"data row12 col7\" >0.660277</td>\n",
        "                        <td id=\"T_332f6f04_1d89_11eb_aafb_525400e133c8row12_col8\" class=\"data row12 col8\" >0.599224</td>\n",
        "                        <td id=\"T_332f6f04_1d89_11eb_aafb_525400e133c8row12_col9\" class=\"data row12 col9\" >0.097393</td>\n",
        "                        <td id=\"T_332f6f04_1d89_11eb_aafb_525400e133c8row12_col10\" class=\"data row12 col10\" >0.542251</td>\n",
        "                        <td id=\"T_332f6f04_1d89_11eb_aafb_525400e133c8row12_col11\" class=\"data row12 col11\" >0.230685</td>\n",
        "                        <td id=\"T_332f6f04_1d89_11eb_aafb_525400e133c8row12_col12\" class=\"data row12 col12\" >1.000000</td>\n",
        "                        <td id=\"T_332f6f04_1d89_11eb_aafb_525400e133c8row12_col13\" class=\"data row12 col13\" >0.504198</td>\n",
        "                        <td id=\"T_332f6f04_1d89_11eb_aafb_525400e133c8row12_col14\" class=\"data row12 col14\" >0.139016</td>\n",
        "                        <td id=\"T_332f6f04_1d89_11eb_aafb_525400e133c8row12_col15\" class=\"data row12 col15\" >0.266249</td>\n",
        "                        <td id=\"T_332f6f04_1d89_11eb_aafb_525400e133c8row12_col16\" class=\"data row12 col16\" >0.742554</td>\n",
        "            </tr>\n",
        "            <tr>\n",
        "                        <th id=\"T_332f6f04_1d89_11eb_aafb_525400e133c8level0_row13\" class=\"row_heading level0 row13\" >Information_campaigns</th>\n",
        "                        <td id=\"T_332f6f04_1d89_11eb_aafb_525400e133c8row13_col0\" class=\"data row13 col0\" >0.097319</td>\n",
        "                        <td id=\"T_332f6f04_1d89_11eb_aafb_525400e133c8row13_col1\" class=\"data row13 col1\" >-0.321672</td>\n",
        "                        <td id=\"T_332f6f04_1d89_11eb_aafb_525400e133c8row13_col2\" class=\"data row13 col2\" >-0.325004</td>\n",
        "                        <td id=\"T_332f6f04_1d89_11eb_aafb_525400e133c8row13_col3\" class=\"data row13 col3\" >-0.405041</td>\n",
        "                        <td id=\"T_332f6f04_1d89_11eb_aafb_525400e133c8row13_col4\" class=\"data row13 col4\" >-0.039260</td>\n",
        "                        <td id=\"T_332f6f04_1d89_11eb_aafb_525400e133c8row13_col5\" class=\"data row13 col5\" >0.716926</td>\n",
        "                        <td id=\"T_332f6f04_1d89_11eb_aafb_525400e133c8row13_col6\" class=\"data row13 col6\" >0.682480</td>\n",
        "                        <td id=\"T_332f6f04_1d89_11eb_aafb_525400e133c8row13_col7\" class=\"data row13 col7\" >0.686507</td>\n",
        "                        <td id=\"T_332f6f04_1d89_11eb_aafb_525400e133c8row13_col8\" class=\"data row13 col8\" >0.611826</td>\n",
        "                        <td id=\"T_332f6f04_1d89_11eb_aafb_525400e133c8row13_col9\" class=\"data row13 col9\" >0.376547</td>\n",
        "                        <td id=\"T_332f6f04_1d89_11eb_aafb_525400e133c8row13_col10\" class=\"data row13 col10\" >0.593442</td>\n",
        "                        <td id=\"T_332f6f04_1d89_11eb_aafb_525400e133c8row13_col11\" class=\"data row13 col11\" >0.197615</td>\n",
        "                        <td id=\"T_332f6f04_1d89_11eb_aafb_525400e133c8row13_col12\" class=\"data row13 col12\" >0.504198</td>\n",
        "                        <td id=\"T_332f6f04_1d89_11eb_aafb_525400e133c8row13_col13\" class=\"data row13 col13\" >1.000000</td>\n",
        "                        <td id=\"T_332f6f04_1d89_11eb_aafb_525400e133c8row13_col14\" class=\"data row13 col14\" >0.521136</td>\n",
        "                        <td id=\"T_332f6f04_1d89_11eb_aafb_525400e133c8row13_col15\" class=\"data row13 col15\" >0.600123</td>\n",
        "                        <td id=\"T_332f6f04_1d89_11eb_aafb_525400e133c8row13_col16\" class=\"data row13 col16\" >0.663252</td>\n",
        "            </tr>\n",
        "            <tr>\n",
        "                        <th id=\"T_332f6f04_1d89_11eb_aafb_525400e133c8level0_row14\" class=\"row_heading level0 row14\" >Testing_policy</th>\n",
        "                        <td id=\"T_332f6f04_1d89_11eb_aafb_525400e133c8row14_col0\" class=\"data row14 col0\" >0.087617</td>\n",
        "                        <td id=\"T_332f6f04_1d89_11eb_aafb_525400e133c8row14_col1\" class=\"data row14 col1\" >-0.138425</td>\n",
        "                        <td id=\"T_332f6f04_1d89_11eb_aafb_525400e133c8row14_col2\" class=\"data row14 col2\" >-0.112590</td>\n",
        "                        <td id=\"T_332f6f04_1d89_11eb_aafb_525400e133c8row14_col3\" class=\"data row14 col3\" >-0.366712</td>\n",
        "                        <td id=\"T_332f6f04_1d89_11eb_aafb_525400e133c8row14_col4\" class=\"data row14 col4\" >-0.051832</td>\n",
        "                        <td id=\"T_332f6f04_1d89_11eb_aafb_525400e133c8row14_col5\" class=\"data row14 col5\" >0.393836</td>\n",
        "                        <td id=\"T_332f6f04_1d89_11eb_aafb_525400e133c8row14_col6\" class=\"data row14 col6\" >0.435459</td>\n",
        "                        <td id=\"T_332f6f04_1d89_11eb_aafb_525400e133c8row14_col7\" class=\"data row14 col7\" >0.241388</td>\n",
        "                        <td id=\"T_332f6f04_1d89_11eb_aafb_525400e133c8row14_col8\" class=\"data row14 col8\" >0.261651</td>\n",
        "                        <td id=\"T_332f6f04_1d89_11eb_aafb_525400e133c8row14_col9\" class=\"data row14 col9\" >0.063367</td>\n",
        "                        <td id=\"T_332f6f04_1d89_11eb_aafb_525400e133c8row14_col10\" class=\"data row14 col10\" >0.358086</td>\n",
        "                        <td id=\"T_332f6f04_1d89_11eb_aafb_525400e133c8row14_col11\" class=\"data row14 col11\" >-0.112306</td>\n",
        "                        <td id=\"T_332f6f04_1d89_11eb_aafb_525400e133c8row14_col12\" class=\"data row14 col12\" >0.139016</td>\n",
        "                        <td id=\"T_332f6f04_1d89_11eb_aafb_525400e133c8row14_col13\" class=\"data row14 col13\" >0.521136</td>\n",
        "                        <td id=\"T_332f6f04_1d89_11eb_aafb_525400e133c8row14_col14\" class=\"data row14 col14\" >1.000000</td>\n",
        "                        <td id=\"T_332f6f04_1d89_11eb_aafb_525400e133c8row14_col15\" class=\"data row14 col15\" >0.717995</td>\n",
        "                        <td id=\"T_332f6f04_1d89_11eb_aafb_525400e133c8row14_col16\" class=\"data row14 col16\" >0.137151</td>\n",
        "            </tr>\n",
        "            <tr>\n",
        "                        <th id=\"T_332f6f04_1d89_11eb_aafb_525400e133c8level0_row15\" class=\"row_heading level0 row15\" >Contact_tracing</th>\n",
        "                        <td id=\"T_332f6f04_1d89_11eb_aafb_525400e133c8row15_col0\" class=\"data row15 col0\" >-0.074232</td>\n",
        "                        <td id=\"T_332f6f04_1d89_11eb_aafb_525400e133c8row15_col1\" class=\"data row15 col1\" >-0.046741</td>\n",
        "                        <td id=\"T_332f6f04_1d89_11eb_aafb_525400e133c8row15_col2\" class=\"data row15 col2\" >-0.024279</td>\n",
        "                        <td id=\"T_332f6f04_1d89_11eb_aafb_525400e133c8row15_col3\" class=\"data row15 col3\" >-0.334412</td>\n",
        "                        <td id=\"T_332f6f04_1d89_11eb_aafb_525400e133c8row15_col4\" class=\"data row15 col4\" >0.000122</td>\n",
        "                        <td id=\"T_332f6f04_1d89_11eb_aafb_525400e133c8row15_col5\" class=\"data row15 col5\" >0.501913</td>\n",
        "                        <td id=\"T_332f6f04_1d89_11eb_aafb_525400e133c8row15_col6\" class=\"data row15 col6\" >0.509954</td>\n",
        "                        <td id=\"T_332f6f04_1d89_11eb_aafb_525400e133c8row15_col7\" class=\"data row15 col7\" >0.364519</td>\n",
        "                        <td id=\"T_332f6f04_1d89_11eb_aafb_525400e133c8row15_col8\" class=\"data row15 col8\" >0.325745</td>\n",
        "                        <td id=\"T_332f6f04_1d89_11eb_aafb_525400e133c8row15_col9\" class=\"data row15 col9\" >0.145405</td>\n",
        "                        <td id=\"T_332f6f04_1d89_11eb_aafb_525400e133c8row15_col10\" class=\"data row15 col10\" >0.417419</td>\n",
        "                        <td id=\"T_332f6f04_1d89_11eb_aafb_525400e133c8row15_col11\" class=\"data row15 col11\" >-0.021343</td>\n",
        "                        <td id=\"T_332f6f04_1d89_11eb_aafb_525400e133c8row15_col12\" class=\"data row15 col12\" >0.266249</td>\n",
        "                        <td id=\"T_332f6f04_1d89_11eb_aafb_525400e133c8row15_col13\" class=\"data row15 col13\" >0.600123</td>\n",
        "                        <td id=\"T_332f6f04_1d89_11eb_aafb_525400e133c8row15_col14\" class=\"data row15 col14\" >0.717995</td>\n",
        "                        <td id=\"T_332f6f04_1d89_11eb_aafb_525400e133c8row15_col15\" class=\"data row15 col15\" >1.000000</td>\n",
        "                        <td id=\"T_332f6f04_1d89_11eb_aafb_525400e133c8row15_col16\" class=\"data row15 col16\" >0.347487</td>\n",
        "            </tr>\n",
        "            <tr>\n",
        "                        <th id=\"T_332f6f04_1d89_11eb_aafb_525400e133c8level0_row16\" class=\"row_heading level0 row16\" >Stringency_index</th>\n",
        "                        <td id=\"T_332f6f04_1d89_11eb_aafb_525400e133c8row16_col0\" class=\"data row16 col0\" >-0.313635</td>\n",
        "                        <td id=\"T_332f6f04_1d89_11eb_aafb_525400e133c8row16_col1\" class=\"data row16 col1\" >0.012216</td>\n",
        "                        <td id=\"T_332f6f04_1d89_11eb_aafb_525400e133c8row16_col2\" class=\"data row16 col2\" >-0.005399</td>\n",
        "                        <td id=\"T_332f6f04_1d89_11eb_aafb_525400e133c8row16_col3\" class=\"data row16 col3\" >0.020257</td>\n",
        "                        <td id=\"T_332f6f04_1d89_11eb_aafb_525400e133c8row16_col4\" class=\"data row16 col4\" >0.215551</td>\n",
        "                        <td id=\"T_332f6f04_1d89_11eb_aafb_525400e133c8row16_col5\" class=\"data row16 col5\" >0.810409</td>\n",
        "                        <td id=\"T_332f6f04_1d89_11eb_aafb_525400e133c8row16_col6\" class=\"data row16 col6\" >0.703389</td>\n",
        "                        <td id=\"T_332f6f04_1d89_11eb_aafb_525400e133c8row16_col7\" class=\"data row16 col7\" >0.824470</td>\n",
        "                        <td id=\"T_332f6f04_1d89_11eb_aafb_525400e133c8row16_col8\" class=\"data row16 col8\" >0.739596</td>\n",
        "                        <td id=\"T_332f6f04_1d89_11eb_aafb_525400e133c8row16_col9\" class=\"data row16 col9\" >0.265923</td>\n",
        "                        <td id=\"T_332f6f04_1d89_11eb_aafb_525400e133c8row16_col10\" class=\"data row16 col10\" >0.753023</td>\n",
        "                        <td id=\"T_332f6f04_1d89_11eb_aafb_525400e133c8row16_col11\" class=\"data row16 col11\" >0.483322</td>\n",
        "                        <td id=\"T_332f6f04_1d89_11eb_aafb_525400e133c8row16_col12\" class=\"data row16 col12\" >0.742554</td>\n",
        "                        <td id=\"T_332f6f04_1d89_11eb_aafb_525400e133c8row16_col13\" class=\"data row16 col13\" >0.663252</td>\n",
        "                        <td id=\"T_332f6f04_1d89_11eb_aafb_525400e133c8row16_col14\" class=\"data row16 col14\" >0.137151</td>\n",
        "                        <td id=\"T_332f6f04_1d89_11eb_aafb_525400e133c8row16_col15\" class=\"data row16 col15\" >0.347487</td>\n",
        "                        <td id=\"T_332f6f04_1d89_11eb_aafb_525400e133c8row16_col16\" class=\"data row16 col16\" >1.000000</td>\n",
        "            </tr>\n",
        "    </tbody></table>"
       ],
       "output_type": "pyout",
       "prompt_number": 21,
       "text": [
        "<pandas.io.formats.style.Styler at 0x7f8018f4e100>"
       ]
      }
     ],
     "prompt_number": 21
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "# Scatter plot of Stringency index and Rt\n",
      "df = track_df.copy()\n",
      "sns.scatterplot(data=df, x=\"Stringency_index\", y=\"Rt\", hue=\"Country\", legend=\"brief\", marker=\"+\")\n",
      "bbox_to_anchor=(1.02, 0)\n",
      "bbox_loc=\"lower left\"\n",
      "plt.legend(bbox_to_anchor=bbox_to_anchor, loc=bbox_loc, borderaxespad=0)\n",
      "plt.title(\"Relationship of Stringency index and reproduction number\")\n",
      "plt.ylabel(\"Reproduction number\")\n",
      "plt.xlabel(\"Stringency index\")\n",
      "plt.show()"
     ],
     "language": "python",
     "metadata": {},
     "outputs": [
      {
       "output_type": "display_data",
       "png": "\n",
       "text": [
        "<Figure size 432x288 with 1 Axes>"
       ]
      }
     ],
     "prompt_number": 22
    }
   ],
   "metadata": {}
  }
 ]
}
