{
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3.8.2 64-bit ('.venv': venv)",
   "name": "python_defaultSpec_1597669925034"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.8.2-final"
  },
  "name": ""
 },
 "nbformat": 3,
 "nbformat_minor": 0,
 "worksheets": [
  {
   "cells": [
    {
     "cell_type": "markdown",
     "metadata": {},
     "source": [
      "# Usage (details: policy measures)\n",
      "Here, we will analyse the relationship of policy measures and parameter values of SIR-derived ODE models. Policy measures are tracked by [Oxford Covid-19 Government Response Tracker (OxCGRT)](https://github.com/OxCGRT/covid-policy-tracker)."
     ]
    },
    {
     "cell_type": "heading",
     "level": 2,
     "metadata": {},
     "source": [
      "Preparation"
     ]
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "# Standard users\n",
      "# !pip install covsirphy\n",
      "# Developers (Note: this notebook is in example directory)\n",
      "import os\n",
      "os.chdir(\"../\")"
     ],
     "language": "python",
     "metadata": {},
     "outputs": [],
     "prompt_number": 1
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "from pprint import pprint"
     ],
     "language": "python",
     "metadata": {},
     "outputs": [],
     "prompt_number": 2
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "import covsirphy as cs\n",
      "cs.__version__"
     ],
     "language": "python",
     "metadata": {},
     "outputs": [
      {
       "output_type": "pyout",
       "prompt_number": 3,
       "text": [
        "'2.8.0'"
       ]
      }
     ],
     "prompt_number": 3
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "# Standard users and developers\n",
      "data_loader = cs.DataLoader(\"input\")\n",
      "# The number of cases (JHU style)\n",
      "jhu_data = data_loader.jhu(verbose=False)\n",
      "# Population in each country\n",
      "population_data = data_loader.population(verbose=False)\n",
      "# Government Response Tracker (OxCGRT)\n",
      "oxcgrt_data = data_loader.oxcgrt(verbose=False)\n",
      "# Description/citation\n",
      "print(oxcgrt_data.citation)"
     ],
     "language": "python",
     "metadata": {
      "tags": []
     },
     "outputs": [
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "(Secondary source) Guidotti, E., Ardia, D., (2020), \"COVID-19 Data Hub\", Journal of Open Source Software 5(51):2376, doi: 10.21105/joss.02376.\n",
        "We can get Citation list of primary sources with DataLoader(...).covid19dh_citation"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      }
     ],
     "prompt_number": 4
    },
    {
     "cell_type": "markdown",
     "metadata": {},
     "source": [
      "## Class for policy measure analysis\n",
      "We will `PolicyMeasures` class to find relationship of policy measures and parameter values of SIR-derived ODE models."
     ]
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "# Create analyser with tau value 360 [min] (can be changed)\n",
      "analyser = cs.PolicyMeasures(jhu_data, population_data, oxcgrt_data, tau=360)\n",
      "# The number of registerd countries\n",
      "len(analyser.countries)"
     ],
     "language": "python",
     "metadata": {
      "tags": []
     },
     "outputs": [
      {
       "output_type": "pyout",
       "prompt_number": 5,
       "text": [
        "184"
       ]
      }
     ],
     "prompt_number": 5
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "# We can get Scenario instance for detailed scenario analysis\n",
      "type(analyser.scenario(\"Japan\"))"
     ],
     "language": "python",
     "metadata": {},
     "outputs": [
      {
       "output_type": "pyout",
       "prompt_number": 6,
       "text": [
        "covsirphy.analysis.scenario.Scenario"
       ]
      }
     ],
     "prompt_number": 6
    },
    {
     "cell_type": "markdown",
     "metadata": {},
     "source": [
      "## Set phases with S-R trend analysis\n",
      "We will perform S-R trend analysis to set phases in all countries. Countries which do not have **9th phases** will be un-registered for the next analysis. This number will be adjusted for your analysis."
     ]
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "# Show the number of phases of all countries\n",
      "analyser.trend()\n",
      "pprint(analyser.phase_len(), compact=True)"
     ],
     "language": "python",
     "metadata": {},
     "outputs": [
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "{"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "2"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ": "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "["
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Gambia'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Papua New Guinea'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Trinidad and Tobago'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Bahamas'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Belize'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        "     "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Dominica'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "]"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        " "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "3"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ": "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "["
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Brunei'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Malta'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Antigua and Barbuda'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Seychelles'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Namibia'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        "     "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Guyana'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Tanzania'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Mauritius'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Fiji'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Saint Lucia'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "]"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        " "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "4"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ": "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "["
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Lesotho'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'New Zealand'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Eritrea'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Sao Tome and Principe'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        "     "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Equatorial Guinea'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Yemen'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Guatemala'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Kyrgyzstan'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        "     "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Central African Republic'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Saint Vincent and the Grenadines'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Iceland'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        "     "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'South Sudan'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Lebanon'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Botswana'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Palestine'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Morocco'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Grenada'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        "     "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Norway'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Ethiopia'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Zimbabwe'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Vietnam'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "]"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        " "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "5"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ": "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "["
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'San Marino'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Liechtenstein'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Spain'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Paraguay'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Australia'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Chad'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        "     "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Syria'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Maldives'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Cambodia'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Ireland'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Libya'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Zambia'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Israel'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        "     "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Angola'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Comoros'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Venezuela'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Philippines'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Kazakhstan'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        "     "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Montenegro'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Malawi'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "]"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        " "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "6"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ": "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "["
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Latvia'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Mongolia'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Cyprus'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Cuba'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Luxembourg'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Swaziland'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        "     "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Afghanistan'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Finland'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Costa Rica'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Kenya'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Tajikistan'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Qatar'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        "     "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Argentina'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Benin'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Netherlands'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Cameroon'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'India'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Niger'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        "     "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Andorra'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Croatia'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Uganda'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Greece'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Japan'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Somalia'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Suriname'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        "     "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Slovakia'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'El Salvador'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Burundi'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Bermuda'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Guinea-Bissau'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        "     "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Macedonia'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Mozambique'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Congo'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Thailand'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Haiti'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Madagascar'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        "     "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Kosovo'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Sri Lanka'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Taiwan'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Colombia'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Oman'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Uzbekistan'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "]"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        " "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "7"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ": "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "["
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Tunisia'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Ghana'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Mauritania'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Barbados'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Egypt'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Liberia'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        "     "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Bosnia and Herzegovina'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Mali'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Ecuador'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Indonesia'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Rwanda'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        "     "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Jordan'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Germany'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Switzerland'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Jamaica'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Monaco'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Canada'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'China'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        "     "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Azerbaijan'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Sudan'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Honduras'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Djibouti'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Pakistan'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Sierra Leone'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        "     "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Slovenia'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Togo'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Serbia'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Bhutan'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Nepal'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Cape Verde'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        "     "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'South Africa'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Panama'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Gabon'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Uruguay'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Iraq'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Nicaragua'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "]"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        " "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "8"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ": "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "["
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Austria'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Singapore'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Algeria'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Brazil'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Belarus'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Nigeria'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        "     "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Bolivia'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Bulgaria'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Romania'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Dominican Republic'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Malaysia'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        "     "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Lithuania'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Chile'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Czech Republic'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Burkina Faso'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Belgium'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        "     "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Albania'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Estonia'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Saudi Arabia'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Armenia'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Denmark'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Bangladesh'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "]"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        " "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "9"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ": "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "["
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Guinea'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Myanmar'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'France'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Kuwait'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Peru'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Iran'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Mexico'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        "     "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Korea, South'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Russia'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Italy'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Hungary'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Turkey'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Georgia'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        "     "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'United States'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Moldova'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Ukraine'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Portugal'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "]"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        " "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "10"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ": "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "['Senegal', 'United Arab Emirates', 'Bahrain']"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        " "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "11"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ": "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "['Poland']"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "}"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      }
     ],
     "prompt_number": 7
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "# Set phases with S-R trend analysis\n",
      "analyser.trend(min_len=9)\n",
      "# The number of countries\n",
      "len(analyser.countries)"
     ],
     "language": "python",
     "metadata": {},
     "outputs": [
      {
       "output_type": "pyout",
       "prompt_number": 8,
       "text": [
        "21"
       ]
      }
     ],
     "prompt_number": 8
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "phase_len_dict = analyser.phase_len()\n",
      "pprint(phase_len_dict, compact=True)"
     ],
     "language": "python",
     "metadata": {
      "tags": []
     },
     "outputs": [
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "{"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "9"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ": "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "["
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Guinea'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Myanmar'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'France'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Kuwait'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Peru'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Iran'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Mexico'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        "     "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Korea, South'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Russia'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Italy'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Hungary'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Turkey'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Georgia'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        "     "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'United States'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Moldova'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Ukraine'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Portugal'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "]"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        " "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "10"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ": "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "['Senegal', 'United Arab Emirates', 'Bahrain']"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        " "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "11"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ": "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "['Poland']"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "}"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      }
     ],
     "prompt_number": 9
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "# Here, only show the countries which have the most phases\n",
      "countries_show = max(phase_len_dict.items(), key=lambda x: x[0])[1]\n",
      "# Show summary\n",
      "analyser.summary(countries=countries_show)"
     ],
     "language": "python",
     "metadata": {
      "tags": []
     },
     "outputs": [
      {
       "html": [
        "<div>\n",
        "<style scoped>\n",
        "    .dataframe tbody tr th:only-of-type {\n",
        "        vertical-align: middle;\n",
        "    }\n",
        "\n",
        "    .dataframe tbody tr th {\n",
        "        vertical-align: top;\n",
        "    }\n",
        "\n",
        "    .dataframe thead th {\n",
        "        text-align: right;\n",
        "    }\n",
        "</style>\n",
        "<table border=\"1\" class=\"dataframe\">\n",
        "  <thead>\n",
        "    <tr style=\"text-align: right;\">\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th>Type</th>\n",
        "      <th>Start</th>\n",
        "      <th>End</th>\n",
        "      <th>Population</th>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>Country</th>\n",
        "      <th>Phase</th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "    </tr>\n",
        "  </thead>\n",
        "  <tbody>\n",
        "    <tr>\n",
        "      <th rowspan=\"11\" valign=\"top\">Poland</th>\n",
        "      <th>1st</th>\n",
        "      <td>Past</td>\n",
        "      <td>24Apr2020</td>\n",
        "      <td>09May2020</td>\n",
        "      <td>37974750</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>2nd</th>\n",
        "      <td>Past</td>\n",
        "      <td>10May2020</td>\n",
        "      <td>22May2020</td>\n",
        "      <td>37974750</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>3rd</th>\n",
        "      <td>Past</td>\n",
        "      <td>23May2020</td>\n",
        "      <td>05Jun2020</td>\n",
        "      <td>37974750</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>4th</th>\n",
        "      <td>Past</td>\n",
        "      <td>06Jun2020</td>\n",
        "      <td>16Jun2020</td>\n",
        "      <td>37974750</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>5th</th>\n",
        "      <td>Past</td>\n",
        "      <td>17Jun2020</td>\n",
        "      <td>30Jun2020</td>\n",
        "      <td>37974750</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>6th</th>\n",
        "      <td>Past</td>\n",
        "      <td>01Jul2020</td>\n",
        "      <td>14Jul2020</td>\n",
        "      <td>37974750</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>7th</th>\n",
        "      <td>Past</td>\n",
        "      <td>15Jul2020</td>\n",
        "      <td>25Jul2020</td>\n",
        "      <td>37974750</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>8th</th>\n",
        "      <td>Past</td>\n",
        "      <td>26Jul2020</td>\n",
        "      <td>04Aug2020</td>\n",
        "      <td>37974750</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>9th</th>\n",
        "      <td>Past</td>\n",
        "      <td>05Aug2020</td>\n",
        "      <td>12Aug2020</td>\n",
        "      <td>37974750</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>10th</th>\n",
        "      <td>Past</td>\n",
        "      <td>13Aug2020</td>\n",
        "      <td>20Aug2020</td>\n",
        "      <td>37974750</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>11th</th>\n",
        "      <td>Past</td>\n",
        "      <td>21Aug2020</td>\n",
        "      <td>29Aug2020</td>\n",
        "      <td>37974750</td>\n",
        "    </tr>\n",
        "  </tbody>\n",
        "</table>\n",
        "</div>"
       ],
       "output_type": "pyout",
       "prompt_number": 10,
       "text": [
        "               Type      Start        End  Population\n",
        "Country Phase                                        \n",
        "Poland  1st    Past  24Apr2020  09May2020    37974750\n",
        "        2nd    Past  10May2020  22May2020    37974750\n",
        "        3rd    Past  23May2020  05Jun2020    37974750\n",
        "        4th    Past  06Jun2020  16Jun2020    37974750\n",
        "        5th    Past  17Jun2020  30Jun2020    37974750\n",
        "        6th    Past  01Jul2020  14Jul2020    37974750\n",
        "        7th    Past  15Jul2020  25Jul2020    37974750\n",
        "        8th    Past  26Jul2020  04Aug2020    37974750\n",
        "        9th    Past  05Aug2020  12Aug2020    37974750\n",
        "        10th   Past  13Aug2020  20Aug2020    37974750\n",
        "        11th   Past  21Aug2020  29Aug2020    37974750"
       ]
      }
     ],
     "prompt_number": 10
    },
    {
     "cell_type": "markdown",
     "metadata": {},
     "source": [
      "## Parameter estimation\n",
      "we will estimate the parameter values with SIR-derived ODE models in each country."
     ]
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "# Parameter estimation with SIR-F model\n",
      "analyser.estimate(cs.SIRF)"
     ],
     "language": "python",
     "metadata": {
      "tags": []
     },
     "outputs": [
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n",
        "<SIR-F model: parameter estimation>"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "Running optimization with 4 CPUs..."
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tBHR,  9th phase (06Aug2020 - 15Aug2020): finished  258 trials in 0 min  5 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tSEN,  5th phase (19Jun2020 - 30Jun2020): finished  854 trials in 0 min 20 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tPOL,  8th phase (26Jul2020 - 04Aug2020): finished  255 trials in 0 min  5 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tTUR,  7th phase (11Jul2020 - 28Jul2020): finished  186 trials in 0 min  5 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tARE,  5th phase (12Jun2020 - 22Jun2020): finished 1000 trials in 0 min 25 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tBHR,  7th phase (16Jul2020 - 25Jul2020): finished  183 trials in 0 min  5 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tUKR,  1st phase (07May2020 - 28May2020): finished 1732 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tHUN,  7th phase (20Jul2020 - 04Aug2020): finished 1738 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tPRT,  5th phase (25Jun2020 - 05Jul2020): finished  353 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tMMR,  5th phase (16Jun2020 - 01Jul2020): finished 1509 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tMEX,  6th phase (18Jul2020 - 28Jul2020): finished 1553 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tMDA,  2nd phase (03Jun2020 - 15Jun2020): finished 1528 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tGIN,  2nd phase (13May2020 - 23May2020): finished 1574 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tKOR,  7th phase (20Jul2020 - 05Aug2020): finished 1563 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tKOR,  3rd phase (07Apr2020 - 12May2020): finished  590 trials in 0 min 20 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tPER,  7th phase (30Jul2020 - 06Aug2020): finished 1560 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tPER,  5th phase (08Jul2020 - 19Jul2020): finished 1556 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tUSA,  3rd phase (05Jun2020 - 23Jun2020): finished  343 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tHUN,  6th phase (26Jun2020 - 19Jul2020): finished 1161 trials in 0 min 40 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tMMR,  1st phase (29Apr2020 - 14May2020): finished 1656 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tUSA,  1st phase (20Apr2020 - 12May2020): finished 1606 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tKWT,  5th phase (05Jul2020 - 14Jul2020): finished  213 trials in 0 min  5 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tPRT,  1st phase (04May2020 - 17May2020): finished 1612 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tFRA,  8th phase (17Jul2020 - 05Aug2020): finished 1636 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tSEN,  3rd phase (29May2020 - 09Jun2020): finished 1676 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tGEO,  2nd phase (25Apr2020 - 14May2020): finished 1722 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tPOL,  1st phase (24Apr2020 - 09May2020): finished 1907 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tARE,  2nd phase (13May2020 - 25May2020): finished 1948 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tPER,  3rd phase (11Jun2020 - 23Jun2020): finished 1982 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tSEN,  6th phase (01Jul2020 - 10Jul2020): finished 1990 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tPER,  6th phase (20Jul2020 - 29Jul2020): finished 1979 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tSEN,  1st phase (02May2020 - 14May2020): finished 1980 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tTUR,  8th phase (29Jul2020 - 12Aug2020): finished  466 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tRUS,  1st phase (08May2020 - 22May2020): finished 1977 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tFRA,  1st phase (25Mar2020 - 02Apr2020): finished 1979 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tFRA,  4th phase (25Apr2020 - 04May2020): finished 1998 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tGIN,  6th phase (09Jul2020 - 22Jul2020): finished 1983 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tPER,  9th phase (20Aug2020 - 29Aug2020): finished 1990 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tPER,  1st phase (12May2020 - 29May2020): finished 1971 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tITA,  2nd phase (01Apr2020 - 11Apr2020): finished 1039 trials in 0 min 25 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tIRN,  1st phase (29Mar2020 - 16Apr2020): finished 1973 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tBHR,  5th phase (29Jun2020 - 06Jul2020): finished 1972 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tGIN,  3rd phase (24May2020 - 09Jun2020): finished 1952 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tUKR,  3rd phase (13Jun2020 - 27Jun2020): finished  654 trials in 0 min 15 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tARE,  8th phase (11Jul2020 - 25Jul2020): finished  245 trials in 0 min  5 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tPOL, 10th phase (13Aug2020 - 20Aug2020): finished  257 trials in 0 min  5 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tGIN,  9th phase (17Aug2020 - 29Aug2020): finished 1943 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tUKR,  6th phase (23Jul2020 - 30Jul2020): finished  259 trials in 0 min  5 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tIRN,  5th phase (16Jun2020 - 30Jun2020): finished 1965 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tGEO,  6th phase (05Jul2020 - 19Jul2020): finished 1960 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tBHR,  2nd phase (31May2020 - 10Jun2020): finished 1968 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tMMR,  6th phase (02Jul2020 - 09Jul2020): finished  259 trials in 0 min  5 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tGIN,  1st phase (02May2020 - 12May2020): finished 1978 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tBHR,  6th phase (07Jul2020 - 15Jul2020): finished 1955 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tUSA,  4th phase (24Jun2020 - 06Jul2020): finished 1967 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tRUS,  7th phase (21Jul2020 - 31Jul2020): finished 1964 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tPER,  8th phase (07Aug2020 - 19Aug2020): finished 1938 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tITA,  6th phase (10May2020 - 21May2020): finished  474 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tPRT,  8th phase (28Jul2020 - 12Aug2020): finished  681 trials in 0 min 15 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tGIN,  5th phase (20Jun2020 - 08Jul2020): finished  253 trials in 0 min  5 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tRUS,  6th phase (10Jul2020 - 20Jul2020): finished 1985 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tPOL,  2nd phase (10May2020 - 22May2020): finished 1627 trials in 0 min 45 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tHUN,  9th phase (15Aug2020 - 29Aug2020): finished 1999 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tMEX,  4th phase (01Jul2020 - 08Jul2020): finished  226 trials in 0 min  5 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tPRT,  7th phase (15Jul2020 - 27Jul2020): finished  250 trials in 0 min  5 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tUKR,  4th phase (28Jun2020 - 10Jul2020): finished 1991 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tGEO,  3rd phase (15May2020 - 29May2020): finished 1744 trials in 0 min 50 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tPRT,  3rd phase (31May2020 - 12Jun2020): finished 1012 trials in 0 min 25 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tKOR,  8th phase (06Aug2020 - 19Aug2020): finished 1984 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tTUR,  1st phase (18Apr2020 - 29Apr2020): finished 1993 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tMEX,  3rd phase (20Jun2020 - 30Jun2020): finished 1981 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tKWT,  2nd phase (25May2020 - 10Jun2020): finished 1962 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tHUN,  5th phase (02Jun2020 - 25Jun2020): finished  250 trials in 0 min  5 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tTUR,  5th phase (13Jun2020 - 26Jun2020): finished 1965 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tBHR,  3rd phase (11Jun2020 - 20Jun2020): finished  876 trials in 0 min 20 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tMDA,  7th phase (30Jul2020 - 08Aug2020): finished  682 trials in 0 min 15 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tIRN,  7th phase (14Jul2020 - 27Jul2020): finished  223 trials in 0 min  5 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tPOL,  6th phase (01Jul2020 - 14Jul2020): finished  255 trials in 0 min  5 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tMMR,  2nd phase (15May2020 - 25May2020): finished  479 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tKWT,  1st phase (12May2020 - 24May2020): finished 2002 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tITA,  5th phase (01May2020 - 09May2020): finished  679 trials in 0 min 15 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tITA,  8th phase (13Jun2020 - 28Jul2020): finished  457 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tUSA,  2nd phase (13May2020 - 04Jun2020): finished 1986 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tPER,  4th phase (24Jun2020 - 07Jul2020): finished 2001 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tHUN,  4th phase (23May2020 - 01Jun2020): finished  244 trials in 0 min  5 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tGIN,  4th phase (10Jun2020 - 19Jun2020): finished 2002 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tARE,  3rd phase (26May2020 - 03Jun2020): finished 1010 trials in 0 min 25 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tPOL,  5th phase (17Jun2020 - 30Jun2020): finished  243 trials in 0 min  5 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tSEN, 10th phase (13Aug2020 - 29Aug2020): finished 1976 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tGIN,  7th phase (23Jul2020 - 05Aug2020): finished 1965 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tTUR,  4th phase (29May2020 - 12Jun2020): finished  252 trials in 0 min  5 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tTUR,  2nd phase (30Apr2020 - 14May2020): finished 1010 trials in 0 min 25 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tKOR,  2nd phase (26Mar2020 - 06Apr2020): finished  477 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tMEX,  2nd phase (08Jun2020 - 19Jun2020): finished 1019 trials in 0 min 25 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tKWT,  3rd phase (11Jun2020 - 22Jun2020): finished  657 trials in 0 min 15 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tIRN,  2nd phase (17Apr2020 - 13May2020): finished  248 trials in 0 min  5 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tARE,  9th phase (26Jul2020 - 13Aug2020): finished 1181 trials in 0 min 30 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tUSA,  5th phase (07Jul2020 - 14Jul2020): finished  256 trials in 0 min  5 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tARE,  7th phase (03Jul2020 - 10Jul2020): finished 1996 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tSEN,  2nd phase (15May2020 - 28May2020): finished 1165 trials in 0 min 30 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tITA,  9th phase (29Jul2020 - 29Aug2020): finished 1967 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tPOL, 11th phase (21Aug2020 - 29Aug2020): finished  466 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tPER,  2nd phase (30May2020 - 10Jun2020): finished 1991 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tIRN,  3rd phase (14May2020 - 01Jun2020): finished  671 trials in 0 min 15 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tPOL,  9th phase (05Aug2020 - 12Aug2020): finished  479 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tMDA,  1st phase (09May2020 - 02Jun2020): finished 1964 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tMEX,  7th phase (29Jul2020 - 11Aug2020): finished 1991 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tPOL,  4th phase (06Jun2020 - 16Jun2020): finished  637 trials in 0 min 15 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tITA,  1st phase (23Mar2020 - 31Mar2020): finished 1967 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tKWT,  6th phase (15Jul2020 - 25Jul2020): finished  257 trials in 0 min  5 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tMDA,  8th phase (09Aug2020 - 17Aug2020): finished  480 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tMMR,  7th phase (10Jul2020 - 31Jul2020): finished 1940 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tUSA,  7th phase (24Jul2020 - 07Aug2020): finished  252 trials in 0 min  5 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tARE,  4th phase (04Jun2020 - 11Jun2020): finished 1050 trials in 0 min 25 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tTUR,  6th phase (27Jun2020 - 10Jul2020): finished  254 trials in 0 min  5 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tSEN,  9th phase (02Aug2020 - 12Aug2020): finished 2006 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tMDA,  5th phase (09Jul2020 - 19Jul2020): finished  255 trials in 0 min  5 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tGEO,  5th phase (12Jun2020 - 04Jul2020): finished 1997 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tFRA,  2nd phase (03Apr2020 - 11Apr2020): finished 2000 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tKOR,  5th phase (10Jun2020 - 02Jul2020): finished 1991 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tFRA,  7th phase (23Jun2020 - 16Jul2020): finished  837 trials in 0 min 20 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tMEX,  8th phase (12Aug2020 - 19Aug2020): finished 1988 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tFRA,  9th phase (06Aug2020 - 29Aug2020): finished 1159 trials in 0 min 30 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tSEN,  8th phase (22Jul2020 - 01Aug2020): finished 1001 trials in 0 min 25 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tKOR,  4th phase (13May2020 - 09Jun2020): finished 1961 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tUKR,  7th phase (31Jul2020 - 07Aug2020): finished  256 trials in 0 min  5 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tMEX,  1st phase (21May2020 - 07Jun2020): finished 1180 trials in 0 min 30 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tIRN,  8th phase (28Jul2020 - 11Aug2020): finished  682 trials in 0 min 15 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tSEN,  4th phase (10Jun2020 - 18Jun2020): finished 1030 trials in 0 min 25 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tMDA,  4th phase (25Jun2020 - 08Jul2020): finished 1995 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tRUS,  8th phase (01Aug2020 - 13Aug2020): finished 1975 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tMMR,  8th phase (01Aug2020 - 16Aug2020): finished 1971 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tUSA,  9th phase (18Aug2020 - 29Aug2020): finished  653 trials in 0 min 15 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tRUS,  4th phase (21Jun2020 - 30Jun2020): finished 1964 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tUSA,  8th phase (08Aug2020 - 17Aug2020): finished  654 trials in 0 min 15 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tKWT,  4th phase (23Jun2020 - 04Jul2020): finished 1959 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tUSA,  6th phase (15Jul2020 - 23Jul2020): finished  247 trials in 0 min  5 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tRUS,  3rd phase (06Jun2020 - 20Jun2020): finished 1958 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tRUS,  5th phase (01Jul2020 - 09Jul2020): finished 1968 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tARE,  1st phase (27Apr2020 - 12May2020): finished 1961 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tMDA,  3rd phase (16Jun2020 - 24Jun2020): finished  448 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tHUN,  2nd phase (28Apr2020 - 08May2020): finished 1962 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tPRT,  2nd phase (18May2020 - 30May2020): finished 1964 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tSEN,  7th phase (11Jul2020 - 21Jul2020): finished 1962 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tBHR, 10th phase (16Aug2020 - 29Aug2020): finished  253 trials in 0 min  5 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tIRN,  6th phase (01Jul2020 - 13Jul2020): finished  254 trials in 0 min  5 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tHUN,  3rd phase (09May2020 - 22May2020): finished  249 trials in 0 min  5 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tIRN,  9th phase (12Aug2020 - 29Aug2020): finished  684 trials in 0 min 15 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tUKR,  5th phase (11Jul2020 - 22Jul2020): finished  638 trials in 0 min 15 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tPRT,  4th phase (13Jun2020 - 24Jun2020): finished  462 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tFRA,  5th phase (05May2020 - 27May2020): finished 1964 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tITA,  3rd phase (12Apr2020 - 20Apr2020): finished  246 trials in 0 min  5 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tRUS,  9th phase (14Aug2020 - 29Aug2020): finished 1968 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tKOR,  1st phase (15Mar2020 - 25Mar2020): finished 1982 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tIRN,  4th phase (02Jun2020 - 15Jun2020): finished 1206 trials in 0 min 30 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tFRA,  6th phase (28May2020 - 22Jun2020): finished 2013 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tBHR,  4th phase (21Jun2020 - 28Jun2020): finished 2036 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tMMR,  4th phase (06Jun2020 - 15Jun2020): finished 2034 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tGEO,  4th phase (30May2020 - 11Jun2020): finished 2017 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tFRA,  3rd phase (12Apr2020 - 24Apr2020): finished 2019 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tARE,  6th phase (23Jun2020 - 02Jul2020): finished  486 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tKWT,  7th phase (26Jul2020 - 05Aug2020): finished  260 trials in 0 min  5 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tUKR,  8th phase (08Aug2020 - 15Aug2020): finished  262 trials in 0 min  5 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tHUN,  8th phase (05Aug2020 - 14Aug2020): finished  261 trials in 0 min  5 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tPRT,  6th phase (06Jul2020 - 14Jul2020): finished  261 trials in 0 min  5 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tITA,  7th phase (22May2020 - 12Jun2020): finished  253 trials in 0 min  5 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tHUN,  1st phase (15Apr2020 - 27Apr2020): finished 2049 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tBHR,  1st phase (06May2020 - 30May2020): finished 2053 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tGIN,  8th phase (06Aug2020 - 16Aug2020): finished 2076 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tRUS,  2nd phase (23May2020 - 05Jun2020): finished 2075 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tKOR,  6th phase (03Jul2020 - 19Jul2020): finished 2186 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tMEX,  5th phase (09Jul2020 - 17Jul2020): finished 2183 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tITA,  4th phase (21Apr2020 - 30Apr2020): finished  273 trials in 0 min  5 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tMMR,  3rd phase (26May2020 - 05Jun2020): finished 2198 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "Completed optimization. Total: 31 min 16 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      }
     ],
     "prompt_number": 11
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "# Show summary\n",
      "analyser.summary(countries=countries_show)"
     ],
     "language": "python",
     "metadata": {},
     "outputs": [
      {
       "html": [
        "<div>\n",
        "<style scoped>\n",
        "    .dataframe tbody tr th:only-of-type {\n",
        "        vertical-align: middle;\n",
        "    }\n",
        "\n",
        "    .dataframe tbody tr th {\n",
        "        vertical-align: top;\n",
        "    }\n",
        "\n",
        "    .dataframe thead th {\n",
        "        text-align: right;\n",
        "    }\n",
        "</style>\n",
        "<table border=\"1\" class=\"dataframe\">\n",
        "  <thead>\n",
        "    <tr style=\"text-align: right;\">\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th>Type</th>\n",
        "      <th>Start</th>\n",
        "      <th>End</th>\n",
        "      <th>Population</th>\n",
        "      <th>ODE</th>\n",
        "      <th>Rt</th>\n",
        "      <th>theta</th>\n",
        "      <th>kappa</th>\n",
        "      <th>rho</th>\n",
        "      <th>sigma</th>\n",
        "      <th>tau</th>\n",
        "      <th>1/alpha2 [day]</th>\n",
        "      <th>alpha1 [-]</th>\n",
        "      <th>1/beta [day]</th>\n",
        "      <th>1/gamma [day]</th>\n",
        "      <th>RMSLE</th>\n",
        "      <th>Trials</th>\n",
        "      <th>Runtime</th>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>Country</th>\n",
        "      <th>Phase</th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "    </tr>\n",
        "  </thead>\n",
        "  <tbody>\n",
        "    <tr>\n",
        "      <th rowspan=\"11\" valign=\"top\">Poland</th>\n",
        "      <th>1st</th>\n",
        "      <td>Past</td>\n",
        "      <td>24Apr2020</td>\n",
        "      <td>09May2020</td>\n",
        "      <td>37974750</td>\n",
        "      <td>SIR-F</td>\n",
        "      <td>1.26</td>\n",
        "      <td>0.0451644</td>\n",
        "      <td>0.00020735</td>\n",
        "      <td>0.00847486</td>\n",
        "      <td>0.00622871</td>\n",
        "      <td>360</td>\n",
        "      <td>1205</td>\n",
        "      <td>0.045</td>\n",
        "      <td>29</td>\n",
        "      <td>40</td>\n",
        "      <td>0.0351627</td>\n",
        "      <td>1907</td>\n",
        "      <td>1 min  0 sec</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>2nd</th>\n",
        "      <td>Past</td>\n",
        "      <td>10May2020</td>\n",
        "      <td>22May2020</td>\n",
        "      <td>37974750</td>\n",
        "      <td>SIR-F</td>\n",
        "      <td>1.39</td>\n",
        "      <td>0.00027009</td>\n",
        "      <td>0.000401838</td>\n",
        "      <td>0.00932214</td>\n",
        "      <td>0.00631913</td>\n",
        "      <td>360</td>\n",
        "      <td>622</td>\n",
        "      <td>0</td>\n",
        "      <td>26</td>\n",
        "      <td>39</td>\n",
        "      <td>0.0160919</td>\n",
        "      <td>1627</td>\n",
        "      <td>0 min 45 sec</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>3rd</th>\n",
        "      <td>Past</td>\n",
        "      <td>23May2020</td>\n",
        "      <td>05Jun2020</td>\n",
        "      <td>37974750</td>\n",
        "      <td>-</td>\n",
        "      <td>-</td>\n",
        "      <td>-</td>\n",
        "      <td>-</td>\n",
        "      <td>-</td>\n",
        "      <td>-</td>\n",
        "      <td>-</td>\n",
        "      <td>-</td>\n",
        "      <td>-</td>\n",
        "      <td>-</td>\n",
        "      <td>-</td>\n",
        "      <td>-</td>\n",
        "      <td>-</td>\n",
        "      <td>-</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>4th</th>\n",
        "      <td>Past</td>\n",
        "      <td>06Jun2020</td>\n",
        "      <td>16Jun2020</td>\n",
        "      <td>37974750</td>\n",
        "      <td>SIR-F</td>\n",
        "      <td>1.86</td>\n",
        "      <td>0.00100958</td>\n",
        "      <td>0.000215223</td>\n",
        "      <td>0.00744754</td>\n",
        "      <td>0.00378109</td>\n",
        "      <td>360</td>\n",
        "      <td>1161</td>\n",
        "      <td>0.001</td>\n",
        "      <td>33</td>\n",
        "      <td>66</td>\n",
        "      <td>0.0176667</td>\n",
        "      <td>637</td>\n",
        "      <td>0 min 15 sec</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>5th</th>\n",
        "      <td>Past</td>\n",
        "      <td>17Jun2020</td>\n",
        "      <td>30Jun2020</td>\n",
        "      <td>37974750</td>\n",
        "      <td>SIR-F</td>\n",
        "      <td>0.51</td>\n",
        "      <td>0.000441371</td>\n",
        "      <td>0.000228577</td>\n",
        "      <td>0.00536284</td>\n",
        "      <td>0.0101924</td>\n",
        "      <td>360</td>\n",
        "      <td>1093</td>\n",
        "      <td>0</td>\n",
        "      <td>46</td>\n",
        "      <td>24</td>\n",
        "      <td>0.0416401</td>\n",
        "      <td>243</td>\n",
        "      <td>0 min  5 sec</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>6th</th>\n",
        "      <td>Past</td>\n",
        "      <td>01Jul2020</td>\n",
        "      <td>14Jul2020</td>\n",
        "      <td>37974750</td>\n",
        "      <td>SIR-F</td>\n",
        "      <td>0.73</td>\n",
        "      <td>0.0158821</td>\n",
        "      <td>7.11105e-05</td>\n",
        "      <td>0.00754477</td>\n",
        "      <td>0.0100653</td>\n",
        "      <td>360</td>\n",
        "      <td>3515</td>\n",
        "      <td>0.016</td>\n",
        "      <td>33</td>\n",
        "      <td>24</td>\n",
        "      <td>0.0516791</td>\n",
        "      <td>255</td>\n",
        "      <td>0 min  5 sec</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>7th</th>\n",
        "      <td>Past</td>\n",
        "      <td>15Jul2020</td>\n",
        "      <td>25Jul2020</td>\n",
        "      <td>37974750</td>\n",
        "      <td>-</td>\n",
        "      <td>-</td>\n",
        "      <td>-</td>\n",
        "      <td>-</td>\n",
        "      <td>-</td>\n",
        "      <td>-</td>\n",
        "      <td>-</td>\n",
        "      <td>-</td>\n",
        "      <td>-</td>\n",
        "      <td>-</td>\n",
        "      <td>-</td>\n",
        "      <td>-</td>\n",
        "      <td>-</td>\n",
        "      <td>-</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>8th</th>\n",
        "      <td>Past</td>\n",
        "      <td>26Jul2020</td>\n",
        "      <td>04Aug2020</td>\n",
        "      <td>37974750</td>\n",
        "      <td>SIR-F</td>\n",
        "      <td>1.86</td>\n",
        "      <td>0.000636584</td>\n",
        "      <td>0.000150335</td>\n",
        "      <td>0.0155036</td>\n",
        "      <td>0.00819833</td>\n",
        "      <td>360</td>\n",
        "      <td>1662</td>\n",
        "      <td>0.001</td>\n",
        "      <td>16</td>\n",
        "      <td>30</td>\n",
        "      <td>0.0095054</td>\n",
        "      <td>255</td>\n",
        "      <td>0 min  5 sec</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>9th</th>\n",
        "      <td>Past</td>\n",
        "      <td>05Aug2020</td>\n",
        "      <td>12Aug2020</td>\n",
        "      <td>37974750</td>\n",
        "      <td>SIR-F</td>\n",
        "      <td>2.27</td>\n",
        "      <td>0.00100849</td>\n",
        "      <td>0.000215224</td>\n",
        "      <td>0.013552</td>\n",
        "      <td>0.00574956</td>\n",
        "      <td>360</td>\n",
        "      <td>1161</td>\n",
        "      <td>0.001</td>\n",
        "      <td>18</td>\n",
        "      <td>43</td>\n",
        "      <td>0.00606068</td>\n",
        "      <td>479</td>\n",
        "      <td>0 min 10 sec</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>10th</th>\n",
        "      <td>Past</td>\n",
        "      <td>13Aug2020</td>\n",
        "      <td>20Aug2020</td>\n",
        "      <td>37974750</td>\n",
        "      <td>SIR-F</td>\n",
        "      <td>1.76</td>\n",
        "      <td>0.00138448</td>\n",
        "      <td>0.00015031</td>\n",
        "      <td>0.0113208</td>\n",
        "      <td>0.00629107</td>\n",
        "      <td>360</td>\n",
        "      <td>1663</td>\n",
        "      <td>0.001</td>\n",
        "      <td>22</td>\n",
        "      <td>39</td>\n",
        "      <td>0.00571252</td>\n",
        "      <td>257</td>\n",
        "      <td>0 min  5 sec</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>11th</th>\n",
        "      <td>Past</td>\n",
        "      <td>21Aug2020</td>\n",
        "      <td>29Aug2020</td>\n",
        "      <td>37974750</td>\n",
        "      <td>SIR-F</td>\n",
        "      <td>1.44</td>\n",
        "      <td>0.000130564</td>\n",
        "      <td>0.00016822</td>\n",
        "      <td>0.00978138</td>\n",
        "      <td>0.00662391</td>\n",
        "      <td>360</td>\n",
        "      <td>1486</td>\n",
        "      <td>0</td>\n",
        "      <td>25</td>\n",
        "      <td>37</td>\n",
        "      <td>0.0065294</td>\n",
        "      <td>466</td>\n",
        "      <td>0 min 10 sec</td>\n",
        "    </tr>\n",
        "  </tbody>\n",
        "</table>\n",
        "</div>"
       ],
       "output_type": "pyout",
       "prompt_number": 12,
       "text": [
        "               Type      Start        End  Population    ODE    Rt  \\\n",
        "Country Phase                                                        \n",
        "Poland  1st    Past  24Apr2020  09May2020    37974750  SIR-F  1.26   \n",
        "        2nd    Past  10May2020  22May2020    37974750  SIR-F  1.39   \n",
        "        3rd    Past  23May2020  05Jun2020    37974750      -     -   \n",
        "        4th    Past  06Jun2020  16Jun2020    37974750  SIR-F  1.86   \n",
        "        5th    Past  17Jun2020  30Jun2020    37974750  SIR-F  0.51   \n",
        "        6th    Past  01Jul2020  14Jul2020    37974750  SIR-F  0.73   \n",
        "        7th    Past  15Jul2020  25Jul2020    37974750      -     -   \n",
        "        8th    Past  26Jul2020  04Aug2020    37974750  SIR-F  1.86   \n",
        "        9th    Past  05Aug2020  12Aug2020    37974750  SIR-F  2.27   \n",
        "        10th   Past  13Aug2020  20Aug2020    37974750  SIR-F  1.76   \n",
        "        11th   Past  21Aug2020  29Aug2020    37974750  SIR-F  1.44   \n",
        "\n",
        "                     theta        kappa         rho       sigma  tau  \\\n",
        "Country Phase                                                          \n",
        "Poland  1st      0.0451644   0.00020735  0.00847486  0.00622871  360   \n",
        "        2nd     0.00027009  0.000401838  0.00932214  0.00631913  360   \n",
        "        3rd              -            -           -           -    -   \n",
        "        4th     0.00100958  0.000215223  0.00744754  0.00378109  360   \n",
        "        5th    0.000441371  0.000228577  0.00536284   0.0101924  360   \n",
        "        6th      0.0158821  7.11105e-05  0.00754477   0.0100653  360   \n",
        "        7th              -            -           -           -    -   \n",
        "        8th    0.000636584  0.000150335   0.0155036  0.00819833  360   \n",
        "        9th     0.00100849  0.000215224    0.013552  0.00574956  360   \n",
        "        10th    0.00138448   0.00015031   0.0113208  0.00629107  360   \n",
        "        11th   0.000130564   0.00016822  0.00978138  0.00662391  360   \n",
        "\n",
        "              1/alpha2 [day] alpha1 [-] 1/beta [day] 1/gamma [day]  \\\n",
        "Country Phase                                                        \n",
        "Poland  1st             1205      0.045           29            40   \n",
        "        2nd              622          0           26            39   \n",
        "        3rd                -          -            -             -   \n",
        "        4th             1161      0.001           33            66   \n",
        "        5th             1093          0           46            24   \n",
        "        6th             3515      0.016           33            24   \n",
        "        7th                -          -            -             -   \n",
        "        8th             1662      0.001           16            30   \n",
        "        9th             1161      0.001           18            43   \n",
        "        10th            1663      0.001           22            39   \n",
        "        11th            1486          0           25            37   \n",
        "\n",
        "                    RMSLE Trials       Runtime  \n",
        "Country Phase                                   \n",
        "Poland  1st     0.0351627   1907  1 min  0 sec  \n",
        "        2nd     0.0160919   1627  0 min 45 sec  \n",
        "        3rd             -      -             -  \n",
        "        4th     0.0176667    637  0 min 15 sec  \n",
        "        5th     0.0416401    243  0 min  5 sec  \n",
        "        6th     0.0516791    255  0 min  5 sec  \n",
        "        7th             -      -             -  \n",
        "        8th     0.0095054    255  0 min  5 sec  \n",
        "        9th    0.00606068    479  0 min 10 sec  \n",
        "        10th   0.00571252    257  0 min  5 sec  \n",
        "        11th    0.0065294    466  0 min 10 sec  "
       ]
      }
     ],
     "prompt_number": 12
    },
    {
     "cell_type": "markdown",
     "metadata": {},
     "source": [
      "## Compare the history of parameters\n",
      "Here, compare the history of parameter values if countries."
     ]
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "# All parameter/day parameter/Rt/OxCGRT\n",
      "analyser.track().head()"
     ],
     "language": "python",
     "metadata": {},
     "outputs": [
      {
       "html": [
        "<div>\n",
        "<style scoped>\n",
        "    .dataframe tbody tr th:only-of-type {\n",
        "        vertical-align: middle;\n",
        "    }\n",
        "\n",
        "    .dataframe tbody tr th {\n",
        "        vertical-align: top;\n",
        "    }\n",
        "\n",
        "    .dataframe thead th {\n",
        "        text-align: right;\n",
        "    }\n",
        "</style>\n",
        "<table border=\"1\" class=\"dataframe\">\n",
        "  <thead>\n",
        "    <tr style=\"text-align: right;\">\n",
        "      <th></th>\n",
        "      <th>Date</th>\n",
        "      <th>Country</th>\n",
        "      <th>theta</th>\n",
        "      <th>kappa</th>\n",
        "      <th>rho</th>\n",
        "      <th>sigma</th>\n",
        "      <th>alpha1 [-]</th>\n",
        "      <th>1/alpha2 [day]</th>\n",
        "      <th>1/beta [day]</th>\n",
        "      <th>1/gamma [day]</th>\n",
        "      <th>...</th>\n",
        "      <th>Cancel_events</th>\n",
        "      <th>Gatherings_restrictions</th>\n",
        "      <th>Transport_closing</th>\n",
        "      <th>Stay_home_restrictions</th>\n",
        "      <th>Internal_movement_restrictions</th>\n",
        "      <th>International_movement_restrictions</th>\n",
        "      <th>Information_campaigns</th>\n",
        "      <th>Testing_policy</th>\n",
        "      <th>Contact_tracing</th>\n",
        "      <th>Stringency_index</th>\n",
        "    </tr>\n",
        "  </thead>\n",
        "  <tbody>\n",
        "    <tr>\n",
        "      <th>0</th>\n",
        "      <td>2020-05-02</td>\n",
        "      <td>Guinea</td>\n",
        "      <td>0.000460623</td>\n",
        "      <td>8.39738e-05</td>\n",
        "      <td>0.0106096</td>\n",
        "      <td>0.00859984</td>\n",
        "      <td>0</td>\n",
        "      <td>2977</td>\n",
        "      <td>23</td>\n",
        "      <td>29</td>\n",
        "      <td>...</td>\n",
        "      <td>2</td>\n",
        "      <td>3</td>\n",
        "      <td>1</td>\n",
        "      <td>2</td>\n",
        "      <td>2</td>\n",
        "      <td>4</td>\n",
        "      <td>2</td>\n",
        "      <td>2</td>\n",
        "      <td>1</td>\n",
        "      <td>78.7</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>1</th>\n",
        "      <td>2020-05-03</td>\n",
        "      <td>Guinea</td>\n",
        "      <td>0.000460623</td>\n",
        "      <td>8.39738e-05</td>\n",
        "      <td>0.0106096</td>\n",
        "      <td>0.00859984</td>\n",
        "      <td>0</td>\n",
        "      <td>2977</td>\n",
        "      <td>23</td>\n",
        "      <td>29</td>\n",
        "      <td>...</td>\n",
        "      <td>2</td>\n",
        "      <td>3</td>\n",
        "      <td>1</td>\n",
        "      <td>2</td>\n",
        "      <td>2</td>\n",
        "      <td>4</td>\n",
        "      <td>2</td>\n",
        "      <td>2</td>\n",
        "      <td>1</td>\n",
        "      <td>78.7</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>2</th>\n",
        "      <td>2020-05-04</td>\n",
        "      <td>Guinea</td>\n",
        "      <td>0.000460623</td>\n",
        "      <td>8.39738e-05</td>\n",
        "      <td>0.0106096</td>\n",
        "      <td>0.00859984</td>\n",
        "      <td>0</td>\n",
        "      <td>2977</td>\n",
        "      <td>23</td>\n",
        "      <td>29</td>\n",
        "      <td>...</td>\n",
        "      <td>2</td>\n",
        "      <td>3</td>\n",
        "      <td>1</td>\n",
        "      <td>2</td>\n",
        "      <td>2</td>\n",
        "      <td>4</td>\n",
        "      <td>2</td>\n",
        "      <td>2</td>\n",
        "      <td>1</td>\n",
        "      <td>78.7</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>3</th>\n",
        "      <td>2020-05-05</td>\n",
        "      <td>Guinea</td>\n",
        "      <td>0.000460623</td>\n",
        "      <td>8.39738e-05</td>\n",
        "      <td>0.0106096</td>\n",
        "      <td>0.00859984</td>\n",
        "      <td>0</td>\n",
        "      <td>2977</td>\n",
        "      <td>23</td>\n",
        "      <td>29</td>\n",
        "      <td>...</td>\n",
        "      <td>2</td>\n",
        "      <td>3</td>\n",
        "      <td>1</td>\n",
        "      <td>2</td>\n",
        "      <td>2</td>\n",
        "      <td>4</td>\n",
        "      <td>2</td>\n",
        "      <td>2</td>\n",
        "      <td>1</td>\n",
        "      <td>78.7</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>4</th>\n",
        "      <td>2020-05-06</td>\n",
        "      <td>Guinea</td>\n",
        "      <td>0.000460623</td>\n",
        "      <td>8.39738e-05</td>\n",
        "      <td>0.0106096</td>\n",
        "      <td>0.00859984</td>\n",
        "      <td>0</td>\n",
        "      <td>2977</td>\n",
        "      <td>23</td>\n",
        "      <td>29</td>\n",
        "      <td>...</td>\n",
        "      <td>2</td>\n",
        "      <td>3</td>\n",
        "      <td>1</td>\n",
        "      <td>2</td>\n",
        "      <td>2</td>\n",
        "      <td>4</td>\n",
        "      <td>2</td>\n",
        "      <td>2</td>\n",
        "      <td>1</td>\n",
        "      <td>78.7</td>\n",
        "    </tr>\n",
        "  </tbody>\n",
        "</table>\n",
        "<p>5 rows \u00d7 23 columns</p>\n",
        "</div>"
       ],
       "output_type": "pyout",
       "prompt_number": 13,
       "text": [
        "        Date Country        theta        kappa        rho       sigma  \\\n",
        "0 2020-05-02  Guinea  0.000460623  8.39738e-05  0.0106096  0.00859984   \n",
        "1 2020-05-03  Guinea  0.000460623  8.39738e-05  0.0106096  0.00859984   \n",
        "2 2020-05-04  Guinea  0.000460623  8.39738e-05  0.0106096  0.00859984   \n",
        "3 2020-05-05  Guinea  0.000460623  8.39738e-05  0.0106096  0.00859984   \n",
        "4 2020-05-06  Guinea  0.000460623  8.39738e-05  0.0106096  0.00859984   \n",
        "\n",
        "  alpha1 [-] 1/alpha2 [day] 1/beta [day] 1/gamma [day]  ... Cancel_events  \\\n",
        "0          0           2977           23            29  ...             2   \n",
        "1          0           2977           23            29  ...             2   \n",
        "2          0           2977           23            29  ...             2   \n",
        "3          0           2977           23            29  ...             2   \n",
        "4          0           2977           23            29  ...             2   \n",
        "\n",
        "   Gatherings_restrictions  Transport_closing  Stay_home_restrictions  \\\n",
        "0                        3                  1                       2   \n",
        "1                        3                  1                       2   \n",
        "2                        3                  1                       2   \n",
        "3                        3                  1                       2   \n",
        "4                        3                  1                       2   \n",
        "\n",
        "   Internal_movement_restrictions  International_movement_restrictions  \\\n",
        "0                               2                                    4   \n",
        "1                               2                                    4   \n",
        "2                               2                                    4   \n",
        "3                               2                                    4   \n",
        "4                               2                                    4   \n",
        "\n",
        "   Information_campaigns  Testing_policy  Contact_tracing  Stringency_index  \n",
        "0                      2               2                1              78.7  \n",
        "1                      2               2                1              78.7  \n",
        "2                      2               2                1              78.7  \n",
        "3                      2               2                1              78.7  \n",
        "4                      2               2                1              78.7  \n",
        "\n",
        "[5 rows x 23 columns]"
       ]
      }
     ],
     "prompt_number": 13
    },
    {
     "cell_type": "heading",
     "level": 3,
     "metadata": {},
     "source": [
      "$Rt$: Reprodcution number $\\mathrm{[-]}$"
     ]
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "analyser.param_history(\"Rt\", roll_window=None).tail()"
     ],
     "language": "python",
     "metadata": {},
     "outputs": [
      {
       "output_type": "display_data",
       "png": "\n",
       "text": [
        "<Figure size 648x432 with 1 Axes>"
       ]
      },
      {
       "html": [
        "<div>\n",
        "<style scoped>\n",
        "    .dataframe tbody tr th:only-of-type {\n",
        "        vertical-align: middle;\n",
        "    }\n",
        "\n",
        "    .dataframe tbody tr th {\n",
        "        vertical-align: top;\n",
        "    }\n",
        "\n",
        "    .dataframe thead th {\n",
        "        text-align: right;\n",
        "    }\n",
        "</style>\n",
        "<table border=\"1\" class=\"dataframe\">\n",
        "  <thead>\n",
        "    <tr style=\"text-align: right;\">\n",
        "      <th>Country</th>\n",
        "      <th>Bahrain</th>\n",
        "      <th>France</th>\n",
        "      <th>Georgia</th>\n",
        "      <th>Guinea</th>\n",
        "      <th>Hungary</th>\n",
        "      <th>Iran</th>\n",
        "      <th>Italy</th>\n",
        "      <th>Korea, South</th>\n",
        "      <th>Kuwait</th>\n",
        "      <th>Mexico</th>\n",
        "      <th>...</th>\n",
        "      <th>Myanmar</th>\n",
        "      <th>Peru</th>\n",
        "      <th>Poland</th>\n",
        "      <th>Portugal</th>\n",
        "      <th>Russia</th>\n",
        "      <th>Senegal</th>\n",
        "      <th>Turkey</th>\n",
        "      <th>Ukraine</th>\n",
        "      <th>United Arab Emirates</th>\n",
        "      <th>United States</th>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>Date</th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "    </tr>\n",
        "  </thead>\n",
        "  <tbody>\n",
        "    <tr>\n",
        "      <th>2020-08-25</th>\n",
        "      <td>0.97</td>\n",
        "      <td>19.15</td>\n",
        "      <td>1.08</td>\n",
        "      <td>0.84</td>\n",
        "      <td>3.11</td>\n",
        "      <td>1.23</td>\n",
        "      <td>1.58</td>\n",
        "      <td>1.84</td>\n",
        "      <td>0.87</td>\n",
        "      <td>0.94</td>\n",
        "      <td>...</td>\n",
        "      <td>0.25</td>\n",
        "      <td>1.21</td>\n",
        "      <td>1.44</td>\n",
        "      <td>0.76</td>\n",
        "      <td>0.78</td>\n",
        "      <td>1.21</td>\n",
        "      <td>1.04</td>\n",
        "      <td>2.54</td>\n",
        "      <td>0.86</td>\n",
        "      <td>2.18</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>2020-08-26</th>\n",
        "      <td>0.97</td>\n",
        "      <td>19.15</td>\n",
        "      <td>1.08</td>\n",
        "      <td>0.84</td>\n",
        "      <td>3.11</td>\n",
        "      <td>1.23</td>\n",
        "      <td>1.58</td>\n",
        "      <td>1.84</td>\n",
        "      <td>0.87</td>\n",
        "      <td>0.94</td>\n",
        "      <td>...</td>\n",
        "      <td>0.25</td>\n",
        "      <td>1.21</td>\n",
        "      <td>1.44</td>\n",
        "      <td>0.76</td>\n",
        "      <td>0.78</td>\n",
        "      <td>1.21</td>\n",
        "      <td>1.04</td>\n",
        "      <td>2.54</td>\n",
        "      <td>0.86</td>\n",
        "      <td>2.18</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>2020-08-27</th>\n",
        "      <td>0.97</td>\n",
        "      <td>19.15</td>\n",
        "      <td>1.08</td>\n",
        "      <td>0.84</td>\n",
        "      <td>3.11</td>\n",
        "      <td>1.23</td>\n",
        "      <td>1.58</td>\n",
        "      <td>1.84</td>\n",
        "      <td>0.87</td>\n",
        "      <td>0.94</td>\n",
        "      <td>...</td>\n",
        "      <td>0.25</td>\n",
        "      <td>1.21</td>\n",
        "      <td>1.44</td>\n",
        "      <td>0.76</td>\n",
        "      <td>0.78</td>\n",
        "      <td>1.21</td>\n",
        "      <td>1.04</td>\n",
        "      <td>2.54</td>\n",
        "      <td>0.86</td>\n",
        "      <td>2.18</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>2020-08-28</th>\n",
        "      <td>0.97</td>\n",
        "      <td>19.15</td>\n",
        "      <td>1.08</td>\n",
        "      <td>0.84</td>\n",
        "      <td>3.11</td>\n",
        "      <td>1.23</td>\n",
        "      <td>1.58</td>\n",
        "      <td>1.84</td>\n",
        "      <td>0.87</td>\n",
        "      <td>0.94</td>\n",
        "      <td>...</td>\n",
        "      <td>0.25</td>\n",
        "      <td>1.21</td>\n",
        "      <td>1.44</td>\n",
        "      <td>0.76</td>\n",
        "      <td>0.78</td>\n",
        "      <td>1.21</td>\n",
        "      <td>1.04</td>\n",
        "      <td>2.54</td>\n",
        "      <td>0.86</td>\n",
        "      <td>2.18</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>2020-08-29</th>\n",
        "      <td>0.97</td>\n",
        "      <td>19.15</td>\n",
        "      <td>1.08</td>\n",
        "      <td>0.84</td>\n",
        "      <td>3.11</td>\n",
        "      <td>1.23</td>\n",
        "      <td>1.58</td>\n",
        "      <td>1.84</td>\n",
        "      <td>0.87</td>\n",
        "      <td>0.94</td>\n",
        "      <td>...</td>\n",
        "      <td>0.25</td>\n",
        "      <td>1.21</td>\n",
        "      <td>1.44</td>\n",
        "      <td>0.76</td>\n",
        "      <td>0.78</td>\n",
        "      <td>1.21</td>\n",
        "      <td>1.04</td>\n",
        "      <td>2.54</td>\n",
        "      <td>0.86</td>\n",
        "      <td>2.18</td>\n",
        "    </tr>\n",
        "  </tbody>\n",
        "</table>\n",
        "<p>5 rows \u00d7 21 columns</p>\n",
        "</div>"
       ],
       "output_type": "pyout",
       "prompt_number": 14,
       "text": [
        "Country     Bahrain  France  Georgia  Guinea  Hungary  Iran  Italy  \\\n",
        "Date                                                                 \n",
        "2020-08-25     0.97   19.15     1.08    0.84     3.11  1.23   1.58   \n",
        "2020-08-26     0.97   19.15     1.08    0.84     3.11  1.23   1.58   \n",
        "2020-08-27     0.97   19.15     1.08    0.84     3.11  1.23   1.58   \n",
        "2020-08-28     0.97   19.15     1.08    0.84     3.11  1.23   1.58   \n",
        "2020-08-29     0.97   19.15     1.08    0.84     3.11  1.23   1.58   \n",
        "\n",
        "Country     Korea, South  Kuwait  Mexico  ...  Myanmar  Peru  Poland  \\\n",
        "Date                                      ...                          \n",
        "2020-08-25          1.84    0.87    0.94  ...     0.25  1.21    1.44   \n",
        "2020-08-26          1.84    0.87    0.94  ...     0.25  1.21    1.44   \n",
        "2020-08-27          1.84    0.87    0.94  ...     0.25  1.21    1.44   \n",
        "2020-08-28          1.84    0.87    0.94  ...     0.25  1.21    1.44   \n",
        "2020-08-29          1.84    0.87    0.94  ...     0.25  1.21    1.44   \n",
        "\n",
        "Country     Portugal  Russia  Senegal  Turkey  Ukraine  United Arab Emirates  \\\n",
        "Date                                                                           \n",
        "2020-08-25      0.76    0.78     1.21    1.04     2.54                  0.86   \n",
        "2020-08-26      0.76    0.78     1.21    1.04     2.54                  0.86   \n",
        "2020-08-27      0.76    0.78     1.21    1.04     2.54                  0.86   \n",
        "2020-08-28      0.76    0.78     1.21    1.04     2.54                  0.86   \n",
        "2020-08-29      0.76    0.78     1.21    1.04     2.54                  0.86   \n",
        "\n",
        "Country     United States  \n",
        "Date                       \n",
        "2020-08-25           2.18  \n",
        "2020-08-26           2.18  \n",
        "2020-08-27           2.18  \n",
        "2020-08-28           2.18  \n",
        "2020-08-29           2.18  \n",
        "\n",
        "[5 rows x 21 columns]"
       ]
      }
     ],
     "prompt_number": 14
    },
    {
     "cell_type": "heading",
     "level": 3,
     "metadata": {},
     "source": [
      "$\\rho$: Effective contact rate $\\mathrm{[-]}$"
     ]
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "analyser.param_history(\"rho\", roll_window=None).tail()"
     ],
     "language": "python",
     "metadata": {},
     "outputs": [
      {
       "output_type": "display_data",
       "png": "\n",
       "text": [
        "<Figure size 648x432 with 1 Axes>"
       ]
      },
      {
       "html": [
        "<div>\n",
        "<style scoped>\n",
        "    .dataframe tbody tr th:only-of-type {\n",
        "        vertical-align: middle;\n",
        "    }\n",
        "\n",
        "    .dataframe tbody tr th {\n",
        "        vertical-align: top;\n",
        "    }\n",
        "\n",
        "    .dataframe thead th {\n",
        "        text-align: right;\n",
        "    }\n",
        "</style>\n",
        "<table border=\"1\" class=\"dataframe\">\n",
        "  <thead>\n",
        "    <tr style=\"text-align: right;\">\n",
        "      <th>Country</th>\n",
        "      <th>Bahrain</th>\n",
        "      <th>France</th>\n",
        "      <th>Georgia</th>\n",
        "      <th>Guinea</th>\n",
        "      <th>Hungary</th>\n",
        "      <th>Iran</th>\n",
        "      <th>Italy</th>\n",
        "      <th>Korea, South</th>\n",
        "      <th>Kuwait</th>\n",
        "      <th>Mexico</th>\n",
        "      <th>...</th>\n",
        "      <th>Myanmar</th>\n",
        "      <th>Peru</th>\n",
        "      <th>Poland</th>\n",
        "      <th>Portugal</th>\n",
        "      <th>Russia</th>\n",
        "      <th>Senegal</th>\n",
        "      <th>Turkey</th>\n",
        "      <th>Ukraine</th>\n",
        "      <th>United Arab Emirates</th>\n",
        "      <th>United States</th>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>Date</th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "    </tr>\n",
        "  </thead>\n",
        "  <tbody>\n",
        "    <tr>\n",
        "      <th>2020-08-25</th>\n",
        "      <td>0.027243</td>\n",
        "      <td>0.006668</td>\n",
        "      <td>0.01148</td>\n",
        "      <td>0.012866</td>\n",
        "      <td>0.011866</td>\n",
        "      <td>0.020076</td>\n",
        "      <td>0.00763</td>\n",
        "      <td>0.019806</td>\n",
        "      <td>0.017069</td>\n",
        "      <td>0.03478</td>\n",
        "      <td>...</td>\n",
        "      <td>0.001592</td>\n",
        "      <td>0.003833</td>\n",
        "      <td>0.009781</td>\n",
        "      <td>0.003334</td>\n",
        "      <td>0.001259</td>\n",
        "      <td>0.005426</td>\n",
        "      <td>0.024992</td>\n",
        "      <td>0.010486</td>\n",
        "      <td>0.010818</td>\n",
        "      <td>0.00318</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>2020-08-26</th>\n",
        "      <td>0.027243</td>\n",
        "      <td>0.006668</td>\n",
        "      <td>0.01148</td>\n",
        "      <td>0.012866</td>\n",
        "      <td>0.011866</td>\n",
        "      <td>0.020076</td>\n",
        "      <td>0.00763</td>\n",
        "      <td>0.019806</td>\n",
        "      <td>0.017069</td>\n",
        "      <td>0.03478</td>\n",
        "      <td>...</td>\n",
        "      <td>0.001592</td>\n",
        "      <td>0.003833</td>\n",
        "      <td>0.009781</td>\n",
        "      <td>0.003334</td>\n",
        "      <td>0.001259</td>\n",
        "      <td>0.005426</td>\n",
        "      <td>0.024992</td>\n",
        "      <td>0.010486</td>\n",
        "      <td>0.010818</td>\n",
        "      <td>0.00318</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>2020-08-27</th>\n",
        "      <td>0.027243</td>\n",
        "      <td>0.006668</td>\n",
        "      <td>0.01148</td>\n",
        "      <td>0.012866</td>\n",
        "      <td>0.011866</td>\n",
        "      <td>0.020076</td>\n",
        "      <td>0.00763</td>\n",
        "      <td>0.019806</td>\n",
        "      <td>0.017069</td>\n",
        "      <td>0.03478</td>\n",
        "      <td>...</td>\n",
        "      <td>0.001592</td>\n",
        "      <td>0.003833</td>\n",
        "      <td>0.009781</td>\n",
        "      <td>0.003334</td>\n",
        "      <td>0.001259</td>\n",
        "      <td>0.005426</td>\n",
        "      <td>0.024992</td>\n",
        "      <td>0.010486</td>\n",
        "      <td>0.010818</td>\n",
        "      <td>0.00318</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>2020-08-28</th>\n",
        "      <td>0.027243</td>\n",
        "      <td>0.006668</td>\n",
        "      <td>0.01148</td>\n",
        "      <td>0.012866</td>\n",
        "      <td>0.011866</td>\n",
        "      <td>0.020076</td>\n",
        "      <td>0.00763</td>\n",
        "      <td>0.019806</td>\n",
        "      <td>0.017069</td>\n",
        "      <td>0.03478</td>\n",
        "      <td>...</td>\n",
        "      <td>0.001592</td>\n",
        "      <td>0.003833</td>\n",
        "      <td>0.009781</td>\n",
        "      <td>0.003334</td>\n",
        "      <td>0.001259</td>\n",
        "      <td>0.005426</td>\n",
        "      <td>0.024992</td>\n",
        "      <td>0.010486</td>\n",
        "      <td>0.010818</td>\n",
        "      <td>0.00318</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>2020-08-29</th>\n",
        "      <td>0.027243</td>\n",
        "      <td>0.006668</td>\n",
        "      <td>0.01148</td>\n",
        "      <td>0.012866</td>\n",
        "      <td>0.011866</td>\n",
        "      <td>0.020076</td>\n",
        "      <td>0.00763</td>\n",
        "      <td>0.019806</td>\n",
        "      <td>0.017069</td>\n",
        "      <td>0.03478</td>\n",
        "      <td>...</td>\n",
        "      <td>0.001592</td>\n",
        "      <td>0.003833</td>\n",
        "      <td>0.009781</td>\n",
        "      <td>0.003334</td>\n",
        "      <td>0.001259</td>\n",
        "      <td>0.005426</td>\n",
        "      <td>0.024992</td>\n",
        "      <td>0.010486</td>\n",
        "      <td>0.010818</td>\n",
        "      <td>0.00318</td>\n",
        "    </tr>\n",
        "  </tbody>\n",
        "</table>\n",
        "<p>5 rows \u00d7 21 columns</p>\n",
        "</div>"
       ],
       "output_type": "pyout",
       "prompt_number": 15,
       "text": [
        "Country      Bahrain    France  Georgia    Guinea   Hungary      Iran  \\\n",
        "Date                                                                    \n",
        "2020-08-25  0.027243  0.006668  0.01148  0.012866  0.011866  0.020076   \n",
        "2020-08-26  0.027243  0.006668  0.01148  0.012866  0.011866  0.020076   \n",
        "2020-08-27  0.027243  0.006668  0.01148  0.012866  0.011866  0.020076   \n",
        "2020-08-28  0.027243  0.006668  0.01148  0.012866  0.011866  0.020076   \n",
        "2020-08-29  0.027243  0.006668  0.01148  0.012866  0.011866  0.020076   \n",
        "\n",
        "Country       Italy  Korea, South    Kuwait   Mexico  ...   Myanmar      Peru  \\\n",
        "Date                                                  ...                       \n",
        "2020-08-25  0.00763      0.019806  0.017069  0.03478  ...  0.001592  0.003833   \n",
        "2020-08-26  0.00763      0.019806  0.017069  0.03478  ...  0.001592  0.003833   \n",
        "2020-08-27  0.00763      0.019806  0.017069  0.03478  ...  0.001592  0.003833   \n",
        "2020-08-28  0.00763      0.019806  0.017069  0.03478  ...  0.001592  0.003833   \n",
        "2020-08-29  0.00763      0.019806  0.017069  0.03478  ...  0.001592  0.003833   \n",
        "\n",
        "Country       Poland  Portugal    Russia   Senegal    Turkey   Ukraine  \\\n",
        "Date                                                                     \n",
        "2020-08-25  0.009781  0.003334  0.001259  0.005426  0.024992  0.010486   \n",
        "2020-08-26  0.009781  0.003334  0.001259  0.005426  0.024992  0.010486   \n",
        "2020-08-27  0.009781  0.003334  0.001259  0.005426  0.024992  0.010486   \n",
        "2020-08-28  0.009781  0.003334  0.001259  0.005426  0.024992  0.010486   \n",
        "2020-08-29  0.009781  0.003334  0.001259  0.005426  0.024992  0.010486   \n",
        "\n",
        "Country     United Arab Emirates  United States  \n",
        "Date                                             \n",
        "2020-08-25              0.010818        0.00318  \n",
        "2020-08-26              0.010818        0.00318  \n",
        "2020-08-27              0.010818        0.00318  \n",
        "2020-08-28              0.010818        0.00318  \n",
        "2020-08-29              0.010818        0.00318  \n",
        "\n",
        "[5 rows x 21 columns]"
       ]
      }
     ],
     "prompt_number": 15
    },
    {
     "cell_type": "heading",
     "level": 3,
     "metadata": {},
     "source": [
      "$\\sigma$: Recovery rate $\\mathrm{[-]}$"
     ]
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "analyser.param_history(\"sigma\", roll_window=None).tail()"
     ],
     "language": "python",
     "metadata": {},
     "outputs": [
      {
       "output_type": "display_data",
       "png": "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\n",
       "text": [
        "<Figure size 648x432 with 1 Axes>"
       ]
      },
      {
       "html": [
        "<div>\n",
        "<style scoped>\n",
        "    .dataframe tbody tr th:only-of-type {\n",
        "        vertical-align: middle;\n",
        "    }\n",
        "\n",
        "    .dataframe tbody tr th {\n",
        "        vertical-align: top;\n",
        "    }\n",
        "\n",
        "    .dataframe thead th {\n",
        "        text-align: right;\n",
        "    }\n",
        "</style>\n",
        "<table border=\"1\" class=\"dataframe\">\n",
        "  <thead>\n",
        "    <tr style=\"text-align: right;\">\n",
        "      <th>Country</th>\n",
        "      <th>Bahrain</th>\n",
        "      <th>France</th>\n",
        "      <th>Georgia</th>\n",
        "      <th>Guinea</th>\n",
        "      <th>Hungary</th>\n",
        "      <th>Iran</th>\n",
        "      <th>Italy</th>\n",
        "      <th>Korea, South</th>\n",
        "      <th>Kuwait</th>\n",
        "      <th>Mexico</th>\n",
        "      <th>...</th>\n",
        "      <th>Myanmar</th>\n",
        "      <th>Peru</th>\n",
        "      <th>Poland</th>\n",
        "      <th>Portugal</th>\n",
        "      <th>Russia</th>\n",
        "      <th>Senegal</th>\n",
        "      <th>Turkey</th>\n",
        "      <th>Ukraine</th>\n",
        "      <th>United Arab Emirates</th>\n",
        "      <th>United States</th>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>Date</th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "    </tr>\n",
        "  </thead>\n",
        "  <tbody>\n",
        "    <tr>\n",
        "      <th>2020-08-25</th>\n",
        "      <td>0.028054</td>\n",
        "      <td>0.000317</td>\n",
        "      <td>0.010581</td>\n",
        "      <td>0.015162</td>\n",
        "      <td>0.003619</td>\n",
        "      <td>0.015193</td>\n",
        "      <td>0.004634</td>\n",
        "      <td>0.010684</td>\n",
        "      <td>0.019557</td>\n",
        "      <td>0.033604</td>\n",
        "      <td>...</td>\n",
        "      <td>0.006464</td>\n",
        "      <td>0.003075</td>\n",
        "      <td>0.006624</td>\n",
        "      <td>0.004313</td>\n",
        "      <td>0.001573</td>\n",
        "      <td>0.004331</td>\n",
        "      <td>0.02371</td>\n",
        "      <td>0.003968</td>\n",
        "      <td>0.012581</td>\n",
        "      <td>0.001413</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>2020-08-26</th>\n",
        "      <td>0.028054</td>\n",
        "      <td>0.000317</td>\n",
        "      <td>0.010581</td>\n",
        "      <td>0.015162</td>\n",
        "      <td>0.003619</td>\n",
        "      <td>0.015193</td>\n",
        "      <td>0.004634</td>\n",
        "      <td>0.010684</td>\n",
        "      <td>0.019557</td>\n",
        "      <td>0.033604</td>\n",
        "      <td>...</td>\n",
        "      <td>0.006464</td>\n",
        "      <td>0.003075</td>\n",
        "      <td>0.006624</td>\n",
        "      <td>0.004313</td>\n",
        "      <td>0.001573</td>\n",
        "      <td>0.004331</td>\n",
        "      <td>0.02371</td>\n",
        "      <td>0.003968</td>\n",
        "      <td>0.012581</td>\n",
        "      <td>0.001413</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>2020-08-27</th>\n",
        "      <td>0.028054</td>\n",
        "      <td>0.000317</td>\n",
        "      <td>0.010581</td>\n",
        "      <td>0.015162</td>\n",
        "      <td>0.003619</td>\n",
        "      <td>0.015193</td>\n",
        "      <td>0.004634</td>\n",
        "      <td>0.010684</td>\n",
        "      <td>0.019557</td>\n",
        "      <td>0.033604</td>\n",
        "      <td>...</td>\n",
        "      <td>0.006464</td>\n",
        "      <td>0.003075</td>\n",
        "      <td>0.006624</td>\n",
        "      <td>0.004313</td>\n",
        "      <td>0.001573</td>\n",
        "      <td>0.004331</td>\n",
        "      <td>0.02371</td>\n",
        "      <td>0.003968</td>\n",
        "      <td>0.012581</td>\n",
        "      <td>0.001413</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>2020-08-28</th>\n",
        "      <td>0.028054</td>\n",
        "      <td>0.000317</td>\n",
        "      <td>0.010581</td>\n",
        "      <td>0.015162</td>\n",
        "      <td>0.003619</td>\n",
        "      <td>0.015193</td>\n",
        "      <td>0.004634</td>\n",
        "      <td>0.010684</td>\n",
        "      <td>0.019557</td>\n",
        "      <td>0.033604</td>\n",
        "      <td>...</td>\n",
        "      <td>0.006464</td>\n",
        "      <td>0.003075</td>\n",
        "      <td>0.006624</td>\n",
        "      <td>0.004313</td>\n",
        "      <td>0.001573</td>\n",
        "      <td>0.004331</td>\n",
        "      <td>0.02371</td>\n",
        "      <td>0.003968</td>\n",
        "      <td>0.012581</td>\n",
        "      <td>0.001413</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>2020-08-29</th>\n",
        "      <td>0.028054</td>\n",
        "      <td>0.000317</td>\n",
        "      <td>0.010581</td>\n",
        "      <td>0.015162</td>\n",
        "      <td>0.003619</td>\n",
        "      <td>0.015193</td>\n",
        "      <td>0.004634</td>\n",
        "      <td>0.010684</td>\n",
        "      <td>0.019557</td>\n",
        "      <td>0.033604</td>\n",
        "      <td>...</td>\n",
        "      <td>0.006464</td>\n",
        "      <td>0.003075</td>\n",
        "      <td>0.006624</td>\n",
        "      <td>0.004313</td>\n",
        "      <td>0.001573</td>\n",
        "      <td>0.004331</td>\n",
        "      <td>0.02371</td>\n",
        "      <td>0.003968</td>\n",
        "      <td>0.012581</td>\n",
        "      <td>0.001413</td>\n",
        "    </tr>\n",
        "  </tbody>\n",
        "</table>\n",
        "<p>5 rows \u00d7 21 columns</p>\n",
        "</div>"
       ],
       "output_type": "pyout",
       "prompt_number": 16,
       "text": [
        "Country      Bahrain    France   Georgia    Guinea   Hungary      Iran  \\\n",
        "Date                                                                     \n",
        "2020-08-25  0.028054  0.000317  0.010581  0.015162  0.003619  0.015193   \n",
        "2020-08-26  0.028054  0.000317  0.010581  0.015162  0.003619  0.015193   \n",
        "2020-08-27  0.028054  0.000317  0.010581  0.015162  0.003619  0.015193   \n",
        "2020-08-28  0.028054  0.000317  0.010581  0.015162  0.003619  0.015193   \n",
        "2020-08-29  0.028054  0.000317  0.010581  0.015162  0.003619  0.015193   \n",
        "\n",
        "Country        Italy  Korea, South    Kuwait    Mexico  ...   Myanmar  \\\n",
        "Date                                                    ...             \n",
        "2020-08-25  0.004634      0.010684  0.019557  0.033604  ...  0.006464   \n",
        "2020-08-26  0.004634      0.010684  0.019557  0.033604  ...  0.006464   \n",
        "2020-08-27  0.004634      0.010684  0.019557  0.033604  ...  0.006464   \n",
        "2020-08-28  0.004634      0.010684  0.019557  0.033604  ...  0.006464   \n",
        "2020-08-29  0.004634      0.010684  0.019557  0.033604  ...  0.006464   \n",
        "\n",
        "Country         Peru    Poland  Portugal    Russia   Senegal   Turkey  \\\n",
        "Date                                                                    \n",
        "2020-08-25  0.003075  0.006624  0.004313  0.001573  0.004331  0.02371   \n",
        "2020-08-26  0.003075  0.006624  0.004313  0.001573  0.004331  0.02371   \n",
        "2020-08-27  0.003075  0.006624  0.004313  0.001573  0.004331  0.02371   \n",
        "2020-08-28  0.003075  0.006624  0.004313  0.001573  0.004331  0.02371   \n",
        "2020-08-29  0.003075  0.006624  0.004313  0.001573  0.004331  0.02371   \n",
        "\n",
        "Country      Ukraine  United Arab Emirates  United States  \n",
        "Date                                                       \n",
        "2020-08-25  0.003968              0.012581       0.001413  \n",
        "2020-08-26  0.003968              0.012581       0.001413  \n",
        "2020-08-27  0.003968              0.012581       0.001413  \n",
        "2020-08-28  0.003968              0.012581       0.001413  \n",
        "2020-08-29  0.003968              0.012581       0.001413  \n",
        "\n",
        "[5 rows x 21 columns]"
       ]
      }
     ],
     "prompt_number": 16
    },
    {
     "cell_type": "heading",
     "level": 3,
     "metadata": {},
     "source": [
      "$\\kappa$: Mortality rate of infected cases $\\mathrm{[-]}$"
     ]
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "analyser.param_history(\"kappa\", roll_window=None).tail()"
     ],
     "language": "python",
     "metadata": {},
     "outputs": [
      {
       "output_type": "display_data",
       "png": "\n",
       "text": [
        "<Figure size 648x432 with 1 Axes>"
       ]
      },
      {
       "html": [
        "<div>\n",
        "<style scoped>\n",
        "    .dataframe tbody tr th:only-of-type {\n",
        "        vertical-align: middle;\n",
        "    }\n",
        "\n",
        "    .dataframe tbody tr th {\n",
        "        vertical-align: top;\n",
        "    }\n",
        "\n",
        "    .dataframe thead th {\n",
        "        text-align: right;\n",
        "    }\n",
        "</style>\n",
        "<table border=\"1\" class=\"dataframe\">\n",
        "  <thead>\n",
        "    <tr style=\"text-align: right;\">\n",
        "      <th>Country</th>\n",
        "      <th>Bahrain</th>\n",
        "      <th>France</th>\n",
        "      <th>Georgia</th>\n",
        "      <th>Guinea</th>\n",
        "      <th>Hungary</th>\n",
        "      <th>Iran</th>\n",
        "      <th>Italy</th>\n",
        "      <th>Korea, South</th>\n",
        "      <th>Kuwait</th>\n",
        "      <th>Mexico</th>\n",
        "      <th>...</th>\n",
        "      <th>Myanmar</th>\n",
        "      <th>Peru</th>\n",
        "      <th>Poland</th>\n",
        "      <th>Portugal</th>\n",
        "      <th>Russia</th>\n",
        "      <th>Senegal</th>\n",
        "      <th>Turkey</th>\n",
        "      <th>Ukraine</th>\n",
        "      <th>United Arab Emirates</th>\n",
        "      <th>United States</th>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>Date</th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "    </tr>\n",
        "  </thead>\n",
        "  <tbody>\n",
        "    <tr>\n",
        "      <th>2020-08-25</th>\n",
        "      <td>0.000059</td>\n",
        "      <td>0.000031</td>\n",
        "      <td>0.000057</td>\n",
        "      <td>0.000164</td>\n",
        "      <td>0.000196</td>\n",
        "      <td>0.000214</td>\n",
        "      <td>0.000192</td>\n",
        "      <td>0.000099</td>\n",
        "      <td>0.000071</td>\n",
        "      <td>0.000394</td>\n",
        "      <td>...</td>\n",
        "      <td>0.000009</td>\n",
        "      <td>0.000084</td>\n",
        "      <td>0.000168</td>\n",
        "      <td>0.000036</td>\n",
        "      <td>0.000006</td>\n",
        "      <td>0.000148</td>\n",
        "      <td>0.000294</td>\n",
        "      <td>0.000162</td>\n",
        "      <td>0.000031</td>\n",
        "      <td>0.000019</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>2020-08-26</th>\n",
        "      <td>0.000059</td>\n",
        "      <td>0.000031</td>\n",
        "      <td>0.000057</td>\n",
        "      <td>0.000164</td>\n",
        "      <td>0.000196</td>\n",
        "      <td>0.000214</td>\n",
        "      <td>0.000192</td>\n",
        "      <td>0.000099</td>\n",
        "      <td>0.000071</td>\n",
        "      <td>0.000394</td>\n",
        "      <td>...</td>\n",
        "      <td>0.000009</td>\n",
        "      <td>0.000084</td>\n",
        "      <td>0.000168</td>\n",
        "      <td>0.000036</td>\n",
        "      <td>0.000006</td>\n",
        "      <td>0.000148</td>\n",
        "      <td>0.000294</td>\n",
        "      <td>0.000162</td>\n",
        "      <td>0.000031</td>\n",
        "      <td>0.000019</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>2020-08-27</th>\n",
        "      <td>0.000059</td>\n",
        "      <td>0.000031</td>\n",
        "      <td>0.000057</td>\n",
        "      <td>0.000164</td>\n",
        "      <td>0.000196</td>\n",
        "      <td>0.000214</td>\n",
        "      <td>0.000192</td>\n",
        "      <td>0.000099</td>\n",
        "      <td>0.000071</td>\n",
        "      <td>0.000394</td>\n",
        "      <td>...</td>\n",
        "      <td>0.000009</td>\n",
        "      <td>0.000084</td>\n",
        "      <td>0.000168</td>\n",
        "      <td>0.000036</td>\n",
        "      <td>0.000006</td>\n",
        "      <td>0.000148</td>\n",
        "      <td>0.000294</td>\n",
        "      <td>0.000162</td>\n",
        "      <td>0.000031</td>\n",
        "      <td>0.000019</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>2020-08-28</th>\n",
        "      <td>0.000059</td>\n",
        "      <td>0.000031</td>\n",
        "      <td>0.000057</td>\n",
        "      <td>0.000164</td>\n",
        "      <td>0.000196</td>\n",
        "      <td>0.000214</td>\n",
        "      <td>0.000192</td>\n",
        "      <td>0.000099</td>\n",
        "      <td>0.000071</td>\n",
        "      <td>0.000394</td>\n",
        "      <td>...</td>\n",
        "      <td>0.000009</td>\n",
        "      <td>0.000084</td>\n",
        "      <td>0.000168</td>\n",
        "      <td>0.000036</td>\n",
        "      <td>0.000006</td>\n",
        "      <td>0.000148</td>\n",
        "      <td>0.000294</td>\n",
        "      <td>0.000162</td>\n",
        "      <td>0.000031</td>\n",
        "      <td>0.000019</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>2020-08-29</th>\n",
        "      <td>0.000059</td>\n",
        "      <td>0.000031</td>\n",
        "      <td>0.000057</td>\n",
        "      <td>0.000164</td>\n",
        "      <td>0.000196</td>\n",
        "      <td>0.000214</td>\n",
        "      <td>0.000192</td>\n",
        "      <td>0.000099</td>\n",
        "      <td>0.000071</td>\n",
        "      <td>0.000394</td>\n",
        "      <td>...</td>\n",
        "      <td>0.000009</td>\n",
        "      <td>0.000084</td>\n",
        "      <td>0.000168</td>\n",
        "      <td>0.000036</td>\n",
        "      <td>0.000006</td>\n",
        "      <td>0.000148</td>\n",
        "      <td>0.000294</td>\n",
        "      <td>0.000162</td>\n",
        "      <td>0.000031</td>\n",
        "      <td>0.000019</td>\n",
        "    </tr>\n",
        "  </tbody>\n",
        "</table>\n",
        "<p>5 rows \u00d7 21 columns</p>\n",
        "</div>"
       ],
       "output_type": "pyout",
       "prompt_number": 17,
       "text": [
        "Country      Bahrain    France   Georgia    Guinea   Hungary      Iran  \\\n",
        "Date                                                                     \n",
        "2020-08-25  0.000059  0.000031  0.000057  0.000164  0.000196  0.000214   \n",
        "2020-08-26  0.000059  0.000031  0.000057  0.000164  0.000196  0.000214   \n",
        "2020-08-27  0.000059  0.000031  0.000057  0.000164  0.000196  0.000214   \n",
        "2020-08-28  0.000059  0.000031  0.000057  0.000164  0.000196  0.000214   \n",
        "2020-08-29  0.000059  0.000031  0.000057  0.000164  0.000196  0.000214   \n",
        "\n",
        "Country        Italy  Korea, South    Kuwait    Mexico  ...   Myanmar  \\\n",
        "Date                                                    ...             \n",
        "2020-08-25  0.000192      0.000099  0.000071  0.000394  ...  0.000009   \n",
        "2020-08-26  0.000192      0.000099  0.000071  0.000394  ...  0.000009   \n",
        "2020-08-27  0.000192      0.000099  0.000071  0.000394  ...  0.000009   \n",
        "2020-08-28  0.000192      0.000099  0.000071  0.000394  ...  0.000009   \n",
        "2020-08-29  0.000192      0.000099  0.000071  0.000394  ...  0.000009   \n",
        "\n",
        "Country         Peru    Poland  Portugal    Russia   Senegal    Turkey  \\\n",
        "Date                                                                     \n",
        "2020-08-25  0.000084  0.000168  0.000036  0.000006  0.000148  0.000294   \n",
        "2020-08-26  0.000084  0.000168  0.000036  0.000006  0.000148  0.000294   \n",
        "2020-08-27  0.000084  0.000168  0.000036  0.000006  0.000148  0.000294   \n",
        "2020-08-28  0.000084  0.000168  0.000036  0.000006  0.000148  0.000294   \n",
        "2020-08-29  0.000084  0.000168  0.000036  0.000006  0.000148  0.000294   \n",
        "\n",
        "Country      Ukraine  United Arab Emirates  United States  \n",
        "Date                                                       \n",
        "2020-08-25  0.000162              0.000031       0.000019  \n",
        "2020-08-26  0.000162              0.000031       0.000019  \n",
        "2020-08-27  0.000162              0.000031       0.000019  \n",
        "2020-08-28  0.000162              0.000031       0.000019  \n",
        "2020-08-29  0.000162              0.000031       0.000019  \n",
        "\n",
        "[5 rows x 21 columns]"
       ]
      }
     ],
     "prompt_number": 17
    },
    {
     "cell_type": "heading",
     "level": 3,
     "metadata": {},
     "source": [
      "$\\theta$: Mortality rate of S$^\\ast$ cases $\\mathrm{[-]}$"
     ]
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "analyser.param_history(\"theta\", roll_window=None).tail()"
     ],
     "language": "python",
     "metadata": {},
     "outputs": [
      {
       "output_type": "display_data",
       "png": "\n",
       "text": [
        "<Figure size 648x432 with 1 Axes>"
       ]
      },
      {
       "html": [
        "<div>\n",
        "<style scoped>\n",
        "    .dataframe tbody tr th:only-of-type {\n",
        "        vertical-align: middle;\n",
        "    }\n",
        "\n",
        "    .dataframe tbody tr th {\n",
        "        vertical-align: top;\n",
        "    }\n",
        "\n",
        "    .dataframe thead th {\n",
        "        text-align: right;\n",
        "    }\n",
        "</style>\n",
        "<table border=\"1\" class=\"dataframe\">\n",
        "  <thead>\n",
        "    <tr style=\"text-align: right;\">\n",
        "      <th>Country</th>\n",
        "      <th>Bahrain</th>\n",
        "      <th>France</th>\n",
        "      <th>Georgia</th>\n",
        "      <th>Guinea</th>\n",
        "      <th>Hungary</th>\n",
        "      <th>Iran</th>\n",
        "      <th>Italy</th>\n",
        "      <th>Korea, South</th>\n",
        "      <th>Kuwait</th>\n",
        "      <th>Mexico</th>\n",
        "      <th>...</th>\n",
        "      <th>Myanmar</th>\n",
        "      <th>Peru</th>\n",
        "      <th>Poland</th>\n",
        "      <th>Portugal</th>\n",
        "      <th>Russia</th>\n",
        "      <th>Senegal</th>\n",
        "      <th>Turkey</th>\n",
        "      <th>Ukraine</th>\n",
        "      <th>United Arab Emirates</th>\n",
        "      <th>United States</th>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>Date</th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "    </tr>\n",
        "  </thead>\n",
        "  <tbody>\n",
        "    <tr>\n",
        "      <th>2020-08-25</th>\n",
        "      <td>0.001896</td>\n",
        "      <td>0.000941</td>\n",
        "      <td>0.000164</td>\n",
        "      <td>0.000172</td>\n",
        "      <td>0.000552</td>\n",
        "      <td>0.057092</td>\n",
        "      <td>0.000622</td>\n",
        "      <td>0.000011</td>\n",
        "      <td>0.001303</td>\n",
        "      <td>0.080308</td>\n",
        "      <td>...</td>\n",
        "      <td>0.000199</td>\n",
        "      <td>0.000749</td>\n",
        "      <td>0.000131</td>\n",
        "      <td>0.013497</td>\n",
        "      <td>0.019573</td>\n",
        "      <td>0.000554</td>\n",
        "      <td>0.000121</td>\n",
        "      <td>0.00119</td>\n",
        "      <td>0.000938</td>\n",
        "      <td>0.018282</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>2020-08-26</th>\n",
        "      <td>0.001896</td>\n",
        "      <td>0.000941</td>\n",
        "      <td>0.000164</td>\n",
        "      <td>0.000172</td>\n",
        "      <td>0.000552</td>\n",
        "      <td>0.057092</td>\n",
        "      <td>0.000622</td>\n",
        "      <td>0.000011</td>\n",
        "      <td>0.001303</td>\n",
        "      <td>0.080308</td>\n",
        "      <td>...</td>\n",
        "      <td>0.000199</td>\n",
        "      <td>0.000749</td>\n",
        "      <td>0.000131</td>\n",
        "      <td>0.013497</td>\n",
        "      <td>0.019573</td>\n",
        "      <td>0.000554</td>\n",
        "      <td>0.000121</td>\n",
        "      <td>0.00119</td>\n",
        "      <td>0.000938</td>\n",
        "      <td>0.018282</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>2020-08-27</th>\n",
        "      <td>0.001896</td>\n",
        "      <td>0.000941</td>\n",
        "      <td>0.000164</td>\n",
        "      <td>0.000172</td>\n",
        "      <td>0.000552</td>\n",
        "      <td>0.057092</td>\n",
        "      <td>0.000622</td>\n",
        "      <td>0.000011</td>\n",
        "      <td>0.001303</td>\n",
        "      <td>0.080308</td>\n",
        "      <td>...</td>\n",
        "      <td>0.000199</td>\n",
        "      <td>0.000749</td>\n",
        "      <td>0.000131</td>\n",
        "      <td>0.013497</td>\n",
        "      <td>0.019573</td>\n",
        "      <td>0.000554</td>\n",
        "      <td>0.000121</td>\n",
        "      <td>0.00119</td>\n",
        "      <td>0.000938</td>\n",
        "      <td>0.018282</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>2020-08-28</th>\n",
        "      <td>0.001896</td>\n",
        "      <td>0.000941</td>\n",
        "      <td>0.000164</td>\n",
        "      <td>0.000172</td>\n",
        "      <td>0.000552</td>\n",
        "      <td>0.057092</td>\n",
        "      <td>0.000622</td>\n",
        "      <td>0.000011</td>\n",
        "      <td>0.001303</td>\n",
        "      <td>0.080308</td>\n",
        "      <td>...</td>\n",
        "      <td>0.000199</td>\n",
        "      <td>0.000749</td>\n",
        "      <td>0.000131</td>\n",
        "      <td>0.013497</td>\n",
        "      <td>0.019573</td>\n",
        "      <td>0.000554</td>\n",
        "      <td>0.000121</td>\n",
        "      <td>0.00119</td>\n",
        "      <td>0.000938</td>\n",
        "      <td>0.018282</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>2020-08-29</th>\n",
        "      <td>0.001896</td>\n",
        "      <td>0.000941</td>\n",
        "      <td>0.000164</td>\n",
        "      <td>0.000172</td>\n",
        "      <td>0.000552</td>\n",
        "      <td>0.057092</td>\n",
        "      <td>0.000622</td>\n",
        "      <td>0.000011</td>\n",
        "      <td>0.001303</td>\n",
        "      <td>0.080308</td>\n",
        "      <td>...</td>\n",
        "      <td>0.000199</td>\n",
        "      <td>0.000749</td>\n",
        "      <td>0.000131</td>\n",
        "      <td>0.013497</td>\n",
        "      <td>0.019573</td>\n",
        "      <td>0.000554</td>\n",
        "      <td>0.000121</td>\n",
        "      <td>0.00119</td>\n",
        "      <td>0.000938</td>\n",
        "      <td>0.018282</td>\n",
        "    </tr>\n",
        "  </tbody>\n",
        "</table>\n",
        "<p>5 rows \u00d7 21 columns</p>\n",
        "</div>"
       ],
       "output_type": "pyout",
       "prompt_number": 18,
       "text": [
        "Country      Bahrain    France   Georgia    Guinea   Hungary      Iran  \\\n",
        "Date                                                                     \n",
        "2020-08-25  0.001896  0.000941  0.000164  0.000172  0.000552  0.057092   \n",
        "2020-08-26  0.001896  0.000941  0.000164  0.000172  0.000552  0.057092   \n",
        "2020-08-27  0.001896  0.000941  0.000164  0.000172  0.000552  0.057092   \n",
        "2020-08-28  0.001896  0.000941  0.000164  0.000172  0.000552  0.057092   \n",
        "2020-08-29  0.001896  0.000941  0.000164  0.000172  0.000552  0.057092   \n",
        "\n",
        "Country        Italy  Korea, South    Kuwait    Mexico  ...   Myanmar  \\\n",
        "Date                                                    ...             \n",
        "2020-08-25  0.000622      0.000011  0.001303  0.080308  ...  0.000199   \n",
        "2020-08-26  0.000622      0.000011  0.001303  0.080308  ...  0.000199   \n",
        "2020-08-27  0.000622      0.000011  0.001303  0.080308  ...  0.000199   \n",
        "2020-08-28  0.000622      0.000011  0.001303  0.080308  ...  0.000199   \n",
        "2020-08-29  0.000622      0.000011  0.001303  0.080308  ...  0.000199   \n",
        "\n",
        "Country         Peru    Poland  Portugal    Russia   Senegal    Turkey  \\\n",
        "Date                                                                     \n",
        "2020-08-25  0.000749  0.000131  0.013497  0.019573  0.000554  0.000121   \n",
        "2020-08-26  0.000749  0.000131  0.013497  0.019573  0.000554  0.000121   \n",
        "2020-08-27  0.000749  0.000131  0.013497  0.019573  0.000554  0.000121   \n",
        "2020-08-28  0.000749  0.000131  0.013497  0.019573  0.000554  0.000121   \n",
        "2020-08-29  0.000749  0.000131  0.013497  0.019573  0.000554  0.000121   \n",
        "\n",
        "Country     Ukraine  United Arab Emirates  United States  \n",
        "Date                                                      \n",
        "2020-08-25  0.00119              0.000938       0.018282  \n",
        "2020-08-26  0.00119              0.000938       0.018282  \n",
        "2020-08-27  0.00119              0.000938       0.018282  \n",
        "2020-08-28  0.00119              0.000938       0.018282  \n",
        "2020-08-29  0.00119              0.000938       0.018282  \n",
        "\n",
        "[5 rows x 21 columns]"
       ]
      }
     ],
     "prompt_number": 18
    },
    {
     "cell_type": "markdown",
     "metadata": {},
     "source": [
      "## (Experimental): Relationship of OxCGRT index and parameter values\n",
      "Government responses will impact on parameter values of ODE models about 14 days later. Here, we will investigate on the relationship of [stringency index (from OxCGRT)](https://github.com/OxCGRT/covid-policy-tracker/blob/master/documentation/index_methodology.md) and reproduction number/model parameters.\n"
     ]
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "%matplotlib inline\n",
      "from matplotlib import pyplot as plt\n",
      "import seaborn as sns\n",
      "import pandas as pd"
     ],
     "language": "python",
     "metadata": {},
     "outputs": [],
     "prompt_number": 19
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "df = analyser.track()\n",
      "param_cols = [\"Rt\", *cs.SIRF.PARAMETERS]\n",
      "oxcgrt_cols = oxcgrt_data.OXCGRT_VARS[:]\n",
      "cols = param_cols + oxcgrt_cols\n",
      "delay = 14\n",
      "\n",
      "for col in param_cols:\n",
      "    df[col] = pd.to_numeric(df[col], errors=\"coerce\")\n",
      "    df[col] = df.groupby(\"Country\")[col].shift(0 - delay)\n",
      "\n",
      "df = df.dropna(how=\"any\")\n",
      "df = df.loc[:, [\"Date\", \"Country\", *cols]]\n",
      "track_df = df.copy()\n",
      "track_df.info()"
     ],
     "language": "python",
     "metadata": {},
     "outputs": [
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "<class 'pandas.core.frame.DataFrame'>\n",
        "Int64Index: 29386 entries, 0 to 29665\n",
        "Data columns (total 19 columns):\n",
        " #   Column                               Non-Null Count  Dtype         \n",
        "---  ------                               --------------  -----         \n",
        " 0   Date                                 29386 non-null  datetime64[ns]\n",
        " 1   Country                              29386 non-null  object        \n",
        " 2   Rt                                   29386 non-null  float64       \n",
        " 3   theta                                29386 non-null  float64       \n",
        " 4   kappa                                29386 non-null  float64       \n",
        " 5   rho                                  29386 non-null  float64       \n",
        " 6   sigma                                29386 non-null  float64       \n",
        " 7   School_closing                       29386 non-null  int64         \n",
        " 8   Workplace_closing                    29386 non-null  int64         \n",
        " 9   Cancel_events                        29386 non-null  int64         \n",
        " 10  Gatherings_restrictions              29386 non-null  int64         \n",
        " 11  Transport_closing                    29386 non-null  int64         \n",
        " 12  Stay_home_restrictions               29386 non-null  int64         \n",
        " 13  Internal_movement_restrictions       29386 non-null  int64         \n",
        " 14  International_movement_restrictions  29386 non-null  int64         \n",
        " 15  Information_campaigns                29386 non-null  int64         \n",
        " 16  Testing_policy                       29386 non-null  int64         \n",
        " 17  Contact_tracing                      29386 non-null  int64         \n",
        " 18  Stringency_index                     29386 non-null  float64       \n",
        "dtypes: datetime64[ns](1), float64(6), int64(11), object(1)\n",
        "memory usage: 4.5+ MB\n"
       ]
      }
     ],
     "prompt_number": 20
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "# Correlation\n",
      "df = track_df.copy()\n",
      "df.corr().style.background_gradient(axis=None)"
     ],
     "language": "python",
     "metadata": {},
     "outputs": [
      {
       "html": [
        "<style  type=\"text/css\" >\n",
        "#T_be042b64_ea1d_11ea_b0cd_525400942d2brow0_col0,#T_be042b64_ea1d_11ea_b0cd_525400942d2brow1_col1,#T_be042b64_ea1d_11ea_b0cd_525400942d2brow2_col2,#T_be042b64_ea1d_11ea_b0cd_525400942d2brow3_col3,#T_be042b64_ea1d_11ea_b0cd_525400942d2brow4_col4,#T_be042b64_ea1d_11ea_b0cd_525400942d2brow5_col5,#T_be042b64_ea1d_11ea_b0cd_525400942d2brow6_col6,#T_be042b64_ea1d_11ea_b0cd_525400942d2brow7_col7,#T_be042b64_ea1d_11ea_b0cd_525400942d2brow8_col8,#T_be042b64_ea1d_11ea_b0cd_525400942d2brow9_col9,#T_be042b64_ea1d_11ea_b0cd_525400942d2brow10_col10,#T_be042b64_ea1d_11ea_b0cd_525400942d2brow11_col11,#T_be042b64_ea1d_11ea_b0cd_525400942d2brow12_col12,#T_be042b64_ea1d_11ea_b0cd_525400942d2brow13_col13,#T_be042b64_ea1d_11ea_b0cd_525400942d2brow14_col14,#T_be042b64_ea1d_11ea_b0cd_525400942d2brow15_col15,#T_be042b64_ea1d_11ea_b0cd_525400942d2brow16_col16{\n",
        "            background-color:  #023858;\n",
        "            color:  #f1f1f1;\n",
        "        }#T_be042b64_ea1d_11ea_b0cd_525400942d2brow0_col1,#T_be042b64_ea1d_11ea_b0cd_525400942d2brow0_col16,#T_be042b64_ea1d_11ea_b0cd_525400942d2brow1_col0,#T_be042b64_ea1d_11ea_b0cd_525400942d2brow16_col0{\n",
        "            background-color:  #dad9ea;\n",
        "            color:  #000000;\n",
        "        }#T_be042b64_ea1d_11ea_b0cd_525400942d2brow0_col2,#T_be042b64_ea1d_11ea_b0cd_525400942d2brow2_col0,#T_be042b64_ea1d_11ea_b0cd_525400942d2brow5_col13,#T_be042b64_ea1d_11ea_b0cd_525400942d2brow9_col14,#T_be042b64_ea1d_11ea_b0cd_525400942d2brow13_col5,#T_be042b64_ea1d_11ea_b0cd_525400942d2brow14_col9{\n",
        "            background-color:  #bcc7e1;\n",
        "            color:  #000000;\n",
        "        }#T_be042b64_ea1d_11ea_b0cd_525400942d2brow0_col3,#T_be042b64_ea1d_11ea_b0cd_525400942d2brow3_col0{\n",
        "            background-color:  #93b5d6;\n",
        "            color:  #000000;\n",
        "        }#T_be042b64_ea1d_11ea_b0cd_525400942d2brow0_col4,#T_be042b64_ea1d_11ea_b0cd_525400942d2brow4_col0{\n",
        "            background-color:  #e2dfee;\n",
        "            color:  #000000;\n",
        "        }#T_be042b64_ea1d_11ea_b0cd_525400942d2brow0_col5,#T_be042b64_ea1d_11ea_b0cd_525400942d2brow5_col0,#T_be042b64_ea1d_11ea_b0cd_525400942d2brow5_col15,#T_be042b64_ea1d_11ea_b0cd_525400942d2brow15_col5{\n",
        "            background-color:  #f4edf6;\n",
        "            color:  #000000;\n",
        "        }#T_be042b64_ea1d_11ea_b0cd_525400942d2brow0_col6,#T_be042b64_ea1d_11ea_b0cd_525400942d2brow1_col10,#T_be042b64_ea1d_11ea_b0cd_525400942d2brow3_col7,#T_be042b64_ea1d_11ea_b0cd_525400942d2brow6_col0,#T_be042b64_ea1d_11ea_b0cd_525400942d2brow7_col3,#T_be042b64_ea1d_11ea_b0cd_525400942d2brow10_col1{\n",
        "            background-color:  #ced0e6;\n",
        "            color:  #000000;\n",
        "        }#T_be042b64_ea1d_11ea_b0cd_525400942d2brow0_col7,#T_be042b64_ea1d_11ea_b0cd_525400942d2brow7_col0,#T_be042b64_ea1d_11ea_b0cd_525400942d2brow10_col15,#T_be042b64_ea1d_11ea_b0cd_525400942d2brow15_col10{\n",
        "            background-color:  #afc1dd;\n",
        "            color:  #000000;\n",
        "        }#T_be042b64_ea1d_11ea_b0cd_525400942d2brow0_col8,#T_be042b64_ea1d_11ea_b0cd_525400942d2brow1_col5,#T_be042b64_ea1d_11ea_b0cd_525400942d2brow5_col1,#T_be042b64_ea1d_11ea_b0cd_525400942d2brow8_col0{\n",
        "            background-color:  #8eb3d5;\n",
        "            color:  #000000;\n",
        "        }#T_be042b64_ea1d_11ea_b0cd_525400942d2brow0_col9,#T_be042b64_ea1d_11ea_b0cd_525400942d2brow9_col0{\n",
        "            background-color:  #dbdaeb;\n",
        "            color:  #000000;\n",
        "        }#T_be042b64_ea1d_11ea_b0cd_525400942d2brow0_col10,#T_be042b64_ea1d_11ea_b0cd_525400942d2brow10_col0{\n",
        "            background-color:  #cccfe5;\n",
        "            color:  #000000;\n",
        "        }#T_be042b64_ea1d_11ea_b0cd_525400942d2brow0_col11,#T_be042b64_ea1d_11ea_b0cd_525400942d2brow1_col12,#T_be042b64_ea1d_11ea_b0cd_525400942d2brow3_col8,#T_be042b64_ea1d_11ea_b0cd_525400942d2brow4_col10,#T_be042b64_ea1d_11ea_b0cd_525400942d2brow7_col15,#T_be042b64_ea1d_11ea_b0cd_525400942d2brow8_col3,#T_be042b64_ea1d_11ea_b0cd_525400942d2brow9_col13,#T_be042b64_ea1d_11ea_b0cd_525400942d2brow10_col4,#T_be042b64_ea1d_11ea_b0cd_525400942d2brow11_col0,#T_be042b64_ea1d_11ea_b0cd_525400942d2brow12_col1,#T_be042b64_ea1d_11ea_b0cd_525400942d2brow13_col9,#T_be042b64_ea1d_11ea_b0cd_525400942d2brow15_col7{\n",
        "            background-color:  #c6cce3;\n",
        "            color:  #000000;\n",
        "        }#T_be042b64_ea1d_11ea_b0cd_525400942d2brow0_col12,#T_be042b64_ea1d_11ea_b0cd_525400942d2brow12_col0,#T_be042b64_ea1d_11ea_b0cd_525400942d2brow14_col16,#T_be042b64_ea1d_11ea_b0cd_525400942d2brow16_col14{\n",
        "            background-color:  #e4e1ef;\n",
        "            color:  #000000;\n",
        "        }#T_be042b64_ea1d_11ea_b0cd_525400942d2brow0_col13,#T_be042b64_ea1d_11ea_b0cd_525400942d2brow1_col13,#T_be042b64_ea1d_11ea_b0cd_525400942d2brow13_col0,#T_be042b64_ea1d_11ea_b0cd_525400942d2brow13_col1{\n",
        "            background-color:  #b0c2de;\n",
        "            color:  #000000;\n",
        "        }#T_be042b64_ea1d_11ea_b0cd_525400942d2brow0_col14,#T_be042b64_ea1d_11ea_b0cd_525400942d2brow14_col0{\n",
        "            background-color:  #d0d1e6;\n",
        "            color:  #000000;\n",
        "        }#T_be042b64_ea1d_11ea_b0cd_525400942d2brow0_col15,#T_be042b64_ea1d_11ea_b0cd_525400942d2brow4_col13,#T_be042b64_ea1d_11ea_b0cd_525400942d2brow9_col15,#T_be042b64_ea1d_11ea_b0cd_525400942d2brow13_col4,#T_be042b64_ea1d_11ea_b0cd_525400942d2brow15_col0,#T_be042b64_ea1d_11ea_b0cd_525400942d2brow15_col9{\n",
        "            background-color:  #d8d7e9;\n",
        "            color:  #000000;\n",
        "        }#T_be042b64_ea1d_11ea_b0cd_525400942d2brow1_col2,#T_be042b64_ea1d_11ea_b0cd_525400942d2brow2_col1{\n",
        "            background-color:  #549cc7;\n",
        "            color:  #000000;\n",
        "        }#T_be042b64_ea1d_11ea_b0cd_525400942d2brow1_col3,#T_be042b64_ea1d_11ea_b0cd_525400942d2brow3_col1,#T_be042b64_ea1d_11ea_b0cd_525400942d2brow3_col9,#T_be042b64_ea1d_11ea_b0cd_525400942d2brow9_col3{\n",
        "            background-color:  #a8bedc;\n",
        "            color:  #000000;\n",
        "        }#T_be042b64_ea1d_11ea_b0cd_525400942d2brow1_col4,#T_be042b64_ea1d_11ea_b0cd_525400942d2brow3_col5,#T_be042b64_ea1d_11ea_b0cd_525400942d2brow4_col1,#T_be042b64_ea1d_11ea_b0cd_525400942d2brow5_col3,#T_be042b64_ea1d_11ea_b0cd_525400942d2brow8_col14,#T_be042b64_ea1d_11ea_b0cd_525400942d2brow14_col8{\n",
        "            background-color:  #6fa7ce;\n",
        "            color:  #000000;\n",
        "        }#T_be042b64_ea1d_11ea_b0cd_525400942d2brow1_col6,#T_be042b64_ea1d_11ea_b0cd_525400942d2brow6_col1{\n",
        "            background-color:  #7bacd1;\n",
        "            color:  #000000;\n",
        "        }#T_be042b64_ea1d_11ea_b0cd_525400942d2brow1_col7,#T_be042b64_ea1d_11ea_b0cd_525400942d2brow7_col1,#T_be042b64_ea1d_11ea_b0cd_525400942d2brow7_col12,#T_be042b64_ea1d_11ea_b0cd_525400942d2brow7_col14,#T_be042b64_ea1d_11ea_b0cd_525400942d2brow12_col7,#T_be042b64_ea1d_11ea_b0cd_525400942d2brow14_col7{\n",
        "            background-color:  #a9bfdc;\n",
        "            color:  #000000;\n",
        "        }#T_be042b64_ea1d_11ea_b0cd_525400942d2brow1_col8,#T_be042b64_ea1d_11ea_b0cd_525400942d2brow2_col14,#T_be042b64_ea1d_11ea_b0cd_525400942d2brow8_col1,#T_be042b64_ea1d_11ea_b0cd_525400942d2brow14_col2{\n",
        "            background-color:  #f7f0f7;\n",
        "            color:  #000000;\n",
        "        }#T_be042b64_ea1d_11ea_b0cd_525400942d2brow1_col9,#T_be042b64_ea1d_11ea_b0cd_525400942d2brow9_col1{\n",
        "            background-color:  #d9d8ea;\n",
        "            color:  #000000;\n",
        "        }#T_be042b64_ea1d_11ea_b0cd_525400942d2brow1_col11,#T_be042b64_ea1d_11ea_b0cd_525400942d2brow11_col1{\n",
        "            background-color:  #dddbec;\n",
        "            color:  #000000;\n",
        "        }#T_be042b64_ea1d_11ea_b0cd_525400942d2brow1_col14,#T_be042b64_ea1d_11ea_b0cd_525400942d2brow14_col1{\n",
        "            background-color:  #fbf4f9;\n",
        "            color:  #000000;\n",
        "        }#T_be042b64_ea1d_11ea_b0cd_525400942d2brow1_col15,#T_be042b64_ea1d_11ea_b0cd_525400942d2brow6_col14,#T_be042b64_ea1d_11ea_b0cd_525400942d2brow11_col13,#T_be042b64_ea1d_11ea_b0cd_525400942d2brow12_col14,#T_be042b64_ea1d_11ea_b0cd_525400942d2brow13_col11,#T_be042b64_ea1d_11ea_b0cd_525400942d2brow14_col6,#T_be042b64_ea1d_11ea_b0cd_525400942d2brow14_col12,#T_be042b64_ea1d_11ea_b0cd_525400942d2brow15_col1{\n",
        "            background-color:  #bbc7e0;\n",
        "            color:  #000000;\n",
        "        }#T_be042b64_ea1d_11ea_b0cd_525400942d2brow1_col16,#T_be042b64_ea1d_11ea_b0cd_525400942d2brow5_col7,#T_be042b64_ea1d_11ea_b0cd_525400942d2brow7_col5,#T_be042b64_ea1d_11ea_b0cd_525400942d2brow16_col1{\n",
        "            background-color:  #a2bcda;\n",
        "            color:  #000000;\n",
        "        }#T_be042b64_ea1d_11ea_b0cd_525400942d2brow2_col3,#T_be042b64_ea1d_11ea_b0cd_525400942d2brow3_col2,#T_be042b64_ea1d_11ea_b0cd_525400942d2brow8_col9,#T_be042b64_ea1d_11ea_b0cd_525400942d2brow9_col8{\n",
        "            background-color:  #2c89bd;\n",
        "            color:  #000000;\n",
        "        }#T_be042b64_ea1d_11ea_b0cd_525400942d2brow2_col4,#T_be042b64_ea1d_11ea_b0cd_525400942d2brow4_col2{\n",
        "            background-color:  #79abd0;\n",
        "            color:  #000000;\n",
        "        }#T_be042b64_ea1d_11ea_b0cd_525400942d2brow2_col5,#T_be042b64_ea1d_11ea_b0cd_525400942d2brow5_col2{\n",
        "            background-color:  #75a9cf;\n",
        "            color:  #000000;\n",
        "        }#T_be042b64_ea1d_11ea_b0cd_525400942d2brow2_col6,#T_be042b64_ea1d_11ea_b0cd_525400942d2brow6_col2,#T_be042b64_ea1d_11ea_b0cd_525400942d2brow6_col10,#T_be042b64_ea1d_11ea_b0cd_525400942d2brow10_col6{\n",
        "            background-color:  #358fc0;\n",
        "            color:  #000000;\n",
        "        }#T_be042b64_ea1d_11ea_b0cd_525400942d2brow2_col7,#T_be042b64_ea1d_11ea_b0cd_525400942d2brow7_col2,#T_be042b64_ea1d_11ea_b0cd_525400942d2brow7_col13,#T_be042b64_ea1d_11ea_b0cd_525400942d2brow13_col7{\n",
        "            background-color:  #b7c5df;\n",
        "            color:  #000000;\n",
        "        }#T_be042b64_ea1d_11ea_b0cd_525400942d2brow2_col8,#T_be042b64_ea1d_11ea_b0cd_525400942d2brow3_col11,#T_be042b64_ea1d_11ea_b0cd_525400942d2brow8_col2,#T_be042b64_ea1d_11ea_b0cd_525400942d2brow11_col3{\n",
        "            background-color:  #b5c4df;\n",
        "            color:  #000000;\n",
        "        }#T_be042b64_ea1d_11ea_b0cd_525400942d2brow2_col9,#T_be042b64_ea1d_11ea_b0cd_525400942d2brow9_col2{\n",
        "            background-color:  #9fbad9;\n",
        "            color:  #000000;\n",
        "        }#T_be042b64_ea1d_11ea_b0cd_525400942d2brow2_col10,#T_be042b64_ea1d_11ea_b0cd_525400942d2brow10_col2{\n",
        "            background-color:  #9ab8d8;\n",
        "            color:  #000000;\n",
        "        }#T_be042b64_ea1d_11ea_b0cd_525400942d2brow2_col11,#T_be042b64_ea1d_11ea_b0cd_525400942d2brow11_col2{\n",
        "            background-color:  #a5bddb;\n",
        "            color:  #000000;\n",
        "        }#T_be042b64_ea1d_11ea_b0cd_525400942d2brow2_col12,#T_be042b64_ea1d_11ea_b0cd_525400942d2brow12_col2{\n",
        "            background-color:  #9cb9d9;\n",
        "            color:  #000000;\n",
        "        }#T_be042b64_ea1d_11ea_b0cd_525400942d2brow2_col13,#T_be042b64_ea1d_11ea_b0cd_525400942d2brow13_col2{\n",
        "            background-color:  #c8cde4;\n",
        "            color:  #000000;\n",
        "        }#T_be042b64_ea1d_11ea_b0cd_525400942d2brow2_col15,#T_be042b64_ea1d_11ea_b0cd_525400942d2brow15_col2{\n",
        "            background-color:  #d6d6e9;\n",
        "            color:  #000000;\n",
        "        }#T_be042b64_ea1d_11ea_b0cd_525400942d2brow2_col16,#T_be042b64_ea1d_11ea_b0cd_525400942d2brow16_col2{\n",
        "            background-color:  #4295c3;\n",
        "            color:  #000000;\n",
        "        }#T_be042b64_ea1d_11ea_b0cd_525400942d2brow3_col4,#T_be042b64_ea1d_11ea_b0cd_525400942d2brow4_col3,#T_be042b64_ea1d_11ea_b0cd_525400942d2brow10_col11,#T_be042b64_ea1d_11ea_b0cd_525400942d2brow11_col10{\n",
        "            background-color:  #056faf;\n",
        "            color:  #f1f1f1;\n",
        "        }#T_be042b64_ea1d_11ea_b0cd_525400942d2brow3_col6,#T_be042b64_ea1d_11ea_b0cd_525400942d2brow6_col3,#T_be042b64_ea1d_11ea_b0cd_525400942d2brow7_col11,#T_be042b64_ea1d_11ea_b0cd_525400942d2brow11_col7{\n",
        "            background-color:  #86b0d3;\n",
        "            color:  #000000;\n",
        "        }#T_be042b64_ea1d_11ea_b0cd_525400942d2brow3_col10,#T_be042b64_ea1d_11ea_b0cd_525400942d2brow4_col12,#T_be042b64_ea1d_11ea_b0cd_525400942d2brow4_col15,#T_be042b64_ea1d_11ea_b0cd_525400942d2brow10_col3,#T_be042b64_ea1d_11ea_b0cd_525400942d2brow12_col4,#T_be042b64_ea1d_11ea_b0cd_525400942d2brow15_col4{\n",
        "            background-color:  #97b7d7;\n",
        "            color:  #000000;\n",
        "        }#T_be042b64_ea1d_11ea_b0cd_525400942d2brow3_col12,#T_be042b64_ea1d_11ea_b0cd_525400942d2brow12_col3{\n",
        "            background-color:  #88b1d4;\n",
        "            color:  #000000;\n",
        "        }#T_be042b64_ea1d_11ea_b0cd_525400942d2brow3_col13,#T_be042b64_ea1d_11ea_b0cd_525400942d2brow12_col15,#T_be042b64_ea1d_11ea_b0cd_525400942d2brow13_col3,#T_be042b64_ea1d_11ea_b0cd_525400942d2brow15_col12{\n",
        "            background-color:  #d1d2e6;\n",
        "            color:  #000000;\n",
        "        }#T_be042b64_ea1d_11ea_b0cd_525400942d2brow3_col14,#T_be042b64_ea1d_11ea_b0cd_525400942d2brow14_col3{\n",
        "            background-color:  #e6e2ef;\n",
        "            color:  #000000;\n",
        "        }#T_be042b64_ea1d_11ea_b0cd_525400942d2brow3_col15,#T_be042b64_ea1d_11ea_b0cd_525400942d2brow15_col3{\n",
        "            background-color:  #e0deed;\n",
        "            color:  #000000;\n",
        "        }#T_be042b64_ea1d_11ea_b0cd_525400942d2brow3_col16,#T_be042b64_ea1d_11ea_b0cd_525400942d2brow6_col12,#T_be042b64_ea1d_11ea_b0cd_525400942d2brow12_col6,#T_be042b64_ea1d_11ea_b0cd_525400942d2brow16_col3{\n",
        "            background-color:  #76aad0;\n",
        "            color:  #000000;\n",
        "        }#T_be042b64_ea1d_11ea_b0cd_525400942d2brow4_col5,#T_be042b64_ea1d_11ea_b0cd_525400942d2brow5_col4,#T_be042b64_ea1d_11ea_b0cd_525400942d2brow11_col12,#T_be042b64_ea1d_11ea_b0cd_525400942d2brow12_col11{\n",
        "            background-color:  #6ba5cd;\n",
        "            color:  #000000;\n",
        "        }#T_be042b64_ea1d_11ea_b0cd_525400942d2brow4_col6,#T_be042b64_ea1d_11ea_b0cd_525400942d2brow6_col4{\n",
        "            background-color:  #c2cbe2;\n",
        "            color:  #000000;\n",
        "        }#T_be042b64_ea1d_11ea_b0cd_525400942d2brow4_col7,#T_be042b64_ea1d_11ea_b0cd_525400942d2brow7_col4{\n",
        "            background-color:  #d4d4e8;\n",
        "            color:  #000000;\n",
        "        }#T_be042b64_ea1d_11ea_b0cd_525400942d2brow4_col8,#T_be042b64_ea1d_11ea_b0cd_525400942d2brow8_col4{\n",
        "            background-color:  #fff7fb;\n",
        "            color:  #000000;\n",
        "        }#T_be042b64_ea1d_11ea_b0cd_525400942d2brow4_col9,#T_be042b64_ea1d_11ea_b0cd_525400942d2brow5_col8,#T_be042b64_ea1d_11ea_b0cd_525400942d2brow8_col5,#T_be042b64_ea1d_11ea_b0cd_525400942d2brow9_col4{\n",
        "            background-color:  #cdd0e5;\n",
        "            color:  #000000;\n",
        "        }#T_be042b64_ea1d_11ea_b0cd_525400942d2brow4_col11,#T_be042b64_ea1d_11ea_b0cd_525400942d2brow4_col14,#T_be042b64_ea1d_11ea_b0cd_525400942d2brow11_col4,#T_be042b64_ea1d_11ea_b0cd_525400942d2brow11_col15,#T_be042b64_ea1d_11ea_b0cd_525400942d2brow14_col4,#T_be042b64_ea1d_11ea_b0cd_525400942d2brow15_col11{\n",
        "            background-color:  #e7e3f0;\n",
        "            color:  #000000;\n",
        "        }#T_be042b64_ea1d_11ea_b0cd_525400942d2brow4_col16,#T_be042b64_ea1d_11ea_b0cd_525400942d2brow12_col13,#T_be042b64_ea1d_11ea_b0cd_525400942d2brow13_col12,#T_be042b64_ea1d_11ea_b0cd_525400942d2brow16_col4{\n",
        "            background-color:  #adc1dd;\n",
        "            color:  #000000;\n",
        "        }#T_be042b64_ea1d_11ea_b0cd_525400942d2brow5_col6,#T_be042b64_ea1d_11ea_b0cd_525400942d2brow6_col5,#T_be042b64_ea1d_11ea_b0cd_525400942d2brow9_col10,#T_be042b64_ea1d_11ea_b0cd_525400942d2brow10_col9{\n",
        "            background-color:  #2786bb;\n",
        "            color:  #000000;\n",
        "        }#T_be042b64_ea1d_11ea_b0cd_525400942d2brow5_col9,#T_be042b64_ea1d_11ea_b0cd_525400942d2brow9_col5{\n",
        "            background-color:  #5c9fc9;\n",
        "            color:  #000000;\n",
        "        }#T_be042b64_ea1d_11ea_b0cd_525400942d2brow5_col10,#T_be042b64_ea1d_11ea_b0cd_525400942d2brow10_col5,#T_be042b64_ea1d_11ea_b0cd_525400942d2brow10_col14,#T_be042b64_ea1d_11ea_b0cd_525400942d2brow14_col10{\n",
        "            background-color:  #7eadd1;\n",
        "            color:  #000000;\n",
        "        }#T_be042b64_ea1d_11ea_b0cd_525400942d2brow5_col11,#T_be042b64_ea1d_11ea_b0cd_525400942d2brow11_col5{\n",
        "            background-color:  #8cb3d5;\n",
        "            color:  #000000;\n",
        "        }#T_be042b64_ea1d_11ea_b0cd_525400942d2brow5_col12,#T_be042b64_ea1d_11ea_b0cd_525400942d2brow12_col5{\n",
        "            background-color:  #0f76b3;\n",
        "            color:  #f1f1f1;\n",
        "        }#T_be042b64_ea1d_11ea_b0cd_525400942d2brow5_col14,#T_be042b64_ea1d_11ea_b0cd_525400942d2brow14_col5{\n",
        "            background-color:  #b8c6e0;\n",
        "            color:  #000000;\n",
        "        }#T_be042b64_ea1d_11ea_b0cd_525400942d2brow5_col16,#T_be042b64_ea1d_11ea_b0cd_525400942d2brow16_col5{\n",
        "            background-color:  #187cb6;\n",
        "            color:  #000000;\n",
        "        }#T_be042b64_ea1d_11ea_b0cd_525400942d2brow6_col7,#T_be042b64_ea1d_11ea_b0cd_525400942d2brow7_col6{\n",
        "            background-color:  #8bb2d4;\n",
        "            color:  #000000;\n",
        "        }#T_be042b64_ea1d_11ea_b0cd_525400942d2brow6_col8,#T_be042b64_ea1d_11ea_b0cd_525400942d2brow8_col6{\n",
        "            background-color:  #78abd0;\n",
        "            color:  #000000;\n",
        "        }#T_be042b64_ea1d_11ea_b0cd_525400942d2brow6_col9,#T_be042b64_ea1d_11ea_b0cd_525400942d2brow9_col6{\n",
        "            background-color:  #4c99c5;\n",
        "            color:  #000000;\n",
        "        }#T_be042b64_ea1d_11ea_b0cd_525400942d2brow6_col11,#T_be042b64_ea1d_11ea_b0cd_525400942d2brow11_col6{\n",
        "            background-color:  #3790c0;\n",
        "            color:  #000000;\n",
        "        }#T_be042b64_ea1d_11ea_b0cd_525400942d2brow6_col13,#T_be042b64_ea1d_11ea_b0cd_525400942d2brow13_col6{\n",
        "            background-color:  #b4c4df;\n",
        "            color:  #000000;\n",
        "        }#T_be042b64_ea1d_11ea_b0cd_525400942d2brow6_col15,#T_be042b64_ea1d_11ea_b0cd_525400942d2brow15_col6{\n",
        "            background-color:  #fdf5fa;\n",
        "            color:  #000000;\n",
        "        }#T_be042b64_ea1d_11ea_b0cd_525400942d2brow6_col16,#T_be042b64_ea1d_11ea_b0cd_525400942d2brow10_col16,#T_be042b64_ea1d_11ea_b0cd_525400942d2brow16_col6,#T_be042b64_ea1d_11ea_b0cd_525400942d2brow16_col10{\n",
        "            background-color:  #0771b1;\n",
        "            color:  #f1f1f1;\n",
        "        }#T_be042b64_ea1d_11ea_b0cd_525400942d2brow7_col8,#T_be042b64_ea1d_11ea_b0cd_525400942d2brow8_col7{\n",
        "            background-color:  #67a4cc;\n",
        "            color:  #000000;\n",
        "        }#T_be042b64_ea1d_11ea_b0cd_525400942d2brow7_col9,#T_be042b64_ea1d_11ea_b0cd_525400942d2brow9_col7{\n",
        "            background-color:  #9ebad9;\n",
        "            color:  #000000;\n",
        "        }#T_be042b64_ea1d_11ea_b0cd_525400942d2brow7_col10,#T_be042b64_ea1d_11ea_b0cd_525400942d2brow10_col7{\n",
        "            background-color:  #7dacd1;\n",
        "            color:  #000000;\n",
        "        }#T_be042b64_ea1d_11ea_b0cd_525400942d2brow7_col16,#T_be042b64_ea1d_11ea_b0cd_525400942d2brow16_col7{\n",
        "            background-color:  #73a9cf;\n",
        "            color:  #000000;\n",
        "        }#T_be042b64_ea1d_11ea_b0cd_525400942d2brow8_col10,#T_be042b64_ea1d_11ea_b0cd_525400942d2brow10_col8{\n",
        "            background-color:  #308cbe;\n",
        "            color:  #000000;\n",
        "        }#T_be042b64_ea1d_11ea_b0cd_525400942d2brow8_col11,#T_be042b64_ea1d_11ea_b0cd_525400942d2brow11_col8,#T_be042b64_ea1d_11ea_b0cd_525400942d2brow11_col16,#T_be042b64_ea1d_11ea_b0cd_525400942d2brow16_col11{\n",
        "            background-color:  #0872b1;\n",
        "            color:  #f1f1f1;\n",
        "        }#T_be042b64_ea1d_11ea_b0cd_525400942d2brow8_col12,#T_be042b64_ea1d_11ea_b0cd_525400942d2brow12_col8{\n",
        "            background-color:  #8fb4d6;\n",
        "            color:  #000000;\n",
        "        }#T_be042b64_ea1d_11ea_b0cd_525400942d2brow8_col13,#T_be042b64_ea1d_11ea_b0cd_525400942d2brow13_col8{\n",
        "            background-color:  #a1bbda;\n",
        "            color:  #000000;\n",
        "        }#T_be042b64_ea1d_11ea_b0cd_525400942d2brow8_col15,#T_be042b64_ea1d_11ea_b0cd_525400942d2brow15_col8{\n",
        "            background-color:  #dcdaeb;\n",
        "            color:  #000000;\n",
        "        }#T_be042b64_ea1d_11ea_b0cd_525400942d2brow8_col16,#T_be042b64_ea1d_11ea_b0cd_525400942d2brow16_col8{\n",
        "            background-color:  #3991c1;\n",
        "            color:  #000000;\n",
        "        }#T_be042b64_ea1d_11ea_b0cd_525400942d2brow9_col11,#T_be042b64_ea1d_11ea_b0cd_525400942d2brow11_col9{\n",
        "            background-color:  #0568a3;\n",
        "            color:  #f1f1f1;\n",
        "        }#T_be042b64_ea1d_11ea_b0cd_525400942d2brow9_col12,#T_be042b64_ea1d_11ea_b0cd_525400942d2brow12_col9{\n",
        "            background-color:  #3d93c2;\n",
        "            color:  #000000;\n",
        "        }#T_be042b64_ea1d_11ea_b0cd_525400942d2brow9_col16,#T_be042b64_ea1d_11ea_b0cd_525400942d2brow16_col9{\n",
        "            background-color:  #046198;\n",
        "            color:  #f1f1f1;\n",
        "        }#T_be042b64_ea1d_11ea_b0cd_525400942d2brow10_col12,#T_be042b64_ea1d_11ea_b0cd_525400942d2brow12_col10{\n",
        "            background-color:  #60a1ca;\n",
        "            color:  #000000;\n",
        "        }#T_be042b64_ea1d_11ea_b0cd_525400942d2brow10_col13,#T_be042b64_ea1d_11ea_b0cd_525400942d2brow13_col10{\n",
        "            background-color:  #a4bcda;\n",
        "            color:  #000000;\n",
        "        }#T_be042b64_ea1d_11ea_b0cd_525400942d2brow11_col14,#T_be042b64_ea1d_11ea_b0cd_525400942d2brow14_col11{\n",
        "            background-color:  #71a8ce;\n",
        "            color:  #000000;\n",
        "        }#T_be042b64_ea1d_11ea_b0cd_525400942d2brow12_col16,#T_be042b64_ea1d_11ea_b0cd_525400942d2brow16_col12{\n",
        "            background-color:  #056aa6;\n",
        "            color:  #f1f1f1;\n",
        "        }#T_be042b64_ea1d_11ea_b0cd_525400942d2brow13_col14,#T_be042b64_ea1d_11ea_b0cd_525400942d2brow14_col13{\n",
        "            background-color:  #96b6d7;\n",
        "            color:  #000000;\n",
        "        }#T_be042b64_ea1d_11ea_b0cd_525400942d2brow13_col15,#T_be042b64_ea1d_11ea_b0cd_525400942d2brow15_col13{\n",
        "            background-color:  #a7bddb;\n",
        "            color:  #000000;\n",
        "        }#T_be042b64_ea1d_11ea_b0cd_525400942d2brow13_col16,#T_be042b64_ea1d_11ea_b0cd_525400942d2brow16_col13{\n",
        "            background-color:  #b3c3de;\n",
        "            color:  #000000;\n",
        "        }#T_be042b64_ea1d_11ea_b0cd_525400942d2brow14_col15,#T_be042b64_ea1d_11ea_b0cd_525400942d2brow15_col14{\n",
        "            background-color:  #b1c2de;\n",
        "            color:  #000000;\n",
        "        }#T_be042b64_ea1d_11ea_b0cd_525400942d2brow15_col16,#T_be042b64_ea1d_11ea_b0cd_525400942d2brow16_col15{\n",
        "            background-color:  #e0dded;\n",
        "            color:  #000000;\n",
        "        }</style><table id=\"T_be042b64_ea1d_11ea_b0cd_525400942d2b\" ><thead>    <tr>        <th class=\"blank level0\" ></th>        <th class=\"col_heading level0 col0\" >Rt</th>        <th class=\"col_heading level0 col1\" >theta</th>        <th class=\"col_heading level0 col2\" >kappa</th>        <th class=\"col_heading level0 col3\" >rho</th>        <th class=\"col_heading level0 col4\" >sigma</th>        <th class=\"col_heading level0 col5\" >School_closing</th>        <th class=\"col_heading level0 col6\" >Workplace_closing</th>        <th class=\"col_heading level0 col7\" >Cancel_events</th>        <th class=\"col_heading level0 col8\" >Gatherings_restrictions</th>        <th class=\"col_heading level0 col9\" >Transport_closing</th>        <th class=\"col_heading level0 col10\" >Stay_home_restrictions</th>        <th class=\"col_heading level0 col11\" >Internal_movement_restrictions</th>        <th class=\"col_heading level0 col12\" >International_movement_restrictions</th>        <th class=\"col_heading level0 col13\" >Information_campaigns</th>        <th class=\"col_heading level0 col14\" >Testing_policy</th>        <th class=\"col_heading level0 col15\" >Contact_tracing</th>        <th class=\"col_heading level0 col16\" >Stringency_index</th>    </tr></thead><tbody>\n",
        "                <tr>\n",
        "                        <th id=\"T_be042b64_ea1d_11ea_b0cd_525400942d2blevel0_row0\" class=\"row_heading level0 row0\" >Rt</th>\n",
        "                        <td id=\"T_be042b64_ea1d_11ea_b0cd_525400942d2brow0_col0\" class=\"data row0 col0\" >1.000000</td>\n",
        "                        <td id=\"T_be042b64_ea1d_11ea_b0cd_525400942d2brow0_col1\" class=\"data row0 col1\" >-0.188192</td>\n",
        "                        <td id=\"T_be042b64_ea1d_11ea_b0cd_525400942d2brow0_col2\" class=\"data row0 col2\" >-0.031542</td>\n",
        "                        <td id=\"T_be042b64_ea1d_11ea_b0cd_525400942d2brow0_col3\" class=\"data row0 col3\" >0.140382</td>\n",
        "                        <td id=\"T_be042b64_ea1d_11ea_b0cd_525400942d2brow0_col4\" class=\"data row0 col4\" >-0.242462</td>\n",
        "                        <td id=\"T_be042b64_ea1d_11ea_b0cd_525400942d2brow0_col5\" class=\"data row0 col5\" >-0.382391</td>\n",
        "                        <td id=\"T_be042b64_ea1d_11ea_b0cd_525400942d2brow0_col6\" class=\"data row0 col6\" >-0.116238</td>\n",
        "                        <td id=\"T_be042b64_ea1d_11ea_b0cd_525400942d2brow0_col7\" class=\"data row0 col7\" >0.026627</td>\n",
        "                        <td id=\"T_be042b64_ea1d_11ea_b0cd_525400942d2brow0_col8\" class=\"data row0 col8\" >0.154770</td>\n",
        "                        <td id=\"T_be042b64_ea1d_11ea_b0cd_525400942d2brow0_col9\" class=\"data row0 col9\" >-0.197708</td>\n",
        "                        <td id=\"T_be042b64_ea1d_11ea_b0cd_525400942d2brow0_col10\" class=\"data row0 col10\" >-0.104474</td>\n",
        "                        <td id=\"T_be042b64_ea1d_11ea_b0cd_525400942d2brow0_col11\" class=\"data row0 col11\" >-0.078292</td>\n",
        "                        <td id=\"T_be042b64_ea1d_11ea_b0cd_525400942d2brow0_col12\" class=\"data row0 col12\" >-0.252049</td>\n",
        "                        <td id=\"T_be042b64_ea1d_11ea_b0cd_525400942d2brow0_col13\" class=\"data row0 col13\" >0.019122</td>\n",
        "                        <td id=\"T_be042b64_ea1d_11ea_b0cd_525400942d2brow0_col14\" class=\"data row0 col14\" >-0.121838</td>\n",
        "                        <td id=\"T_be042b64_ea1d_11ea_b0cd_525400942d2brow0_col15\" class=\"data row0 col15\" >-0.171008</td>\n",
        "                        <td id=\"T_be042b64_ea1d_11ea_b0cd_525400942d2brow0_col16\" class=\"data row0 col16\" >-0.189540</td>\n",
        "            </tr>\n",
        "            <tr>\n",
        "                        <th id=\"T_be042b64_ea1d_11ea_b0cd_525400942d2blevel0_row1\" class=\"row_heading level0 row1\" >theta</th>\n",
        "                        <td id=\"T_be042b64_ea1d_11ea_b0cd_525400942d2brow1_col0\" class=\"data row1 col0\" >-0.188192</td>\n",
        "                        <td id=\"T_be042b64_ea1d_11ea_b0cd_525400942d2brow1_col1\" class=\"data row1 col1\" >1.000000</td>\n",
        "                        <td id=\"T_be042b64_ea1d_11ea_b0cd_525400942d2brow1_col2\" class=\"data row1 col2\" >0.346165</td>\n",
        "                        <td id=\"T_be042b64_ea1d_11ea_b0cd_525400942d2brow1_col3\" class=\"data row1 col3\" >0.053066</td>\n",
        "                        <td id=\"T_be042b64_ea1d_11ea_b0cd_525400942d2brow1_col4\" class=\"data row1 col4\" >0.266814</td>\n",
        "                        <td id=\"T_be042b64_ea1d_11ea_b0cd_525400942d2brow1_col5\" class=\"data row1 col5\" >0.155721</td>\n",
        "                        <td id=\"T_be042b64_ea1d_11ea_b0cd_525400942d2brow1_col6\" class=\"data row1 col6\" >0.226698</td>\n",
        "                        <td id=\"T_be042b64_ea1d_11ea_b0cd_525400942d2brow1_col7\" class=\"data row1 col7\" >0.050720</td>\n",
        "                        <td id=\"T_be042b64_ea1d_11ea_b0cd_525400942d2brow1_col8\" class=\"data row1 col8\" >-0.416375</td>\n",
        "                        <td id=\"T_be042b64_ea1d_11ea_b0cd_525400942d2brow1_col9\" class=\"data row1 col9\" >-0.178072</td>\n",
        "                        <td id=\"T_be042b64_ea1d_11ea_b0cd_525400942d2brow1_col10\" class=\"data row1 col10\" >-0.113790</td>\n",
        "                        <td id=\"T_be042b64_ea1d_11ea_b0cd_525400942d2brow1_col11\" class=\"data row1 col11\" >-0.207925</td>\n",
        "                        <td id=\"T_be042b64_ea1d_11ea_b0cd_525400942d2brow1_col12\" class=\"data row1 col12\" >-0.077507</td>\n",
        "                        <td id=\"T_be042b64_ea1d_11ea_b0cd_525400942d2brow1_col13\" class=\"data row1 col13\" >0.020976</td>\n",
        "                        <td id=\"T_be042b64_ea1d_11ea_b0cd_525400942d2brow1_col14\" class=\"data row1 col14\" >-0.459523</td>\n",
        "                        <td id=\"T_be042b64_ea1d_11ea_b0cd_525400942d2brow1_col15\" class=\"data row1 col15\" >-0.027244</td>\n",
        "                        <td id=\"T_be042b64_ea1d_11ea_b0cd_525400942d2brow1_col16\" class=\"data row1 col16\" >0.080977</td>\n",
        "            </tr>\n",
        "            <tr>\n",
        "                        <th id=\"T_be042b64_ea1d_11ea_b0cd_525400942d2blevel0_row2\" class=\"row_heading level0 row2\" >kappa</th>\n",
        "                        <td id=\"T_be042b64_ea1d_11ea_b0cd_525400942d2brow2_col0\" class=\"data row2 col0\" >-0.031542</td>\n",
        "                        <td id=\"T_be042b64_ea1d_11ea_b0cd_525400942d2brow2_col1\" class=\"data row2 col1\" >0.346165</td>\n",
        "                        <td id=\"T_be042b64_ea1d_11ea_b0cd_525400942d2brow2_col2\" class=\"data row2 col2\" >1.000000</td>\n",
        "                        <td id=\"T_be042b64_ea1d_11ea_b0cd_525400942d2brow2_col3\" class=\"data row2 col3\" >0.478212</td>\n",
        "                        <td id=\"T_be042b64_ea1d_11ea_b0cd_525400942d2brow2_col4\" class=\"data row2 col4\" >0.230384</td>\n",
        "                        <td id=\"T_be042b64_ea1d_11ea_b0cd_525400942d2brow2_col5\" class=\"data row2 col5\" >0.248555</td>\n",
        "                        <td id=\"T_be042b64_ea1d_11ea_b0cd_525400942d2brow2_col6\" class=\"data row2 col6\" >0.443929</td>\n",
        "                        <td id=\"T_be042b64_ea1d_11ea_b0cd_525400942d2brow2_col7\" class=\"data row2 col7\" >-0.006428</td>\n",
        "                        <td id=\"T_be042b64_ea1d_11ea_b0cd_525400942d2brow2_col8\" class=\"data row2 col8\" >-0.001380</td>\n",
        "                        <td id=\"T_be042b64_ea1d_11ea_b0cd_525400942d2brow2_col9\" class=\"data row2 col9\" >0.092097</td>\n",
        "                        <td id=\"T_be042b64_ea1d_11ea_b0cd_525400942d2brow2_col10\" class=\"data row2 col10\" >0.109527</td>\n",
        "                        <td id=\"T_be042b64_ea1d_11ea_b0cd_525400942d2brow2_col11\" class=\"data row2 col11\" >0.067181</td>\n",
        "                        <td id=\"T_be042b64_ea1d_11ea_b0cd_525400942d2brow2_col12\" class=\"data row2 col12\" >0.102069</td>\n",
        "                        <td id=\"T_be042b64_ea1d_11ea_b0cd_525400942d2brow2_col13\" class=\"data row2 col13\" >-0.083959</td>\n",
        "                        <td id=\"T_be042b64_ea1d_11ea_b0cd_525400942d2brow2_col14\" class=\"data row2 col14\" >-0.418649</td>\n",
        "                        <td id=\"T_be042b64_ea1d_11ea_b0cd_525400942d2brow2_col15\" class=\"data row2 col15\" >-0.162717</td>\n",
        "                        <td id=\"T_be042b64_ea1d_11ea_b0cd_525400942d2brow2_col16\" class=\"data row2 col16\" >0.397904</td>\n",
        "            </tr>\n",
        "            <tr>\n",
        "                        <th id=\"T_be042b64_ea1d_11ea_b0cd_525400942d2blevel0_row3\" class=\"row_heading level0 row3\" >rho</th>\n",
        "                        <td id=\"T_be042b64_ea1d_11ea_b0cd_525400942d2brow3_col0\" class=\"data row3 col0\" >0.140382</td>\n",
        "                        <td id=\"T_be042b64_ea1d_11ea_b0cd_525400942d2brow3_col1\" class=\"data row3 col1\" >0.053066</td>\n",
        "                        <td id=\"T_be042b64_ea1d_11ea_b0cd_525400942d2brow3_col2\" class=\"data row3 col2\" >0.478212</td>\n",
        "                        <td id=\"T_be042b64_ea1d_11ea_b0cd_525400942d2brow3_col3\" class=\"data row3 col3\" >1.000000</td>\n",
        "                        <td id=\"T_be042b64_ea1d_11ea_b0cd_525400942d2brow3_col4\" class=\"data row3 col4\" >0.630844</td>\n",
        "                        <td id=\"T_be042b64_ea1d_11ea_b0cd_525400942d2brow3_col5\" class=\"data row3 col5\" >0.265005</td>\n",
        "                        <td id=\"T_be042b64_ea1d_11ea_b0cd_525400942d2brow3_col6\" class=\"data row3 col6\" >0.182941</td>\n",
        "                        <td id=\"T_be042b64_ea1d_11ea_b0cd_525400942d2brow3_col7\" class=\"data row3 col7\" >-0.111823</td>\n",
        "                        <td id=\"T_be042b64_ea1d_11ea_b0cd_525400942d2brow3_col8\" class=\"data row3 col8\" >-0.079382</td>\n",
        "                        <td id=\"T_be042b64_ea1d_11ea_b0cd_525400942d2brow3_col9\" class=\"data row3 col9\" >0.053371</td>\n",
        "                        <td id=\"T_be042b64_ea1d_11ea_b0cd_525400942d2brow3_col10\" class=\"data row3 col10\" >0.117824</td>\n",
        "                        <td id=\"T_be042b64_ea1d_11ea_b0cd_525400942d2brow3_col11\" class=\"data row3 col11\" >-0.005441</td>\n",
        "                        <td id=\"T_be042b64_ea1d_11ea_b0cd_525400942d2brow3_col12\" class=\"data row3 col12\" >0.177392</td>\n",
        "                        <td id=\"T_be042b64_ea1d_11ea_b0cd_525400942d2brow3_col13\" class=\"data row3 col13\" >-0.126239</td>\n",
        "                        <td id=\"T_be042b64_ea1d_11ea_b0cd_525400942d2brow3_col14\" class=\"data row3 col14\" >-0.265315</td>\n",
        "                        <td id=\"T_be042b64_ea1d_11ea_b0cd_525400942d2brow3_col15\" class=\"data row3 col15\" >-0.230298</td>\n",
        "                        <td id=\"T_be042b64_ea1d_11ea_b0cd_525400942d2brow3_col16\" class=\"data row3 col16\" >0.244896</td>\n",
        "            </tr>\n",
        "            <tr>\n",
        "                        <th id=\"T_be042b64_ea1d_11ea_b0cd_525400942d2blevel0_row4\" class=\"row_heading level0 row4\" >sigma</th>\n",
        "                        <td id=\"T_be042b64_ea1d_11ea_b0cd_525400942d2brow4_col0\" class=\"data row4 col0\" >-0.242462</td>\n",
        "                        <td id=\"T_be042b64_ea1d_11ea_b0cd_525400942d2brow4_col1\" class=\"data row4 col1\" >0.266814</td>\n",
        "                        <td id=\"T_be042b64_ea1d_11ea_b0cd_525400942d2brow4_col2\" class=\"data row4 col2\" >0.230384</td>\n",
        "                        <td id=\"T_be042b64_ea1d_11ea_b0cd_525400942d2brow4_col3\" class=\"data row4 col3\" >0.630844</td>\n",
        "                        <td id=\"T_be042b64_ea1d_11ea_b0cd_525400942d2brow4_col4\" class=\"data row4 col4\" >1.000000</td>\n",
        "                        <td id=\"T_be042b64_ea1d_11ea_b0cd_525400942d2brow4_col5\" class=\"data row4 col5\" >0.276692</td>\n",
        "                        <td id=\"T_be042b64_ea1d_11ea_b0cd_525400942d2brow4_col6\" class=\"data row4 col6\" >-0.059904</td>\n",
        "                        <td id=\"T_be042b64_ea1d_11ea_b0cd_525400942d2brow4_col7\" class=\"data row4 col7\" >-0.151502</td>\n",
        "                        <td id=\"T_be042b64_ea1d_11ea_b0cd_525400942d2brow4_col8\" class=\"data row4 col8\" >-0.496911</td>\n",
        "                        <td id=\"T_be042b64_ea1d_11ea_b0cd_525400942d2brow4_col9\" class=\"data row4 col9\" >-0.110076</td>\n",
        "                        <td id=\"T_be042b64_ea1d_11ea_b0cd_525400942d2brow4_col10\" class=\"data row4 col10\" >-0.076270</td>\n",
        "                        <td id=\"T_be042b64_ea1d_11ea_b0cd_525400942d2brow4_col11\" class=\"data row4 col11\" >-0.272483</td>\n",
        "                        <td id=\"T_be042b64_ea1d_11ea_b0cd_525400942d2brow4_col12\" class=\"data row4 col12\" >0.117486</td>\n",
        "                        <td id=\"T_be042b64_ea1d_11ea_b0cd_525400942d2brow4_col13\" class=\"data row4 col13\" >-0.170255</td>\n",
        "                        <td id=\"T_be042b64_ea1d_11ea_b0cd_525400942d2brow4_col14\" class=\"data row4 col14\" >-0.277309</td>\n",
        "                        <td id=\"T_be042b64_ea1d_11ea_b0cd_525400942d2brow4_col15\" class=\"data row4 col15\" >0.120537</td>\n",
        "                        <td id=\"T_be042b64_ea1d_11ea_b0cd_525400942d2brow4_col16\" class=\"data row4 col16\" >0.032526</td>\n",
        "            </tr>\n",
        "            <tr>\n",
        "                        <th id=\"T_be042b64_ea1d_11ea_b0cd_525400942d2blevel0_row5\" class=\"row_heading level0 row5\" >School_closing</th>\n",
        "                        <td id=\"T_be042b64_ea1d_11ea_b0cd_525400942d2brow5_col0\" class=\"data row5 col0\" >-0.382391</td>\n",
        "                        <td id=\"T_be042b64_ea1d_11ea_b0cd_525400942d2brow5_col1\" class=\"data row5 col1\" >0.155721</td>\n",
        "                        <td id=\"T_be042b64_ea1d_11ea_b0cd_525400942d2brow5_col2\" class=\"data row5 col2\" >0.248555</td>\n",
        "                        <td id=\"T_be042b64_ea1d_11ea_b0cd_525400942d2brow5_col3\" class=\"data row5 col3\" >0.265005</td>\n",
        "                        <td id=\"T_be042b64_ea1d_11ea_b0cd_525400942d2brow5_col4\" class=\"data row5 col4\" >0.276692</td>\n",
        "                        <td id=\"T_be042b64_ea1d_11ea_b0cd_525400942d2brow5_col5\" class=\"data row5 col5\" >1.000000</td>\n",
        "                        <td id=\"T_be042b64_ea1d_11ea_b0cd_525400942d2brow5_col6\" class=\"data row5 col6\" >0.495752</td>\n",
        "                        <td id=\"T_be042b64_ea1d_11ea_b0cd_525400942d2brow5_col7\" class=\"data row5 col7\" >0.078412</td>\n",
        "                        <td id=\"T_be042b64_ea1d_11ea_b0cd_525400942d2brow5_col8\" class=\"data row5 col8\" >-0.107474</td>\n",
        "                        <td id=\"T_be042b64_ea1d_11ea_b0cd_525400942d2brow5_col9\" class=\"data row5 col9\" >0.326849</td>\n",
        "                        <td id=\"T_be042b64_ea1d_11ea_b0cd_525400942d2brow5_col10\" class=\"data row5 col10\" >0.214994</td>\n",
        "                        <td id=\"T_be042b64_ea1d_11ea_b0cd_525400942d2brow5_col11\" class=\"data row5 col11\" >0.160706</td>\n",
        "                        <td id=\"T_be042b64_ea1d_11ea_b0cd_525400942d2brow5_col12\" class=\"data row5 col12\" >0.586624</td>\n",
        "                        <td id=\"T_be042b64_ea1d_11ea_b0cd_525400942d2brow5_col13\" class=\"data row5 col13\" >-0.033113</td>\n",
        "                        <td id=\"T_be042b64_ea1d_11ea_b0cd_525400942d2brow5_col14\" class=\"data row5 col14\" >-0.015607</td>\n",
        "                        <td id=\"T_be042b64_ea1d_11ea_b0cd_525400942d2brow5_col15\" class=\"data row5 col15\" >-0.384119</td>\n",
        "                        <td id=\"T_be042b64_ea1d_11ea_b0cd_525400942d2brow5_col16\" class=\"data row5 col16\" >0.552196</td>\n",
        "            </tr>\n",
        "            <tr>\n",
        "                        <th id=\"T_be042b64_ea1d_11ea_b0cd_525400942d2blevel0_row6\" class=\"row_heading level0 row6\" >Workplace_closing</th>\n",
        "                        <td id=\"T_be042b64_ea1d_11ea_b0cd_525400942d2brow6_col0\" class=\"data row6 col0\" >-0.116238</td>\n",
        "                        <td id=\"T_be042b64_ea1d_11ea_b0cd_525400942d2brow6_col1\" class=\"data row6 col1\" >0.226698</td>\n",
        "                        <td id=\"T_be042b64_ea1d_11ea_b0cd_525400942d2brow6_col2\" class=\"data row6 col2\" >0.443929</td>\n",
        "                        <td id=\"T_be042b64_ea1d_11ea_b0cd_525400942d2brow6_col3\" class=\"data row6 col3\" >0.182941</td>\n",
        "                        <td id=\"T_be042b64_ea1d_11ea_b0cd_525400942d2brow6_col4\" class=\"data row6 col4\" >-0.059904</td>\n",
        "                        <td id=\"T_be042b64_ea1d_11ea_b0cd_525400942d2brow6_col5\" class=\"data row6 col5\" >0.495752</td>\n",
        "                        <td id=\"T_be042b64_ea1d_11ea_b0cd_525400942d2brow6_col6\" class=\"data row6 col6\" >1.000000</td>\n",
        "                        <td id=\"T_be042b64_ea1d_11ea_b0cd_525400942d2brow6_col7\" class=\"data row6 col7\" >0.167626</td>\n",
        "                        <td id=\"T_be042b64_ea1d_11ea_b0cd_525400942d2brow6_col8\" class=\"data row6 col8\" >0.238081</td>\n",
        "                        <td id=\"T_be042b64_ea1d_11ea_b0cd_525400942d2brow6_col9\" class=\"data row6 col9\" >0.370965</td>\n",
        "                        <td id=\"T_be042b64_ea1d_11ea_b0cd_525400942d2brow6_col10\" class=\"data row6 col10\" >0.438828</td>\n",
        "                        <td id=\"T_be042b64_ea1d_11ea_b0cd_525400942d2brow6_col11\" class=\"data row6 col11\" >0.432947</td>\n",
        "                        <td id=\"T_be042b64_ea1d_11ea_b0cd_525400942d2brow6_col12\" class=\"data row6 col12\" >0.244774</td>\n",
        "                        <td id=\"T_be042b64_ea1d_11ea_b0cd_525400942d2brow6_col13\" class=\"data row6 col13\" >0.002069</td>\n",
        "                        <td id=\"T_be042b64_ea1d_11ea_b0cd_525400942d2brow6_col14\" class=\"data row6 col14\" >-0.027014</td>\n",
        "                        <td id=\"T_be042b64_ea1d_11ea_b0cd_525400942d2brow6_col15\" class=\"data row6 col15\" >-0.469591</td>\n",
        "                        <td id=\"T_be042b64_ea1d_11ea_b0cd_525400942d2brow6_col16\" class=\"data row6 col16\" >0.617131</td>\n",
        "            </tr>\n",
        "            <tr>\n",
        "                        <th id=\"T_be042b64_ea1d_11ea_b0cd_525400942d2blevel0_row7\" class=\"row_heading level0 row7\" >Cancel_events</th>\n",
        "                        <td id=\"T_be042b64_ea1d_11ea_b0cd_525400942d2brow7_col0\" class=\"data row7 col0\" >0.026627</td>\n",
        "                        <td id=\"T_be042b64_ea1d_11ea_b0cd_525400942d2brow7_col1\" class=\"data row7 col1\" >0.050720</td>\n",
        "                        <td id=\"T_be042b64_ea1d_11ea_b0cd_525400942d2brow7_col2\" class=\"data row7 col2\" >-0.006428</td>\n",
        "                        <td id=\"T_be042b64_ea1d_11ea_b0cd_525400942d2brow7_col3\" class=\"data row7 col3\" >-0.111823</td>\n",
        "                        <td id=\"T_be042b64_ea1d_11ea_b0cd_525400942d2brow7_col4\" class=\"data row7 col4\" >-0.151502</td>\n",
        "                        <td id=\"T_be042b64_ea1d_11ea_b0cd_525400942d2brow7_col5\" class=\"data row7 col5\" >0.078412</td>\n",
        "                        <td id=\"T_be042b64_ea1d_11ea_b0cd_525400942d2brow7_col6\" class=\"data row7 col6\" >0.167626</td>\n",
        "                        <td id=\"T_be042b64_ea1d_11ea_b0cd_525400942d2brow7_col7\" class=\"data row7 col7\" >1.000000</td>\n",
        "                        <td id=\"T_be042b64_ea1d_11ea_b0cd_525400942d2brow7_col8\" class=\"data row7 col8\" >0.290994</td>\n",
        "                        <td id=\"T_be042b64_ea1d_11ea_b0cd_525400942d2brow7_col9\" class=\"data row7 col9\" >0.098932</td>\n",
        "                        <td id=\"T_be042b64_ea1d_11ea_b0cd_525400942d2brow7_col10\" class=\"data row7 col10\" >0.217428</td>\n",
        "                        <td id=\"T_be042b64_ea1d_11ea_b0cd_525400942d2brow7_col11\" class=\"data row7 col11\" >0.184810</td>\n",
        "                        <td id=\"T_be042b64_ea1d_11ea_b0cd_525400942d2brow7_col12\" class=\"data row7 col12\" >0.051480</td>\n",
        "                        <td id=\"T_be042b64_ea1d_11ea_b0cd_525400942d2brow7_col13\" class=\"data row7 col13\" >-0.007153</td>\n",
        "                        <td id=\"T_be042b64_ea1d_11ea_b0cd_525400942d2brow7_col14\" class=\"data row7 col14\" >0.051968</td>\n",
        "                        <td id=\"T_be042b64_ea1d_11ea_b0cd_525400942d2brow7_col15\" class=\"data row7 col15\" >-0.081245</td>\n",
        "                        <td id=\"T_be042b64_ea1d_11ea_b0cd_525400942d2brow7_col16\" class=\"data row7 col16\" >0.252733</td>\n",
        "            </tr>\n",
        "            <tr>\n",
        "                        <th id=\"T_be042b64_ea1d_11ea_b0cd_525400942d2blevel0_row8\" class=\"row_heading level0 row8\" >Gatherings_restrictions</th>\n",
        "                        <td id=\"T_be042b64_ea1d_11ea_b0cd_525400942d2brow8_col0\" class=\"data row8 col0\" >0.154770</td>\n",
        "                        <td id=\"T_be042b64_ea1d_11ea_b0cd_525400942d2brow8_col1\" class=\"data row8 col1\" >-0.416375</td>\n",
        "                        <td id=\"T_be042b64_ea1d_11ea_b0cd_525400942d2brow8_col2\" class=\"data row8 col2\" >-0.001380</td>\n",
        "                        <td id=\"T_be042b64_ea1d_11ea_b0cd_525400942d2brow8_col3\" class=\"data row8 col3\" >-0.079382</td>\n",
        "                        <td id=\"T_be042b64_ea1d_11ea_b0cd_525400942d2brow8_col4\" class=\"data row8 col4\" >-0.496911</td>\n",
        "                        <td id=\"T_be042b64_ea1d_11ea_b0cd_525400942d2brow8_col5\" class=\"data row8 col5\" >-0.107474</td>\n",
        "                        <td id=\"T_be042b64_ea1d_11ea_b0cd_525400942d2brow8_col6\" class=\"data row8 col6\" >0.238081</td>\n",
        "                        <td id=\"T_be042b64_ea1d_11ea_b0cd_525400942d2brow8_col7\" class=\"data row8 col7\" >0.290994</td>\n",
        "                        <td id=\"T_be042b64_ea1d_11ea_b0cd_525400942d2brow8_col8\" class=\"data row8 col8\" >1.000000</td>\n",
        "                        <td id=\"T_be042b64_ea1d_11ea_b0cd_525400942d2brow8_col9\" class=\"data row8 col9\" >0.477885</td>\n",
        "                        <td id=\"T_be042b64_ea1d_11ea_b0cd_525400942d2brow8_col10\" class=\"data row8 col10\" >0.456912</td>\n",
        "                        <td id=\"T_be042b64_ea1d_11ea_b0cd_525400942d2brow8_col11\" class=\"data row8 col11\" >0.613901</td>\n",
        "                        <td id=\"T_be042b64_ea1d_11ea_b0cd_525400942d2brow8_col12\" class=\"data row8 col12\" >0.149050</td>\n",
        "                        <td id=\"T_be042b64_ea1d_11ea_b0cd_525400942d2brow8_col13\" class=\"data row8 col13\" >0.084913</td>\n",
        "                        <td id=\"T_be042b64_ea1d_11ea_b0cd_525400942d2brow8_col14\" class=\"data row8 col14\" >0.268813</td>\n",
        "                        <td id=\"T_be042b64_ea1d_11ea_b0cd_525400942d2brow8_col15\" class=\"data row8 col15\" >-0.198968</td>\n",
        "                        <td id=\"T_be042b64_ea1d_11ea_b0cd_525400942d2brow8_col16\" class=\"data row8 col16\" >0.429479</td>\n",
        "            </tr>\n",
        "            <tr>\n",
        "                        <th id=\"T_be042b64_ea1d_11ea_b0cd_525400942d2blevel0_row9\" class=\"row_heading level0 row9\" >Transport_closing</th>\n",
        "                        <td id=\"T_be042b64_ea1d_11ea_b0cd_525400942d2brow9_col0\" class=\"data row9 col0\" >-0.197708</td>\n",
        "                        <td id=\"T_be042b64_ea1d_11ea_b0cd_525400942d2brow9_col1\" class=\"data row9 col1\" >-0.178072</td>\n",
        "                        <td id=\"T_be042b64_ea1d_11ea_b0cd_525400942d2brow9_col2\" class=\"data row9 col2\" >0.092097</td>\n",
        "                        <td id=\"T_be042b64_ea1d_11ea_b0cd_525400942d2brow9_col3\" class=\"data row9 col3\" >0.053371</td>\n",
        "                        <td id=\"T_be042b64_ea1d_11ea_b0cd_525400942d2brow9_col4\" class=\"data row9 col4\" >-0.110076</td>\n",
        "                        <td id=\"T_be042b64_ea1d_11ea_b0cd_525400942d2brow9_col5\" class=\"data row9 col5\" >0.326849</td>\n",
        "                        <td id=\"T_be042b64_ea1d_11ea_b0cd_525400942d2brow9_col6\" class=\"data row9 col6\" >0.370965</td>\n",
        "                        <td id=\"T_be042b64_ea1d_11ea_b0cd_525400942d2brow9_col7\" class=\"data row9 col7\" >0.098932</td>\n",
        "                        <td id=\"T_be042b64_ea1d_11ea_b0cd_525400942d2brow9_col8\" class=\"data row9 col8\" >0.477885</td>\n",
        "                        <td id=\"T_be042b64_ea1d_11ea_b0cd_525400942d2brow9_col9\" class=\"data row9 col9\" >1.000000</td>\n",
        "                        <td id=\"T_be042b64_ea1d_11ea_b0cd_525400942d2brow9_col10\" class=\"data row9 col10\" >0.496819</td>\n",
        "                        <td id=\"T_be042b64_ea1d_11ea_b0cd_525400942d2brow9_col11\" class=\"data row9 col11\" >0.693812</td>\n",
        "                        <td id=\"T_be042b64_ea1d_11ea_b0cd_525400942d2brow9_col12\" class=\"data row9 col12\" >0.417538</td>\n",
        "                        <td id=\"T_be042b64_ea1d_11ea_b0cd_525400942d2brow9_col13\" class=\"data row9 col13\" >-0.079417</td>\n",
        "                        <td id=\"T_be042b64_ea1d_11ea_b0cd_525400942d2brow9_col14\" class=\"data row9 col14\" >-0.029446</td>\n",
        "                        <td id=\"T_be042b64_ea1d_11ea_b0cd_525400942d2brow9_col15\" class=\"data row9 col15\" >-0.174402</td>\n",
        "                        <td id=\"T_be042b64_ea1d_11ea_b0cd_525400942d2brow9_col16\" class=\"data row9 col16\" >0.751553</td>\n",
        "            </tr>\n",
        "            <tr>\n",
        "                        <th id=\"T_be042b64_ea1d_11ea_b0cd_525400942d2blevel0_row10\" class=\"row_heading level0 row10\" >Stay_home_restrictions</th>\n",
        "                        <td id=\"T_be042b64_ea1d_11ea_b0cd_525400942d2brow10_col0\" class=\"data row10 col0\" >-0.104474</td>\n",
        "                        <td id=\"T_be042b64_ea1d_11ea_b0cd_525400942d2brow10_col1\" class=\"data row10 col1\" >-0.113790</td>\n",
        "                        <td id=\"T_be042b64_ea1d_11ea_b0cd_525400942d2brow10_col2\" class=\"data row10 col2\" >0.109527</td>\n",
        "                        <td id=\"T_be042b64_ea1d_11ea_b0cd_525400942d2brow10_col3\" class=\"data row10 col3\" >0.117824</td>\n",
        "                        <td id=\"T_be042b64_ea1d_11ea_b0cd_525400942d2brow10_col4\" class=\"data row10 col4\" >-0.076270</td>\n",
        "                        <td id=\"T_be042b64_ea1d_11ea_b0cd_525400942d2brow10_col5\" class=\"data row10 col5\" >0.214994</td>\n",
        "                        <td id=\"T_be042b64_ea1d_11ea_b0cd_525400942d2brow10_col6\" class=\"data row10 col6\" >0.438828</td>\n",
        "                        <td id=\"T_be042b64_ea1d_11ea_b0cd_525400942d2brow10_col7\" class=\"data row10 col7\" >0.217428</td>\n",
        "                        <td id=\"T_be042b64_ea1d_11ea_b0cd_525400942d2brow10_col8\" class=\"data row10 col8\" >0.456912</td>\n",
        "                        <td id=\"T_be042b64_ea1d_11ea_b0cd_525400942d2brow10_col9\" class=\"data row10 col9\" >0.496819</td>\n",
        "                        <td id=\"T_be042b64_ea1d_11ea_b0cd_525400942d2brow10_col10\" class=\"data row10 col10\" >1.000000</td>\n",
        "                        <td id=\"T_be042b64_ea1d_11ea_b0cd_525400942d2brow10_col11\" class=\"data row10 col11\" >0.630620</td>\n",
        "                        <td id=\"T_be042b64_ea1d_11ea_b0cd_525400942d2brow10_col12\" class=\"data row10 col12\" >0.310388</td>\n",
        "                        <td id=\"T_be042b64_ea1d_11ea_b0cd_525400942d2brow10_col13\" class=\"data row10 col13\" >0.070552</td>\n",
        "                        <td id=\"T_be042b64_ea1d_11ea_b0cd_525400942d2brow10_col14\" class=\"data row10 col14\" >0.211254</td>\n",
        "                        <td id=\"T_be042b64_ea1d_11ea_b0cd_525400942d2brow10_col15\" class=\"data row10 col15\" >0.025764</td>\n",
        "                        <td id=\"T_be042b64_ea1d_11ea_b0cd_525400942d2brow10_col16\" class=\"data row10 col16\" >0.614357</td>\n",
        "            </tr>\n",
        "            <tr>\n",
        "                        <th id=\"T_be042b64_ea1d_11ea_b0cd_525400942d2blevel0_row11\" class=\"row_heading level0 row11\" >Internal_movement_restrictions</th>\n",
        "                        <td id=\"T_be042b64_ea1d_11ea_b0cd_525400942d2brow11_col0\" class=\"data row11 col0\" >-0.078292</td>\n",
        "                        <td id=\"T_be042b64_ea1d_11ea_b0cd_525400942d2brow11_col1\" class=\"data row11 col1\" >-0.207925</td>\n",
        "                        <td id=\"T_be042b64_ea1d_11ea_b0cd_525400942d2brow11_col2\" class=\"data row11 col2\" >0.067181</td>\n",
        "                        <td id=\"T_be042b64_ea1d_11ea_b0cd_525400942d2brow11_col3\" class=\"data row11 col3\" >-0.005441</td>\n",
        "                        <td id=\"T_be042b64_ea1d_11ea_b0cd_525400942d2brow11_col4\" class=\"data row11 col4\" >-0.272483</td>\n",
        "                        <td id=\"T_be042b64_ea1d_11ea_b0cd_525400942d2brow11_col5\" class=\"data row11 col5\" >0.160706</td>\n",
        "                        <td id=\"T_be042b64_ea1d_11ea_b0cd_525400942d2brow11_col6\" class=\"data row11 col6\" >0.432947</td>\n",
        "                        <td id=\"T_be042b64_ea1d_11ea_b0cd_525400942d2brow11_col7\" class=\"data row11 col7\" >0.184810</td>\n",
        "                        <td id=\"T_be042b64_ea1d_11ea_b0cd_525400942d2brow11_col8\" class=\"data row11 col8\" >0.613901</td>\n",
        "                        <td id=\"T_be042b64_ea1d_11ea_b0cd_525400942d2brow11_col9\" class=\"data row11 col9\" >0.693812</td>\n",
        "                        <td id=\"T_be042b64_ea1d_11ea_b0cd_525400942d2brow11_col10\" class=\"data row11 col10\" >0.630620</td>\n",
        "                        <td id=\"T_be042b64_ea1d_11ea_b0cd_525400942d2brow11_col11\" class=\"data row11 col11\" >1.000000</td>\n",
        "                        <td id=\"T_be042b64_ea1d_11ea_b0cd_525400942d2brow11_col12\" class=\"data row11 col12\" >0.277842</td>\n",
        "                        <td id=\"T_be042b64_ea1d_11ea_b0cd_525400942d2brow11_col13\" class=\"data row11 col13\" >-0.025156</td>\n",
        "                        <td id=\"T_be042b64_ea1d_11ea_b0cd_525400942d2brow11_col14\" class=\"data row11 col14\" >0.259756</td>\n",
        "                        <td id=\"T_be042b64_ea1d_11ea_b0cd_525400942d2brow11_col15\" class=\"data row11 col15\" >-0.275558</td>\n",
        "                        <td id=\"T_be042b64_ea1d_11ea_b0cd_525400942d2brow11_col16\" class=\"data row11 col16\" >0.609540</td>\n",
        "            </tr>\n",
        "            <tr>\n",
        "                        <th id=\"T_be042b64_ea1d_11ea_b0cd_525400942d2blevel0_row12\" class=\"row_heading level0 row12\" >International_movement_restrictions</th>\n",
        "                        <td id=\"T_be042b64_ea1d_11ea_b0cd_525400942d2brow12_col0\" class=\"data row12 col0\" >-0.252049</td>\n",
        "                        <td id=\"T_be042b64_ea1d_11ea_b0cd_525400942d2brow12_col1\" class=\"data row12 col1\" >-0.077507</td>\n",
        "                        <td id=\"T_be042b64_ea1d_11ea_b0cd_525400942d2brow12_col2\" class=\"data row12 col2\" >0.102069</td>\n",
        "                        <td id=\"T_be042b64_ea1d_11ea_b0cd_525400942d2brow12_col3\" class=\"data row12 col3\" >0.177392</td>\n",
        "                        <td id=\"T_be042b64_ea1d_11ea_b0cd_525400942d2brow12_col4\" class=\"data row12 col4\" >0.117486</td>\n",
        "                        <td id=\"T_be042b64_ea1d_11ea_b0cd_525400942d2brow12_col5\" class=\"data row12 col5\" >0.586624</td>\n",
        "                        <td id=\"T_be042b64_ea1d_11ea_b0cd_525400942d2brow12_col6\" class=\"data row12 col6\" >0.244774</td>\n",
        "                        <td id=\"T_be042b64_ea1d_11ea_b0cd_525400942d2brow12_col7\" class=\"data row12 col7\" >0.051480</td>\n",
        "                        <td id=\"T_be042b64_ea1d_11ea_b0cd_525400942d2brow12_col8\" class=\"data row12 col8\" >0.149050</td>\n",
        "                        <td id=\"T_be042b64_ea1d_11ea_b0cd_525400942d2brow12_col9\" class=\"data row12 col9\" >0.417538</td>\n",
        "                        <td id=\"T_be042b64_ea1d_11ea_b0cd_525400942d2brow12_col10\" class=\"data row12 col10\" >0.310388</td>\n",
        "                        <td id=\"T_be042b64_ea1d_11ea_b0cd_525400942d2brow12_col11\" class=\"data row12 col11\" >0.277842</td>\n",
        "                        <td id=\"T_be042b64_ea1d_11ea_b0cd_525400942d2brow12_col12\" class=\"data row12 col12\" >1.000000</td>\n",
        "                        <td id=\"T_be042b64_ea1d_11ea_b0cd_525400942d2brow12_col13\" class=\"data row12 col13\" >0.032588</td>\n",
        "                        <td id=\"T_be042b64_ea1d_11ea_b0cd_525400942d2brow12_col14\" class=\"data row12 col14\" >-0.028845</td>\n",
        "                        <td id=\"T_be042b64_ea1d_11ea_b0cd_525400942d2brow12_col15\" class=\"data row12 col15\" >-0.122803</td>\n",
        "                        <td id=\"T_be042b64_ea1d_11ea_b0cd_525400942d2brow12_col16\" class=\"data row12 col16\" >0.673519</td>\n",
        "            </tr>\n",
        "            <tr>\n",
        "                        <th id=\"T_be042b64_ea1d_11ea_b0cd_525400942d2blevel0_row13\" class=\"row_heading level0 row13\" >Information_campaigns</th>\n",
        "                        <td id=\"T_be042b64_ea1d_11ea_b0cd_525400942d2brow13_col0\" class=\"data row13 col0\" >0.019122</td>\n",
        "                        <td id=\"T_be042b64_ea1d_11ea_b0cd_525400942d2brow13_col1\" class=\"data row13 col1\" >0.020976</td>\n",
        "                        <td id=\"T_be042b64_ea1d_11ea_b0cd_525400942d2brow13_col2\" class=\"data row13 col2\" >-0.083959</td>\n",
        "                        <td id=\"T_be042b64_ea1d_11ea_b0cd_525400942d2brow13_col3\" class=\"data row13 col3\" >-0.126239</td>\n",
        "                        <td id=\"T_be042b64_ea1d_11ea_b0cd_525400942d2brow13_col4\" class=\"data row13 col4\" >-0.170255</td>\n",
        "                        <td id=\"T_be042b64_ea1d_11ea_b0cd_525400942d2brow13_col5\" class=\"data row13 col5\" >-0.033113</td>\n",
        "                        <td id=\"T_be042b64_ea1d_11ea_b0cd_525400942d2brow13_col6\" class=\"data row13 col6\" >0.002069</td>\n",
        "                        <td id=\"T_be042b64_ea1d_11ea_b0cd_525400942d2brow13_col7\" class=\"data row13 col7\" >-0.007153</td>\n",
        "                        <td id=\"T_be042b64_ea1d_11ea_b0cd_525400942d2brow13_col8\" class=\"data row13 col8\" >0.084913</td>\n",
        "                        <td id=\"T_be042b64_ea1d_11ea_b0cd_525400942d2brow13_col9\" class=\"data row13 col9\" >-0.079417</td>\n",
        "                        <td id=\"T_be042b64_ea1d_11ea_b0cd_525400942d2brow13_col10\" class=\"data row13 col10\" >0.070552</td>\n",
        "                        <td id=\"T_be042b64_ea1d_11ea_b0cd_525400942d2brow13_col11\" class=\"data row13 col11\" >-0.025156</td>\n",
        "                        <td id=\"T_be042b64_ea1d_11ea_b0cd_525400942d2brow13_col12\" class=\"data row13 col12\" >0.032588</td>\n",
        "                        <td id=\"T_be042b64_ea1d_11ea_b0cd_525400942d2brow13_col13\" class=\"data row13 col13\" >1.000000</td>\n",
        "                        <td id=\"T_be042b64_ea1d_11ea_b0cd_525400942d2brow13_col14\" class=\"data row13 col14\" >0.125343</td>\n",
        "                        <td id=\"T_be042b64_ea1d_11ea_b0cd_525400942d2brow13_col15\" class=\"data row13 col15\" >0.060999</td>\n",
        "                        <td id=\"T_be042b64_ea1d_11ea_b0cd_525400942d2brow13_col16\" class=\"data row13 col16\" >0.007376</td>\n",
        "            </tr>\n",
        "            <tr>\n",
        "                        <th id=\"T_be042b64_ea1d_11ea_b0cd_525400942d2blevel0_row14\" class=\"row_heading level0 row14\" >Testing_policy</th>\n",
        "                        <td id=\"T_be042b64_ea1d_11ea_b0cd_525400942d2brow14_col0\" class=\"data row14 col0\" >-0.121838</td>\n",
        "                        <td id=\"T_be042b64_ea1d_11ea_b0cd_525400942d2brow14_col1\" class=\"data row14 col1\" >-0.459523</td>\n",
        "                        <td id=\"T_be042b64_ea1d_11ea_b0cd_525400942d2brow14_col2\" class=\"data row14 col2\" >-0.418649</td>\n",
        "                        <td id=\"T_be042b64_ea1d_11ea_b0cd_525400942d2brow14_col3\" class=\"data row14 col3\" >-0.265315</td>\n",
        "                        <td id=\"T_be042b64_ea1d_11ea_b0cd_525400942d2brow14_col4\" class=\"data row14 col4\" >-0.277309</td>\n",
        "                        <td id=\"T_be042b64_ea1d_11ea_b0cd_525400942d2brow14_col5\" class=\"data row14 col5\" >-0.015607</td>\n",
        "                        <td id=\"T_be042b64_ea1d_11ea_b0cd_525400942d2brow14_col6\" class=\"data row14 col6\" >-0.027014</td>\n",
        "                        <td id=\"T_be042b64_ea1d_11ea_b0cd_525400942d2brow14_col7\" class=\"data row14 col7\" >0.051968</td>\n",
        "                        <td id=\"T_be042b64_ea1d_11ea_b0cd_525400942d2brow14_col8\" class=\"data row14 col8\" >0.268813</td>\n",
        "                        <td id=\"T_be042b64_ea1d_11ea_b0cd_525400942d2brow14_col9\" class=\"data row14 col9\" >-0.029446</td>\n",
        "                        <td id=\"T_be042b64_ea1d_11ea_b0cd_525400942d2brow14_col10\" class=\"data row14 col10\" >0.211254</td>\n",
        "                        <td id=\"T_be042b64_ea1d_11ea_b0cd_525400942d2brow14_col11\" class=\"data row14 col11\" >0.259756</td>\n",
        "                        <td id=\"T_be042b64_ea1d_11ea_b0cd_525400942d2brow14_col12\" class=\"data row14 col12\" >-0.028845</td>\n",
        "                        <td id=\"T_be042b64_ea1d_11ea_b0cd_525400942d2brow14_col13\" class=\"data row14 col13\" >0.125343</td>\n",
        "                        <td id=\"T_be042b64_ea1d_11ea_b0cd_525400942d2brow14_col14\" class=\"data row14 col14\" >1.000000</td>\n",
        "                        <td id=\"T_be042b64_ea1d_11ea_b0cd_525400942d2brow14_col15\" class=\"data row14 col15\" >0.013910</td>\n",
        "                        <td id=\"T_be042b64_ea1d_11ea_b0cd_525400942d2brow14_col16\" class=\"data row14 col16\" >-0.255795</td>\n",
        "            </tr>\n",
        "            <tr>\n",
        "                        <th id=\"T_be042b64_ea1d_11ea_b0cd_525400942d2blevel0_row15\" class=\"row_heading level0 row15\" >Contact_tracing</th>\n",
        "                        <td id=\"T_be042b64_ea1d_11ea_b0cd_525400942d2brow15_col0\" class=\"data row15 col0\" >-0.171008</td>\n",
        "                        <td id=\"T_be042b64_ea1d_11ea_b0cd_525400942d2brow15_col1\" class=\"data row15 col1\" >-0.027244</td>\n",
        "                        <td id=\"T_be042b64_ea1d_11ea_b0cd_525400942d2brow15_col2\" class=\"data row15 col2\" >-0.162717</td>\n",
        "                        <td id=\"T_be042b64_ea1d_11ea_b0cd_525400942d2brow15_col3\" class=\"data row15 col3\" >-0.230298</td>\n",
        "                        <td id=\"T_be042b64_ea1d_11ea_b0cd_525400942d2brow15_col4\" class=\"data row15 col4\" >0.120537</td>\n",
        "                        <td id=\"T_be042b64_ea1d_11ea_b0cd_525400942d2brow15_col5\" class=\"data row15 col5\" >-0.384119</td>\n",
        "                        <td id=\"T_be042b64_ea1d_11ea_b0cd_525400942d2brow15_col6\" class=\"data row15 col6\" >-0.469591</td>\n",
        "                        <td id=\"T_be042b64_ea1d_11ea_b0cd_525400942d2brow15_col7\" class=\"data row15 col7\" >-0.081245</td>\n",
        "                        <td id=\"T_be042b64_ea1d_11ea_b0cd_525400942d2brow15_col8\" class=\"data row15 col8\" >-0.198968</td>\n",
        "                        <td id=\"T_be042b64_ea1d_11ea_b0cd_525400942d2brow15_col9\" class=\"data row15 col9\" >-0.174402</td>\n",
        "                        <td id=\"T_be042b64_ea1d_11ea_b0cd_525400942d2brow15_col10\" class=\"data row15 col10\" >0.025764</td>\n",
        "                        <td id=\"T_be042b64_ea1d_11ea_b0cd_525400942d2brow15_col11\" class=\"data row15 col11\" >-0.275558</td>\n",
        "                        <td id=\"T_be042b64_ea1d_11ea_b0cd_525400942d2brow15_col12\" class=\"data row15 col12\" >-0.122803</td>\n",
        "                        <td id=\"T_be042b64_ea1d_11ea_b0cd_525400942d2brow15_col13\" class=\"data row15 col13\" >0.060999</td>\n",
        "                        <td id=\"T_be042b64_ea1d_11ea_b0cd_525400942d2brow15_col14\" class=\"data row15 col14\" >0.013910</td>\n",
        "                        <td id=\"T_be042b64_ea1d_11ea_b0cd_525400942d2brow15_col15\" class=\"data row15 col15\" >1.000000</td>\n",
        "                        <td id=\"T_be042b64_ea1d_11ea_b0cd_525400942d2brow15_col16\" class=\"data row15 col16\" >-0.227665</td>\n",
        "            </tr>\n",
        "            <tr>\n",
        "                        <th id=\"T_be042b64_ea1d_11ea_b0cd_525400942d2blevel0_row16\" class=\"row_heading level0 row16\" >Stringency_index</th>\n",
        "                        <td id=\"T_be042b64_ea1d_11ea_b0cd_525400942d2brow16_col0\" class=\"data row16 col0\" >-0.189540</td>\n",
        "                        <td id=\"T_be042b64_ea1d_11ea_b0cd_525400942d2brow16_col1\" class=\"data row16 col1\" >0.080977</td>\n",
        "                        <td id=\"T_be042b64_ea1d_11ea_b0cd_525400942d2brow16_col2\" class=\"data row16 col2\" >0.397904</td>\n",
        "                        <td id=\"T_be042b64_ea1d_11ea_b0cd_525400942d2brow16_col3\" class=\"data row16 col3\" >0.244896</td>\n",
        "                        <td id=\"T_be042b64_ea1d_11ea_b0cd_525400942d2brow16_col4\" class=\"data row16 col4\" >0.032526</td>\n",
        "                        <td id=\"T_be042b64_ea1d_11ea_b0cd_525400942d2brow16_col5\" class=\"data row16 col5\" >0.552196</td>\n",
        "                        <td id=\"T_be042b64_ea1d_11ea_b0cd_525400942d2brow16_col6\" class=\"data row16 col6\" >0.617131</td>\n",
        "                        <td id=\"T_be042b64_ea1d_11ea_b0cd_525400942d2brow16_col7\" class=\"data row16 col7\" >0.252733</td>\n",
        "                        <td id=\"T_be042b64_ea1d_11ea_b0cd_525400942d2brow16_col8\" class=\"data row16 col8\" >0.429479</td>\n",
        "                        <td id=\"T_be042b64_ea1d_11ea_b0cd_525400942d2brow16_col9\" class=\"data row16 col9\" >0.751553</td>\n",
        "                        <td id=\"T_be042b64_ea1d_11ea_b0cd_525400942d2brow16_col10\" class=\"data row16 col10\" >0.614357</td>\n",
        "                        <td id=\"T_be042b64_ea1d_11ea_b0cd_525400942d2brow16_col11\" class=\"data row16 col11\" >0.609540</td>\n",
        "                        <td id=\"T_be042b64_ea1d_11ea_b0cd_525400942d2brow16_col12\" class=\"data row16 col12\" >0.673519</td>\n",
        "                        <td id=\"T_be042b64_ea1d_11ea_b0cd_525400942d2brow16_col13\" class=\"data row16 col13\" >0.007376</td>\n",
        "                        <td id=\"T_be042b64_ea1d_11ea_b0cd_525400942d2brow16_col14\" class=\"data row16 col14\" >-0.255795</td>\n",
        "                        <td id=\"T_be042b64_ea1d_11ea_b0cd_525400942d2brow16_col15\" class=\"data row16 col15\" >-0.227665</td>\n",
        "                        <td id=\"T_be042b64_ea1d_11ea_b0cd_525400942d2brow16_col16\" class=\"data row16 col16\" >1.000000</td>\n",
        "            </tr>\n",
        "    </tbody></table>"
       ],
       "output_type": "pyout",
       "prompt_number": 21,
       "text": [
        "<pandas.io.formats.style.Styler at 0x7fb37b8b9d90>"
       ]
      }
     ],
     "prompt_number": 21
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "# Scatter plot of Stringency index and Rt\n",
      "df = track_df.copy()\n",
      "sns.scatterplot(data=df, x=\"Stringency_index\", y=\"Rt\", hue=\"Country\", legend=\"brief\", marker=\"+\")\n",
      "bbox_to_anchor=(1.02, 0)\n",
      "bbox_loc=\"lower left\"\n",
      "plt.legend(bbox_to_anchor=bbox_to_anchor, loc=bbox_loc, borderaxespad=0)\n",
      "plt.title(\"Relationship of Stringency index and reproduction number\")\n",
      "plt.ylabel(\"Reproduction number\")\n",
      "plt.xlabel(\"Stringency index\")\n",
      "plt.show()"
     ],
     "language": "python",
     "metadata": {},
     "outputs": [
      {
       "output_type": "display_data",
       "png": "\n",
       "text": [
        "<Figure size 432x288 with 1 Axes>"
       ]
      }
     ],
     "prompt_number": 22
    }
   ],
   "metadata": {}
  }
 ]
}
