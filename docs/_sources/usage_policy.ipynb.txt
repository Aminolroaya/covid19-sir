{
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3.8.2 64-bit ('.venv': venv)",
   "name": "python_defaultSpec_1596469977201"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": 3
  },
  "name": ""
 },
 "nbformat": 3,
 "nbformat_minor": 0,
 "worksheets": [
  {
   "cells": [
    {
     "cell_type": "markdown",
     "metadata": {},
     "source": [
      "# Usage (details: policy measures)\n",
      "Here, we will analyse the relationship of policy measures and parameter values of SIR-derived ODE models. Policy measures are tracked by [Oxford Covid-19 Government Response Tracker (OxCGRT)](https://github.com/OxCGRT/covid-policy-tracker)."
     ]
    },
    {
     "cell_type": "heading",
     "level": 2,
     "metadata": {},
     "source": [
      "Preparation"
     ]
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "# Standard users\n",
      "# !pip install covsirphy\n",
      "# Developers (Note: this notebook is in example directory)\n",
      "import os\n",
      "os.chdir(\"../\")"
     ],
     "language": "python",
     "metadata": {},
     "outputs": [],
     "prompt_number": 1
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "from pprint import pprint"
     ],
     "language": "python",
     "metadata": {},
     "outputs": [],
     "prompt_number": 2
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "import covsirphy as cs\n",
      "cs.__version__"
     ],
     "language": "python",
     "metadata": {},
     "outputs": [
      {
       "output_type": "pyout",
       "prompt_number": 3,
       "text": [
        "'2.6.0-kappa.new.72.167.176.191.fix.120.155.157.163.164.165.174.188'"
       ]
      }
     ],
     "prompt_number": 3
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "# Standard users and developers\n",
      "data_loader = cs.DataLoader(\"input\")\n",
      "# The number of cases (JHU style)\n",
      "jhu_data = data_loader.jhu(verbose=False)\n",
      "# Population in each country\n",
      "population_data = data_loader.population(verbose=False)\n",
      "# Government Response Tracker (OxCGRT)\n",
      "oxcgrt_data = data_loader.oxcgrt(verbose=False)\n",
      "# Description/citation\n",
      "print(oxcgrt_data.citation)"
     ],
     "language": "python",
     "metadata": {
      "tags": []
     },
     "outputs": [
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "(Secondary source) Guidotti, E., Ardia, D., (2020), \"COVID-19 Data Hub\", Working paper, doi: 10.13140/RG.2.2.11649.81763.\n",
        "We can get Citation list of primary sources with DataLoader(...).covid19dh_citation"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      }
     ],
     "prompt_number": 4
    },
    {
     "cell_type": "markdown",
     "metadata": {},
     "source": [
      "## Class for policy measure analysis\n",
      "We will `PolicyMeasures` class to find relationship of policy measures and parameter values of SIR-derived ODE models."
     ]
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "# Create analyser with tau value 360 [min] (can be changed)\n",
      "analyser = cs.PolicyMeasures(jhu_data, population_data, oxcgrt_data, tau=360)\n",
      "# The number of registerd countries\n",
      "len(analyser.countries)"
     ],
     "language": "python",
     "metadata": {
      "tags": []
     },
     "outputs": [
      {
       "output_type": "pyout",
       "prompt_number": 5,
       "text": [
        "184"
       ]
      }
     ],
     "prompt_number": 5
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "# We can get Scenario instance for detailed scenario analysis\n",
      "type(analyser.scenario(\"Japan\"))"
     ],
     "language": "python",
     "metadata": {},
     "outputs": [
      {
       "output_type": "pyout",
       "prompt_number": 6,
       "text": [
        "covsirphy.analysis.scenario.Scenario"
       ]
      }
     ],
     "prompt_number": 6
    },
    {
     "cell_type": "markdown",
     "metadata": {},
     "source": [
      "## Set phases with S-R trend analysis\n",
      "We will perform S-R trend analysis to set phases in all countries. Countries which do not have **9th phases** will be un-registered for the next analysis. This number will be adjusted for your analysis."
     ]
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "# Set phases with S-R trend analysis\n",
      "analyser.trend(min_len=9)\n",
      "# The number of countries\n",
      "len(analyser.countries)"
     ],
     "language": "python",
     "metadata": {},
     "outputs": [
      {
       "output_type": "pyout",
       "prompt_number": 7,
       "text": [
        "13"
       ]
      }
     ],
     "prompt_number": 7
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "phase_len_dict = analyser.phase_len()\n",
      "pprint(phase_len_dict, compact=True)"
     ],
     "language": "python",
     "metadata": {
      "tags": []
     },
     "outputs": [
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "{"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "9"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ": "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "["
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Senegal'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'United Arab Emirates'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Portugal'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Italy'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Bahrain'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        "     "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Canada'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Kuwait'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Ukraine'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Moldova'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Poland'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "]"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        " "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "10"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ": "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "['Iran', 'Guinea', 'Czech Republic']"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "}"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      }
     ],
     "prompt_number": 8
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "# Here, only show the countries which have the most phases\n",
      "countries_show = max(phase_len_dict.items(), key=lambda x: x[0])[1]\n",
      "# Show summary\n",
      "analyser.summary(countries=countries_show)"
     ],
     "language": "python",
     "metadata": {
      "tags": []
     },
     "outputs": [
      {
       "html": [
        "<div>\n",
        "<style scoped>\n",
        "    .dataframe tbody tr th:only-of-type {\n",
        "        vertical-align: middle;\n",
        "    }\n",
        "\n",
        "    .dataframe tbody tr th {\n",
        "        vertical-align: top;\n",
        "    }\n",
        "\n",
        "    .dataframe thead th {\n",
        "        text-align: right;\n",
        "    }\n",
        "</style>\n",
        "<table border=\"1\" class=\"dataframe\">\n",
        "  <thead>\n",
        "    <tr style=\"text-align: right;\">\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th>Type</th>\n",
        "      <th>Start</th>\n",
        "      <th>End</th>\n",
        "      <th>Population</th>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>Country</th>\n",
        "      <th>Phase</th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "    </tr>\n",
        "  </thead>\n",
        "  <tbody>\n",
        "    <tr>\n",
        "      <th rowspan=\"10\" valign=\"top\">Iran</th>\n",
        "      <th>1st</th>\n",
        "      <td>Past</td>\n",
        "      <td>28Mar2020</td>\n",
        "      <td>12Apr2020</td>\n",
        "      <td>81800269</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>2nd</th>\n",
        "      <td>Past</td>\n",
        "      <td>13Apr2020</td>\n",
        "      <td>04May2020</td>\n",
        "      <td>81800269</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>3rd</th>\n",
        "      <td>Past</td>\n",
        "      <td>05May2020</td>\n",
        "      <td>20May2020</td>\n",
        "      <td>81800269</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>4th</th>\n",
        "      <td>Past</td>\n",
        "      <td>21May2020</td>\n",
        "      <td>02Jun2020</td>\n",
        "      <td>81800269</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>5th</th>\n",
        "      <td>Past</td>\n",
        "      <td>03Jun2020</td>\n",
        "      <td>15Jun2020</td>\n",
        "      <td>81800269</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>6th</th>\n",
        "      <td>Past</td>\n",
        "      <td>16Jun2020</td>\n",
        "      <td>27Jun2020</td>\n",
        "      <td>81800269</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>7th</th>\n",
        "      <td>Past</td>\n",
        "      <td>28Jun2020</td>\n",
        "      <td>07Jul2020</td>\n",
        "      <td>81800269</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>8th</th>\n",
        "      <td>Past</td>\n",
        "      <td>08Jul2020</td>\n",
        "      <td>19Jul2020</td>\n",
        "      <td>81800269</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>9th</th>\n",
        "      <td>Past</td>\n",
        "      <td>20Jul2020</td>\n",
        "      <td>31Jul2020</td>\n",
        "      <td>81800269</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>10th</th>\n",
        "      <td>Past</td>\n",
        "      <td>01Aug2020</td>\n",
        "      <td>15Aug2020</td>\n",
        "      <td>81800269</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th rowspan=\"10\" valign=\"top\">Guinea</th>\n",
        "      <th>1st</th>\n",
        "      <td>Past</td>\n",
        "      <td>01May2020</td>\n",
        "      <td>11May2020</td>\n",
        "      <td>12414318</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>2nd</th>\n",
        "      <td>Past</td>\n",
        "      <td>12May2020</td>\n",
        "      <td>19May2020</td>\n",
        "      <td>12414318</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>3rd</th>\n",
        "      <td>Past</td>\n",
        "      <td>20May2020</td>\n",
        "      <td>27May2020</td>\n",
        "      <td>12414318</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>4th</th>\n",
        "      <td>Past</td>\n",
        "      <td>28May2020</td>\n",
        "      <td>07Jun2020</td>\n",
        "      <td>12414318</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>5th</th>\n",
        "      <td>Past</td>\n",
        "      <td>08Jun2020</td>\n",
        "      <td>17Jun2020</td>\n",
        "      <td>12414318</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>6th</th>\n",
        "      <td>Past</td>\n",
        "      <td>18Jun2020</td>\n",
        "      <td>01Jul2020</td>\n",
        "      <td>12414318</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>7th</th>\n",
        "      <td>Past</td>\n",
        "      <td>02Jul2020</td>\n",
        "      <td>13Jul2020</td>\n",
        "      <td>12414318</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>8th</th>\n",
        "      <td>Past</td>\n",
        "      <td>14Jul2020</td>\n",
        "      <td>22Jul2020</td>\n",
        "      <td>12414318</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>9th</th>\n",
        "      <td>Past</td>\n",
        "      <td>23Jul2020</td>\n",
        "      <td>02Aug2020</td>\n",
        "      <td>12414318</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>10th</th>\n",
        "      <td>Past</td>\n",
        "      <td>03Aug2020</td>\n",
        "      <td>15Aug2020</td>\n",
        "      <td>12414318</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th rowspan=\"10\" valign=\"top\">Czech Republic</th>\n",
        "      <th>1st</th>\n",
        "      <td>Past</td>\n",
        "      <td>07Apr2020</td>\n",
        "      <td>16Apr2020</td>\n",
        "      <td>10649800</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>2nd</th>\n",
        "      <td>Past</td>\n",
        "      <td>17Apr2020</td>\n",
        "      <td>27Apr2020</td>\n",
        "      <td>10649800</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>3rd</th>\n",
        "      <td>Past</td>\n",
        "      <td>28Apr2020</td>\n",
        "      <td>14May2020</td>\n",
        "      <td>10649800</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>4th</th>\n",
        "      <td>Past</td>\n",
        "      <td>15May2020</td>\n",
        "      <td>04Jun2020</td>\n",
        "      <td>10649800</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>5th</th>\n",
        "      <td>Past</td>\n",
        "      <td>05Jun2020</td>\n",
        "      <td>24Jun2020</td>\n",
        "      <td>10649800</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>6th</th>\n",
        "      <td>Past</td>\n",
        "      <td>25Jun2020</td>\n",
        "      <td>05Jul2020</td>\n",
        "      <td>10649800</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>7th</th>\n",
        "      <td>Past</td>\n",
        "      <td>06Jul2020</td>\n",
        "      <td>17Jul2020</td>\n",
        "      <td>10649800</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>8th</th>\n",
        "      <td>Past</td>\n",
        "      <td>18Jul2020</td>\n",
        "      <td>27Jul2020</td>\n",
        "      <td>10649800</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>9th</th>\n",
        "      <td>Past</td>\n",
        "      <td>28Jul2020</td>\n",
        "      <td>05Aug2020</td>\n",
        "      <td>10649800</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>10th</th>\n",
        "      <td>Past</td>\n",
        "      <td>06Aug2020</td>\n",
        "      <td>15Aug2020</td>\n",
        "      <td>10649800</td>\n",
        "    </tr>\n",
        "  </tbody>\n",
        "</table>\n",
        "</div>"
       ],
       "output_type": "pyout",
       "prompt_number": 9,
       "text": [
        "                      Type      Start        End  Population\n",
        "Country        Phase                                        \n",
        "Iran           1st    Past  28Mar2020  12Apr2020    81800269\n",
        "               2nd    Past  13Apr2020  04May2020    81800269\n",
        "               3rd    Past  05May2020  20May2020    81800269\n",
        "               4th    Past  21May2020  02Jun2020    81800269\n",
        "               5th    Past  03Jun2020  15Jun2020    81800269\n",
        "               6th    Past  16Jun2020  27Jun2020    81800269\n",
        "               7th    Past  28Jun2020  07Jul2020    81800269\n",
        "               8th    Past  08Jul2020  19Jul2020    81800269\n",
        "               9th    Past  20Jul2020  31Jul2020    81800269\n",
        "               10th   Past  01Aug2020  15Aug2020    81800269\n",
        "Guinea         1st    Past  01May2020  11May2020    12414318\n",
        "               2nd    Past  12May2020  19May2020    12414318\n",
        "               3rd    Past  20May2020  27May2020    12414318\n",
        "               4th    Past  28May2020  07Jun2020    12414318\n",
        "               5th    Past  08Jun2020  17Jun2020    12414318\n",
        "               6th    Past  18Jun2020  01Jul2020    12414318\n",
        "               7th    Past  02Jul2020  13Jul2020    12414318\n",
        "               8th    Past  14Jul2020  22Jul2020    12414318\n",
        "               9th    Past  23Jul2020  02Aug2020    12414318\n",
        "               10th   Past  03Aug2020  15Aug2020    12414318\n",
        "Czech Republic 1st    Past  07Apr2020  16Apr2020    10649800\n",
        "               2nd    Past  17Apr2020  27Apr2020    10649800\n",
        "               3rd    Past  28Apr2020  14May2020    10649800\n",
        "               4th    Past  15May2020  04Jun2020    10649800\n",
        "               5th    Past  05Jun2020  24Jun2020    10649800\n",
        "               6th    Past  25Jun2020  05Jul2020    10649800\n",
        "               7th    Past  06Jul2020  17Jul2020    10649800\n",
        "               8th    Past  18Jul2020  27Jul2020    10649800\n",
        "               9th    Past  28Jul2020  05Aug2020    10649800\n",
        "               10th   Past  06Aug2020  15Aug2020    10649800"
       ]
      }
     ],
     "prompt_number": 9
    },
    {
     "cell_type": "markdown",
     "metadata": {},
     "source": [
      "## Parameter estimation\n",
      "we will estimate the parameter values with SIR-derived ODE models in each country."
     ]
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "# Parameter estimation with SIR-F model\n",
      "analyser.estimate(cs.SIRF)"
     ],
     "language": "python",
     "metadata": {
      "tags": []
     },
     "outputs": [
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n",
        "<SIR-F model: parameter estimation>"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "Running optimization with 4 CPUs..."
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tGIN,  4th phase (28May2020 - 07Jun2020): finished 1887 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tGIN,  3rd phase (20May2020 - 27May2020): finished 1899 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tBHR,  4th phase (14Jun2020 - 21Jun2020): finished 1891 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tCAN,  9th phase (23Jul2020 - 15Aug2020): finished 1888 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tCAN,  3rd phase (24Apr2020 - 07May2020): finished  814 trials in 0 min 20 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tUKR,  3rd phase (08Jun2020 - 18Jun2020): finished  437 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tARE,  4th phase (04Jun2020 - 11Jun2020): finished 1130 trials in 0 min 30 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tPOL,  1st phase (23Apr2020 - 09May2020): finished  230 trials in 0 min  5 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tMDA,  6th phase (10Jul2020 - 20Jul2020): finished  440 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tPOL,  2nd phase (10May2020 - 21May2020): finished  430 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tKWT,  8th phase (23Jul2020 - 02Aug2020): finished  436 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tIRN,  6th phase (16Jun2020 - 27Jun2020): finished 1940 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tKWT,  9th phase (03Aug2020 - 15Aug2020): finished 1935 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tUKR,  6th phase (09Jul2020 - 16Jul2020): finished  234 trials in 0 min  5 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tCAN,  5th phase (16May2020 - 24May2020): finished  212 trials in 0 min  5 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tITA,  7th phase (21May2020 - 04Jun2020): finished  610 trials in 0 min 15 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tUKR,  2nd phase (23May2020 - 07Jun2020): finished 1544 trials in 0 min 45 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tSEN,  5th phase (20Jun2020 - 30Jun2020): finished  631 trials in 0 min 15 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tCAN,  4th phase (08May2020 - 15May2020): finished  236 trials in 0 min  5 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tITA,  1st phase (24Mar2020 - 31Mar2020): finished  235 trials in 0 min  5 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tPRT,  7th phase (07Jul2020 - 15Jul2020): finished  234 trials in 0 min  5 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tMDA,  4th phase (20Jun2020 - 28Jun2020): finished  445 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tPRT,  2nd phase (18May2020 - 28May2020): finished 1922 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tPRT,  4th phase (07Jun2020 - 16Jun2020): finished  812 trials in 0 min 20 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tBHR,  6th phase (07Jul2020 - 14Jul2020): finished 1941 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tGIN,  5th phase (08Jun2020 - 17Jun2020): finished  968 trials in 0 min 25 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tPOL,  5th phase (16Jun2020 - 30Jun2020): finished  438 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tPRT,  6th phase (26Jun2020 - 06Jul2020): finished  232 trials in 0 min  5 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tKWT,  6th phase (04Jul2020 - 13Jul2020): finished  233 trials in 0 min  5 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tITA,  9th phase (09Jul2020 - 15Aug2020): finished 1903 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tIRN,  9th phase (20Jul2020 - 31Jul2020): finished  440 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tKWT,  1st phase (11May2020 - 23May2020): finished 1936 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tSEN,  7th phase (11Jul2020 - 21Jul2020): finished  790 trials in 0 min 20 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tSEN,  1st phase (30Apr2020 - 14May2020): finished 1921 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tMDA,  5th phase (29Jun2020 - 09Jul2020): finished 1918 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tIRN,  5th phase (03Jun2020 - 15Jun2020): finished  630 trials in 0 min 15 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tCAN,  1st phase (08Apr2020 - 15Apr2020): finished 1914 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tPOL,  6th phase (01Jul2020 - 15Jul2020): finished  443 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tARE,  8th phase (12Jul2020 - 26Jul2020): finished 1136 trials in 0 min 30 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tPRT,  8th phase (16Jul2020 - 27Jul2020): finished  428 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tITA,  3rd phase (13Apr2020 - 21Apr2020): finished  439 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tKWT,  7th phase (14Jul2020 - 22Jul2020): finished  233 trials in 0 min  5 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tCAN,  8th phase (29Jun2020 - 22Jul2020): finished 1906 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tARE,  6th phase (23Jun2020 - 02Jul2020): finished 1919 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tCZE,  2nd phase (17Apr2020 - 27Apr2020): finished  229 trials in 0 min  5 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tMDA,  8th phase (29Jul2020 - 05Aug2020): finished 1933 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tUKR,  7th phase (17Jul2020 - 24Jul2020): finished  234 trials in 0 min  5 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tBHR,  2nd phase (28May2020 - 04Jun2020): finished  978 trials in 0 min 25 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tBHR,  7th phase (15Jul2020 - 24Jul2020): finished  627 trials in 0 min 15 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tMDA,  7th phase (21Jul2020 - 28Jul2020): finished  232 trials in 0 min  5 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tSEN,  8th phase (22Jul2020 - 01Aug2020): finished  783 trials in 0 min 20 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tSEN,  9th phase (02Aug2020 - 15Aug2020): finished  602 trials in 0 min 15 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tPRT,  3rd phase (29May2020 - 06Jun2020): finished  429 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tMDA,  2nd phase (30May2020 - 10Jun2020): finished 1888 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tIRN,  7th phase (28Jun2020 - 07Jul2020): finished  225 trials in 0 min  5 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tCAN,  2nd phase (16Apr2020 - 23Apr2020): finished 1896 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tPOL,  8th phase (26Jul2020 - 04Aug2020): finished  424 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tPRT,  9th phase (28Jul2020 - 15Aug2020): finished  770 trials in 0 min 20 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tPRT,  1st phase (05May2020 - 17May2020): finished 1885 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tCAN,  6th phase (25May2020 - 05Jun2020): finished  420 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tCZE,  8th phase (18Jul2020 - 27Jul2020): finished 1886 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tMDA,  3rd phase (11Jun2020 - 19Jun2020): finished  605 trials in 0 min 15 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tKWT,  5th phase (25Jun2020 - 03Jul2020): finished 1873 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tPOL,  4th phase (04Jun2020 - 15Jun2020): finished  418 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tARE,  9th phase (27Jul2020 - 15Aug2020): finished 1056 trials in 0 min 30 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tGIN,  1st phase (01May2020 - 11May2020): finished 1854 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tKWT,  3rd phase (07Jun2020 - 15Jun2020): finished  772 trials in 0 min 20 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tIRN,  4th phase (21May2020 - 02Jun2020): finished 1838 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tARE,  5th phase (12Jun2020 - 22Jun2020): finished 1210 trials in 0 min 35 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tPRT,  5th phase (17Jun2020 - 25Jun2020): finished  223 trials in 0 min  5 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tITA,  6th phase (10May2020 - 20May2020): finished  606 trials in 0 min 15 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tCZE,  6th phase (25Jun2020 - 05Jul2020): finished  688 trials in 0 min 20 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tSEN,  6th phase (01Jul2020 - 10Jul2020): finished 1800 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tCAN,  7th phase (06Jun2020 - 28Jun2020): finished  405 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tIRN,  1st phase (28Mar2020 - 12Apr2020): finished 1785 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tARE,  7th phase (03Jul2020 - 11Jul2020): finished 1812 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tKWT,  4th phase (16Jun2020 - 24Jun2020): finished 1814 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tITA,  5th phase (02May2020 - 09May2020): finished  390 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tBHR,  1st phase (06May2020 - 27May2020): finished 1810 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tIRN,  2nd phase (13Apr2020 - 04May2020): finished  579 trials in 0 min 15 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tBHR,  9th phase (04Aug2020 - 15Aug2020): finished 1811 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tGIN,  2nd phase (12May2020 - 19May2020): finished 1823 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tCZE,  3rd phase (28Apr2020 - 14May2020): finished  915 trials in 0 min 25 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tCZE,  9th phase (28Jul2020 - 05Aug2020): finished 1473 trials in 0 min 45 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tGIN,  7th phase (02Jul2020 - 13Jul2020): finished 1828 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tARE,  1st phase (28Apr2020 - 12May2020): finished 1812 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tITA,  8th phase (05Jun2020 - 08Jul2020): finished  886 trials in 0 min 25 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tUKR,  5th phase (30Jun2020 - 08Jul2020): finished  411 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tGIN,  6th phase (18Jun2020 - 01Jul2020): finished 1821 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tCZE,  7th phase (06Jul2020 - 17Jul2020): finished 1808 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tUKR,  4th phase (19Jun2020 - 29Jun2020): finished 1807 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tUKR,  9th phase (07Aug2020 - 15Aug2020): finished 1799 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tIRN,  3rd phase (05May2020 - 20May2020): finished  396 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tIRN, 10th phase (01Aug2020 - 15Aug2020): finished  214 trials in 0 min  5 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tCZE,  1st phase (07Apr2020 - 16Apr2020): finished 1737 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tUKR,  8th phase (25Jul2020 - 06Aug2020): finished  289 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tMDA,  9th phase (06Aug2020 - 15Aug2020): finished 1234 trials in 0 min 50 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tBHR,  5th phase (22Jun2020 - 06Jul2020): finished 1452 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tUKR,  1st phase (07May2020 - 22May2020): finished 1454 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tSEN,  3rd phase (30May2020 - 09Jun2020): finished 1454 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tITA,  2nd phase (01Apr2020 - 12Apr2020): finished  170 trials in 0 min  5 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tBHR,  3rd phase (05Jun2020 - 13Jun2020): finished 1548 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tPOL,  9th phase (05Aug2020 - 15Aug2020): finished 1593 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tMDA,  1st phase (11May2020 - 29May2020): finished 1611 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tPOL,  7th phase (16Jul2020 - 25Jul2020): finished  217 trials in 0 min  5 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tIRN,  8th phase (08Jul2020 - 19Jul2020): finished 1082 trials in 0 min 40 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tCZE,  4th phase (15May2020 - 04Jun2020): finished 1532 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tCZE,  5th phase (05Jun2020 - 24Jun2020): finished 1497 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tSEN,  4th phase (10Jun2020 - 19Jun2020): finished 1501 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tARE,  2nd phase (13May2020 - 24May2020): finished 1604 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tPOL,  3rd phase (22May2020 - 03Jun2020): finished 1053 trials in 0 min 35 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tBHR,  8th phase (25Jul2020 - 03Aug2020): finished  225 trials in 0 min  5 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tKWT,  2nd phase (24May2020 - 06Jun2020): finished 1756 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tSEN,  2nd phase (15May2020 - 29May2020): finished 1946 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tARE,  3rd phase (25May2020 - 03Jun2020): finished 1168 trials in 0 min 30 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tITA,  4th phase (22Apr2020 - 01May2020): finished  477 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "Completed optimization. Total: 17 min 34 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      }
     ],
     "prompt_number": 10
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "# Show summary\n",
      "analyser.summary(countries=countries_show)"
     ],
     "language": "python",
     "metadata": {},
     "outputs": [
      {
       "html": [
        "<div>\n",
        "<style scoped>\n",
        "    .dataframe tbody tr th:only-of-type {\n",
        "        vertical-align: middle;\n",
        "    }\n",
        "\n",
        "    .dataframe tbody tr th {\n",
        "        vertical-align: top;\n",
        "    }\n",
        "\n",
        "    .dataframe thead th {\n",
        "        text-align: right;\n",
        "    }\n",
        "</style>\n",
        "<table border=\"1\" class=\"dataframe\">\n",
        "  <thead>\n",
        "    <tr style=\"text-align: right;\">\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th>Type</th>\n",
        "      <th>Start</th>\n",
        "      <th>End</th>\n",
        "      <th>Population</th>\n",
        "      <th>ODE</th>\n",
        "      <th>Rt</th>\n",
        "      <th>theta</th>\n",
        "      <th>kappa</th>\n",
        "      <th>rho</th>\n",
        "      <th>sigma</th>\n",
        "      <th>tau</th>\n",
        "      <th>1/alpha2 [day]</th>\n",
        "      <th>1/gamma [day]</th>\n",
        "      <th>alpha1 [-]</th>\n",
        "      <th>1/beta [day]</th>\n",
        "      <th>RMSLE</th>\n",
        "      <th>Trials</th>\n",
        "      <th>Runtime</th>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>Country</th>\n",
        "      <th>Phase</th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "    </tr>\n",
        "  </thead>\n",
        "  <tbody>\n",
        "    <tr>\n",
        "      <th rowspan=\"10\" valign=\"top\">Iran</th>\n",
        "      <th>0th</th>\n",
        "      <td>Past</td>\n",
        "      <td>28Mar2020</td>\n",
        "      <td>12Apr2020</td>\n",
        "      <td>81800269</td>\n",
        "      <td>SIR-F</td>\n",
        "      <td>1.35</td>\n",
        "      <td>0.052383</td>\n",
        "      <td>0.000156</td>\n",
        "      <td>0.023055</td>\n",
        "      <td>0.016002</td>\n",
        "      <td>360</td>\n",
        "      <td>1599</td>\n",
        "      <td>15</td>\n",
        "      <td>0.052</td>\n",
        "      <td>10</td>\n",
        "      <td>0.195790</td>\n",
        "      <td>1785</td>\n",
        "      <td>1 min  0 sec</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>1st</th>\n",
        "      <td>Past</td>\n",
        "      <td>13Apr2020</td>\n",
        "      <td>04May2020</td>\n",
        "      <td>81800269</td>\n",
        "      <td>SIR-F</td>\n",
        "      <td>0.70</td>\n",
        "      <td>0.026814</td>\n",
        "      <td>0.000725</td>\n",
        "      <td>0.018222</td>\n",
        "      <td>0.024623</td>\n",
        "      <td>360</td>\n",
        "      <td>344</td>\n",
        "      <td>10</td>\n",
        "      <td>0.027</td>\n",
        "      <td>13</td>\n",
        "      <td>0.030652</td>\n",
        "      <td>579</td>\n",
        "      <td>0 min 15 sec</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>2nd</th>\n",
        "      <td>Past</td>\n",
        "      <td>05May2020</td>\n",
        "      <td>20May2020</td>\n",
        "      <td>81800269</td>\n",
        "      <td>SIR-F</td>\n",
        "      <td>1.42</td>\n",
        "      <td>0.018373</td>\n",
        "      <td>0.000483</td>\n",
        "      <td>0.026592</td>\n",
        "      <td>0.017854</td>\n",
        "      <td>360</td>\n",
        "      <td>517</td>\n",
        "      <td>14</td>\n",
        "      <td>0.018</td>\n",
        "      <td>9</td>\n",
        "      <td>0.019420</td>\n",
        "      <td>396</td>\n",
        "      <td>0 min 10 sec</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>3rd</th>\n",
        "      <td>Past</td>\n",
        "      <td>21May2020</td>\n",
        "      <td>02Jun2020</td>\n",
        "      <td>81800269</td>\n",
        "      <td>SIR-F</td>\n",
        "      <td>1.17</td>\n",
        "      <td>0.000945</td>\n",
        "      <td>0.000603</td>\n",
        "      <td>0.024190</td>\n",
        "      <td>0.019984</td>\n",
        "      <td>360</td>\n",
        "      <td>414</td>\n",
        "      <td>12</td>\n",
        "      <td>0.001</td>\n",
        "      <td>10</td>\n",
        "      <td>0.013543</td>\n",
        "      <td>1838</td>\n",
        "      <td>1 min  0 sec</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>4th</th>\n",
        "      <td>Past</td>\n",
        "      <td>03Jun2020</td>\n",
        "      <td>15Jun2020</td>\n",
        "      <td>81800269</td>\n",
        "      <td>SIR-F</td>\n",
        "      <td>1.11</td>\n",
        "      <td>0.017161</td>\n",
        "      <td>0.000338</td>\n",
        "      <td>0.020119</td>\n",
        "      <td>0.017535</td>\n",
        "      <td>360</td>\n",
        "      <td>740</td>\n",
        "      <td>14</td>\n",
        "      <td>0.017</td>\n",
        "      <td>12</td>\n",
        "      <td>0.019490</td>\n",
        "      <td>630</td>\n",
        "      <td>0 min 15 sec</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>5th</th>\n",
        "      <td>Past</td>\n",
        "      <td>16Jun2020</td>\n",
        "      <td>27Jun2020</td>\n",
        "      <td>81800269</td>\n",
        "      <td>SIR-F</td>\n",
        "      <td>0.96</td>\n",
        "      <td>0.000320</td>\n",
        "      <td>0.000970</td>\n",
        "      <td>0.020738</td>\n",
        "      <td>0.020516</td>\n",
        "      <td>360</td>\n",
        "      <td>257</td>\n",
        "      <td>12</td>\n",
        "      <td>0.000</td>\n",
        "      <td>12</td>\n",
        "      <td>0.022436</td>\n",
        "      <td>1940</td>\n",
        "      <td>1 min  0 sec</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>6th</th>\n",
        "      <td>Past</td>\n",
        "      <td>28Jun2020</td>\n",
        "      <td>07Jul2020</td>\n",
        "      <td>81800269</td>\n",
        "      <td>SIR-F</td>\n",
        "      <td>0.92</td>\n",
        "      <td>0.000420</td>\n",
        "      <td>0.001419</td>\n",
        "      <td>0.023269</td>\n",
        "      <td>0.023803</td>\n",
        "      <td>360</td>\n",
        "      <td>176</td>\n",
        "      <td>10</td>\n",
        "      <td>0.000</td>\n",
        "      <td>10</td>\n",
        "      <td>0.006227</td>\n",
        "      <td>225</td>\n",
        "      <td>0 min  5 sec</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>7th</th>\n",
        "      <td>Past</td>\n",
        "      <td>08Jul2020</td>\n",
        "      <td>19Jul2020</td>\n",
        "      <td>81800269</td>\n",
        "      <td>SIR-F</td>\n",
        "      <td>0.83</td>\n",
        "      <td>0.069844</td>\n",
        "      <td>0.000262</td>\n",
        "      <td>0.024578</td>\n",
        "      <td>0.027133</td>\n",
        "      <td>360</td>\n",
        "      <td>953</td>\n",
        "      <td>9</td>\n",
        "      <td>0.070</td>\n",
        "      <td>10</td>\n",
        "      <td>0.010948</td>\n",
        "      <td>1082</td>\n",
        "      <td>0 min 40 sec</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>8th</th>\n",
        "      <td>Past</td>\n",
        "      <td>20Jul2020</td>\n",
        "      <td>31Jul2020</td>\n",
        "      <td>81800269</td>\n",
        "      <td>SIR-F</td>\n",
        "      <td>1.08</td>\n",
        "      <td>0.038463</td>\n",
        "      <td>0.001459</td>\n",
        "      <td>0.028930</td>\n",
        "      <td>0.024236</td>\n",
        "      <td>360</td>\n",
        "      <td>171</td>\n",
        "      <td>10</td>\n",
        "      <td>0.038</td>\n",
        "      <td>8</td>\n",
        "      <td>0.012565</td>\n",
        "      <td>440</td>\n",
        "      <td>0 min 10 sec</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>9th</th>\n",
        "      <td>Past</td>\n",
        "      <td>01Aug2020</td>\n",
        "      <td>15Aug2020</td>\n",
        "      <td>81800269</td>\n",
        "      <td>SIR-F</td>\n",
        "      <td>1.05</td>\n",
        "      <td>0.032381</td>\n",
        "      <td>0.000976</td>\n",
        "      <td>0.025471</td>\n",
        "      <td>0.022596</td>\n",
        "      <td>360</td>\n",
        "      <td>256</td>\n",
        "      <td>11</td>\n",
        "      <td>0.032</td>\n",
        "      <td>9</td>\n",
        "      <td>0.019702</td>\n",
        "      <td>214</td>\n",
        "      <td>0 min  5 sec</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th rowspan=\"7\" valign=\"top\">Guinea</th>\n",
        "      <th>0th</th>\n",
        "      <td>Past</td>\n",
        "      <td>01May2020</td>\n",
        "      <td>11May2020</td>\n",
        "      <td>12414318</td>\n",
        "      <td>SIR-F</td>\n",
        "      <td>1.52</td>\n",
        "      <td>0.001606</td>\n",
        "      <td>0.000084</td>\n",
        "      <td>0.012153</td>\n",
        "      <td>0.007884</td>\n",
        "      <td>360</td>\n",
        "      <td>2986</td>\n",
        "      <td>31</td>\n",
        "      <td>0.002</td>\n",
        "      <td>20</td>\n",
        "      <td>0.065334</td>\n",
        "      <td>1854</td>\n",
        "      <td>1 min  0 sec</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>1st</th>\n",
        "      <td>Past</td>\n",
        "      <td>12May2020</td>\n",
        "      <td>19May2020</td>\n",
        "      <td>12414318</td>\n",
        "      <td>SIR-F</td>\n",
        "      <td>1.12</td>\n",
        "      <td>0.000154</td>\n",
        "      <td>0.000176</td>\n",
        "      <td>0.013064</td>\n",
        "      <td>0.011474</td>\n",
        "      <td>360</td>\n",
        "      <td>1419</td>\n",
        "      <td>21</td>\n",
        "      <td>0.000</td>\n",
        "      <td>19</td>\n",
        "      <td>0.077227</td>\n",
        "      <td>1823</td>\n",
        "      <td>1 min  0 sec</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>2nd</th>\n",
        "      <td>Past</td>\n",
        "      <td>20May2020</td>\n",
        "      <td>27May2020</td>\n",
        "      <td>12414318</td>\n",
        "      <td>SIR-F</td>\n",
        "      <td>2.64</td>\n",
        "      <td>0.000149</td>\n",
        "      <td>0.000050</td>\n",
        "      <td>0.013365</td>\n",
        "      <td>0.005011</td>\n",
        "      <td>360</td>\n",
        "      <td>4979</td>\n",
        "      <td>49</td>\n",
        "      <td>0.000</td>\n",
        "      <td>18</td>\n",
        "      <td>0.034241</td>\n",
        "      <td>1899</td>\n",
        "      <td>1 min  0 sec</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>3rd</th>\n",
        "      <td>Past</td>\n",
        "      <td>28May2020</td>\n",
        "      <td>07Jun2020</td>\n",
        "      <td>12414318</td>\n",
        "      <td>SIR-F</td>\n",
        "      <td>0.59</td>\n",
        "      <td>0.000938</td>\n",
        "      <td>0.000031</td>\n",
        "      <td>0.008174</td>\n",
        "      <td>0.013794</td>\n",
        "      <td>360</td>\n",
        "      <td>7996</td>\n",
        "      <td>18</td>\n",
        "      <td>0.001</td>\n",
        "      <td>30</td>\n",
        "      <td>0.076851</td>\n",
        "      <td>1887</td>\n",
        "      <td>1 min  0 sec</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>4th</th>\n",
        "      <td>Past</td>\n",
        "      <td>08Jun2020</td>\n",
        "      <td>17Jun2020</td>\n",
        "      <td>12414318</td>\n",
        "      <td>SIR-F</td>\n",
        "      <td>1.06</td>\n",
        "      <td>0.001257</td>\n",
        "      <td>0.000046</td>\n",
        "      <td>0.010762</td>\n",
        "      <td>0.010107</td>\n",
        "      <td>360</td>\n",
        "      <td>5466</td>\n",
        "      <td>24</td>\n",
        "      <td>0.001</td>\n",
        "      <td>23</td>\n",
        "      <td>0.021960</td>\n",
        "      <td>968</td>\n",
        "      <td>0 min 25 sec</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>5th</th>\n",
        "      <td>Past</td>\n",
        "      <td>18Jun2020</td>\n",
        "      <td>01Jul2020</td>\n",
        "      <td>12414318</td>\n",
        "      <td>SIR-F</td>\n",
        "      <td>0.52</td>\n",
        "      <td>0.017553</td>\n",
        "      <td>0.000006</td>\n",
        "      <td>0.006456</td>\n",
        "      <td>0.012196</td>\n",
        "      <td>360</td>\n",
        "      <td>40975</td>\n",
        "      <td>20</td>\n",
        "      <td>0.018</td>\n",
        "      <td>38</td>\n",
        "      <td>0.057221</td>\n",
        "      <td>1821</td>\n",
        "      <td>1 min  0 sec</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>6th</th>\n",
        "      <td>Past</td>\n",
        "      <td>02Jul2020</td>\n",
        "      <td>13Jul2020</td>\n",
        "      <td>12414318</td>\n",
        "      <td>SIR-F</td>\n",
        "      <td>1.37</td>\n",
        "      <td>0.000436</td>\n",
        "      <td>0.000098</td>\n",
        "      <td>0.016057</td>\n",
        "      <td>0.011631</td>\n",
        "      <td>360</td>\n",
        "      <td>2549</td>\n",
        "      <td>21</td>\n",
        "      <td>0.000</td>\n",
        "      <td>15</td>\n",
        "      <td>0.028293</td>\n",
        "      <td>1828</td>\n",
        "      <td>1 min  0 sec</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th rowspan=\"9\" valign=\"top\">Czech Republic</th>\n",
        "      <th>0th</th>\n",
        "      <td>Past</td>\n",
        "      <td>07Apr2020</td>\n",
        "      <td>16Apr2020</td>\n",
        "      <td>10649800</td>\n",
        "      <td>SIR-F</td>\n",
        "      <td>1.03</td>\n",
        "      <td>0.020586</td>\n",
        "      <td>0.000327</td>\n",
        "      <td>0.007823</td>\n",
        "      <td>0.007117</td>\n",
        "      <td>360</td>\n",
        "      <td>765</td>\n",
        "      <td>35</td>\n",
        "      <td>0.021</td>\n",
        "      <td>31</td>\n",
        "      <td>0.079945</td>\n",
        "      <td>1737</td>\n",
        "      <td>1 min  0 sec</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>1st</th>\n",
        "      <td>Past</td>\n",
        "      <td>17Apr2020</td>\n",
        "      <td>27Apr2020</td>\n",
        "      <td>10649800</td>\n",
        "      <td>SIR-F</td>\n",
        "      <td>0.36</td>\n",
        "      <td>0.047056</td>\n",
        "      <td>0.000059</td>\n",
        "      <td>0.004238</td>\n",
        "      <td>0.011174</td>\n",
        "      <td>360</td>\n",
        "      <td>4228</td>\n",
        "      <td>22</td>\n",
        "      <td>0.047</td>\n",
        "      <td>58</td>\n",
        "      <td>0.074680</td>\n",
        "      <td>229</td>\n",
        "      <td>0 min  5 sec</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>2nd</th>\n",
        "      <td>Past</td>\n",
        "      <td>28Apr2020</td>\n",
        "      <td>14May2020</td>\n",
        "      <td>10649800</td>\n",
        "      <td>SIR-F</td>\n",
        "      <td>0.34</td>\n",
        "      <td>0.015149</td>\n",
        "      <td>0.000224</td>\n",
        "      <td>0.003165</td>\n",
        "      <td>0.008875</td>\n",
        "      <td>360</td>\n",
        "      <td>1113</td>\n",
        "      <td>28</td>\n",
        "      <td>0.015</td>\n",
        "      <td>78</td>\n",
        "      <td>0.023321</td>\n",
        "      <td>915</td>\n",
        "      <td>0 min 25 sec</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>3rd</th>\n",
        "      <td>Past</td>\n",
        "      <td>15May2020</td>\n",
        "      <td>04Jun2020</td>\n",
        "      <td>10649800</td>\n",
        "      <td>SIR-F</td>\n",
        "      <td>0.68</td>\n",
        "      <td>0.004212</td>\n",
        "      <td>0.000173</td>\n",
        "      <td>0.004361</td>\n",
        "      <td>0.006224</td>\n",
        "      <td>360</td>\n",
        "      <td>1444</td>\n",
        "      <td>40</td>\n",
        "      <td>0.004</td>\n",
        "      <td>57</td>\n",
        "      <td>0.022946</td>\n",
        "      <td>1532</td>\n",
        "      <td>1 min  0 sec</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>4th</th>\n",
        "      <td>Past</td>\n",
        "      <td>05Jun2020</td>\n",
        "      <td>24Jun2020</td>\n",
        "      <td>10649800</td>\n",
        "      <td>SIR-F</td>\n",
        "      <td>1.48</td>\n",
        "      <td>0.000781</td>\n",
        "      <td>0.000077</td>\n",
        "      <td>0.006651</td>\n",
        "      <td>0.004418</td>\n",
        "      <td>360</td>\n",
        "      <td>3228</td>\n",
        "      <td>56</td>\n",
        "      <td>0.001</td>\n",
        "      <td>37</td>\n",
        "      <td>0.027477</td>\n",
        "      <td>1497</td>\n",
        "      <td>1 min  0 sec</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>5th</th>\n",
        "      <td>Past</td>\n",
        "      <td>25Jun2020</td>\n",
        "      <td>05Jul2020</td>\n",
        "      <td>10649800</td>\n",
        "      <td>SIR-F</td>\n",
        "      <td>4.25</td>\n",
        "      <td>0.000142</td>\n",
        "      <td>0.000002</td>\n",
        "      <td>0.013229</td>\n",
        "      <td>0.003112</td>\n",
        "      <td>360</td>\n",
        "      <td>137992</td>\n",
        "      <td>80</td>\n",
        "      <td>0.000</td>\n",
        "      <td>18</td>\n",
        "      <td>0.041094</td>\n",
        "      <td>688</td>\n",
        "      <td>0 min 20 sec</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>6th</th>\n",
        "      <td>Past</td>\n",
        "      <td>06Jul2020</td>\n",
        "      <td>17Jul2020</td>\n",
        "      <td>10649800</td>\n",
        "      <td>SIR-F</td>\n",
        "      <td>0.98</td>\n",
        "      <td>0.001263</td>\n",
        "      <td>0.000001</td>\n",
        "      <td>0.007188</td>\n",
        "      <td>0.007345</td>\n",
        "      <td>360</td>\n",
        "      <td>173943</td>\n",
        "      <td>34</td>\n",
        "      <td>0.001</td>\n",
        "      <td>34</td>\n",
        "      <td>0.037990</td>\n",
        "      <td>1808</td>\n",
        "      <td>1 min  0 sec</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>7th</th>\n",
        "      <td>Past</td>\n",
        "      <td>18Jul2020</td>\n",
        "      <td>27Jul2020</td>\n",
        "      <td>10649800</td>\n",
        "      <td>SIR-F</td>\n",
        "      <td>1.73</td>\n",
        "      <td>0.000123</td>\n",
        "      <td>0.000104</td>\n",
        "      <td>0.008279</td>\n",
        "      <td>0.004694</td>\n",
        "      <td>360</td>\n",
        "      <td>2396</td>\n",
        "      <td>53</td>\n",
        "      <td>0.000</td>\n",
        "      <td>30</td>\n",
        "      <td>0.121040</td>\n",
        "      <td>1886</td>\n",
        "      <td>1 min  0 sec</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>8th</th>\n",
        "      <td>Past</td>\n",
        "      <td>28Jul2020</td>\n",
        "      <td>05Aug2020</td>\n",
        "      <td>10649800</td>\n",
        "      <td>SIR-F</td>\n",
        "      <td>2.52</td>\n",
        "      <td>0.000650</td>\n",
        "      <td>0.000072</td>\n",
        "      <td>0.013563</td>\n",
        "      <td>0.005307</td>\n",
        "      <td>360</td>\n",
        "      <td>3486</td>\n",
        "      <td>47</td>\n",
        "      <td>0.001</td>\n",
        "      <td>18</td>\n",
        "      <td>0.018274</td>\n",
        "      <td>1473</td>\n",
        "      <td>0 min 45 sec</td>\n",
        "    </tr>\n",
        "  </tbody>\n",
        "</table>\n",
        "</div>"
       ],
       "output_type": "pyout",
       "prompt_number": 11,
       "text": [
        "                      Type      Start        End  Population    ODE    Rt  \\\n",
        "Country        Phase                                                        \n",
        "Iran           0th    Past  28Mar2020  12Apr2020    81800269  SIR-F  1.35   \n",
        "               1st    Past  13Apr2020  04May2020    81800269  SIR-F  0.70   \n",
        "               2nd    Past  05May2020  20May2020    81800269  SIR-F  1.42   \n",
        "               3rd    Past  21May2020  02Jun2020    81800269  SIR-F  1.17   \n",
        "               4th    Past  03Jun2020  15Jun2020    81800269  SIR-F  1.11   \n",
        "               5th    Past  16Jun2020  27Jun2020    81800269  SIR-F  0.96   \n",
        "               6th    Past  28Jun2020  07Jul2020    81800269  SIR-F  0.92   \n",
        "               7th    Past  08Jul2020  19Jul2020    81800269  SIR-F  0.83   \n",
        "               8th    Past  20Jul2020  31Jul2020    81800269  SIR-F  1.08   \n",
        "               9th    Past  01Aug2020  15Aug2020    81800269  SIR-F  1.05   \n",
        "Guinea         0th    Past  01May2020  11May2020    12414318  SIR-F  1.52   \n",
        "               1st    Past  12May2020  19May2020    12414318  SIR-F  1.12   \n",
        "               2nd    Past  20May2020  27May2020    12414318  SIR-F  2.64   \n",
        "               3rd    Past  28May2020  07Jun2020    12414318  SIR-F  0.59   \n",
        "               4th    Past  08Jun2020  17Jun2020    12414318  SIR-F  1.06   \n",
        "               5th    Past  18Jun2020  01Jul2020    12414318  SIR-F  0.52   \n",
        "               6th    Past  02Jul2020  13Jul2020    12414318  SIR-F  1.37   \n",
        "Czech Republic 0th    Past  07Apr2020  16Apr2020    10649800  SIR-F  1.03   \n",
        "               1st    Past  17Apr2020  27Apr2020    10649800  SIR-F  0.36   \n",
        "               2nd    Past  28Apr2020  14May2020    10649800  SIR-F  0.34   \n",
        "               3rd    Past  15May2020  04Jun2020    10649800  SIR-F  0.68   \n",
        "               4th    Past  05Jun2020  24Jun2020    10649800  SIR-F  1.48   \n",
        "               5th    Past  25Jun2020  05Jul2020    10649800  SIR-F  4.25   \n",
        "               6th    Past  06Jul2020  17Jul2020    10649800  SIR-F  0.98   \n",
        "               7th    Past  18Jul2020  27Jul2020    10649800  SIR-F  1.73   \n",
        "               8th    Past  28Jul2020  05Aug2020    10649800  SIR-F  2.52   \n",
        "\n",
        "                         theta     kappa       rho     sigma  tau  \\\n",
        "Country        Phase                                                \n",
        "Iran           0th    0.052383  0.000156  0.023055  0.016002  360   \n",
        "               1st    0.026814  0.000725  0.018222  0.024623  360   \n",
        "               2nd    0.018373  0.000483  0.026592  0.017854  360   \n",
        "               3rd    0.000945  0.000603  0.024190  0.019984  360   \n",
        "               4th    0.017161  0.000338  0.020119  0.017535  360   \n",
        "               5th    0.000320  0.000970  0.020738  0.020516  360   \n",
        "               6th    0.000420  0.001419  0.023269  0.023803  360   \n",
        "               7th    0.069844  0.000262  0.024578  0.027133  360   \n",
        "               8th    0.038463  0.001459  0.028930  0.024236  360   \n",
        "               9th    0.032381  0.000976  0.025471  0.022596  360   \n",
        "Guinea         0th    0.001606  0.000084  0.012153  0.007884  360   \n",
        "               1st    0.000154  0.000176  0.013064  0.011474  360   \n",
        "               2nd    0.000149  0.000050  0.013365  0.005011  360   \n",
        "               3rd    0.000938  0.000031  0.008174  0.013794  360   \n",
        "               4th    0.001257  0.000046  0.010762  0.010107  360   \n",
        "               5th    0.017553  0.000006  0.006456  0.012196  360   \n",
        "               6th    0.000436  0.000098  0.016057  0.011631  360   \n",
        "Czech Republic 0th    0.020586  0.000327  0.007823  0.007117  360   \n",
        "               1st    0.047056  0.000059  0.004238  0.011174  360   \n",
        "               2nd    0.015149  0.000224  0.003165  0.008875  360   \n",
        "               3rd    0.004212  0.000173  0.004361  0.006224  360   \n",
        "               4th    0.000781  0.000077  0.006651  0.004418  360   \n",
        "               5th    0.000142  0.000002  0.013229  0.003112  360   \n",
        "               6th    0.001263  0.000001  0.007188  0.007345  360   \n",
        "               7th    0.000123  0.000104  0.008279  0.004694  360   \n",
        "               8th    0.000650  0.000072  0.013563  0.005307  360   \n",
        "\n",
        "                      1/alpha2 [day]  1/gamma [day]  alpha1 [-]  1/beta [day]  \\\n",
        "Country        Phase                                                            \n",
        "Iran           0th              1599             15       0.052            10   \n",
        "               1st               344             10       0.027            13   \n",
        "               2nd               517             14       0.018             9   \n",
        "               3rd               414             12       0.001            10   \n",
        "               4th               740             14       0.017            12   \n",
        "               5th               257             12       0.000            12   \n",
        "               6th               176             10       0.000            10   \n",
        "               7th               953              9       0.070            10   \n",
        "               8th               171             10       0.038             8   \n",
        "               9th               256             11       0.032             9   \n",
        "Guinea         0th              2986             31       0.002            20   \n",
        "               1st              1419             21       0.000            19   \n",
        "               2nd              4979             49       0.000            18   \n",
        "               3rd              7996             18       0.001            30   \n",
        "               4th              5466             24       0.001            23   \n",
        "               5th             40975             20       0.018            38   \n",
        "               6th              2549             21       0.000            15   \n",
        "Czech Republic 0th               765             35       0.021            31   \n",
        "               1st              4228             22       0.047            58   \n",
        "               2nd              1113             28       0.015            78   \n",
        "               3rd              1444             40       0.004            57   \n",
        "               4th              3228             56       0.001            37   \n",
        "               5th            137992             80       0.000            18   \n",
        "               6th            173943             34       0.001            34   \n",
        "               7th              2396             53       0.000            30   \n",
        "               8th              3486             47       0.001            18   \n",
        "\n",
        "                         RMSLE  Trials       Runtime  \n",
        "Country        Phase                                  \n",
        "Iran           0th    0.195790    1785  1 min  0 sec  \n",
        "               1st    0.030652     579  0 min 15 sec  \n",
        "               2nd    0.019420     396  0 min 10 sec  \n",
        "               3rd    0.013543    1838  1 min  0 sec  \n",
        "               4th    0.019490     630  0 min 15 sec  \n",
        "               5th    0.022436    1940  1 min  0 sec  \n",
        "               6th    0.006227     225  0 min  5 sec  \n",
        "               7th    0.010948    1082  0 min 40 sec  \n",
        "               8th    0.012565     440  0 min 10 sec  \n",
        "               9th    0.019702     214  0 min  5 sec  \n",
        "Guinea         0th    0.065334    1854  1 min  0 sec  \n",
        "               1st    0.077227    1823  1 min  0 sec  \n",
        "               2nd    0.034241    1899  1 min  0 sec  \n",
        "               3rd    0.076851    1887  1 min  0 sec  \n",
        "               4th    0.021960     968  0 min 25 sec  \n",
        "               5th    0.057221    1821  1 min  0 sec  \n",
        "               6th    0.028293    1828  1 min  0 sec  \n",
        "Czech Republic 0th    0.079945    1737  1 min  0 sec  \n",
        "               1st    0.074680     229  0 min  5 sec  \n",
        "               2nd    0.023321     915  0 min 25 sec  \n",
        "               3rd    0.022946    1532  1 min  0 sec  \n",
        "               4th    0.027477    1497  1 min  0 sec  \n",
        "               5th    0.041094     688  0 min 20 sec  \n",
        "               6th    0.037990    1808  1 min  0 sec  \n",
        "               7th    0.121040    1886  1 min  0 sec  \n",
        "               8th    0.018274    1473  0 min 45 sec  "
       ]
      }
     ],
     "prompt_number": 11
    },
    {
     "cell_type": "markdown",
     "metadata": {},
     "source": [
      "## Compare the history of parameters\n",
      "Here, compare the history of parameter values if countries."
     ]
    },
    {
     "cell_type": "heading",
     "level": 3,
     "metadata": {},
     "source": [
      "$Rt$: Reprodcution number $\\mathrm{[-]}$"
     ]
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "analyser.param_history(\"Rt\", roll_window=None).tail()"
     ],
     "language": "python",
     "metadata": {},
     "outputs": [
      {
       "output_type": "display_data",
       "png": "\n",
       "text": [
        "<Figure size 648x432 with 1 Axes>"
       ]
      },
      {
       "html": [
        "<div>\n",
        "<style scoped>\n",
        "    .dataframe tbody tr th:only-of-type {\n",
        "        vertical-align: middle;\n",
        "    }\n",
        "\n",
        "    .dataframe tbody tr th {\n",
        "        vertical-align: top;\n",
        "    }\n",
        "\n",
        "    .dataframe thead th {\n",
        "        text-align: right;\n",
        "    }\n",
        "</style>\n",
        "<table border=\"1\" class=\"dataframe\">\n",
        "  <thead>\n",
        "    <tr style=\"text-align: right;\">\n",
        "      <th>Country</th>\n",
        "      <th>Bahrain</th>\n",
        "      <th>Canada</th>\n",
        "      <th>Czech Republic</th>\n",
        "      <th>Guinea</th>\n",
        "      <th>Iran</th>\n",
        "      <th>Italy</th>\n",
        "      <th>Kuwait</th>\n",
        "      <th>Moldova</th>\n",
        "      <th>Poland</th>\n",
        "      <th>Portugal</th>\n",
        "      <th>Senegal</th>\n",
        "      <th>Ukraine</th>\n",
        "      <th>United Arab Emirates</th>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>Date</th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "    </tr>\n",
        "  </thead>\n",
        "  <tbody>\n",
        "    <tr>\n",
        "      <th>2020-08-11</th>\n",
        "      <td>1.29</td>\n",
        "      <td>0.93</td>\n",
        "      <td>NaN</td>\n",
        "      <td>NaN</td>\n",
        "      <td>1.05</td>\n",
        "      <td>0.94</td>\n",
        "      <td>0.98</td>\n",
        "      <td>1.51</td>\n",
        "      <td>2.15</td>\n",
        "      <td>0.85</td>\n",
        "      <td>1.87</td>\n",
        "      <td>2.23</td>\n",
        "      <td>0.83</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>2020-08-12</th>\n",
        "      <td>1.29</td>\n",
        "      <td>0.93</td>\n",
        "      <td>NaN</td>\n",
        "      <td>NaN</td>\n",
        "      <td>1.05</td>\n",
        "      <td>0.94</td>\n",
        "      <td>0.98</td>\n",
        "      <td>1.51</td>\n",
        "      <td>2.15</td>\n",
        "      <td>0.85</td>\n",
        "      <td>1.87</td>\n",
        "      <td>2.23</td>\n",
        "      <td>0.83</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>2020-08-13</th>\n",
        "      <td>1.29</td>\n",
        "      <td>0.93</td>\n",
        "      <td>NaN</td>\n",
        "      <td>NaN</td>\n",
        "      <td>1.05</td>\n",
        "      <td>0.94</td>\n",
        "      <td>0.98</td>\n",
        "      <td>1.51</td>\n",
        "      <td>2.15</td>\n",
        "      <td>0.85</td>\n",
        "      <td>1.87</td>\n",
        "      <td>2.23</td>\n",
        "      <td>0.83</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>2020-08-14</th>\n",
        "      <td>1.29</td>\n",
        "      <td>0.93</td>\n",
        "      <td>NaN</td>\n",
        "      <td>NaN</td>\n",
        "      <td>1.05</td>\n",
        "      <td>0.94</td>\n",
        "      <td>0.98</td>\n",
        "      <td>1.51</td>\n",
        "      <td>2.15</td>\n",
        "      <td>0.85</td>\n",
        "      <td>1.87</td>\n",
        "      <td>2.23</td>\n",
        "      <td>0.83</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>2020-08-15</th>\n",
        "      <td>1.29</td>\n",
        "      <td>0.93</td>\n",
        "      <td>NaN</td>\n",
        "      <td>NaN</td>\n",
        "      <td>1.05</td>\n",
        "      <td>0.94</td>\n",
        "      <td>0.98</td>\n",
        "      <td>1.51</td>\n",
        "      <td>2.15</td>\n",
        "      <td>0.85</td>\n",
        "      <td>1.87</td>\n",
        "      <td>2.23</td>\n",
        "      <td>0.83</td>\n",
        "    </tr>\n",
        "  </tbody>\n",
        "</table>\n",
        "</div>"
       ],
       "output_type": "pyout",
       "prompt_number": 12,
       "text": [
        "Country     Bahrain  Canada  Czech Republic  Guinea  Iran  Italy  Kuwait  \\\n",
        "Date                                                                       \n",
        "2020-08-11     1.29    0.93             NaN     NaN  1.05   0.94    0.98   \n",
        "2020-08-12     1.29    0.93             NaN     NaN  1.05   0.94    0.98   \n",
        "2020-08-13     1.29    0.93             NaN     NaN  1.05   0.94    0.98   \n",
        "2020-08-14     1.29    0.93             NaN     NaN  1.05   0.94    0.98   \n",
        "2020-08-15     1.29    0.93             NaN     NaN  1.05   0.94    0.98   \n",
        "\n",
        "Country     Moldova  Poland  Portugal  Senegal  Ukraine  United Arab Emirates  \n",
        "Date                                                                           \n",
        "2020-08-11     1.51    2.15      0.85     1.87     2.23                  0.83  \n",
        "2020-08-12     1.51    2.15      0.85     1.87     2.23                  0.83  \n",
        "2020-08-13     1.51    2.15      0.85     1.87     2.23                  0.83  \n",
        "2020-08-14     1.51    2.15      0.85     1.87     2.23                  0.83  \n",
        "2020-08-15     1.51    2.15      0.85     1.87     2.23                  0.83  "
       ]
      }
     ],
     "prompt_number": 12
    },
    {
     "cell_type": "heading",
     "level": 3,
     "metadata": {},
     "source": [
      "$\\rho$: Effective contact rate $\\mathrm{[-]}$"
     ]
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "analyser.param_history(\"rho\", roll_window=None).tail()"
     ],
     "language": "python",
     "metadata": {},
     "outputs": [
      {
       "output_type": "display_data",
       "png": "\n",
       "text": [
        "<Figure size 648x432 with 1 Axes>"
       ]
      },
      {
       "html": [
        "<div>\n",
        "<style scoped>\n",
        "    .dataframe tbody tr th:only-of-type {\n",
        "        vertical-align: middle;\n",
        "    }\n",
        "\n",
        "    .dataframe tbody tr th {\n",
        "        vertical-align: top;\n",
        "    }\n",
        "\n",
        "    .dataframe thead th {\n",
        "        text-align: right;\n",
        "    }\n",
        "</style>\n",
        "<table border=\"1\" class=\"dataframe\">\n",
        "  <thead>\n",
        "    <tr style=\"text-align: right;\">\n",
        "      <th>Country</th>\n",
        "      <th>Bahrain</th>\n",
        "      <th>Canada</th>\n",
        "      <th>Czech Republic</th>\n",
        "      <th>Guinea</th>\n",
        "      <th>Iran</th>\n",
        "      <th>Italy</th>\n",
        "      <th>Kuwait</th>\n",
        "      <th>Moldova</th>\n",
        "      <th>Poland</th>\n",
        "      <th>Portugal</th>\n",
        "      <th>Senegal</th>\n",
        "      <th>Ukraine</th>\n",
        "      <th>United Arab Emirates</th>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>Date</th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "    </tr>\n",
        "  </thead>\n",
        "  <tbody>\n",
        "    <tr>\n",
        "      <th>2020-08-11</th>\n",
        "      <td>0.032949</td>\n",
        "      <td>0.016689</td>\n",
        "      <td>NaN</td>\n",
        "      <td>NaN</td>\n",
        "      <td>0.025471</td>\n",
        "      <td>0.00482</td>\n",
        "      <td>0.019891</td>\n",
        "      <td>0.010736</td>\n",
        "      <td>0.012865</td>\n",
        "      <td>0.003593</td>\n",
        "      <td>0.007232</td>\n",
        "      <td>0.008631</td>\n",
        "      <td>0.010463</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>2020-08-12</th>\n",
        "      <td>0.032949</td>\n",
        "      <td>0.016689</td>\n",
        "      <td>NaN</td>\n",
        "      <td>NaN</td>\n",
        "      <td>0.025471</td>\n",
        "      <td>0.00482</td>\n",
        "      <td>0.019891</td>\n",
        "      <td>0.010736</td>\n",
        "      <td>0.012865</td>\n",
        "      <td>0.003593</td>\n",
        "      <td>0.007232</td>\n",
        "      <td>0.008631</td>\n",
        "      <td>0.010463</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>2020-08-13</th>\n",
        "      <td>0.032949</td>\n",
        "      <td>0.016689</td>\n",
        "      <td>NaN</td>\n",
        "      <td>NaN</td>\n",
        "      <td>0.025471</td>\n",
        "      <td>0.00482</td>\n",
        "      <td>0.019891</td>\n",
        "      <td>0.010736</td>\n",
        "      <td>0.012865</td>\n",
        "      <td>0.003593</td>\n",
        "      <td>0.007232</td>\n",
        "      <td>0.008631</td>\n",
        "      <td>0.010463</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>2020-08-14</th>\n",
        "      <td>0.032949</td>\n",
        "      <td>0.016689</td>\n",
        "      <td>NaN</td>\n",
        "      <td>NaN</td>\n",
        "      <td>0.025471</td>\n",
        "      <td>0.00482</td>\n",
        "      <td>0.019891</td>\n",
        "      <td>0.010736</td>\n",
        "      <td>0.012865</td>\n",
        "      <td>0.003593</td>\n",
        "      <td>0.007232</td>\n",
        "      <td>0.008631</td>\n",
        "      <td>0.010463</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>2020-08-15</th>\n",
        "      <td>0.032949</td>\n",
        "      <td>0.016689</td>\n",
        "      <td>NaN</td>\n",
        "      <td>NaN</td>\n",
        "      <td>0.025471</td>\n",
        "      <td>0.00482</td>\n",
        "      <td>0.019891</td>\n",
        "      <td>0.010736</td>\n",
        "      <td>0.012865</td>\n",
        "      <td>0.003593</td>\n",
        "      <td>0.007232</td>\n",
        "      <td>0.008631</td>\n",
        "      <td>0.010463</td>\n",
        "    </tr>\n",
        "  </tbody>\n",
        "</table>\n",
        "</div>"
       ],
       "output_type": "pyout",
       "prompt_number": 13,
       "text": [
        "Country      Bahrain    Canada  Czech Republic  Guinea      Iran    Italy  \\\n",
        "Date                                                                        \n",
        "2020-08-11  0.032949  0.016689             NaN     NaN  0.025471  0.00482   \n",
        "2020-08-12  0.032949  0.016689             NaN     NaN  0.025471  0.00482   \n",
        "2020-08-13  0.032949  0.016689             NaN     NaN  0.025471  0.00482   \n",
        "2020-08-14  0.032949  0.016689             NaN     NaN  0.025471  0.00482   \n",
        "2020-08-15  0.032949  0.016689             NaN     NaN  0.025471  0.00482   \n",
        "\n",
        "Country       Kuwait   Moldova    Poland  Portugal   Senegal   Ukraine  \\\n",
        "Date                                                                     \n",
        "2020-08-11  0.019891  0.010736  0.012865  0.003593  0.007232  0.008631   \n",
        "2020-08-12  0.019891  0.010736  0.012865  0.003593  0.007232  0.008631   \n",
        "2020-08-13  0.019891  0.010736  0.012865  0.003593  0.007232  0.008631   \n",
        "2020-08-14  0.019891  0.010736  0.012865  0.003593  0.007232  0.008631   \n",
        "2020-08-15  0.019891  0.010736  0.012865  0.003593  0.007232  0.008631   \n",
        "\n",
        "Country     United Arab Emirates  \n",
        "Date                              \n",
        "2020-08-11              0.010463  \n",
        "2020-08-12              0.010463  \n",
        "2020-08-13              0.010463  \n",
        "2020-08-14              0.010463  \n",
        "2020-08-15              0.010463  "
       ]
      }
     ],
     "prompt_number": 13
    },
    {
     "cell_type": "heading",
     "level": 3,
     "metadata": {},
     "source": [
      "$\\sigma$: Recovery rate $\\mathrm{[-]}$"
     ]
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "analyser.param_history(\"sigma\", roll_window=None).tail()"
     ],
     "language": "python",
     "metadata": {},
     "outputs": [
      {
       "output_type": "display_data",
       "png": "\n",
       "text": [
        "<Figure size 648x432 with 1 Axes>"
       ]
      },
      {
       "html": [
        "<div>\n",
        "<style scoped>\n",
        "    .dataframe tbody tr th:only-of-type {\n",
        "        vertical-align: middle;\n",
        "    }\n",
        "\n",
        "    .dataframe tbody tr th {\n",
        "        vertical-align: top;\n",
        "    }\n",
        "\n",
        "    .dataframe thead th {\n",
        "        text-align: right;\n",
        "    }\n",
        "</style>\n",
        "<table border=\"1\" class=\"dataframe\">\n",
        "  <thead>\n",
        "    <tr style=\"text-align: right;\">\n",
        "      <th>Country</th>\n",
        "      <th>Bahrain</th>\n",
        "      <th>Canada</th>\n",
        "      <th>Czech Republic</th>\n",
        "      <th>Guinea</th>\n",
        "      <th>Iran</th>\n",
        "      <th>Italy</th>\n",
        "      <th>Kuwait</th>\n",
        "      <th>Moldova</th>\n",
        "      <th>Poland</th>\n",
        "      <th>Portugal</th>\n",
        "      <th>Senegal</th>\n",
        "      <th>Ukraine</th>\n",
        "      <th>United Arab Emirates</th>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>Date</th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "    </tr>\n",
        "  </thead>\n",
        "  <tbody>\n",
        "    <tr>\n",
        "      <th>2020-08-11</th>\n",
        "      <td>0.025435</td>\n",
        "      <td>0.017663</td>\n",
        "      <td>NaN</td>\n",
        "      <td>NaN</td>\n",
        "      <td>0.022596</td>\n",
        "      <td>0.004941</td>\n",
        "      <td>0.020138</td>\n",
        "      <td>0.006953</td>\n",
        "      <td>0.005752</td>\n",
        "      <td>0.004209</td>\n",
        "      <td>0.003684</td>\n",
        "      <td>0.003711</td>\n",
        "      <td>0.012507</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>2020-08-12</th>\n",
        "      <td>0.025435</td>\n",
        "      <td>0.017663</td>\n",
        "      <td>NaN</td>\n",
        "      <td>NaN</td>\n",
        "      <td>0.022596</td>\n",
        "      <td>0.004941</td>\n",
        "      <td>0.020138</td>\n",
        "      <td>0.006953</td>\n",
        "      <td>0.005752</td>\n",
        "      <td>0.004209</td>\n",
        "      <td>0.003684</td>\n",
        "      <td>0.003711</td>\n",
        "      <td>0.012507</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>2020-08-13</th>\n",
        "      <td>0.025435</td>\n",
        "      <td>0.017663</td>\n",
        "      <td>NaN</td>\n",
        "      <td>NaN</td>\n",
        "      <td>0.022596</td>\n",
        "      <td>0.004941</td>\n",
        "      <td>0.020138</td>\n",
        "      <td>0.006953</td>\n",
        "      <td>0.005752</td>\n",
        "      <td>0.004209</td>\n",
        "      <td>0.003684</td>\n",
        "      <td>0.003711</td>\n",
        "      <td>0.012507</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>2020-08-14</th>\n",
        "      <td>0.025435</td>\n",
        "      <td>0.017663</td>\n",
        "      <td>NaN</td>\n",
        "      <td>NaN</td>\n",
        "      <td>0.022596</td>\n",
        "      <td>0.004941</td>\n",
        "      <td>0.020138</td>\n",
        "      <td>0.006953</td>\n",
        "      <td>0.005752</td>\n",
        "      <td>0.004209</td>\n",
        "      <td>0.003684</td>\n",
        "      <td>0.003711</td>\n",
        "      <td>0.012507</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>2020-08-15</th>\n",
        "      <td>0.025435</td>\n",
        "      <td>0.017663</td>\n",
        "      <td>NaN</td>\n",
        "      <td>NaN</td>\n",
        "      <td>0.022596</td>\n",
        "      <td>0.004941</td>\n",
        "      <td>0.020138</td>\n",
        "      <td>0.006953</td>\n",
        "      <td>0.005752</td>\n",
        "      <td>0.004209</td>\n",
        "      <td>0.003684</td>\n",
        "      <td>0.003711</td>\n",
        "      <td>0.012507</td>\n",
        "    </tr>\n",
        "  </tbody>\n",
        "</table>\n",
        "</div>"
       ],
       "output_type": "pyout",
       "prompt_number": 14,
       "text": [
        "Country      Bahrain    Canada  Czech Republic  Guinea      Iran     Italy  \\\n",
        "Date                                                                         \n",
        "2020-08-11  0.025435  0.017663             NaN     NaN  0.022596  0.004941   \n",
        "2020-08-12  0.025435  0.017663             NaN     NaN  0.022596  0.004941   \n",
        "2020-08-13  0.025435  0.017663             NaN     NaN  0.022596  0.004941   \n",
        "2020-08-14  0.025435  0.017663             NaN     NaN  0.022596  0.004941   \n",
        "2020-08-15  0.025435  0.017663             NaN     NaN  0.022596  0.004941   \n",
        "\n",
        "Country       Kuwait   Moldova    Poland  Portugal   Senegal   Ukraine  \\\n",
        "Date                                                                     \n",
        "2020-08-11  0.020138  0.006953  0.005752  0.004209  0.003684  0.003711   \n",
        "2020-08-12  0.020138  0.006953  0.005752  0.004209  0.003684  0.003711   \n",
        "2020-08-13  0.020138  0.006953  0.005752  0.004209  0.003684  0.003711   \n",
        "2020-08-14  0.020138  0.006953  0.005752  0.004209  0.003684  0.003711   \n",
        "2020-08-15  0.020138  0.006953  0.005752  0.004209  0.003684  0.003711   \n",
        "\n",
        "Country     United Arab Emirates  \n",
        "Date                              \n",
        "2020-08-11              0.012507  \n",
        "2020-08-12              0.012507  \n",
        "2020-08-13              0.012507  \n",
        "2020-08-14              0.012507  \n",
        "2020-08-15              0.012507  "
       ]
      }
     ],
     "prompt_number": 14
    },
    {
     "cell_type": "heading",
     "level": 3,
     "metadata": {},
     "source": [
      "$\\kappa$: Mortality rate of infected cases $\\mathrm{[-]}$"
     ]
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "analyser.param_history(\"kappa\", roll_window=None).tail()"
     ],
     "language": "python",
     "metadata": {},
     "outputs": [
      {
       "output_type": "display_data",
       "png": "\n",
       "text": [
        "<Figure size 648x432 with 1 Axes>"
       ]
      },
      {
       "html": [
        "<div>\n",
        "<style scoped>\n",
        "    .dataframe tbody tr th:only-of-type {\n",
        "        vertical-align: middle;\n",
        "    }\n",
        "\n",
        "    .dataframe tbody tr th {\n",
        "        vertical-align: top;\n",
        "    }\n",
        "\n",
        "    .dataframe thead th {\n",
        "        text-align: right;\n",
        "    }\n",
        "</style>\n",
        "<table border=\"1\" class=\"dataframe\">\n",
        "  <thead>\n",
        "    <tr style=\"text-align: right;\">\n",
        "      <th>Country</th>\n",
        "      <th>Bahrain</th>\n",
        "      <th>Canada</th>\n",
        "      <th>Czech Republic</th>\n",
        "      <th>Guinea</th>\n",
        "      <th>Iran</th>\n",
        "      <th>Italy</th>\n",
        "      <th>Kuwait</th>\n",
        "      <th>Moldova</th>\n",
        "      <th>Poland</th>\n",
        "      <th>Portugal</th>\n",
        "      <th>Senegal</th>\n",
        "      <th>Ukraine</th>\n",
        "      <th>United Arab Emirates</th>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>Date</th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "    </tr>\n",
        "  </thead>\n",
        "  <tbody>\n",
        "    <tr>\n",
        "      <th>2020-08-11</th>\n",
        "      <td>0.000108</td>\n",
        "      <td>0.000232</td>\n",
        "      <td>NaN</td>\n",
        "      <td>NaN</td>\n",
        "      <td>0.000976</td>\n",
        "      <td>0.000103</td>\n",
        "      <td>0.000077</td>\n",
        "      <td>0.000156</td>\n",
        "      <td>0.000244</td>\n",
        "      <td>0.000025</td>\n",
        "      <td>0.000165</td>\n",
        "      <td>0.000156</td>\n",
        "      <td>0.000021</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>2020-08-12</th>\n",
        "      <td>0.000108</td>\n",
        "      <td>0.000232</td>\n",
        "      <td>NaN</td>\n",
        "      <td>NaN</td>\n",
        "      <td>0.000976</td>\n",
        "      <td>0.000103</td>\n",
        "      <td>0.000077</td>\n",
        "      <td>0.000156</td>\n",
        "      <td>0.000244</td>\n",
        "      <td>0.000025</td>\n",
        "      <td>0.000165</td>\n",
        "      <td>0.000156</td>\n",
        "      <td>0.000021</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>2020-08-13</th>\n",
        "      <td>0.000108</td>\n",
        "      <td>0.000232</td>\n",
        "      <td>NaN</td>\n",
        "      <td>NaN</td>\n",
        "      <td>0.000976</td>\n",
        "      <td>0.000103</td>\n",
        "      <td>0.000077</td>\n",
        "      <td>0.000156</td>\n",
        "      <td>0.000244</td>\n",
        "      <td>0.000025</td>\n",
        "      <td>0.000165</td>\n",
        "      <td>0.000156</td>\n",
        "      <td>0.000021</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>2020-08-14</th>\n",
        "      <td>0.000108</td>\n",
        "      <td>0.000232</td>\n",
        "      <td>NaN</td>\n",
        "      <td>NaN</td>\n",
        "      <td>0.000976</td>\n",
        "      <td>0.000103</td>\n",
        "      <td>0.000077</td>\n",
        "      <td>0.000156</td>\n",
        "      <td>0.000244</td>\n",
        "      <td>0.000025</td>\n",
        "      <td>0.000165</td>\n",
        "      <td>0.000156</td>\n",
        "      <td>0.000021</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>2020-08-15</th>\n",
        "      <td>0.000108</td>\n",
        "      <td>0.000232</td>\n",
        "      <td>NaN</td>\n",
        "      <td>NaN</td>\n",
        "      <td>0.000976</td>\n",
        "      <td>0.000103</td>\n",
        "      <td>0.000077</td>\n",
        "      <td>0.000156</td>\n",
        "      <td>0.000244</td>\n",
        "      <td>0.000025</td>\n",
        "      <td>0.000165</td>\n",
        "      <td>0.000156</td>\n",
        "      <td>0.000021</td>\n",
        "    </tr>\n",
        "  </tbody>\n",
        "</table>\n",
        "</div>"
       ],
       "output_type": "pyout",
       "prompt_number": 15,
       "text": [
        "Country      Bahrain    Canada  Czech Republic  Guinea      Iran     Italy  \\\n",
        "Date                                                                         \n",
        "2020-08-11  0.000108  0.000232             NaN     NaN  0.000976  0.000103   \n",
        "2020-08-12  0.000108  0.000232             NaN     NaN  0.000976  0.000103   \n",
        "2020-08-13  0.000108  0.000232             NaN     NaN  0.000976  0.000103   \n",
        "2020-08-14  0.000108  0.000232             NaN     NaN  0.000976  0.000103   \n",
        "2020-08-15  0.000108  0.000232             NaN     NaN  0.000976  0.000103   \n",
        "\n",
        "Country       Kuwait   Moldova    Poland  Portugal   Senegal   Ukraine  \\\n",
        "Date                                                                     \n",
        "2020-08-11  0.000077  0.000156  0.000244  0.000025  0.000165  0.000156   \n",
        "2020-08-12  0.000077  0.000156  0.000244  0.000025  0.000165  0.000156   \n",
        "2020-08-13  0.000077  0.000156  0.000244  0.000025  0.000165  0.000156   \n",
        "2020-08-14  0.000077  0.000156  0.000244  0.000025  0.000165  0.000156   \n",
        "2020-08-15  0.000077  0.000156  0.000244  0.000025  0.000165  0.000156   \n",
        "\n",
        "Country     United Arab Emirates  \n",
        "Date                              \n",
        "2020-08-11              0.000021  \n",
        "2020-08-12              0.000021  \n",
        "2020-08-13              0.000021  \n",
        "2020-08-14              0.000021  \n",
        "2020-08-15              0.000021  "
       ]
      }
     ],
     "prompt_number": 15
    },
    {
     "cell_type": "heading",
     "level": 3,
     "metadata": {},
     "source": [
      "$\\theta$: Mortality rate of S$^\\ast$ cases $\\mathrm{[-]}$"
     ]
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "analyser.param_history(\"theta\", roll_window=None).tail()"
     ],
     "language": "python",
     "metadata": {},
     "outputs": [
      {
       "output_type": "display_data",
       "png": "\n",
       "text": [
        "<Figure size 648x432 with 1 Axes>"
       ]
      },
      {
       "html": [
        "<div>\n",
        "<style scoped>\n",
        "    .dataframe tbody tr th:only-of-type {\n",
        "        vertical-align: middle;\n",
        "    }\n",
        "\n",
        "    .dataframe tbody tr th {\n",
        "        vertical-align: top;\n",
        "    }\n",
        "\n",
        "    .dataframe thead th {\n",
        "        text-align: right;\n",
        "    }\n",
        "</style>\n",
        "<table border=\"1\" class=\"dataframe\">\n",
        "  <thead>\n",
        "    <tr style=\"text-align: right;\">\n",
        "      <th>Country</th>\n",
        "      <th>Bahrain</th>\n",
        "      <th>Canada</th>\n",
        "      <th>Czech Republic</th>\n",
        "      <th>Guinea</th>\n",
        "      <th>Iran</th>\n",
        "      <th>Italy</th>\n",
        "      <th>Kuwait</th>\n",
        "      <th>Moldova</th>\n",
        "      <th>Poland</th>\n",
        "      <th>Portugal</th>\n",
        "      <th>Senegal</th>\n",
        "      <th>Ukraine</th>\n",
        "      <th>United Arab Emirates</th>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>Date</th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "    </tr>\n",
        "  </thead>\n",
        "  <tbody>\n",
        "    <tr>\n",
        "      <th>2020-08-11</th>\n",
        "      <td>0.000905</td>\n",
        "      <td>0.000197</td>\n",
        "      <td>NaN</td>\n",
        "      <td>NaN</td>\n",
        "      <td>0.032381</td>\n",
        "      <td>0.016</td>\n",
        "      <td>0.000771</td>\n",
        "      <td>0.000901</td>\n",
        "      <td>0.000139</td>\n",
        "      <td>0.001261</td>\n",
        "      <td>0.003932</td>\n",
        "      <td>0.000901</td>\n",
        "      <td>0.000679</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>2020-08-12</th>\n",
        "      <td>0.000905</td>\n",
        "      <td>0.000197</td>\n",
        "      <td>NaN</td>\n",
        "      <td>NaN</td>\n",
        "      <td>0.032381</td>\n",
        "      <td>0.016</td>\n",
        "      <td>0.000771</td>\n",
        "      <td>0.000901</td>\n",
        "      <td>0.000139</td>\n",
        "      <td>0.001261</td>\n",
        "      <td>0.003932</td>\n",
        "      <td>0.000901</td>\n",
        "      <td>0.000679</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>2020-08-13</th>\n",
        "      <td>0.000905</td>\n",
        "      <td>0.000197</td>\n",
        "      <td>NaN</td>\n",
        "      <td>NaN</td>\n",
        "      <td>0.032381</td>\n",
        "      <td>0.016</td>\n",
        "      <td>0.000771</td>\n",
        "      <td>0.000901</td>\n",
        "      <td>0.000139</td>\n",
        "      <td>0.001261</td>\n",
        "      <td>0.003932</td>\n",
        "      <td>0.000901</td>\n",
        "      <td>0.000679</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>2020-08-14</th>\n",
        "      <td>0.000905</td>\n",
        "      <td>0.000197</td>\n",
        "      <td>NaN</td>\n",
        "      <td>NaN</td>\n",
        "      <td>0.032381</td>\n",
        "      <td>0.016</td>\n",
        "      <td>0.000771</td>\n",
        "      <td>0.000901</td>\n",
        "      <td>0.000139</td>\n",
        "      <td>0.001261</td>\n",
        "      <td>0.003932</td>\n",
        "      <td>0.000901</td>\n",
        "      <td>0.000679</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>2020-08-15</th>\n",
        "      <td>0.000905</td>\n",
        "      <td>0.000197</td>\n",
        "      <td>NaN</td>\n",
        "      <td>NaN</td>\n",
        "      <td>0.032381</td>\n",
        "      <td>0.016</td>\n",
        "      <td>0.000771</td>\n",
        "      <td>0.000901</td>\n",
        "      <td>0.000139</td>\n",
        "      <td>0.001261</td>\n",
        "      <td>0.003932</td>\n",
        "      <td>0.000901</td>\n",
        "      <td>0.000679</td>\n",
        "    </tr>\n",
        "  </tbody>\n",
        "</table>\n",
        "</div>"
       ],
       "output_type": "pyout",
       "prompt_number": 16,
       "text": [
        "Country      Bahrain    Canada  Czech Republic  Guinea      Iran  Italy  \\\n",
        "Date                                                                      \n",
        "2020-08-11  0.000905  0.000197             NaN     NaN  0.032381  0.016   \n",
        "2020-08-12  0.000905  0.000197             NaN     NaN  0.032381  0.016   \n",
        "2020-08-13  0.000905  0.000197             NaN     NaN  0.032381  0.016   \n",
        "2020-08-14  0.000905  0.000197             NaN     NaN  0.032381  0.016   \n",
        "2020-08-15  0.000905  0.000197             NaN     NaN  0.032381  0.016   \n",
        "\n",
        "Country       Kuwait   Moldova    Poland  Portugal   Senegal   Ukraine  \\\n",
        "Date                                                                     \n",
        "2020-08-11  0.000771  0.000901  0.000139  0.001261  0.003932  0.000901   \n",
        "2020-08-12  0.000771  0.000901  0.000139  0.001261  0.003932  0.000901   \n",
        "2020-08-13  0.000771  0.000901  0.000139  0.001261  0.003932  0.000901   \n",
        "2020-08-14  0.000771  0.000901  0.000139  0.001261  0.003932  0.000901   \n",
        "2020-08-15  0.000771  0.000901  0.000139  0.001261  0.003932  0.000901   \n",
        "\n",
        "Country     United Arab Emirates  \n",
        "Date                              \n",
        "2020-08-11              0.000679  \n",
        "2020-08-12              0.000679  \n",
        "2020-08-13              0.000679  \n",
        "2020-08-14              0.000679  \n",
        "2020-08-15              0.000679  "
       ]
      }
     ],
     "prompt_number": 16
    }
   ],
   "metadata": {}
  }
 ]
}
