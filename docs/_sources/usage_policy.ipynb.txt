{
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3.8.2 64-bit ('.venv': venv)",
   "name": "python_defaultSpec_1597669925034"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.8.2-final"
  },
  "name": ""
 },
 "nbformat": 3,
 "nbformat_minor": 0,
 "worksheets": [
  {
   "cells": [
    {
     "cell_type": "markdown",
     "metadata": {},
     "source": [
      "# Usage (details: policy measures)\n",
      "Here, we will analyse the relationship of policy measures and parameter values of SIR-derived ODE models. Policy measures are tracked by [Oxford Covid-19 Government Response Tracker (OxCGRT)](https://github.com/OxCGRT/covid-policy-tracker)."
     ]
    },
    {
     "cell_type": "heading",
     "level": 2,
     "metadata": {},
     "source": [
      "Preparation"
     ]
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "# Standard users\n",
      "# !pip install covsirphy\n",
      "# Developers (Note: this notebook is in example directory)\n",
      "import os\n",
      "os.chdir(\"../\")"
     ],
     "language": "python",
     "metadata": {},
     "outputs": [],
     "prompt_number": 1
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "from pprint import pprint"
     ],
     "language": "python",
     "metadata": {},
     "outputs": [],
     "prompt_number": 2
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "import covsirphy as cs\n",
      "cs.__version__"
     ],
     "language": "python",
     "metadata": {},
     "outputs": [
      {
       "output_type": "pyout",
       "prompt_number": 3,
       "text": [
        "'2.8.3'"
       ]
      }
     ],
     "prompt_number": 3
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "# Standard users and developers\n",
      "data_loader = cs.DataLoader(\"input\")\n",
      "# The number of cases (JHU style)\n",
      "jhu_data = data_loader.jhu(verbose=False)\n",
      "# Population in each country\n",
      "population_data = data_loader.population(verbose=False)\n",
      "# Government Response Tracker (OxCGRT)\n",
      "oxcgrt_data = data_loader.oxcgrt(verbose=False)\n",
      "# Description/citation\n",
      "print(oxcgrt_data.citation)"
     ],
     "language": "python",
     "metadata": {
      "tags": []
     },
     "outputs": [
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "(Secondary source) Guidotti, E., Ardia, D., (2020), \"COVID-19 Data Hub\", Journal of Open Source Software 5(51):2376, doi: 10.21105/joss.02376.\n",
        "We can get Citation list of primary sources with DataLoader(...).covid19dh_citation"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      }
     ],
     "prompt_number": 4
    },
    {
     "cell_type": "markdown",
     "metadata": {},
     "source": [
      "## Class for policy measure analysis\n",
      "We will `PolicyMeasures` class to find relationship of policy measures and parameter values of SIR-derived ODE models."
     ]
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "# Create analyser with tau value 360 [min] (can be changed)\n",
      "analyser = cs.PolicyMeasures(jhu_data, population_data, oxcgrt_data, tau=360)\n",
      "# The number of registerd countries\n",
      "len(analyser.countries)"
     ],
     "language": "python",
     "metadata": {
      "tags": []
     },
     "outputs": [
      {
       "output_type": "pyout",
       "prompt_number": 5,
       "text": [
        "184"
       ]
      }
     ],
     "prompt_number": 5
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "# We can get Scenario instance for detailed scenario analysis\n",
      "type(analyser.scenario(\"Japan\"))"
     ],
     "language": "python",
     "metadata": {},
     "outputs": [
      {
       "output_type": "pyout",
       "prompt_number": 6,
       "text": [
        "covsirphy.analysis.scenario.Scenario"
       ]
      }
     ],
     "prompt_number": 6
    },
    {
     "cell_type": "markdown",
     "metadata": {},
     "source": [
      "## Set phases with S-R trend analysis\n",
      "We will perform S-R trend analysis to set phases in all countries. Countries which do not have **12th phases** will be un-registered for the next analysis. This number will be adjusted for your analysis."
     ]
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "# Show the number of phases of all countries\n",
      "analyser.trend()\n",
      "pprint(analyser.phase_len(), compact=True)"
     ],
     "language": "python",
     "metadata": {},
     "outputs": [
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "{"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "4"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ": "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "['Tanzania', 'Myanmar', 'Antigua and Barbuda']"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        " "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "5"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ": "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "["
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Libya'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Trinidad and Tobago'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Jamaica'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Brunei'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Georgia'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Fiji'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        "     "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Dominica'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Grenada'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Belize'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Tunisia'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Mauritius'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        "     "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Papua New Guinea'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "]"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        " "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "6"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ": "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "["
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Monaco'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Seychelles'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Lebanon'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Ireland'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Czech Republic'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        "     "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Kazakhstan'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Yemen'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Kyrgyzstan'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Jordan'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Netherlands'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        "     "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Central African Republic'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Namibia'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Lesotho'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Cambodia'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Bahamas'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        "     "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Guyana'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Sao Tome and Principe'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Equatorial Guinea'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Uganda'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "]"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        " "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "7"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ": "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "["
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'San Marino'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Colombia'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Syria'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Australia'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Croatia'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Zambia'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        "     "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Malawi'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Cyprus'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Paraguay'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Guinea-Bissau'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Iceland'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Rwanda'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        "     "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Kosovo'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Liechtenstein'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Nepal'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Saint Vincent and the Grenadines'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        "     "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Gambia'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Malta'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'New Zealand'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Comoros'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Mongolia'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Norway'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        "     "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'South Sudan'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Ethiopia'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Zimbabwe'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Slovakia'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Spain'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Botswana'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        "     "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Burundi'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Vietnam'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Philippines'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "]"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        " "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "8"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ": "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "["
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Angola'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Venezuela'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'India'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Morocco'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Qatar'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Djibouti'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Niger'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        "     "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Montenegro'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Saint Lucia'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Madagascar'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Ukraine'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Argentina'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        "     "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Suriname'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Israel'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Cameroon'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Mozambique'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Sudan'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Kenya'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        "     "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Sri Lanka'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Costa Rica'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Nicaragua'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Palestine'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Barbados'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        "     "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Afghanistan'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Slovenia'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Bhutan'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Eritrea'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Thailand'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Taiwan'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "]"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        " "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "9"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ": "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "["
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Korea, South'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Iraq'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'South Africa'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Andorra'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Hungary'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Tajikistan'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        "     "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Gabon'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Sierra Leone'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Denmark'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Austria'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Somalia'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Oman'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        "     "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Bermuda'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Congo'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Indonesia'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Guatemala'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Germany'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Albania'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        "     "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Greece'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Uzbekistan'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Liberia'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Luxembourg'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Maldives'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Uruguay'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        "     "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Cape Verde'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Singapore'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Benin'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'China'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Japan'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Mauritania'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        "     "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Belarus'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Cuba'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Ghana'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "]"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        " "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "10"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ": "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "["
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Ecuador'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Poland'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'El Salvador'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Algeria'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Honduras'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Canada'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        "      "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Azerbaijan'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Chile'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Togo'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Bosnia and Herzegovina'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Senegal'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        "      "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Finland'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Chad'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Malaysia'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Bangladesh'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Haiti'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Mali'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Lithuania'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        "      "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Saudi Arabia'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Swaziland'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Pakistan'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Serbia'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Romania'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Moldova'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        "      "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Armenia'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "]"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        " "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "11"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ": "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "["
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Mexico'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Egypt'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Kuwait'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Switzerland'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Guinea'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        "      "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Dominican Republic'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Burkina Faso'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Panama'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Latvia'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Nigeria'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        "      "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Belgium'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Bulgaria'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Macedonia'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Peru'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Turkey'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "]"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        " "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "12"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ": "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "["
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Iran'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'United Arab Emirates'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'France'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Brazil'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Portugal'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Bolivia'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        "      "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Estonia'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'United States'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Bahrain'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Italy'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "]"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        " "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "13"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ": "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "['Russia']"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "}"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      }
     ],
     "prompt_number": 7
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "# Set phases with S-R trend analysis\n",
      "analyser.trend(min_len=12)\n",
      "# The number of countries\n",
      "len(analyser.countries)"
     ],
     "language": "python",
     "metadata": {},
     "outputs": [
      {
       "output_type": "pyout",
       "prompt_number": 8,
       "text": [
        "11"
       ]
      }
     ],
     "prompt_number": 8
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "phase_len_dict = analyser.phase_len()\n",
      "pprint(phase_len_dict, compact=True)"
     ],
     "language": "python",
     "metadata": {
      "tags": []
     },
     "outputs": [
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "{"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "12"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ": "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "["
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Iran'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'United Arab Emirates'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'France'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Brazil'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Portugal'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Bolivia'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        "      "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Estonia'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'United States'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Bahrain'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Italy'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "]"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        " "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "13"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ": "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "['Russia']"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "}"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      }
     ],
     "prompt_number": 9
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "# Here, only show the countries which have the most phases\n",
      "countries_show = max(phase_len_dict.items(), key=lambda x: x[0])[1]\n",
      "# Show summary\n",
      "analyser.summary(countries=countries_show)"
     ],
     "language": "python",
     "metadata": {
      "tags": []
     },
     "outputs": [
      {
       "html": [
        "<div>\n",
        "<style scoped>\n",
        "    .dataframe tbody tr th:only-of-type {\n",
        "        vertical-align: middle;\n",
        "    }\n",
        "\n",
        "    .dataframe tbody tr th {\n",
        "        vertical-align: top;\n",
        "    }\n",
        "\n",
        "    .dataframe thead th {\n",
        "        text-align: right;\n",
        "    }\n",
        "</style>\n",
        "<table border=\"1\" class=\"dataframe\">\n",
        "  <thead>\n",
        "    <tr style=\"text-align: right;\">\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th>Type</th>\n",
        "      <th>Start</th>\n",
        "      <th>End</th>\n",
        "      <th>Population</th>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>Country</th>\n",
        "      <th>Phase</th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "    </tr>\n",
        "  </thead>\n",
        "  <tbody>\n",
        "    <tr>\n",
        "      <th rowspan=\"13\" valign=\"top\">Russia</th>\n",
        "      <th>0th</th>\n",
        "      <td>Past</td>\n",
        "      <td>12Feb2020</td>\n",
        "      <td>06May2020</td>\n",
        "      <td>330457362</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>1st</th>\n",
        "      <td>Past</td>\n",
        "      <td>07May2020</td>\n",
        "      <td>16May2020</td>\n",
        "      <td>330457362</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>2nd</th>\n",
        "      <td>Past</td>\n",
        "      <td>17May2020</td>\n",
        "      <td>26May2020</td>\n",
        "      <td>330457362</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>3rd</th>\n",
        "      <td>Past</td>\n",
        "      <td>27May2020</td>\n",
        "      <td>04Jun2020</td>\n",
        "      <td>330457362</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>4th</th>\n",
        "      <td>Past</td>\n",
        "      <td>05Jun2020</td>\n",
        "      <td>13Jun2020</td>\n",
        "      <td>330457362</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>5th</th>\n",
        "      <td>Past</td>\n",
        "      <td>14Jun2020</td>\n",
        "      <td>23Jun2020</td>\n",
        "      <td>330457362</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>6th</th>\n",
        "      <td>Past</td>\n",
        "      <td>24Jun2020</td>\n",
        "      <td>05Jul2020</td>\n",
        "      <td>330457362</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>7th</th>\n",
        "      <td>Past</td>\n",
        "      <td>06Jul2020</td>\n",
        "      <td>17Jul2020</td>\n",
        "      <td>330457362</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>8th</th>\n",
        "      <td>Past</td>\n",
        "      <td>18Jul2020</td>\n",
        "      <td>31Jul2020</td>\n",
        "      <td>330457362</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>9th</th>\n",
        "      <td>Past</td>\n",
        "      <td>01Aug2020</td>\n",
        "      <td>14Aug2020</td>\n",
        "      <td>330457362</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>10th</th>\n",
        "      <td>Past</td>\n",
        "      <td>15Aug2020</td>\n",
        "      <td>29Aug2020</td>\n",
        "      <td>330457362</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>11th</th>\n",
        "      <td>Past</td>\n",
        "      <td>30Aug2020</td>\n",
        "      <td>14Sep2020</td>\n",
        "      <td>330457362</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>12th</th>\n",
        "      <td>Past</td>\n",
        "      <td>15Sep2020</td>\n",
        "      <td>30Sep2020</td>\n",
        "      <td>330457362</td>\n",
        "    </tr>\n",
        "  </tbody>\n",
        "</table>\n",
        "</div>"
       ],
       "output_type": "pyout",
       "prompt_number": 10,
       "text": [
        "               Type      Start        End  Population\n",
        "Country Phase                                        \n",
        "Russia  0th    Past  12Feb2020  06May2020   330457362\n",
        "        1st    Past  07May2020  16May2020   330457362\n",
        "        2nd    Past  17May2020  26May2020   330457362\n",
        "        3rd    Past  27May2020  04Jun2020   330457362\n",
        "        4th    Past  05Jun2020  13Jun2020   330457362\n",
        "        5th    Past  14Jun2020  23Jun2020   330457362\n",
        "        6th    Past  24Jun2020  05Jul2020   330457362\n",
        "        7th    Past  06Jul2020  17Jul2020   330457362\n",
        "        8th    Past  18Jul2020  31Jul2020   330457362\n",
        "        9th    Past  01Aug2020  14Aug2020   330457362\n",
        "        10th   Past  15Aug2020  29Aug2020   330457362\n",
        "        11th   Past  30Aug2020  14Sep2020   330457362\n",
        "        12th   Past  15Sep2020  30Sep2020   330457362"
       ]
      }
     ],
     "prompt_number": 10
    },
    {
     "cell_type": "markdown",
     "metadata": {},
     "source": [
      "## Parameter estimation\n",
      "we will estimate the parameter values with SIR-derived ODE models in each country."
     ]
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "# Parameter estimation with SIR-F model\n",
      "analyser.estimate(cs.SIRF)"
     ],
     "language": "python",
     "metadata": {
      "tags": []
     },
     "outputs": [
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n",
        "<SIR-F model: parameter estimation>"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "Running optimization with 4 CPUs..."
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tFRA,  1st phase (24Mar2020 - 02Apr2020): finished 1669 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tBHR,  0th phase (06Mar2020 - 10May2020): finished 1580 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tFRA,  4th phase (22Apr2020 - 04May2020): finished 1654 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tPRT,  1st phase (29Apr2020 - 14May2020): finished 1679 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tEST,  5th phase (26May2020 - 03Jun2020): finished  208 trials in 0 min  5 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tUSA,  3rd phase (05Jun2020 - 24Jun2020): finished  523 trials in 0 min 15 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tIRN,  8th phase (29Jul2020 - 13Aug2020): finished  692 trials in 0 min 20 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tFRA,  9th phase (20Aug2020 - 04Sep2020): finished  542 trials in 0 min 15 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tBHR,  6th phase (19Jul2020 - 03Aug2020): finished  208 trials in 0 min  5 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tEST,  3rd phase (04May2020 - 13May2020): finished 1639 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tRUS,  5th phase (14Jun2020 - 23Jun2020): finished 1663 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tIRN,  6th phase (01Jul2020 - 14Jul2020): finished  169 trials in 0 min  5 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tPRT,  6th phase (08Jul2020 - 22Jul2020): finished 1547 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tPRT,  2nd phase (15May2020 - 29May2020): finished 1521 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tIRN,  0th phase (26Feb2020 - 29Mar2020): finished 1360 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tITA,  9th phase (03Aug2020 - 31Aug2020): finished 1365 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tITA,  8th phase (15Jun2020 - 02Aug2020): finished  482 trials in 0 min 15 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tIRN,  1st phase (30Mar2020 - 17Apr2020): finished 1444 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tBRA,  3rd phase (27Jun2020 - 07Jul2020): finished 1424 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tIRN,  4th phase (01Jun2020 - 15Jun2020): finished 1441 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tBRA,  0th phase (16Mar2020 - 26May2020): finished 1408 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tPRT,  8th phase (12Aug2020 - 30Aug2020): finished 1432 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tIRN, 11th phase (17Sep2020 - 30Sep2020): finished 1427 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tIRN,  7th phase (15Jul2020 - 28Jul2020): finished  162 trials in 0 min  5 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tUSA,  9th phase (21Aug2020 - 02Sep2020): finished  164 trials in 0 min  5 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tFRA,  5th phase (05May2020 - 27May2020): finished 1465 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tITA,  0th phase (24Feb2020 - 20Mar2020): finished 1437 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tBHR, 10th phase (13Sep2020 - 20Sep2020): finished 1477 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tRUS,  8th phase (18Jul2020 - 31Jul2020): finished 1486 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tRUS,  0th phase (12Feb2020 - 06May2020): finished 1429 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tEST,  8th phase (23Aug2020 - 02Sep2020): finished  599 trials in 0 min 20 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tFRA,  6th phase (28May2020 - 29Jun2020): finished 1411 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tITA,  2nd phase (29Mar2020 - 08Apr2020): finished 1472 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tBRA,  7th phase (06Aug2020 - 13Aug2020): finished  455 trials in 0 min 15 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tBHR,  5th phase (07Jul2020 - 18Jul2020): finished 1420 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tPRT,  3rd phase (30May2020 - 12Jun2020): finished 1414 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tARE,  1st phase (28Apr2020 - 14May2020): finished 1416 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tBOL, 11th phase (13Sep2020 - 30Sep2020): finished  450 trials in 0 min 15 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tRUS, 10th phase (15Aug2020 - 29Aug2020): finished 1427 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tBOL,  8th phase (18Aug2020 - 25Aug2020): finished  591 trials in 0 min 20 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tRUS, 11th phase (30Aug2020 - 14Sep2020): finished 1415 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tUSA,  5th phase (08Jul2020 - 17Jul2020): finished  329 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tRUS,  7th phase (06Jul2020 - 17Jul2020): finished 1464 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tPRT,  7th phase (23Jul2020 - 11Aug2020): finished 1471 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tBOL,  5th phase (24Jul2020 - 31Jul2020): finished  718 trials in 0 min 20 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tARE,  6th phase (04Jul2020 - 20Jul2020): finished 1573 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tBHR,  4th phase (26Jun2020 - 06Jul2020): finished 1573 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tBHR,  9th phase (03Sep2020 - 12Sep2020): finished 1645 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tBOL,  7th phase (10Aug2020 - 17Aug2020): finished  412 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tITA,  4th phase (19Apr2020 - 30Apr2020): finished  371 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tARE, 11th phase (22Sep2020 - 30Sep2020): finished  198 trials in 0 min  5 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tARE,  5th phase (21Jun2020 - 03Jul2020): finished  189 trials in 0 min  5 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tRUS,  3rd phase (27May2020 - 04Jun2020): finished 1572 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tFRA, 11th phase (16Sep2020 - 30Sep2020): finished 1558 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tEST,  4th phase (14May2020 - 25May2020): finished 1502 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tRUS, 12th phase (15Sep2020 - 30Sep2020): finished 1433 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tARE, 10th phase (11Sep2020 - 21Sep2020): finished 1174 trials in 0 min 50 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tPRT,  9th phase (31Aug2020 - 11Sep2020): finished 1401 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tUSA,  8th phase (08Aug2020 - 20Aug2020): finished  578 trials in 0 min 20 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tBOL,  4th phase (16Jul2020 - 23Jul2020): finished  368 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tITA,  6th phase (10May2020 - 21May2020): finished  366 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tUSA,  2nd phase (12May2020 - 04Jun2020): finished 1415 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tITA,  1st phase (21Mar2020 - 28Mar2020): finished 1489 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tBHR,  1st phase (11May2020 - 31May2020): finished 1450 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tBOL,  1st phase (14Jun2020 - 25Jun2020): finished 1472 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tRUS,  1st phase (07May2020 - 16May2020): finished 1457 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tITA,  5th phase (01May2020 - 09May2020): finished  574 trials in 0 min 20 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tBRA,  4th phase (08Jul2020 - 20Jul2020): finished  444 trials in 0 min 15 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tUSA,  7th phase (28Jul2020 - 07Aug2020): finished  448 trials in 0 min 15 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tBHR,  7th phase (04Aug2020 - 17Aug2020): finished 1026 trials in 0 min 40 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tBRA,  9th phase (25Aug2020 - 02Sep2020): finished  359 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tFRA, 10th phase (05Sep2020 - 15Sep2020): finished  725 trials in 0 min 25 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tIRN,  3rd phase (14May2020 - 31May2020): finished  357 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tBOL,  6th phase (01Aug2020 - 09Aug2020): finished  185 trials in 0 min  5 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tBOL,  2nd phase (26Jun2020 - 05Jul2020): finished  351 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tEST,  0th phase (15Mar2020 - 08Apr2020): finished 1442 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tIRN,  2nd phase (18Apr2020 - 13May2020): finished  321 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tITA,  3rd phase (09Apr2020 - 18Apr2020): finished  440 trials in 0 min 15 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tFRA,  8th phase (30Jul2020 - 19Aug2020): finished 1442 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tEST,  1st phase (09Apr2020 - 20Apr2020): finished 1470 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tFRA,  7th phase (30Jun2020 - 29Jul2020): finished 1368 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tPRT, 10th phase (12Sep2020 - 20Sep2020): finished 1405 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tEST,  6th phase (04Jun2020 - 31Jul2020): finished 1365 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tEST,  2nd phase (21Apr2020 - 03May2020): finished 1388 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tUSA,  6th phase (18Jul2020 - 27Jul2020): finished  344 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tIRN,  9th phase (14Aug2020 - 31Aug2020): finished  153 trials in 0 min  5 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tBOL, 10th phase (04Sep2020 - 12Sep2020): finished 1458 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tPRT, 11th phase (21Sep2020 - 30Sep2020): finished 1408 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tEST, 10th phase (11Sep2020 - 18Sep2020): finished  571 trials in 0 min 20 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tPRT,  5th phase (25Jun2020 - 07Jul2020): finished 1501 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tPRT,  0th phase (14Mar2020 - 28Apr2020): finished 1460 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tBRA,  2nd phase (14Jun2020 - 26Jun2020): finished 1204 trials in 0 min 45 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tEST,  9th phase (03Sep2020 - 10Sep2020): finished  161 trials in 0 min  5 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tBRA,  1st phase (27May2020 - 13Jun2020): finished 1478 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tBHR,  8th phase (18Aug2020 - 02Sep2020): finished 1447 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tUSA, 10th phase (03Sep2020 - 16Sep2020): finished  749 trials in 0 min 30 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tBOL,  0th phase (01Apr2020 - 13Jun2020): finished 1317 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tBRA,  8th phase (14Aug2020 - 24Aug2020): finished 1342 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tARE,  3rd phase (25May2020 - 06Jun2020): finished 1380 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tEST, 11th phase (19Sep2020 - 30Sep2020): finished 1368 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tRUS,  6th phase (24Jun2020 - 05Jul2020): finished 1398 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tARE,  9th phase (02Sep2020 - 10Sep2020): finished 1417 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tIRN,  5th phase (16Jun2020 - 30Jun2020): finished 1422 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tARE,  7th phase (21Jul2020 - 14Aug2020): finished 1240 trials in 0 min 50 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tIRN, 10th phase (01Sep2020 - 16Sep2020): finished 1462 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tBOL,  3rd phase (06Jul2020 - 15Jul2020): finished 1361 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tBOL,  9th phase (26Aug2020 - 03Sep2020): finished  207 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tEST,  7th phase (01Aug2020 - 22Aug2020): finished 1257 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tUSA,  1st phase (20Apr2020 - 11May2020): finished 1244 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tRUS,  4th phase (05Jun2020 - 13Jun2020): finished 1265 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tARE,  8th phase (15Aug2020 - 01Sep2020): finished 1373 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tUSA,  0th phase (09Feb2020 - 19Apr2020): finished 1338 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tARE,  0th phase (12Feb2020 - 27Apr2020): finished 1317 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tPRT,  4th phase (13Jun2020 - 24Jun2020): finished 1388 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tARE,  4th phase (07Jun2020 - 20Jun2020): finished 1354 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tRUS,  9th phase (01Aug2020 - 14Aug2020): finished 1379 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tRUS,  2nd phase (17May2020 - 26May2020): finished 1370 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tFRA,  2nd phase (03Apr2020 - 12Apr2020): finished 1364 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tITA,  7th phase (22May2020 - 14Jun2020): finished  419 trials in 0 min 15 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tBRA,  5th phase (21Jul2020 - 28Jul2020): finished 1355 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tBRA, 10th phase (03Sep2020 - 15Sep2020): finished 1361 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tBRA,  6th phase (29Jul2020 - 05Aug2020): finished 1272 trials in 0 min 55 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tFRA,  3rd phase (13Apr2020 - 21Apr2020): finished 1391 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tARE,  2nd phase (15May2020 - 24May2020): finished 1487 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tFRA,  0th phase (12Feb2020 - 23Mar2020): finished 1508 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tBHR,  2nd phase (01Jun2020 - 13Jun2020): finished 1678 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "Completed optimization. Total: 25 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      }
     ],
     "prompt_number": 11
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "# Show summary\n",
      "analyser.summary(countries=countries_show)"
     ],
     "language": "python",
     "metadata": {},
     "outputs": [
      {
       "html": [
        "<div>\n",
        "<style scoped>\n",
        "    .dataframe tbody tr th:only-of-type {\n",
        "        vertical-align: middle;\n",
        "    }\n",
        "\n",
        "    .dataframe tbody tr th {\n",
        "        vertical-align: top;\n",
        "    }\n",
        "\n",
        "    .dataframe thead th {\n",
        "        text-align: right;\n",
        "    }\n",
        "</style>\n",
        "<table border=\"1\" class=\"dataframe\">\n",
        "  <thead>\n",
        "    <tr style=\"text-align: right;\">\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th>Type</th>\n",
        "      <th>Start</th>\n",
        "      <th>End</th>\n",
        "      <th>Population</th>\n",
        "      <th>ODE</th>\n",
        "      <th>Rt</th>\n",
        "      <th>theta</th>\n",
        "      <th>kappa</th>\n",
        "      <th>rho</th>\n",
        "      <th>sigma</th>\n",
        "      <th>tau</th>\n",
        "      <th>1/alpha2 [day]</th>\n",
        "      <th>alpha1 [-]</th>\n",
        "      <th>1/beta [day]</th>\n",
        "      <th>1/gamma [day]</th>\n",
        "      <th>RMSLE</th>\n",
        "      <th>Trials</th>\n",
        "      <th>Runtime</th>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>Country</th>\n",
        "      <th>Phase</th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "    </tr>\n",
        "  </thead>\n",
        "  <tbody>\n",
        "    <tr>\n",
        "      <th rowspan=\"13\" valign=\"top\">Russia</th>\n",
        "      <th>0th</th>\n",
        "      <td>Past</td>\n",
        "      <td>12Feb2020</td>\n",
        "      <td>06May2020</td>\n",
        "      <td>330457362</td>\n",
        "      <td>SIR-F</td>\n",
        "      <td>0.02</td>\n",
        "      <td>0.602763</td>\n",
        "      <td>0.544883</td>\n",
        "      <td>0.034081</td>\n",
        "      <td>0.002299</td>\n",
        "      <td>360</td>\n",
        "      <td>0</td>\n",
        "      <td>0.603</td>\n",
        "      <td>7</td>\n",
        "      <td>108</td>\n",
        "      <td>18.966727</td>\n",
        "      <td>1429</td>\n",
        "      <td>1 min  0 sec</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>1st</th>\n",
        "      <td>Past</td>\n",
        "      <td>07May2020</td>\n",
        "      <td>16May2020</td>\n",
        "      <td>330457362</td>\n",
        "      <td>SIR-F</td>\n",
        "      <td>2.51</td>\n",
        "      <td>0.000729</td>\n",
        "      <td>0.000120</td>\n",
        "      <td>0.012958</td>\n",
        "      <td>0.005045</td>\n",
        "      <td>360</td>\n",
        "      <td>2088</td>\n",
        "      <td>0.001</td>\n",
        "      <td>19</td>\n",
        "      <td>49</td>\n",
        "      <td>0.074230</td>\n",
        "      <td>1457</td>\n",
        "      <td>1 min  0 sec</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>2nd</th>\n",
        "      <td>Past</td>\n",
        "      <td>17May2020</td>\n",
        "      <td>26May2020</td>\n",
        "      <td>330457362</td>\n",
        "      <td>SIR-F</td>\n",
        "      <td>1.59</td>\n",
        "      <td>0.000438</td>\n",
        "      <td>0.000098</td>\n",
        "      <td>0.007034</td>\n",
        "      <td>0.004313</td>\n",
        "      <td>360</td>\n",
        "      <td>2549</td>\n",
        "      <td>0.000</td>\n",
        "      <td>35</td>\n",
        "      <td>57</td>\n",
        "      <td>0.086918</td>\n",
        "      <td>1370</td>\n",
        "      <td>1 min  0 sec</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>3rd</th>\n",
        "      <td>Past</td>\n",
        "      <td>27May2020</td>\n",
        "      <td>04Jun2020</td>\n",
        "      <td>330457362</td>\n",
        "      <td>SIR-F</td>\n",
        "      <td>1.03</td>\n",
        "      <td>0.000708</td>\n",
        "      <td>0.000117</td>\n",
        "      <td>0.005479</td>\n",
        "      <td>0.005196</td>\n",
        "      <td>360</td>\n",
        "      <td>2144</td>\n",
        "      <td>0.001</td>\n",
        "      <td>45</td>\n",
        "      <td>48</td>\n",
        "      <td>0.067224</td>\n",
        "      <td>1572</td>\n",
        "      <td>1 min  0 sec</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>4th</th>\n",
        "      <td>Past</td>\n",
        "      <td>05Jun2020</td>\n",
        "      <td>13Jun2020</td>\n",
        "      <td>330457362</td>\n",
        "      <td>SIR-F</td>\n",
        "      <td>1.31</td>\n",
        "      <td>0.001608</td>\n",
        "      <td>0.000084</td>\n",
        "      <td>0.004626</td>\n",
        "      <td>0.003442</td>\n",
        "      <td>360</td>\n",
        "      <td>2986</td>\n",
        "      <td>0.002</td>\n",
        "      <td>54</td>\n",
        "      <td>72</td>\n",
        "      <td>0.047824</td>\n",
        "      <td>1265</td>\n",
        "      <td>1 min  0 sec</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>5th</th>\n",
        "      <td>Past</td>\n",
        "      <td>14Jun2020</td>\n",
        "      <td>23Jun2020</td>\n",
        "      <td>330457362</td>\n",
        "      <td>SIR-F</td>\n",
        "      <td>0.82</td>\n",
        "      <td>0.000348</td>\n",
        "      <td>0.000079</td>\n",
        "      <td>0.003467</td>\n",
        "      <td>0.004138</td>\n",
        "      <td>360</td>\n",
        "      <td>3162</td>\n",
        "      <td>0.000</td>\n",
        "      <td>72</td>\n",
        "      <td>60</td>\n",
        "      <td>0.063847</td>\n",
        "      <td>1663</td>\n",
        "      <td>1 min  0 sec</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>6th</th>\n",
        "      <td>Past</td>\n",
        "      <td>24Jun2020</td>\n",
        "      <td>05Jul2020</td>\n",
        "      <td>330457362</td>\n",
        "      <td>SIR-F</td>\n",
        "      <td>0.77</td>\n",
        "      <td>0.004860</td>\n",
        "      <td>0.000046</td>\n",
        "      <td>0.002564</td>\n",
        "      <td>0.003289</td>\n",
        "      <td>360</td>\n",
        "      <td>5466</td>\n",
        "      <td>0.005</td>\n",
        "      <td>97</td>\n",
        "      <td>76</td>\n",
        "      <td>0.067917</td>\n",
        "      <td>1398</td>\n",
        "      <td>1 min  0 sec</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>7th</th>\n",
        "      <td>Past</td>\n",
        "      <td>06Jul2020</td>\n",
        "      <td>17Jul2020</td>\n",
        "      <td>330457362</td>\n",
        "      <td>SIR-F</td>\n",
        "      <td>0.73</td>\n",
        "      <td>0.023591</td>\n",
        "      <td>0.000010</td>\n",
        "      <td>0.002260</td>\n",
        "      <td>0.003014</td>\n",
        "      <td>360</td>\n",
        "      <td>24114</td>\n",
        "      <td>0.024</td>\n",
        "      <td>110</td>\n",
        "      <td>82</td>\n",
        "      <td>0.060868</td>\n",
        "      <td>1464</td>\n",
        "      <td>1 min  0 sec</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>8th</th>\n",
        "      <td>Past</td>\n",
        "      <td>18Jul2020</td>\n",
        "      <td>31Jul2020</td>\n",
        "      <td>330457362</td>\n",
        "      <td>SIR-F</td>\n",
        "      <td>0.76</td>\n",
        "      <td>0.000031</td>\n",
        "      <td>0.000041</td>\n",
        "      <td>0.001834</td>\n",
        "      <td>0.002377</td>\n",
        "      <td>360</td>\n",
        "      <td>6131</td>\n",
        "      <td>0.000</td>\n",
        "      <td>136</td>\n",
        "      <td>105</td>\n",
        "      <td>0.060525</td>\n",
        "      <td>1486</td>\n",
        "      <td>1 min  0 sec</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>9th</th>\n",
        "      <td>Past</td>\n",
        "      <td>01Aug2020</td>\n",
        "      <td>14Aug2020</td>\n",
        "      <td>330457362</td>\n",
        "      <td>SIR-F</td>\n",
        "      <td>0.76</td>\n",
        "      <td>0.001416</td>\n",
        "      <td>0.000031</td>\n",
        "      <td>0.001468</td>\n",
        "      <td>0.001889</td>\n",
        "      <td>360</td>\n",
        "      <td>7999</td>\n",
        "      <td>0.001</td>\n",
        "      <td>170</td>\n",
        "      <td>132</td>\n",
        "      <td>0.048987</td>\n",
        "      <td>1379</td>\n",
        "      <td>1 min  0 sec</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>10th</th>\n",
        "      <td>Past</td>\n",
        "      <td>15Aug2020</td>\n",
        "      <td>29Aug2020</td>\n",
        "      <td>330457362</td>\n",
        "      <td>SIR-F</td>\n",
        "      <td>0.80</td>\n",
        "      <td>0.029031</td>\n",
        "      <td>0.000011</td>\n",
        "      <td>0.001239</td>\n",
        "      <td>0.001501</td>\n",
        "      <td>360</td>\n",
        "      <td>22598</td>\n",
        "      <td>0.029</td>\n",
        "      <td>201</td>\n",
        "      <td>166</td>\n",
        "      <td>0.053693</td>\n",
        "      <td>1427</td>\n",
        "      <td>1 min  0 sec</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>11th</th>\n",
        "      <td>Past</td>\n",
        "      <td>30Aug2020</td>\n",
        "      <td>14Sep2020</td>\n",
        "      <td>330457362</td>\n",
        "      <td>SIR-F</td>\n",
        "      <td>0.91</td>\n",
        "      <td>0.000918</td>\n",
        "      <td>0.000021</td>\n",
        "      <td>0.001263</td>\n",
        "      <td>0.001367</td>\n",
        "      <td>360</td>\n",
        "      <td>11749</td>\n",
        "      <td>0.001</td>\n",
        "      <td>197</td>\n",
        "      <td>182</td>\n",
        "      <td>0.043141</td>\n",
        "      <td>1415</td>\n",
        "      <td>1 min  0 sec</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>12th</th>\n",
        "      <td>Past</td>\n",
        "      <td>15Sep2020</td>\n",
        "      <td>30Sep2020</td>\n",
        "      <td>330457362</td>\n",
        "      <td>SIR-F</td>\n",
        "      <td>1.80</td>\n",
        "      <td>0.028229</td>\n",
        "      <td>0.000001</td>\n",
        "      <td>0.001449</td>\n",
        "      <td>0.000779</td>\n",
        "      <td>360</td>\n",
        "      <td>173720</td>\n",
        "      <td>0.028</td>\n",
        "      <td>172</td>\n",
        "      <td>320</td>\n",
        "      <td>0.032291</td>\n",
        "      <td>1433</td>\n",
        "      <td>1 min  0 sec</td>\n",
        "    </tr>\n",
        "  </tbody>\n",
        "</table>\n",
        "</div>"
       ],
       "output_type": "pyout",
       "prompt_number": 12,
       "text": [
        "               Type      Start        End  Population    ODE    Rt     theta  \\\n",
        "Country Phase                                                                  \n",
        "Russia  0th    Past  12Feb2020  06May2020   330457362  SIR-F  0.02  0.602763   \n",
        "        1st    Past  07May2020  16May2020   330457362  SIR-F  2.51  0.000729   \n",
        "        2nd    Past  17May2020  26May2020   330457362  SIR-F  1.59  0.000438   \n",
        "        3rd    Past  27May2020  04Jun2020   330457362  SIR-F  1.03  0.000708   \n",
        "        4th    Past  05Jun2020  13Jun2020   330457362  SIR-F  1.31  0.001608   \n",
        "        5th    Past  14Jun2020  23Jun2020   330457362  SIR-F  0.82  0.000348   \n",
        "        6th    Past  24Jun2020  05Jul2020   330457362  SIR-F  0.77  0.004860   \n",
        "        7th    Past  06Jul2020  17Jul2020   330457362  SIR-F  0.73  0.023591   \n",
        "        8th    Past  18Jul2020  31Jul2020   330457362  SIR-F  0.76  0.000031   \n",
        "        9th    Past  01Aug2020  14Aug2020   330457362  SIR-F  0.76  0.001416   \n",
        "        10th   Past  15Aug2020  29Aug2020   330457362  SIR-F  0.80  0.029031   \n",
        "        11th   Past  30Aug2020  14Sep2020   330457362  SIR-F  0.91  0.000918   \n",
        "        12th   Past  15Sep2020  30Sep2020   330457362  SIR-F  1.80  0.028229   \n",
        "\n",
        "                  kappa       rho     sigma  tau  1/alpha2 [day]  alpha1 [-]  \\\n",
        "Country Phase                                                                  \n",
        "Russia  0th    0.544883  0.034081  0.002299  360               0       0.603   \n",
        "        1st    0.000120  0.012958  0.005045  360            2088       0.001   \n",
        "        2nd    0.000098  0.007034  0.004313  360            2549       0.000   \n",
        "        3rd    0.000117  0.005479  0.005196  360            2144       0.001   \n",
        "        4th    0.000084  0.004626  0.003442  360            2986       0.002   \n",
        "        5th    0.000079  0.003467  0.004138  360            3162       0.000   \n",
        "        6th    0.000046  0.002564  0.003289  360            5466       0.005   \n",
        "        7th    0.000010  0.002260  0.003014  360           24114       0.024   \n",
        "        8th    0.000041  0.001834  0.002377  360            6131       0.000   \n",
        "        9th    0.000031  0.001468  0.001889  360            7999       0.001   \n",
        "        10th   0.000011  0.001239  0.001501  360           22598       0.029   \n",
        "        11th   0.000021  0.001263  0.001367  360           11749       0.001   \n",
        "        12th   0.000001  0.001449  0.000779  360          173720       0.028   \n",
        "\n",
        "               1/beta [day]  1/gamma [day]      RMSLE  Trials       Runtime  \n",
        "Country Phase                                                                \n",
        "Russia  0th               7            108  18.966727    1429  1 min  0 sec  \n",
        "        1st              19             49   0.074230    1457  1 min  0 sec  \n",
        "        2nd              35             57   0.086918    1370  1 min  0 sec  \n",
        "        3rd              45             48   0.067224    1572  1 min  0 sec  \n",
        "        4th              54             72   0.047824    1265  1 min  0 sec  \n",
        "        5th              72             60   0.063847    1663  1 min  0 sec  \n",
        "        6th              97             76   0.067917    1398  1 min  0 sec  \n",
        "        7th             110             82   0.060868    1464  1 min  0 sec  \n",
        "        8th             136            105   0.060525    1486  1 min  0 sec  \n",
        "        9th             170            132   0.048987    1379  1 min  0 sec  \n",
        "        10th            201            166   0.053693    1427  1 min  0 sec  \n",
        "        11th            197            182   0.043141    1415  1 min  0 sec  \n",
        "        12th            172            320   0.032291    1433  1 min  0 sec  "
       ]
      }
     ],
     "prompt_number": 12
    },
    {
     "cell_type": "markdown",
     "metadata": {},
     "source": [
      "## Compare the history of parameters\n",
      "Here, compare the history of parameter values if countries."
     ]
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "# All parameter/day parameter/Rt/OxCGRT\n",
      "analyser.track().head()"
     ],
     "language": "python",
     "metadata": {},
     "outputs": [
      {
       "html": [
        "<div>\n",
        "<style scoped>\n",
        "    .dataframe tbody tr th:only-of-type {\n",
        "        vertical-align: middle;\n",
        "    }\n",
        "\n",
        "    .dataframe tbody tr th {\n",
        "        vertical-align: top;\n",
        "    }\n",
        "\n",
        "    .dataframe thead th {\n",
        "        text-align: right;\n",
        "    }\n",
        "</style>\n",
        "<table border=\"1\" class=\"dataframe\">\n",
        "  <thead>\n",
        "    <tr style=\"text-align: right;\">\n",
        "      <th></th>\n",
        "      <th>Date</th>\n",
        "      <th>Country</th>\n",
        "      <th>theta</th>\n",
        "      <th>kappa</th>\n",
        "      <th>rho</th>\n",
        "      <th>sigma</th>\n",
        "      <th>alpha1 [-]</th>\n",
        "      <th>1/alpha2 [day]</th>\n",
        "      <th>1/beta [day]</th>\n",
        "      <th>1/gamma [day]</th>\n",
        "      <th>...</th>\n",
        "      <th>Cancel_events</th>\n",
        "      <th>Gatherings_restrictions</th>\n",
        "      <th>Transport_closing</th>\n",
        "      <th>Stay_home_restrictions</th>\n",
        "      <th>Internal_movement_restrictions</th>\n",
        "      <th>International_movement_restrictions</th>\n",
        "      <th>Information_campaigns</th>\n",
        "      <th>Testing_policy</th>\n",
        "      <th>Contact_tracing</th>\n",
        "      <th>Stringency_index</th>\n",
        "    </tr>\n",
        "  </thead>\n",
        "  <tbody>\n",
        "    <tr>\n",
        "      <th>0</th>\n",
        "      <td>2020-02-26</td>\n",
        "      <td>Iran</td>\n",
        "      <td>0.26389</td>\n",
        "      <td>0.000317872</td>\n",
        "      <td>0.0519398</td>\n",
        "      <td>0.00661935</td>\n",
        "      <td>0.264</td>\n",
        "      <td>786</td>\n",
        "      <td>4</td>\n",
        "      <td>37</td>\n",
        "      <td>...</td>\n",
        "      <td>2</td>\n",
        "      <td>0</td>\n",
        "      <td>0</td>\n",
        "      <td>0</td>\n",
        "      <td>0</td>\n",
        "      <td>0</td>\n",
        "      <td>1</td>\n",
        "      <td>0</td>\n",
        "      <td>0</td>\n",
        "      <td>20.37</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>1</th>\n",
        "      <td>2020-02-27</td>\n",
        "      <td>Iran</td>\n",
        "      <td>0.26389</td>\n",
        "      <td>0.000317872</td>\n",
        "      <td>0.0519398</td>\n",
        "      <td>0.00661935</td>\n",
        "      <td>0.264</td>\n",
        "      <td>786</td>\n",
        "      <td>4</td>\n",
        "      <td>37</td>\n",
        "      <td>...</td>\n",
        "      <td>2</td>\n",
        "      <td>0</td>\n",
        "      <td>0</td>\n",
        "      <td>0</td>\n",
        "      <td>0</td>\n",
        "      <td>0</td>\n",
        "      <td>1</td>\n",
        "      <td>0</td>\n",
        "      <td>0</td>\n",
        "      <td>20.37</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>2</th>\n",
        "      <td>2020-02-28</td>\n",
        "      <td>Iran</td>\n",
        "      <td>0.26389</td>\n",
        "      <td>0.000317872</td>\n",
        "      <td>0.0519398</td>\n",
        "      <td>0.00661935</td>\n",
        "      <td>0.264</td>\n",
        "      <td>786</td>\n",
        "      <td>4</td>\n",
        "      <td>37</td>\n",
        "      <td>...</td>\n",
        "      <td>2</td>\n",
        "      <td>0</td>\n",
        "      <td>0</td>\n",
        "      <td>0</td>\n",
        "      <td>0</td>\n",
        "      <td>0</td>\n",
        "      <td>1</td>\n",
        "      <td>0</td>\n",
        "      <td>0</td>\n",
        "      <td>20.37</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>3</th>\n",
        "      <td>2020-02-29</td>\n",
        "      <td>Iran</td>\n",
        "      <td>0.26389</td>\n",
        "      <td>0.000317872</td>\n",
        "      <td>0.0519398</td>\n",
        "      <td>0.00661935</td>\n",
        "      <td>0.264</td>\n",
        "      <td>786</td>\n",
        "      <td>4</td>\n",
        "      <td>37</td>\n",
        "      <td>...</td>\n",
        "      <td>2</td>\n",
        "      <td>0</td>\n",
        "      <td>0</td>\n",
        "      <td>0</td>\n",
        "      <td>0</td>\n",
        "      <td>0</td>\n",
        "      <td>1</td>\n",
        "      <td>0</td>\n",
        "      <td>0</td>\n",
        "      <td>20.37</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>4</th>\n",
        "      <td>2020-03-01</td>\n",
        "      <td>Iran</td>\n",
        "      <td>0.26389</td>\n",
        "      <td>0.000317872</td>\n",
        "      <td>0.0519398</td>\n",
        "      <td>0.00661935</td>\n",
        "      <td>0.264</td>\n",
        "      <td>786</td>\n",
        "      <td>4</td>\n",
        "      <td>37</td>\n",
        "      <td>...</td>\n",
        "      <td>2</td>\n",
        "      <td>0</td>\n",
        "      <td>0</td>\n",
        "      <td>0</td>\n",
        "      <td>0</td>\n",
        "      <td>0</td>\n",
        "      <td>1</td>\n",
        "      <td>0</td>\n",
        "      <td>0</td>\n",
        "      <td>20.37</td>\n",
        "    </tr>\n",
        "  </tbody>\n",
        "</table>\n",
        "<p>5 rows \u00d7 23 columns</p>\n",
        "</div>"
       ],
       "output_type": "pyout",
       "prompt_number": 13,
       "text": [
        "        Date Country    theta        kappa        rho       sigma alpha1 [-]  \\\n",
        "0 2020-02-26    Iran  0.26389  0.000317872  0.0519398  0.00661935      0.264   \n",
        "1 2020-02-27    Iran  0.26389  0.000317872  0.0519398  0.00661935      0.264   \n",
        "2 2020-02-28    Iran  0.26389  0.000317872  0.0519398  0.00661935      0.264   \n",
        "3 2020-02-29    Iran  0.26389  0.000317872  0.0519398  0.00661935      0.264   \n",
        "4 2020-03-01    Iran  0.26389  0.000317872  0.0519398  0.00661935      0.264   \n",
        "\n",
        "  1/alpha2 [day] 1/beta [day] 1/gamma [day]  ... Cancel_events  \\\n",
        "0            786            4            37  ...             2   \n",
        "1            786            4            37  ...             2   \n",
        "2            786            4            37  ...             2   \n",
        "3            786            4            37  ...             2   \n",
        "4            786            4            37  ...             2   \n",
        "\n",
        "   Gatherings_restrictions  Transport_closing  Stay_home_restrictions  \\\n",
        "0                        0                  0                       0   \n",
        "1                        0                  0                       0   \n",
        "2                        0                  0                       0   \n",
        "3                        0                  0                       0   \n",
        "4                        0                  0                       0   \n",
        "\n",
        "   Internal_movement_restrictions  International_movement_restrictions  \\\n",
        "0                               0                                    0   \n",
        "1                               0                                    0   \n",
        "2                               0                                    0   \n",
        "3                               0                                    0   \n",
        "4                               0                                    0   \n",
        "\n",
        "   Information_campaigns  Testing_policy  Contact_tracing  Stringency_index  \n",
        "0                      1               0                0             20.37  \n",
        "1                      1               0                0             20.37  \n",
        "2                      1               0                0             20.37  \n",
        "3                      1               0                0             20.37  \n",
        "4                      1               0                0             20.37  \n",
        "\n",
        "[5 rows x 23 columns]"
       ]
      }
     ],
     "prompt_number": 13
    },
    {
     "cell_type": "heading",
     "level": 3,
     "metadata": {},
     "source": [
      "$Rt$: Reprodcution number $\\mathrm{[-]}$"
     ]
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "analyser.param_history(\"Rt\", roll_window=None).tail()"
     ],
     "language": "python",
     "metadata": {},
     "outputs": [
      {
       "output_type": "display_data",
       "png": "\n",
       "text": [
        "<Figure size 648x432 with 1 Axes>"
       ]
      },
      {
       "html": [
        "<div>\n",
        "<style scoped>\n",
        "    .dataframe tbody tr th:only-of-type {\n",
        "        vertical-align: middle;\n",
        "    }\n",
        "\n",
        "    .dataframe tbody tr th {\n",
        "        vertical-align: top;\n",
        "    }\n",
        "\n",
        "    .dataframe thead th {\n",
        "        text-align: right;\n",
        "    }\n",
        "</style>\n",
        "<table border=\"1\" class=\"dataframe\">\n",
        "  <thead>\n",
        "    <tr style=\"text-align: right;\">\n",
        "      <th>Country</th>\n",
        "      <th>Bahrain</th>\n",
        "      <th>Bolivia</th>\n",
        "      <th>Brazil</th>\n",
        "      <th>Estonia</th>\n",
        "      <th>France</th>\n",
        "      <th>Iran</th>\n",
        "      <th>Italy</th>\n",
        "      <th>Portugal</th>\n",
        "      <th>Russia</th>\n",
        "      <th>United Arab Emirates</th>\n",
        "      <th>United States</th>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>Date</th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "    </tr>\n",
        "  </thead>\n",
        "  <tbody>\n",
        "    <tr>\n",
        "      <th>2020-09-26</th>\n",
        "      <td>1.14</td>\n",
        "      <td>0.69</td>\n",
        "      <td>0.9</td>\n",
        "      <td>5.94</td>\n",
        "      <td>22.64</td>\n",
        "      <td>1.53</td>\n",
        "      <td>2.08</td>\n",
        "      <td>1.97</td>\n",
        "      <td>1.8</td>\n",
        "      <td>1.06</td>\n",
        "      <td>1.7</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>2020-09-27</th>\n",
        "      <td>1.14</td>\n",
        "      <td>0.69</td>\n",
        "      <td>0.9</td>\n",
        "      <td>5.94</td>\n",
        "      <td>22.64</td>\n",
        "      <td>1.53</td>\n",
        "      <td>2.08</td>\n",
        "      <td>1.97</td>\n",
        "      <td>1.8</td>\n",
        "      <td>1.06</td>\n",
        "      <td>1.7</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>2020-09-28</th>\n",
        "      <td>1.14</td>\n",
        "      <td>0.69</td>\n",
        "      <td>0.9</td>\n",
        "      <td>5.94</td>\n",
        "      <td>22.64</td>\n",
        "      <td>1.53</td>\n",
        "      <td>2.08</td>\n",
        "      <td>1.97</td>\n",
        "      <td>1.8</td>\n",
        "      <td>1.06</td>\n",
        "      <td>1.7</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>2020-09-29</th>\n",
        "      <td>1.14</td>\n",
        "      <td>0.69</td>\n",
        "      <td>0.9</td>\n",
        "      <td>5.94</td>\n",
        "      <td>22.64</td>\n",
        "      <td>1.53</td>\n",
        "      <td>2.08</td>\n",
        "      <td>1.97</td>\n",
        "      <td>1.8</td>\n",
        "      <td>1.06</td>\n",
        "      <td>1.7</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>2020-09-30</th>\n",
        "      <td>1.14</td>\n",
        "      <td>0.69</td>\n",
        "      <td>0.9</td>\n",
        "      <td>5.94</td>\n",
        "      <td>22.64</td>\n",
        "      <td>1.53</td>\n",
        "      <td>2.08</td>\n",
        "      <td>1.97</td>\n",
        "      <td>1.8</td>\n",
        "      <td>1.06</td>\n",
        "      <td>1.7</td>\n",
        "    </tr>\n",
        "  </tbody>\n",
        "</table>\n",
        "</div>"
       ],
       "output_type": "pyout",
       "prompt_number": 14,
       "text": [
        "Country     Bahrain  Bolivia  Brazil  Estonia  France  Iran  Italy  Portugal  \\\n",
        "Date                                                                           \n",
        "2020-09-26     1.14     0.69     0.9     5.94   22.64  1.53   2.08      1.97   \n",
        "2020-09-27     1.14     0.69     0.9     5.94   22.64  1.53   2.08      1.97   \n",
        "2020-09-28     1.14     0.69     0.9     5.94   22.64  1.53   2.08      1.97   \n",
        "2020-09-29     1.14     0.69     0.9     5.94   22.64  1.53   2.08      1.97   \n",
        "2020-09-30     1.14     0.69     0.9     5.94   22.64  1.53   2.08      1.97   \n",
        "\n",
        "Country     Russia  United Arab Emirates  United States  \n",
        "Date                                                     \n",
        "2020-09-26     1.8                  1.06            1.7  \n",
        "2020-09-27     1.8                  1.06            1.7  \n",
        "2020-09-28     1.8                  1.06            1.7  \n",
        "2020-09-29     1.8                  1.06            1.7  \n",
        "2020-09-30     1.8                  1.06            1.7  "
       ]
      }
     ],
     "prompt_number": 14
    },
    {
     "cell_type": "heading",
     "level": 3,
     "metadata": {},
     "source": [
      "$\\rho$: Effective contact rate $\\mathrm{[-]}$"
     ]
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "analyser.param_history(\"rho\", roll_window=None).tail()"
     ],
     "language": "python",
     "metadata": {},
     "outputs": [
      {
       "output_type": "display_data",
       "png": "\n",
       "text": [
        "<Figure size 648x432 with 1 Axes>"
       ]
      },
      {
       "html": [
        "<div>\n",
        "<style scoped>\n",
        "    .dataframe tbody tr th:only-of-type {\n",
        "        vertical-align: middle;\n",
        "    }\n",
        "\n",
        "    .dataframe tbody tr th {\n",
        "        vertical-align: top;\n",
        "    }\n",
        "\n",
        "    .dataframe thead th {\n",
        "        text-align: right;\n",
        "    }\n",
        "</style>\n",
        "<table border=\"1\" class=\"dataframe\">\n",
        "  <thead>\n",
        "    <tr style=\"text-align: right;\">\n",
        "      <th>Country</th>\n",
        "      <th>Bahrain</th>\n",
        "      <th>Bolivia</th>\n",
        "      <th>Brazil</th>\n",
        "      <th>Estonia</th>\n",
        "      <th>France</th>\n",
        "      <th>Iran</th>\n",
        "      <th>Italy</th>\n",
        "      <th>Portugal</th>\n",
        "      <th>Russia</th>\n",
        "      <th>United Arab Emirates</th>\n",
        "      <th>United States</th>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>Date</th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "    </tr>\n",
        "  </thead>\n",
        "  <tbody>\n",
        "    <tr>\n",
        "      <th>2020-09-26</th>\n",
        "      <td>0.026095</td>\n",
        "      <td>0.003774</td>\n",
        "      <td>0.016447</td>\n",
        "      <td>0.01741</td>\n",
        "      <td>0.008201</td>\n",
        "      <td>0.020229</td>\n",
        "      <td>0.008878</td>\n",
        "      <td>0.00198</td>\n",
        "      <td>0.001449</td>\n",
        "      <td>0.0231</td>\n",
        "      <td>0.002579</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>2020-09-27</th>\n",
        "      <td>0.026095</td>\n",
        "      <td>0.003774</td>\n",
        "      <td>0.016447</td>\n",
        "      <td>0.01741</td>\n",
        "      <td>0.008201</td>\n",
        "      <td>0.020229</td>\n",
        "      <td>0.008878</td>\n",
        "      <td>0.00198</td>\n",
        "      <td>0.001449</td>\n",
        "      <td>0.0231</td>\n",
        "      <td>0.002579</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>2020-09-28</th>\n",
        "      <td>0.026095</td>\n",
        "      <td>0.003774</td>\n",
        "      <td>0.016447</td>\n",
        "      <td>0.01741</td>\n",
        "      <td>0.008201</td>\n",
        "      <td>0.020229</td>\n",
        "      <td>0.008878</td>\n",
        "      <td>0.00198</td>\n",
        "      <td>0.001449</td>\n",
        "      <td>0.0231</td>\n",
        "      <td>0.002579</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>2020-09-29</th>\n",
        "      <td>0.026095</td>\n",
        "      <td>0.003774</td>\n",
        "      <td>0.016447</td>\n",
        "      <td>0.01741</td>\n",
        "      <td>0.008201</td>\n",
        "      <td>0.020229</td>\n",
        "      <td>0.008878</td>\n",
        "      <td>0.00198</td>\n",
        "      <td>0.001449</td>\n",
        "      <td>0.0231</td>\n",
        "      <td>0.002579</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>2020-09-30</th>\n",
        "      <td>0.026095</td>\n",
        "      <td>0.003774</td>\n",
        "      <td>0.016447</td>\n",
        "      <td>0.01741</td>\n",
        "      <td>0.008201</td>\n",
        "      <td>0.020229</td>\n",
        "      <td>0.008878</td>\n",
        "      <td>0.00198</td>\n",
        "      <td>0.001449</td>\n",
        "      <td>0.0231</td>\n",
        "      <td>0.002579</td>\n",
        "    </tr>\n",
        "  </tbody>\n",
        "</table>\n",
        "</div>"
       ],
       "output_type": "pyout",
       "prompt_number": 15,
       "text": [
        "Country      Bahrain   Bolivia    Brazil  Estonia    France      Iran  \\\n",
        "Date                                                                    \n",
        "2020-09-26  0.026095  0.003774  0.016447  0.01741  0.008201  0.020229   \n",
        "2020-09-27  0.026095  0.003774  0.016447  0.01741  0.008201  0.020229   \n",
        "2020-09-28  0.026095  0.003774  0.016447  0.01741  0.008201  0.020229   \n",
        "2020-09-29  0.026095  0.003774  0.016447  0.01741  0.008201  0.020229   \n",
        "2020-09-30  0.026095  0.003774  0.016447  0.01741  0.008201  0.020229   \n",
        "\n",
        "Country        Italy  Portugal    Russia  United Arab Emirates  United States  \n",
        "Date                                                                           \n",
        "2020-09-26  0.008878   0.00198  0.001449                0.0231       0.002579  \n",
        "2020-09-27  0.008878   0.00198  0.001449                0.0231       0.002579  \n",
        "2020-09-28  0.008878   0.00198  0.001449                0.0231       0.002579  \n",
        "2020-09-29  0.008878   0.00198  0.001449                0.0231       0.002579  \n",
        "2020-09-30  0.008878   0.00198  0.001449                0.0231       0.002579  "
       ]
      }
     ],
     "prompt_number": 15
    },
    {
     "cell_type": "heading",
     "level": 3,
     "metadata": {},
     "source": [
      "$\\sigma$: Recovery rate $\\mathrm{[-]}$"
     ]
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "analyser.param_history(\"sigma\", roll_window=None).tail()"
     ],
     "language": "python",
     "metadata": {},
     "outputs": [
      {
       "output_type": "display_data",
       "png": "\n",
       "text": [
        "<Figure size 648x432 with 1 Axes>"
       ]
      },
      {
       "html": [
        "<div>\n",
        "<style scoped>\n",
        "    .dataframe tbody tr th:only-of-type {\n",
        "        vertical-align: middle;\n",
        "    }\n",
        "\n",
        "    .dataframe tbody tr th {\n",
        "        vertical-align: top;\n",
        "    }\n",
        "\n",
        "    .dataframe thead th {\n",
        "        text-align: right;\n",
        "    }\n",
        "</style>\n",
        "<table border=\"1\" class=\"dataframe\">\n",
        "  <thead>\n",
        "    <tr style=\"text-align: right;\">\n",
        "      <th>Country</th>\n",
        "      <th>Bahrain</th>\n",
        "      <th>Bolivia</th>\n",
        "      <th>Brazil</th>\n",
        "      <th>Estonia</th>\n",
        "      <th>France</th>\n",
        "      <th>Iran</th>\n",
        "      <th>Italy</th>\n",
        "      <th>Portugal</th>\n",
        "      <th>Russia</th>\n",
        "      <th>United Arab Emirates</th>\n",
        "      <th>United States</th>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>Date</th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "    </tr>\n",
        "  </thead>\n",
        "  <tbody>\n",
        "    <tr>\n",
        "      <th>2020-09-26</th>\n",
        "      <td>0.022771</td>\n",
        "      <td>0.005191</td>\n",
        "      <td>0.017963</td>\n",
        "      <td>0.002901</td>\n",
        "      <td>0.000325</td>\n",
        "      <td>0.01222</td>\n",
        "      <td>0.004146</td>\n",
        "      <td>0.000994</td>\n",
        "      <td>0.000779</td>\n",
        "      <td>0.021788</td>\n",
        "      <td>0.001486</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>2020-09-27</th>\n",
        "      <td>0.022771</td>\n",
        "      <td>0.005191</td>\n",
        "      <td>0.017963</td>\n",
        "      <td>0.002901</td>\n",
        "      <td>0.000325</td>\n",
        "      <td>0.01222</td>\n",
        "      <td>0.004146</td>\n",
        "      <td>0.000994</td>\n",
        "      <td>0.000779</td>\n",
        "      <td>0.021788</td>\n",
        "      <td>0.001486</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>2020-09-28</th>\n",
        "      <td>0.022771</td>\n",
        "      <td>0.005191</td>\n",
        "      <td>0.017963</td>\n",
        "      <td>0.002901</td>\n",
        "      <td>0.000325</td>\n",
        "      <td>0.01222</td>\n",
        "      <td>0.004146</td>\n",
        "      <td>0.000994</td>\n",
        "      <td>0.000779</td>\n",
        "      <td>0.021788</td>\n",
        "      <td>0.001486</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>2020-09-29</th>\n",
        "      <td>0.022771</td>\n",
        "      <td>0.005191</td>\n",
        "      <td>0.017963</td>\n",
        "      <td>0.002901</td>\n",
        "      <td>0.000325</td>\n",
        "      <td>0.01222</td>\n",
        "      <td>0.004146</td>\n",
        "      <td>0.000994</td>\n",
        "      <td>0.000779</td>\n",
        "      <td>0.021788</td>\n",
        "      <td>0.001486</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>2020-09-30</th>\n",
        "      <td>0.022771</td>\n",
        "      <td>0.005191</td>\n",
        "      <td>0.017963</td>\n",
        "      <td>0.002901</td>\n",
        "      <td>0.000325</td>\n",
        "      <td>0.01222</td>\n",
        "      <td>0.004146</td>\n",
        "      <td>0.000994</td>\n",
        "      <td>0.000779</td>\n",
        "      <td>0.021788</td>\n",
        "      <td>0.001486</td>\n",
        "    </tr>\n",
        "  </tbody>\n",
        "</table>\n",
        "</div>"
       ],
       "output_type": "pyout",
       "prompt_number": 16,
       "text": [
        "Country      Bahrain   Bolivia    Brazil   Estonia    France     Iran  \\\n",
        "Date                                                                    \n",
        "2020-09-26  0.022771  0.005191  0.017963  0.002901  0.000325  0.01222   \n",
        "2020-09-27  0.022771  0.005191  0.017963  0.002901  0.000325  0.01222   \n",
        "2020-09-28  0.022771  0.005191  0.017963  0.002901  0.000325  0.01222   \n",
        "2020-09-29  0.022771  0.005191  0.017963  0.002901  0.000325  0.01222   \n",
        "2020-09-30  0.022771  0.005191  0.017963  0.002901  0.000325  0.01222   \n",
        "\n",
        "Country        Italy  Portugal    Russia  United Arab Emirates  United States  \n",
        "Date                                                                           \n",
        "2020-09-26  0.004146  0.000994  0.000779              0.021788       0.001486  \n",
        "2020-09-27  0.004146  0.000994  0.000779              0.021788       0.001486  \n",
        "2020-09-28  0.004146  0.000994  0.000779              0.021788       0.001486  \n",
        "2020-09-29  0.004146  0.000994  0.000779              0.021788       0.001486  \n",
        "2020-09-30  0.004146  0.000994  0.000779              0.021788       0.001486  "
       ]
      }
     ],
     "prompt_number": 16
    },
    {
     "cell_type": "heading",
     "level": 3,
     "metadata": {},
     "source": [
      "$\\kappa$: Mortality rate of infected cases $\\mathrm{[-]}$"
     ]
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "analyser.param_history(\"kappa\", roll_window=None).tail()"
     ],
     "language": "python",
     "metadata": {},
     "outputs": [
      {
       "output_type": "display_data",
       "png": "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\n",
       "text": [
        "<Figure size 648x432 with 1 Axes>"
       ]
      },
      {
       "html": [
        "<div>\n",
        "<style scoped>\n",
        "    .dataframe tbody tr th:only-of-type {\n",
        "        vertical-align: middle;\n",
        "    }\n",
        "\n",
        "    .dataframe tbody tr th {\n",
        "        vertical-align: top;\n",
        "    }\n",
        "\n",
        "    .dataframe thead th {\n",
        "        text-align: right;\n",
        "    }\n",
        "</style>\n",
        "<table border=\"1\" class=\"dataframe\">\n",
        "  <thead>\n",
        "    <tr style=\"text-align: right;\">\n",
        "      <th>Country</th>\n",
        "      <th>Bahrain</th>\n",
        "      <th>Bolivia</th>\n",
        "      <th>Brazil</th>\n",
        "      <th>Estonia</th>\n",
        "      <th>France</th>\n",
        "      <th>Iran</th>\n",
        "      <th>Italy</th>\n",
        "      <th>Portugal</th>\n",
        "      <th>Russia</th>\n",
        "      <th>United Arab Emirates</th>\n",
        "      <th>United States</th>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>Date</th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "    </tr>\n",
        "  </thead>\n",
        "  <tbody>\n",
        "    <tr>\n",
        "      <th>2020-09-26</th>\n",
        "      <td>0.000037</td>\n",
        "      <td>0.000098</td>\n",
        "      <td>0.000348</td>\n",
        "      <td>0.000026</td>\n",
        "      <td>0.000037</td>\n",
        "      <td>0.000719</td>\n",
        "      <td>0.000036</td>\n",
        "      <td>0.00001</td>\n",
        "      <td>0.000001</td>\n",
        "      <td>0.000002</td>\n",
        "      <td>0.000025</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>2020-09-27</th>\n",
        "      <td>0.000037</td>\n",
        "      <td>0.000098</td>\n",
        "      <td>0.000348</td>\n",
        "      <td>0.000026</td>\n",
        "      <td>0.000037</td>\n",
        "      <td>0.000719</td>\n",
        "      <td>0.000036</td>\n",
        "      <td>0.00001</td>\n",
        "      <td>0.000001</td>\n",
        "      <td>0.000002</td>\n",
        "      <td>0.000025</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>2020-09-28</th>\n",
        "      <td>0.000037</td>\n",
        "      <td>0.000098</td>\n",
        "      <td>0.000348</td>\n",
        "      <td>0.000026</td>\n",
        "      <td>0.000037</td>\n",
        "      <td>0.000719</td>\n",
        "      <td>0.000036</td>\n",
        "      <td>0.00001</td>\n",
        "      <td>0.000001</td>\n",
        "      <td>0.000002</td>\n",
        "      <td>0.000025</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>2020-09-29</th>\n",
        "      <td>0.000037</td>\n",
        "      <td>0.000098</td>\n",
        "      <td>0.000348</td>\n",
        "      <td>0.000026</td>\n",
        "      <td>0.000037</td>\n",
        "      <td>0.000719</td>\n",
        "      <td>0.000036</td>\n",
        "      <td>0.00001</td>\n",
        "      <td>0.000001</td>\n",
        "      <td>0.000002</td>\n",
        "      <td>0.000025</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>2020-09-30</th>\n",
        "      <td>0.000037</td>\n",
        "      <td>0.000098</td>\n",
        "      <td>0.000348</td>\n",
        "      <td>0.000026</td>\n",
        "      <td>0.000037</td>\n",
        "      <td>0.000719</td>\n",
        "      <td>0.000036</td>\n",
        "      <td>0.00001</td>\n",
        "      <td>0.000001</td>\n",
        "      <td>0.000002</td>\n",
        "      <td>0.000025</td>\n",
        "    </tr>\n",
        "  </tbody>\n",
        "</table>\n",
        "</div>"
       ],
       "output_type": "pyout",
       "prompt_number": 17,
       "text": [
        "Country      Bahrain   Bolivia    Brazil   Estonia    France      Iran  \\\n",
        "Date                                                                     \n",
        "2020-09-26  0.000037  0.000098  0.000348  0.000026  0.000037  0.000719   \n",
        "2020-09-27  0.000037  0.000098  0.000348  0.000026  0.000037  0.000719   \n",
        "2020-09-28  0.000037  0.000098  0.000348  0.000026  0.000037  0.000719   \n",
        "2020-09-29  0.000037  0.000098  0.000348  0.000026  0.000037  0.000719   \n",
        "2020-09-30  0.000037  0.000098  0.000348  0.000026  0.000037  0.000719   \n",
        "\n",
        "Country        Italy  Portugal    Russia  United Arab Emirates  United States  \n",
        "Date                                                                           \n",
        "2020-09-26  0.000036   0.00001  0.000001              0.000002       0.000025  \n",
        "2020-09-27  0.000036   0.00001  0.000001              0.000002       0.000025  \n",
        "2020-09-28  0.000036   0.00001  0.000001              0.000002       0.000025  \n",
        "2020-09-29  0.000036   0.00001  0.000001              0.000002       0.000025  \n",
        "2020-09-30  0.000036   0.00001  0.000001              0.000002       0.000025  "
       ]
      }
     ],
     "prompt_number": 17
    },
    {
     "cell_type": "heading",
     "level": 3,
     "metadata": {},
     "source": [
      "$\\theta$: Mortality rate of S$^\\ast$ cases $\\mathrm{[-]}$"
     ]
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "analyser.param_history(\"theta\", roll_window=None).tail()"
     ],
     "language": "python",
     "metadata": {},
     "outputs": [
      {
       "output_type": "display_data",
       "png": "\n",
       "text": [
        "<Figure size 648x432 with 1 Axes>"
       ]
      },
      {
       "html": [
        "<div>\n",
        "<style scoped>\n",
        "    .dataframe tbody tr th:only-of-type {\n",
        "        vertical-align: middle;\n",
        "    }\n",
        "\n",
        "    .dataframe tbody tr th {\n",
        "        vertical-align: top;\n",
        "    }\n",
        "\n",
        "    .dataframe thead th {\n",
        "        text-align: right;\n",
        "    }\n",
        "</style>\n",
        "<table border=\"1\" class=\"dataframe\">\n",
        "  <thead>\n",
        "    <tr style=\"text-align: right;\">\n",
        "      <th>Country</th>\n",
        "      <th>Bahrain</th>\n",
        "      <th>Bolivia</th>\n",
        "      <th>Brazil</th>\n",
        "      <th>Estonia</th>\n",
        "      <th>France</th>\n",
        "      <th>Iran</th>\n",
        "      <th>Italy</th>\n",
        "      <th>Portugal</th>\n",
        "      <th>Russia</th>\n",
        "      <th>United Arab Emirates</th>\n",
        "      <th>United States</th>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>Date</th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "    </tr>\n",
        "  </thead>\n",
        "  <tbody>\n",
        "    <tr>\n",
        "      <th>2020-09-26</th>\n",
        "      <td>0.000665</td>\n",
        "      <td>0.029286</td>\n",
        "      <td>0.0019</td>\n",
        "      <td>0.001088</td>\n",
        "      <td>0.000669</td>\n",
        "      <td>0.018762</td>\n",
        "      <td>0.019639</td>\n",
        "      <td>0.0022</td>\n",
        "      <td>0.028229</td>\n",
        "      <td>0.001465</td>\n",
        "      <td>0.003269</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>2020-09-27</th>\n",
        "      <td>0.000665</td>\n",
        "      <td>0.029286</td>\n",
        "      <td>0.0019</td>\n",
        "      <td>0.001088</td>\n",
        "      <td>0.000669</td>\n",
        "      <td>0.018762</td>\n",
        "      <td>0.019639</td>\n",
        "      <td>0.0022</td>\n",
        "      <td>0.028229</td>\n",
        "      <td>0.001465</td>\n",
        "      <td>0.003269</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>2020-09-28</th>\n",
        "      <td>0.000665</td>\n",
        "      <td>0.029286</td>\n",
        "      <td>0.0019</td>\n",
        "      <td>0.001088</td>\n",
        "      <td>0.000669</td>\n",
        "      <td>0.018762</td>\n",
        "      <td>0.019639</td>\n",
        "      <td>0.0022</td>\n",
        "      <td>0.028229</td>\n",
        "      <td>0.001465</td>\n",
        "      <td>0.003269</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>2020-09-29</th>\n",
        "      <td>0.000665</td>\n",
        "      <td>0.029286</td>\n",
        "      <td>0.0019</td>\n",
        "      <td>0.001088</td>\n",
        "      <td>0.000669</td>\n",
        "      <td>0.018762</td>\n",
        "      <td>0.019639</td>\n",
        "      <td>0.0022</td>\n",
        "      <td>0.028229</td>\n",
        "      <td>0.001465</td>\n",
        "      <td>0.003269</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>2020-09-30</th>\n",
        "      <td>0.000665</td>\n",
        "      <td>0.029286</td>\n",
        "      <td>0.0019</td>\n",
        "      <td>0.001088</td>\n",
        "      <td>0.000669</td>\n",
        "      <td>0.018762</td>\n",
        "      <td>0.019639</td>\n",
        "      <td>0.0022</td>\n",
        "      <td>0.028229</td>\n",
        "      <td>0.001465</td>\n",
        "      <td>0.003269</td>\n",
        "    </tr>\n",
        "  </tbody>\n",
        "</table>\n",
        "</div>"
       ],
       "output_type": "pyout",
       "prompt_number": 18,
       "text": [
        "Country      Bahrain   Bolivia  Brazil   Estonia    France      Iran  \\\n",
        "Date                                                                   \n",
        "2020-09-26  0.000665  0.029286  0.0019  0.001088  0.000669  0.018762   \n",
        "2020-09-27  0.000665  0.029286  0.0019  0.001088  0.000669  0.018762   \n",
        "2020-09-28  0.000665  0.029286  0.0019  0.001088  0.000669  0.018762   \n",
        "2020-09-29  0.000665  0.029286  0.0019  0.001088  0.000669  0.018762   \n",
        "2020-09-30  0.000665  0.029286  0.0019  0.001088  0.000669  0.018762   \n",
        "\n",
        "Country        Italy  Portugal    Russia  United Arab Emirates  United States  \n",
        "Date                                                                           \n",
        "2020-09-26  0.019639    0.0022  0.028229              0.001465       0.003269  \n",
        "2020-09-27  0.019639    0.0022  0.028229              0.001465       0.003269  \n",
        "2020-09-28  0.019639    0.0022  0.028229              0.001465       0.003269  \n",
        "2020-09-29  0.019639    0.0022  0.028229              0.001465       0.003269  \n",
        "2020-09-30  0.019639    0.0022  0.028229              0.001465       0.003269  "
       ]
      }
     ],
     "prompt_number": 18
    },
    {
     "cell_type": "markdown",
     "metadata": {},
     "source": [
      "## (Experimental): Relationship of OxCGRT index and parameter values\n",
      "Government responses will impact on parameter values of ODE models about 14 days later. Here, we will investigate on the relationship of [stringency index (from OxCGRT)](https://github.com/OxCGRT/covid-policy-tracker/blob/master/documentation/index_methodology.md) and reproduction number/model parameters.\n"
     ]
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "%matplotlib inline\n",
      "from matplotlib import pyplot as plt\n",
      "import seaborn as sns\n",
      "import pandas as pd"
     ],
     "language": "python",
     "metadata": {},
     "outputs": [],
     "prompt_number": 19
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "df = analyser.track()\n",
      "param_cols = [\"Rt\", *cs.SIRF.PARAMETERS]\n",
      "oxcgrt_cols = oxcgrt_data.OXCGRT_VARS[:]\n",
      "cols = param_cols + oxcgrt_cols\n",
      "delay = 14\n",
      "\n",
      "for col in param_cols:\n",
      "    df[col] = pd.to_numeric(df[col], errors=\"coerce\")\n",
      "    df[col] = df.groupby(\"Country\")[col].shift(0 - delay)\n",
      "\n",
      "df = df.dropna(how=\"any\")\n",
      "df = df.loc[:, [\"Date\", \"Country\", *cols]]\n",
      "track_df = df.copy()\n",
      "track_df.info()"
     ],
     "language": "python",
     "metadata": {},
     "outputs": [
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "<class 'pandas.core.frame.DataFrame'>\n",
        "Int64Index: 46682 entries, 0 to 46821\n",
        "Data columns (total 19 columns):\n",
        " #   Column                               Non-Null Count  Dtype         \n",
        "---  ------                               --------------  -----         \n",
        " 0   Date                                 46682 non-null  datetime64[ns]\n",
        " 1   Country                              46682 non-null  object        \n",
        " 2   Rt                                   46682 non-null  float64       \n",
        " 3   theta                                46682 non-null  float64       \n",
        " 4   kappa                                46682 non-null  float64       \n",
        " 5   rho                                  46682 non-null  float64       \n",
        " 6   sigma                                46682 non-null  float64       \n",
        " 7   School_closing                       46682 non-null  int64         \n",
        " 8   Workplace_closing                    46682 non-null  int64         \n",
        " 9   Cancel_events                        46682 non-null  int64         \n",
        " 10  Gatherings_restrictions              46682 non-null  int64         \n",
        " 11  Transport_closing                    46682 non-null  int64         \n",
        " 12  Stay_home_restrictions               46682 non-null  int64         \n",
        " 13  Internal_movement_restrictions       46682 non-null  int64         \n",
        " 14  International_movement_restrictions  46682 non-null  int64         \n",
        " 15  Information_campaigns                46682 non-null  int64         \n",
        " 16  Testing_policy                       46682 non-null  int64         \n",
        " 17  Contact_tracing                      46682 non-null  int64         \n",
        " 18  Stringency_index                     46682 non-null  float64       \n",
        "dtypes: datetime64[ns](1), float64(6), int64(11), object(1)\n",
        "memory usage: 7.1+ MB\n"
       ]
      }
     ],
     "prompt_number": 20
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "# Correlation\n",
      "df = track_df.copy()\n",
      "df.corr().style.background_gradient(axis=None)"
     ],
     "language": "python",
     "metadata": {},
     "outputs": [
      {
       "html": [
        "<style  type=\"text/css\" >\n",
        "#T_d79f7ea6_0328_11eb_a3f0_5254000998a1row0_col0,#T_d79f7ea6_0328_11eb_a3f0_5254000998a1row1_col1,#T_d79f7ea6_0328_11eb_a3f0_5254000998a1row2_col2,#T_d79f7ea6_0328_11eb_a3f0_5254000998a1row3_col3,#T_d79f7ea6_0328_11eb_a3f0_5254000998a1row4_col4,#T_d79f7ea6_0328_11eb_a3f0_5254000998a1row5_col5,#T_d79f7ea6_0328_11eb_a3f0_5254000998a1row6_col6,#T_d79f7ea6_0328_11eb_a3f0_5254000998a1row7_col7,#T_d79f7ea6_0328_11eb_a3f0_5254000998a1row8_col8,#T_d79f7ea6_0328_11eb_a3f0_5254000998a1row9_col9,#T_d79f7ea6_0328_11eb_a3f0_5254000998a1row10_col10,#T_d79f7ea6_0328_11eb_a3f0_5254000998a1row11_col11,#T_d79f7ea6_0328_11eb_a3f0_5254000998a1row12_col12,#T_d79f7ea6_0328_11eb_a3f0_5254000998a1row13_col13,#T_d79f7ea6_0328_11eb_a3f0_5254000998a1row14_col14,#T_d79f7ea6_0328_11eb_a3f0_5254000998a1row15_col15,#T_d79f7ea6_0328_11eb_a3f0_5254000998a1row16_col16{\n",
        "            background-color:  #023858;\n",
        "            color:  #f1f1f1;\n",
        "        }#T_d79f7ea6_0328_11eb_a3f0_5254000998a1row0_col1,#T_d79f7ea6_0328_11eb_a3f0_5254000998a1row1_col0{\n",
        "            background-color:  #ece7f2;\n",
        "            color:  #000000;\n",
        "        }#T_d79f7ea6_0328_11eb_a3f0_5254000998a1row0_col2,#T_d79f7ea6_0328_11eb_a3f0_5254000998a1row2_col0{\n",
        "            background-color:  #eae6f1;\n",
        "            color:  #000000;\n",
        "        }#T_d79f7ea6_0328_11eb_a3f0_5254000998a1row0_col3,#T_d79f7ea6_0328_11eb_a3f0_5254000998a1row3_col0{\n",
        "            background-color:  #97b7d7;\n",
        "            color:  #000000;\n",
        "        }#T_d79f7ea6_0328_11eb_a3f0_5254000998a1row0_col4,#T_d79f7ea6_0328_11eb_a3f0_5254000998a1row4_col0{\n",
        "            background-color:  #e7e3f0;\n",
        "            color:  #000000;\n",
        "        }#T_d79f7ea6_0328_11eb_a3f0_5254000998a1row0_col5,#T_d79f7ea6_0328_11eb_a3f0_5254000998a1row5_col0{\n",
        "            background-color:  #c8cde4;\n",
        "            color:  #000000;\n",
        "        }#T_d79f7ea6_0328_11eb_a3f0_5254000998a1row0_col6,#T_d79f7ea6_0328_11eb_a3f0_5254000998a1row6_col0{\n",
        "            background-color:  #b0c2de;\n",
        "            color:  #000000;\n",
        "        }#T_d79f7ea6_0328_11eb_a3f0_5254000998a1row0_col7,#T_d79f7ea6_0328_11eb_a3f0_5254000998a1row0_col10,#T_d79f7ea6_0328_11eb_a3f0_5254000998a1row3_col5,#T_d79f7ea6_0328_11eb_a3f0_5254000998a1row5_col3,#T_d79f7ea6_0328_11eb_a3f0_5254000998a1row7_col0,#T_d79f7ea6_0328_11eb_a3f0_5254000998a1row10_col0{\n",
        "            background-color:  #d9d8ea;\n",
        "            color:  #000000;\n",
        "        }#T_d79f7ea6_0328_11eb_a3f0_5254000998a1row0_col8,#T_d79f7ea6_0328_11eb_a3f0_5254000998a1row1_col15,#T_d79f7ea6_0328_11eb_a3f0_5254000998a1row2_col15,#T_d79f7ea6_0328_11eb_a3f0_5254000998a1row4_col9,#T_d79f7ea6_0328_11eb_a3f0_5254000998a1row8_col0,#T_d79f7ea6_0328_11eb_a3f0_5254000998a1row9_col4,#T_d79f7ea6_0328_11eb_a3f0_5254000998a1row15_col1,#T_d79f7ea6_0328_11eb_a3f0_5254000998a1row15_col2{\n",
        "            background-color:  #b8c6e0;\n",
        "            color:  #000000;\n",
        "        }#T_d79f7ea6_0328_11eb_a3f0_5254000998a1row0_col9,#T_d79f7ea6_0328_11eb_a3f0_5254000998a1row9_col0{\n",
        "            background-color:  #d4d4e8;\n",
        "            color:  #000000;\n",
        "        }#T_d79f7ea6_0328_11eb_a3f0_5254000998a1row0_col11,#T_d79f7ea6_0328_11eb_a3f0_5254000998a1row11_col0{\n",
        "            background-color:  #c9cee4;\n",
        "            color:  #000000;\n",
        "        }#T_d79f7ea6_0328_11eb_a3f0_5254000998a1row0_col12,#T_d79f7ea6_0328_11eb_a3f0_5254000998a1row12_col0{\n",
        "            background-color:  #dfddec;\n",
        "            color:  #000000;\n",
        "        }#T_d79f7ea6_0328_11eb_a3f0_5254000998a1row0_col13,#T_d79f7ea6_0328_11eb_a3f0_5254000998a1row4_col11,#T_d79f7ea6_0328_11eb_a3f0_5254000998a1row11_col4,#T_d79f7ea6_0328_11eb_a3f0_5254000998a1row13_col0{\n",
        "            background-color:  #bfc9e1;\n",
        "            color:  #000000;\n",
        "        }#T_d79f7ea6_0328_11eb_a3f0_5254000998a1row0_col14,#T_d79f7ea6_0328_11eb_a3f0_5254000998a1row14_col0{\n",
        "            background-color:  #ced0e6;\n",
        "            color:  #000000;\n",
        "        }#T_d79f7ea6_0328_11eb_a3f0_5254000998a1row0_col15,#T_d79f7ea6_0328_11eb_a3f0_5254000998a1row15_col0{\n",
        "            background-color:  #dddbec;\n",
        "            color:  #000000;\n",
        "        }#T_d79f7ea6_0328_11eb_a3f0_5254000998a1row0_col16,#T_d79f7ea6_0328_11eb_a3f0_5254000998a1row16_col0{\n",
        "            background-color:  #cccfe5;\n",
        "            color:  #000000;\n",
        "        }#T_d79f7ea6_0328_11eb_a3f0_5254000998a1row1_col2,#T_d79f7ea6_0328_11eb_a3f0_5254000998a1row2_col1{\n",
        "            background-color:  #023b5d;\n",
        "            color:  #f1f1f1;\n",
        "        }#T_d79f7ea6_0328_11eb_a3f0_5254000998a1row1_col3,#T_d79f7ea6_0328_11eb_a3f0_5254000998a1row2_col3,#T_d79f7ea6_0328_11eb_a3f0_5254000998a1row3_col1,#T_d79f7ea6_0328_11eb_a3f0_5254000998a1row3_col2,#T_d79f7ea6_0328_11eb_a3f0_5254000998a1row5_col7,#T_d79f7ea6_0328_11eb_a3f0_5254000998a1row7_col5,#T_d79f7ea6_0328_11eb_a3f0_5254000998a1row9_col16,#T_d79f7ea6_0328_11eb_a3f0_5254000998a1row11_col16,#T_d79f7ea6_0328_11eb_a3f0_5254000998a1row16_col9,#T_d79f7ea6_0328_11eb_a3f0_5254000998a1row16_col11{\n",
        "            background-color:  #046096;\n",
        "            color:  #f1f1f1;\n",
        "        }#T_d79f7ea6_0328_11eb_a3f0_5254000998a1row1_col4,#T_d79f7ea6_0328_11eb_a3f0_5254000998a1row4_col1,#T_d79f7ea6_0328_11eb_a3f0_5254000998a1row4_col8,#T_d79f7ea6_0328_11eb_a3f0_5254000998a1row8_col4{\n",
        "            background-color:  #c1cae2;\n",
        "            color:  #000000;\n",
        "        }#T_d79f7ea6_0328_11eb_a3f0_5254000998a1row1_col5,#T_d79f7ea6_0328_11eb_a3f0_5254000998a1row1_col8,#T_d79f7ea6_0328_11eb_a3f0_5254000998a1row2_col8,#T_d79f7ea6_0328_11eb_a3f0_5254000998a1row5_col1,#T_d79f7ea6_0328_11eb_a3f0_5254000998a1row8_col1,#T_d79f7ea6_0328_11eb_a3f0_5254000998a1row8_col2{\n",
        "            background-color:  #e0dded;\n",
        "            color:  #000000;\n",
        "        }#T_d79f7ea6_0328_11eb_a3f0_5254000998a1row1_col6,#T_d79f7ea6_0328_11eb_a3f0_5254000998a1row2_col16,#T_d79f7ea6_0328_11eb_a3f0_5254000998a1row6_col1,#T_d79f7ea6_0328_11eb_a3f0_5254000998a1row16_col2{\n",
        "            background-color:  #d3d4e7;\n",
        "            color:  #000000;\n",
        "        }#T_d79f7ea6_0328_11eb_a3f0_5254000998a1row1_col7,#T_d79f7ea6_0328_11eb_a3f0_5254000998a1row7_col1{\n",
        "            background-color:  #e9e5f1;\n",
        "            color:  #000000;\n",
        "        }#T_d79f7ea6_0328_11eb_a3f0_5254000998a1row1_col9,#T_d79f7ea6_0328_11eb_a3f0_5254000998a1row9_col1{\n",
        "            background-color:  #e0deed;\n",
        "            color:  #000000;\n",
        "        }#T_d79f7ea6_0328_11eb_a3f0_5254000998a1row1_col10,#T_d79f7ea6_0328_11eb_a3f0_5254000998a1row2_col12,#T_d79f7ea6_0328_11eb_a3f0_5254000998a1row10_col1,#T_d79f7ea6_0328_11eb_a3f0_5254000998a1row12_col2{\n",
        "            background-color:  #81aed2;\n",
        "            color:  #000000;\n",
        "        }#T_d79f7ea6_0328_11eb_a3f0_5254000998a1row1_col11,#T_d79f7ea6_0328_11eb_a3f0_5254000998a1row3_col12,#T_d79f7ea6_0328_11eb_a3f0_5254000998a1row11_col1,#T_d79f7ea6_0328_11eb_a3f0_5254000998a1row12_col3{\n",
        "            background-color:  #b1c2de;\n",
        "            color:  #000000;\n",
        "        }#T_d79f7ea6_0328_11eb_a3f0_5254000998a1row1_col12,#T_d79f7ea6_0328_11eb_a3f0_5254000998a1row4_col5,#T_d79f7ea6_0328_11eb_a3f0_5254000998a1row5_col4,#T_d79f7ea6_0328_11eb_a3f0_5254000998a1row12_col1{\n",
        "            background-color:  #89b1d4;\n",
        "            color:  #000000;\n",
        "        }#T_d79f7ea6_0328_11eb_a3f0_5254000998a1row1_col13,#T_d79f7ea6_0328_11eb_a3f0_5254000998a1row13_col1{\n",
        "            background-color:  #f4edf6;\n",
        "            color:  #000000;\n",
        "        }#T_d79f7ea6_0328_11eb_a3f0_5254000998a1row1_col14,#T_d79f7ea6_0328_11eb_a3f0_5254000998a1row14_col1{\n",
        "            background-color:  #f6eff7;\n",
        "            color:  #000000;\n",
        "        }#T_d79f7ea6_0328_11eb_a3f0_5254000998a1row1_col16,#T_d79f7ea6_0328_11eb_a3f0_5254000998a1row16_col1{\n",
        "            background-color:  #cdd0e5;\n",
        "            color:  #000000;\n",
        "        }#T_d79f7ea6_0328_11eb_a3f0_5254000998a1row2_col4,#T_d79f7ea6_0328_11eb_a3f0_5254000998a1row4_col2,#T_d79f7ea6_0328_11eb_a3f0_5254000998a1row4_col12,#T_d79f7ea6_0328_11eb_a3f0_5254000998a1row12_col4{\n",
        "            background-color:  #d0d1e6;\n",
        "            color:  #000000;\n",
        "        }#T_d79f7ea6_0328_11eb_a3f0_5254000998a1row2_col5,#T_d79f7ea6_0328_11eb_a3f0_5254000998a1row5_col2{\n",
        "            background-color:  #e4e1ef;\n",
        "            color:  #000000;\n",
        "        }#T_d79f7ea6_0328_11eb_a3f0_5254000998a1row2_col6,#T_d79f7ea6_0328_11eb_a3f0_5254000998a1row3_col8,#T_d79f7ea6_0328_11eb_a3f0_5254000998a1row6_col2,#T_d79f7ea6_0328_11eb_a3f0_5254000998a1row8_col3{\n",
        "            background-color:  #dad9ea;\n",
        "            color:  #000000;\n",
        "        }#T_d79f7ea6_0328_11eb_a3f0_5254000998a1row2_col7,#T_d79f7ea6_0328_11eb_a3f0_5254000998a1row7_col2{\n",
        "            background-color:  #ede7f2;\n",
        "            color:  #000000;\n",
        "        }#T_d79f7ea6_0328_11eb_a3f0_5254000998a1row2_col9,#T_d79f7ea6_0328_11eb_a3f0_5254000998a1row9_col2{\n",
        "            background-color:  #e2dfee;\n",
        "            color:  #000000;\n",
        "        }#T_d79f7ea6_0328_11eb_a3f0_5254000998a1row2_col10,#T_d79f7ea6_0328_11eb_a3f0_5254000998a1row3_col10,#T_d79f7ea6_0328_11eb_a3f0_5254000998a1row10_col2,#T_d79f7ea6_0328_11eb_a3f0_5254000998a1row10_col3{\n",
        "            background-color:  #86b0d3;\n",
        "            color:  #000000;\n",
        "        }#T_d79f7ea6_0328_11eb_a3f0_5254000998a1row2_col11,#T_d79f7ea6_0328_11eb_a3f0_5254000998a1row11_col2{\n",
        "            background-color:  #b5c4df;\n",
        "            color:  #000000;\n",
        "        }#T_d79f7ea6_0328_11eb_a3f0_5254000998a1row2_col13,#T_d79f7ea6_0328_11eb_a3f0_5254000998a1row13_col2{\n",
        "            background-color:  #f5eff6;\n",
        "            color:  #000000;\n",
        "        }#T_d79f7ea6_0328_11eb_a3f0_5254000998a1row2_col14,#T_d79f7ea6_0328_11eb_a3f0_5254000998a1row14_col2{\n",
        "            background-color:  #f0eaf4;\n",
        "            color:  #000000;\n",
        "        }#T_d79f7ea6_0328_11eb_a3f0_5254000998a1row3_col4,#T_d79f7ea6_0328_11eb_a3f0_5254000998a1row4_col3{\n",
        "            background-color:  #acc0dd;\n",
        "            color:  #000000;\n",
        "        }#T_d79f7ea6_0328_11eb_a3f0_5254000998a1row3_col6,#T_d79f7ea6_0328_11eb_a3f0_5254000998a1row3_col16,#T_d79f7ea6_0328_11eb_a3f0_5254000998a1row6_col3,#T_d79f7ea6_0328_11eb_a3f0_5254000998a1row16_col3{\n",
        "            background-color:  #d1d2e6;\n",
        "            color:  #000000;\n",
        "        }#T_d79f7ea6_0328_11eb_a3f0_5254000998a1row3_col7,#T_d79f7ea6_0328_11eb_a3f0_5254000998a1row7_col3{\n",
        "            background-color:  #f1ebf5;\n",
        "            color:  #000000;\n",
        "        }#T_d79f7ea6_0328_11eb_a3f0_5254000998a1row3_col9,#T_d79f7ea6_0328_11eb_a3f0_5254000998a1row9_col3{\n",
        "            background-color:  #e3e0ee;\n",
        "            color:  #000000;\n",
        "        }#T_d79f7ea6_0328_11eb_a3f0_5254000998a1row3_col11,#T_d79f7ea6_0328_11eb_a3f0_5254000998a1row11_col3{\n",
        "            background-color:  #b7c5df;\n",
        "            color:  #000000;\n",
        "        }#T_d79f7ea6_0328_11eb_a3f0_5254000998a1row3_col13,#T_d79f7ea6_0328_11eb_a3f0_5254000998a1row13_col3{\n",
        "            background-color:  #f8f1f8;\n",
        "            color:  #000000;\n",
        "        }#T_d79f7ea6_0328_11eb_a3f0_5254000998a1row3_col14,#T_d79f7ea6_0328_11eb_a3f0_5254000998a1row14_col3{\n",
        "            background-color:  #fff7fb;\n",
        "            color:  #000000;\n",
        "        }#T_d79f7ea6_0328_11eb_a3f0_5254000998a1row3_col15,#T_d79f7ea6_0328_11eb_a3f0_5254000998a1row15_col3{\n",
        "            background-color:  #d5d5e8;\n",
        "            color:  #000000;\n",
        "        }#T_d79f7ea6_0328_11eb_a3f0_5254000998a1row4_col6,#T_d79f7ea6_0328_11eb_a3f0_5254000998a1row6_col4{\n",
        "            background-color:  #b4c4df;\n",
        "            color:  #000000;\n",
        "        }#T_d79f7ea6_0328_11eb_a3f0_5254000998a1row4_col7,#T_d79f7ea6_0328_11eb_a3f0_5254000998a1row7_col4{\n",
        "            background-color:  #a5bddb;\n",
        "            color:  #000000;\n",
        "        }#T_d79f7ea6_0328_11eb_a3f0_5254000998a1row4_col10,#T_d79f7ea6_0328_11eb_a3f0_5254000998a1row10_col4{\n",
        "            background-color:  #a8bedc;\n",
        "            color:  #000000;\n",
        "        }#T_d79f7ea6_0328_11eb_a3f0_5254000998a1row4_col13,#T_d79f7ea6_0328_11eb_a3f0_5254000998a1row13_col4{\n",
        "            background-color:  #a9bfdc;\n",
        "            color:  #000000;\n",
        "        }#T_d79f7ea6_0328_11eb_a3f0_5254000998a1row4_col14,#T_d79f7ea6_0328_11eb_a3f0_5254000998a1row14_col4{\n",
        "            background-color:  #d7d6e9;\n",
        "            color:  #000000;\n",
        "        }#T_d79f7ea6_0328_11eb_a3f0_5254000998a1row4_col15,#T_d79f7ea6_0328_11eb_a3f0_5254000998a1row15_col4{\n",
        "            background-color:  #99b8d8;\n",
        "            color:  #000000;\n",
        "        }#T_d79f7ea6_0328_11eb_a3f0_5254000998a1row4_col16,#T_d79f7ea6_0328_11eb_a3f0_5254000998a1row16_col4{\n",
        "            background-color:  #9cb9d9;\n",
        "            color:  #000000;\n",
        "        }#T_d79f7ea6_0328_11eb_a3f0_5254000998a1row5_col6,#T_d79f7ea6_0328_11eb_a3f0_5254000998a1row6_col5{\n",
        "            background-color:  #05659f;\n",
        "            color:  #f1f1f1;\n",
        "        }#T_d79f7ea6_0328_11eb_a3f0_5254000998a1row5_col8,#T_d79f7ea6_0328_11eb_a3f0_5254000998a1row6_col10,#T_d79f7ea6_0328_11eb_a3f0_5254000998a1row8_col5,#T_d79f7ea6_0328_11eb_a3f0_5254000998a1row10_col6{\n",
        "            background-color:  #0c74b2;\n",
        "            color:  #f1f1f1;\n",
        "        }#T_d79f7ea6_0328_11eb_a3f0_5254000998a1row5_col9,#T_d79f7ea6_0328_11eb_a3f0_5254000998a1row9_col5{\n",
        "            background-color:  #157ab5;\n",
        "            color:  #000000;\n",
        "        }#T_d79f7ea6_0328_11eb_a3f0_5254000998a1row5_col10,#T_d79f7ea6_0328_11eb_a3f0_5254000998a1row10_col5,#T_d79f7ea6_0328_11eb_a3f0_5254000998a1row12_col14,#T_d79f7ea6_0328_11eb_a3f0_5254000998a1row14_col12{\n",
        "            background-color:  #187cb6;\n",
        "            color:  #000000;\n",
        "        }#T_d79f7ea6_0328_11eb_a3f0_5254000998a1row5_col11,#T_d79f7ea6_0328_11eb_a3f0_5254000998a1row7_col12,#T_d79f7ea6_0328_11eb_a3f0_5254000998a1row11_col5,#T_d79f7ea6_0328_11eb_a3f0_5254000998a1row12_col7{\n",
        "            background-color:  #2182b9;\n",
        "            color:  #000000;\n",
        "        }#T_d79f7ea6_0328_11eb_a3f0_5254000998a1row5_col12,#T_d79f7ea6_0328_11eb_a3f0_5254000998a1row12_col5{\n",
        "            background-color:  #3f93c2;\n",
        "            color:  #000000;\n",
        "        }#T_d79f7ea6_0328_11eb_a3f0_5254000998a1row5_col13,#T_d79f7ea6_0328_11eb_a3f0_5254000998a1row13_col5{\n",
        "            background-color:  #056ba7;\n",
        "            color:  #f1f1f1;\n",
        "        }#T_d79f7ea6_0328_11eb_a3f0_5254000998a1row5_col14,#T_d79f7ea6_0328_11eb_a3f0_5254000998a1row14_col5{\n",
        "            background-color:  #308cbe;\n",
        "            color:  #000000;\n",
        "        }#T_d79f7ea6_0328_11eb_a3f0_5254000998a1row5_col15,#T_d79f7ea6_0328_11eb_a3f0_5254000998a1row15_col5{\n",
        "            background-color:  #79abd0;\n",
        "            color:  #000000;\n",
        "        }#T_d79f7ea6_0328_11eb_a3f0_5254000998a1row5_col16,#T_d79f7ea6_0328_11eb_a3f0_5254000998a1row16_col5{\n",
        "            background-color:  #045b8e;\n",
        "            color:  #f1f1f1;\n",
        "        }#T_d79f7ea6_0328_11eb_a3f0_5254000998a1row6_col7,#T_d79f7ea6_0328_11eb_a3f0_5254000998a1row7_col6,#T_d79f7ea6_0328_11eb_a3f0_5254000998a1row8_col11,#T_d79f7ea6_0328_11eb_a3f0_5254000998a1row11_col8{\n",
        "            background-color:  #04649d;\n",
        "            color:  #f1f1f1;\n",
        "        }#T_d79f7ea6_0328_11eb_a3f0_5254000998a1row6_col8,#T_d79f7ea6_0328_11eb_a3f0_5254000998a1row8_col6,#T_d79f7ea6_0328_11eb_a3f0_5254000998a1row8_col13,#T_d79f7ea6_0328_11eb_a3f0_5254000998a1row13_col8{\n",
        "            background-color:  #056aa6;\n",
        "            color:  #f1f1f1;\n",
        "        }#T_d79f7ea6_0328_11eb_a3f0_5254000998a1row6_col9,#T_d79f7ea6_0328_11eb_a3f0_5254000998a1row9_col6{\n",
        "            background-color:  #056faf;\n",
        "            color:  #f1f1f1;\n",
        "        }#T_d79f7ea6_0328_11eb_a3f0_5254000998a1row6_col11,#T_d79f7ea6_0328_11eb_a3f0_5254000998a1row11_col6{\n",
        "            background-color:  #167bb6;\n",
        "            color:  #000000;\n",
        "        }#T_d79f7ea6_0328_11eb_a3f0_5254000998a1row6_col12,#T_d79f7ea6_0328_11eb_a3f0_5254000998a1row6_col14,#T_d79f7ea6_0328_11eb_a3f0_5254000998a1row12_col6,#T_d79f7ea6_0328_11eb_a3f0_5254000998a1row14_col6{\n",
        "            background-color:  #2f8bbe;\n",
        "            color:  #000000;\n",
        "        }#T_d79f7ea6_0328_11eb_a3f0_5254000998a1row6_col13,#T_d79f7ea6_0328_11eb_a3f0_5254000998a1row13_col6{\n",
        "            background-color:  #045e94;\n",
        "            color:  #f1f1f1;\n",
        "        }#T_d79f7ea6_0328_11eb_a3f0_5254000998a1row6_col15,#T_d79f7ea6_0328_11eb_a3f0_5254000998a1row15_col6{\n",
        "            background-color:  #63a2cb;\n",
        "            color:  #000000;\n",
        "        }#T_d79f7ea6_0328_11eb_a3f0_5254000998a1row6_col16,#T_d79f7ea6_0328_11eb_a3f0_5254000998a1row16_col6{\n",
        "            background-color:  #03517e;\n",
        "            color:  #f1f1f1;\n",
        "        }#T_d79f7ea6_0328_11eb_a3f0_5254000998a1row7_col8,#T_d79f7ea6_0328_11eb_a3f0_5254000998a1row8_col7{\n",
        "            background-color:  #056dac;\n",
        "            color:  #f1f1f1;\n",
        "        }#T_d79f7ea6_0328_11eb_a3f0_5254000998a1row7_col9,#T_d79f7ea6_0328_11eb_a3f0_5254000998a1row8_col12,#T_d79f7ea6_0328_11eb_a3f0_5254000998a1row9_col7,#T_d79f7ea6_0328_11eb_a3f0_5254000998a1row12_col8{\n",
        "            background-color:  #2383ba;\n",
        "            color:  #000000;\n",
        "        }#T_d79f7ea6_0328_11eb_a3f0_5254000998a1row7_col10,#T_d79f7ea6_0328_11eb_a3f0_5254000998a1row10_col7,#T_d79f7ea6_0328_11eb_a3f0_5254000998a1row11_col12,#T_d79f7ea6_0328_11eb_a3f0_5254000998a1row12_col11{\n",
        "            background-color:  #2c89bd;\n",
        "            color:  #000000;\n",
        "        }#T_d79f7ea6_0328_11eb_a3f0_5254000998a1row7_col11,#T_d79f7ea6_0328_11eb_a3f0_5254000998a1row11_col7{\n",
        "            background-color:  #2786bb;\n",
        "            color:  #000000;\n",
        "        }#T_d79f7ea6_0328_11eb_a3f0_5254000998a1row7_col13,#T_d79f7ea6_0328_11eb_a3f0_5254000998a1row13_col7{\n",
        "            background-color:  #045585;\n",
        "            color:  #f1f1f1;\n",
        "        }#T_d79f7ea6_0328_11eb_a3f0_5254000998a1row7_col14,#T_d79f7ea6_0328_11eb_a3f0_5254000998a1row14_col7{\n",
        "            background-color:  #0a73b2;\n",
        "            color:  #f1f1f1;\n",
        "        }#T_d79f7ea6_0328_11eb_a3f0_5254000998a1row7_col15,#T_d79f7ea6_0328_11eb_a3f0_5254000998a1row15_col7{\n",
        "            background-color:  #1c7fb8;\n",
        "            color:  #000000;\n",
        "        }#T_d79f7ea6_0328_11eb_a3f0_5254000998a1row7_col16,#T_d79f7ea6_0328_11eb_a3f0_5254000998a1row16_col7{\n",
        "            background-color:  #04598c;\n",
        "            color:  #f1f1f1;\n",
        "        }#T_d79f7ea6_0328_11eb_a3f0_5254000998a1row8_col9,#T_d79f7ea6_0328_11eb_a3f0_5254000998a1row9_col8,#T_d79f7ea6_0328_11eb_a3f0_5254000998a1row10_col16,#T_d79f7ea6_0328_11eb_a3f0_5254000998a1row16_col10{\n",
        "            background-color:  #045e93;\n",
        "            color:  #f1f1f1;\n",
        "        }#T_d79f7ea6_0328_11eb_a3f0_5254000998a1row8_col10,#T_d79f7ea6_0328_11eb_a3f0_5254000998a1row10_col8{\n",
        "            background-color:  #056ba9;\n",
        "            color:  #f1f1f1;\n",
        "        }#T_d79f7ea6_0328_11eb_a3f0_5254000998a1row8_col14,#T_d79f7ea6_0328_11eb_a3f0_5254000998a1row14_col8{\n",
        "            background-color:  #2484ba;\n",
        "            color:  #000000;\n",
        "        }#T_d79f7ea6_0328_11eb_a3f0_5254000998a1row8_col15,#T_d79f7ea6_0328_11eb_a3f0_5254000998a1row15_col8{\n",
        "            background-color:  #7bacd1;\n",
        "            color:  #000000;\n",
        "        }#T_d79f7ea6_0328_11eb_a3f0_5254000998a1row8_col16,#T_d79f7ea6_0328_11eb_a3f0_5254000998a1row16_col8{\n",
        "            background-color:  #045280;\n",
        "            color:  #f1f1f1;\n",
        "        }#T_d79f7ea6_0328_11eb_a3f0_5254000998a1row9_col10,#T_d79f7ea6_0328_11eb_a3f0_5254000998a1row10_col9{\n",
        "            background-color:  #056ead;\n",
        "            color:  #f1f1f1;\n",
        "        }#T_d79f7ea6_0328_11eb_a3f0_5254000998a1row9_col11,#T_d79f7ea6_0328_11eb_a3f0_5254000998a1row11_col9{\n",
        "            background-color:  #0567a1;\n",
        "            color:  #f1f1f1;\n",
        "        }#T_d79f7ea6_0328_11eb_a3f0_5254000998a1row9_col12,#T_d79f7ea6_0328_11eb_a3f0_5254000998a1row12_col9{\n",
        "            background-color:  #3b92c1;\n",
        "            color:  #000000;\n",
        "        }#T_d79f7ea6_0328_11eb_a3f0_5254000998a1row9_col13,#T_d79f7ea6_0328_11eb_a3f0_5254000998a1row12_col13,#T_d79f7ea6_0328_11eb_a3f0_5254000998a1row13_col9,#T_d79f7ea6_0328_11eb_a3f0_5254000998a1row13_col12{\n",
        "            background-color:  #2a88bc;\n",
        "            color:  #000000;\n",
        "        }#T_d79f7ea6_0328_11eb_a3f0_5254000998a1row9_col14,#T_d79f7ea6_0328_11eb_a3f0_5254000998a1row14_col9{\n",
        "            background-color:  #358fc0;\n",
        "            color:  #000000;\n",
        "        }#T_d79f7ea6_0328_11eb_a3f0_5254000998a1row9_col15,#T_d79f7ea6_0328_11eb_a3f0_5254000998a1row15_col9{\n",
        "            background-color:  #b3c3de;\n",
        "            color:  #000000;\n",
        "        }#T_d79f7ea6_0328_11eb_a3f0_5254000998a1row10_col11,#T_d79f7ea6_0328_11eb_a3f0_5254000998a1row11_col10{\n",
        "            background-color:  #045a8d;\n",
        "            color:  #f1f1f1;\n",
        "        }#T_d79f7ea6_0328_11eb_a3f0_5254000998a1row10_col12,#T_d79f7ea6_0328_11eb_a3f0_5254000998a1row12_col10,#T_d79f7ea6_0328_11eb_a3f0_5254000998a1row13_col15,#T_d79f7ea6_0328_11eb_a3f0_5254000998a1row15_col13{\n",
        "            background-color:  #1e80b8;\n",
        "            color:  #000000;\n",
        "        }#T_d79f7ea6_0328_11eb_a3f0_5254000998a1row10_col13,#T_d79f7ea6_0328_11eb_a3f0_5254000998a1row13_col10{\n",
        "            background-color:  #4c99c5;\n",
        "            color:  #000000;\n",
        "        }#T_d79f7ea6_0328_11eb_a3f0_5254000998a1row10_col14,#T_d79f7ea6_0328_11eb_a3f0_5254000998a1row14_col10{\n",
        "            background-color:  #75a9cf;\n",
        "            color:  #000000;\n",
        "        }#T_d79f7ea6_0328_11eb_a3f0_5254000998a1row10_col15,#T_d79f7ea6_0328_11eb_a3f0_5254000998a1row15_col10{\n",
        "            background-color:  #6fa7ce;\n",
        "            color:  #000000;\n",
        "        }#T_d79f7ea6_0328_11eb_a3f0_5254000998a1row11_col13,#T_d79f7ea6_0328_11eb_a3f0_5254000998a1row13_col11{\n",
        "            background-color:  #3790c0;\n",
        "            color:  #000000;\n",
        "        }#T_d79f7ea6_0328_11eb_a3f0_5254000998a1row11_col14,#T_d79f7ea6_0328_11eb_a3f0_5254000998a1row14_col11{\n",
        "            background-color:  #60a1ca;\n",
        "            color:  #000000;\n",
        "        }#T_d79f7ea6_0328_11eb_a3f0_5254000998a1row11_col15,#T_d79f7ea6_0328_11eb_a3f0_5254000998a1row15_col11{\n",
        "            background-color:  #88b1d4;\n",
        "            color:  #000000;\n",
        "        }#T_d79f7ea6_0328_11eb_a3f0_5254000998a1row12_col15,#T_d79f7ea6_0328_11eb_a3f0_5254000998a1row15_col12{\n",
        "            background-color:  #2987bc;\n",
        "            color:  #000000;\n",
        "        }#T_d79f7ea6_0328_11eb_a3f0_5254000998a1row12_col16,#T_d79f7ea6_0328_11eb_a3f0_5254000998a1row16_col12{\n",
        "            background-color:  #0570b0;\n",
        "            color:  #f1f1f1;\n",
        "        }#T_d79f7ea6_0328_11eb_a3f0_5254000998a1row13_col14,#T_d79f7ea6_0328_11eb_a3f0_5254000998a1row14_col13{\n",
        "            background-color:  #056dab;\n",
        "            color:  #f1f1f1;\n",
        "        }#T_d79f7ea6_0328_11eb_a3f0_5254000998a1row13_col16,#T_d79f7ea6_0328_11eb_a3f0_5254000998a1row16_col13{\n",
        "            background-color:  #045d92;\n",
        "            color:  #f1f1f1;\n",
        "        }#T_d79f7ea6_0328_11eb_a3f0_5254000998a1row14_col15,#T_d79f7ea6_0328_11eb_a3f0_5254000998a1row15_col14{\n",
        "            background-color:  #4295c3;\n",
        "            color:  #000000;\n",
        "        }#T_d79f7ea6_0328_11eb_a3f0_5254000998a1row14_col16,#T_d79f7ea6_0328_11eb_a3f0_5254000998a1row16_col14{\n",
        "            background-color:  #2d8abd;\n",
        "            color:  #000000;\n",
        "        }#T_d79f7ea6_0328_11eb_a3f0_5254000998a1row15_col16,#T_d79f7ea6_0328_11eb_a3f0_5254000998a1row16_col15{\n",
        "            background-color:  #4496c3;\n",
        "            color:  #000000;\n",
        "        }</style><table id=\"T_d79f7ea6_0328_11eb_a3f0_5254000998a1\" ><thead>    <tr>        <th class=\"blank level0\" ></th>        <th class=\"col_heading level0 col0\" >Rt</th>        <th class=\"col_heading level0 col1\" >theta</th>        <th class=\"col_heading level0 col2\" >kappa</th>        <th class=\"col_heading level0 col3\" >rho</th>        <th class=\"col_heading level0 col4\" >sigma</th>        <th class=\"col_heading level0 col5\" >School_closing</th>        <th class=\"col_heading level0 col6\" >Workplace_closing</th>        <th class=\"col_heading level0 col7\" >Cancel_events</th>        <th class=\"col_heading level0 col8\" >Gatherings_restrictions</th>        <th class=\"col_heading level0 col9\" >Transport_closing</th>        <th class=\"col_heading level0 col10\" >Stay_home_restrictions</th>        <th class=\"col_heading level0 col11\" >Internal_movement_restrictions</th>        <th class=\"col_heading level0 col12\" >International_movement_restrictions</th>        <th class=\"col_heading level0 col13\" >Information_campaigns</th>        <th class=\"col_heading level0 col14\" >Testing_policy</th>        <th class=\"col_heading level0 col15\" >Contact_tracing</th>        <th class=\"col_heading level0 col16\" >Stringency_index</th>    </tr></thead><tbody>\n",
        "                <tr>\n",
        "                        <th id=\"T_d79f7ea6_0328_11eb_a3f0_5254000998a1level0_row0\" class=\"row_heading level0 row0\" >Rt</th>\n",
        "                        <td id=\"T_d79f7ea6_0328_11eb_a3f0_5254000998a1row0_col0\" class=\"data row0 col0\" >1.000000</td>\n",
        "                        <td id=\"T_d79f7ea6_0328_11eb_a3f0_5254000998a1row0_col1\" class=\"data row0 col1\" >-0.273865</td>\n",
        "                        <td id=\"T_d79f7ea6_0328_11eb_a3f0_5254000998a1row0_col2\" class=\"data row0 col2\" >-0.260772</td>\n",
        "                        <td id=\"T_d79f7ea6_0328_11eb_a3f0_5254000998a1row0_col3\" class=\"data row0 col3\" >0.144395</td>\n",
        "                        <td id=\"T_d79f7ea6_0328_11eb_a3f0_5254000998a1row0_col4\" class=\"data row0 col4\" >-0.239587</td>\n",
        "                        <td id=\"T_d79f7ea6_0328_11eb_a3f0_5254000998a1row0_col5\" class=\"data row0 col5\" >-0.055780</td>\n",
        "                        <td id=\"T_d79f7ea6_0328_11eb_a3f0_5254000998a1row0_col6\" class=\"data row0 col6\" >0.049169</td>\n",
        "                        <td id=\"T_d79f7ea6_0328_11eb_a3f0_5254000998a1row0_col7\" class=\"data row0 col7\" >-0.154677</td>\n",
        "                        <td id=\"T_d79f7ea6_0328_11eb_a3f0_5254000998a1row0_col8\" class=\"data row0 col8\" >0.013690</td>\n",
        "                        <td id=\"T_d79f7ea6_0328_11eb_a3f0_5254000998a1row0_col9\" class=\"data row0 col9\" >-0.117501</td>\n",
        "                        <td id=\"T_d79f7ea6_0328_11eb_a3f0_5254000998a1row0_col10\" class=\"data row0 col10\" >-0.154595</td>\n",
        "                        <td id=\"T_d79f7ea6_0328_11eb_a3f0_5254000998a1row0_col11\" class=\"data row0 col11\" >-0.061208</td>\n",
        "                        <td id=\"T_d79f7ea6_0328_11eb_a3f0_5254000998a1row0_col12\" class=\"data row0 col12\" >-0.186065</td>\n",
        "                        <td id=\"T_d79f7ea6_0328_11eb_a3f0_5254000998a1row0_col13\" class=\"data row0 col13\" >-0.016343</td>\n",
        "                        <td id=\"T_d79f7ea6_0328_11eb_a3f0_5254000998a1row0_col14\" class=\"data row0 col14\" >-0.080998</td>\n",
        "                        <td id=\"T_d79f7ea6_0328_11eb_a3f0_5254000998a1row0_col15\" class=\"data row0 col15\" >-0.172094</td>\n",
        "                        <td id=\"T_d79f7ea6_0328_11eb_a3f0_5254000998a1row0_col16\" class=\"data row0 col16\" >-0.075081</td>\n",
        "            </tr>\n",
        "            <tr>\n",
        "                        <th id=\"T_d79f7ea6_0328_11eb_a3f0_5254000998a1level0_row1\" class=\"row_heading level0 row1\" >theta</th>\n",
        "                        <td id=\"T_d79f7ea6_0328_11eb_a3f0_5254000998a1row1_col0\" class=\"data row1 col0\" >-0.273865</td>\n",
        "                        <td id=\"T_d79f7ea6_0328_11eb_a3f0_5254000998a1row1_col1\" class=\"data row1 col1\" >1.000000</td>\n",
        "                        <td id=\"T_d79f7ea6_0328_11eb_a3f0_5254000998a1row1_col2\" class=\"data row1 col2\" >0.977692</td>\n",
        "                        <td id=\"T_d79f7ea6_0328_11eb_a3f0_5254000998a1row1_col3\" class=\"data row1 col3\" >0.768104</td>\n",
        "                        <td id=\"T_d79f7ea6_0328_11eb_a3f0_5254000998a1row1_col4\" class=\"data row1 col4\" >-0.025782</td>\n",
        "                        <td id=\"T_d79f7ea6_0328_11eb_a3f0_5254000998a1row1_col5\" class=\"data row1 col5\" >-0.189097</td>\n",
        "                        <td id=\"T_d79f7ea6_0328_11eb_a3f0_5254000998a1row1_col6\" class=\"data row1 col6\" >-0.114430</td>\n",
        "                        <td id=\"T_d79f7ea6_0328_11eb_a3f0_5254000998a1row1_col7\" class=\"data row1 col7\" >-0.256881</td>\n",
        "                        <td id=\"T_d79f7ea6_0328_11eb_a3f0_5254000998a1row1_col8\" class=\"data row1 col8\" >-0.194349</td>\n",
        "                        <td id=\"T_d79f7ea6_0328_11eb_a3f0_5254000998a1row1_col9\" class=\"data row1 col9\" >-0.199323</td>\n",
        "                        <td id=\"T_d79f7ea6_0328_11eb_a3f0_5254000998a1row1_col10\" class=\"data row1 col10\" >0.221196</td>\n",
        "                        <td id=\"T_d79f7ea6_0328_11eb_a3f0_5254000998a1row1_col11\" class=\"data row1 col11\" >0.041007</td>\n",
        "                        <td id=\"T_d79f7ea6_0328_11eb_a3f0_5254000998a1row1_col12\" class=\"data row1 col12\" >0.194127</td>\n",
        "                        <td id=\"T_d79f7ea6_0328_11eb_a3f0_5254000998a1row1_col13\" class=\"data row1 col13\" >-0.346421</td>\n",
        "                        <td id=\"T_d79f7ea6_0328_11eb_a3f0_5254000998a1row1_col14\" class=\"data row1 col14\" >-0.367778</td>\n",
        "                        <td id=\"T_d79f7ea6_0328_11eb_a3f0_5254000998a1row1_col15\" class=\"data row1 col15\" >0.015191</td>\n",
        "                        <td id=\"T_d79f7ea6_0328_11eb_a3f0_5254000998a1row1_col16\" class=\"data row1 col16\" >-0.077248</td>\n",
        "            </tr>\n",
        "            <tr>\n",
        "                        <th id=\"T_d79f7ea6_0328_11eb_a3f0_5254000998a1level0_row2\" class=\"row_heading level0 row2\" >kappa</th>\n",
        "                        <td id=\"T_d79f7ea6_0328_11eb_a3f0_5254000998a1row2_col0\" class=\"data row2 col0\" >-0.260772</td>\n",
        "                        <td id=\"T_d79f7ea6_0328_11eb_a3f0_5254000998a1row2_col1\" class=\"data row2 col1\" >0.977692</td>\n",
        "                        <td id=\"T_d79f7ea6_0328_11eb_a3f0_5254000998a1row2_col2\" class=\"data row2 col2\" >1.000000</td>\n",
        "                        <td id=\"T_d79f7ea6_0328_11eb_a3f0_5254000998a1row2_col3\" class=\"data row2 col3\" >0.768164</td>\n",
        "                        <td id=\"T_d79f7ea6_0328_11eb_a3f0_5254000998a1row2_col4\" class=\"data row2 col4\" >-0.091316</td>\n",
        "                        <td id=\"T_d79f7ea6_0328_11eb_a3f0_5254000998a1row2_col5\" class=\"data row2 col5\" >-0.219750</td>\n",
        "                        <td id=\"T_d79f7ea6_0328_11eb_a3f0_5254000998a1row2_col6\" class=\"data row2 col6\" >-0.155445</td>\n",
        "                        <td id=\"T_d79f7ea6_0328_11eb_a3f0_5254000998a1row2_col7\" class=\"data row2 col7\" >-0.279402</td>\n",
        "                        <td id=\"T_d79f7ea6_0328_11eb_a3f0_5254000998a1row2_col8\" class=\"data row2 col8\" >-0.189061</td>\n",
        "                        <td id=\"T_d79f7ea6_0328_11eb_a3f0_5254000998a1row2_col9\" class=\"data row2 col9\" >-0.206208</td>\n",
        "                        <td id=\"T_d79f7ea6_0328_11eb_a3f0_5254000998a1row2_col10\" class=\"data row2 col10\" >0.208660</td>\n",
        "                        <td id=\"T_d79f7ea6_0328_11eb_a3f0_5254000998a1row2_col11\" class=\"data row2 col11\" >0.026614</td>\n",
        "                        <td id=\"T_d79f7ea6_0328_11eb_a3f0_5254000998a1row2_col12\" class=\"data row2 col12\" >0.222248</td>\n",
        "                        <td id=\"T_d79f7ea6_0328_11eb_a3f0_5254000998a1row2_col13\" class=\"data row2 col13\" >-0.362473</td>\n",
        "                        <td id=\"T_d79f7ea6_0328_11eb_a3f0_5254000998a1row2_col14\" class=\"data row2 col14\" >-0.312329</td>\n",
        "                        <td id=\"T_d79f7ea6_0328_11eb_a3f0_5254000998a1row2_col15\" class=\"data row2 col15\" >0.010915</td>\n",
        "                        <td id=\"T_d79f7ea6_0328_11eb_a3f0_5254000998a1row2_col16\" class=\"data row2 col16\" >-0.113700</td>\n",
        "            </tr>\n",
        "            <tr>\n",
        "                        <th id=\"T_d79f7ea6_0328_11eb_a3f0_5254000998a1level0_row3\" class=\"row_heading level0 row3\" >rho</th>\n",
        "                        <td id=\"T_d79f7ea6_0328_11eb_a3f0_5254000998a1row3_col0\" class=\"data row3 col0\" >0.144395</td>\n",
        "                        <td id=\"T_d79f7ea6_0328_11eb_a3f0_5254000998a1row3_col1\" class=\"data row3 col1\" >0.768104</td>\n",
        "                        <td id=\"T_d79f7ea6_0328_11eb_a3f0_5254000998a1row3_col2\" class=\"data row3 col2\" >0.768164</td>\n",
        "                        <td id=\"T_d79f7ea6_0328_11eb_a3f0_5254000998a1row3_col3\" class=\"data row3 col3\" >1.000000</td>\n",
        "                        <td id=\"T_d79f7ea6_0328_11eb_a3f0_5254000998a1row3_col4\" class=\"data row3 col4\" >0.062569</td>\n",
        "                        <td id=\"T_d79f7ea6_0328_11eb_a3f0_5254000998a1row3_col5\" class=\"data row3 col5\" >-0.145806</td>\n",
        "                        <td id=\"T_d79f7ea6_0328_11eb_a3f0_5254000998a1row3_col6\" class=\"data row3 col6\" >-0.096995</td>\n",
        "                        <td id=\"T_d79f7ea6_0328_11eb_a3f0_5254000998a1row3_col7\" class=\"data row3 col7\" >-0.323409</td>\n",
        "                        <td id=\"T_d79f7ea6_0328_11eb_a3f0_5254000998a1row3_col8\" class=\"data row3 col8\" >-0.158523</td>\n",
        "                        <td id=\"T_d79f7ea6_0328_11eb_a3f0_5254000998a1row3_col9\" class=\"data row3 col9\" >-0.214488</td>\n",
        "                        <td id=\"T_d79f7ea6_0328_11eb_a3f0_5254000998a1row3_col10\" class=\"data row3 col10\" >0.206460</td>\n",
        "                        <td id=\"T_d79f7ea6_0328_11eb_a3f0_5254000998a1row3_col11\" class=\"data row3 col11\" >0.020594</td>\n",
        "                        <td id=\"T_d79f7ea6_0328_11eb_a3f0_5254000998a1row3_col12\" class=\"data row3 col12\" >0.039098</td>\n",
        "                        <td id=\"T_d79f7ea6_0328_11eb_a3f0_5254000998a1row3_col13\" class=\"data row3 col13\" >-0.387822</td>\n",
        "                        <td id=\"T_d79f7ea6_0328_11eb_a3f0_5254000998a1row3_col14\" class=\"data row3 col14\" >-0.456297</td>\n",
        "                        <td id=\"T_d79f7ea6_0328_11eb_a3f0_5254000998a1row3_col15\" class=\"data row3 col15\" >-0.121645</td>\n",
        "                        <td id=\"T_d79f7ea6_0328_11eb_a3f0_5254000998a1row3_col16\" class=\"data row3 col16\" >-0.094683</td>\n",
        "            </tr>\n",
        "            <tr>\n",
        "                        <th id=\"T_d79f7ea6_0328_11eb_a3f0_5254000998a1level0_row4\" class=\"row_heading level0 row4\" >sigma</th>\n",
        "                        <td id=\"T_d79f7ea6_0328_11eb_a3f0_5254000998a1row4_col0\" class=\"data row4 col0\" >-0.239587</td>\n",
        "                        <td id=\"T_d79f7ea6_0328_11eb_a3f0_5254000998a1row4_col1\" class=\"data row4 col1\" >-0.025782</td>\n",
        "                        <td id=\"T_d79f7ea6_0328_11eb_a3f0_5254000998a1row4_col2\" class=\"data row4 col2\" >-0.091316</td>\n",
        "                        <td id=\"T_d79f7ea6_0328_11eb_a3f0_5254000998a1row4_col3\" class=\"data row4 col3\" >0.062569</td>\n",
        "                        <td id=\"T_d79f7ea6_0328_11eb_a3f0_5254000998a1row4_col4\" class=\"data row4 col4\" >1.000000</td>\n",
        "                        <td id=\"T_d79f7ea6_0328_11eb_a3f0_5254000998a1row4_col5\" class=\"data row4 col5\" >0.192751</td>\n",
        "                        <td id=\"T_d79f7ea6_0328_11eb_a3f0_5254000998a1row4_col6\" class=\"data row4 col6\" >0.030720</td>\n",
        "                        <td id=\"T_d79f7ea6_0328_11eb_a3f0_5254000998a1row4_col7\" class=\"data row4 col7\" >0.090255</td>\n",
        "                        <td id=\"T_d79f7ea6_0328_11eb_a3f0_5254000998a1row4_col8\" class=\"data row4 col8\" >-0.026388</td>\n",
        "                        <td id=\"T_d79f7ea6_0328_11eb_a3f0_5254000998a1row4_col9\" class=\"data row4 col9\" >0.013104</td>\n",
        "                        <td id=\"T_d79f7ea6_0328_11eb_a3f0_5254000998a1row4_col10\" class=\"data row4 col10\" >0.078907</td>\n",
        "                        <td id=\"T_d79f7ea6_0328_11eb_a3f0_5254000998a1row4_col11\" class=\"data row4 col11\" >-0.015657</td>\n",
        "                        <td id=\"T_d79f7ea6_0328_11eb_a3f0_5254000998a1row4_col12\" class=\"data row4 col12\" >-0.091005</td>\n",
        "                        <td id=\"T_d79f7ea6_0328_11eb_a3f0_5254000998a1row4_col13\" class=\"data row4 col13\" >0.077908</td>\n",
        "                        <td id=\"T_d79f7ea6_0328_11eb_a3f0_5254000998a1row4_col14\" class=\"data row4 col14\" >-0.137289</td>\n",
        "                        <td id=\"T_d79f7ea6_0328_11eb_a3f0_5254000998a1row4_col15\" class=\"data row4 col15\" >0.136749</td>\n",
        "                        <td id=\"T_d79f7ea6_0328_11eb_a3f0_5254000998a1row4_col16\" class=\"data row4 col16\" >0.124744</td>\n",
        "            </tr>\n",
        "            <tr>\n",
        "                        <th id=\"T_d79f7ea6_0328_11eb_a3f0_5254000998a1level0_row5\" class=\"row_heading level0 row5\" >School_closing</th>\n",
        "                        <td id=\"T_d79f7ea6_0328_11eb_a3f0_5254000998a1row5_col0\" class=\"data row5 col0\" >-0.055780</td>\n",
        "                        <td id=\"T_d79f7ea6_0328_11eb_a3f0_5254000998a1row5_col1\" class=\"data row5 col1\" >-0.189097</td>\n",
        "                        <td id=\"T_d79f7ea6_0328_11eb_a3f0_5254000998a1row5_col2\" class=\"data row5 col2\" >-0.219750</td>\n",
        "                        <td id=\"T_d79f7ea6_0328_11eb_a3f0_5254000998a1row5_col3\" class=\"data row5 col3\" >-0.145806</td>\n",
        "                        <td id=\"T_d79f7ea6_0328_11eb_a3f0_5254000998a1row5_col4\" class=\"data row5 col4\" >0.192751</td>\n",
        "                        <td id=\"T_d79f7ea6_0328_11eb_a3f0_5254000998a1row5_col5\" class=\"data row5 col5\" >1.000000</td>\n",
        "                        <td id=\"T_d79f7ea6_0328_11eb_a3f0_5254000998a1row5_col6\" class=\"data row5 col6\" >0.726343</td>\n",
        "                        <td id=\"T_d79f7ea6_0328_11eb_a3f0_5254000998a1row5_col7\" class=\"data row5 col7\" >0.769394</td>\n",
        "                        <td id=\"T_d79f7ea6_0328_11eb_a3f0_5254000998a1row5_col8\" class=\"data row5 col8\" >0.612276</td>\n",
        "                        <td id=\"T_d79f7ea6_0328_11eb_a3f0_5254000998a1row5_col9\" class=\"data row5 col9\" >0.573763</td>\n",
        "                        <td id=\"T_d79f7ea6_0328_11eb_a3f0_5254000998a1row5_col10\" class=\"data row5 col10\" >0.562630</td>\n",
        "                        <td id=\"T_d79f7ea6_0328_11eb_a3f0_5254000998a1row5_col11\" class=\"data row5 col11\" >0.529380</td>\n",
        "                        <td id=\"T_d79f7ea6_0328_11eb_a3f0_5254000998a1row5_col12\" class=\"data row5 col12\" >0.428752</td>\n",
        "                        <td id=\"T_d79f7ea6_0328_11eb_a3f0_5254000998a1row5_col13\" class=\"data row5 col13\" >0.680929</td>\n",
        "                        <td id=\"T_d79f7ea6_0328_11eb_a3f0_5254000998a1row5_col14\" class=\"data row5 col14\" >0.475914</td>\n",
        "                        <td id=\"T_d79f7ea6_0328_11eb_a3f0_5254000998a1row5_col15\" class=\"data row5 col15\" >0.250813</td>\n",
        "                        <td id=\"T_d79f7ea6_0328_11eb_a3f0_5254000998a1row5_col16\" class=\"data row5 col16\" >0.809370</td>\n",
        "            </tr>\n",
        "            <tr>\n",
        "                        <th id=\"T_d79f7ea6_0328_11eb_a3f0_5254000998a1level0_row6\" class=\"row_heading level0 row6\" >Workplace_closing</th>\n",
        "                        <td id=\"T_d79f7ea6_0328_11eb_a3f0_5254000998a1row6_col0\" class=\"data row6 col0\" >0.049169</td>\n",
        "                        <td id=\"T_d79f7ea6_0328_11eb_a3f0_5254000998a1row6_col1\" class=\"data row6 col1\" >-0.114430</td>\n",
        "                        <td id=\"T_d79f7ea6_0328_11eb_a3f0_5254000998a1row6_col2\" class=\"data row6 col2\" >-0.155445</td>\n",
        "                        <td id=\"T_d79f7ea6_0328_11eb_a3f0_5254000998a1row6_col3\" class=\"data row6 col3\" >-0.096995</td>\n",
        "                        <td id=\"T_d79f7ea6_0328_11eb_a3f0_5254000998a1row6_col4\" class=\"data row6 col4\" >0.030720</td>\n",
        "                        <td id=\"T_d79f7ea6_0328_11eb_a3f0_5254000998a1row6_col5\" class=\"data row6 col5\" >0.726343</td>\n",
        "                        <td id=\"T_d79f7ea6_0328_11eb_a3f0_5254000998a1row6_col6\" class=\"data row6 col6\" >1.000000</td>\n",
        "                        <td id=\"T_d79f7ea6_0328_11eb_a3f0_5254000998a1row6_col7\" class=\"data row6 col7\" >0.732901</td>\n",
        "                        <td id=\"T_d79f7ea6_0328_11eb_a3f0_5254000998a1row6_col8\" class=\"data row6 col8\" >0.682077</td>\n",
        "                        <td id=\"T_d79f7ea6_0328_11eb_a3f0_5254000998a1row6_col9\" class=\"data row6 col9\" >0.637291</td>\n",
        "                        <td id=\"T_d79f7ea6_0328_11eb_a3f0_5254000998a1row6_col10\" class=\"data row6 col10\" >0.609821</td>\n",
        "                        <td id=\"T_d79f7ea6_0328_11eb_a3f0_5254000998a1row6_col11\" class=\"data row6 col11\" >0.570995</td>\n",
        "                        <td id=\"T_d79f7ea6_0328_11eb_a3f0_5254000998a1row6_col12\" class=\"data row6 col12\" >0.481622</td>\n",
        "                        <td id=\"T_d79f7ea6_0328_11eb_a3f0_5254000998a1row6_col13\" class=\"data row6 col13\" >0.779186</td>\n",
        "                        <td id=\"T_d79f7ea6_0328_11eb_a3f0_5254000998a1row6_col14\" class=\"data row6 col14\" >0.479179</td>\n",
        "                        <td id=\"T_d79f7ea6_0328_11eb_a3f0_5254000998a1row6_col15\" class=\"data row6 col15\" >0.322671</td>\n",
        "                        <td id=\"T_d79f7ea6_0328_11eb_a3f0_5254000998a1row6_col16\" class=\"data row6 col16\" >0.865992</td>\n",
        "            </tr>\n",
        "            <tr>\n",
        "                        <th id=\"T_d79f7ea6_0328_11eb_a3f0_5254000998a1level0_row7\" class=\"row_heading level0 row7\" >Cancel_events</th>\n",
        "                        <td id=\"T_d79f7ea6_0328_11eb_a3f0_5254000998a1row7_col0\" class=\"data row7 col0\" >-0.154677</td>\n",
        "                        <td id=\"T_d79f7ea6_0328_11eb_a3f0_5254000998a1row7_col1\" class=\"data row7 col1\" >-0.256881</td>\n",
        "                        <td id=\"T_d79f7ea6_0328_11eb_a3f0_5254000998a1row7_col2\" class=\"data row7 col2\" >-0.279402</td>\n",
        "                        <td id=\"T_d79f7ea6_0328_11eb_a3f0_5254000998a1row7_col3\" class=\"data row7 col3\" >-0.323409</td>\n",
        "                        <td id=\"T_d79f7ea6_0328_11eb_a3f0_5254000998a1row7_col4\" class=\"data row7 col4\" >0.090255</td>\n",
        "                        <td id=\"T_d79f7ea6_0328_11eb_a3f0_5254000998a1row7_col5\" class=\"data row7 col5\" >0.769394</td>\n",
        "                        <td id=\"T_d79f7ea6_0328_11eb_a3f0_5254000998a1row7_col6\" class=\"data row7 col6\" >0.732901</td>\n",
        "                        <td id=\"T_d79f7ea6_0328_11eb_a3f0_5254000998a1row7_col7\" class=\"data row7 col7\" >1.000000</td>\n",
        "                        <td id=\"T_d79f7ea6_0328_11eb_a3f0_5254000998a1row7_col8\" class=\"data row7 col8\" >0.655917</td>\n",
        "                        <td id=\"T_d79f7ea6_0328_11eb_a3f0_5254000998a1row7_col9\" class=\"data row7 col9\" >0.523132</td>\n",
        "                        <td id=\"T_d79f7ea6_0328_11eb_a3f0_5254000998a1row7_col10\" class=\"data row7 col10\" >0.489475</td>\n",
        "                        <td id=\"T_d79f7ea6_0328_11eb_a3f0_5254000998a1row7_col11\" class=\"data row7 col11\" >0.508975</td>\n",
        "                        <td id=\"T_d79f7ea6_0328_11eb_a3f0_5254000998a1row7_col12\" class=\"data row7 col12\" >0.528475</td>\n",
        "                        <td id=\"T_d79f7ea6_0328_11eb_a3f0_5254000998a1row7_col13\" class=\"data row7 col13\" >0.846228</td>\n",
        "                        <td id=\"T_d79f7ea6_0328_11eb_a3f0_5254000998a1row7_col14\" class=\"data row7 col14\" >0.616862</td>\n",
        "                        <td id=\"T_d79f7ea6_0328_11eb_a3f0_5254000998a1row7_col15\" class=\"data row7 col15\" >0.545888</td>\n",
        "                        <td id=\"T_d79f7ea6_0328_11eb_a3f0_5254000998a1row7_col16\" class=\"data row7 col16\" >0.819436</td>\n",
        "            </tr>\n",
        "            <tr>\n",
        "                        <th id=\"T_d79f7ea6_0328_11eb_a3f0_5254000998a1level0_row8\" class=\"row_heading level0 row8\" >Gatherings_restrictions</th>\n",
        "                        <td id=\"T_d79f7ea6_0328_11eb_a3f0_5254000998a1row8_col0\" class=\"data row8 col0\" >0.013690</td>\n",
        "                        <td id=\"T_d79f7ea6_0328_11eb_a3f0_5254000998a1row8_col1\" class=\"data row8 col1\" >-0.194349</td>\n",
        "                        <td id=\"T_d79f7ea6_0328_11eb_a3f0_5254000998a1row8_col2\" class=\"data row8 col2\" >-0.189061</td>\n",
        "                        <td id=\"T_d79f7ea6_0328_11eb_a3f0_5254000998a1row8_col3\" class=\"data row8 col3\" >-0.158523</td>\n",
        "                        <td id=\"T_d79f7ea6_0328_11eb_a3f0_5254000998a1row8_col4\" class=\"data row8 col4\" >-0.026388</td>\n",
        "                        <td id=\"T_d79f7ea6_0328_11eb_a3f0_5254000998a1row8_col5\" class=\"data row8 col5\" >0.612276</td>\n",
        "                        <td id=\"T_d79f7ea6_0328_11eb_a3f0_5254000998a1row8_col6\" class=\"data row8 col6\" >0.682077</td>\n",
        "                        <td id=\"T_d79f7ea6_0328_11eb_a3f0_5254000998a1row8_col7\" class=\"data row8 col7\" >0.655917</td>\n",
        "                        <td id=\"T_d79f7ea6_0328_11eb_a3f0_5254000998a1row8_col8\" class=\"data row8 col8\" >1.000000</td>\n",
        "                        <td id=\"T_d79f7ea6_0328_11eb_a3f0_5254000998a1row8_col9\" class=\"data row8 col9\" >0.783998</td>\n",
        "                        <td id=\"T_d79f7ea6_0328_11eb_a3f0_5254000998a1row8_col10\" class=\"data row8 col10\" >0.670083</td>\n",
        "                        <td id=\"T_d79f7ea6_0328_11eb_a3f0_5254000998a1row8_col11\" class=\"data row8 col11\" >0.736384</td>\n",
        "                        <td id=\"T_d79f7ea6_0328_11eb_a3f0_5254000998a1row8_col12\" class=\"data row8 col12\" >0.523582</td>\n",
        "                        <td id=\"T_d79f7ea6_0328_11eb_a3f0_5254000998a1row8_col13\" class=\"data row8 col13\" >0.681446</td>\n",
        "                        <td id=\"T_d79f7ea6_0328_11eb_a3f0_5254000998a1row8_col14\" class=\"data row8 col14\" >0.518562</td>\n",
        "                        <td id=\"T_d79f7ea6_0328_11eb_a3f0_5254000998a1row8_col15\" class=\"data row8 col15\" >0.243648</td>\n",
        "                        <td id=\"T_d79f7ea6_0328_11eb_a3f0_5254000998a1row8_col16\" class=\"data row8 col16\" >0.859072</td>\n",
        "            </tr>\n",
        "            <tr>\n",
        "                        <th id=\"T_d79f7ea6_0328_11eb_a3f0_5254000998a1level0_row9\" class=\"row_heading level0 row9\" >Transport_closing</th>\n",
        "                        <td id=\"T_d79f7ea6_0328_11eb_a3f0_5254000998a1row9_col0\" class=\"data row9 col0\" >-0.117501</td>\n",
        "                        <td id=\"T_d79f7ea6_0328_11eb_a3f0_5254000998a1row9_col1\" class=\"data row9 col1\" >-0.199323</td>\n",
        "                        <td id=\"T_d79f7ea6_0328_11eb_a3f0_5254000998a1row9_col2\" class=\"data row9 col2\" >-0.206208</td>\n",
        "                        <td id=\"T_d79f7ea6_0328_11eb_a3f0_5254000998a1row9_col3\" class=\"data row9 col3\" >-0.214488</td>\n",
        "                        <td id=\"T_d79f7ea6_0328_11eb_a3f0_5254000998a1row9_col4\" class=\"data row9 col4\" >0.013104</td>\n",
        "                        <td id=\"T_d79f7ea6_0328_11eb_a3f0_5254000998a1row9_col5\" class=\"data row9 col5\" >0.573763</td>\n",
        "                        <td id=\"T_d79f7ea6_0328_11eb_a3f0_5254000998a1row9_col6\" class=\"data row9 col6\" >0.637291</td>\n",
        "                        <td id=\"T_d79f7ea6_0328_11eb_a3f0_5254000998a1row9_col7\" class=\"data row9 col7\" >0.523132</td>\n",
        "                        <td id=\"T_d79f7ea6_0328_11eb_a3f0_5254000998a1row9_col8\" class=\"data row9 col8\" >0.783998</td>\n",
        "                        <td id=\"T_d79f7ea6_0328_11eb_a3f0_5254000998a1row9_col9\" class=\"data row9 col9\" >1.000000</td>\n",
        "                        <td id=\"T_d79f7ea6_0328_11eb_a3f0_5254000998a1row9_col10\" class=\"data row9 col10\" >0.651994</td>\n",
        "                        <td id=\"T_d79f7ea6_0328_11eb_a3f0_5254000998a1row9_col11\" class=\"data row9 col11\" >0.711319</td>\n",
        "                        <td id=\"T_d79f7ea6_0328_11eb_a3f0_5254000998a1row9_col12\" class=\"data row9 col12\" >0.442389</td>\n",
        "                        <td id=\"T_d79f7ea6_0328_11eb_a3f0_5254000998a1row9_col13\" class=\"data row9 col13\" >0.497124</td>\n",
        "                        <td id=\"T_d79f7ea6_0328_11eb_a3f0_5254000998a1row9_col14\" class=\"data row9 col14\" >0.456030</td>\n",
        "                        <td id=\"T_d79f7ea6_0328_11eb_a3f0_5254000998a1row9_col15\" class=\"data row9 col15\" >0.038167</td>\n",
        "                        <td id=\"T_d79f7ea6_0328_11eb_a3f0_5254000998a1row9_col16\" class=\"data row9 col16\" >0.770218</td>\n",
        "            </tr>\n",
        "            <tr>\n",
        "                        <th id=\"T_d79f7ea6_0328_11eb_a3f0_5254000998a1level0_row10\" class=\"row_heading level0 row10\" >Stay_home_restrictions</th>\n",
        "                        <td id=\"T_d79f7ea6_0328_11eb_a3f0_5254000998a1row10_col0\" class=\"data row10 col0\" >-0.154595</td>\n",
        "                        <td id=\"T_d79f7ea6_0328_11eb_a3f0_5254000998a1row10_col1\" class=\"data row10 col1\" >0.221196</td>\n",
        "                        <td id=\"T_d79f7ea6_0328_11eb_a3f0_5254000998a1row10_col2\" class=\"data row10 col2\" >0.208660</td>\n",
        "                        <td id=\"T_d79f7ea6_0328_11eb_a3f0_5254000998a1row10_col3\" class=\"data row10 col3\" >0.206460</td>\n",
        "                        <td id=\"T_d79f7ea6_0328_11eb_a3f0_5254000998a1row10_col4\" class=\"data row10 col4\" >0.078907</td>\n",
        "                        <td id=\"T_d79f7ea6_0328_11eb_a3f0_5254000998a1row10_col5\" class=\"data row10 col5\" >0.562630</td>\n",
        "                        <td id=\"T_d79f7ea6_0328_11eb_a3f0_5254000998a1row10_col6\" class=\"data row10 col6\" >0.609821</td>\n",
        "                        <td id=\"T_d79f7ea6_0328_11eb_a3f0_5254000998a1row10_col7\" class=\"data row10 col7\" >0.489475</td>\n",
        "                        <td id=\"T_d79f7ea6_0328_11eb_a3f0_5254000998a1row10_col8\" class=\"data row10 col8\" >0.670083</td>\n",
        "                        <td id=\"T_d79f7ea6_0328_11eb_a3f0_5254000998a1row10_col9\" class=\"data row10 col9\" >0.651994</td>\n",
        "                        <td id=\"T_d79f7ea6_0328_11eb_a3f0_5254000998a1row10_col10\" class=\"data row10 col10\" >1.000000</td>\n",
        "                        <td id=\"T_d79f7ea6_0328_11eb_a3f0_5254000998a1row10_col11\" class=\"data row10 col11\" >0.812285</td>\n",
        "                        <td id=\"T_d79f7ea6_0328_11eb_a3f0_5254000998a1row10_col12\" class=\"data row10 col12\" >0.539781</td>\n",
        "                        <td id=\"T_d79f7ea6_0328_11eb_a3f0_5254000998a1row10_col13\" class=\"data row10 col13\" >0.387103</td>\n",
        "                        <td id=\"T_d79f7ea6_0328_11eb_a3f0_5254000998a1row10_col14\" class=\"data row10 col14\" >0.270639</td>\n",
        "                        <td id=\"T_d79f7ea6_0328_11eb_a3f0_5254000998a1row10_col15\" class=\"data row10 col15\" >0.287766</td>\n",
        "                        <td id=\"T_d79f7ea6_0328_11eb_a3f0_5254000998a1row10_col16\" class=\"data row10 col16\" >0.784997</td>\n",
        "            </tr>\n",
        "            <tr>\n",
        "                        <th id=\"T_d79f7ea6_0328_11eb_a3f0_5254000998a1level0_row11\" class=\"row_heading level0 row11\" >Internal_movement_restrictions</th>\n",
        "                        <td id=\"T_d79f7ea6_0328_11eb_a3f0_5254000998a1row11_col0\" class=\"data row11 col0\" >-0.061208</td>\n",
        "                        <td id=\"T_d79f7ea6_0328_11eb_a3f0_5254000998a1row11_col1\" class=\"data row11 col1\" >0.041007</td>\n",
        "                        <td id=\"T_d79f7ea6_0328_11eb_a3f0_5254000998a1row11_col2\" class=\"data row11 col2\" >0.026614</td>\n",
        "                        <td id=\"T_d79f7ea6_0328_11eb_a3f0_5254000998a1row11_col3\" class=\"data row11 col3\" >0.020594</td>\n",
        "                        <td id=\"T_d79f7ea6_0328_11eb_a3f0_5254000998a1row11_col4\" class=\"data row11 col4\" >-0.015657</td>\n",
        "                        <td id=\"T_d79f7ea6_0328_11eb_a3f0_5254000998a1row11_col5\" class=\"data row11 col5\" >0.529380</td>\n",
        "                        <td id=\"T_d79f7ea6_0328_11eb_a3f0_5254000998a1row11_col6\" class=\"data row11 col6\" >0.570995</td>\n",
        "                        <td id=\"T_d79f7ea6_0328_11eb_a3f0_5254000998a1row11_col7\" class=\"data row11 col7\" >0.508975</td>\n",
        "                        <td id=\"T_d79f7ea6_0328_11eb_a3f0_5254000998a1row11_col8\" class=\"data row11 col8\" >0.736384</td>\n",
        "                        <td id=\"T_d79f7ea6_0328_11eb_a3f0_5254000998a1row11_col9\" class=\"data row11 col9\" >0.711319</td>\n",
        "                        <td id=\"T_d79f7ea6_0328_11eb_a3f0_5254000998a1row11_col10\" class=\"data row11 col10\" >0.812285</td>\n",
        "                        <td id=\"T_d79f7ea6_0328_11eb_a3f0_5254000998a1row11_col11\" class=\"data row11 col11\" >1.000000</td>\n",
        "                        <td id=\"T_d79f7ea6_0328_11eb_a3f0_5254000998a1row11_col12\" class=\"data row11 col12\" >0.492955</td>\n",
        "                        <td id=\"T_d79f7ea6_0328_11eb_a3f0_5254000998a1row11_col13\" class=\"data row11 col13\" >0.448397</td>\n",
        "                        <td id=\"T_d79f7ea6_0328_11eb_a3f0_5254000998a1row11_col14\" class=\"data row11 col14\" >0.333572</td>\n",
        "                        <td id=\"T_d79f7ea6_0328_11eb_a3f0_5254000998a1row11_col15\" class=\"data row11 col15\" >0.200041</td>\n",
        "                        <td id=\"T_d79f7ea6_0328_11eb_a3f0_5254000998a1row11_col16\" class=\"data row11 col16\" >0.768288</td>\n",
        "            </tr>\n",
        "            <tr>\n",
        "                        <th id=\"T_d79f7ea6_0328_11eb_a3f0_5254000998a1level0_row12\" class=\"row_heading level0 row12\" >International_movement_restrictions</th>\n",
        "                        <td id=\"T_d79f7ea6_0328_11eb_a3f0_5254000998a1row12_col0\" class=\"data row12 col0\" >-0.186065</td>\n",
        "                        <td id=\"T_d79f7ea6_0328_11eb_a3f0_5254000998a1row12_col1\" class=\"data row12 col1\" >0.194127</td>\n",
        "                        <td id=\"T_d79f7ea6_0328_11eb_a3f0_5254000998a1row12_col2\" class=\"data row12 col2\" >0.222248</td>\n",
        "                        <td id=\"T_d79f7ea6_0328_11eb_a3f0_5254000998a1row12_col3\" class=\"data row12 col3\" >0.039098</td>\n",
        "                        <td id=\"T_d79f7ea6_0328_11eb_a3f0_5254000998a1row12_col4\" class=\"data row12 col4\" >-0.091005</td>\n",
        "                        <td id=\"T_d79f7ea6_0328_11eb_a3f0_5254000998a1row12_col5\" class=\"data row12 col5\" >0.428752</td>\n",
        "                        <td id=\"T_d79f7ea6_0328_11eb_a3f0_5254000998a1row12_col6\" class=\"data row12 col6\" >0.481622</td>\n",
        "                        <td id=\"T_d79f7ea6_0328_11eb_a3f0_5254000998a1row12_col7\" class=\"data row12 col7\" >0.528475</td>\n",
        "                        <td id=\"T_d79f7ea6_0328_11eb_a3f0_5254000998a1row12_col8\" class=\"data row12 col8\" >0.523582</td>\n",
        "                        <td id=\"T_d79f7ea6_0328_11eb_a3f0_5254000998a1row12_col9\" class=\"data row12 col9\" >0.442389</td>\n",
        "                        <td id=\"T_d79f7ea6_0328_11eb_a3f0_5254000998a1row12_col10\" class=\"data row12 col10\" >0.539781</td>\n",
        "                        <td id=\"T_d79f7ea6_0328_11eb_a3f0_5254000998a1row12_col11\" class=\"data row12 col11\" >0.492955</td>\n",
        "                        <td id=\"T_d79f7ea6_0328_11eb_a3f0_5254000998a1row12_col12\" class=\"data row12 col12\" >1.000000</td>\n",
        "                        <td id=\"T_d79f7ea6_0328_11eb_a3f0_5254000998a1row12_col13\" class=\"data row12 col13\" >0.495286</td>\n",
        "                        <td id=\"T_d79f7ea6_0328_11eb_a3f0_5254000998a1row12_col14\" class=\"data row12 col14\" >0.566352</td>\n",
        "                        <td id=\"T_d79f7ea6_0328_11eb_a3f0_5254000998a1row12_col15\" class=\"data row12 col15\" >0.502085</td>\n",
        "                        <td id=\"T_d79f7ea6_0328_11eb_a3f0_5254000998a1row12_col16\" class=\"data row12 col16\" >0.631680</td>\n",
        "            </tr>\n",
        "            <tr>\n",
        "                        <th id=\"T_d79f7ea6_0328_11eb_a3f0_5254000998a1level0_row13\" class=\"row_heading level0 row13\" >Information_campaigns</th>\n",
        "                        <td id=\"T_d79f7ea6_0328_11eb_a3f0_5254000998a1row13_col0\" class=\"data row13 col0\" >-0.016343</td>\n",
        "                        <td id=\"T_d79f7ea6_0328_11eb_a3f0_5254000998a1row13_col1\" class=\"data row13 col1\" >-0.346421</td>\n",
        "                        <td id=\"T_d79f7ea6_0328_11eb_a3f0_5254000998a1row13_col2\" class=\"data row13 col2\" >-0.362473</td>\n",
        "                        <td id=\"T_d79f7ea6_0328_11eb_a3f0_5254000998a1row13_col3\" class=\"data row13 col3\" >-0.387822</td>\n",
        "                        <td id=\"T_d79f7ea6_0328_11eb_a3f0_5254000998a1row13_col4\" class=\"data row13 col4\" >0.077908</td>\n",
        "                        <td id=\"T_d79f7ea6_0328_11eb_a3f0_5254000998a1row13_col5\" class=\"data row13 col5\" >0.680929</td>\n",
        "                        <td id=\"T_d79f7ea6_0328_11eb_a3f0_5254000998a1row13_col6\" class=\"data row13 col6\" >0.779186</td>\n",
        "                        <td id=\"T_d79f7ea6_0328_11eb_a3f0_5254000998a1row13_col7\" class=\"data row13 col7\" >0.846228</td>\n",
        "                        <td id=\"T_d79f7ea6_0328_11eb_a3f0_5254000998a1row13_col8\" class=\"data row13 col8\" >0.681446</td>\n",
        "                        <td id=\"T_d79f7ea6_0328_11eb_a3f0_5254000998a1row13_col9\" class=\"data row13 col9\" >0.497124</td>\n",
        "                        <td id=\"T_d79f7ea6_0328_11eb_a3f0_5254000998a1row13_col10\" class=\"data row13 col10\" >0.387103</td>\n",
        "                        <td id=\"T_d79f7ea6_0328_11eb_a3f0_5254000998a1row13_col11\" class=\"data row13 col11\" >0.448397</td>\n",
        "                        <td id=\"T_d79f7ea6_0328_11eb_a3f0_5254000998a1row13_col12\" class=\"data row13 col12\" >0.495286</td>\n",
        "                        <td id=\"T_d79f7ea6_0328_11eb_a3f0_5254000998a1row13_col13\" class=\"data row13 col13\" >1.000000</td>\n",
        "                        <td id=\"T_d79f7ea6_0328_11eb_a3f0_5254000998a1row13_col14\" class=\"data row13 col14\" >0.662961</td>\n",
        "                        <td id=\"T_d79f7ea6_0328_11eb_a3f0_5254000998a1row13_col15\" class=\"data row13 col15\" >0.544847</td>\n",
        "                        <td id=\"T_d79f7ea6_0328_11eb_a3f0_5254000998a1row13_col16\" class=\"data row13 col16\" >0.794747</td>\n",
        "            </tr>\n",
        "            <tr>\n",
        "                        <th id=\"T_d79f7ea6_0328_11eb_a3f0_5254000998a1level0_row14\" class=\"row_heading level0 row14\" >Testing_policy</th>\n",
        "                        <td id=\"T_d79f7ea6_0328_11eb_a3f0_5254000998a1row14_col0\" class=\"data row14 col0\" >-0.080998</td>\n",
        "                        <td id=\"T_d79f7ea6_0328_11eb_a3f0_5254000998a1row14_col1\" class=\"data row14 col1\" >-0.367778</td>\n",
        "                        <td id=\"T_d79f7ea6_0328_11eb_a3f0_5254000998a1row14_col2\" class=\"data row14 col2\" >-0.312329</td>\n",
        "                        <td id=\"T_d79f7ea6_0328_11eb_a3f0_5254000998a1row14_col3\" class=\"data row14 col3\" >-0.456297</td>\n",
        "                        <td id=\"T_d79f7ea6_0328_11eb_a3f0_5254000998a1row14_col4\" class=\"data row14 col4\" >-0.137289</td>\n",
        "                        <td id=\"T_d79f7ea6_0328_11eb_a3f0_5254000998a1row14_col5\" class=\"data row14 col5\" >0.475914</td>\n",
        "                        <td id=\"T_d79f7ea6_0328_11eb_a3f0_5254000998a1row14_col6\" class=\"data row14 col6\" >0.479179</td>\n",
        "                        <td id=\"T_d79f7ea6_0328_11eb_a3f0_5254000998a1row14_col7\" class=\"data row14 col7\" >0.616862</td>\n",
        "                        <td id=\"T_d79f7ea6_0328_11eb_a3f0_5254000998a1row14_col8\" class=\"data row14 col8\" >0.518562</td>\n",
        "                        <td id=\"T_d79f7ea6_0328_11eb_a3f0_5254000998a1row14_col9\" class=\"data row14 col9\" >0.456030</td>\n",
        "                        <td id=\"T_d79f7ea6_0328_11eb_a3f0_5254000998a1row14_col10\" class=\"data row14 col10\" >0.270639</td>\n",
        "                        <td id=\"T_d79f7ea6_0328_11eb_a3f0_5254000998a1row14_col11\" class=\"data row14 col11\" >0.333572</td>\n",
        "                        <td id=\"T_d79f7ea6_0328_11eb_a3f0_5254000998a1row14_col12\" class=\"data row14 col12\" >0.566352</td>\n",
        "                        <td id=\"T_d79f7ea6_0328_11eb_a3f0_5254000998a1row14_col13\" class=\"data row14 col13\" >0.662961</td>\n",
        "                        <td id=\"T_d79f7ea6_0328_11eb_a3f0_5254000998a1row14_col14\" class=\"data row14 col14\" >1.000000</td>\n",
        "                        <td id=\"T_d79f7ea6_0328_11eb_a3f0_5254000998a1row14_col15\" class=\"data row14 col15\" >0.417475</td>\n",
        "                        <td id=\"T_d79f7ea6_0328_11eb_a3f0_5254000998a1row14_col16\" class=\"data row14 col16\" >0.485784</td>\n",
        "            </tr>\n",
        "            <tr>\n",
        "                        <th id=\"T_d79f7ea6_0328_11eb_a3f0_5254000998a1level0_row15\" class=\"row_heading level0 row15\" >Contact_tracing</th>\n",
        "                        <td id=\"T_d79f7ea6_0328_11eb_a3f0_5254000998a1row15_col0\" class=\"data row15 col0\" >-0.172094</td>\n",
        "                        <td id=\"T_d79f7ea6_0328_11eb_a3f0_5254000998a1row15_col1\" class=\"data row15 col1\" >0.015191</td>\n",
        "                        <td id=\"T_d79f7ea6_0328_11eb_a3f0_5254000998a1row15_col2\" class=\"data row15 col2\" >0.010915</td>\n",
        "                        <td id=\"T_d79f7ea6_0328_11eb_a3f0_5254000998a1row15_col3\" class=\"data row15 col3\" >-0.121645</td>\n",
        "                        <td id=\"T_d79f7ea6_0328_11eb_a3f0_5254000998a1row15_col4\" class=\"data row15 col4\" >0.136749</td>\n",
        "                        <td id=\"T_d79f7ea6_0328_11eb_a3f0_5254000998a1row15_col5\" class=\"data row15 col5\" >0.250813</td>\n",
        "                        <td id=\"T_d79f7ea6_0328_11eb_a3f0_5254000998a1row15_col6\" class=\"data row15 col6\" >0.322671</td>\n",
        "                        <td id=\"T_d79f7ea6_0328_11eb_a3f0_5254000998a1row15_col7\" class=\"data row15 col7\" >0.545888</td>\n",
        "                        <td id=\"T_d79f7ea6_0328_11eb_a3f0_5254000998a1row15_col8\" class=\"data row15 col8\" >0.243648</td>\n",
        "                        <td id=\"T_d79f7ea6_0328_11eb_a3f0_5254000998a1row15_col9\" class=\"data row15 col9\" >0.038167</td>\n",
        "                        <td id=\"T_d79f7ea6_0328_11eb_a3f0_5254000998a1row15_col10\" class=\"data row15 col10\" >0.287766</td>\n",
        "                        <td id=\"T_d79f7ea6_0328_11eb_a3f0_5254000998a1row15_col11\" class=\"data row15 col11\" >0.200041</td>\n",
        "                        <td id=\"T_d79f7ea6_0328_11eb_a3f0_5254000998a1row15_col12\" class=\"data row15 col12\" >0.502085</td>\n",
        "                        <td id=\"T_d79f7ea6_0328_11eb_a3f0_5254000998a1row15_col13\" class=\"data row15 col13\" >0.544847</td>\n",
        "                        <td id=\"T_d79f7ea6_0328_11eb_a3f0_5254000998a1row15_col14\" class=\"data row15 col14\" >0.417475</td>\n",
        "                        <td id=\"T_d79f7ea6_0328_11eb_a3f0_5254000998a1row15_col15\" class=\"data row15 col15\" >1.000000</td>\n",
        "                        <td id=\"T_d79f7ea6_0328_11eb_a3f0_5254000998a1row15_col16\" class=\"data row15 col16\" >0.412132</td>\n",
        "            </tr>\n",
        "            <tr>\n",
        "                        <th id=\"T_d79f7ea6_0328_11eb_a3f0_5254000998a1level0_row16\" class=\"row_heading level0 row16\" >Stringency_index</th>\n",
        "                        <td id=\"T_d79f7ea6_0328_11eb_a3f0_5254000998a1row16_col0\" class=\"data row16 col0\" >-0.075081</td>\n",
        "                        <td id=\"T_d79f7ea6_0328_11eb_a3f0_5254000998a1row16_col1\" class=\"data row16 col1\" >-0.077248</td>\n",
        "                        <td id=\"T_d79f7ea6_0328_11eb_a3f0_5254000998a1row16_col2\" class=\"data row16 col2\" >-0.113700</td>\n",
        "                        <td id=\"T_d79f7ea6_0328_11eb_a3f0_5254000998a1row16_col3\" class=\"data row16 col3\" >-0.094683</td>\n",
        "                        <td id=\"T_d79f7ea6_0328_11eb_a3f0_5254000998a1row16_col4\" class=\"data row16 col4\" >0.124744</td>\n",
        "                        <td id=\"T_d79f7ea6_0328_11eb_a3f0_5254000998a1row16_col5\" class=\"data row16 col5\" >0.809370</td>\n",
        "                        <td id=\"T_d79f7ea6_0328_11eb_a3f0_5254000998a1row16_col6\" class=\"data row16 col6\" >0.865992</td>\n",
        "                        <td id=\"T_d79f7ea6_0328_11eb_a3f0_5254000998a1row16_col7\" class=\"data row16 col7\" >0.819436</td>\n",
        "                        <td id=\"T_d79f7ea6_0328_11eb_a3f0_5254000998a1row16_col8\" class=\"data row16 col8\" >0.859072</td>\n",
        "                        <td id=\"T_d79f7ea6_0328_11eb_a3f0_5254000998a1row16_col9\" class=\"data row16 col9\" >0.770218</td>\n",
        "                        <td id=\"T_d79f7ea6_0328_11eb_a3f0_5254000998a1row16_col10\" class=\"data row16 col10\" >0.784997</td>\n",
        "                        <td id=\"T_d79f7ea6_0328_11eb_a3f0_5254000998a1row16_col11\" class=\"data row16 col11\" >0.768288</td>\n",
        "                        <td id=\"T_d79f7ea6_0328_11eb_a3f0_5254000998a1row16_col12\" class=\"data row16 col12\" >0.631680</td>\n",
        "                        <td id=\"T_d79f7ea6_0328_11eb_a3f0_5254000998a1row16_col13\" class=\"data row16 col13\" >0.794747</td>\n",
        "                        <td id=\"T_d79f7ea6_0328_11eb_a3f0_5254000998a1row16_col14\" class=\"data row16 col14\" >0.485784</td>\n",
        "                        <td id=\"T_d79f7ea6_0328_11eb_a3f0_5254000998a1row16_col15\" class=\"data row16 col15\" >0.412132</td>\n",
        "                        <td id=\"T_d79f7ea6_0328_11eb_a3f0_5254000998a1row16_col16\" class=\"data row16 col16\" >1.000000</td>\n",
        "            </tr>\n",
        "    </tbody></table>"
       ],
       "output_type": "pyout",
       "prompt_number": 21,
       "text": [
        "<pandas.io.formats.style.Styler at 0x7fc5720e6220>"
       ]
      }
     ],
     "prompt_number": 21
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "# Scatter plot of Stringency index and Rt\n",
      "df = track_df.copy()\n",
      "sns.scatterplot(data=df, x=\"Stringency_index\", y=\"Rt\", hue=\"Country\", legend=\"brief\", marker=\"+\")\n",
      "bbox_to_anchor=(1.02, 0)\n",
      "bbox_loc=\"lower left\"\n",
      "plt.legend(bbox_to_anchor=bbox_to_anchor, loc=bbox_loc, borderaxespad=0)\n",
      "plt.title(\"Relationship of Stringency index and reproduction number\")\n",
      "plt.ylabel(\"Reproduction number\")\n",
      "plt.xlabel(\"Stringency index\")\n",
      "plt.show()"
     ],
     "language": "python",
     "metadata": {},
     "outputs": [
      {
       "output_type": "display_data",
       "png": "\n",
       "text": [
        "<Figure size 432x288 with 1 Axes>"
       ]
      }
     ],
     "prompt_number": 22
    }
   ],
   "metadata": {}
  }
 ]
}
