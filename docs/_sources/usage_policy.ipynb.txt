{
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3.8.2 64-bit ('.venv': venv)",
   "name": "python_defaultSpec_1597669925034"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.8.2-final"
  },
  "name": ""
 },
 "nbformat": 3,
 "nbformat_minor": 0,
 "worksheets": [
  {
   "cells": [
    {
     "cell_type": "markdown",
     "metadata": {},
     "source": [
      "# Usage (details: policy measures)\n",
      "Here, we will analyse the relationship of policy measures and parameter values of SIR-derived ODE models. Policy measures are tracked by [Oxford Covid-19 Government Response Tracker (OxCGRT)](https://github.com/OxCGRT/covid-policy-tracker)."
     ]
    },
    {
     "cell_type": "heading",
     "level": 2,
     "metadata": {},
     "source": [
      "Preparation"
     ]
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "# Standard users\n",
      "# !pip install covsirphy\n",
      "# Developers (Note: this notebook is in example directory)\n",
      "import os\n",
      "os.chdir(\"../\")"
     ],
     "language": "python",
     "metadata": {},
     "outputs": [],
     "prompt_number": 1
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "from pprint import pprint"
     ],
     "language": "python",
     "metadata": {},
     "outputs": [],
     "prompt_number": 2
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "import covsirphy as cs\n",
      "cs.__version__"
     ],
     "language": "python",
     "metadata": {},
     "outputs": [
      {
       "output_type": "pyout",
       "prompt_number": 3,
       "text": [
        "'2.9.0'"
       ]
      }
     ],
     "prompt_number": 3
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "# Standard users and developers\n",
      "data_loader = cs.DataLoader(\"input\")\n",
      "# The number of cases (JHU style)\n",
      "jhu_data = data_loader.jhu(verbose=False)\n",
      "# Population in each country\n",
      "population_data = data_loader.population(verbose=False)\n",
      "# Government Response Tracker (OxCGRT)\n",
      "oxcgrt_data = data_loader.oxcgrt(verbose=False)\n",
      "# Description/citation\n",
      "print(oxcgrt_data.citation)"
     ],
     "language": "python",
     "metadata": {
      "tags": []
     },
     "outputs": [
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "(Secondary source) Guidotti, E., Ardia, D., (2020), \"COVID-19 Data Hub\", Journal of Open Source Software 5(51):2376, doi: 10.21105/joss.02376.\n",
        "We can get Citation list of primary sources with DataLoader(...).covid19dh_citation\n"
       ]
      }
     ],
     "prompt_number": 4
    },
    {
     "cell_type": "markdown",
     "metadata": {},
     "source": [
      "## Class for policy measure analysis\n",
      "We will `PolicyMeasures` class to find relationship of policy measures and parameter values of SIR-derived ODE models."
     ]
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "# Create analyser with tau value 360 [min] (can be changed)\n",
      "analyser = cs.PolicyMeasures(jhu_data, population_data, oxcgrt_data, tau=360)\n",
      "# The number of registerd countries\n",
      "len(analyser.countries)"
     ],
     "language": "python",
     "metadata": {
      "tags": []
     },
     "outputs": [
      {
       "output_type": "pyout",
       "prompt_number": 5,
       "text": [
        "184"
       ]
      }
     ],
     "prompt_number": 5
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "# We can get Scenario instance for detailed scenario analysis\n",
      "type(analyser.scenario(\"Japan\"))"
     ],
     "language": "python",
     "metadata": {},
     "outputs": [
      {
       "output_type": "pyout",
       "prompt_number": 6,
       "text": [
        "covsirphy.analysis.scenario.Scenario"
       ]
      }
     ],
     "prompt_number": 6
    },
    {
     "cell_type": "markdown",
     "metadata": {},
     "source": [
      "## Set phases with S-R trend analysis\n",
      "We will perform S-R trend analysis to set phases in all countries. Countries which do not have **12th phases** will be un-registered for the next analysis. This number will be adjusted for your analysis."
     ]
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "# Show the number of phases of all countries\n",
      "analyser.trend()\n",
      "pprint(analyser.phase_len(), compact=True)"
     ],
     "language": "python",
     "metadata": {},
     "outputs": [
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "{4: ['Myanmar', 'Holy See', 'Tanzania'],\n",
        " 5: ['Brunei', 'Georgia', 'Papua New Guinea', 'Uganda', 'Slovakia', 'Hungary',\n",
        "     'Tunisia', 'Fiji', 'Grenada'],\n",
        " 6: ['Montenegro', 'Cambodia', 'Jordan', 'Equatorial Guinea', 'Libya',\n",
        "     'Trinidad and Tobago', 'Yemen', 'Jamaica', 'Czech Republic', 'Belize',\n",
        "     'Ireland', 'Seychelles'],\n",
        " 7: ['Mongolia', 'Australia', 'Netherlands', 'Sao Tome and Principe',\n",
        "     'Colombia', 'Angola', 'Spain', 'Cyprus', 'Guinea-Bissau', 'Mauritius',\n",
        "     'Saint Vincent and the Grenadines', 'Central African Republic', 'Malawi',\n",
        "     'San Marino', 'Malta', 'South Sudan', 'Zimbabwe', 'Slovenia', 'Gambia',\n",
        "     'Dominica', 'Andorra', 'Antigua and Barbuda', 'Kazakhstan', 'Lesotho',\n",
        "     'Bahamas'],\n",
        " 8: ['Liechtenstein', 'Malaysia', 'Rwanda', 'Paraguay', 'Benin', 'Madagascar',\n",
        "     'Botswana', 'Saint Lucia', 'Guyana', 'Djibouti', 'Burkina Faso', 'Israel',\n",
        "     'Lebanon', 'Eritrea', 'Denmark', 'Comoros', 'Iceland', 'Niger', 'Austria',\n",
        "     'Croatia', 'Sudan', 'Nepal', 'Taiwan', 'Zambia', 'Vietnam', 'Thailand',\n",
        "     'Namibia', 'Morocco', 'Nicaragua', 'New Zealand', 'Monaco', 'Mozambique',\n",
        "     'Kyrgyzstan'],\n",
        " 9: ['China', 'Philippines', 'Ukraine', 'Ecuador', 'Barbados', 'Romania',\n",
        "     'Lithuania', 'Portugal', 'Gabon', 'Greece', 'Palestine', 'Estonia',\n",
        "     'Tajikistan', 'Suriname', 'Luxembourg', 'Haiti', 'Cameroon', 'Bhutan',\n",
        "     'Serbia', 'Ghana', 'Ethiopia', 'Poland', 'Burundi', 'Sri Lanka', 'Norway',\n",
        "     'Bermuda', 'Kenya', 'Qatar', 'Indonesia', 'Argentina', 'Mauritania',\n",
        "     'Afghanistan', 'South Africa'],\n",
        " 10: ['Congo', 'Guatemala', 'Costa Rica', 'India', 'Moldova', 'Liberia',\n",
        "      'Maldives', 'Chad', 'Pakistan', 'Somalia', 'Swaziland', 'Uruguay',\n",
        "      'Senegal', 'Oman', 'Canada', 'Syria', 'Singapore', 'Chile', 'Bulgaria',\n",
        "      'Japan', 'Finland', 'Uzbekistan', 'Sierra Leone', 'Korea, South',\n",
        "      'Kosovo', 'Venezuela', 'Switzerland', 'Cuba', 'Albania'],\n",
        " 11: ['Bangladesh', 'Macedonia', 'Saudi Arabia', 'Egypt', 'Azerbaijan',\n",
        "      'Honduras', 'Belarus', 'Panama', 'Germany', 'Guinea', 'Togo',\n",
        "      'El Salvador', 'Armenia', 'Cape Verde', 'Mali',\n",
        "      'Bosnia and Herzegovina'],\n",
        " 12: ['Dominican Republic', 'France', 'Iran', 'Algeria', 'Latvia', 'Belgium',\n",
        "      'United Arab Emirates', 'Kuwait', 'Italy', 'Nigeria', 'United States',\n",
        "      'Mexico', 'Iraq', 'Bahrain', 'Turkey', 'Peru', 'Brazil'],\n",
        " 13: ['Bolivia', 'Russia']}\n"
       ]
      }
     ],
     "prompt_number": 7
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "# Set phases with S-R trend analysis\n",
      "analyser.trend(min_len=12)\n",
      "# The number of countries\n",
      "len(analyser.countries)"
     ],
     "language": "python",
     "metadata": {},
     "outputs": [
      {
       "output_type": "pyout",
       "prompt_number": 8,
       "text": [
        "19"
       ]
      }
     ],
     "prompt_number": 8
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "phase_len_dict = analyser.phase_len()\n",
      "pprint(phase_len_dict, compact=True)"
     ],
     "language": "python",
     "metadata": {
      "tags": []
     },
     "outputs": [
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "{12: ['Dominican Republic', 'France', 'Iran', 'Algeria', 'Latvia', 'Belgium',\n",
        "      'United Arab Emirates', 'Kuwait', 'Italy', 'Nigeria', 'United States',\n",
        "      'Mexico', 'Iraq', 'Bahrain', 'Turkey', 'Peru', 'Brazil'],\n",
        " 13: ['Bolivia', 'Russia']}\n"
       ]
      }
     ],
     "prompt_number": 9
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "# Here, only show the countries which have the most phases\n",
      "countries_show = max(phase_len_dict.items(), key=lambda x: x[0])[1]\n",
      "# Show summary\n",
      "analyser.summary(countries=countries_show)"
     ],
     "language": "python",
     "metadata": {
      "tags": []
     },
     "outputs": [
      {
       "html": [
        "<div>\n",
        "<style scoped>\n",
        "    .dataframe tbody tr th:only-of-type {\n",
        "        vertical-align: middle;\n",
        "    }\n",
        "\n",
        "    .dataframe tbody tr th {\n",
        "        vertical-align: top;\n",
        "    }\n",
        "\n",
        "    .dataframe thead th {\n",
        "        text-align: right;\n",
        "    }\n",
        "</style>\n",
        "<table border=\"1\" class=\"dataframe\">\n",
        "  <thead>\n",
        "    <tr style=\"text-align: right;\">\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th>Type</th>\n",
        "      <th>Start</th>\n",
        "      <th>End</th>\n",
        "      <th>Population</th>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>Country</th>\n",
        "      <th>Phase</th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "    </tr>\n",
        "  </thead>\n",
        "  <tbody>\n",
        "    <tr>\n",
        "      <th rowspan=\"13\" valign=\"top\">Bolivia</th>\n",
        "      <th>0th</th>\n",
        "      <td>Past</td>\n",
        "      <td>01Apr2020</td>\n",
        "      <td>13Jun2020</td>\n",
        "      <td>11353142</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>1st</th>\n",
        "      <td>Past</td>\n",
        "      <td>14Jun2020</td>\n",
        "      <td>25Jun2020</td>\n",
        "      <td>11353142</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>2nd</th>\n",
        "      <td>Past</td>\n",
        "      <td>26Jun2020</td>\n",
        "      <td>05Jul2020</td>\n",
        "      <td>11353142</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>3rd</th>\n",
        "      <td>Past</td>\n",
        "      <td>06Jul2020</td>\n",
        "      <td>14Jul2020</td>\n",
        "      <td>11353142</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>4th</th>\n",
        "      <td>Past</td>\n",
        "      <td>15Jul2020</td>\n",
        "      <td>22Jul2020</td>\n",
        "      <td>11353142</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>5th</th>\n",
        "      <td>Past</td>\n",
        "      <td>23Jul2020</td>\n",
        "      <td>31Jul2020</td>\n",
        "      <td>11353142</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>6th</th>\n",
        "      <td>Past</td>\n",
        "      <td>01Aug2020</td>\n",
        "      <td>09Aug2020</td>\n",
        "      <td>11353142</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>7th</th>\n",
        "      <td>Past</td>\n",
        "      <td>10Aug2020</td>\n",
        "      <td>17Aug2020</td>\n",
        "      <td>11353142</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>8th</th>\n",
        "      <td>Past</td>\n",
        "      <td>18Aug2020</td>\n",
        "      <td>25Aug2020</td>\n",
        "      <td>11353142</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>9th</th>\n",
        "      <td>Past</td>\n",
        "      <td>26Aug2020</td>\n",
        "      <td>02Sep2020</td>\n",
        "      <td>11353142</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>10th</th>\n",
        "      <td>Past</td>\n",
        "      <td>03Sep2020</td>\n",
        "      <td>11Sep2020</td>\n",
        "      <td>11353142</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>11th</th>\n",
        "      <td>Past</td>\n",
        "      <td>12Sep2020</td>\n",
        "      <td>24Sep2020</td>\n",
        "      <td>11353142</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>12th</th>\n",
        "      <td>Past</td>\n",
        "      <td>25Sep2020</td>\n",
        "      <td>21Oct2020</td>\n",
        "      <td>11353142</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th rowspan=\"13\" valign=\"top\">Russia</th>\n",
        "      <th>0th</th>\n",
        "      <td>Past</td>\n",
        "      <td>12Feb2020</td>\n",
        "      <td>07May2020</td>\n",
        "      <td>330457362</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>1st</th>\n",
        "      <td>Past</td>\n",
        "      <td>08May2020</td>\n",
        "      <td>18May2020</td>\n",
        "      <td>330457362</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>2nd</th>\n",
        "      <td>Past</td>\n",
        "      <td>19May2020</td>\n",
        "      <td>30May2020</td>\n",
        "      <td>330457362</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>3rd</th>\n",
        "      <td>Past</td>\n",
        "      <td>31May2020</td>\n",
        "      <td>12Jun2020</td>\n",
        "      <td>330457362</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>4th</th>\n",
        "      <td>Past</td>\n",
        "      <td>13Jun2020</td>\n",
        "      <td>26Jun2020</td>\n",
        "      <td>330457362</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>5th</th>\n",
        "      <td>Past</td>\n",
        "      <td>27Jun2020</td>\n",
        "      <td>10Jul2020</td>\n",
        "      <td>330457362</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>6th</th>\n",
        "      <td>Past</td>\n",
        "      <td>11Jul2020</td>\n",
        "      <td>24Jul2020</td>\n",
        "      <td>330457362</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>7th</th>\n",
        "      <td>Past</td>\n",
        "      <td>25Jul2020</td>\n",
        "      <td>10Aug2020</td>\n",
        "      <td>330457362</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>8th</th>\n",
        "      <td>Past</td>\n",
        "      <td>11Aug2020</td>\n",
        "      <td>28Aug2020</td>\n",
        "      <td>330457362</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>9th</th>\n",
        "      <td>Past</td>\n",
        "      <td>29Aug2020</td>\n",
        "      <td>17Sep2020</td>\n",
        "      <td>330457362</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>10th</th>\n",
        "      <td>Past</td>\n",
        "      <td>18Sep2020</td>\n",
        "      <td>01Oct2020</td>\n",
        "      <td>330457362</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>11th</th>\n",
        "      <td>Past</td>\n",
        "      <td>02Oct2020</td>\n",
        "      <td>10Oct2020</td>\n",
        "      <td>330457362</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>12th</th>\n",
        "      <td>Past</td>\n",
        "      <td>11Oct2020</td>\n",
        "      <td>21Oct2020</td>\n",
        "      <td>330457362</td>\n",
        "    </tr>\n",
        "  </tbody>\n",
        "</table>\n",
        "</div>"
       ],
       "output_type": "pyout",
       "prompt_number": 10,
       "text": [
        "               Type      Start        End  Population\n",
        "Country Phase                                        \n",
        "Bolivia 0th    Past  01Apr2020  13Jun2020    11353142\n",
        "        1st    Past  14Jun2020  25Jun2020    11353142\n",
        "        2nd    Past  26Jun2020  05Jul2020    11353142\n",
        "        3rd    Past  06Jul2020  14Jul2020    11353142\n",
        "        4th    Past  15Jul2020  22Jul2020    11353142\n",
        "        5th    Past  23Jul2020  31Jul2020    11353142\n",
        "        6th    Past  01Aug2020  09Aug2020    11353142\n",
        "        7th    Past  10Aug2020  17Aug2020    11353142\n",
        "        8th    Past  18Aug2020  25Aug2020    11353142\n",
        "        9th    Past  26Aug2020  02Sep2020    11353142\n",
        "        10th   Past  03Sep2020  11Sep2020    11353142\n",
        "        11th   Past  12Sep2020  24Sep2020    11353142\n",
        "        12th   Past  25Sep2020  21Oct2020    11353142\n",
        "Russia  0th    Past  12Feb2020  07May2020   330457362\n",
        "        1st    Past  08May2020  18May2020   330457362\n",
        "        2nd    Past  19May2020  30May2020   330457362\n",
        "        3rd    Past  31May2020  12Jun2020   330457362\n",
        "        4th    Past  13Jun2020  26Jun2020   330457362\n",
        "        5th    Past  27Jun2020  10Jul2020   330457362\n",
        "        6th    Past  11Jul2020  24Jul2020   330457362\n",
        "        7th    Past  25Jul2020  10Aug2020   330457362\n",
        "        8th    Past  11Aug2020  28Aug2020   330457362\n",
        "        9th    Past  29Aug2020  17Sep2020   330457362\n",
        "        10th   Past  18Sep2020  01Oct2020   330457362\n",
        "        11th   Past  02Oct2020  10Oct2020   330457362\n",
        "        12th   Past  11Oct2020  21Oct2020   330457362"
       ]
      }
     ],
     "prompt_number": 10
    },
    {
     "cell_type": "markdown",
     "metadata": {},
     "source": [
      "## Parameter estimation\n",
      "we will estimate the parameter values with SIR-derived ODE models in each country."
     ]
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "# Parameter estimation with SIR-F model\n",
      "analyser.estimate(cs.SIRF)"
     ],
     "language": "python",
     "metadata": {
      "tags": []
     },
     "outputs": [
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n",
        "<SIR-F model: parameter estimation>\n",
        "Running optimization with 4 CPUs...\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tNGA,  4th phase (29Jun2020 - 07Jul2020): finished  148 trials in 0 min  5 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tMEX,  6th phase (31Jul2020 - 11Aug2020): finished  158 trials in 0 min  5 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tFRA,  9th phase (11Sep2020 - 18Sep2020): finished  502 trials in 0 min 20 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tRUS,  9th phase (29Aug2020 - 17Sep2020): finished 1246 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tLVA,  4th phase (08May2020 - 15May2020): finished 1274 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tBRA, 11th phase (24Sep2020 - 21Oct2020): finished 1238 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tBOL, 11th phase (12Sep2020 - 24Sep2020): finished  389 trials in 0 min 15 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tRUS,  6th phase (11Jul2020 - 24Jul2020): finished 1259 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tUSA,  5th phase (21Jul2020 - 30Jul2020): finished  283 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tPER,  1st phase (10May2020 - 29May2020): finished 1236 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tFRA,  1st phase (28Mar2020 - 11Apr2020): finished 1254 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tBEL, 10th phase (03Oct2020 - 10Oct2020): finished  819 trials in 0 min 35 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tARE, 11th phase (13Oct2020 - 21Oct2020): finished  127 trials in 0 min  5 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tPER, 11th phase (30Sep2020 - 21Oct2020): finished 1231 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tIRN, 11th phase (08Oct2020 - 21Oct2020): finished  130 trials in 0 min  5 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tKWT,  6th phase (23Jul2020 - 06Aug2020): finished  769 trials in 0 min 35 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tPER, 10th phase (18Sep2020 - 29Sep2020): finished 1168 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tTUR,  3rd phase (07May2020 - 21May2020): finished 1171 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tPER,  0th phase (16Mar2020 - 09May2020): finished 1132 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tBOL,  0th phase (01Apr2020 - 13Jun2020): finished 1163 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tIRN,  0th phase (26Feb2020 - 30Mar2020): finished 1218 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tDZA,  7th phase (05Aug2020 - 12Aug2020): finished  279 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tKWT,  1st phase (14May2020 - 27May2020): finished 1269 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tBOL,  9th phase (26Aug2020 - 02Sep2020): finished  275 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tPER,  2nd phase (30May2020 - 17Jun2020): finished 1255 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tFRA,  5th phase (31May2020 - 10Jul2020): finished 1220 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tKWT, 11th phase (07Oct2020 - 21Oct2020): finished  583 trials in 0 min 25 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tBOL,  3rd phase (06Jul2020 - 14Jul2020): finished  808 trials in 0 min 35 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tNGA,  6th phase (18Jul2020 - 27Jul2020): finished  404 trials in 0 min 15 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tTUR,  1st phase (17Apr2020 - 26Apr2020): finished 1234 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tARE,  4th phase (12Jun2020 - 01Jul2020): finished 1228 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tBOL,  4th phase (15Jul2020 - 22Jul2020): finished 1149 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tIRN,  1st phase (31Mar2020 - 04May2020): finished 1120 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tIRQ,  7th phase (05Sep2020 - 12Sep2020): finished  137 trials in 0 min  5 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tFRA,  0th phase (12Feb2020 - 27Mar2020): finished 1113 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tKWT,  9th phase (07Sep2020 - 20Sep2020): finished  264 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tKWT,  0th phase (08Mar2020 - 13May2020): finished  921 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tIRQ,  3rd phase (25Jul2020 - 06Aug2020): finished  900 trials in 0 min 40 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tBOL,  6th phase (01Aug2020 - 09Aug2020): finished  146 trials in 0 min  5 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tLVA,  8th phase (07Aug2020 - 29Aug2020): finished 1443 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tDOM,  8th phase (21Aug2020 - 04Sep2020): finished  269 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tPER,  7th phase (18Aug2020 - 27Aug2020): finished 1243 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tKWT,  5th phase (08Jul2020 - 22Jul2020): finished 1232 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tTUR,  4th phase (22May2020 - 13Jun2020): finished 1190 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tBRA,  9th phase (30Aug2020 - 10Sep2020): finished  119 trials in 0 min  5 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tLVA,  1st phase (06Apr2020 - 17Apr2020): finished 1335 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tITA,  6th phase (18May2020 - 30Jun2020): finished  449 trials in 0 min 20 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tBHR, 10th phase (23Sep2020 - 04Oct2020): finished  366 trials in 0 min 15 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tARE,  8th phase (11Sep2020 - 23Sep2020): finished 1201 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tDOM, 11th phase (05Oct2020 - 21Oct2020): finished  474 trials in 0 min 20 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tDZA,  1st phase (02May2020 - 23May2020): finished 1161 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tNGA,  1st phase (23May2020 - 08Jun2020): finished 1196 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tFRA,  8th phase (27Aug2020 - 10Sep2020): finished 1188 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tNGA,  0th phase (18Mar2020 - 22May2020): finished 1165 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tITA,  8th phase (25Aug2020 - 11Sep2020): finished 1200 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tLVA,  2nd phase (18Apr2020 - 29Apr2020): finished 1411 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tBRA,  7th phase (11Aug2020 - 19Aug2020): finished 1240 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tNGA,  2nd phase (09Jun2020 - 18Jun2020): finished 1253 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tNGA, 10th phase (03Sep2020 - 28Sep2020): finished 1234 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tARE,  6th phase (21Jul2020 - 19Aug2020): finished  966 trials in 0 min 50 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tMEX, 10th phase (25Sep2020 - 05Oct2020): finished 1162 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tLVA,  0th phase (10Mar2020 - 05Apr2020): finished 1324 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tUSA,  3rd phase (26Jun2020 - 09Jul2020): finished 1168 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tITA,  5th phase (03May2020 - 17May2020): finished  287 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tDZA,  6th phase (28Jul2020 - 04Aug2020): finished  278 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tKWT,  8th phase (23Aug2020 - 06Sep2020): finished  636 trials in 0 min 25 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tBEL,  9th phase (22Sep2020 - 02Oct2020): finished  710 trials in 0 min 30 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tBHR,  9th phase (14Sep2020 - 22Sep2020): finished  523 trials in 0 min 20 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tBRA,  0th phase (16Mar2020 - 26May2020): finished 1211 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tDZA,  9th phase (23Aug2020 - 04Sep2020): finished  391 trials in 0 min 15 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tNGA, 11th phase (29Sep2020 - 21Oct2020): finished 1301 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tMEX,  4th phase (07Jul2020 - 16Jul2020): finished  612 trials in 0 min 25 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tDOM,  6th phase (02Aug2020 - 11Aug2020): finished 1241 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tIRN,  4th phase (15Jun2020 - 01Jul2020): finished 1225 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tUSA,  4th phase (10Jul2020 - 20Jul2020): finished  847 trials in 0 min 35 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tLVA, 10th phase (18Sep2020 - 26Sep2020): finished 1476 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tTUR,  7th phase (24Jul2020 - 15Aug2020): finished 1434 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tMEX,  7th phase (12Aug2020 - 24Aug2020): finished 1485 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tIRN,  7th phase (01Aug2020 - 17Aug2020): finished 1496 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tNGA,  9th phase (18Aug2020 - 02Sep2020): finished 1478 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tUSA, 11th phase (09Oct2020 - 21Oct2020): finished  495 trials in 0 min 15 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tKWT,  3rd phase (08Jun2020 - 23Jun2020): finished 1639 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tDOM, 10th phase (18Sep2020 - 04Oct2020): finished  233 trials in 0 min  5 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tUSA,  2nd phase (04Jun2020 - 25Jun2020): finished 1679 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tBRA,  1st phase (27May2020 - 14Jun2020): finished 1745 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tUSA,  7th phase (13Aug2020 - 26Aug2020): finished  635 trials in 0 min 15 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tIRN,  3rd phase (29May2020 - 14Jun2020): finished 1868 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tIRQ,  4th phase (07Aug2020 - 17Aug2020): finished  448 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tMEX,  5th phase (17Jul2020 - 30Jul2020): finished 1918 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tBEL,  2nd phase (09Apr2020 - 20Apr2020): finished 1913 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tUSA,  9th phase (12Sep2020 - 25Sep2020): finished 1098 trials in 0 min 30 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tITA,  3rd phase (11Apr2020 - 24Apr2020): finished 1895 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tARE,  3rd phase (28May2020 - 11Jun2020): finished 1895 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tFRA, 10th phase (19Sep2020 - 01Oct2020): finished  460 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tRUS,  5th phase (27Jun2020 - 10Jul2020): finished 1879 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tBHR,  1st phase (07May2020 - 31May2020): finished 1828 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tIRQ,  9th phase (22Sep2020 - 30Sep2020): finished  209 trials in 0 min  5 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tMEX,  0th phase (03Mar2020 - 22May2020): finished 1750 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tDOM,  2nd phase (16Jun2020 - 02Jul2020): finished 1700 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tIRN,  6th phase (17Jul2020 - 31Jul2020): finished  216 trials in 0 min  5 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tBRA,  4th phase (09Jul2020 - 20Jul2020): finished  400 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tDZA, 10th phase (05Sep2020 - 22Sep2020): finished  525 trials in 0 min 15 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tARE,  1st phase (02May2020 - 16May2020): finished 1740 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tBHR,  6th phase (23Jul2020 - 11Aug2020): finished  536 trials in 0 min 15 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tTUR, 10th phase (20Sep2020 - 05Oct2020): finished  311 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tBOL,  2nd phase (26Jun2020 - 05Jul2020): finished  310 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tFRA,  2nd phase (12Apr2020 - 20Apr2020): finished 1632 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tITA,  1st phase (21Mar2020 - 29Mar2020): finished 1155 trials in 0 min 40 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tRUS,  3rd phase (31May2020 - 12Jun2020): finished 1583 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tMEX,  1st phase (23May2020 - 09Jun2020): finished  194 trials in 0 min  5 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tDZA,  0th phase (12Mar2020 - 01May2020): finished 1632 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tDZA,  2nd phase (24May2020 - 25Jun2020): finished 1610 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tPER,  3rd phase (18Jun2020 - 10Jul2020): finished 1627 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tITA, 10th phase (27Sep2020 - 06Oct2020): finished  208 trials in 0 min  5 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tPER,  8th phase (28Aug2020 - 07Sep2020): finished 1635 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tARE,  5th phase (02Jul2020 - 20Jul2020): finished 1602 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tDOM,  3rd phase (03Jul2020 - 14Jul2020): finished 1586 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tNGA,  7th phase (28Jul2020 - 07Aug2020): finished 1590 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tARE, 10th phase (03Oct2020 - 12Oct2020): finished  510 trials in 0 min 15 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tUSA,  8th phase (27Aug2020 - 11Sep2020): finished  232 trials in 0 min  5 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tLVA,  7th phase (09Jul2020 - 06Aug2020): finished 1770 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tIRN,  2nd phase (05May2020 - 28May2020): finished 1642 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tRUS,  2nd phase (19May2020 - 30May2020): finished 1557 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tDOM,  9th phase (05Sep2020 - 17Sep2020): finished  427 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tRUS, 11th phase (02Oct2020 - 10Oct2020): finished 1593 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tIRQ,  0th phase (09Mar2020 - 22Jun2020): finished 1555 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tDZA, 11th phase (23Sep2020 - 21Oct2020): finished  377 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tLVA, 11th phase (27Sep2020 - 21Oct2020): finished 1745 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tARE,  7th phase (20Aug2020 - 10Sep2020): finished 1509 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tTUR,  8th phase (16Aug2020 - 02Sep2020): finished  644 trials in 0 min 20 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tBRA,  8th phase (20Aug2020 - 29Aug2020): finished 1663 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tBHR,  2nd phase (01Jun2020 - 13Jun2020): finished 1638 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tITA,  9th phase (12Sep2020 - 26Sep2020): finished  361 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tBRA,  2nd phase (15Jun2020 - 26Jun2020): finished  504 trials in 0 min 15 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tIRQ,  8th phase (13Sep2020 - 21Sep2020): finished  214 trials in 0 min  5 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tDOM,  0th phase (24Mar2020 - 23May2020): finished 1490 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tDZA,  8th phase (13Aug2020 - 22Aug2020): finished  407 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tFRA,  6th phase (11Jul2020 - 09Aug2020): finished  508 trials in 0 min 15 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tBOL,  5th phase (23Jul2020 - 31Jul2020): finished  191 trials in 0 min  5 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tPER,  9th phase (08Sep2020 - 17Sep2020): finished 1602 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tKWT,  7th phase (07Aug2020 - 22Aug2020): finished  357 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tBOL, 12th phase (25Sep2020 - 21Oct2020): finished  515 trials in 0 min 15 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tRUS,  0th phase (12Feb2020 - 07May2020): finished 1590 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tIRN,  9th phase (08Sep2020 - 24Sep2020): finished  155 trials in 0 min  5 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tIRN,  5th phase (02Jul2020 - 16Jul2020): finished  184 trials in 0 min  5 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tRUS, 10th phase (18Sep2020 - 01Oct2020): finished 1569 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tFRA,  7th phase (10Aug2020 - 26Aug2020): finished 1109 trials in 0 min 40 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tUSA,  1st phase (03May2020 - 03Jun2020): finished 1577 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tIRN,  8th phase (18Aug2020 - 07Sep2020): finished  155 trials in 0 min  5 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tITA,  7th phase (01Jul2020 - 24Aug2020): finished 1462 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tIRQ, 10th phase (01Oct2020 - 09Oct2020): finished  296 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tBOL,  7th phase (10Aug2020 - 17Aug2020): finished  301 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tDZA,  5th phase (19Jul2020 - 27Jul2020): finished 1384 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tNGA,  8th phase (08Aug2020 - 17Aug2020): finished 1389 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tBEL,  6th phase (14Jul2020 - 10Aug2020): finished 1362 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tIRQ, 11th phase (10Oct2020 - 21Oct2020): finished  295 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tDOM,  1st phase (24May2020 - 15Jun2020): finished 1424 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tTUR,  2nd phase (27Apr2020 - 06May2020): finished  272 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tARE,  0th phase (12Feb2020 - 01May2020): finished 1204 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tBHR,  7th phase (12Aug2020 - 02Sep2020): finished 1263 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tRUS,  7th phase (25Jul2020 - 10Aug2020): finished 1258 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tIRQ,  2nd phase (10Jul2020 - 24Jul2020): finished 1282 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tTUR,  6th phase (02Jul2020 - 23Jul2020): finished  152 trials in 0 min  5 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tDOM,  4th phase (15Jul2020 - 23Jul2020): finished  341 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tNGA,  3rd phase (19Jun2020 - 28Jun2020): finished 1414 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tBEL,  7th phase (11Aug2020 - 30Aug2020): finished 1398 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tKWT,  4th phase (24Jun2020 - 07Jul2020): finished  306 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tRUS,  1st phase (08May2020 - 18May2020): finished 1396 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tMEX,  2nd phase (10Jun2020 - 23Jun2020): finished  467 trials in 0 min 15 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tDOM,  5th phase (24Jul2020 - 01Aug2020): finished 1406 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tTUR,  9th phase (03Sep2020 - 19Sep2020): finished  317 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tFRA, 11th phase (02Oct2020 - 21Oct2020): finished 1103 trials in 0 min 45 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tPER,  4th phase (11Jul2020 - 27Jul2020): finished 1443 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tBOL,  1st phase (14Jun2020 - 25Jun2020): finished 1401 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tLVA,  3rd phase (30Apr2020 - 07May2020): finished 1611 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tIRN, 10th phase (25Sep2020 - 07Oct2020): finished  159 trials in 0 min  5 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tBOL, 10th phase (03Sep2020 - 11Sep2020): finished  741 trials in 0 min 25 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tBHR,  4th phase (26Jun2020 - 07Jul2020): finished 1406 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tTUR,  0th phase (24Mar2020 - 16Apr2020): finished 1448 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tLVA,  9th phase (30Aug2020 - 17Sep2020): finished 1583 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tBEL,  3rd phase (21Apr2020 - 02May2020): finished 1423 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tITA,  4th phase (25Apr2020 - 02May2020): finished  161 trials in 0 min  5 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tUSA,  6th phase (31Jul2020 - 12Aug2020): finished  158 trials in 0 min  5 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tTUR,  5th phase (14Jun2020 - 01Jul2020): finished 1392 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tBRA,  3rd phase (27Jun2020 - 08Jul2020): finished 1522 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tARE,  2nd phase (17May2020 - 27May2020): finished 1415 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tDZA,  3rd phase (26Jun2020 - 08Jul2020): finished 1376 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tMEX,  8th phase (25Aug2020 - 07Sep2020): finished  157 trials in 0 min  5 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tUSA, 10th phase (26Sep2020 - 08Oct2020): finished  743 trials in 0 min 30 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tIRQ,  5th phase (18Aug2020 - 26Aug2020): finished  129 trials in 0 min  5 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tBHR,  8th phase (03Sep2020 - 13Sep2020): finished 1383 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tARE,  9th phase (24Sep2020 - 02Oct2020): finished 1320 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tDZA,  4th phase (09Jul2020 - 18Jul2020): finished  307 trials in 0 min 15 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tMEX, 11th phase (06Oct2020 - 21Oct2020): finished 1035 trials in 0 min 45 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tLVA,  6th phase (01Jun2020 - 08Jul2020): finished 1232 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tITA,  2nd phase (30Mar2020 - 10Apr2020): finished 1252 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tIRQ,  1st phase (23Jun2020 - 09Jul2020): finished 1266 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tBOL,  8th phase (18Aug2020 - 25Aug2020): finished  647 trials in 0 min 30 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tBEL,  0th phase (17Feb2020 - 29Mar2020): finished 1346 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tRUS,  4th phase (13Jun2020 - 26Jun2020): finished 1143 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tKWT, 10th phase (21Sep2020 - 06Oct2020): finished  235 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tBHR,  0th phase (06Mar2020 - 06May2020): finished 1100 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tBEL,  8th phase (31Aug2020 - 21Sep2020): finished 1073 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tDOM,  7th phase (12Aug2020 - 20Aug2020): finished  354 trials in 0 min 20 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tIRQ,  6th phase (27Aug2020 - 04Sep2020): finished   99 trials in 0 min  5 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tRUS,  8th phase (11Aug2020 - 28Aug2020): finished  981 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tBEL,  4th phase (03May2020 - 18May2020): finished  991 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tBEL,  5th phase (19May2020 - 13Jul2020): finished  993 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tFRA,  3rd phase (21Apr2020 - 04May2020): finished 1053 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tMEX,  3rd phase (24Jun2020 - 06Jul2020): finished 1173 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tITA,  0th phase (24Feb2020 - 20Mar2020): finished 1196 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tLVA,  5th phase (16May2020 - 31May2020): finished 1410 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tUSA,  0th phase (09Feb2020 - 02May2020): finished 1193 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tBEL,  1st phase (30Mar2020 - 08Apr2020): finished 1264 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tKWT,  2nd phase (28May2020 - 07Jun2020): finished 1280 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tBEL, 11th phase (11Oct2020 - 21Oct2020): finished 1320 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tNGA,  5th phase (08Jul2020 - 17Jul2020): finished 1084 trials in 0 min 45 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tFRA,  4th phase (05May2020 - 30May2020): finished 1425 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tBRA,  6th phase (31Jul2020 - 10Aug2020): finished 1041 trials in 0 min 40 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "Completed optimization. Total: 42 min  6 sec\n"
       ]
      }
     ],
     "prompt_number": 11
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "# Show summary\n",
      "analyser.summary(countries=countries_show)"
     ],
     "language": "python",
     "metadata": {},
     "outputs": [
      {
       "html": [
        "<div>\n",
        "<style scoped>\n",
        "    .dataframe tbody tr th:only-of-type {\n",
        "        vertical-align: middle;\n",
        "    }\n",
        "\n",
        "    .dataframe tbody tr th {\n",
        "        vertical-align: top;\n",
        "    }\n",
        "\n",
        "    .dataframe thead th {\n",
        "        text-align: right;\n",
        "    }\n",
        "</style>\n",
        "<table border=\"1\" class=\"dataframe\">\n",
        "  <thead>\n",
        "    <tr style=\"text-align: right;\">\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th>Type</th>\n",
        "      <th>Start</th>\n",
        "      <th>End</th>\n",
        "      <th>Population</th>\n",
        "      <th>ODE</th>\n",
        "      <th>Rt</th>\n",
        "      <th>theta</th>\n",
        "      <th>kappa</th>\n",
        "      <th>rho</th>\n",
        "      <th>sigma</th>\n",
        "      <th>tau</th>\n",
        "      <th>1/beta [day]</th>\n",
        "      <th>1/gamma [day]</th>\n",
        "      <th>1/alpha2 [day]</th>\n",
        "      <th>alpha1 [-]</th>\n",
        "      <th>RMSLE</th>\n",
        "      <th>Trials</th>\n",
        "      <th>Runtime</th>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>Country</th>\n",
        "      <th>Phase</th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "    </tr>\n",
        "  </thead>\n",
        "  <tbody>\n",
        "    <tr>\n",
        "      <th rowspan=\"13\" valign=\"top\">Bolivia</th>\n",
        "      <th>0th</th>\n",
        "      <td>Past</td>\n",
        "      <td>01Apr2020</td>\n",
        "      <td>13Jun2020</td>\n",
        "      <td>11353142</td>\n",
        "      <td>SIR-F</td>\n",
        "      <td>8.49</td>\n",
        "      <td>0.000948141</td>\n",
        "      <td>0.000812912</td>\n",
        "      <td>0.0205924</td>\n",
        "      <td>0.0016109</td>\n",
        "      <td>360</td>\n",
        "      <td>12</td>\n",
        "      <td>155</td>\n",
        "      <td>307</td>\n",
        "      <td>0.001</td>\n",
        "      <td>1.34483</td>\n",
        "      <td>1163</td>\n",
        "      <td>1 min  0 sec</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>1st</th>\n",
        "      <td>Past</td>\n",
        "      <td>14Jun2020</td>\n",
        "      <td>25Jun2020</td>\n",
        "      <td>11353142</td>\n",
        "      <td>SIR-F</td>\n",
        "      <td>2.27</td>\n",
        "      <td>0.00154827</td>\n",
        "      <td>0.000386086</td>\n",
        "      <td>0.0129202</td>\n",
        "      <td>0.00528692</td>\n",
        "      <td>360</td>\n",
        "      <td>19</td>\n",
        "      <td>47</td>\n",
        "      <td>647</td>\n",
        "      <td>0.002</td>\n",
        "      <td>0.029437</td>\n",
        "      <td>1401</td>\n",
        "      <td>1 min  0 sec</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>2nd</th>\n",
        "      <td>Past</td>\n",
        "      <td>26Jun2020</td>\n",
        "      <td>05Jul2020</td>\n",
        "      <td>11353142</td>\n",
        "      <td>SIR-F</td>\n",
        "      <td>2.45</td>\n",
        "      <td>0.0442298</td>\n",
        "      <td>5.9237e-05</td>\n",
        "      <td>0.0121482</td>\n",
        "      <td>0.00467916</td>\n",
        "      <td>360</td>\n",
        "      <td>20</td>\n",
        "      <td>53</td>\n",
        "      <td>4220</td>\n",
        "      <td>0.044</td>\n",
        "      <td>0.0138183</td>\n",
        "      <td>310</td>\n",
        "      <td>0 min 10 sec</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>3rd</th>\n",
        "      <td>Past</td>\n",
        "      <td>06Jul2020</td>\n",
        "      <td>14Jul2020</td>\n",
        "      <td>11353142</td>\n",
        "      <td>SIR-F</td>\n",
        "      <td>2.51</td>\n",
        "      <td>0.0345145</td>\n",
        "      <td>9.00744e-05</td>\n",
        "      <td>0.0110139</td>\n",
        "      <td>0.00414742</td>\n",
        "      <td>360</td>\n",
        "      <td>22</td>\n",
        "      <td>60</td>\n",
        "      <td>2775</td>\n",
        "      <td>0.035</td>\n",
        "      <td>0.00577738</td>\n",
        "      <td>808</td>\n",
        "      <td>0 min 35 sec</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>4th</th>\n",
        "      <td>Past</td>\n",
        "      <td>15Jul2020</td>\n",
        "      <td>22Jul2020</td>\n",
        "      <td>11353142</td>\n",
        "      <td>SIR-F</td>\n",
        "      <td>3.86</td>\n",
        "      <td>0.0196212</td>\n",
        "      <td>0.000151525</td>\n",
        "      <td>0.011453</td>\n",
        "      <td>0.00275406</td>\n",
        "      <td>360</td>\n",
        "      <td>21</td>\n",
        "      <td>90</td>\n",
        "      <td>1649</td>\n",
        "      <td>0.02</td>\n",
        "      <td>0.0180349</td>\n",
        "      <td>1149</td>\n",
        "      <td>1 min  0 sec</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>5th</th>\n",
        "      <td>Past</td>\n",
        "      <td>23Jul2020</td>\n",
        "      <td>31Jul2020</td>\n",
        "      <td>11353142</td>\n",
        "      <td>SIR-F</td>\n",
        "      <td>2.99</td>\n",
        "      <td>0.0441036</td>\n",
        "      <td>6.73522e-05</td>\n",
        "      <td>0.00773212</td>\n",
        "      <td>0.0024017</td>\n",
        "      <td>360</td>\n",
        "      <td>32</td>\n",
        "      <td>104</td>\n",
        "      <td>3711</td>\n",
        "      <td>0.044</td>\n",
        "      <td>0.0106322</td>\n",
        "      <td>191</td>\n",
        "      <td>0 min  5 sec</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>6th</th>\n",
        "      <td>Past</td>\n",
        "      <td>01Aug2020</td>\n",
        "      <td>09Aug2020</td>\n",
        "      <td>11353142</td>\n",
        "      <td>SIR-F</td>\n",
        "      <td>1.86</td>\n",
        "      <td>0.0395045</td>\n",
        "      <td>5.43309e-05</td>\n",
        "      <td>0.00668422</td>\n",
        "      <td>0.00339681</td>\n",
        "      <td>360</td>\n",
        "      <td>37</td>\n",
        "      <td>73</td>\n",
        "      <td>4601</td>\n",
        "      <td>0.04</td>\n",
        "      <td>0.0168803</td>\n",
        "      <td>146</td>\n",
        "      <td>0 min  5 sec</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>7th</th>\n",
        "      <td>Past</td>\n",
        "      <td>10Aug2020</td>\n",
        "      <td>17Aug2020</td>\n",
        "      <td>11353142</td>\n",
        "      <td>SIR-F</td>\n",
        "      <td>1.24</td>\n",
        "      <td>0.0182708</td>\n",
        "      <td>0.000162119</td>\n",
        "      <td>0.0053463</td>\n",
        "      <td>0.00405872</td>\n",
        "      <td>360</td>\n",
        "      <td>46</td>\n",
        "      <td>61</td>\n",
        "      <td>1542</td>\n",
        "      <td>0.018</td>\n",
        "      <td>0.0107285</td>\n",
        "      <td>301</td>\n",
        "      <td>0 min 10 sec</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>8th</th>\n",
        "      <td>Past</td>\n",
        "      <td>18Aug2020</td>\n",
        "      <td>25Aug2020</td>\n",
        "      <td>11353142</td>\n",
        "      <td>SIR-F</td>\n",
        "      <td>0.68</td>\n",
        "      <td>0.000655388</td>\n",
        "      <td>0.000255941</td>\n",
        "      <td>0.00427375</td>\n",
        "      <td>0.00604148</td>\n",
        "      <td>360</td>\n",
        "      <td>58</td>\n",
        "      <td>41</td>\n",
        "      <td>976</td>\n",
        "      <td>0.001</td>\n",
        "      <td>0.0159968</td>\n",
        "      <td>647</td>\n",
        "      <td>0 min 30 sec</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>9th</th>\n",
        "      <td>Past</td>\n",
        "      <td>26Aug2020</td>\n",
        "      <td>02Sep2020</td>\n",
        "      <td>11353142</td>\n",
        "      <td>SIR-F</td>\n",
        "      <td>0.43</td>\n",
        "      <td>0.0190286</td>\n",
        "      <td>0.000237102</td>\n",
        "      <td>0.00414627</td>\n",
        "      <td>0.00927628</td>\n",
        "      <td>360</td>\n",
        "      <td>60</td>\n",
        "      <td>26</td>\n",
        "      <td>1054</td>\n",
        "      <td>0.019</td>\n",
        "      <td>0.00403593</td>\n",
        "      <td>275</td>\n",
        "      <td>0 min 10 sec</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>10th</th>\n",
        "      <td>Past</td>\n",
        "      <td>03Sep2020</td>\n",
        "      <td>11Sep2020</td>\n",
        "      <td>11353142</td>\n",
        "      <td>SIR-F</td>\n",
        "      <td>0.29</td>\n",
        "      <td>0.277116</td>\n",
        "      <td>0.000240776</td>\n",
        "      <td>0.00464585</td>\n",
        "      <td>0.0114135</td>\n",
        "      <td>360</td>\n",
        "      <td>53</td>\n",
        "      <td>21</td>\n",
        "      <td>1038</td>\n",
        "      <td>0.277</td>\n",
        "      <td>0.0445571</td>\n",
        "      <td>741</td>\n",
        "      <td>0 min 25 sec</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>11th</th>\n",
        "      <td>Past</td>\n",
        "      <td>12Sep2020</td>\n",
        "      <td>24Sep2020</td>\n",
        "      <td>11353142</td>\n",
        "      <td>SIR-F</td>\n",
        "      <td>0.63</td>\n",
        "      <td>0.0622132</td>\n",
        "      <td>9.01228e-05</td>\n",
        "      <td>0.00384709</td>\n",
        "      <td>0.0056433</td>\n",
        "      <td>360</td>\n",
        "      <td>64</td>\n",
        "      <td>44</td>\n",
        "      <td>2773</td>\n",
        "      <td>0.062</td>\n",
        "      <td>0.00888391</td>\n",
        "      <td>389</td>\n",
        "      <td>0 min 15 sec</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>12th</th>\n",
        "      <td>Past</td>\n",
        "      <td>25Sep2020</td>\n",
        "      <td>21Oct2020</td>\n",
        "      <td>11353142</td>\n",
        "      <td>SIR-F</td>\n",
        "      <td>0.47</td>\n",
        "      <td>0.0659417</td>\n",
        "      <td>7.58455e-05</td>\n",
        "      <td>0.00223656</td>\n",
        "      <td>0.00437102</td>\n",
        "      <td>360</td>\n",
        "      <td>111</td>\n",
        "      <td>57</td>\n",
        "      <td>3296</td>\n",
        "      <td>0.066</td>\n",
        "      <td>0.0365001</td>\n",
        "      <td>515</td>\n",
        "      <td>0 min 15 sec</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th rowspan=\"13\" valign=\"top\">Russia</th>\n",
        "      <th>0th</th>\n",
        "      <td>Past</td>\n",
        "      <td>12Feb2020</td>\n",
        "      <td>07May2020</td>\n",
        "      <td>330457362</td>\n",
        "      <td>SIR-F</td>\n",
        "      <td>0.02</td>\n",
        "      <td>0.602763</td>\n",
        "      <td>0.544883</td>\n",
        "      <td>0.0336598</td>\n",
        "      <td>0.00231766</td>\n",
        "      <td>360</td>\n",
        "      <td>7</td>\n",
        "      <td>107</td>\n",
        "      <td>0</td>\n",
        "      <td>0.603</td>\n",
        "      <td>19.3133</td>\n",
        "      <td>1590</td>\n",
        "      <td>1 min  0 sec</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>1st</th>\n",
        "      <td>Past</td>\n",
        "      <td>08May2020</td>\n",
        "      <td>18May2020</td>\n",
        "      <td>330457362</td>\n",
        "      <td>SIR-F</td>\n",
        "      <td>2.4</td>\n",
        "      <td>0.000593293</td>\n",
        "      <td>0.000113612</td>\n",
        "      <td>0.0117934</td>\n",
        "      <td>0.00480528</td>\n",
        "      <td>360</td>\n",
        "      <td>21</td>\n",
        "      <td>52</td>\n",
        "      <td>2200</td>\n",
        "      <td>0.001</td>\n",
        "      <td>0.0904316</td>\n",
        "      <td>1396</td>\n",
        "      <td>1 min  0 sec</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>2nd</th>\n",
        "      <td>Past</td>\n",
        "      <td>19May2020</td>\n",
        "      <td>30May2020</td>\n",
        "      <td>330457362</td>\n",
        "      <td>SIR-F</td>\n",
        "      <td>1.04</td>\n",
        "      <td>0.000327055</td>\n",
        "      <td>0.000113205</td>\n",
        "      <td>0.00621381</td>\n",
        "      <td>0.00584971</td>\n",
        "      <td>360</td>\n",
        "      <td>40</td>\n",
        "      <td>42</td>\n",
        "      <td>2208</td>\n",
        "      <td>0</td>\n",
        "      <td>0.12997</td>\n",
        "      <td>1557</td>\n",
        "      <td>1 min  0 sec</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>3rd</th>\n",
        "      <td>Past</td>\n",
        "      <td>31May2020</td>\n",
        "      <td>12Jun2020</td>\n",
        "      <td>330457362</td>\n",
        "      <td>SIR-F</td>\n",
        "      <td>0.98</td>\n",
        "      <td>0.0186301</td>\n",
        "      <td>1.88019e-05</td>\n",
        "      <td>0.00461991</td>\n",
        "      <td>0.00460911</td>\n",
        "      <td>360</td>\n",
        "      <td>54</td>\n",
        "      <td>54</td>\n",
        "      <td>13296</td>\n",
        "      <td>0.019</td>\n",
        "      <td>0.112536</td>\n",
        "      <td>1583</td>\n",
        "      <td>1 min  0 sec</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>4th</th>\n",
        "      <td>Past</td>\n",
        "      <td>13Jun2020</td>\n",
        "      <td>26Jun2020</td>\n",
        "      <td>330457362</td>\n",
        "      <td>SIR-F</td>\n",
        "      <td>0.94</td>\n",
        "      <td>0.00133042</td>\n",
        "      <td>6.92055e-05</td>\n",
        "      <td>0.00343715</td>\n",
        "      <td>0.00358593</td>\n",
        "      <td>360</td>\n",
        "      <td>72</td>\n",
        "      <td>69</td>\n",
        "      <td>3612</td>\n",
        "      <td>0.001</td>\n",
        "      <td>0.0954866</td>\n",
        "      <td>1143</td>\n",
        "      <td>1 min  0 sec</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>5th</th>\n",
        "      <td>Past</td>\n",
        "      <td>27Jun2020</td>\n",
        "      <td>10Jul2020</td>\n",
        "      <td>330457362</td>\n",
        "      <td>SIR-F</td>\n",
        "      <td>0.95</td>\n",
        "      <td>0.017619</td>\n",
        "      <td>1.54152e-05</td>\n",
        "      <td>0.00248821</td>\n",
        "      <td>0.00255453</td>\n",
        "      <td>360</td>\n",
        "      <td>100</td>\n",
        "      <td>97</td>\n",
        "      <td>16217</td>\n",
        "      <td>0.018</td>\n",
        "      <td>0.0671035</td>\n",
        "      <td>1879</td>\n",
        "      <td>1 min  0 sec</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>6th</th>\n",
        "      <td>Past</td>\n",
        "      <td>11Jul2020</td>\n",
        "      <td>24Jul2020</td>\n",
        "      <td>330457362</td>\n",
        "      <td>SIR-F</td>\n",
        "      <td>0.81</td>\n",
        "      <td>0.0200951</td>\n",
        "      <td>2.60886e-05</td>\n",
        "      <td>0.00189639</td>\n",
        "      <td>0.00227217</td>\n",
        "      <td>360</td>\n",
        "      <td>131</td>\n",
        "      <td>110</td>\n",
        "      <td>9582</td>\n",
        "      <td>0.02</td>\n",
        "      <td>0.0664933</td>\n",
        "      <td>1259</td>\n",
        "      <td>1 min  0 sec</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>7th</th>\n",
        "      <td>Past</td>\n",
        "      <td>25Jul2020</td>\n",
        "      <td>10Aug2020</td>\n",
        "      <td>330457362</td>\n",
        "      <td>SIR-F</td>\n",
        "      <td>1.25</td>\n",
        "      <td>0.0173241</td>\n",
        "      <td>1.10662e-05</td>\n",
        "      <td>0.0015287</td>\n",
        "      <td>0.00118684</td>\n",
        "      <td>360</td>\n",
        "      <td>163</td>\n",
        "      <td>210</td>\n",
        "      <td>22591</td>\n",
        "      <td>0.017</td>\n",
        "      <td>0.0555852</td>\n",
        "      <td>1258</td>\n",
        "      <td>1 min  0 sec</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>8th</th>\n",
        "      <td>Past</td>\n",
        "      <td>11Aug2020</td>\n",
        "      <td>28Aug2020</td>\n",
        "      <td>330457362</td>\n",
        "      <td>SIR-F</td>\n",
        "      <td>0.75</td>\n",
        "      <td>0.0746177</td>\n",
        "      <td>2.12819e-05</td>\n",
        "      <td>0.00127409</td>\n",
        "      <td>0.00154901</td>\n",
        "      <td>360</td>\n",
        "      <td>196</td>\n",
        "      <td>161</td>\n",
        "      <td>11747</td>\n",
        "      <td>0.075</td>\n",
        "      <td>0.166803</td>\n",
        "      <td>981</td>\n",
        "      <td>1 min  0 sec</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>9th</th>\n",
        "      <td>Past</td>\n",
        "      <td>29Aug2020</td>\n",
        "      <td>17Sep2020</td>\n",
        "      <td>330457362</td>\n",
        "      <td>SIR-F</td>\n",
        "      <td>0.92</td>\n",
        "      <td>0.000870631</td>\n",
        "      <td>2.12771e-05</td>\n",
        "      <td>0.00126144</td>\n",
        "      <td>0.00135347</td>\n",
        "      <td>360</td>\n",
        "      <td>198</td>\n",
        "      <td>184</td>\n",
        "      <td>11749</td>\n",
        "      <td>0.001</td>\n",
        "      <td>0.0606502</td>\n",
        "      <td>1246</td>\n",
        "      <td>1 min  0 sec</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>10th</th>\n",
        "      <td>Past</td>\n",
        "      <td>18Sep2020</td>\n",
        "      <td>01Oct2020</td>\n",
        "      <td>330457362</td>\n",
        "      <td>SIR-F</td>\n",
        "      <td>1.84</td>\n",
        "      <td>0.0189073</td>\n",
        "      <td>1.87987e-05</td>\n",
        "      <td>0.00160363</td>\n",
        "      <td>0.000835381</td>\n",
        "      <td>360</td>\n",
        "      <td>155</td>\n",
        "      <td>299</td>\n",
        "      <td>13298</td>\n",
        "      <td>0.019</td>\n",
        "      <td>0.0351554</td>\n",
        "      <td>1569</td>\n",
        "      <td>1 min  0 sec</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>11th</th>\n",
        "      <td>Past</td>\n",
        "      <td>02Oct2020</td>\n",
        "      <td>10Oct2020</td>\n",
        "      <td>330457362</td>\n",
        "      <td>SIR-F</td>\n",
        "      <td>1.94</td>\n",
        "      <td>0.00136999</td>\n",
        "      <td>3.12391e-05</td>\n",
        "      <td>0.00234421</td>\n",
        "      <td>0.00117713</td>\n",
        "      <td>360</td>\n",
        "      <td>106</td>\n",
        "      <td>212</td>\n",
        "      <td>8002</td>\n",
        "      <td>0.001</td>\n",
        "      <td>0.0140588</td>\n",
        "      <td>1593</td>\n",
        "      <td>1 min  0 sec</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>12th</th>\n",
        "      <td>Past</td>\n",
        "      <td>11Oct2020</td>\n",
        "      <td>21Oct2020</td>\n",
        "      <td>330457362</td>\n",
        "      <td>-</td>\n",
        "      <td>-</td>\n",
        "      <td>-</td>\n",
        "      <td>-</td>\n",
        "      <td>-</td>\n",
        "      <td>-</td>\n",
        "      <td>-</td>\n",
        "      <td>-</td>\n",
        "      <td>-</td>\n",
        "      <td>-</td>\n",
        "      <td>-</td>\n",
        "      <td>-</td>\n",
        "      <td>-</td>\n",
        "      <td>-</td>\n",
        "    </tr>\n",
        "  </tbody>\n",
        "</table>\n",
        "</div>"
       ],
       "output_type": "pyout",
       "prompt_number": 12,
       "text": [
        "               Type      Start        End  Population    ODE    Rt  \\\n",
        "Country Phase                                                        \n",
        "Bolivia 0th    Past  01Apr2020  13Jun2020    11353142  SIR-F  8.49   \n",
        "        1st    Past  14Jun2020  25Jun2020    11353142  SIR-F  2.27   \n",
        "        2nd    Past  26Jun2020  05Jul2020    11353142  SIR-F  2.45   \n",
        "        3rd    Past  06Jul2020  14Jul2020    11353142  SIR-F  2.51   \n",
        "        4th    Past  15Jul2020  22Jul2020    11353142  SIR-F  3.86   \n",
        "        5th    Past  23Jul2020  31Jul2020    11353142  SIR-F  2.99   \n",
        "        6th    Past  01Aug2020  09Aug2020    11353142  SIR-F  1.86   \n",
        "        7th    Past  10Aug2020  17Aug2020    11353142  SIR-F  1.24   \n",
        "        8th    Past  18Aug2020  25Aug2020    11353142  SIR-F  0.68   \n",
        "        9th    Past  26Aug2020  02Sep2020    11353142  SIR-F  0.43   \n",
        "        10th   Past  03Sep2020  11Sep2020    11353142  SIR-F  0.29   \n",
        "        11th   Past  12Sep2020  24Sep2020    11353142  SIR-F  0.63   \n",
        "        12th   Past  25Sep2020  21Oct2020    11353142  SIR-F  0.47   \n",
        "Russia  0th    Past  12Feb2020  07May2020   330457362  SIR-F  0.02   \n",
        "        1st    Past  08May2020  18May2020   330457362  SIR-F   2.4   \n",
        "        2nd    Past  19May2020  30May2020   330457362  SIR-F  1.04   \n",
        "        3rd    Past  31May2020  12Jun2020   330457362  SIR-F  0.98   \n",
        "        4th    Past  13Jun2020  26Jun2020   330457362  SIR-F  0.94   \n",
        "        5th    Past  27Jun2020  10Jul2020   330457362  SIR-F  0.95   \n",
        "        6th    Past  11Jul2020  24Jul2020   330457362  SIR-F  0.81   \n",
        "        7th    Past  25Jul2020  10Aug2020   330457362  SIR-F  1.25   \n",
        "        8th    Past  11Aug2020  28Aug2020   330457362  SIR-F  0.75   \n",
        "        9th    Past  29Aug2020  17Sep2020   330457362  SIR-F  0.92   \n",
        "        10th   Past  18Sep2020  01Oct2020   330457362  SIR-F  1.84   \n",
        "        11th   Past  02Oct2020  10Oct2020   330457362  SIR-F  1.94   \n",
        "        12th   Past  11Oct2020  21Oct2020   330457362      -     -   \n",
        "\n",
        "                     theta        kappa         rho        sigma  tau  \\\n",
        "Country Phase                                                           \n",
        "Bolivia 0th    0.000948141  0.000812912   0.0205924    0.0016109  360   \n",
        "        1st     0.00154827  0.000386086   0.0129202   0.00528692  360   \n",
        "        2nd      0.0442298   5.9237e-05   0.0121482   0.00467916  360   \n",
        "        3rd      0.0345145  9.00744e-05   0.0110139   0.00414742  360   \n",
        "        4th      0.0196212  0.000151525    0.011453   0.00275406  360   \n",
        "        5th      0.0441036  6.73522e-05  0.00773212    0.0024017  360   \n",
        "        6th      0.0395045  5.43309e-05  0.00668422   0.00339681  360   \n",
        "        7th      0.0182708  0.000162119   0.0053463   0.00405872  360   \n",
        "        8th    0.000655388  0.000255941  0.00427375   0.00604148  360   \n",
        "        9th      0.0190286  0.000237102  0.00414627   0.00927628  360   \n",
        "        10th      0.277116  0.000240776  0.00464585    0.0114135  360   \n",
        "        11th     0.0622132  9.01228e-05  0.00384709    0.0056433  360   \n",
        "        12th     0.0659417  7.58455e-05  0.00223656   0.00437102  360   \n",
        "Russia  0th       0.602763     0.544883   0.0336598   0.00231766  360   \n",
        "        1st    0.000593293  0.000113612   0.0117934   0.00480528  360   \n",
        "        2nd    0.000327055  0.000113205  0.00621381   0.00584971  360   \n",
        "        3rd      0.0186301  1.88019e-05  0.00461991   0.00460911  360   \n",
        "        4th     0.00133042  6.92055e-05  0.00343715   0.00358593  360   \n",
        "        5th       0.017619  1.54152e-05  0.00248821   0.00255453  360   \n",
        "        6th      0.0200951  2.60886e-05  0.00189639   0.00227217  360   \n",
        "        7th      0.0173241  1.10662e-05   0.0015287   0.00118684  360   \n",
        "        8th      0.0746177  2.12819e-05  0.00127409   0.00154901  360   \n",
        "        9th    0.000870631  2.12771e-05  0.00126144   0.00135347  360   \n",
        "        10th     0.0189073  1.87987e-05  0.00160363  0.000835381  360   \n",
        "        11th    0.00136999  3.12391e-05  0.00234421   0.00117713  360   \n",
        "        12th             -            -           -            -    -   \n",
        "\n",
        "              1/beta [day] 1/gamma [day] 1/alpha2 [day] alpha1 [-]  \\\n",
        "Country Phase                                                        \n",
        "Bolivia 0th             12           155            307      0.001   \n",
        "        1st             19            47            647      0.002   \n",
        "        2nd             20            53           4220      0.044   \n",
        "        3rd             22            60           2775      0.035   \n",
        "        4th             21            90           1649       0.02   \n",
        "        5th             32           104           3711      0.044   \n",
        "        6th             37            73           4601       0.04   \n",
        "        7th             46            61           1542      0.018   \n",
        "        8th             58            41            976      0.001   \n",
        "        9th             60            26           1054      0.019   \n",
        "        10th            53            21           1038      0.277   \n",
        "        11th            64            44           2773      0.062   \n",
        "        12th           111            57           3296      0.066   \n",
        "Russia  0th              7           107              0      0.603   \n",
        "        1st             21            52           2200      0.001   \n",
        "        2nd             40            42           2208          0   \n",
        "        3rd             54            54          13296      0.019   \n",
        "        4th             72            69           3612      0.001   \n",
        "        5th            100            97          16217      0.018   \n",
        "        6th            131           110           9582       0.02   \n",
        "        7th            163           210          22591      0.017   \n",
        "        8th            196           161          11747      0.075   \n",
        "        9th            198           184          11749      0.001   \n",
        "        10th           155           299          13298      0.019   \n",
        "        11th           106           212           8002      0.001   \n",
        "        12th             -             -              -          -   \n",
        "\n",
        "                    RMSLE Trials       Runtime  \n",
        "Country Phase                                   \n",
        "Bolivia 0th       1.34483   1163  1 min  0 sec  \n",
        "        1st      0.029437   1401  1 min  0 sec  \n",
        "        2nd     0.0138183    310  0 min 10 sec  \n",
        "        3rd    0.00577738    808  0 min 35 sec  \n",
        "        4th     0.0180349   1149  1 min  0 sec  \n",
        "        5th     0.0106322    191  0 min  5 sec  \n",
        "        6th     0.0168803    146  0 min  5 sec  \n",
        "        7th     0.0107285    301  0 min 10 sec  \n",
        "        8th     0.0159968    647  0 min 30 sec  \n",
        "        9th    0.00403593    275  0 min 10 sec  \n",
        "        10th    0.0445571    741  0 min 25 sec  \n",
        "        11th   0.00888391    389  0 min 15 sec  \n",
        "        12th    0.0365001    515  0 min 15 sec  \n",
        "Russia  0th       19.3133   1590  1 min  0 sec  \n",
        "        1st     0.0904316   1396  1 min  0 sec  \n",
        "        2nd       0.12997   1557  1 min  0 sec  \n",
        "        3rd      0.112536   1583  1 min  0 sec  \n",
        "        4th     0.0954866   1143  1 min  0 sec  \n",
        "        5th     0.0671035   1879  1 min  0 sec  \n",
        "        6th     0.0664933   1259  1 min  0 sec  \n",
        "        7th     0.0555852   1258  1 min  0 sec  \n",
        "        8th      0.166803    981  1 min  0 sec  \n",
        "        9th     0.0606502   1246  1 min  0 sec  \n",
        "        10th    0.0351554   1569  1 min  0 sec  \n",
        "        11th    0.0140588   1593  1 min  0 sec  \n",
        "        12th            -      -             -  "
       ]
      }
     ],
     "prompt_number": 12
    },
    {
     "cell_type": "markdown",
     "metadata": {},
     "source": [
      "## Compare the history of parameters\n",
      "Here, compare the history of parameter values if countries."
     ]
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "# All parameter/day parameter/Rt/OxCGRT\n",
      "analyser.track().head()"
     ],
     "language": "python",
     "metadata": {},
     "outputs": [
      {
       "html": [
        "<div>\n",
        "<style scoped>\n",
        "    .dataframe tbody tr th:only-of-type {\n",
        "        vertical-align: middle;\n",
        "    }\n",
        "\n",
        "    .dataframe tbody tr th {\n",
        "        vertical-align: top;\n",
        "    }\n",
        "\n",
        "    .dataframe thead th {\n",
        "        text-align: right;\n",
        "    }\n",
        "</style>\n",
        "<table border=\"1\" class=\"dataframe\">\n",
        "  <thead>\n",
        "    <tr style=\"text-align: right;\">\n",
        "      <th></th>\n",
        "      <th>Date</th>\n",
        "      <th>Country</th>\n",
        "      <th>theta</th>\n",
        "      <th>kappa</th>\n",
        "      <th>rho</th>\n",
        "      <th>sigma</th>\n",
        "      <th>alpha1 [-]</th>\n",
        "      <th>1/alpha2 [day]</th>\n",
        "      <th>1/beta [day]</th>\n",
        "      <th>1/gamma [day]</th>\n",
        "      <th>...</th>\n",
        "      <th>Cancel_events</th>\n",
        "      <th>Gatherings_restrictions</th>\n",
        "      <th>Transport_closing</th>\n",
        "      <th>Stay_home_restrictions</th>\n",
        "      <th>Internal_movement_restrictions</th>\n",
        "      <th>International_movement_restrictions</th>\n",
        "      <th>Information_campaigns</th>\n",
        "      <th>Testing_policy</th>\n",
        "      <th>Contact_tracing</th>\n",
        "      <th>Stringency_index</th>\n",
        "    </tr>\n",
        "  </thead>\n",
        "  <tbody>\n",
        "    <tr>\n",
        "      <th>0</th>\n",
        "      <td>2020-03-24</td>\n",
        "      <td>Dominican Republic</td>\n",
        "      <td>0.0615533</td>\n",
        "      <td>0.000521785</td>\n",
        "      <td>0.0165416</td>\n",
        "      <td>0.00130478</td>\n",
        "      <td>0.062</td>\n",
        "      <td>479</td>\n",
        "      <td>15</td>\n",
        "      <td>191</td>\n",
        "      <td>...</td>\n",
        "      <td>2</td>\n",
        "      <td>3</td>\n",
        "      <td>2</td>\n",
        "      <td>1</td>\n",
        "      <td>2</td>\n",
        "      <td>4</td>\n",
        "      <td>2</td>\n",
        "      <td>2</td>\n",
        "      <td>1</td>\n",
        "      <td>89.81</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>1</th>\n",
        "      <td>2020-03-25</td>\n",
        "      <td>Dominican Republic</td>\n",
        "      <td>0.0615533</td>\n",
        "      <td>0.000521785</td>\n",
        "      <td>0.0165416</td>\n",
        "      <td>0.00130478</td>\n",
        "      <td>0.062</td>\n",
        "      <td>479</td>\n",
        "      <td>15</td>\n",
        "      <td>191</td>\n",
        "      <td>...</td>\n",
        "      <td>2</td>\n",
        "      <td>3</td>\n",
        "      <td>2</td>\n",
        "      <td>1</td>\n",
        "      <td>2</td>\n",
        "      <td>4</td>\n",
        "      <td>2</td>\n",
        "      <td>2</td>\n",
        "      <td>1</td>\n",
        "      <td>89.81</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>2</th>\n",
        "      <td>2020-03-26</td>\n",
        "      <td>Dominican Republic</td>\n",
        "      <td>0.0615533</td>\n",
        "      <td>0.000521785</td>\n",
        "      <td>0.0165416</td>\n",
        "      <td>0.00130478</td>\n",
        "      <td>0.062</td>\n",
        "      <td>479</td>\n",
        "      <td>15</td>\n",
        "      <td>191</td>\n",
        "      <td>...</td>\n",
        "      <td>2</td>\n",
        "      <td>3</td>\n",
        "      <td>2</td>\n",
        "      <td>1</td>\n",
        "      <td>2</td>\n",
        "      <td>4</td>\n",
        "      <td>2</td>\n",
        "      <td>2</td>\n",
        "      <td>1</td>\n",
        "      <td>89.81</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>3</th>\n",
        "      <td>2020-03-27</td>\n",
        "      <td>Dominican Republic</td>\n",
        "      <td>0.0615533</td>\n",
        "      <td>0.000521785</td>\n",
        "      <td>0.0165416</td>\n",
        "      <td>0.00130478</td>\n",
        "      <td>0.062</td>\n",
        "      <td>479</td>\n",
        "      <td>15</td>\n",
        "      <td>191</td>\n",
        "      <td>...</td>\n",
        "      <td>2</td>\n",
        "      <td>3</td>\n",
        "      <td>2</td>\n",
        "      <td>1</td>\n",
        "      <td>2</td>\n",
        "      <td>4</td>\n",
        "      <td>2</td>\n",
        "      <td>2</td>\n",
        "      <td>1</td>\n",
        "      <td>89.81</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>4</th>\n",
        "      <td>2020-03-28</td>\n",
        "      <td>Dominican Republic</td>\n",
        "      <td>0.0615533</td>\n",
        "      <td>0.000521785</td>\n",
        "      <td>0.0165416</td>\n",
        "      <td>0.00130478</td>\n",
        "      <td>0.062</td>\n",
        "      <td>479</td>\n",
        "      <td>15</td>\n",
        "      <td>191</td>\n",
        "      <td>...</td>\n",
        "      <td>2</td>\n",
        "      <td>3</td>\n",
        "      <td>2</td>\n",
        "      <td>1</td>\n",
        "      <td>2</td>\n",
        "      <td>4</td>\n",
        "      <td>2</td>\n",
        "      <td>2</td>\n",
        "      <td>1</td>\n",
        "      <td>89.81</td>\n",
        "    </tr>\n",
        "  </tbody>\n",
        "</table>\n",
        "<p>5 rows \u00d7 23 columns</p>\n",
        "</div>"
       ],
       "output_type": "pyout",
       "prompt_number": 13,
       "text": [
        "        Date             Country      theta        kappa        rho  \\\n",
        "0 2020-03-24  Dominican Republic  0.0615533  0.000521785  0.0165416   \n",
        "1 2020-03-25  Dominican Republic  0.0615533  0.000521785  0.0165416   \n",
        "2 2020-03-26  Dominican Republic  0.0615533  0.000521785  0.0165416   \n",
        "3 2020-03-27  Dominican Republic  0.0615533  0.000521785  0.0165416   \n",
        "4 2020-03-28  Dominican Republic  0.0615533  0.000521785  0.0165416   \n",
        "\n",
        "        sigma alpha1 [-] 1/alpha2 [day] 1/beta [day] 1/gamma [day]  ...  \\\n",
        "0  0.00130478      0.062            479           15           191  ...   \n",
        "1  0.00130478      0.062            479           15           191  ...   \n",
        "2  0.00130478      0.062            479           15           191  ...   \n",
        "3  0.00130478      0.062            479           15           191  ...   \n",
        "4  0.00130478      0.062            479           15           191  ...   \n",
        "\n",
        "  Cancel_events  Gatherings_restrictions  Transport_closing  \\\n",
        "0             2                        3                  2   \n",
        "1             2                        3                  2   \n",
        "2             2                        3                  2   \n",
        "3             2                        3                  2   \n",
        "4             2                        3                  2   \n",
        "\n",
        "   Stay_home_restrictions  Internal_movement_restrictions  \\\n",
        "0                       1                               2   \n",
        "1                       1                               2   \n",
        "2                       1                               2   \n",
        "3                       1                               2   \n",
        "4                       1                               2   \n",
        "\n",
        "   International_movement_restrictions  Information_campaigns  Testing_policy  \\\n",
        "0                                    4                      2               2   \n",
        "1                                    4                      2               2   \n",
        "2                                    4                      2               2   \n",
        "3                                    4                      2               2   \n",
        "4                                    4                      2               2   \n",
        "\n",
        "   Contact_tracing  Stringency_index  \n",
        "0                1             89.81  \n",
        "1                1             89.81  \n",
        "2                1             89.81  \n",
        "3                1             89.81  \n",
        "4                1             89.81  \n",
        "\n",
        "[5 rows x 23 columns]"
       ]
      }
     ],
     "prompt_number": 13
    },
    {
     "cell_type": "heading",
     "level": 3,
     "metadata": {},
     "source": [
      "$Rt$: Reprodcution number $\\mathrm{[-]}$"
     ]
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "analyser.history(\"Rt\", roll_window=None).tail()"
     ],
     "language": "python",
     "metadata": {},
     "outputs": [
      {
       "output_type": "display_data",
       "png": "\n",
       "text": [
        "<Figure size 648x432 with 1 Axes>"
       ]
      },
      {
       "html": [
        "<div>\n",
        "<style scoped>\n",
        "    .dataframe tbody tr th:only-of-type {\n",
        "        vertical-align: middle;\n",
        "    }\n",
        "\n",
        "    .dataframe tbody tr th {\n",
        "        vertical-align: top;\n",
        "    }\n",
        "\n",
        "    .dataframe thead th {\n",
        "        text-align: right;\n",
        "    }\n",
        "</style>\n",
        "<table border=\"1\" class=\"dataframe\">\n",
        "  <thead>\n",
        "    <tr style=\"text-align: right;\">\n",
        "      <th>Country</th>\n",
        "      <th>Algeria</th>\n",
        "      <th>Bahrain</th>\n",
        "      <th>Belgium</th>\n",
        "      <th>Bolivia</th>\n",
        "      <th>Brazil</th>\n",
        "      <th>Dominican Republic</th>\n",
        "      <th>France</th>\n",
        "      <th>Iran</th>\n",
        "      <th>Iraq</th>\n",
        "      <th>Italy</th>\n",
        "      <th>Kuwait</th>\n",
        "      <th>Latvia</th>\n",
        "      <th>Mexico</th>\n",
        "      <th>Nigeria</th>\n",
        "      <th>Peru</th>\n",
        "      <th>Russia</th>\n",
        "      <th>Turkey</th>\n",
        "      <th>United Arab Emirates</th>\n",
        "      <th>United States</th>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>Date</th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "    </tr>\n",
        "  </thead>\n",
        "  <tbody>\n",
        "    <tr>\n",
        "      <th>2020-10-17</th>\n",
        "      <td>1.5</td>\n",
        "      <td>0.76</td>\n",
        "      <td>61.74</td>\n",
        "      <td>0.47</td>\n",
        "      <td>1.08</td>\n",
        "      <td>0.82</td>\n",
        "      <td>32.14</td>\n",
        "      <td>1.35</td>\n",
        "      <td>1.02</td>\n",
        "      <td>1.93</td>\n",
        "      <td>1.09</td>\n",
        "      <td>292.3</td>\n",
        "      <td>1.2</td>\n",
        "      <td>0.83</td>\n",
        "      <td>0.61</td>\n",
        "      <td>1.94</td>\n",
        "      <td>1.17</td>\n",
        "      <td>0.86</td>\n",
        "      <td>2.27</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>2020-10-18</th>\n",
        "      <td>1.5</td>\n",
        "      <td>0.76</td>\n",
        "      <td>61.74</td>\n",
        "      <td>0.47</td>\n",
        "      <td>1.08</td>\n",
        "      <td>0.82</td>\n",
        "      <td>32.14</td>\n",
        "      <td>1.35</td>\n",
        "      <td>1.02</td>\n",
        "      <td>1.93</td>\n",
        "      <td>1.09</td>\n",
        "      <td>292.3</td>\n",
        "      <td>1.2</td>\n",
        "      <td>0.83</td>\n",
        "      <td>0.61</td>\n",
        "      <td>1.94</td>\n",
        "      <td>1.17</td>\n",
        "      <td>0.86</td>\n",
        "      <td>2.27</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>2020-10-19</th>\n",
        "      <td>1.5</td>\n",
        "      <td>0.76</td>\n",
        "      <td>61.74</td>\n",
        "      <td>0.47</td>\n",
        "      <td>1.08</td>\n",
        "      <td>0.82</td>\n",
        "      <td>32.14</td>\n",
        "      <td>1.35</td>\n",
        "      <td>1.02</td>\n",
        "      <td>1.93</td>\n",
        "      <td>1.09</td>\n",
        "      <td>292.3</td>\n",
        "      <td>1.2</td>\n",
        "      <td>0.83</td>\n",
        "      <td>0.61</td>\n",
        "      <td>1.94</td>\n",
        "      <td>1.17</td>\n",
        "      <td>0.86</td>\n",
        "      <td>2.27</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>2020-10-20</th>\n",
        "      <td>1.5</td>\n",
        "      <td>0.76</td>\n",
        "      <td>61.74</td>\n",
        "      <td>0.47</td>\n",
        "      <td>1.08</td>\n",
        "      <td>0.82</td>\n",
        "      <td>32.14</td>\n",
        "      <td>1.35</td>\n",
        "      <td>1.02</td>\n",
        "      <td>1.93</td>\n",
        "      <td>1.09</td>\n",
        "      <td>292.3</td>\n",
        "      <td>1.2</td>\n",
        "      <td>0.83</td>\n",
        "      <td>0.61</td>\n",
        "      <td>1.94</td>\n",
        "      <td>1.17</td>\n",
        "      <td>0.86</td>\n",
        "      <td>2.27</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>2020-10-21</th>\n",
        "      <td>1.5</td>\n",
        "      <td>0.76</td>\n",
        "      <td>61.74</td>\n",
        "      <td>0.47</td>\n",
        "      <td>1.08</td>\n",
        "      <td>0.82</td>\n",
        "      <td>32.14</td>\n",
        "      <td>1.35</td>\n",
        "      <td>1.02</td>\n",
        "      <td>1.93</td>\n",
        "      <td>1.09</td>\n",
        "      <td>292.3</td>\n",
        "      <td>1.2</td>\n",
        "      <td>0.83</td>\n",
        "      <td>0.61</td>\n",
        "      <td>1.94</td>\n",
        "      <td>1.17</td>\n",
        "      <td>0.86</td>\n",
        "      <td>2.27</td>\n",
        "    </tr>\n",
        "  </tbody>\n",
        "</table>\n",
        "</div>"
       ],
       "output_type": "pyout",
       "prompt_number": 14,
       "text": [
        "Country     Algeria  Bahrain  Belgium  Bolivia  Brazil  Dominican Republic  \\\n",
        "Date                                                                         \n",
        "2020-10-17      1.5     0.76    61.74     0.47    1.08                0.82   \n",
        "2020-10-18      1.5     0.76    61.74     0.47    1.08                0.82   \n",
        "2020-10-19      1.5     0.76    61.74     0.47    1.08                0.82   \n",
        "2020-10-20      1.5     0.76    61.74     0.47    1.08                0.82   \n",
        "2020-10-21      1.5     0.76    61.74     0.47    1.08                0.82   \n",
        "\n",
        "Country     France  Iran  Iraq  Italy  Kuwait  Latvia  Mexico  Nigeria  Peru  \\\n",
        "Date                                                                           \n",
        "2020-10-17   32.14  1.35  1.02   1.93    1.09   292.3     1.2     0.83  0.61   \n",
        "2020-10-18   32.14  1.35  1.02   1.93    1.09   292.3     1.2     0.83  0.61   \n",
        "2020-10-19   32.14  1.35  1.02   1.93    1.09   292.3     1.2     0.83  0.61   \n",
        "2020-10-20   32.14  1.35  1.02   1.93    1.09   292.3     1.2     0.83  0.61   \n",
        "2020-10-21   32.14  1.35  1.02   1.93    1.09   292.3     1.2     0.83  0.61   \n",
        "\n",
        "Country     Russia  Turkey  United Arab Emirates  United States  \n",
        "Date                                                             \n",
        "2020-10-17    1.94    1.17                  0.86           2.27  \n",
        "2020-10-18    1.94    1.17                  0.86           2.27  \n",
        "2020-10-19    1.94    1.17                  0.86           2.27  \n",
        "2020-10-20    1.94    1.17                  0.86           2.27  \n",
        "2020-10-21    1.94    1.17                  0.86           2.27  "
       ]
      }
     ],
     "prompt_number": 14
    },
    {
     "cell_type": "heading",
     "level": 3,
     "metadata": {},
     "source": [
      "$\\rho$: Effective contact rate $\\mathrm{[-]}$"
     ]
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "analyser.history(\"rho\", roll_window=None).tail()"
     ],
     "language": "python",
     "metadata": {},
     "outputs": [
      {
       "output_type": "display_data",
       "png": "\n",
       "text": [
        "<Figure size 648x432 with 1 Axes>"
       ]
      },
      {
       "html": [
        "<div>\n",
        "<style scoped>\n",
        "    .dataframe tbody tr th:only-of-type {\n",
        "        vertical-align: middle;\n",
        "    }\n",
        "\n",
        "    .dataframe tbody tr th {\n",
        "        vertical-align: top;\n",
        "    }\n",
        "\n",
        "    .dataframe thead th {\n",
        "        text-align: right;\n",
        "    }\n",
        "</style>\n",
        "<table border=\"1\" class=\"dataframe\">\n",
        "  <thead>\n",
        "    <tr style=\"text-align: right;\">\n",
        "      <th>Country</th>\n",
        "      <th>Algeria</th>\n",
        "      <th>Bahrain</th>\n",
        "      <th>Belgium</th>\n",
        "      <th>Bolivia</th>\n",
        "      <th>Brazil</th>\n",
        "      <th>Dominican Republic</th>\n",
        "      <th>France</th>\n",
        "      <th>Iran</th>\n",
        "      <th>Iraq</th>\n",
        "      <th>Italy</th>\n",
        "      <th>Kuwait</th>\n",
        "      <th>Latvia</th>\n",
        "      <th>Mexico</th>\n",
        "      <th>Nigeria</th>\n",
        "      <th>Peru</th>\n",
        "      <th>Russia</th>\n",
        "      <th>Turkey</th>\n",
        "      <th>United Arab Emirates</th>\n",
        "      <th>United States</th>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>Date</th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "    </tr>\n",
        "  </thead>\n",
        "  <tbody>\n",
        "    <tr>\n",
        "      <th>2020-10-17</th>\n",
        "      <td>0.002933</td>\n",
        "      <td>0.021642</td>\n",
        "      <td>0.012057</td>\n",
        "      <td>0.002237</td>\n",
        "      <td>0.011187</td>\n",
        "      <td>0.005259</td>\n",
        "      <td>0.007615</td>\n",
        "      <td>0.016052</td>\n",
        "      <td>0.015571</td>\n",
        "      <td>0.011014</td>\n",
        "      <td>0.023413</td>\n",
        "      <td>0.008939</td>\n",
        "      <td>0.026504</td>\n",
        "      <td>0.004443</td>\n",
        "      <td>0.000909</td>\n",
        "      <td>0.002344</td>\n",
        "      <td>0.012711</td>\n",
        "      <td>0.041008</td>\n",
        "      <td>0.002752</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>2020-10-18</th>\n",
        "      <td>0.002933</td>\n",
        "      <td>0.021642</td>\n",
        "      <td>0.012057</td>\n",
        "      <td>0.002237</td>\n",
        "      <td>0.011187</td>\n",
        "      <td>0.005259</td>\n",
        "      <td>0.007615</td>\n",
        "      <td>0.016052</td>\n",
        "      <td>0.015571</td>\n",
        "      <td>0.011014</td>\n",
        "      <td>0.023413</td>\n",
        "      <td>0.008939</td>\n",
        "      <td>0.026504</td>\n",
        "      <td>0.004443</td>\n",
        "      <td>0.000909</td>\n",
        "      <td>0.002344</td>\n",
        "      <td>0.012711</td>\n",
        "      <td>0.041008</td>\n",
        "      <td>0.002752</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>2020-10-19</th>\n",
        "      <td>0.002933</td>\n",
        "      <td>0.021642</td>\n",
        "      <td>0.012057</td>\n",
        "      <td>0.002237</td>\n",
        "      <td>0.011187</td>\n",
        "      <td>0.005259</td>\n",
        "      <td>0.007615</td>\n",
        "      <td>0.016052</td>\n",
        "      <td>0.015571</td>\n",
        "      <td>0.011014</td>\n",
        "      <td>0.023413</td>\n",
        "      <td>0.008939</td>\n",
        "      <td>0.026504</td>\n",
        "      <td>0.004443</td>\n",
        "      <td>0.000909</td>\n",
        "      <td>0.002344</td>\n",
        "      <td>0.012711</td>\n",
        "      <td>0.041008</td>\n",
        "      <td>0.002752</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>2020-10-20</th>\n",
        "      <td>0.002933</td>\n",
        "      <td>0.021642</td>\n",
        "      <td>0.012057</td>\n",
        "      <td>0.002237</td>\n",
        "      <td>0.011187</td>\n",
        "      <td>0.005259</td>\n",
        "      <td>0.007615</td>\n",
        "      <td>0.016052</td>\n",
        "      <td>0.015571</td>\n",
        "      <td>0.011014</td>\n",
        "      <td>0.023413</td>\n",
        "      <td>0.008939</td>\n",
        "      <td>0.026504</td>\n",
        "      <td>0.004443</td>\n",
        "      <td>0.000909</td>\n",
        "      <td>0.002344</td>\n",
        "      <td>0.012711</td>\n",
        "      <td>0.041008</td>\n",
        "      <td>0.002752</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>2020-10-21</th>\n",
        "      <td>0.002933</td>\n",
        "      <td>0.021642</td>\n",
        "      <td>0.012057</td>\n",
        "      <td>0.002237</td>\n",
        "      <td>0.011187</td>\n",
        "      <td>0.005259</td>\n",
        "      <td>0.007615</td>\n",
        "      <td>0.016052</td>\n",
        "      <td>0.015571</td>\n",
        "      <td>0.011014</td>\n",
        "      <td>0.023413</td>\n",
        "      <td>0.008939</td>\n",
        "      <td>0.026504</td>\n",
        "      <td>0.004443</td>\n",
        "      <td>0.000909</td>\n",
        "      <td>0.002344</td>\n",
        "      <td>0.012711</td>\n",
        "      <td>0.041008</td>\n",
        "      <td>0.002752</td>\n",
        "    </tr>\n",
        "  </tbody>\n",
        "</table>\n",
        "</div>"
       ],
       "output_type": "pyout",
       "prompt_number": 15,
       "text": [
        "Country      Algeria   Bahrain   Belgium   Bolivia    Brazil  \\\n",
        "Date                                                           \n",
        "2020-10-17  0.002933  0.021642  0.012057  0.002237  0.011187   \n",
        "2020-10-18  0.002933  0.021642  0.012057  0.002237  0.011187   \n",
        "2020-10-19  0.002933  0.021642  0.012057  0.002237  0.011187   \n",
        "2020-10-20  0.002933  0.021642  0.012057  0.002237  0.011187   \n",
        "2020-10-21  0.002933  0.021642  0.012057  0.002237  0.011187   \n",
        "\n",
        "Country     Dominican Republic    France      Iran      Iraq     Italy  \\\n",
        "Date                                                                     \n",
        "2020-10-17            0.005259  0.007615  0.016052  0.015571  0.011014   \n",
        "2020-10-18            0.005259  0.007615  0.016052  0.015571  0.011014   \n",
        "2020-10-19            0.005259  0.007615  0.016052  0.015571  0.011014   \n",
        "2020-10-20            0.005259  0.007615  0.016052  0.015571  0.011014   \n",
        "2020-10-21            0.005259  0.007615  0.016052  0.015571  0.011014   \n",
        "\n",
        "Country       Kuwait    Latvia    Mexico   Nigeria      Peru    Russia  \\\n",
        "Date                                                                     \n",
        "2020-10-17  0.023413  0.008939  0.026504  0.004443  0.000909  0.002344   \n",
        "2020-10-18  0.023413  0.008939  0.026504  0.004443  0.000909  0.002344   \n",
        "2020-10-19  0.023413  0.008939  0.026504  0.004443  0.000909  0.002344   \n",
        "2020-10-20  0.023413  0.008939  0.026504  0.004443  0.000909  0.002344   \n",
        "2020-10-21  0.023413  0.008939  0.026504  0.004443  0.000909  0.002344   \n",
        "\n",
        "Country       Turkey  United Arab Emirates  United States  \n",
        "Date                                                       \n",
        "2020-10-17  0.012711              0.041008       0.002752  \n",
        "2020-10-18  0.012711              0.041008       0.002752  \n",
        "2020-10-19  0.012711              0.041008       0.002752  \n",
        "2020-10-20  0.012711              0.041008       0.002752  \n",
        "2020-10-21  0.012711              0.041008       0.002752  "
       ]
      }
     ],
     "prompt_number": 15
    },
    {
     "cell_type": "heading",
     "level": 3,
     "metadata": {},
     "source": [
      "$\\sigma$: Recovery rate $\\mathrm{[-]}$"
     ]
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "analyser.history(\"sigma\", roll_window=None).tail()"
     ],
     "language": "python",
     "metadata": {},
     "outputs": [
      {
       "output_type": "display_data",
       "png": "\n",
       "text": [
        "<Figure size 648x432 with 1 Axes>"
       ]
      },
      {
       "html": [
        "<div>\n",
        "<style scoped>\n",
        "    .dataframe tbody tr th:only-of-type {\n",
        "        vertical-align: middle;\n",
        "    }\n",
        "\n",
        "    .dataframe tbody tr th {\n",
        "        vertical-align: top;\n",
        "    }\n",
        "\n",
        "    .dataframe thead th {\n",
        "        text-align: right;\n",
        "    }\n",
        "</style>\n",
        "<table border=\"1\" class=\"dataframe\">\n",
        "  <thead>\n",
        "    <tr style=\"text-align: right;\">\n",
        "      <th>Country</th>\n",
        "      <th>Algeria</th>\n",
        "      <th>Bahrain</th>\n",
        "      <th>Belgium</th>\n",
        "      <th>Bolivia</th>\n",
        "      <th>Brazil</th>\n",
        "      <th>Dominican Republic</th>\n",
        "      <th>France</th>\n",
        "      <th>Iran</th>\n",
        "      <th>Iraq</th>\n",
        "      <th>Italy</th>\n",
        "      <th>Kuwait</th>\n",
        "      <th>Latvia</th>\n",
        "      <th>Mexico</th>\n",
        "      <th>Nigeria</th>\n",
        "      <th>Peru</th>\n",
        "      <th>Russia</th>\n",
        "      <th>Turkey</th>\n",
        "      <th>United Arab Emirates</th>\n",
        "      <th>United States</th>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>Date</th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "    </tr>\n",
        "  </thead>\n",
        "  <tbody>\n",
        "    <tr>\n",
        "      <th>2020-10-17</th>\n",
        "      <td>0.001887</td>\n",
        "      <td>0.028337</td>\n",
        "      <td>0.000164</td>\n",
        "      <td>0.004371</td>\n",
        "      <td>0.009998</td>\n",
        "      <td>0.006335</td>\n",
        "      <td>0.000205</td>\n",
        "      <td>0.010981</td>\n",
        "      <td>0.014951</td>\n",
        "      <td>0.005644</td>\n",
        "      <td>0.021381</td>\n",
        "      <td>0.0</td>\n",
        "      <td>0.020375</td>\n",
        "      <td>0.005295</td>\n",
        "      <td>0.001476</td>\n",
        "      <td>0.001177</td>\n",
        "      <td>0.010284</td>\n",
        "      <td>0.047663</td>\n",
        "      <td>0.001172</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>2020-10-18</th>\n",
        "      <td>0.001887</td>\n",
        "      <td>0.028337</td>\n",
        "      <td>0.000164</td>\n",
        "      <td>0.004371</td>\n",
        "      <td>0.009998</td>\n",
        "      <td>0.006335</td>\n",
        "      <td>0.000205</td>\n",
        "      <td>0.010981</td>\n",
        "      <td>0.014951</td>\n",
        "      <td>0.005644</td>\n",
        "      <td>0.021381</td>\n",
        "      <td>0.0</td>\n",
        "      <td>0.020375</td>\n",
        "      <td>0.005295</td>\n",
        "      <td>0.001476</td>\n",
        "      <td>0.001177</td>\n",
        "      <td>0.010284</td>\n",
        "      <td>0.047663</td>\n",
        "      <td>0.001172</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>2020-10-19</th>\n",
        "      <td>0.001887</td>\n",
        "      <td>0.028337</td>\n",
        "      <td>0.000164</td>\n",
        "      <td>0.004371</td>\n",
        "      <td>0.009998</td>\n",
        "      <td>0.006335</td>\n",
        "      <td>0.000205</td>\n",
        "      <td>0.010981</td>\n",
        "      <td>0.014951</td>\n",
        "      <td>0.005644</td>\n",
        "      <td>0.021381</td>\n",
        "      <td>0.0</td>\n",
        "      <td>0.020375</td>\n",
        "      <td>0.005295</td>\n",
        "      <td>0.001476</td>\n",
        "      <td>0.001177</td>\n",
        "      <td>0.010284</td>\n",
        "      <td>0.047663</td>\n",
        "      <td>0.001172</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>2020-10-20</th>\n",
        "      <td>0.001887</td>\n",
        "      <td>0.028337</td>\n",
        "      <td>0.000164</td>\n",
        "      <td>0.004371</td>\n",
        "      <td>0.009998</td>\n",
        "      <td>0.006335</td>\n",
        "      <td>0.000205</td>\n",
        "      <td>0.010981</td>\n",
        "      <td>0.014951</td>\n",
        "      <td>0.005644</td>\n",
        "      <td>0.021381</td>\n",
        "      <td>0.0</td>\n",
        "      <td>0.020375</td>\n",
        "      <td>0.005295</td>\n",
        "      <td>0.001476</td>\n",
        "      <td>0.001177</td>\n",
        "      <td>0.010284</td>\n",
        "      <td>0.047663</td>\n",
        "      <td>0.001172</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>2020-10-21</th>\n",
        "      <td>0.001887</td>\n",
        "      <td>0.028337</td>\n",
        "      <td>0.000164</td>\n",
        "      <td>0.004371</td>\n",
        "      <td>0.009998</td>\n",
        "      <td>0.006335</td>\n",
        "      <td>0.000205</td>\n",
        "      <td>0.010981</td>\n",
        "      <td>0.014951</td>\n",
        "      <td>0.005644</td>\n",
        "      <td>0.021381</td>\n",
        "      <td>0.0</td>\n",
        "      <td>0.020375</td>\n",
        "      <td>0.005295</td>\n",
        "      <td>0.001476</td>\n",
        "      <td>0.001177</td>\n",
        "      <td>0.010284</td>\n",
        "      <td>0.047663</td>\n",
        "      <td>0.001172</td>\n",
        "    </tr>\n",
        "  </tbody>\n",
        "</table>\n",
        "</div>"
       ],
       "output_type": "pyout",
       "prompt_number": 16,
       "text": [
        "Country      Algeria   Bahrain   Belgium   Bolivia    Brazil  \\\n",
        "Date                                                           \n",
        "2020-10-17  0.001887  0.028337  0.000164  0.004371  0.009998   \n",
        "2020-10-18  0.001887  0.028337  0.000164  0.004371  0.009998   \n",
        "2020-10-19  0.001887  0.028337  0.000164  0.004371  0.009998   \n",
        "2020-10-20  0.001887  0.028337  0.000164  0.004371  0.009998   \n",
        "2020-10-21  0.001887  0.028337  0.000164  0.004371  0.009998   \n",
        "\n",
        "Country     Dominican Republic    France      Iran      Iraq     Italy  \\\n",
        "Date                                                                     \n",
        "2020-10-17            0.006335  0.000205  0.010981  0.014951  0.005644   \n",
        "2020-10-18            0.006335  0.000205  0.010981  0.014951  0.005644   \n",
        "2020-10-19            0.006335  0.000205  0.010981  0.014951  0.005644   \n",
        "2020-10-20            0.006335  0.000205  0.010981  0.014951  0.005644   \n",
        "2020-10-21            0.006335  0.000205  0.010981  0.014951  0.005644   \n",
        "\n",
        "Country       Kuwait  Latvia    Mexico   Nigeria      Peru    Russia  \\\n",
        "Date                                                                   \n",
        "2020-10-17  0.021381     0.0  0.020375  0.005295  0.001476  0.001177   \n",
        "2020-10-18  0.021381     0.0  0.020375  0.005295  0.001476  0.001177   \n",
        "2020-10-19  0.021381     0.0  0.020375  0.005295  0.001476  0.001177   \n",
        "2020-10-20  0.021381     0.0  0.020375  0.005295  0.001476  0.001177   \n",
        "2020-10-21  0.021381     0.0  0.020375  0.005295  0.001476  0.001177   \n",
        "\n",
        "Country       Turkey  United Arab Emirates  United States  \n",
        "Date                                                       \n",
        "2020-10-17  0.010284              0.047663       0.001172  \n",
        "2020-10-18  0.010284              0.047663       0.001172  \n",
        "2020-10-19  0.010284              0.047663       0.001172  \n",
        "2020-10-20  0.010284              0.047663       0.001172  \n",
        "2020-10-21  0.010284              0.047663       0.001172  "
       ]
      }
     ],
     "prompt_number": 16
    },
    {
     "cell_type": "heading",
     "level": 3,
     "metadata": {},
     "source": [
      "$\\kappa$: Mortality rate of infected cases $\\mathrm{[-]}$"
     ]
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "analyser.history(\"kappa\", roll_window=None).tail()"
     ],
     "language": "python",
     "metadata": {},
     "outputs": [
      {
       "output_type": "display_data",
       "png": "\n",
       "text": [
        "<Figure size 648x432 with 1 Axes>"
       ]
      },
      {
       "html": [
        "<div>\n",
        "<style scoped>\n",
        "    .dataframe tbody tr th:only-of-type {\n",
        "        vertical-align: middle;\n",
        "    }\n",
        "\n",
        "    .dataframe tbody tr th {\n",
        "        vertical-align: top;\n",
        "    }\n",
        "\n",
        "    .dataframe thead th {\n",
        "        text-align: right;\n",
        "    }\n",
        "</style>\n",
        "<table border=\"1\" class=\"dataframe\">\n",
        "  <thead>\n",
        "    <tr style=\"text-align: right;\">\n",
        "      <th>Country</th>\n",
        "      <th>Algeria</th>\n",
        "      <th>Bahrain</th>\n",
        "      <th>Belgium</th>\n",
        "      <th>Bolivia</th>\n",
        "      <th>Brazil</th>\n",
        "      <th>Dominican Republic</th>\n",
        "      <th>France</th>\n",
        "      <th>Iran</th>\n",
        "      <th>Iraq</th>\n",
        "      <th>Italy</th>\n",
        "      <th>Kuwait</th>\n",
        "      <th>Latvia</th>\n",
        "      <th>Mexico</th>\n",
        "      <th>Nigeria</th>\n",
        "      <th>Peru</th>\n",
        "      <th>Russia</th>\n",
        "      <th>Turkey</th>\n",
        "      <th>United Arab Emirates</th>\n",
        "      <th>United States</th>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>Date</th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "    </tr>\n",
        "  </thead>\n",
        "  <tbody>\n",
        "    <tr>\n",
        "      <th>2020-10-17</th>\n",
        "      <td>0.000005</td>\n",
        "      <td>0.000098</td>\n",
        "      <td>0.000031</td>\n",
        "      <td>0.000076</td>\n",
        "      <td>0.00007</td>\n",
        "      <td>0.000037</td>\n",
        "      <td>0.000031</td>\n",
        "      <td>0.000892</td>\n",
        "      <td>0.000235</td>\n",
        "      <td>0.000071</td>\n",
        "      <td>0.000157</td>\n",
        "      <td>0.000031</td>\n",
        "      <td>0.000338</td>\n",
        "      <td>0.000024</td>\n",
        "      <td>0.000021</td>\n",
        "      <td>0.000031</td>\n",
        "      <td>0.000556</td>\n",
        "      <td>0.000109</td>\n",
        "      <td>0.000037</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>2020-10-18</th>\n",
        "      <td>0.000005</td>\n",
        "      <td>0.000098</td>\n",
        "      <td>0.000031</td>\n",
        "      <td>0.000076</td>\n",
        "      <td>0.00007</td>\n",
        "      <td>0.000037</td>\n",
        "      <td>0.000031</td>\n",
        "      <td>0.000892</td>\n",
        "      <td>0.000235</td>\n",
        "      <td>0.000071</td>\n",
        "      <td>0.000157</td>\n",
        "      <td>0.000031</td>\n",
        "      <td>0.000338</td>\n",
        "      <td>0.000024</td>\n",
        "      <td>0.000021</td>\n",
        "      <td>0.000031</td>\n",
        "      <td>0.000556</td>\n",
        "      <td>0.000109</td>\n",
        "      <td>0.000037</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>2020-10-19</th>\n",
        "      <td>0.000005</td>\n",
        "      <td>0.000098</td>\n",
        "      <td>0.000031</td>\n",
        "      <td>0.000076</td>\n",
        "      <td>0.00007</td>\n",
        "      <td>0.000037</td>\n",
        "      <td>0.000031</td>\n",
        "      <td>0.000892</td>\n",
        "      <td>0.000235</td>\n",
        "      <td>0.000071</td>\n",
        "      <td>0.000157</td>\n",
        "      <td>0.000031</td>\n",
        "      <td>0.000338</td>\n",
        "      <td>0.000024</td>\n",
        "      <td>0.000021</td>\n",
        "      <td>0.000031</td>\n",
        "      <td>0.000556</td>\n",
        "      <td>0.000109</td>\n",
        "      <td>0.000037</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>2020-10-20</th>\n",
        "      <td>0.000005</td>\n",
        "      <td>0.000098</td>\n",
        "      <td>0.000031</td>\n",
        "      <td>0.000076</td>\n",
        "      <td>0.00007</td>\n",
        "      <td>0.000037</td>\n",
        "      <td>0.000031</td>\n",
        "      <td>0.000892</td>\n",
        "      <td>0.000235</td>\n",
        "      <td>0.000071</td>\n",
        "      <td>0.000157</td>\n",
        "      <td>0.000031</td>\n",
        "      <td>0.000338</td>\n",
        "      <td>0.000024</td>\n",
        "      <td>0.000021</td>\n",
        "      <td>0.000031</td>\n",
        "      <td>0.000556</td>\n",
        "      <td>0.000109</td>\n",
        "      <td>0.000037</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>2020-10-21</th>\n",
        "      <td>0.000005</td>\n",
        "      <td>0.000098</td>\n",
        "      <td>0.000031</td>\n",
        "      <td>0.000076</td>\n",
        "      <td>0.00007</td>\n",
        "      <td>0.000037</td>\n",
        "      <td>0.000031</td>\n",
        "      <td>0.000892</td>\n",
        "      <td>0.000235</td>\n",
        "      <td>0.000071</td>\n",
        "      <td>0.000157</td>\n",
        "      <td>0.000031</td>\n",
        "      <td>0.000338</td>\n",
        "      <td>0.000024</td>\n",
        "      <td>0.000021</td>\n",
        "      <td>0.000031</td>\n",
        "      <td>0.000556</td>\n",
        "      <td>0.000109</td>\n",
        "      <td>0.000037</td>\n",
        "    </tr>\n",
        "  </tbody>\n",
        "</table>\n",
        "</div>"
       ],
       "output_type": "pyout",
       "prompt_number": 17,
       "text": [
        "Country      Algeria   Bahrain   Belgium   Bolivia   Brazil  \\\n",
        "Date                                                          \n",
        "2020-10-17  0.000005  0.000098  0.000031  0.000076  0.00007   \n",
        "2020-10-18  0.000005  0.000098  0.000031  0.000076  0.00007   \n",
        "2020-10-19  0.000005  0.000098  0.000031  0.000076  0.00007   \n",
        "2020-10-20  0.000005  0.000098  0.000031  0.000076  0.00007   \n",
        "2020-10-21  0.000005  0.000098  0.000031  0.000076  0.00007   \n",
        "\n",
        "Country     Dominican Republic    France      Iran      Iraq     Italy  \\\n",
        "Date                                                                     \n",
        "2020-10-17            0.000037  0.000031  0.000892  0.000235  0.000071   \n",
        "2020-10-18            0.000037  0.000031  0.000892  0.000235  0.000071   \n",
        "2020-10-19            0.000037  0.000031  0.000892  0.000235  0.000071   \n",
        "2020-10-20            0.000037  0.000031  0.000892  0.000235  0.000071   \n",
        "2020-10-21            0.000037  0.000031  0.000892  0.000235  0.000071   \n",
        "\n",
        "Country       Kuwait    Latvia    Mexico   Nigeria      Peru    Russia  \\\n",
        "Date                                                                     \n",
        "2020-10-17  0.000157  0.000031  0.000338  0.000024  0.000021  0.000031   \n",
        "2020-10-18  0.000157  0.000031  0.000338  0.000024  0.000021  0.000031   \n",
        "2020-10-19  0.000157  0.000031  0.000338  0.000024  0.000021  0.000031   \n",
        "2020-10-20  0.000157  0.000031  0.000338  0.000024  0.000021  0.000031   \n",
        "2020-10-21  0.000157  0.000031  0.000338  0.000024  0.000021  0.000031   \n",
        "\n",
        "Country       Turkey  United Arab Emirates  United States  \n",
        "Date                                                       \n",
        "2020-10-17  0.000556              0.000109       0.000037  \n",
        "2020-10-18  0.000556              0.000109       0.000037  \n",
        "2020-10-19  0.000556              0.000109       0.000037  \n",
        "2020-10-20  0.000556              0.000109       0.000037  \n",
        "2020-10-21  0.000556              0.000109       0.000037  "
       ]
      }
     ],
     "prompt_number": 17
    },
    {
     "cell_type": "heading",
     "level": 3,
     "metadata": {},
     "source": [
      "$\\theta$: Mortality rate of S$^\\ast$ cases $\\mathrm{[-]}$"
     ]
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "analyser.history(\"theta\", roll_window=None).tail()"
     ],
     "language": "python",
     "metadata": {},
     "outputs": [
      {
       "output_type": "display_data",
       "png": "\n",
       "text": [
        "<Figure size 648x432 with 1 Axes>"
       ]
      },
      {
       "html": [
        "<div>\n",
        "<style scoped>\n",
        "    .dataframe tbody tr th:only-of-type {\n",
        "        vertical-align: middle;\n",
        "    }\n",
        "\n",
        "    .dataframe tbody tr th {\n",
        "        vertical-align: top;\n",
        "    }\n",
        "\n",
        "    .dataframe thead th {\n",
        "        text-align: right;\n",
        "    }\n",
        "</style>\n",
        "<table border=\"1\" class=\"dataframe\">\n",
        "  <thead>\n",
        "    <tr style=\"text-align: right;\">\n",
        "      <th>Country</th>\n",
        "      <th>Algeria</th>\n",
        "      <th>Bahrain</th>\n",
        "      <th>Belgium</th>\n",
        "      <th>Bolivia</th>\n",
        "      <th>Brazil</th>\n",
        "      <th>Dominican Republic</th>\n",
        "      <th>France</th>\n",
        "      <th>Iran</th>\n",
        "      <th>Iraq</th>\n",
        "      <th>Italy</th>\n",
        "      <th>Kuwait</th>\n",
        "      <th>Latvia</th>\n",
        "      <th>Mexico</th>\n",
        "      <th>Nigeria</th>\n",
        "      <th>Peru</th>\n",
        "      <th>Russia</th>\n",
        "      <th>Turkey</th>\n",
        "      <th>United Arab Emirates</th>\n",
        "      <th>United States</th>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>Date</th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "    </tr>\n",
        "  </thead>\n",
        "  <tbody>\n",
        "    <tr>\n",
        "      <th>2020-10-17</th>\n",
        "      <td>0.035761</td>\n",
        "      <td>0.000436</td>\n",
        "      <td>0.000944</td>\n",
        "      <td>0.065942</td>\n",
        "      <td>0.025863</td>\n",
        "      <td>0.000688</td>\n",
        "      <td>0.000938</td>\n",
        "      <td>0.001914</td>\n",
        "      <td>0.000633</td>\n",
        "      <td>0.000909</td>\n",
        "      <td>0.000753</td>\n",
        "      <td>0.000466</td>\n",
        "      <td>0.063665</td>\n",
        "      <td>0.001565</td>\n",
        "      <td>0.000859</td>\n",
        "      <td>0.00137</td>\n",
        "      <td>0.003608</td>\n",
        "      <td>0.000348</td>\n",
        "      <td>0.000699</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>2020-10-18</th>\n",
        "      <td>0.035761</td>\n",
        "      <td>0.000436</td>\n",
        "      <td>0.000944</td>\n",
        "      <td>0.065942</td>\n",
        "      <td>0.025863</td>\n",
        "      <td>0.000688</td>\n",
        "      <td>0.000938</td>\n",
        "      <td>0.001914</td>\n",
        "      <td>0.000633</td>\n",
        "      <td>0.000909</td>\n",
        "      <td>0.000753</td>\n",
        "      <td>0.000466</td>\n",
        "      <td>0.063665</td>\n",
        "      <td>0.001565</td>\n",
        "      <td>0.000859</td>\n",
        "      <td>0.00137</td>\n",
        "      <td>0.003608</td>\n",
        "      <td>0.000348</td>\n",
        "      <td>0.000699</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>2020-10-19</th>\n",
        "      <td>0.035761</td>\n",
        "      <td>0.000436</td>\n",
        "      <td>0.000944</td>\n",
        "      <td>0.065942</td>\n",
        "      <td>0.025863</td>\n",
        "      <td>0.000688</td>\n",
        "      <td>0.000938</td>\n",
        "      <td>0.001914</td>\n",
        "      <td>0.000633</td>\n",
        "      <td>0.000909</td>\n",
        "      <td>0.000753</td>\n",
        "      <td>0.000466</td>\n",
        "      <td>0.063665</td>\n",
        "      <td>0.001565</td>\n",
        "      <td>0.000859</td>\n",
        "      <td>0.00137</td>\n",
        "      <td>0.003608</td>\n",
        "      <td>0.000348</td>\n",
        "      <td>0.000699</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>2020-10-20</th>\n",
        "      <td>0.035761</td>\n",
        "      <td>0.000436</td>\n",
        "      <td>0.000944</td>\n",
        "      <td>0.065942</td>\n",
        "      <td>0.025863</td>\n",
        "      <td>0.000688</td>\n",
        "      <td>0.000938</td>\n",
        "      <td>0.001914</td>\n",
        "      <td>0.000633</td>\n",
        "      <td>0.000909</td>\n",
        "      <td>0.000753</td>\n",
        "      <td>0.000466</td>\n",
        "      <td>0.063665</td>\n",
        "      <td>0.001565</td>\n",
        "      <td>0.000859</td>\n",
        "      <td>0.00137</td>\n",
        "      <td>0.003608</td>\n",
        "      <td>0.000348</td>\n",
        "      <td>0.000699</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>2020-10-21</th>\n",
        "      <td>0.035761</td>\n",
        "      <td>0.000436</td>\n",
        "      <td>0.000944</td>\n",
        "      <td>0.065942</td>\n",
        "      <td>0.025863</td>\n",
        "      <td>0.000688</td>\n",
        "      <td>0.000938</td>\n",
        "      <td>0.001914</td>\n",
        "      <td>0.000633</td>\n",
        "      <td>0.000909</td>\n",
        "      <td>0.000753</td>\n",
        "      <td>0.000466</td>\n",
        "      <td>0.063665</td>\n",
        "      <td>0.001565</td>\n",
        "      <td>0.000859</td>\n",
        "      <td>0.00137</td>\n",
        "      <td>0.003608</td>\n",
        "      <td>0.000348</td>\n",
        "      <td>0.000699</td>\n",
        "    </tr>\n",
        "  </tbody>\n",
        "</table>\n",
        "</div>"
       ],
       "output_type": "pyout",
       "prompt_number": 18,
       "text": [
        "Country      Algeria   Bahrain   Belgium   Bolivia    Brazil  \\\n",
        "Date                                                           \n",
        "2020-10-17  0.035761  0.000436  0.000944  0.065942  0.025863   \n",
        "2020-10-18  0.035761  0.000436  0.000944  0.065942  0.025863   \n",
        "2020-10-19  0.035761  0.000436  0.000944  0.065942  0.025863   \n",
        "2020-10-20  0.035761  0.000436  0.000944  0.065942  0.025863   \n",
        "2020-10-21  0.035761  0.000436  0.000944  0.065942  0.025863   \n",
        "\n",
        "Country     Dominican Republic    France      Iran      Iraq     Italy  \\\n",
        "Date                                                                     \n",
        "2020-10-17            0.000688  0.000938  0.001914  0.000633  0.000909   \n",
        "2020-10-18            0.000688  0.000938  0.001914  0.000633  0.000909   \n",
        "2020-10-19            0.000688  0.000938  0.001914  0.000633  0.000909   \n",
        "2020-10-20            0.000688  0.000938  0.001914  0.000633  0.000909   \n",
        "2020-10-21            0.000688  0.000938  0.001914  0.000633  0.000909   \n",
        "\n",
        "Country       Kuwait    Latvia    Mexico   Nigeria      Peru   Russia  \\\n",
        "Date                                                                    \n",
        "2020-10-17  0.000753  0.000466  0.063665  0.001565  0.000859  0.00137   \n",
        "2020-10-18  0.000753  0.000466  0.063665  0.001565  0.000859  0.00137   \n",
        "2020-10-19  0.000753  0.000466  0.063665  0.001565  0.000859  0.00137   \n",
        "2020-10-20  0.000753  0.000466  0.063665  0.001565  0.000859  0.00137   \n",
        "2020-10-21  0.000753  0.000466  0.063665  0.001565  0.000859  0.00137   \n",
        "\n",
        "Country       Turkey  United Arab Emirates  United States  \n",
        "Date                                                       \n",
        "2020-10-17  0.003608              0.000348       0.000699  \n",
        "2020-10-18  0.003608              0.000348       0.000699  \n",
        "2020-10-19  0.003608              0.000348       0.000699  \n",
        "2020-10-20  0.003608              0.000348       0.000699  \n",
        "2020-10-21  0.003608              0.000348       0.000699  "
       ]
      }
     ],
     "prompt_number": 18
    },
    {
     "cell_type": "markdown",
     "metadata": {},
     "source": [
      "## (Experimental): Relationship of OxCGRT index and parameter values\n",
      "Government responses will impact on parameter values of ODE models about 14 days later. Here, we will investigate on the relationship of [stringency index (from OxCGRT)](https://github.com/OxCGRT/covid-policy-tracker/blob/master/documentation/index_methodology.md) and reproduction number/model parameters.\n"
     ]
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "%matplotlib inline\n",
      "from matplotlib import pyplot as plt\n",
      "import seaborn as sns\n",
      "import pandas as pd"
     ],
     "language": "python",
     "metadata": {},
     "outputs": [],
     "prompt_number": 19
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "df = analyser.track()\n",
      "param_cols = [\"Rt\", *cs.SIRF.PARAMETERS]\n",
      "oxcgrt_cols = oxcgrt_data.OXCGRT_VARS[:]\n",
      "cols = param_cols + oxcgrt_cols\n",
      "delay = 14\n",
      "\n",
      "for col in param_cols:\n",
      "    df[col] = pd.to_numeric(df[col], errors=\"coerce\")\n",
      "    df[col] = df.groupby(\"Country\")[col].shift(0 - delay)\n",
      "\n",
      "df = df.dropna(how=\"any\")\n",
      "df = df.loc[:, [\"Date\", \"Country\", *cols]]\n",
      "track_df = df.copy()\n",
      "track_df.info()"
     ],
     "language": "python",
     "metadata": {},
     "outputs": [
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "<class 'pandas.core.frame.DataFrame'>\n",
        "Int64Index: 84243 entries, 0 to 84494\n",
        "Data columns (total 19 columns):\n",
        " #   Column                               Non-Null Count  Dtype         \n",
        "---  ------                               --------------  -----         \n",
        " 0   Date                                 84243 non-null  datetime64[ns]\n",
        " 1   Country                              84243 non-null  object        \n",
        " 2   Rt                                   84243 non-null  float64       \n",
        " 3   theta                                84243 non-null  float64       \n",
        " 4   kappa                                84243 non-null  float64       \n",
        " 5   rho                                  84243 non-null  float64       \n",
        " 6   sigma                                84243 non-null  float64       \n",
        " 7   School_closing                       84243 non-null  int64         \n",
        " 8   Workplace_closing                    84243 non-null  int64         \n",
        " 9   Cancel_events                        84243 non-null  int64         \n",
        " 10  Gatherings_restrictions              84243 non-null  int64         \n",
        " 11  Transport_closing                    84243 non-null  int64         \n",
        " 12  Stay_home_restrictions               84243 non-null  int64         \n",
        " 13  Internal_movement_restrictions       84243 non-null  int64         \n",
        " 14  International_movement_restrictions  84243 non-null  int64         \n",
        " 15  Information_campaigns                84243 non-null  int64         \n",
        " 16  Testing_policy                       84243 non-null  int64         \n",
        " 17  Contact_tracing                      84243 non-null  int64         \n",
        " 18  Stringency_index                     84243 non-null  float64       \n",
        "dtypes: datetime64[ns](1), float64(6), int64(11), object(1)\n",
        "memory usage: 12.9+ MB\n"
       ]
      }
     ],
     "prompt_number": 20
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "# Correlation\n",
      "df = track_df.copy()\n",
      "df.corr().style.background_gradient(axis=None)"
     ],
     "language": "python",
     "metadata": {},
     "outputs": [
      {
       "html": [
        "<style  type=\"text/css\" >\n",
        "#T_5a8bb5b8_13bf_11eb_bdde_52540065882brow0_col0,#T_5a8bb5b8_13bf_11eb_bdde_52540065882brow1_col1,#T_5a8bb5b8_13bf_11eb_bdde_52540065882brow2_col2,#T_5a8bb5b8_13bf_11eb_bdde_52540065882brow3_col3,#T_5a8bb5b8_13bf_11eb_bdde_52540065882brow4_col4,#T_5a8bb5b8_13bf_11eb_bdde_52540065882brow5_col5,#T_5a8bb5b8_13bf_11eb_bdde_52540065882brow6_col6,#T_5a8bb5b8_13bf_11eb_bdde_52540065882brow7_col7,#T_5a8bb5b8_13bf_11eb_bdde_52540065882brow8_col8,#T_5a8bb5b8_13bf_11eb_bdde_52540065882brow9_col9,#T_5a8bb5b8_13bf_11eb_bdde_52540065882brow10_col10,#T_5a8bb5b8_13bf_11eb_bdde_52540065882brow11_col11,#T_5a8bb5b8_13bf_11eb_bdde_52540065882brow12_col12,#T_5a8bb5b8_13bf_11eb_bdde_52540065882brow13_col13,#T_5a8bb5b8_13bf_11eb_bdde_52540065882brow14_col14,#T_5a8bb5b8_13bf_11eb_bdde_52540065882brow15_col15,#T_5a8bb5b8_13bf_11eb_bdde_52540065882brow16_col16{\n",
        "            background-color:  #023858;\n",
        "            color:  #f1f1f1;\n",
        "        }#T_5a8bb5b8_13bf_11eb_bdde_52540065882brow0_col1,#T_5a8bb5b8_13bf_11eb_bdde_52540065882brow1_col0,#T_5a8bb5b8_13bf_11eb_bdde_52540065882brow3_col5,#T_5a8bb5b8_13bf_11eb_bdde_52540065882brow5_col3{\n",
        "            background-color:  #d8d7e9;\n",
        "            color:  #000000;\n",
        "        }#T_5a8bb5b8_13bf_11eb_bdde_52540065882brow0_col2,#T_5a8bb5b8_13bf_11eb_bdde_52540065882brow2_col0,#T_5a8bb5b8_13bf_11eb_bdde_52540065882brow4_col14,#T_5a8bb5b8_13bf_11eb_bdde_52540065882brow9_col14,#T_5a8bb5b8_13bf_11eb_bdde_52540065882brow14_col4,#T_5a8bb5b8_13bf_11eb_bdde_52540065882brow14_col9{\n",
        "            background-color:  #d1d2e6;\n",
        "            color:  #000000;\n",
        "        }#T_5a8bb5b8_13bf_11eb_bdde_52540065882brow0_col3,#T_5a8bb5b8_13bf_11eb_bdde_52540065882brow3_col0,#T_5a8bb5b8_13bf_11eb_bdde_52540065882brow6_col14,#T_5a8bb5b8_13bf_11eb_bdde_52540065882brow14_col6{\n",
        "            background-color:  #69a5cc;\n",
        "            color:  #000000;\n",
        "        }#T_5a8bb5b8_13bf_11eb_bdde_52540065882brow0_col4,#T_5a8bb5b8_13bf_11eb_bdde_52540065882brow4_col0{\n",
        "            background-color:  #dedcec;\n",
        "            color:  #000000;\n",
        "        }#T_5a8bb5b8_13bf_11eb_bdde_52540065882brow0_col5,#T_5a8bb5b8_13bf_11eb_bdde_52540065882brow5_col0{\n",
        "            background-color:  #e3e0ee;\n",
        "            color:  #000000;\n",
        "        }#T_5a8bb5b8_13bf_11eb_bdde_52540065882brow0_col6,#T_5a8bb5b8_13bf_11eb_bdde_52540065882brow6_col0{\n",
        "            background-color:  #e6e2ef;\n",
        "            color:  #000000;\n",
        "        }#T_5a8bb5b8_13bf_11eb_bdde_52540065882brow0_col7,#T_5a8bb5b8_13bf_11eb_bdde_52540065882brow1_col5,#T_5a8bb5b8_13bf_11eb_bdde_52540065882brow2_col6,#T_5a8bb5b8_13bf_11eb_bdde_52540065882brow5_col1,#T_5a8bb5b8_13bf_11eb_bdde_52540065882brow6_col2,#T_5a8bb5b8_13bf_11eb_bdde_52540065882brow7_col0{\n",
        "            background-color:  #d6d6e9;\n",
        "            color:  #000000;\n",
        "        }#T_5a8bb5b8_13bf_11eb_bdde_52540065882brow0_col8,#T_5a8bb5b8_13bf_11eb_bdde_52540065882brow2_col5,#T_5a8bb5b8_13bf_11eb_bdde_52540065882brow2_col7,#T_5a8bb5b8_13bf_11eb_bdde_52540065882brow5_col2,#T_5a8bb5b8_13bf_11eb_bdde_52540065882brow7_col2,#T_5a8bb5b8_13bf_11eb_bdde_52540065882brow8_col0{\n",
        "            background-color:  #d9d8ea;\n",
        "            color:  #000000;\n",
        "        }#T_5a8bb5b8_13bf_11eb_bdde_52540065882brow0_col9,#T_5a8bb5b8_13bf_11eb_bdde_52540065882brow2_col8,#T_5a8bb5b8_13bf_11eb_bdde_52540065882brow8_col2,#T_5a8bb5b8_13bf_11eb_bdde_52540065882brow9_col0{\n",
        "            background-color:  #d5d5e8;\n",
        "            color:  #000000;\n",
        "        }#T_5a8bb5b8_13bf_11eb_bdde_52540065882brow0_col10,#T_5a8bb5b8_13bf_11eb_bdde_52540065882brow10_col0{\n",
        "            background-color:  #dfddec;\n",
        "            color:  #000000;\n",
        "        }#T_5a8bb5b8_13bf_11eb_bdde_52540065882brow0_col11,#T_5a8bb5b8_13bf_11eb_bdde_52540065882brow11_col0{\n",
        "            background-color:  #e8e4f0;\n",
        "            color:  #000000;\n",
        "        }#T_5a8bb5b8_13bf_11eb_bdde_52540065882brow0_col12,#T_5a8bb5b8_13bf_11eb_bdde_52540065882brow12_col0{\n",
        "            background-color:  #d0d1e6;\n",
        "            color:  #000000;\n",
        "        }#T_5a8bb5b8_13bf_11eb_bdde_52540065882brow0_col13,#T_5a8bb5b8_13bf_11eb_bdde_52540065882brow1_col14,#T_5a8bb5b8_13bf_11eb_bdde_52540065882brow2_col14,#T_5a8bb5b8_13bf_11eb_bdde_52540065882brow13_col0,#T_5a8bb5b8_13bf_11eb_bdde_52540065882brow14_col1,#T_5a8bb5b8_13bf_11eb_bdde_52540065882brow14_col2{\n",
        "            background-color:  #e2dfee;\n",
        "            color:  #000000;\n",
        "        }#T_5a8bb5b8_13bf_11eb_bdde_52540065882brow0_col14,#T_5a8bb5b8_13bf_11eb_bdde_52540065882brow14_col0{\n",
        "            background-color:  #f5eff6;\n",
        "            color:  #000000;\n",
        "        }#T_5a8bb5b8_13bf_11eb_bdde_52540065882brow0_col15,#T_5a8bb5b8_13bf_11eb_bdde_52540065882brow15_col0{\n",
        "            background-color:  #f1ebf4;\n",
        "            color:  #000000;\n",
        "        }#T_5a8bb5b8_13bf_11eb_bdde_52540065882brow0_col16,#T_5a8bb5b8_13bf_11eb_bdde_52540065882brow16_col0{\n",
        "            background-color:  #e0deed;\n",
        "            color:  #000000;\n",
        "        }#T_5a8bb5b8_13bf_11eb_bdde_52540065882brow1_col2,#T_5a8bb5b8_13bf_11eb_bdde_52540065882brow2_col1{\n",
        "            background-color:  #034973;\n",
        "            color:  #f1f1f1;\n",
        "        }#T_5a8bb5b8_13bf_11eb_bdde_52540065882brow1_col3,#T_5a8bb5b8_13bf_11eb_bdde_52540065882brow3_col1{\n",
        "            background-color:  #1c7fb8;\n",
        "            color:  #000000;\n",
        "        }#T_5a8bb5b8_13bf_11eb_bdde_52540065882brow1_col4,#T_5a8bb5b8_13bf_11eb_bdde_52540065882brow4_col1,#T_5a8bb5b8_13bf_11eb_bdde_52540065882brow4_col12,#T_5a8bb5b8_13bf_11eb_bdde_52540065882brow12_col4{\n",
        "            background-color:  #b7c5df;\n",
        "            color:  #000000;\n",
        "        }#T_5a8bb5b8_13bf_11eb_bdde_52540065882brow1_col6,#T_5a8bb5b8_13bf_11eb_bdde_52540065882brow1_col16,#T_5a8bb5b8_13bf_11eb_bdde_52540065882brow3_col9,#T_5a8bb5b8_13bf_11eb_bdde_52540065882brow6_col1,#T_5a8bb5b8_13bf_11eb_bdde_52540065882brow9_col3,#T_5a8bb5b8_13bf_11eb_bdde_52540065882brow16_col1{\n",
        "            background-color:  #cacee5;\n",
        "            color:  #000000;\n",
        "        }#T_5a8bb5b8_13bf_11eb_bdde_52540065882brow1_col7,#T_5a8bb5b8_13bf_11eb_bdde_52540065882brow7_col1{\n",
        "            background-color:  #e4e1ef;\n",
        "            color:  #000000;\n",
        "        }#T_5a8bb5b8_13bf_11eb_bdde_52540065882brow1_col8,#T_5a8bb5b8_13bf_11eb_bdde_52540065882brow8_col1{\n",
        "            background-color:  #d7d6e9;\n",
        "            color:  #000000;\n",
        "        }#T_5a8bb5b8_13bf_11eb_bdde_52540065882brow1_col9,#T_5a8bb5b8_13bf_11eb_bdde_52540065882brow3_col6,#T_5a8bb5b8_13bf_11eb_bdde_52540065882brow6_col3,#T_5a8bb5b8_13bf_11eb_bdde_52540065882brow9_col1{\n",
        "            background-color:  #dad9ea;\n",
        "            color:  #000000;\n",
        "        }#T_5a8bb5b8_13bf_11eb_bdde_52540065882brow1_col10,#T_5a8bb5b8_13bf_11eb_bdde_52540065882brow4_col9,#T_5a8bb5b8_13bf_11eb_bdde_52540065882brow4_col10,#T_5a8bb5b8_13bf_11eb_bdde_52540065882brow8_col14,#T_5a8bb5b8_13bf_11eb_bdde_52540065882brow9_col4,#T_5a8bb5b8_13bf_11eb_bdde_52540065882brow10_col1,#T_5a8bb5b8_13bf_11eb_bdde_52540065882brow10_col4,#T_5a8bb5b8_13bf_11eb_bdde_52540065882brow11_col13,#T_5a8bb5b8_13bf_11eb_bdde_52540065882brow13_col11,#T_5a8bb5b8_13bf_11eb_bdde_52540065882brow14_col8{\n",
        "            background-color:  #8cb3d5;\n",
        "            color:  #000000;\n",
        "        }#T_5a8bb5b8_13bf_11eb_bdde_52540065882brow1_col11,#T_5a8bb5b8_13bf_11eb_bdde_52540065882brow1_col12,#T_5a8bb5b8_13bf_11eb_bdde_52540065882brow11_col1,#T_5a8bb5b8_13bf_11eb_bdde_52540065882brow12_col1{\n",
        "            background-color:  #b0c2de;\n",
        "            color:  #000000;\n",
        "        }#T_5a8bb5b8_13bf_11eb_bdde_52540065882brow1_col13,#T_5a8bb5b8_13bf_11eb_bdde_52540065882brow13_col1{\n",
        "            background-color:  #f0eaf4;\n",
        "            color:  #000000;\n",
        "        }#T_5a8bb5b8_13bf_11eb_bdde_52540065882brow1_col15,#T_5a8bb5b8_13bf_11eb_bdde_52540065882brow15_col1{\n",
        "            background-color:  #b4c4df;\n",
        "            color:  #000000;\n",
        "        }#T_5a8bb5b8_13bf_11eb_bdde_52540065882brow2_col3,#T_5a8bb5b8_13bf_11eb_bdde_52540065882brow3_col2,#T_5a8bb5b8_13bf_11eb_bdde_52540065882brow7_col12,#T_5a8bb5b8_13bf_11eb_bdde_52540065882brow12_col7,#T_5a8bb5b8_13bf_11eb_bdde_52540065882brow13_col16,#T_5a8bb5b8_13bf_11eb_bdde_52540065882brow16_col13{\n",
        "            background-color:  #056dab;\n",
        "            color:  #f1f1f1;\n",
        "        }#T_5a8bb5b8_13bf_11eb_bdde_52540065882brow2_col4,#T_5a8bb5b8_13bf_11eb_bdde_52540065882brow4_col2{\n",
        "            background-color:  #bdc8e1;\n",
        "            color:  #000000;\n",
        "        }#T_5a8bb5b8_13bf_11eb_bdde_52540065882brow2_col9,#T_5a8bb5b8_13bf_11eb_bdde_52540065882brow9_col2{\n",
        "            background-color:  #d4d4e8;\n",
        "            color:  #000000;\n",
        "        }#T_5a8bb5b8_13bf_11eb_bdde_52540065882brow2_col10,#T_5a8bb5b8_13bf_11eb_bdde_52540065882brow10_col2{\n",
        "            background-color:  #88b1d4;\n",
        "            color:  #000000;\n",
        "        }#T_5a8bb5b8_13bf_11eb_bdde_52540065882brow2_col11,#T_5a8bb5b8_13bf_11eb_bdde_52540065882brow2_col12,#T_5a8bb5b8_13bf_11eb_bdde_52540065882brow8_col15,#T_5a8bb5b8_13bf_11eb_bdde_52540065882brow11_col2,#T_5a8bb5b8_13bf_11eb_bdde_52540065882brow12_col2,#T_5a8bb5b8_13bf_11eb_bdde_52540065882brow15_col8{\n",
        "            background-color:  #9ab8d8;\n",
        "            color:  #000000;\n",
        "        }#T_5a8bb5b8_13bf_11eb_bdde_52540065882brow2_col13,#T_5a8bb5b8_13bf_11eb_bdde_52540065882brow13_col2{\n",
        "            background-color:  #f7f0f7;\n",
        "            color:  #000000;\n",
        "        }#T_5a8bb5b8_13bf_11eb_bdde_52540065882brow2_col15,#T_5a8bb5b8_13bf_11eb_bdde_52540065882brow15_col2{\n",
        "            background-color:  #c8cde4;\n",
        "            color:  #000000;\n",
        "        }#T_5a8bb5b8_13bf_11eb_bdde_52540065882brow2_col16,#T_5a8bb5b8_13bf_11eb_bdde_52540065882brow16_col2{\n",
        "            background-color:  #cccfe5;\n",
        "            color:  #000000;\n",
        "        }#T_5a8bb5b8_13bf_11eb_bdde_52540065882brow3_col4,#T_5a8bb5b8_13bf_11eb_bdde_52540065882brow4_col3{\n",
        "            background-color:  #8bb2d4;\n",
        "            color:  #000000;\n",
        "        }#T_5a8bb5b8_13bf_11eb_bdde_52540065882brow3_col7,#T_5a8bb5b8_13bf_11eb_bdde_52540065882brow7_col3{\n",
        "            background-color:  #d2d3e7;\n",
        "            color:  #000000;\n",
        "        }#T_5a8bb5b8_13bf_11eb_bdde_52540065882brow3_col8,#T_5a8bb5b8_13bf_11eb_bdde_52540065882brow8_col3{\n",
        "            background-color:  #c9cee4;\n",
        "            color:  #000000;\n",
        "        }#T_5a8bb5b8_13bf_11eb_bdde_52540065882brow3_col10,#T_5a8bb5b8_13bf_11eb_bdde_52540065882brow10_col3{\n",
        "            background-color:  #8eb3d5;\n",
        "            color:  #000000;\n",
        "        }#T_5a8bb5b8_13bf_11eb_bdde_52540065882brow3_col11,#T_5a8bb5b8_13bf_11eb_bdde_52540065882brow11_col3,#T_5a8bb5b8_13bf_11eb_bdde_52540065882brow14_col16,#T_5a8bb5b8_13bf_11eb_bdde_52540065882brow16_col14{\n",
        "            background-color:  #94b6d7;\n",
        "            color:  #000000;\n",
        "        }#T_5a8bb5b8_13bf_11eb_bdde_52540065882brow3_col12,#T_5a8bb5b8_13bf_11eb_bdde_52540065882brow12_col3{\n",
        "            background-color:  #acc0dd;\n",
        "            color:  #000000;\n",
        "        }#T_5a8bb5b8_13bf_11eb_bdde_52540065882brow3_col13,#T_5a8bb5b8_13bf_11eb_bdde_52540065882brow13_col3{\n",
        "            background-color:  #fef6fb;\n",
        "            color:  #000000;\n",
        "        }#T_5a8bb5b8_13bf_11eb_bdde_52540065882brow3_col14,#T_5a8bb5b8_13bf_11eb_bdde_52540065882brow14_col3{\n",
        "            background-color:  #fff7fb;\n",
        "            color:  #000000;\n",
        "        }#T_5a8bb5b8_13bf_11eb_bdde_52540065882brow3_col15,#T_5a8bb5b8_13bf_11eb_bdde_52540065882brow15_col3{\n",
        "            background-color:  #f4edf6;\n",
        "            color:  #000000;\n",
        "        }#T_5a8bb5b8_13bf_11eb_bdde_52540065882brow3_col16,#T_5a8bb5b8_13bf_11eb_bdde_52540065882brow16_col3{\n",
        "            background-color:  #c4cbe3;\n",
        "            color:  #000000;\n",
        "        }#T_5a8bb5b8_13bf_11eb_bdde_52540065882brow4_col5,#T_5a8bb5b8_13bf_11eb_bdde_52540065882brow5_col4{\n",
        "            background-color:  #78abd0;\n",
        "            color:  #000000;\n",
        "        }#T_5a8bb5b8_13bf_11eb_bdde_52540065882brow4_col6,#T_5a8bb5b8_13bf_11eb_bdde_52540065882brow4_col15,#T_5a8bb5b8_13bf_11eb_bdde_52540065882brow6_col4,#T_5a8bb5b8_13bf_11eb_bdde_52540065882brow15_col4{\n",
        "            background-color:  #b1c2de;\n",
        "            color:  #000000;\n",
        "        }#T_5a8bb5b8_13bf_11eb_bdde_52540065882brow4_col7,#T_5a8bb5b8_13bf_11eb_bdde_52540065882brow4_col16,#T_5a8bb5b8_13bf_11eb_bdde_52540065882brow7_col4,#T_5a8bb5b8_13bf_11eb_bdde_52540065882brow16_col4{\n",
        "            background-color:  #84b0d3;\n",
        "            color:  #000000;\n",
        "        }#T_5a8bb5b8_13bf_11eb_bdde_52540065882brow4_col8,#T_5a8bb5b8_13bf_11eb_bdde_52540065882brow8_col4{\n",
        "            background-color:  #a4bcda;\n",
        "            color:  #000000;\n",
        "        }#T_5a8bb5b8_13bf_11eb_bdde_52540065882brow4_col11,#T_5a8bb5b8_13bf_11eb_bdde_52540065882brow11_col4{\n",
        "            background-color:  #75a9cf;\n",
        "            color:  #000000;\n",
        "        }#T_5a8bb5b8_13bf_11eb_bdde_52540065882brow4_col13,#T_5a8bb5b8_13bf_11eb_bdde_52540065882brow13_col4{\n",
        "            background-color:  #c1cae2;\n",
        "            color:  #000000;\n",
        "        }#T_5a8bb5b8_13bf_11eb_bdde_52540065882brow5_col6,#T_5a8bb5b8_13bf_11eb_bdde_52540065882brow6_col5{\n",
        "            background-color:  #05659f;\n",
        "            color:  #f1f1f1;\n",
        "        }#T_5a8bb5b8_13bf_11eb_bdde_52540065882brow5_col7,#T_5a8bb5b8_13bf_11eb_bdde_52540065882brow7_col5{\n",
        "            background-color:  #0567a2;\n",
        "            color:  #f1f1f1;\n",
        "        }#T_5a8bb5b8_13bf_11eb_bdde_52540065882brow5_col8,#T_5a8bb5b8_13bf_11eb_bdde_52540065882brow6_col8,#T_5a8bb5b8_13bf_11eb_bdde_52540065882brow8_col5,#T_5a8bb5b8_13bf_11eb_bdde_52540065882brow8_col6{\n",
        "            background-color:  #1077b4;\n",
        "            color:  #f1f1f1;\n",
        "        }#T_5a8bb5b8_13bf_11eb_bdde_52540065882brow5_col9,#T_5a8bb5b8_13bf_11eb_bdde_52540065882brow5_col11,#T_5a8bb5b8_13bf_11eb_bdde_52540065882brow8_col13,#T_5a8bb5b8_13bf_11eb_bdde_52540065882brow9_col5,#T_5a8bb5b8_13bf_11eb_bdde_52540065882brow11_col5,#T_5a8bb5b8_13bf_11eb_bdde_52540065882brow13_col8{\n",
        "            background-color:  #197db7;\n",
        "            color:  #000000;\n",
        "        }#T_5a8bb5b8_13bf_11eb_bdde_52540065882brow5_col10,#T_5a8bb5b8_13bf_11eb_bdde_52540065882brow10_col5{\n",
        "            background-color:  #056fae;\n",
        "            color:  #f1f1f1;\n",
        "        }#T_5a8bb5b8_13bf_11eb_bdde_52540065882brow5_col12,#T_5a8bb5b8_13bf_11eb_bdde_52540065882brow12_col5{\n",
        "            background-color:  #4094c3;\n",
        "            color:  #000000;\n",
        "        }#T_5a8bb5b8_13bf_11eb_bdde_52540065882brow5_col13,#T_5a8bb5b8_13bf_11eb_bdde_52540065882brow13_col5{\n",
        "            background-color:  #1b7eb7;\n",
        "            color:  #000000;\n",
        "        }#T_5a8bb5b8_13bf_11eb_bdde_52540065882brow5_col14,#T_5a8bb5b8_13bf_11eb_bdde_52540065882brow5_col15,#T_5a8bb5b8_13bf_11eb_bdde_52540065882brow14_col5,#T_5a8bb5b8_13bf_11eb_bdde_52540065882brow15_col5{\n",
        "            background-color:  #76aad0;\n",
        "            color:  #000000;\n",
        "        }#T_5a8bb5b8_13bf_11eb_bdde_52540065882brow5_col16,#T_5a8bb5b8_13bf_11eb_bdde_52540065882brow7_col16,#T_5a8bb5b8_13bf_11eb_bdde_52540065882brow16_col5,#T_5a8bb5b8_13bf_11eb_bdde_52540065882brow16_col7{\n",
        "            background-color:  #045b8e;\n",
        "            color:  #f1f1f1;\n",
        "        }#T_5a8bb5b8_13bf_11eb_bdde_52540065882brow6_col7,#T_5a8bb5b8_13bf_11eb_bdde_52540065882brow7_col6{\n",
        "            background-color:  #0a73b2;\n",
        "            color:  #f1f1f1;\n",
        "        }#T_5a8bb5b8_13bf_11eb_bdde_52540065882brow6_col9,#T_5a8bb5b8_13bf_11eb_bdde_52540065882brow9_col6{\n",
        "            background-color:  #3991c1;\n",
        "            color:  #000000;\n",
        "        }#T_5a8bb5b8_13bf_11eb_bdde_52540065882brow6_col10,#T_5a8bb5b8_13bf_11eb_bdde_52540065882brow7_col13,#T_5a8bb5b8_13bf_11eb_bdde_52540065882brow10_col6,#T_5a8bb5b8_13bf_11eb_bdde_52540065882brow13_col7{\n",
        "            background-color:  #0771b1;\n",
        "            color:  #f1f1f1;\n",
        "        }#T_5a8bb5b8_13bf_11eb_bdde_52540065882brow6_col11,#T_5a8bb5b8_13bf_11eb_bdde_52540065882brow11_col6{\n",
        "            background-color:  #3f93c2;\n",
        "            color:  #000000;\n",
        "        }#T_5a8bb5b8_13bf_11eb_bdde_52540065882brow6_col12,#T_5a8bb5b8_13bf_11eb_bdde_52540065882brow12_col6{\n",
        "            background-color:  #4c99c5;\n",
        "            color:  #000000;\n",
        "        }#T_5a8bb5b8_13bf_11eb_bdde_52540065882brow6_col13,#T_5a8bb5b8_13bf_11eb_bdde_52540065882brow13_col6{\n",
        "            background-color:  #056aa6;\n",
        "            color:  #f1f1f1;\n",
        "        }#T_5a8bb5b8_13bf_11eb_bdde_52540065882brow6_col15,#T_5a8bb5b8_13bf_11eb_bdde_52540065882brow15_col6{\n",
        "            background-color:  #589ec8;\n",
        "            color:  #000000;\n",
        "        }#T_5a8bb5b8_13bf_11eb_bdde_52540065882brow6_col16,#T_5a8bb5b8_13bf_11eb_bdde_52540065882brow16_col6{\n",
        "            background-color:  #045e93;\n",
        "            color:  #f1f1f1;\n",
        "        }#T_5a8bb5b8_13bf_11eb_bdde_52540065882brow7_col8,#T_5a8bb5b8_13bf_11eb_bdde_52540065882brow8_col7{\n",
        "            background-color:  #0569a5;\n",
        "            color:  #f1f1f1;\n",
        "        }#T_5a8bb5b8_13bf_11eb_bdde_52540065882brow7_col9,#T_5a8bb5b8_13bf_11eb_bdde_52540065882brow9_col7,#T_5a8bb5b8_13bf_11eb_bdde_52540065882brow13_col15,#T_5a8bb5b8_13bf_11eb_bdde_52540065882brow15_col13{\n",
        "            background-color:  #1e80b8;\n",
        "            color:  #000000;\n",
        "        }#T_5a8bb5b8_13bf_11eb_bdde_52540065882brow7_col10,#T_5a8bb5b8_13bf_11eb_bdde_52540065882brow10_col7{\n",
        "            background-color:  #2383ba;\n",
        "            color:  #000000;\n",
        "        }#T_5a8bb5b8_13bf_11eb_bdde_52540065882brow7_col11,#T_5a8bb5b8_13bf_11eb_bdde_52540065882brow9_col12,#T_5a8bb5b8_13bf_11eb_bdde_52540065882brow11_col7,#T_5a8bb5b8_13bf_11eb_bdde_52540065882brow12_col9{\n",
        "            background-color:  #187cb6;\n",
        "            color:  #000000;\n",
        "        }#T_5a8bb5b8_13bf_11eb_bdde_52540065882brow7_col14,#T_5a8bb5b8_13bf_11eb_bdde_52540065882brow14_col7{\n",
        "            background-color:  #7dacd1;\n",
        "            color:  #000000;\n",
        "        }#T_5a8bb5b8_13bf_11eb_bdde_52540065882brow7_col15,#T_5a8bb5b8_13bf_11eb_bdde_52540065882brow9_col13,#T_5a8bb5b8_13bf_11eb_bdde_52540065882brow13_col9,#T_5a8bb5b8_13bf_11eb_bdde_52540065882brow15_col7{\n",
        "            background-color:  #6fa7ce;\n",
        "            color:  #000000;\n",
        "        }#T_5a8bb5b8_13bf_11eb_bdde_52540065882brow8_col9,#T_5a8bb5b8_13bf_11eb_bdde_52540065882brow9_col8{\n",
        "            background-color:  #0567a1;\n",
        "            color:  #f1f1f1;\n",
        "        }#T_5a8bb5b8_13bf_11eb_bdde_52540065882brow8_col10,#T_5a8bb5b8_13bf_11eb_bdde_52540065882brow9_col11,#T_5a8bb5b8_13bf_11eb_bdde_52540065882brow10_col8,#T_5a8bb5b8_13bf_11eb_bdde_52540065882brow11_col9{\n",
        "            background-color:  #056faf;\n",
        "            color:  #f1f1f1;\n",
        "        }#T_5a8bb5b8_13bf_11eb_bdde_52540065882brow8_col11,#T_5a8bb5b8_13bf_11eb_bdde_52540065882brow11_col8{\n",
        "            background-color:  #056ba7;\n",
        "            color:  #f1f1f1;\n",
        "        }#T_5a8bb5b8_13bf_11eb_bdde_52540065882brow8_col12,#T_5a8bb5b8_13bf_11eb_bdde_52540065882brow12_col8{\n",
        "            background-color:  #0872b1;\n",
        "            color:  #f1f1f1;\n",
        "        }#T_5a8bb5b8_13bf_11eb_bdde_52540065882brow8_col16,#T_5a8bb5b8_13bf_11eb_bdde_52540065882brow16_col8{\n",
        "            background-color:  #045483;\n",
        "            color:  #f1f1f1;\n",
        "        }#T_5a8bb5b8_13bf_11eb_bdde_52540065882brow9_col10,#T_5a8bb5b8_13bf_11eb_bdde_52540065882brow10_col9{\n",
        "            background-color:  #1379b5;\n",
        "            color:  #f1f1f1;\n",
        "        }#T_5a8bb5b8_13bf_11eb_bdde_52540065882brow9_col15,#T_5a8bb5b8_13bf_11eb_bdde_52540065882brow15_col9{\n",
        "            background-color:  #cdd0e5;\n",
        "            color:  #000000;\n",
        "        }#T_5a8bb5b8_13bf_11eb_bdde_52540065882brow9_col16,#T_5a8bb5b8_13bf_11eb_bdde_52540065882brow16_col9{\n",
        "            background-color:  #046097;\n",
        "            color:  #f1f1f1;\n",
        "        }#T_5a8bb5b8_13bf_11eb_bdde_52540065882brow10_col11,#T_5a8bb5b8_13bf_11eb_bdde_52540065882brow11_col10{\n",
        "            background-color:  #04639b;\n",
        "            color:  #f1f1f1;\n",
        "        }#T_5a8bb5b8_13bf_11eb_bdde_52540065882brow10_col12,#T_5a8bb5b8_13bf_11eb_bdde_52540065882brow12_col10{\n",
        "            background-color:  #2d8abd;\n",
        "            color:  #000000;\n",
        "        }#T_5a8bb5b8_13bf_11eb_bdde_52540065882brow10_col13,#T_5a8bb5b8_13bf_11eb_bdde_52540065882brow13_col10{\n",
        "            background-color:  #63a2cb;\n",
        "            color:  #000000;\n",
        "        }#T_5a8bb5b8_13bf_11eb_bdde_52540065882brow10_col14,#T_5a8bb5b8_13bf_11eb_bdde_52540065882brow14_col10{\n",
        "            background-color:  #97b7d7;\n",
        "            color:  #000000;\n",
        "        }#T_5a8bb5b8_13bf_11eb_bdde_52540065882brow10_col15,#T_5a8bb5b8_13bf_11eb_bdde_52540065882brow15_col10{\n",
        "            background-color:  #80aed2;\n",
        "            color:  #000000;\n",
        "        }#T_5a8bb5b8_13bf_11eb_bdde_52540065882brow10_col16,#T_5a8bb5b8_13bf_11eb_bdde_52540065882brow16_col10{\n",
        "            background-color:  #045d92;\n",
        "            color:  #f1f1f1;\n",
        "        }#T_5a8bb5b8_13bf_11eb_bdde_52540065882brow11_col12,#T_5a8bb5b8_13bf_11eb_bdde_52540065882brow12_col11{\n",
        "            background-color:  #4295c3;\n",
        "            color:  #000000;\n",
        "        }#T_5a8bb5b8_13bf_11eb_bdde_52540065882brow11_col14,#T_5a8bb5b8_13bf_11eb_bdde_52540065882brow14_col11{\n",
        "            background-color:  #91b5d6;\n",
        "            color:  #000000;\n",
        "        }#T_5a8bb5b8_13bf_11eb_bdde_52540065882brow11_col15,#T_5a8bb5b8_13bf_11eb_bdde_52540065882brow15_col11{\n",
        "            background-color:  #abbfdc;\n",
        "            color:  #000000;\n",
        "        }#T_5a8bb5b8_13bf_11eb_bdde_52540065882brow11_col16,#T_5a8bb5b8_13bf_11eb_bdde_52540065882brow16_col11{\n",
        "            background-color:  #0568a3;\n",
        "            color:  #f1f1f1;\n",
        "        }#T_5a8bb5b8_13bf_11eb_bdde_52540065882brow12_col13,#T_5a8bb5b8_13bf_11eb_bdde_52540065882brow13_col12{\n",
        "            background-color:  #3b92c1;\n",
        "            color:  #000000;\n",
        "        }#T_5a8bb5b8_13bf_11eb_bdde_52540065882brow12_col14,#T_5a8bb5b8_13bf_11eb_bdde_52540065882brow14_col12{\n",
        "            background-color:  #a9bfdc;\n",
        "            color:  #000000;\n",
        "        }#T_5a8bb5b8_13bf_11eb_bdde_52540065882brow12_col15,#T_5a8bb5b8_13bf_11eb_bdde_52540065882brow15_col12{\n",
        "            background-color:  #93b5d6;\n",
        "            color:  #000000;\n",
        "        }#T_5a8bb5b8_13bf_11eb_bdde_52540065882brow12_col16,#T_5a8bb5b8_13bf_11eb_bdde_52540065882brow16_col12{\n",
        "            background-color:  #0569a4;\n",
        "            color:  #f1f1f1;\n",
        "        }#T_5a8bb5b8_13bf_11eb_bdde_52540065882brow13_col14,#T_5a8bb5b8_13bf_11eb_bdde_52540065882brow14_col13{\n",
        "            background-color:  #2786bb;\n",
        "            color:  #000000;\n",
        "        }#T_5a8bb5b8_13bf_11eb_bdde_52540065882brow14_col15,#T_5a8bb5b8_13bf_11eb_bdde_52540065882brow15_col14{\n",
        "            background-color:  #2484ba;\n",
        "            color:  #000000;\n",
        "        }#T_5a8bb5b8_13bf_11eb_bdde_52540065882brow15_col16,#T_5a8bb5b8_13bf_11eb_bdde_52540065882brow16_col15{\n",
        "            background-color:  #73a9cf;\n",
        "            color:  #000000;\n",
        "        }</style><table id=\"T_5a8bb5b8_13bf_11eb_bdde_52540065882b\" ><thead>    <tr>        <th class=\"blank level0\" ></th>        <th class=\"col_heading level0 col0\" >Rt</th>        <th class=\"col_heading level0 col1\" >theta</th>        <th class=\"col_heading level0 col2\" >kappa</th>        <th class=\"col_heading level0 col3\" >rho</th>        <th class=\"col_heading level0 col4\" >sigma</th>        <th class=\"col_heading level0 col5\" >School_closing</th>        <th class=\"col_heading level0 col6\" >Workplace_closing</th>        <th class=\"col_heading level0 col7\" >Cancel_events</th>        <th class=\"col_heading level0 col8\" >Gatherings_restrictions</th>        <th class=\"col_heading level0 col9\" >Transport_closing</th>        <th class=\"col_heading level0 col10\" >Stay_home_restrictions</th>        <th class=\"col_heading level0 col11\" >Internal_movement_restrictions</th>        <th class=\"col_heading level0 col12\" >International_movement_restrictions</th>        <th class=\"col_heading level0 col13\" >Information_campaigns</th>        <th class=\"col_heading level0 col14\" >Testing_policy</th>        <th class=\"col_heading level0 col15\" >Contact_tracing</th>        <th class=\"col_heading level0 col16\" >Stringency_index</th>    </tr></thead><tbody>\n",
        "                <tr>\n",
        "                        <th id=\"T_5a8bb5b8_13bf_11eb_bdde_52540065882blevel0_row0\" class=\"row_heading level0 row0\" >Rt</th>\n",
        "                        <td id=\"T_5a8bb5b8_13bf_11eb_bdde_52540065882brow0_col0\" class=\"data row0 col0\" >1.000000</td>\n",
        "                        <td id=\"T_5a8bb5b8_13bf_11eb_bdde_52540065882brow0_col1\" class=\"data row0 col1\" >-0.110513</td>\n",
        "                        <td id=\"T_5a8bb5b8_13bf_11eb_bdde_52540065882brow0_col2\" class=\"data row0 col2\" >-0.069803</td>\n",
        "                        <td id=\"T_5a8bb5b8_13bf_11eb_bdde_52540065882brow0_col3\" class=\"data row0 col3\" >0.318303</td>\n",
        "                        <td id=\"T_5a8bb5b8_13bf_11eb_bdde_52540065882brow0_col4\" class=\"data row0 col4\" >-0.151016</td>\n",
        "                        <td id=\"T_5a8bb5b8_13bf_11eb_bdde_52540065882brow0_col5\" class=\"data row0 col5\" >-0.183167</td>\n",
        "                        <td id=\"T_5a8bb5b8_13bf_11eb_bdde_52540065882brow0_col6\" class=\"data row0 col6\" >-0.197718</td>\n",
        "                        <td id=\"T_5a8bb5b8_13bf_11eb_bdde_52540065882brow0_col7\" class=\"data row0 col7\" >-0.097968</td>\n",
        "                        <td id=\"T_5a8bb5b8_13bf_11eb_bdde_52540065882brow0_col8\" class=\"data row0 col8\" >-0.121087</td>\n",
        "                        <td id=\"T_5a8bb5b8_13bf_11eb_bdde_52540065882brow0_col9\" class=\"data row0 col9\" >-0.097585</td>\n",
        "                        <td id=\"T_5a8bb5b8_13bf_11eb_bdde_52540065882brow0_col10\" class=\"data row0 col10\" >-0.156031</td>\n",
        "                        <td id=\"T_5a8bb5b8_13bf_11eb_bdde_52540065882brow0_col11\" class=\"data row0 col11\" >-0.219589</td>\n",
        "                        <td id=\"T_5a8bb5b8_13bf_11eb_bdde_52540065882brow0_col12\" class=\"data row0 col12\" >-0.064236</td>\n",
        "                        <td id=\"T_5a8bb5b8_13bf_11eb_bdde_52540065882brow0_col13\" class=\"data row0 col13\" >-0.177313</td>\n",
        "                        <td id=\"T_5a8bb5b8_13bf_11eb_bdde_52540065882brow0_col14\" class=\"data row0 col14\" >-0.328683</td>\n",
        "                        <td id=\"T_5a8bb5b8_13bf_11eb_bdde_52540065882brow0_col15\" class=\"data row0 col15\" >-0.283433</td>\n",
        "                        <td id=\"T_5a8bb5b8_13bf_11eb_bdde_52540065882brow0_col16\" class=\"data row0 col16\" >-0.165183</td>\n",
        "            </tr>\n",
        "            <tr>\n",
        "                        <th id=\"T_5a8bb5b8_13bf_11eb_bdde_52540065882blevel0_row1\" class=\"row_heading level0 row1\" >theta</th>\n",
        "                        <td id=\"T_5a8bb5b8_13bf_11eb_bdde_52540065882brow1_col0\" class=\"data row1 col0\" >-0.110513</td>\n",
        "                        <td id=\"T_5a8bb5b8_13bf_11eb_bdde_52540065882brow1_col1\" class=\"data row1 col1\" >1.000000</td>\n",
        "                        <td id=\"T_5a8bb5b8_13bf_11eb_bdde_52540065882brow1_col2\" class=\"data row1 col2\" >0.906531</td>\n",
        "                        <td id=\"T_5a8bb5b8_13bf_11eb_bdde_52540065882brow1_col3\" class=\"data row1 col3\" >0.561165</td>\n",
        "                        <td id=\"T_5a8bb5b8_13bf_11eb_bdde_52540065882brow1_col4\" class=\"data row1 col4\" >0.041440</td>\n",
        "                        <td id=\"T_5a8bb5b8_13bf_11eb_bdde_52540065882brow1_col5\" class=\"data row1 col5\" >-0.098108</td>\n",
        "                        <td id=\"T_5a8bb5b8_13bf_11eb_bdde_52540065882brow1_col6\" class=\"data row1 col6\" >-0.037857</td>\n",
        "                        <td id=\"T_5a8bb5b8_13bf_11eb_bdde_52540065882brow1_col7\" class=\"data row1 col7\" >-0.188876</td>\n",
        "                        <td id=\"T_5a8bb5b8_13bf_11eb_bdde_52540065882brow1_col8\" class=\"data row1 col8\" >-0.108219</td>\n",
        "                        <td id=\"T_5a8bb5b8_13bf_11eb_bdde_52540065882brow1_col9\" class=\"data row1 col9\" >-0.127314</td>\n",
        "                        <td id=\"T_5a8bb5b8_13bf_11eb_bdde_52540065882brow1_col10\" class=\"data row1 col10\" >0.207170</td>\n",
        "                        <td id=\"T_5a8bb5b8_13bf_11eb_bdde_52540065882brow1_col11\" class=\"data row1 col11\" >0.068791</td>\n",
        "                        <td id=\"T_5a8bb5b8_13bf_11eb_bdde_52540065882brow1_col12\" class=\"data row1 col12\" >0.070431</td>\n",
        "                        <td id=\"T_5a8bb5b8_13bf_11eb_bdde_52540065882brow1_col13\" class=\"data row1 col13\" >-0.275899</td>\n",
        "                        <td id=\"T_5a8bb5b8_13bf_11eb_bdde_52540065882brow1_col14\" class=\"data row1 col14\" >-0.179554</td>\n",
        "                        <td id=\"T_5a8bb5b8_13bf_11eb_bdde_52540065882brow1_col15\" class=\"data row1 col15\" >0.054788</td>\n",
        "                        <td id=\"T_5a8bb5b8_13bf_11eb_bdde_52540065882brow1_col16\" class=\"data row1 col16\" >-0.040768</td>\n",
        "            </tr>\n",
        "            <tr>\n",
        "                        <th id=\"T_5a8bb5b8_13bf_11eb_bdde_52540065882blevel0_row2\" class=\"row_heading level0 row2\" >kappa</th>\n",
        "                        <td id=\"T_5a8bb5b8_13bf_11eb_bdde_52540065882brow2_col0\" class=\"data row2 col0\" >-0.069803</td>\n",
        "                        <td id=\"T_5a8bb5b8_13bf_11eb_bdde_52540065882brow2_col1\" class=\"data row2 col1\" >0.906531</td>\n",
        "                        <td id=\"T_5a8bb5b8_13bf_11eb_bdde_52540065882brow2_col2\" class=\"data row2 col2\" >1.000000</td>\n",
        "                        <td id=\"T_5a8bb5b8_13bf_11eb_bdde_52540065882brow2_col3\" class=\"data row2 col3\" >0.667682</td>\n",
        "                        <td id=\"T_5a8bb5b8_13bf_11eb_bdde_52540065882brow2_col4\" class=\"data row2 col4\" >0.014535</td>\n",
        "                        <td id=\"T_5a8bb5b8_13bf_11eb_bdde_52540065882brow2_col5\" class=\"data row2 col5\" >-0.122424</td>\n",
        "                        <td id=\"T_5a8bb5b8_13bf_11eb_bdde_52540065882brow2_col6\" class=\"data row2 col6\" >-0.100572</td>\n",
        "                        <td id=\"T_5a8bb5b8_13bf_11eb_bdde_52540065882brow2_col7\" class=\"data row2 col7\" >-0.121642</td>\n",
        "                        <td id=\"T_5a8bb5b8_13bf_11eb_bdde_52540065882brow2_col8\" class=\"data row2 col8\" >-0.094680</td>\n",
        "                        <td id=\"T_5a8bb5b8_13bf_11eb_bdde_52540065882brow2_col9\" class=\"data row2 col9\" >-0.089759</td>\n",
        "                        <td id=\"T_5a8bb5b8_13bf_11eb_bdde_52540065882brow2_col10\" class=\"data row2 col10\" >0.222753</td>\n",
        "                        <td id=\"T_5a8bb5b8_13bf_11eb_bdde_52540065882brow2_col11\" class=\"data row2 col11\" >0.156126</td>\n",
        "                        <td id=\"T_5a8bb5b8_13bf_11eb_bdde_52540065882brow2_col12\" class=\"data row2 col12\" >0.156515</td>\n",
        "                        <td id=\"T_5a8bb5b8_13bf_11eb_bdde_52540065882brow2_col13\" class=\"data row2 col13\" >-0.342411</td>\n",
        "                        <td id=\"T_5a8bb5b8_13bf_11eb_bdde_52540065882brow2_col14\" class=\"data row2 col14\" >-0.177730</td>\n",
        "                        <td id=\"T_5a8bb5b8_13bf_11eb_bdde_52540065882brow2_col15\" class=\"data row2 col15\" >-0.027453</td>\n",
        "                        <td id=\"T_5a8bb5b8_13bf_11eb_bdde_52540065882brow2_col16\" class=\"data row2 col16\" >-0.046897</td>\n",
        "            </tr>\n",
        "            <tr>\n",
        "                        <th id=\"T_5a8bb5b8_13bf_11eb_bdde_52540065882blevel0_row3\" class=\"row_heading level0 row3\" >rho</th>\n",
        "                        <td id=\"T_5a8bb5b8_13bf_11eb_bdde_52540065882brow3_col0\" class=\"data row3 col0\" >0.318303</td>\n",
        "                        <td id=\"T_5a8bb5b8_13bf_11eb_bdde_52540065882brow3_col1\" class=\"data row3 col1\" >0.561165</td>\n",
        "                        <td id=\"T_5a8bb5b8_13bf_11eb_bdde_52540065882brow3_col2\" class=\"data row3 col2\" >0.667682</td>\n",
        "                        <td id=\"T_5a8bb5b8_13bf_11eb_bdde_52540065882brow3_col3\" class=\"data row3 col3\" >1.000000</td>\n",
        "                        <td id=\"T_5a8bb5b8_13bf_11eb_bdde_52540065882brow3_col4\" class=\"data row3 col4\" >0.211954</td>\n",
        "                        <td id=\"T_5a8bb5b8_13bf_11eb_bdde_52540065882brow3_col5\" class=\"data row3 col5\" >-0.112563</td>\n",
        "                        <td id=\"T_5a8bb5b8_13bf_11eb_bdde_52540065882brow3_col6\" class=\"data row3 col6\" >-0.128919</td>\n",
        "                        <td id=\"T_5a8bb5b8_13bf_11eb_bdde_52540065882brow3_col7\" class=\"data row3 col7\" >-0.079111</td>\n",
        "                        <td id=\"T_5a8bb5b8_13bf_11eb_bdde_52540065882brow3_col8\" class=\"data row3 col8\" >-0.034607</td>\n",
        "                        <td id=\"T_5a8bb5b8_13bf_11eb_bdde_52540065882brow3_col9\" class=\"data row3 col9\" >-0.037409</td>\n",
        "                        <td id=\"T_5a8bb5b8_13bf_11eb_bdde_52540065882brow3_col10\" class=\"data row3 col10\" >0.200101</td>\n",
        "                        <td id=\"T_5a8bb5b8_13bf_11eb_bdde_52540065882brow3_col11\" class=\"data row3 col11\" >0.176888</td>\n",
        "                        <td id=\"T_5a8bb5b8_13bf_11eb_bdde_52540065882brow3_col12\" class=\"data row3 col12\" >0.089181</td>\n",
        "                        <td id=\"T_5a8bb5b8_13bf_11eb_bdde_52540065882brow3_col13\" class=\"data row3 col13\" >-0.408990</td>\n",
        "                        <td id=\"T_5a8bb5b8_13bf_11eb_bdde_52540065882brow3_col14\" class=\"data row3 col14\" >-0.419213</td>\n",
        "                        <td id=\"T_5a8bb5b8_13bf_11eb_bdde_52540065882brow3_col15\" class=\"data row3 col15\" >-0.310800</td>\n",
        "                        <td id=\"T_5a8bb5b8_13bf_11eb_bdde_52540065882brow3_col16\" class=\"data row3 col16\" >-0.013284</td>\n",
        "            </tr>\n",
        "            <tr>\n",
        "                        <th id=\"T_5a8bb5b8_13bf_11eb_bdde_52540065882blevel0_row4\" class=\"row_heading level0 row4\" >sigma</th>\n",
        "                        <td id=\"T_5a8bb5b8_13bf_11eb_bdde_52540065882brow4_col0\" class=\"data row4 col0\" >-0.151016</td>\n",
        "                        <td id=\"T_5a8bb5b8_13bf_11eb_bdde_52540065882brow4_col1\" class=\"data row4 col1\" >0.041440</td>\n",
        "                        <td id=\"T_5a8bb5b8_13bf_11eb_bdde_52540065882brow4_col2\" class=\"data row4 col2\" >0.014535</td>\n",
        "                        <td id=\"T_5a8bb5b8_13bf_11eb_bdde_52540065882brow4_col3\" class=\"data row4 col3\" >0.211954</td>\n",
        "                        <td id=\"T_5a8bb5b8_13bf_11eb_bdde_52540065882brow4_col4\" class=\"data row4 col4\" >1.000000</td>\n",
        "                        <td id=\"T_5a8bb5b8_13bf_11eb_bdde_52540065882brow4_col5\" class=\"data row4 col5\" >0.275148</td>\n",
        "                        <td id=\"T_5a8bb5b8_13bf_11eb_bdde_52540065882brow4_col6\" class=\"data row4 col6\" >0.068120</td>\n",
        "                        <td id=\"T_5a8bb5b8_13bf_11eb_bdde_52540065882brow4_col7\" class=\"data row4 col7\" >0.233953</td>\n",
        "                        <td id=\"T_5a8bb5b8_13bf_11eb_bdde_52540065882brow4_col8\" class=\"data row4 col8\" >0.120746</td>\n",
        "                        <td id=\"T_5a8bb5b8_13bf_11eb_bdde_52540065882brow4_col9\" class=\"data row4 col9\" >0.205529</td>\n",
        "                        <td id=\"T_5a8bb5b8_13bf_11eb_bdde_52540065882brow4_col10\" class=\"data row4 col10\" >0.202412</td>\n",
        "                        <td id=\"T_5a8bb5b8_13bf_11eb_bdde_52540065882brow4_col11\" class=\"data row4 col11\" >0.290148</td>\n",
        "                        <td id=\"T_5a8bb5b8_13bf_11eb_bdde_52540065882brow4_col12\" class=\"data row4 col12\" >0.046208</td>\n",
        "                        <td id=\"T_5a8bb5b8_13bf_11eb_bdde_52540065882brow4_col13\" class=\"data row4 col13\" >0.001828</td>\n",
        "                        <td id=\"T_5a8bb5b8_13bf_11eb_bdde_52540065882brow4_col14\" class=\"data row4 col14\" >-0.068635</td>\n",
        "                        <td id=\"T_5a8bb5b8_13bf_11eb_bdde_52540065882brow4_col15\" class=\"data row4 col15\" >0.066349</td>\n",
        "                        <td id=\"T_5a8bb5b8_13bf_11eb_bdde_52540065882brow4_col16\" class=\"data row4 col16\" >0.231885</td>\n",
        "            </tr>\n",
        "            <tr>\n",
        "                        <th id=\"T_5a8bb5b8_13bf_11eb_bdde_52540065882blevel0_row5\" class=\"row_heading level0 row5\" >School_closing</th>\n",
        "                        <td id=\"T_5a8bb5b8_13bf_11eb_bdde_52540065882brow5_col0\" class=\"data row5 col0\" >-0.183167</td>\n",
        "                        <td id=\"T_5a8bb5b8_13bf_11eb_bdde_52540065882brow5_col1\" class=\"data row5 col1\" >-0.098108</td>\n",
        "                        <td id=\"T_5a8bb5b8_13bf_11eb_bdde_52540065882brow5_col2\" class=\"data row5 col2\" >-0.122424</td>\n",
        "                        <td id=\"T_5a8bb5b8_13bf_11eb_bdde_52540065882brow5_col3\" class=\"data row5 col3\" >-0.112563</td>\n",
        "                        <td id=\"T_5a8bb5b8_13bf_11eb_bdde_52540065882brow5_col4\" class=\"data row5 col4\" >0.275148</td>\n",
        "                        <td id=\"T_5a8bb5b8_13bf_11eb_bdde_52540065882brow5_col5\" class=\"data row5 col5\" >1.000000</td>\n",
        "                        <td id=\"T_5a8bb5b8_13bf_11eb_bdde_52540065882brow5_col6\" class=\"data row5 col6\" >0.730017</td>\n",
        "                        <td id=\"T_5a8bb5b8_13bf_11eb_bdde_52540065882brow5_col7\" class=\"data row5 col7\" >0.716399</td>\n",
        "                        <td id=\"T_5a8bb5b8_13bf_11eb_bdde_52540065882brow5_col8\" class=\"data row5 col8\" >0.602023</td>\n",
        "                        <td id=\"T_5a8bb5b8_13bf_11eb_bdde_52540065882brow5_col9\" class=\"data row5 col9\" >0.568841</td>\n",
        "                        <td id=\"T_5a8bb5b8_13bf_11eb_bdde_52540065882brow5_col10\" class=\"data row5 col10\" >0.651646</td>\n",
        "                        <td id=\"T_5a8bb5b8_13bf_11eb_bdde_52540065882brow5_col11\" class=\"data row5 col11\" >0.569943</td>\n",
        "                        <td id=\"T_5a8bb5b8_13bf_11eb_bdde_52540065882brow5_col12\" class=\"data row5 col12\" >0.436333</td>\n",
        "                        <td id=\"T_5a8bb5b8_13bf_11eb_bdde_52540065882brow5_col13\" class=\"data row5 col13\" >0.564342</td>\n",
        "                        <td id=\"T_5a8bb5b8_13bf_11eb_bdde_52540065882brow5_col14\" class=\"data row5 col14\" >0.284154</td>\n",
        "                        <td id=\"T_5a8bb5b8_13bf_11eb_bdde_52540065882brow5_col15\" class=\"data row5 col15\" >0.279400</td>\n",
        "                        <td id=\"T_5a8bb5b8_13bf_11eb_bdde_52540065882brow5_col16\" class=\"data row5 col16\" >0.814162</td>\n",
        "            </tr>\n",
        "            <tr>\n",
        "                        <th id=\"T_5a8bb5b8_13bf_11eb_bdde_52540065882blevel0_row6\" class=\"row_heading level0 row6\" >Workplace_closing</th>\n",
        "                        <td id=\"T_5a8bb5b8_13bf_11eb_bdde_52540065882brow6_col0\" class=\"data row6 col0\" >-0.197718</td>\n",
        "                        <td id=\"T_5a8bb5b8_13bf_11eb_bdde_52540065882brow6_col1\" class=\"data row6 col1\" >-0.037857</td>\n",
        "                        <td id=\"T_5a8bb5b8_13bf_11eb_bdde_52540065882brow6_col2\" class=\"data row6 col2\" >-0.100572</td>\n",
        "                        <td id=\"T_5a8bb5b8_13bf_11eb_bdde_52540065882brow6_col3\" class=\"data row6 col3\" >-0.128919</td>\n",
        "                        <td id=\"T_5a8bb5b8_13bf_11eb_bdde_52540065882brow6_col4\" class=\"data row6 col4\" >0.068120</td>\n",
        "                        <td id=\"T_5a8bb5b8_13bf_11eb_bdde_52540065882brow6_col5\" class=\"data row6 col5\" >0.730017</td>\n",
        "                        <td id=\"T_5a8bb5b8_13bf_11eb_bdde_52540065882brow6_col6\" class=\"data row6 col6\" >1.000000</td>\n",
        "                        <td id=\"T_5a8bb5b8_13bf_11eb_bdde_52540065882brow6_col7\" class=\"data row6 col7\" >0.623777</td>\n",
        "                        <td id=\"T_5a8bb5b8_13bf_11eb_bdde_52540065882brow6_col8\" class=\"data row6 col8\" >0.604497</td>\n",
        "                        <td id=\"T_5a8bb5b8_13bf_11eb_bdde_52540065882brow6_col9\" class=\"data row6 col9\" >0.459102</td>\n",
        "                        <td id=\"T_5a8bb5b8_13bf_11eb_bdde_52540065882brow6_col10\" class=\"data row6 col10\" >0.634750</td>\n",
        "                        <td id=\"T_5a8bb5b8_13bf_11eb_bdde_52540065882brow6_col11\" class=\"data row6 col11\" >0.443917</td>\n",
        "                        <td id=\"T_5a8bb5b8_13bf_11eb_bdde_52540065882brow6_col12\" class=\"data row6 col12\" >0.405949</td>\n",
        "                        <td id=\"T_5a8bb5b8_13bf_11eb_bdde_52540065882brow6_col13\" class=\"data row6 col13\" >0.692566</td>\n",
        "                        <td id=\"T_5a8bb5b8_13bf_11eb_bdde_52540065882brow6_col14\" class=\"data row6 col14\" >0.320725</td>\n",
        "                        <td id=\"T_5a8bb5b8_13bf_11eb_bdde_52540065882brow6_col15\" class=\"data row6 col15\" >0.368924</td>\n",
        "                        <td id=\"T_5a8bb5b8_13bf_11eb_bdde_52540065882brow6_col16\" class=\"data row6 col16\" >0.791708</td>\n",
        "            </tr>\n",
        "            <tr>\n",
        "                        <th id=\"T_5a8bb5b8_13bf_11eb_bdde_52540065882blevel0_row7\" class=\"row_heading level0 row7\" >Cancel_events</th>\n",
        "                        <td id=\"T_5a8bb5b8_13bf_11eb_bdde_52540065882brow7_col0\" class=\"data row7 col0\" >-0.097968</td>\n",
        "                        <td id=\"T_5a8bb5b8_13bf_11eb_bdde_52540065882brow7_col1\" class=\"data row7 col1\" >-0.188876</td>\n",
        "                        <td id=\"T_5a8bb5b8_13bf_11eb_bdde_52540065882brow7_col2\" class=\"data row7 col2\" >-0.121642</td>\n",
        "                        <td id=\"T_5a8bb5b8_13bf_11eb_bdde_52540065882brow7_col3\" class=\"data row7 col3\" >-0.079111</td>\n",
        "                        <td id=\"T_5a8bb5b8_13bf_11eb_bdde_52540065882brow7_col4\" class=\"data row7 col4\" >0.233953</td>\n",
        "                        <td id=\"T_5a8bb5b8_13bf_11eb_bdde_52540065882brow7_col5\" class=\"data row7 col5\" >0.716399</td>\n",
        "                        <td id=\"T_5a8bb5b8_13bf_11eb_bdde_52540065882brow7_col6\" class=\"data row7 col6\" >0.623777</td>\n",
        "                        <td id=\"T_5a8bb5b8_13bf_11eb_bdde_52540065882brow7_col7\" class=\"data row7 col7\" >1.000000</td>\n",
        "                        <td id=\"T_5a8bb5b8_13bf_11eb_bdde_52540065882brow7_col8\" class=\"data row7 col8\" >0.697431</td>\n",
        "                        <td id=\"T_5a8bb5b8_13bf_11eb_bdde_52540065882brow7_col9\" class=\"data row7 col9\" >0.553800</td>\n",
        "                        <td id=\"T_5a8bb5b8_13bf_11eb_bdde_52540065882brow7_col10\" class=\"data row7 col10\" >0.535722</td>\n",
        "                        <td id=\"T_5a8bb5b8_13bf_11eb_bdde_52540065882brow7_col11\" class=\"data row7 col11\" >0.574365</td>\n",
        "                        <td id=\"T_5a8bb5b8_13bf_11eb_bdde_52540065882brow7_col12\" class=\"data row7 col12\" >0.668294</td>\n",
        "                        <td id=\"T_5a8bb5b8_13bf_11eb_bdde_52540065882brow7_col13\" class=\"data row7 col13\" >0.635447</td>\n",
        "                        <td id=\"T_5a8bb5b8_13bf_11eb_bdde_52540065882brow7_col14\" class=\"data row7 col14\" >0.260428</td>\n",
        "                        <td id=\"T_5a8bb5b8_13bf_11eb_bdde_52540065882brow7_col15\" class=\"data row7 col15\" >0.302244</td>\n",
        "                        <td id=\"T_5a8bb5b8_13bf_11eb_bdde_52540065882brow7_col16\" class=\"data row7 col16\" >0.811915</td>\n",
        "            </tr>\n",
        "            <tr>\n",
        "                        <th id=\"T_5a8bb5b8_13bf_11eb_bdde_52540065882blevel0_row8\" class=\"row_heading level0 row8\" >Gatherings_restrictions</th>\n",
        "                        <td id=\"T_5a8bb5b8_13bf_11eb_bdde_52540065882brow8_col0\" class=\"data row8 col0\" >-0.121087</td>\n",
        "                        <td id=\"T_5a8bb5b8_13bf_11eb_bdde_52540065882brow8_col1\" class=\"data row8 col1\" >-0.108219</td>\n",
        "                        <td id=\"T_5a8bb5b8_13bf_11eb_bdde_52540065882brow8_col2\" class=\"data row8 col2\" >-0.094680</td>\n",
        "                        <td id=\"T_5a8bb5b8_13bf_11eb_bdde_52540065882brow8_col3\" class=\"data row8 col3\" >-0.034607</td>\n",
        "                        <td id=\"T_5a8bb5b8_13bf_11eb_bdde_52540065882brow8_col4\" class=\"data row8 col4\" >0.120746</td>\n",
        "                        <td id=\"T_5a8bb5b8_13bf_11eb_bdde_52540065882brow8_col5\" class=\"data row8 col5\" >0.602023</td>\n",
        "                        <td id=\"T_5a8bb5b8_13bf_11eb_bdde_52540065882brow8_col6\" class=\"data row8 col6\" >0.604497</td>\n",
        "                        <td id=\"T_5a8bb5b8_13bf_11eb_bdde_52540065882brow8_col7\" class=\"data row8 col7\" >0.697431</td>\n",
        "                        <td id=\"T_5a8bb5b8_13bf_11eb_bdde_52540065882brow8_col8\" class=\"data row8 col8\" >1.000000</td>\n",
        "                        <td id=\"T_5a8bb5b8_13bf_11eb_bdde_52540065882brow8_col9\" class=\"data row8 col9\" >0.718865</td>\n",
        "                        <td id=\"T_5a8bb5b8_13bf_11eb_bdde_52540065882brow8_col10\" class=\"data row8 col10\" >0.645986</td>\n",
        "                        <td id=\"T_5a8bb5b8_13bf_11eb_bdde_52540065882brow8_col11\" class=\"data row8 col11\" >0.687682</td>\n",
        "                        <td id=\"T_5a8bb5b8_13bf_11eb_bdde_52540065882brow8_col12\" class=\"data row8 col12\" >0.631507</td>\n",
        "                        <td id=\"T_5a8bb5b8_13bf_11eb_bdde_52540065882brow8_col13\" class=\"data row8 col13\" >0.569573</td>\n",
        "                        <td id=\"T_5a8bb5b8_13bf_11eb_bdde_52540065882brow8_col14\" class=\"data row8 col14\" >0.204892</td>\n",
        "                        <td id=\"T_5a8bb5b8_13bf_11eb_bdde_52540065882brow8_col15\" class=\"data row8 col15\" >0.155271</td>\n",
        "                        <td id=\"T_5a8bb5b8_13bf_11eb_bdde_52540065882brow8_col16\" class=\"data row8 col16\" >0.851647</td>\n",
        "            </tr>\n",
        "            <tr>\n",
        "                        <th id=\"T_5a8bb5b8_13bf_11eb_bdde_52540065882blevel0_row9\" class=\"row_heading level0 row9\" >Transport_closing</th>\n",
        "                        <td id=\"T_5a8bb5b8_13bf_11eb_bdde_52540065882brow9_col0\" class=\"data row9 col0\" >-0.097585</td>\n",
        "                        <td id=\"T_5a8bb5b8_13bf_11eb_bdde_52540065882brow9_col1\" class=\"data row9 col1\" >-0.127314</td>\n",
        "                        <td id=\"T_5a8bb5b8_13bf_11eb_bdde_52540065882brow9_col2\" class=\"data row9 col2\" >-0.089759</td>\n",
        "                        <td id=\"T_5a8bb5b8_13bf_11eb_bdde_52540065882brow9_col3\" class=\"data row9 col3\" >-0.037409</td>\n",
        "                        <td id=\"T_5a8bb5b8_13bf_11eb_bdde_52540065882brow9_col4\" class=\"data row9 col4\" >0.205529</td>\n",
        "                        <td id=\"T_5a8bb5b8_13bf_11eb_bdde_52540065882brow9_col5\" class=\"data row9 col5\" >0.568841</td>\n",
        "                        <td id=\"T_5a8bb5b8_13bf_11eb_bdde_52540065882brow9_col6\" class=\"data row9 col6\" >0.459102</td>\n",
        "                        <td id=\"T_5a8bb5b8_13bf_11eb_bdde_52540065882brow9_col7\" class=\"data row9 col7\" >0.553800</td>\n",
        "                        <td id=\"T_5a8bb5b8_13bf_11eb_bdde_52540065882brow9_col8\" class=\"data row9 col8\" >0.718865</td>\n",
        "                        <td id=\"T_5a8bb5b8_13bf_11eb_bdde_52540065882brow9_col9\" class=\"data row9 col9\" >1.000000</td>\n",
        "                        <td id=\"T_5a8bb5b8_13bf_11eb_bdde_52540065882brow9_col10\" class=\"data row9 col10\" >0.591716</td>\n",
        "                        <td id=\"T_5a8bb5b8_13bf_11eb_bdde_52540065882brow9_col11\" class=\"data row9 col11\" >0.647300</td>\n",
        "                        <td id=\"T_5a8bb5b8_13bf_11eb_bdde_52540065882brow9_col12\" class=\"data row9 col12\" >0.575087</td>\n",
        "                        <td id=\"T_5a8bb5b8_13bf_11eb_bdde_52540065882brow9_col13\" class=\"data row9 col13\" >0.302110</td>\n",
        "                        <td id=\"T_5a8bb5b8_13bf_11eb_bdde_52540065882brow9_col14\" class=\"data row9 col14\" >-0.066019</td>\n",
        "                        <td id=\"T_5a8bb5b8_13bf_11eb_bdde_52540065882brow9_col15\" class=\"data row9 col15\" >-0.049933</td>\n",
        "                        <td id=\"T_5a8bb5b8_13bf_11eb_bdde_52540065882brow9_col16\" class=\"data row9 col16\" >0.767454</td>\n",
        "            </tr>\n",
        "            <tr>\n",
        "                        <th id=\"T_5a8bb5b8_13bf_11eb_bdde_52540065882blevel0_row10\" class=\"row_heading level0 row10\" >Stay_home_restrictions</th>\n",
        "                        <td id=\"T_5a8bb5b8_13bf_11eb_bdde_52540065882brow10_col0\" class=\"data row10 col0\" >-0.156031</td>\n",
        "                        <td id=\"T_5a8bb5b8_13bf_11eb_bdde_52540065882brow10_col1\" class=\"data row10 col1\" >0.207170</td>\n",
        "                        <td id=\"T_5a8bb5b8_13bf_11eb_bdde_52540065882brow10_col2\" class=\"data row10 col2\" >0.222753</td>\n",
        "                        <td id=\"T_5a8bb5b8_13bf_11eb_bdde_52540065882brow10_col3\" class=\"data row10 col3\" >0.200101</td>\n",
        "                        <td id=\"T_5a8bb5b8_13bf_11eb_bdde_52540065882brow10_col4\" class=\"data row10 col4\" >0.202412</td>\n",
        "                        <td id=\"T_5a8bb5b8_13bf_11eb_bdde_52540065882brow10_col5\" class=\"data row10 col5\" >0.651646</td>\n",
        "                        <td id=\"T_5a8bb5b8_13bf_11eb_bdde_52540065882brow10_col6\" class=\"data row10 col6\" >0.634750</td>\n",
        "                        <td id=\"T_5a8bb5b8_13bf_11eb_bdde_52540065882brow10_col7\" class=\"data row10 col7\" >0.535722</td>\n",
        "                        <td id=\"T_5a8bb5b8_13bf_11eb_bdde_52540065882brow10_col8\" class=\"data row10 col8\" >0.645986</td>\n",
        "                        <td id=\"T_5a8bb5b8_13bf_11eb_bdde_52540065882brow10_col9\" class=\"data row10 col9\" >0.591716</td>\n",
        "                        <td id=\"T_5a8bb5b8_13bf_11eb_bdde_52540065882brow10_col10\" class=\"data row10 col10\" >1.000000</td>\n",
        "                        <td id=\"T_5a8bb5b8_13bf_11eb_bdde_52540065882brow10_col11\" class=\"data row10 col11\" >0.745326</td>\n",
        "                        <td id=\"T_5a8bb5b8_13bf_11eb_bdde_52540065882brow10_col12\" class=\"data row10 col12\" >0.498665</td>\n",
        "                        <td id=\"T_5a8bb5b8_13bf_11eb_bdde_52540065882brow10_col13\" class=\"data row10 col13\" >0.339326</td>\n",
        "                        <td id=\"T_5a8bb5b8_13bf_11eb_bdde_52540065882brow10_col14\" class=\"data row10 col14\" >0.165011</td>\n",
        "                        <td id=\"T_5a8bb5b8_13bf_11eb_bdde_52540065882brow10_col15\" class=\"data row10 col15\" >0.247783</td>\n",
        "                        <td id=\"T_5a8bb5b8_13bf_11eb_bdde_52540065882brow10_col16\" class=\"data row10 col16\" >0.798867</td>\n",
        "            </tr>\n",
        "            <tr>\n",
        "                        <th id=\"T_5a8bb5b8_13bf_11eb_bdde_52540065882blevel0_row11\" class=\"row_heading level0 row11\" >Internal_movement_restrictions</th>\n",
        "                        <td id=\"T_5a8bb5b8_13bf_11eb_bdde_52540065882brow11_col0\" class=\"data row11 col0\" >-0.219589</td>\n",
        "                        <td id=\"T_5a8bb5b8_13bf_11eb_bdde_52540065882brow11_col1\" class=\"data row11 col1\" >0.068791</td>\n",
        "                        <td id=\"T_5a8bb5b8_13bf_11eb_bdde_52540065882brow11_col2\" class=\"data row11 col2\" >0.156126</td>\n",
        "                        <td id=\"T_5a8bb5b8_13bf_11eb_bdde_52540065882brow11_col3\" class=\"data row11 col3\" >0.176888</td>\n",
        "                        <td id=\"T_5a8bb5b8_13bf_11eb_bdde_52540065882brow11_col4\" class=\"data row11 col4\" >0.290148</td>\n",
        "                        <td id=\"T_5a8bb5b8_13bf_11eb_bdde_52540065882brow11_col5\" class=\"data row11 col5\" >0.569943</td>\n",
        "                        <td id=\"T_5a8bb5b8_13bf_11eb_bdde_52540065882brow11_col6\" class=\"data row11 col6\" >0.443917</td>\n",
        "                        <td id=\"T_5a8bb5b8_13bf_11eb_bdde_52540065882brow11_col7\" class=\"data row11 col7\" >0.574365</td>\n",
        "                        <td id=\"T_5a8bb5b8_13bf_11eb_bdde_52540065882brow11_col8\" class=\"data row11 col8\" >0.687682</td>\n",
        "                        <td id=\"T_5a8bb5b8_13bf_11eb_bdde_52540065882brow11_col9\" class=\"data row11 col9\" >0.647300</td>\n",
        "                        <td id=\"T_5a8bb5b8_13bf_11eb_bdde_52540065882brow11_col10\" class=\"data row11 col10\" >0.745326</td>\n",
        "                        <td id=\"T_5a8bb5b8_13bf_11eb_bdde_52540065882brow11_col11\" class=\"data row11 col11\" >1.000000</td>\n",
        "                        <td id=\"T_5a8bb5b8_13bf_11eb_bdde_52540065882brow11_col12\" class=\"data row11 col12\" >0.432675</td>\n",
        "                        <td id=\"T_5a8bb5b8_13bf_11eb_bdde_52540065882brow11_col13\" class=\"data row11 col13\" >0.201734</td>\n",
        "                        <td id=\"T_5a8bb5b8_13bf_11eb_bdde_52540065882brow11_col14\" class=\"data row11 col14\" >0.186080</td>\n",
        "                        <td id=\"T_5a8bb5b8_13bf_11eb_bdde_52540065882brow11_col15\" class=\"data row11 col15\" >0.091280</td>\n",
        "                        <td id=\"T_5a8bb5b8_13bf_11eb_bdde_52540065882brow11_col16\" class=\"data row11 col16\" >0.710244</td>\n",
        "            </tr>\n",
        "            <tr>\n",
        "                        <th id=\"T_5a8bb5b8_13bf_11eb_bdde_52540065882blevel0_row12\" class=\"row_heading level0 row12\" >International_movement_restrictions</th>\n",
        "                        <td id=\"T_5a8bb5b8_13bf_11eb_bdde_52540065882brow12_col0\" class=\"data row12 col0\" >-0.064236</td>\n",
        "                        <td id=\"T_5a8bb5b8_13bf_11eb_bdde_52540065882brow12_col1\" class=\"data row12 col1\" >0.070431</td>\n",
        "                        <td id=\"T_5a8bb5b8_13bf_11eb_bdde_52540065882brow12_col2\" class=\"data row12 col2\" >0.156515</td>\n",
        "                        <td id=\"T_5a8bb5b8_13bf_11eb_bdde_52540065882brow12_col3\" class=\"data row12 col3\" >0.089181</td>\n",
        "                        <td id=\"T_5a8bb5b8_13bf_11eb_bdde_52540065882brow12_col4\" class=\"data row12 col4\" >0.046208</td>\n",
        "                        <td id=\"T_5a8bb5b8_13bf_11eb_bdde_52540065882brow12_col5\" class=\"data row12 col5\" >0.436333</td>\n",
        "                        <td id=\"T_5a8bb5b8_13bf_11eb_bdde_52540065882brow12_col6\" class=\"data row12 col6\" >0.405949</td>\n",
        "                        <td id=\"T_5a8bb5b8_13bf_11eb_bdde_52540065882brow12_col7\" class=\"data row12 col7\" >0.668294</td>\n",
        "                        <td id=\"T_5a8bb5b8_13bf_11eb_bdde_52540065882brow12_col8\" class=\"data row12 col8\" >0.631507</td>\n",
        "                        <td id=\"T_5a8bb5b8_13bf_11eb_bdde_52540065882brow12_col9\" class=\"data row12 col9\" >0.575087</td>\n",
        "                        <td id=\"T_5a8bb5b8_13bf_11eb_bdde_52540065882brow12_col10\" class=\"data row12 col10\" >0.498665</td>\n",
        "                        <td id=\"T_5a8bb5b8_13bf_11eb_bdde_52540065882brow12_col11\" class=\"data row12 col11\" >0.432675</td>\n",
        "                        <td id=\"T_5a8bb5b8_13bf_11eb_bdde_52540065882brow12_col12\" class=\"data row12 col12\" >1.000000</td>\n",
        "                        <td id=\"T_5a8bb5b8_13bf_11eb_bdde_52540065882brow12_col13\" class=\"data row12 col13\" >0.455269</td>\n",
        "                        <td id=\"T_5a8bb5b8_13bf_11eb_bdde_52540065882brow12_col14\" class=\"data row12 col14\" >0.099304</td>\n",
        "                        <td id=\"T_5a8bb5b8_13bf_11eb_bdde_52540065882brow12_col15\" class=\"data row12 col15\" >0.184797</td>\n",
        "                        <td id=\"T_5a8bb5b8_13bf_11eb_bdde_52540065882brow12_col16\" class=\"data row12 col16\" >0.704248</td>\n",
        "            </tr>\n",
        "            <tr>\n",
        "                        <th id=\"T_5a8bb5b8_13bf_11eb_bdde_52540065882blevel0_row13\" class=\"row_heading level0 row13\" >Information_campaigns</th>\n",
        "                        <td id=\"T_5a8bb5b8_13bf_11eb_bdde_52540065882brow13_col0\" class=\"data row13 col0\" >-0.177313</td>\n",
        "                        <td id=\"T_5a8bb5b8_13bf_11eb_bdde_52540065882brow13_col1\" class=\"data row13 col1\" >-0.275899</td>\n",
        "                        <td id=\"T_5a8bb5b8_13bf_11eb_bdde_52540065882brow13_col2\" class=\"data row13 col2\" >-0.342411</td>\n",
        "                        <td id=\"T_5a8bb5b8_13bf_11eb_bdde_52540065882brow13_col3\" class=\"data row13 col3\" >-0.408990</td>\n",
        "                        <td id=\"T_5a8bb5b8_13bf_11eb_bdde_52540065882brow13_col4\" class=\"data row13 col4\" >0.001828</td>\n",
        "                        <td id=\"T_5a8bb5b8_13bf_11eb_bdde_52540065882brow13_col5\" class=\"data row13 col5\" >0.564342</td>\n",
        "                        <td id=\"T_5a8bb5b8_13bf_11eb_bdde_52540065882brow13_col6\" class=\"data row13 col6\" >0.692566</td>\n",
        "                        <td id=\"T_5a8bb5b8_13bf_11eb_bdde_52540065882brow13_col7\" class=\"data row13 col7\" >0.635447</td>\n",
        "                        <td id=\"T_5a8bb5b8_13bf_11eb_bdde_52540065882brow13_col8\" class=\"data row13 col8\" >0.569573</td>\n",
        "                        <td id=\"T_5a8bb5b8_13bf_11eb_bdde_52540065882brow13_col9\" class=\"data row13 col9\" >0.302110</td>\n",
        "                        <td id=\"T_5a8bb5b8_13bf_11eb_bdde_52540065882brow13_col10\" class=\"data row13 col10\" >0.339326</td>\n",
        "                        <td id=\"T_5a8bb5b8_13bf_11eb_bdde_52540065882brow13_col11\" class=\"data row13 col11\" >0.201734</td>\n",
        "                        <td id=\"T_5a8bb5b8_13bf_11eb_bdde_52540065882brow13_col12\" class=\"data row13 col12\" >0.455269</td>\n",
        "                        <td id=\"T_5a8bb5b8_13bf_11eb_bdde_52540065882brow13_col13\" class=\"data row13 col13\" >1.000000</td>\n",
        "                        <td id=\"T_5a8bb5b8_13bf_11eb_bdde_52540065882brow13_col14\" class=\"data row13 col14\" >0.519725</td>\n",
        "                        <td id=\"T_5a8bb5b8_13bf_11eb_bdde_52540065882brow13_col15\" class=\"data row13 col15\" >0.553096</td>\n",
        "                        <td id=\"T_5a8bb5b8_13bf_11eb_bdde_52540065882brow13_col16\" class=\"data row13 col16\" >0.671868</td>\n",
        "            </tr>\n",
        "            <tr>\n",
        "                        <th id=\"T_5a8bb5b8_13bf_11eb_bdde_52540065882blevel0_row14\" class=\"row_heading level0 row14\" >Testing_policy</th>\n",
        "                        <td id=\"T_5a8bb5b8_13bf_11eb_bdde_52540065882brow14_col0\" class=\"data row14 col0\" >-0.328683</td>\n",
        "                        <td id=\"T_5a8bb5b8_13bf_11eb_bdde_52540065882brow14_col1\" class=\"data row14 col1\" >-0.179554</td>\n",
        "                        <td id=\"T_5a8bb5b8_13bf_11eb_bdde_52540065882brow14_col2\" class=\"data row14 col2\" >-0.177730</td>\n",
        "                        <td id=\"T_5a8bb5b8_13bf_11eb_bdde_52540065882brow14_col3\" class=\"data row14 col3\" >-0.419213</td>\n",
        "                        <td id=\"T_5a8bb5b8_13bf_11eb_bdde_52540065882brow14_col4\" class=\"data row14 col4\" >-0.068635</td>\n",
        "                        <td id=\"T_5a8bb5b8_13bf_11eb_bdde_52540065882brow14_col5\" class=\"data row14 col5\" >0.284154</td>\n",
        "                        <td id=\"T_5a8bb5b8_13bf_11eb_bdde_52540065882brow14_col6\" class=\"data row14 col6\" >0.320725</td>\n",
        "                        <td id=\"T_5a8bb5b8_13bf_11eb_bdde_52540065882brow14_col7\" class=\"data row14 col7\" >0.260428</td>\n",
        "                        <td id=\"T_5a8bb5b8_13bf_11eb_bdde_52540065882brow14_col8\" class=\"data row14 col8\" >0.204892</td>\n",
        "                        <td id=\"T_5a8bb5b8_13bf_11eb_bdde_52540065882brow14_col9\" class=\"data row14 col9\" >-0.066019</td>\n",
        "                        <td id=\"T_5a8bb5b8_13bf_11eb_bdde_52540065882brow14_col10\" class=\"data row14 col10\" >0.165011</td>\n",
        "                        <td id=\"T_5a8bb5b8_13bf_11eb_bdde_52540065882brow14_col11\" class=\"data row14 col11\" >0.186080</td>\n",
        "                        <td id=\"T_5a8bb5b8_13bf_11eb_bdde_52540065882brow14_col12\" class=\"data row14 col12\" >0.099304</td>\n",
        "                        <td id=\"T_5a8bb5b8_13bf_11eb_bdde_52540065882brow14_col13\" class=\"data row14 col13\" >0.519725</td>\n",
        "                        <td id=\"T_5a8bb5b8_13bf_11eb_bdde_52540065882brow14_col14\" class=\"data row14 col14\" >1.000000</td>\n",
        "                        <td id=\"T_5a8bb5b8_13bf_11eb_bdde_52540065882brow14_col15\" class=\"data row14 col15\" >0.530440</td>\n",
        "                        <td id=\"T_5a8bb5b8_13bf_11eb_bdde_52540065882brow14_col16\" class=\"data row14 col16\" >0.177094</td>\n",
        "            </tr>\n",
        "            <tr>\n",
        "                        <th id=\"T_5a8bb5b8_13bf_11eb_bdde_52540065882blevel0_row15\" class=\"row_heading level0 row15\" >Contact_tracing</th>\n",
        "                        <td id=\"T_5a8bb5b8_13bf_11eb_bdde_52540065882brow15_col0\" class=\"data row15 col0\" >-0.283433</td>\n",
        "                        <td id=\"T_5a8bb5b8_13bf_11eb_bdde_52540065882brow15_col1\" class=\"data row15 col1\" >0.054788</td>\n",
        "                        <td id=\"T_5a8bb5b8_13bf_11eb_bdde_52540065882brow15_col2\" class=\"data row15 col2\" >-0.027453</td>\n",
        "                        <td id=\"T_5a8bb5b8_13bf_11eb_bdde_52540065882brow15_col3\" class=\"data row15 col3\" >-0.310800</td>\n",
        "                        <td id=\"T_5a8bb5b8_13bf_11eb_bdde_52540065882brow15_col4\" class=\"data row15 col4\" >0.066349</td>\n",
        "                        <td id=\"T_5a8bb5b8_13bf_11eb_bdde_52540065882brow15_col5\" class=\"data row15 col5\" >0.279400</td>\n",
        "                        <td id=\"T_5a8bb5b8_13bf_11eb_bdde_52540065882brow15_col6\" class=\"data row15 col6\" >0.368924</td>\n",
        "                        <td id=\"T_5a8bb5b8_13bf_11eb_bdde_52540065882brow15_col7\" class=\"data row15 col7\" >0.302244</td>\n",
        "                        <td id=\"T_5a8bb5b8_13bf_11eb_bdde_52540065882brow15_col8\" class=\"data row15 col8\" >0.155271</td>\n",
        "                        <td id=\"T_5a8bb5b8_13bf_11eb_bdde_52540065882brow15_col9\" class=\"data row15 col9\" >-0.049933</td>\n",
        "                        <td id=\"T_5a8bb5b8_13bf_11eb_bdde_52540065882brow15_col10\" class=\"data row15 col10\" >0.247783</td>\n",
        "                        <td id=\"T_5a8bb5b8_13bf_11eb_bdde_52540065882brow15_col11\" class=\"data row15 col11\" >0.091280</td>\n",
        "                        <td id=\"T_5a8bb5b8_13bf_11eb_bdde_52540065882brow15_col12\" class=\"data row15 col12\" >0.184797</td>\n",
        "                        <td id=\"T_5a8bb5b8_13bf_11eb_bdde_52540065882brow15_col13\" class=\"data row15 col13\" >0.553096</td>\n",
        "                        <td id=\"T_5a8bb5b8_13bf_11eb_bdde_52540065882brow15_col14\" class=\"data row15 col14\" >0.530440</td>\n",
        "                        <td id=\"T_5a8bb5b8_13bf_11eb_bdde_52540065882brow15_col15\" class=\"data row15 col15\" >1.000000</td>\n",
        "                        <td id=\"T_5a8bb5b8_13bf_11eb_bdde_52540065882brow15_col16\" class=\"data row15 col16\" >0.290882</td>\n",
        "            </tr>\n",
        "            <tr>\n",
        "                        <th id=\"T_5a8bb5b8_13bf_11eb_bdde_52540065882blevel0_row16\" class=\"row_heading level0 row16\" >Stringency_index</th>\n",
        "                        <td id=\"T_5a8bb5b8_13bf_11eb_bdde_52540065882brow16_col0\" class=\"data row16 col0\" >-0.165183</td>\n",
        "                        <td id=\"T_5a8bb5b8_13bf_11eb_bdde_52540065882brow16_col1\" class=\"data row16 col1\" >-0.040768</td>\n",
        "                        <td id=\"T_5a8bb5b8_13bf_11eb_bdde_52540065882brow16_col2\" class=\"data row16 col2\" >-0.046897</td>\n",
        "                        <td id=\"T_5a8bb5b8_13bf_11eb_bdde_52540065882brow16_col3\" class=\"data row16 col3\" >-0.013284</td>\n",
        "                        <td id=\"T_5a8bb5b8_13bf_11eb_bdde_52540065882brow16_col4\" class=\"data row16 col4\" >0.231885</td>\n",
        "                        <td id=\"T_5a8bb5b8_13bf_11eb_bdde_52540065882brow16_col5\" class=\"data row16 col5\" >0.814162</td>\n",
        "                        <td id=\"T_5a8bb5b8_13bf_11eb_bdde_52540065882brow16_col6\" class=\"data row16 col6\" >0.791708</td>\n",
        "                        <td id=\"T_5a8bb5b8_13bf_11eb_bdde_52540065882brow16_col7\" class=\"data row16 col7\" >0.811915</td>\n",
        "                        <td id=\"T_5a8bb5b8_13bf_11eb_bdde_52540065882brow16_col8\" class=\"data row16 col8\" >0.851647</td>\n",
        "                        <td id=\"T_5a8bb5b8_13bf_11eb_bdde_52540065882brow16_col9\" class=\"data row16 col9\" >0.767454</td>\n",
        "                        <td id=\"T_5a8bb5b8_13bf_11eb_bdde_52540065882brow16_col10\" class=\"data row16 col10\" >0.798867</td>\n",
        "                        <td id=\"T_5a8bb5b8_13bf_11eb_bdde_52540065882brow16_col11\" class=\"data row16 col11\" >0.710244</td>\n",
        "                        <td id=\"T_5a8bb5b8_13bf_11eb_bdde_52540065882brow16_col12\" class=\"data row16 col12\" >0.704248</td>\n",
        "                        <td id=\"T_5a8bb5b8_13bf_11eb_bdde_52540065882brow16_col13\" class=\"data row16 col13\" >0.671868</td>\n",
        "                        <td id=\"T_5a8bb5b8_13bf_11eb_bdde_52540065882brow16_col14\" class=\"data row16 col14\" >0.177094</td>\n",
        "                        <td id=\"T_5a8bb5b8_13bf_11eb_bdde_52540065882brow16_col15\" class=\"data row16 col15\" >0.290882</td>\n",
        "                        <td id=\"T_5a8bb5b8_13bf_11eb_bdde_52540065882brow16_col16\" class=\"data row16 col16\" >1.000000</td>\n",
        "            </tr>\n",
        "    </tbody></table>"
       ],
       "output_type": "pyout",
       "prompt_number": 21,
       "text": [
        "<pandas.io.formats.style.Styler at 0x7faa6d0ce250>"
       ]
      }
     ],
     "prompt_number": 21
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "# Scatter plot of Stringency index and Rt\n",
      "df = track_df.copy()\n",
      "sns.scatterplot(data=df, x=\"Stringency_index\", y=\"Rt\", hue=\"Country\", legend=\"brief\", marker=\"+\")\n",
      "bbox_to_anchor=(1.02, 0)\n",
      "bbox_loc=\"lower left\"\n",
      "plt.legend(bbox_to_anchor=bbox_to_anchor, loc=bbox_loc, borderaxespad=0)\n",
      "plt.title(\"Relationship of Stringency index and reproduction number\")\n",
      "plt.ylabel(\"Reproduction number\")\n",
      "plt.xlabel(\"Stringency index\")\n",
      "plt.show()"
     ],
     "language": "python",
     "metadata": {},
     "outputs": [
      {
       "output_type": "display_data",
       "png": "\n",
       "text": [
        "<Figure size 432x288 with 1 Axes>"
       ]
      }
     ],
     "prompt_number": 22
    }
   ],
   "metadata": {}
  }
 ]
}
