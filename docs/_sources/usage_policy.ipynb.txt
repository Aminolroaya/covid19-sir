{
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3.8.2 64-bit ('.venv': venv)",
   "name": "python_defaultSpec_1597669925034"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.8.2-final"
  },
  "name": ""
 },
 "nbformat": 3,
 "nbformat_minor": 0,
 "worksheets": [
  {
   "cells": [
    {
     "cell_type": "markdown",
     "metadata": {},
     "source": [
      "# Usage (details: policy measures)\n",
      "Here, we will analyse the relationship of policy measures and parameter values of SIR-derived ODE models. Policy measures are tracked by [Oxford Covid-19 Government Response Tracker (OxCGRT)](https://github.com/OxCGRT/covid-policy-tracker)."
     ]
    },
    {
     "cell_type": "heading",
     "level": 2,
     "metadata": {},
     "source": [
      "Preparation"
     ]
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "# Standard users\n",
      "# !pip install covsirphy\n",
      "# Developers (Note: this notebook is in example directory)\n",
      "import os\n",
      "os.chdir(\"../\")"
     ],
     "language": "python",
     "metadata": {},
     "outputs": [],
     "prompt_number": 1
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "from pprint import pprint"
     ],
     "language": "python",
     "metadata": {},
     "outputs": [],
     "prompt_number": 2
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "import covsirphy as cs\n",
      "cs.__version__"
     ],
     "language": "python",
     "metadata": {},
     "outputs": [
      {
       "output_type": "pyout",
       "prompt_number": 3,
       "text": [
        "'2.10.0'"
       ]
      }
     ],
     "prompt_number": 3
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "# Standard users and developers\n",
      "data_loader = cs.DataLoader(\"input\")\n",
      "# The number of cases (JHU style)\n",
      "jhu_data = data_loader.jhu(verbose=False)\n",
      "# Population in each country\n",
      "population_data = data_loader.population(verbose=False)\n",
      "# Government Response Tracker (OxCGRT)\n",
      "oxcgrt_data = data_loader.oxcgrt(verbose=False)\n",
      "# Description/citation\n",
      "print(oxcgrt_data.citation)"
     ],
     "language": "python",
     "metadata": {
      "tags": []
     },
     "outputs": [
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "(Secondary source) Guidotti, E., Ardia, D., (2020), \"COVID-19 Data Hub\", Journal of Open Source Software 5(51):2376, doi: 10.21105/joss.02376.\n"
       ]
      }
     ],
     "prompt_number": 4
    },
    {
     "cell_type": "markdown",
     "metadata": {},
     "source": [
      "## Class for policy measure analysis\n",
      "We will `PolicyMeasures` class to find relationship of policy measures and parameter values of SIR-derived ODE models."
     ]
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "# Create analyser with tau value 360 [min] (can be changed)\n",
      "analyser = cs.PolicyMeasures(jhu_data, population_data, oxcgrt_data, tau=360)\n",
      "# The number of registerd countries\n",
      "len(analyser.countries)"
     ],
     "language": "python",
     "metadata": {
      "tags": []
     },
     "outputs": [
      {
       "output_type": "pyout",
       "prompt_number": 5,
       "text": [
        "184"
       ]
      }
     ],
     "prompt_number": 5
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "# We can get Scenario instance for detailed scenario analysis\n",
      "type(analyser.scenario(\"Japan\"))"
     ],
     "language": "python",
     "metadata": {},
     "outputs": [
      {
       "output_type": "pyout",
       "prompt_number": 6,
       "text": [
        "covsirphy.analysis.scenario.Scenario"
       ]
      }
     ],
     "prompt_number": 6
    },
    {
     "cell_type": "markdown",
     "metadata": {},
     "source": [
      "## Set phases with S-R trend analysis\n",
      "We will perform S-R trend analysis to set phases in all countries. Countries which do not have **14th phases** will be un-registered for the next analysis. This number will be adjusted for your analysis."
     ]
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "# Show the number of phases of all countries\n",
      "analyser.trend()\n",
      "pprint(analyser.phase_len(), compact=True)"
     ],
     "language": "python",
     "metadata": {},
     "outputs": [
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "{4: ['Holy See'],\n",
        " 5: ['Liechtenstein', 'Tanzania', 'Fiji'],\n",
        " 6: ['Grenada', 'Slovenia', 'Brunei', 'Papua New Guinea'],\n",
        " 7: ['Jordan', 'Lithuania', 'Poland', 'Myanmar', 'Andorra',\n",
        "     'Central African Republic', 'Ireland', 'Saint Lucia', 'Slovakia',\n",
        "     'Sri Lanka', 'Monaco', 'Czech Republic', 'Cambodia', 'Croatia', 'Botswana',\n",
        "     'Switzerland', 'Tunisia', 'Antigua and Barbuda', 'Georgia', 'Angola'],\n",
        " 8: ['Mongolia', 'Yemen', 'Malaysia', 'Nicaragua', 'Iceland',\n",
        "     'Equatorial Guinea', 'Saint Vincent and the Grenadines', 'Spain',\n",
        "     'Cameroon', 'Guinea-Bissau', 'Cyprus', 'Eritrea', 'Seychelles', 'Dominica',\n",
        "     'Madagascar', 'Hungary', 'Sao Tome and Principe'],\n",
        " 9: ['Kazakhstan', 'Romania', 'Rwanda', 'Zambia', 'Portugal', 'South Sudan',\n",
        "     'Tajikistan', 'Zimbabwe', 'Nepal', 'Israel', 'Jamaica', 'Gambia', 'Malta',\n",
        "     'Burkina Faso', 'Burundi', 'Trinidad and Tobago', 'Djibouti', 'Malawi'],\n",
        " 10: ['Austria', 'Kyrgyzstan', 'Bermuda', 'Guyana', 'Benin', 'Cuba', 'Niger',\n",
        "      'Chad', 'Comoros', 'Lebanon', 'Bahamas', 'Belize', 'Luxembourg',\n",
        "      'Montenegro', 'Namibia', 'New Zealand', 'Chile', 'Ecuador', 'Bulgaria',\n",
        "      'Uganda', 'Libya', 'China', 'Mozambique', 'Ghana', 'Lesotho', 'Senegal',\n",
        "      'Greece', 'Venezuela', 'Barbados', 'Uruguay', 'Bhutan', 'Australia'],\n",
        " 11: ['Paraguay', 'Syria', 'Ukraine', 'Afghanistan', 'Suriname', 'Guatemala',\n",
        "      'South Africa', 'Denmark', 'Vietnam', 'Ethiopia', 'Mauritius', 'Mali',\n",
        "      'Thailand', 'Kenya', 'Morocco', 'Mauritania', 'Sierra Leone', 'Sudan',\n",
        "      'Korea, South', 'Costa Rica', 'Saudi Arabia', 'Serbia', 'North Macedonia',\n",
        "      'Algeria'],\n",
        " 12: ['India', 'Dominican Republic', 'Italy', 'Liberia', 'Estonia',\n",
        "      'Cape Verde', 'Gabon', 'Taiwan', 'Togo', 'Peru', 'Maldives', 'Colombia',\n",
        "      'Belgium', 'Albania', 'Brazil', 'Philippines', 'Uzbekistan', 'Qatar',\n",
        "      'Singapore', 'Nigeria', 'Indonesia', 'Finland', 'Bosnia and Herzegovina',\n",
        "      'Mexico', 'Congo', 'Haiti', 'Panama', 'Armenia', 'Bahrain', 'Argentina',\n",
        "      'United States', 'Iraq', 'Moldova', 'Palestine'],\n",
        " 13: ['Swaziland', 'Turkey', 'Kuwait', 'Bolivia', 'Pakistan', 'Japan',\n",
        "      'Germany', 'Bangladesh', 'Oman', 'San Marino', 'Canada', 'Iran', 'Norway',\n",
        "      'El Salvador', 'Azerbaijan', 'United Arab Emirates', 'Guinea', 'Kosovo'],\n",
        " 14: ['Honduras', 'Russia', 'Somalia', 'Latvia', 'France'],\n",
        " 15: ['Egypt', 'Belarus']}\n"
       ]
      }
     ],
     "prompt_number": 7
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "# Set phases with S-R trend analysis\n",
      "analyser.trend(min_len=14)\n",
      "# The number of countries\n",
      "len(analyser.countries)"
     ],
     "language": "python",
     "metadata": {},
     "outputs": [
      {
       "output_type": "pyout",
       "prompt_number": 8,
       "text": [
        "7"
       ]
      }
     ],
     "prompt_number": 8
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "phase_len_dict = analyser.phase_len()\n",
      "pprint(phase_len_dict, compact=True)"
     ],
     "language": "python",
     "metadata": {
      "tags": []
     },
     "outputs": [
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "{14: ['Honduras', 'Russia', 'Somalia', 'Latvia', 'France'],\n",
        " 15: ['Egypt', 'Belarus']}\n"
       ]
      }
     ],
     "prompt_number": 9
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "# Here, only show the countries which have the most phases\n",
      "countries_show = max(phase_len_dict.items(), key=lambda x: x[0])[1]\n",
      "# Show summary\n",
      "analyser.summary(countries=countries_show)"
     ],
     "language": "python",
     "metadata": {
      "tags": []
     },
     "outputs": [
      {
       "html": [
        "<div>\n",
        "<style scoped>\n",
        "    .dataframe tbody tr th:only-of-type {\n",
        "        vertical-align: middle;\n",
        "    }\n",
        "\n",
        "    .dataframe tbody tr th {\n",
        "        vertical-align: top;\n",
        "    }\n",
        "\n",
        "    .dataframe thead th {\n",
        "        text-align: right;\n",
        "    }\n",
        "</style>\n",
        "<table border=\"1\" class=\"dataframe\">\n",
        "  <thead>\n",
        "    <tr style=\"text-align: right;\">\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th>Type</th>\n",
        "      <th>Start</th>\n",
        "      <th>End</th>\n",
        "      <th>Population</th>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>Country</th>\n",
        "      <th>Phase</th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "    </tr>\n",
        "  </thead>\n",
        "  <tbody>\n",
        "    <tr>\n",
        "      <th rowspan=\"15\" valign=\"top\">Egypt</th>\n",
        "      <th>0th</th>\n",
        "      <td>Past</td>\n",
        "      <td>28Feb2020</td>\n",
        "      <td>02May2020</td>\n",
        "      <td>98423595</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>1st</th>\n",
        "      <td>Past</td>\n",
        "      <td>03May2020</td>\n",
        "      <td>17May2020</td>\n",
        "      <td>98423595</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>2nd</th>\n",
        "      <td>Past</td>\n",
        "      <td>18May2020</td>\n",
        "      <td>28May2020</td>\n",
        "      <td>98423595</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>3rd</th>\n",
        "      <td>Past</td>\n",
        "      <td>29May2020</td>\n",
        "      <td>07Jun2020</td>\n",
        "      <td>98423595</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>4th</th>\n",
        "      <td>Past</td>\n",
        "      <td>08Jun2020</td>\n",
        "      <td>17Jun2020</td>\n",
        "      <td>98423595</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>5th</th>\n",
        "      <td>Past</td>\n",
        "      <td>18Jun2020</td>\n",
        "      <td>27Jun2020</td>\n",
        "      <td>98423595</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>6th</th>\n",
        "      <td>Past</td>\n",
        "      <td>28Jun2020</td>\n",
        "      <td>06Jul2020</td>\n",
        "      <td>98423595</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>7th</th>\n",
        "      <td>Past</td>\n",
        "      <td>07Jul2020</td>\n",
        "      <td>16Jul2020</td>\n",
        "      <td>98423595</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>8th</th>\n",
        "      <td>Past</td>\n",
        "      <td>17Jul2020</td>\n",
        "      <td>22Jul2020</td>\n",
        "      <td>98423595</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>9th</th>\n",
        "      <td>Past</td>\n",
        "      <td>23Jul2020</td>\n",
        "      <td>28Jul2020</td>\n",
        "      <td>98423595</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>10th</th>\n",
        "      <td>Past</td>\n",
        "      <td>29Jul2020</td>\n",
        "      <td>11Aug2020</td>\n",
        "      <td>98423595</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>11th</th>\n",
        "      <td>Past</td>\n",
        "      <td>12Aug2020</td>\n",
        "      <td>27Aug2020</td>\n",
        "      <td>98423595</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>12th</th>\n",
        "      <td>Past</td>\n",
        "      <td>28Aug2020</td>\n",
        "      <td>12Sep2020</td>\n",
        "      <td>98423595</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>13th</th>\n",
        "      <td>Past</td>\n",
        "      <td>13Sep2020</td>\n",
        "      <td>04Oct2020</td>\n",
        "      <td>98423595</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>14th</th>\n",
        "      <td>Past</td>\n",
        "      <td>05Oct2020</td>\n",
        "      <td>05Nov2020</td>\n",
        "      <td>98423595</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th rowspan=\"15\" valign=\"top\">Belarus</th>\n",
        "      <th>0th</th>\n",
        "      <td>Past</td>\n",
        "      <td>09Mar2020</td>\n",
        "      <td>26Apr2020</td>\n",
        "      <td>9483499</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>1st</th>\n",
        "      <td>Past</td>\n",
        "      <td>27Apr2020</td>\n",
        "      <td>08May2020</td>\n",
        "      <td>9483499</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>2nd</th>\n",
        "      <td>Past</td>\n",
        "      <td>09May2020</td>\n",
        "      <td>16May2020</td>\n",
        "      <td>9483499</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>3rd</th>\n",
        "      <td>Past</td>\n",
        "      <td>17May2020</td>\n",
        "      <td>23May2020</td>\n",
        "      <td>9483499</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>4th</th>\n",
        "      <td>Past</td>\n",
        "      <td>24May2020</td>\n",
        "      <td>30May2020</td>\n",
        "      <td>9483499</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>5th</th>\n",
        "      <td>Past</td>\n",
        "      <td>31May2020</td>\n",
        "      <td>06Jun2020</td>\n",
        "      <td>9483499</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>6th</th>\n",
        "      <td>Past</td>\n",
        "      <td>07Jun2020</td>\n",
        "      <td>13Jun2020</td>\n",
        "      <td>9483499</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>7th</th>\n",
        "      <td>Past</td>\n",
        "      <td>14Jun2020</td>\n",
        "      <td>20Jun2020</td>\n",
        "      <td>9483499</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>8th</th>\n",
        "      <td>Past</td>\n",
        "      <td>21Jun2020</td>\n",
        "      <td>03Jul2020</td>\n",
        "      <td>9483499</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>9th</th>\n",
        "      <td>Past</td>\n",
        "      <td>04Jul2020</td>\n",
        "      <td>30Jul2020</td>\n",
        "      <td>9483499</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>10th</th>\n",
        "      <td>Past</td>\n",
        "      <td>31Jul2020</td>\n",
        "      <td>07Sep2020</td>\n",
        "      <td>9483499</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>11th</th>\n",
        "      <td>Past</td>\n",
        "      <td>08Sep2020</td>\n",
        "      <td>02Oct2020</td>\n",
        "      <td>9483499</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>12th</th>\n",
        "      <td>Past</td>\n",
        "      <td>03Oct2020</td>\n",
        "      <td>16Oct2020</td>\n",
        "      <td>9483499</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>13th</th>\n",
        "      <td>Past</td>\n",
        "      <td>17Oct2020</td>\n",
        "      <td>25Oct2020</td>\n",
        "      <td>9483499</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>14th</th>\n",
        "      <td>Past</td>\n",
        "      <td>26Oct2020</td>\n",
        "      <td>05Nov2020</td>\n",
        "      <td>9483499</td>\n",
        "    </tr>\n",
        "  </tbody>\n",
        "</table>\n",
        "</div>"
       ],
       "output_type": "pyout",
       "prompt_number": 10,
       "text": [
        "               Type      Start        End  Population\n",
        "Country Phase                                        \n",
        "Egypt   0th    Past  28Feb2020  02May2020    98423595\n",
        "        1st    Past  03May2020  17May2020    98423595\n",
        "        2nd    Past  18May2020  28May2020    98423595\n",
        "        3rd    Past  29May2020  07Jun2020    98423595\n",
        "        4th    Past  08Jun2020  17Jun2020    98423595\n",
        "        5th    Past  18Jun2020  27Jun2020    98423595\n",
        "        6th    Past  28Jun2020  06Jul2020    98423595\n",
        "        7th    Past  07Jul2020  16Jul2020    98423595\n",
        "        8th    Past  17Jul2020  22Jul2020    98423595\n",
        "        9th    Past  23Jul2020  28Jul2020    98423595\n",
        "        10th   Past  29Jul2020  11Aug2020    98423595\n",
        "        11th   Past  12Aug2020  27Aug2020    98423595\n",
        "        12th   Past  28Aug2020  12Sep2020    98423595\n",
        "        13th   Past  13Sep2020  04Oct2020    98423595\n",
        "        14th   Past  05Oct2020  05Nov2020    98423595\n",
        "Belarus 0th    Past  09Mar2020  26Apr2020     9483499\n",
        "        1st    Past  27Apr2020  08May2020     9483499\n",
        "        2nd    Past  09May2020  16May2020     9483499\n",
        "        3rd    Past  17May2020  23May2020     9483499\n",
        "        4th    Past  24May2020  30May2020     9483499\n",
        "        5th    Past  31May2020  06Jun2020     9483499\n",
        "        6th    Past  07Jun2020  13Jun2020     9483499\n",
        "        7th    Past  14Jun2020  20Jun2020     9483499\n",
        "        8th    Past  21Jun2020  03Jul2020     9483499\n",
        "        9th    Past  04Jul2020  30Jul2020     9483499\n",
        "        10th   Past  31Jul2020  07Sep2020     9483499\n",
        "        11th   Past  08Sep2020  02Oct2020     9483499\n",
        "        12th   Past  03Oct2020  16Oct2020     9483499\n",
        "        13th   Past  17Oct2020  25Oct2020     9483499\n",
        "        14th   Past  26Oct2020  05Nov2020     9483499"
       ]
      }
     ],
     "prompt_number": 10
    },
    {
     "cell_type": "markdown",
     "metadata": {},
     "source": [
      "## Parameter estimation\n",
      "we will estimate the parameter values with SIR-derived ODE models in each country."
     ]
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "# Parameter estimation with SIR-F model\n",
      "analyser.estimate(cs.SIRF)"
     ],
     "language": "python",
     "metadata": {
      "tags": []
     },
     "outputs": [
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n",
        "<SIR-F model: parameter estimation>\n",
        "Running optimization with 4 CPUs...\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tBLR,  3rd phase (17May2020 - 23May2020): finished  691 trials in 0 min 35 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tEGY,  5th phase (18Jun2020 - 27Jun2020): finished  209 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tSOM,  6th phase (11Jun2020 - 16Jun2020): finished  985 trials in 0 min 55 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tLVA, 12th phase (12Oct2020 - 23Oct2020): finished 1188 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tLVA,  9th phase (29Aug2020 - 17Sep2020): finished 1205 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tFRA,  6th phase (01Sep2020 - 10Sep2020): finished  386 trials in 0 min 20 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tEGY, 11th phase (12Aug2020 - 27Aug2020): finished  210 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tBLR,  9th phase (04Jul2020 - 30Jul2020): finished  413 trials in 0 min 20 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tLVA,  5th phase (16May2020 - 31May2020): finished 1190 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tLVA,  7th phase (09Jul2020 - 05Aug2020): finished 1192 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tRUS,  2nd phase (18May2020 - 30May2020): finished 1096 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tHND,  5th phase (06Aug2020 - 20Aug2020): finished  430 trials in 0 min 20 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tRUS,  1st phase (04May2020 - 17May2020): finished 1097 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tRUS,  3rd phase (31May2020 - 12Jun2020): finished 1118 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tHND, 12th phase (18Oct2020 - 25Oct2020): finished 1155 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tLVA, 11th phase (26Sep2020 - 11Oct2020): finished 1285 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tBLR,  4th phase (24May2020 - 30May2020): finished  664 trials in 0 min 30 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tBLR,  0th phase (09Mar2020 - 26Apr2020): finished 1098 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tHND,  0th phase (28Mar2020 - 13Jun2020): finished 1158 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tEGY,  3rd phase (29May2020 - 07Jun2020): finished 1213 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tLVA,  1st phase (07Apr2020 - 20Apr2020): finished 1392 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tSOM,  8th phase (04Jul2020 - 20Jul2020): finished 1224 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tEGY, 13th phase (13Sep2020 - 04Oct2020): finished  345 trials in 0 min 15 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tSOM,  9th phase (21Jul2020 - 24Aug2020): finished 1181 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tLVA,  0th phase (10Mar2020 - 06Apr2020): finished 1311 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tHND,  7th phase (31Aug2020 - 11Sep2020): finished 1168 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tEGY,  0th phase (28Feb2020 - 02May2020): finished 1151 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tRUS,  8th phase (15Aug2020 - 05Sep2020): finished 1166 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tFRA, 12th phase (17Oct2020 - 23Oct2020): finished 1244 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tBLR, 13th phase (17Oct2020 - 25Oct2020): finished 1222 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tLVA,  3rd phase (28Apr2020 - 06May2020): finished 1395 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tBLR, 10th phase (31Jul2020 - 07Sep2020): finished 1195 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tSOM,  4th phase (30May2020 - 04Jun2020): finished  127 trials in 0 min  5 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tRUS,  6th phase (12Jul2020 - 26Jul2020): finished 1184 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tFRA,  8th phase (19Sep2020 - 24Sep2020): finished  203 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tEGY,  6th phase (28Jun2020 - 06Jul2020): finished 1167 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tEGY,  7th phase (07Jul2020 - 16Jul2020): finished  255 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tBLR,  1st phase (27Apr2020 - 08May2020): finished 1181 trials in 1 min  1 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tEGY, 12th phase (28Aug2020 - 12Sep2020): finished  336 trials in 0 min 15 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tFRA,  0th phase (12Feb2020 - 29Mar2020): finished 1071 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tLVA,  4th phase (07May2020 - 15May2020): finished 1303 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tEGY,  4th phase (08Jun2020 - 17Jun2020): finished 1167 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tSOM, 13th phase (24Oct2020 - 05Nov2020): finished 1635 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tFRA, 11th phase (09Oct2020 - 16Oct2020): finished  539 trials in 0 min 20 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tEGY, 14th phase (05Oct2020 - 05Nov2020): finished 1290 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tRUS,  9th phase (06Sep2020 - 25Sep2020): finished 1296 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tEGY,  8th phase (17Jul2020 - 22Jul2020): finished  151 trials in 0 min  5 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tBLR, 12th phase (03Oct2020 - 16Oct2020): finished  283 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tBLR,  2nd phase (09May2020 - 16May2020): finished 1321 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tLVA,  2nd phase (21Apr2020 - 27Apr2020): finished 1501 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tHND,  1st phase (14Jun2020 - 29Jun2020): finished  584 trials in 0 min 25 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tBLR, 11th phase (08Sep2020 - 02Oct2020): finished 1259 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tRUS,  5th phase (27Jun2020 - 11Jul2020): finished 1248 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tRUS,  0th phase (12Feb2020 - 03May2020): finished 1266 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tFRA,  9th phase (25Sep2020 - 01Oct2020): finished  427 trials in 0 min 15 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tSOM,  2nd phase (14May2020 - 20May2020): finished 1333 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tHND, 11th phase (09Oct2020 - 17Oct2020): finished 1327 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tSOM, 10th phase (25Aug2020 - 19Sep2020): finished 1487 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tFRA,  7th phase (11Sep2020 - 18Sep2020): finished  527 trials in 0 min 20 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tSOM, 12th phase (01Oct2020 - 23Oct2020): finished 1756 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tEGY, 10th phase (29Jul2020 - 11Aug2020): finished  524 trials in 0 min 20 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tFRA,  3rd phase (26Apr2020 - 17Jun2020): finished 1252 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tEGY,  9th phase (23Jul2020 - 28Jul2020): finished  415 trials in 0 min 15 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tLVA,  6th phase (01Jun2020 - 08Jul2020): finished 1283 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tHND,  4th phase (25Jul2020 - 05Aug2020): finished 1306 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tSOM, 11th phase (20Sep2020 - 30Sep2020): finished 1661 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tHND,  3rd phase (15Jul2020 - 24Jul2020): finished  370 trials in 0 min 15 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tRUS,  4th phase (13Jun2020 - 26Jun2020): finished 1196 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tLVA,  8th phase (06Aug2020 - 28Aug2020): finished 1320 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tFRA,  4th phase (18Jun2020 - 12Aug2020): finished 1148 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tFRA,  1st phase (30Mar2020 - 09Apr2020): finished 1254 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tEGY,  2nd phase (18May2020 - 28May2020): finished 1258 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tHND,  8th phase (12Sep2020 - 20Sep2020): finished  384 trials in 0 min 15 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tBLR,  5th phase (31May2020 - 06Jun2020): finished 1243 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tSOM,  7th phase (17Jun2020 - 03Jul2020): finished 1253 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tRUS,  7th phase (27Jul2020 - 14Aug2020): finished 1248 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tFRA,  5th phase (13Aug2020 - 31Aug2020): finished  807 trials in 0 min 35 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tSOM,  0th phase (31Mar2020 - 03May2020): finished 1231 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tHND, 13th phase (26Oct2020 - 05Nov2020): finished 1260 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tBLR,  8th phase (21Jun2020 - 03Jul2020): finished  939 trials in 0 min 40 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tBLR,  7th phase (14Jun2020 - 20Jun2020): finished  546 trials in 0 min 20 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tSOM,  1st phase (04May2020 - 13May2020): finished 1316 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tFRA, 10th phase (02Oct2020 - 08Oct2020): finished  549 trials in 0 min 20 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tLVA, 10th phase (18Sep2020 - 25Sep2020): finished 1579 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tHND, 10th phase (30Sep2020 - 08Oct2020): finished  442 trials in 0 min 15 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tHND,  6th phase (21Aug2020 - 30Aug2020): finished 1393 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tHND,  9th phase (21Sep2020 - 29Sep2020): finished  438 trials in 0 min 15 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tSOM,  5th phase (05Jun2020 - 10Jun2020): finished 1409 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tFRA,  2nd phase (10Apr2020 - 25Apr2020): finished 1394 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tSOM,  3rd phase (21May2020 - 29May2020): finished 1380 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tEGY,  1st phase (03May2020 - 17May2020): finished 1379 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tRUS, 10th phase (26Sep2020 - 08Oct2020): finished 1466 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tBLR,  6th phase (07Jun2020 - 13Jun2020): finished 1547 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tHND,  2nd phase (30Jun2020 - 14Jul2020): finished 1814 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "Completed optimization. Total: 20 min 50 sec\n"
       ]
      }
     ],
     "prompt_number": 11
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "# Show summary\n",
      "analyser.summary(countries=countries_show)"
     ],
     "language": "python",
     "metadata": {},
     "outputs": [
      {
       "html": [
        "<div>\n",
        "<style scoped>\n",
        "    .dataframe tbody tr th:only-of-type {\n",
        "        vertical-align: middle;\n",
        "    }\n",
        "\n",
        "    .dataframe tbody tr th {\n",
        "        vertical-align: top;\n",
        "    }\n",
        "\n",
        "    .dataframe thead th {\n",
        "        text-align: right;\n",
        "    }\n",
        "</style>\n",
        "<table border=\"1\" class=\"dataframe\">\n",
        "  <thead>\n",
        "    <tr style=\"text-align: right;\">\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th>Type</th>\n",
        "      <th>Start</th>\n",
        "      <th>End</th>\n",
        "      <th>Population</th>\n",
        "      <th>ODE</th>\n",
        "      <th>Rt</th>\n",
        "      <th>theta</th>\n",
        "      <th>kappa</th>\n",
        "      <th>rho</th>\n",
        "      <th>sigma</th>\n",
        "      <th>tau</th>\n",
        "      <th>alpha1 [-]</th>\n",
        "      <th>1/gamma [day]</th>\n",
        "      <th>1/alpha2 [day]</th>\n",
        "      <th>1/beta [day]</th>\n",
        "      <th>RMSLE</th>\n",
        "      <th>Trials</th>\n",
        "      <th>Runtime</th>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>Country</th>\n",
        "      <th>Phase</th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "    </tr>\n",
        "  </thead>\n",
        "  <tbody>\n",
        "    <tr>\n",
        "      <th rowspan=\"15\" valign=\"top\">Egypt</th>\n",
        "      <th>0th</th>\n",
        "      <td>Past</td>\n",
        "      <td>28Feb2020</td>\n",
        "      <td>02May2020</td>\n",
        "      <td>98423595</td>\n",
        "      <td>SIR-F</td>\n",
        "      <td>0.02</td>\n",
        "      <td>0.602763</td>\n",
        "      <td>0.544883</td>\n",
        "      <td>0.0250943</td>\n",
        "      <td>0.00469834</td>\n",
        "      <td>360</td>\n",
        "      <td>0.603</td>\n",
        "      <td>53</td>\n",
        "      <td>0</td>\n",
        "      <td>9</td>\n",
        "      <td>14.9999</td>\n",
        "      <td>1151</td>\n",
        "      <td>1 min  0 sec</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>1st</th>\n",
        "      <td>Past</td>\n",
        "      <td>03May2020</td>\n",
        "      <td>17May2020</td>\n",
        "      <td>98423595</td>\n",
        "      <td>SIR-F</td>\n",
        "      <td>3.68</td>\n",
        "      <td>0.0010023</td>\n",
        "      <td>0.000556525</td>\n",
        "      <td>0.0168803</td>\n",
        "      <td>0.0040237</td>\n",
        "      <td>360</td>\n",
        "      <td>0.001</td>\n",
        "      <td>62</td>\n",
        "      <td>449</td>\n",
        "      <td>14</td>\n",
        "      <td>0.0423755</td>\n",
        "      <td>1379</td>\n",
        "      <td>1 min  0 sec</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>2nd</th>\n",
        "      <td>Past</td>\n",
        "      <td>18May2020</td>\n",
        "      <td>28May2020</td>\n",
        "      <td>98423595</td>\n",
        "      <td>SIR-F</td>\n",
        "      <td>3.34</td>\n",
        "      <td>0.0212514</td>\n",
        "      <td>4.82449e-05</td>\n",
        "      <td>0.0187634</td>\n",
        "      <td>0.00544255</td>\n",
        "      <td>360</td>\n",
        "      <td>0.021</td>\n",
        "      <td>45</td>\n",
        "      <td>5181</td>\n",
        "      <td>13</td>\n",
        "      <td>0.0344133</td>\n",
        "      <td>1258</td>\n",
        "      <td>1 min  0 sec</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>3rd</th>\n",
        "      <td>Past</td>\n",
        "      <td>29May2020</td>\n",
        "      <td>07Jun2020</td>\n",
        "      <td>98423595</td>\n",
        "      <td>SIR-F</td>\n",
        "      <td>3.19</td>\n",
        "      <td>0.000138688</td>\n",
        "      <td>0.000552044</td>\n",
        "      <td>0.0172512</td>\n",
        "      <td>0.00484903</td>\n",
        "      <td>360</td>\n",
        "      <td>0</td>\n",
        "      <td>51</td>\n",
        "      <td>452</td>\n",
        "      <td>14</td>\n",
        "      <td>0.0211366</td>\n",
        "      <td>1213</td>\n",
        "      <td>1 min  0 sec</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>4th</th>\n",
        "      <td>Past</td>\n",
        "      <td>08Jun2020</td>\n",
        "      <td>17Jun2020</td>\n",
        "      <td>98423595</td>\n",
        "      <td>SIR-F</td>\n",
        "      <td>3.47</td>\n",
        "      <td>0.0151949</td>\n",
        "      <td>0.000295345</td>\n",
        "      <td>0.0130853</td>\n",
        "      <td>0.0034207</td>\n",
        "      <td>360</td>\n",
        "      <td>0.015</td>\n",
        "      <td>73</td>\n",
        "      <td>846</td>\n",
        "      <td>19</td>\n",
        "      <td>0.0222277</td>\n",
        "      <td>1167</td>\n",
        "      <td>1 min  0 sec</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>5th</th>\n",
        "      <td>Past</td>\n",
        "      <td>18Jun2020</td>\n",
        "      <td>27Jun2020</td>\n",
        "      <td>98423595</td>\n",
        "      <td>SIR-F</td>\n",
        "      <td>3.46</td>\n",
        "      <td>0.0466065</td>\n",
        "      <td>7.90662e-05</td>\n",
        "      <td>0.00960975</td>\n",
        "      <td>0.0025658</td>\n",
        "      <td>360</td>\n",
        "      <td>0.047</td>\n",
        "      <td>97</td>\n",
        "      <td>3161</td>\n",
        "      <td>26</td>\n",
        "      <td>0.0101535</td>\n",
        "      <td>209</td>\n",
        "      <td>0 min 10 sec</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>6th</th>\n",
        "      <td>Past</td>\n",
        "      <td>28Jun2020</td>\n",
        "      <td>06Jul2020</td>\n",
        "      <td>98423595</td>\n",
        "      <td>SIR-F</td>\n",
        "      <td>2.96</td>\n",
        "      <td>0.000966774</td>\n",
        "      <td>0.000409638</td>\n",
        "      <td>0.00770113</td>\n",
        "      <td>0.00219251</td>\n",
        "      <td>360</td>\n",
        "      <td>0.001</td>\n",
        "      <td>114</td>\n",
        "      <td>610</td>\n",
        "      <td>32</td>\n",
        "      <td>0.007938</td>\n",
        "      <td>1167</td>\n",
        "      <td>1 min  0 sec</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>7th</th>\n",
        "      <td>Past</td>\n",
        "      <td>07Jul2020</td>\n",
        "      <td>16Jul2020</td>\n",
        "      <td>98423595</td>\n",
        "      <td>SIR-F</td>\n",
        "      <td>1.49</td>\n",
        "      <td>0.00348645</td>\n",
        "      <td>0.000326255</td>\n",
        "      <td>0.00434211</td>\n",
        "      <td>0.00258678</td>\n",
        "      <td>360</td>\n",
        "      <td>0.003</td>\n",
        "      <td>96</td>\n",
        "      <td>766</td>\n",
        "      <td>57</td>\n",
        "      <td>0.00343289</td>\n",
        "      <td>255</td>\n",
        "      <td>0 min 10 sec</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>8th</th>\n",
        "      <td>Past</td>\n",
        "      <td>17Jul2020</td>\n",
        "      <td>22Jul2020</td>\n",
        "      <td>98423595</td>\n",
        "      <td>SIR-F</td>\n",
        "      <td>1.09</td>\n",
        "      <td>0.0592805</td>\n",
        "      <td>9.26077e-05</td>\n",
        "      <td>0.00297865</td>\n",
        "      <td>0.00248081</td>\n",
        "      <td>360</td>\n",
        "      <td>0.059</td>\n",
        "      <td>100</td>\n",
        "      <td>2699</td>\n",
        "      <td>83</td>\n",
        "      <td>0.00267541</td>\n",
        "      <td>151</td>\n",
        "      <td>0 min  5 sec</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>9th</th>\n",
        "      <td>Past</td>\n",
        "      <td>23Jul2020</td>\n",
        "      <td>28Jul2020</td>\n",
        "      <td>98423595</td>\n",
        "      <td>SIR-F</td>\n",
        "      <td>0.46</td>\n",
        "      <td>0.0561182</td>\n",
        "      <td>9.01743e-05</td>\n",
        "      <td>0.00226516</td>\n",
        "      <td>0.0045858</td>\n",
        "      <td>360</td>\n",
        "      <td>0.056</td>\n",
        "      <td>54</td>\n",
        "      <td>2772</td>\n",
        "      <td>110</td>\n",
        "      <td>0.00388709</td>\n",
        "      <td>415</td>\n",
        "      <td>0 min 15 sec</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>10th</th>\n",
        "      <td>Past</td>\n",
        "      <td>29Jul2020</td>\n",
        "      <td>11Aug2020</td>\n",
        "      <td>98423595</td>\n",
        "      <td>SIR-F</td>\n",
        "      <td>0.12</td>\n",
        "      <td>0.0222383</td>\n",
        "      <td>0.0001102</td>\n",
        "      <td>0.000984113</td>\n",
        "      <td>0.00808549</td>\n",
        "      <td>360</td>\n",
        "      <td>0.022</td>\n",
        "      <td>30</td>\n",
        "      <td>2268</td>\n",
        "      <td>254</td>\n",
        "      <td>0.0158202</td>\n",
        "      <td>524</td>\n",
        "      <td>0 min 20 sec</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>11th</th>\n",
        "      <td>Past</td>\n",
        "      <td>12Aug2020</td>\n",
        "      <td>27Aug2020</td>\n",
        "      <td>98423595</td>\n",
        "      <td>SIR-F</td>\n",
        "      <td>0.16</td>\n",
        "      <td>0.0468845</td>\n",
        "      <td>7.11252e-05</td>\n",
        "      <td>0.0013039</td>\n",
        "      <td>0.00751132</td>\n",
        "      <td>360</td>\n",
        "      <td>0.047</td>\n",
        "      <td>33</td>\n",
        "      <td>3514</td>\n",
        "      <td>191</td>\n",
        "      <td>0.0126768</td>\n",
        "      <td>210</td>\n",
        "      <td>0 min 10 sec</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>12th</th>\n",
        "      <td>Past</td>\n",
        "      <td>28Aug2020</td>\n",
        "      <td>12Sep2020</td>\n",
        "      <td>98423595</td>\n",
        "      <td>SIR-F</td>\n",
        "      <td>0.16</td>\n",
        "      <td>0.0270891</td>\n",
        "      <td>0.000167965</td>\n",
        "      <td>0.00226738</td>\n",
        "      <td>0.0138463</td>\n",
        "      <td>360</td>\n",
        "      <td>0.027</td>\n",
        "      <td>18</td>\n",
        "      <td>1488</td>\n",
        "      <td>110</td>\n",
        "      <td>0.0705479</td>\n",
        "      <td>336</td>\n",
        "      <td>0 min 15 sec</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>13th</th>\n",
        "      <td>Past</td>\n",
        "      <td>13Sep2020</td>\n",
        "      <td>04Oct2020</td>\n",
        "      <td>98423595</td>\n",
        "      <td>SIR-F</td>\n",
        "      <td>0.26</td>\n",
        "      <td>0.0415288</td>\n",
        "      <td>0.000553023</td>\n",
        "      <td>0.014244</td>\n",
        "      <td>0.0526372</td>\n",
        "      <td>360</td>\n",
        "      <td>0.042</td>\n",
        "      <td>4</td>\n",
        "      <td>452</td>\n",
        "      <td>17</td>\n",
        "      <td>0.461959</td>\n",
        "      <td>345</td>\n",
        "      <td>0 min 15 sec</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>14th</th>\n",
        "      <td>Past</td>\n",
        "      <td>05Oct2020</td>\n",
        "      <td>05Nov2020</td>\n",
        "      <td>98423595</td>\n",
        "      <td>SIR-F</td>\n",
        "      <td>1.89</td>\n",
        "      <td>0.0670941</td>\n",
        "      <td>0.00052331</td>\n",
        "      <td>0.0345643</td>\n",
        "      <td>0.016493</td>\n",
        "      <td>360</td>\n",
        "      <td>0.067</td>\n",
        "      <td>15</td>\n",
        "      <td>477</td>\n",
        "      <td>7</td>\n",
        "      <td>0.230076</td>\n",
        "      <td>1290</td>\n",
        "      <td>1 min  0 sec</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th rowspan=\"15\" valign=\"top\">Belarus</th>\n",
        "      <th>0th</th>\n",
        "      <td>Past</td>\n",
        "      <td>09Mar2020</td>\n",
        "      <td>26Apr2020</td>\n",
        "      <td>9483499</td>\n",
        "      <td>SIR-F</td>\n",
        "      <td>8.9</td>\n",
        "      <td>0.00035874</td>\n",
        "      <td>0.000401838</td>\n",
        "      <td>0.0453276</td>\n",
        "      <td>0.00469093</td>\n",
        "      <td>360</td>\n",
        "      <td>0</td>\n",
        "      <td>53</td>\n",
        "      <td>622</td>\n",
        "      <td>5</td>\n",
        "      <td>1.30935</td>\n",
        "      <td>1098</td>\n",
        "      <td>1 min  0 sec</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>1st</th>\n",
        "      <td>Past</td>\n",
        "      <td>27Apr2020</td>\n",
        "      <td>08May2020</td>\n",
        "      <td>9483499</td>\n",
        "      <td>SIR-F</td>\n",
        "      <td>2.09</td>\n",
        "      <td>0.000459746</td>\n",
        "      <td>8.39432e-05</td>\n",
        "      <td>0.0176327</td>\n",
        "      <td>0.00834238</td>\n",
        "      <td>360</td>\n",
        "      <td>0</td>\n",
        "      <td>29</td>\n",
        "      <td>2978</td>\n",
        "      <td>14</td>\n",
        "      <td>0.132252</td>\n",
        "      <td>1181</td>\n",
        "      <td>1 min  1 sec</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>2nd</th>\n",
        "      <td>Past</td>\n",
        "      <td>09May2020</td>\n",
        "      <td>16May2020</td>\n",
        "      <td>9483499</td>\n",
        "      <td>SIR-F</td>\n",
        "      <td>1.98</td>\n",
        "      <td>0.00499772</td>\n",
        "      <td>1.8817e-06</td>\n",
        "      <td>0.0130611</td>\n",
        "      <td>0.00657461</td>\n",
        "      <td>360</td>\n",
        "      <td>0.005</td>\n",
        "      <td>38</td>\n",
        "      <td>132858</td>\n",
        "      <td>19</td>\n",
        "      <td>0.0234466</td>\n",
        "      <td>1321</td>\n",
        "      <td>1 min  0 sec</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>3rd</th>\n",
        "      <td>Past</td>\n",
        "      <td>17May2020</td>\n",
        "      <td>23May2020</td>\n",
        "      <td>9483499</td>\n",
        "      <td>SIR-F</td>\n",
        "      <td>1.46</td>\n",
        "      <td>0.000165543</td>\n",
        "      <td>5.962e-05</td>\n",
        "      <td>0.0112616</td>\n",
        "      <td>0.00763706</td>\n",
        "      <td>360</td>\n",
        "      <td>0</td>\n",
        "      <td>32</td>\n",
        "      <td>4193</td>\n",
        "      <td>22</td>\n",
        "      <td>0.019991</td>\n",
        "      <td>691</td>\n",
        "      <td>0 min 35 sec</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>4th</th>\n",
        "      <td>Past</td>\n",
        "      <td>24May2020</td>\n",
        "      <td>30May2020</td>\n",
        "      <td>9483499</td>\n",
        "      <td>SIR-F</td>\n",
        "      <td>1.41</td>\n",
        "      <td>0.00143251</td>\n",
        "      <td>3.62852e-05</td>\n",
        "      <td>0.00996331</td>\n",
        "      <td>0.00703568</td>\n",
        "      <td>360</td>\n",
        "      <td>0.001</td>\n",
        "      <td>35</td>\n",
        "      <td>6889</td>\n",
        "      <td>25</td>\n",
        "      <td>0.0102348</td>\n",
        "      <td>664</td>\n",
        "      <td>0 min 30 sec</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>5th</th>\n",
        "      <td>Past</td>\n",
        "      <td>31May2020</td>\n",
        "      <td>06Jun2020</td>\n",
        "      <td>9483499</td>\n",
        "      <td>SIR-F</td>\n",
        "      <td>1.06</td>\n",
        "      <td>0.000267151</td>\n",
        "      <td>7.58056e-05</td>\n",
        "      <td>0.00878082</td>\n",
        "      <td>0.00816886</td>\n",
        "      <td>360</td>\n",
        "      <td>0</td>\n",
        "      <td>30</td>\n",
        "      <td>3297</td>\n",
        "      <td>28</td>\n",
        "      <td>0.0301545</td>\n",
        "      <td>1243</td>\n",
        "      <td>1 min  0 sec</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>6th</th>\n",
        "      <td>Past</td>\n",
        "      <td>07Jun2020</td>\n",
        "      <td>13Jun2020</td>\n",
        "      <td>9483499</td>\n",
        "      <td>SIR-F</td>\n",
        "      <td>0.94</td>\n",
        "      <td>0.000164226</td>\n",
        "      <td>5.69843e-05</td>\n",
        "      <td>0.00779032</td>\n",
        "      <td>0.00821349</td>\n",
        "      <td>360</td>\n",
        "      <td>0</td>\n",
        "      <td>30</td>\n",
        "      <td>4387</td>\n",
        "      <td>32</td>\n",
        "      <td>0.016211</td>\n",
        "      <td>1547</td>\n",
        "      <td>1 min  0 sec</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>7th</th>\n",
        "      <td>Past</td>\n",
        "      <td>14Jun2020</td>\n",
        "      <td>20Jun2020</td>\n",
        "      <td>9483499</td>\n",
        "      <td>SIR-F</td>\n",
        "      <td>0.55</td>\n",
        "      <td>0.000363586</td>\n",
        "      <td>7.58454e-05</td>\n",
        "      <td>0.00732729</td>\n",
        "      <td>0.0132063</td>\n",
        "      <td>360</td>\n",
        "      <td>0</td>\n",
        "      <td>18</td>\n",
        "      <td>3296</td>\n",
        "      <td>34</td>\n",
        "      <td>0.0277517</td>\n",
        "      <td>546</td>\n",
        "      <td>0 min 20 sec</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>8th</th>\n",
        "      <td>Past</td>\n",
        "      <td>21Jun2020</td>\n",
        "      <td>03Jul2020</td>\n",
        "      <td>9483499</td>\n",
        "      <td>SIR-F</td>\n",
        "      <td>0.34</td>\n",
        "      <td>0.00160734</td>\n",
        "      <td>8.36683e-05</td>\n",
        "      <td>0.00553791</td>\n",
        "      <td>0.0162891</td>\n",
        "      <td>360</td>\n",
        "      <td>0.002</td>\n",
        "      <td>15</td>\n",
        "      <td>2987</td>\n",
        "      <td>45</td>\n",
        "      <td>0.0638344</td>\n",
        "      <td>939</td>\n",
        "      <td>0 min 40 sec</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>9th</th>\n",
        "      <td>Past</td>\n",
        "      <td>04Jul2020</td>\n",
        "      <td>30Jul2020</td>\n",
        "      <td>9483499</td>\n",
        "      <td>SIR-F</td>\n",
        "      <td>0.32</td>\n",
        "      <td>0.0235725</td>\n",
        "      <td>4.81248e-05</td>\n",
        "      <td>0.00492668</td>\n",
        "      <td>0.0151547</td>\n",
        "      <td>360</td>\n",
        "      <td>0.024</td>\n",
        "      <td>16</td>\n",
        "      <td>5194</td>\n",
        "      <td>50</td>\n",
        "      <td>0.185834</td>\n",
        "      <td>413</td>\n",
        "      <td>0 min 20 sec</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>10th</th>\n",
        "      <td>Past</td>\n",
        "      <td>31Jul2020</td>\n",
        "      <td>07Sep2020</td>\n",
        "      <td>9483499</td>\n",
        "      <td>SIR-F</td>\n",
        "      <td>0.47</td>\n",
        "      <td>0.0198899</td>\n",
        "      <td>4.53073e-05</td>\n",
        "      <td>0.0156161</td>\n",
        "      <td>0.0325224</td>\n",
        "      <td>360</td>\n",
        "      <td>0.02</td>\n",
        "      <td>7</td>\n",
        "      <td>5517</td>\n",
        "      <td>16</td>\n",
        "      <td>0.389676</td>\n",
        "      <td>1195</td>\n",
        "      <td>1 min  0 sec</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>11th</th>\n",
        "      <td>Past</td>\n",
        "      <td>08Sep2020</td>\n",
        "      <td>02Oct2020</td>\n",
        "      <td>9483499</td>\n",
        "      <td>SIR-F</td>\n",
        "      <td>2.27</td>\n",
        "      <td>0.0181579</td>\n",
        "      <td>0.000335938</td>\n",
        "      <td>0.0374916</td>\n",
        "      <td>0.0158873</td>\n",
        "      <td>360</td>\n",
        "      <td>0.018</td>\n",
        "      <td>15</td>\n",
        "      <td>744</td>\n",
        "      <td>6</td>\n",
        "      <td>0.0769216</td>\n",
        "      <td>1259</td>\n",
        "      <td>1 min  0 sec</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>12th</th>\n",
        "      <td>Past</td>\n",
        "      <td>03Oct2020</td>\n",
        "      <td>16Oct2020</td>\n",
        "      <td>9483499</td>\n",
        "      <td>SIR-F</td>\n",
        "      <td>1.93</td>\n",
        "      <td>0.00254146</td>\n",
        "      <td>0.000213644</td>\n",
        "      <td>0.0212893</td>\n",
        "      <td>0.0107996</td>\n",
        "      <td>360</td>\n",
        "      <td>0.003</td>\n",
        "      <td>23</td>\n",
        "      <td>1170</td>\n",
        "      <td>11</td>\n",
        "      <td>0.0407343</td>\n",
        "      <td>283</td>\n",
        "      <td>0 min 10 sec</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>13th</th>\n",
        "      <td>Past</td>\n",
        "      <td>17Oct2020</td>\n",
        "      <td>25Oct2020</td>\n",
        "      <td>9483499</td>\n",
        "      <td>SIR-F</td>\n",
        "      <td>1.58</td>\n",
        "      <td>0.000636412</td>\n",
        "      <td>0.000116647</td>\n",
        "      <td>0.0242426</td>\n",
        "      <td>0.0152617</td>\n",
        "      <td>360</td>\n",
        "      <td>0.001</td>\n",
        "      <td>16</td>\n",
        "      <td>2143</td>\n",
        "      <td>10</td>\n",
        "      <td>0.00928741</td>\n",
        "      <td>1222</td>\n",
        "      <td>1 min  0 sec</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>14th</th>\n",
        "      <td>Past</td>\n",
        "      <td>26Oct2020</td>\n",
        "      <td>05Nov2020</td>\n",
        "      <td>9483499</td>\n",
        "      <td>-</td>\n",
        "      <td>-</td>\n",
        "      <td>-</td>\n",
        "      <td>-</td>\n",
        "      <td>-</td>\n",
        "      <td>-</td>\n",
        "      <td>-</td>\n",
        "      <td>-</td>\n",
        "      <td>-</td>\n",
        "      <td>-</td>\n",
        "      <td>-</td>\n",
        "      <td>-</td>\n",
        "      <td>-</td>\n",
        "      <td>-</td>\n",
        "    </tr>\n",
        "  </tbody>\n",
        "</table>\n",
        "</div>"
       ],
       "output_type": "pyout",
       "prompt_number": 12,
       "text": [
        "               Type      Start        End  Population    ODE    Rt  \\\n",
        "Country Phase                                                        \n",
        "Egypt   0th    Past  28Feb2020  02May2020    98423595  SIR-F  0.02   \n",
        "        1st    Past  03May2020  17May2020    98423595  SIR-F  3.68   \n",
        "        2nd    Past  18May2020  28May2020    98423595  SIR-F  3.34   \n",
        "        3rd    Past  29May2020  07Jun2020    98423595  SIR-F  3.19   \n",
        "        4th    Past  08Jun2020  17Jun2020    98423595  SIR-F  3.47   \n",
        "        5th    Past  18Jun2020  27Jun2020    98423595  SIR-F  3.46   \n",
        "        6th    Past  28Jun2020  06Jul2020    98423595  SIR-F  2.96   \n",
        "        7th    Past  07Jul2020  16Jul2020    98423595  SIR-F  1.49   \n",
        "        8th    Past  17Jul2020  22Jul2020    98423595  SIR-F  1.09   \n",
        "        9th    Past  23Jul2020  28Jul2020    98423595  SIR-F  0.46   \n",
        "        10th   Past  29Jul2020  11Aug2020    98423595  SIR-F  0.12   \n",
        "        11th   Past  12Aug2020  27Aug2020    98423595  SIR-F  0.16   \n",
        "        12th   Past  28Aug2020  12Sep2020    98423595  SIR-F  0.16   \n",
        "        13th   Past  13Sep2020  04Oct2020    98423595  SIR-F  0.26   \n",
        "        14th   Past  05Oct2020  05Nov2020    98423595  SIR-F  1.89   \n",
        "Belarus 0th    Past  09Mar2020  26Apr2020     9483499  SIR-F   8.9   \n",
        "        1st    Past  27Apr2020  08May2020     9483499  SIR-F  2.09   \n",
        "        2nd    Past  09May2020  16May2020     9483499  SIR-F  1.98   \n",
        "        3rd    Past  17May2020  23May2020     9483499  SIR-F  1.46   \n",
        "        4th    Past  24May2020  30May2020     9483499  SIR-F  1.41   \n",
        "        5th    Past  31May2020  06Jun2020     9483499  SIR-F  1.06   \n",
        "        6th    Past  07Jun2020  13Jun2020     9483499  SIR-F  0.94   \n",
        "        7th    Past  14Jun2020  20Jun2020     9483499  SIR-F  0.55   \n",
        "        8th    Past  21Jun2020  03Jul2020     9483499  SIR-F  0.34   \n",
        "        9th    Past  04Jul2020  30Jul2020     9483499  SIR-F  0.32   \n",
        "        10th   Past  31Jul2020  07Sep2020     9483499  SIR-F  0.47   \n",
        "        11th   Past  08Sep2020  02Oct2020     9483499  SIR-F  2.27   \n",
        "        12th   Past  03Oct2020  16Oct2020     9483499  SIR-F  1.93   \n",
        "        13th   Past  17Oct2020  25Oct2020     9483499  SIR-F  1.58   \n",
        "        14th   Past  26Oct2020  05Nov2020     9483499      -     -   \n",
        "\n",
        "                     theta        kappa          rho       sigma  tau  \\\n",
        "Country Phase                                                           \n",
        "Egypt   0th       0.602763     0.544883    0.0250943  0.00469834  360   \n",
        "        1st      0.0010023  0.000556525    0.0168803   0.0040237  360   \n",
        "        2nd      0.0212514  4.82449e-05    0.0187634  0.00544255  360   \n",
        "        3rd    0.000138688  0.000552044    0.0172512  0.00484903  360   \n",
        "        4th      0.0151949  0.000295345    0.0130853   0.0034207  360   \n",
        "        5th      0.0466065  7.90662e-05   0.00960975   0.0025658  360   \n",
        "        6th    0.000966774  0.000409638   0.00770113  0.00219251  360   \n",
        "        7th     0.00348645  0.000326255   0.00434211  0.00258678  360   \n",
        "        8th      0.0592805  9.26077e-05   0.00297865  0.00248081  360   \n",
        "        9th      0.0561182  9.01743e-05   0.00226516   0.0045858  360   \n",
        "        10th     0.0222383    0.0001102  0.000984113  0.00808549  360   \n",
        "        11th     0.0468845  7.11252e-05    0.0013039  0.00751132  360   \n",
        "        12th     0.0270891  0.000167965   0.00226738   0.0138463  360   \n",
        "        13th     0.0415288  0.000553023     0.014244   0.0526372  360   \n",
        "        14th     0.0670941   0.00052331    0.0345643    0.016493  360   \n",
        "Belarus 0th     0.00035874  0.000401838    0.0453276  0.00469093  360   \n",
        "        1st    0.000459746  8.39432e-05    0.0176327  0.00834238  360   \n",
        "        2nd     0.00499772   1.8817e-06    0.0130611  0.00657461  360   \n",
        "        3rd    0.000165543    5.962e-05    0.0112616  0.00763706  360   \n",
        "        4th     0.00143251  3.62852e-05   0.00996331  0.00703568  360   \n",
        "        5th    0.000267151  7.58056e-05   0.00878082  0.00816886  360   \n",
        "        6th    0.000164226  5.69843e-05   0.00779032  0.00821349  360   \n",
        "        7th    0.000363586  7.58454e-05   0.00732729   0.0132063  360   \n",
        "        8th     0.00160734  8.36683e-05   0.00553791   0.0162891  360   \n",
        "        9th      0.0235725  4.81248e-05   0.00492668   0.0151547  360   \n",
        "        10th     0.0198899  4.53073e-05    0.0156161   0.0325224  360   \n",
        "        11th     0.0181579  0.000335938    0.0374916   0.0158873  360   \n",
        "        12th    0.00254146  0.000213644    0.0212893   0.0107996  360   \n",
        "        13th   0.000636412  0.000116647    0.0242426   0.0152617  360   \n",
        "        14th             -            -            -           -    -   \n",
        "\n",
        "              alpha1 [-] 1/gamma [day] 1/alpha2 [day] 1/beta [day]  \\\n",
        "Country Phase                                                        \n",
        "Egypt   0th        0.603            53              0            9   \n",
        "        1st        0.001            62            449           14   \n",
        "        2nd        0.021            45           5181           13   \n",
        "        3rd            0            51            452           14   \n",
        "        4th        0.015            73            846           19   \n",
        "        5th        0.047            97           3161           26   \n",
        "        6th        0.001           114            610           32   \n",
        "        7th        0.003            96            766           57   \n",
        "        8th        0.059           100           2699           83   \n",
        "        9th        0.056            54           2772          110   \n",
        "        10th       0.022            30           2268          254   \n",
        "        11th       0.047            33           3514          191   \n",
        "        12th       0.027            18           1488          110   \n",
        "        13th       0.042             4            452           17   \n",
        "        14th       0.067            15            477            7   \n",
        "Belarus 0th            0            53            622            5   \n",
        "        1st            0            29           2978           14   \n",
        "        2nd        0.005            38         132858           19   \n",
        "        3rd            0            32           4193           22   \n",
        "        4th        0.001            35           6889           25   \n",
        "        5th            0            30           3297           28   \n",
        "        6th            0            30           4387           32   \n",
        "        7th            0            18           3296           34   \n",
        "        8th        0.002            15           2987           45   \n",
        "        9th        0.024            16           5194           50   \n",
        "        10th        0.02             7           5517           16   \n",
        "        11th       0.018            15            744            6   \n",
        "        12th       0.003            23           1170           11   \n",
        "        13th       0.001            16           2143           10   \n",
        "        14th           -             -              -            -   \n",
        "\n",
        "                    RMSLE Trials       Runtime  \n",
        "Country Phase                                   \n",
        "Egypt   0th       14.9999   1151  1 min  0 sec  \n",
        "        1st     0.0423755   1379  1 min  0 sec  \n",
        "        2nd     0.0344133   1258  1 min  0 sec  \n",
        "        3rd     0.0211366   1213  1 min  0 sec  \n",
        "        4th     0.0222277   1167  1 min  0 sec  \n",
        "        5th     0.0101535    209  0 min 10 sec  \n",
        "        6th      0.007938   1167  1 min  0 sec  \n",
        "        7th    0.00343289    255  0 min 10 sec  \n",
        "        8th    0.00267541    151  0 min  5 sec  \n",
        "        9th    0.00388709    415  0 min 15 sec  \n",
        "        10th    0.0158202    524  0 min 20 sec  \n",
        "        11th    0.0126768    210  0 min 10 sec  \n",
        "        12th    0.0705479    336  0 min 15 sec  \n",
        "        13th     0.461959    345  0 min 15 sec  \n",
        "        14th     0.230076   1290  1 min  0 sec  \n",
        "Belarus 0th       1.30935   1098  1 min  0 sec  \n",
        "        1st      0.132252   1181  1 min  1 sec  \n",
        "        2nd     0.0234466   1321  1 min  0 sec  \n",
        "        3rd      0.019991    691  0 min 35 sec  \n",
        "        4th     0.0102348    664  0 min 30 sec  \n",
        "        5th     0.0301545   1243  1 min  0 sec  \n",
        "        6th      0.016211   1547  1 min  0 sec  \n",
        "        7th     0.0277517    546  0 min 20 sec  \n",
        "        8th     0.0638344    939  0 min 40 sec  \n",
        "        9th      0.185834    413  0 min 20 sec  \n",
        "        10th     0.389676   1195  1 min  0 sec  \n",
        "        11th    0.0769216   1259  1 min  0 sec  \n",
        "        12th    0.0407343    283  0 min 10 sec  \n",
        "        13th   0.00928741   1222  1 min  0 sec  \n",
        "        14th            -      -             -  "
       ]
      }
     ],
     "prompt_number": 12
    },
    {
     "cell_type": "markdown",
     "metadata": {},
     "source": [
      "## Compare the history of parameters\n",
      "Here, compare the history of parameter values if countries."
     ]
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "# All parameter/day parameter/Rt/OxCGRT\n",
      "analyser.track().head()"
     ],
     "language": "python",
     "metadata": {},
     "outputs": [
      {
       "html": [
        "<div>\n",
        "<style scoped>\n",
        "    .dataframe tbody tr th:only-of-type {\n",
        "        vertical-align: middle;\n",
        "    }\n",
        "\n",
        "    .dataframe tbody tr th {\n",
        "        vertical-align: top;\n",
        "    }\n",
        "\n",
        "    .dataframe thead th {\n",
        "        text-align: right;\n",
        "    }\n",
        "</style>\n",
        "<table border=\"1\" class=\"dataframe\">\n",
        "  <thead>\n",
        "    <tr style=\"text-align: right;\">\n",
        "      <th></th>\n",
        "      <th>Date</th>\n",
        "      <th>Country</th>\n",
        "      <th>theta</th>\n",
        "      <th>kappa</th>\n",
        "      <th>rho</th>\n",
        "      <th>sigma</th>\n",
        "      <th>alpha1 [-]</th>\n",
        "      <th>1/alpha2 [day]</th>\n",
        "      <th>1/beta [day]</th>\n",
        "      <th>1/gamma [day]</th>\n",
        "      <th>...</th>\n",
        "      <th>Cancel_events</th>\n",
        "      <th>Gatherings_restrictions</th>\n",
        "      <th>Transport_closing</th>\n",
        "      <th>Stay_home_restrictions</th>\n",
        "      <th>Internal_movement_restrictions</th>\n",
        "      <th>International_movement_restrictions</th>\n",
        "      <th>Information_campaigns</th>\n",
        "      <th>Testing_policy</th>\n",
        "      <th>Contact_tracing</th>\n",
        "      <th>Stringency_index</th>\n",
        "    </tr>\n",
        "  </thead>\n",
        "  <tbody>\n",
        "    <tr>\n",
        "      <th>0</th>\n",
        "      <td>2020-03-28</td>\n",
        "      <td>Honduras</td>\n",
        "      <td>0.0178491</td>\n",
        "      <td>0.000533738</td>\n",
        "      <td>0.0177212</td>\n",
        "      <td>0.00126538</td>\n",
        "      <td>0.018</td>\n",
        "      <td>468</td>\n",
        "      <td>14</td>\n",
        "      <td>197</td>\n",
        "      <td>...</td>\n",
        "      <td>2</td>\n",
        "      <td>4</td>\n",
        "      <td>2</td>\n",
        "      <td>3</td>\n",
        "      <td>2</td>\n",
        "      <td>4</td>\n",
        "      <td>2</td>\n",
        "      <td>1</td>\n",
        "      <td>1</td>\n",
        "      <td>100.0</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>1</th>\n",
        "      <td>2020-03-29</td>\n",
        "      <td>Honduras</td>\n",
        "      <td>0.0178491</td>\n",
        "      <td>0.000533738</td>\n",
        "      <td>0.0177212</td>\n",
        "      <td>0.00126538</td>\n",
        "      <td>0.018</td>\n",
        "      <td>468</td>\n",
        "      <td>14</td>\n",
        "      <td>197</td>\n",
        "      <td>...</td>\n",
        "      <td>2</td>\n",
        "      <td>4</td>\n",
        "      <td>2</td>\n",
        "      <td>3</td>\n",
        "      <td>2</td>\n",
        "      <td>4</td>\n",
        "      <td>2</td>\n",
        "      <td>1</td>\n",
        "      <td>1</td>\n",
        "      <td>100.0</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>2</th>\n",
        "      <td>2020-03-30</td>\n",
        "      <td>Honduras</td>\n",
        "      <td>0.0178491</td>\n",
        "      <td>0.000533738</td>\n",
        "      <td>0.0177212</td>\n",
        "      <td>0.00126538</td>\n",
        "      <td>0.018</td>\n",
        "      <td>468</td>\n",
        "      <td>14</td>\n",
        "      <td>197</td>\n",
        "      <td>...</td>\n",
        "      <td>2</td>\n",
        "      <td>4</td>\n",
        "      <td>2</td>\n",
        "      <td>3</td>\n",
        "      <td>2</td>\n",
        "      <td>4</td>\n",
        "      <td>2</td>\n",
        "      <td>1</td>\n",
        "      <td>1</td>\n",
        "      <td>100.0</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>3</th>\n",
        "      <td>2020-03-31</td>\n",
        "      <td>Honduras</td>\n",
        "      <td>0.0178491</td>\n",
        "      <td>0.000533738</td>\n",
        "      <td>0.0177212</td>\n",
        "      <td>0.00126538</td>\n",
        "      <td>0.018</td>\n",
        "      <td>468</td>\n",
        "      <td>14</td>\n",
        "      <td>197</td>\n",
        "      <td>...</td>\n",
        "      <td>2</td>\n",
        "      <td>4</td>\n",
        "      <td>2</td>\n",
        "      <td>3</td>\n",
        "      <td>2</td>\n",
        "      <td>4</td>\n",
        "      <td>2</td>\n",
        "      <td>1</td>\n",
        "      <td>1</td>\n",
        "      <td>100.0</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>4</th>\n",
        "      <td>2020-04-01</td>\n",
        "      <td>Honduras</td>\n",
        "      <td>0.0178491</td>\n",
        "      <td>0.000533738</td>\n",
        "      <td>0.0177212</td>\n",
        "      <td>0.00126538</td>\n",
        "      <td>0.018</td>\n",
        "      <td>468</td>\n",
        "      <td>14</td>\n",
        "      <td>197</td>\n",
        "      <td>...</td>\n",
        "      <td>2</td>\n",
        "      <td>4</td>\n",
        "      <td>2</td>\n",
        "      <td>3</td>\n",
        "      <td>2</td>\n",
        "      <td>4</td>\n",
        "      <td>2</td>\n",
        "      <td>1</td>\n",
        "      <td>1</td>\n",
        "      <td>100.0</td>\n",
        "    </tr>\n",
        "  </tbody>\n",
        "</table>\n",
        "<p>5 rows \u00d7 23 columns</p>\n",
        "</div>"
       ],
       "output_type": "pyout",
       "prompt_number": 13,
       "text": [
        "        Date   Country      theta        kappa        rho       sigma  \\\n",
        "0 2020-03-28  Honduras  0.0178491  0.000533738  0.0177212  0.00126538   \n",
        "1 2020-03-29  Honduras  0.0178491  0.000533738  0.0177212  0.00126538   \n",
        "2 2020-03-30  Honduras  0.0178491  0.000533738  0.0177212  0.00126538   \n",
        "3 2020-03-31  Honduras  0.0178491  0.000533738  0.0177212  0.00126538   \n",
        "4 2020-04-01  Honduras  0.0178491  0.000533738  0.0177212  0.00126538   \n",
        "\n",
        "  alpha1 [-] 1/alpha2 [day] 1/beta [day] 1/gamma [day]  ... Cancel_events  \\\n",
        "0      0.018            468           14           197  ...             2   \n",
        "1      0.018            468           14           197  ...             2   \n",
        "2      0.018            468           14           197  ...             2   \n",
        "3      0.018            468           14           197  ...             2   \n",
        "4      0.018            468           14           197  ...             2   \n",
        "\n",
        "   Gatherings_restrictions  Transport_closing  Stay_home_restrictions  \\\n",
        "0                        4                  2                       3   \n",
        "1                        4                  2                       3   \n",
        "2                        4                  2                       3   \n",
        "3                        4                  2                       3   \n",
        "4                        4                  2                       3   \n",
        "\n",
        "   Internal_movement_restrictions  International_movement_restrictions  \\\n",
        "0                               2                                    4   \n",
        "1                               2                                    4   \n",
        "2                               2                                    4   \n",
        "3                               2                                    4   \n",
        "4                               2                                    4   \n",
        "\n",
        "   Information_campaigns  Testing_policy  Contact_tracing  Stringency_index  \n",
        "0                      2               1                1             100.0  \n",
        "1                      2               1                1             100.0  \n",
        "2                      2               1                1             100.0  \n",
        "3                      2               1                1             100.0  \n",
        "4                      2               1                1             100.0  \n",
        "\n",
        "[5 rows x 23 columns]"
       ]
      }
     ],
     "prompt_number": 13
    },
    {
     "cell_type": "heading",
     "level": 3,
     "metadata": {},
     "source": [
      "$Rt$: Reprodcution number $\\mathrm{[-]}$"
     ]
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "analyser.history(\"Rt\", roll_window=None).tail()"
     ],
     "language": "python",
     "metadata": {},
     "outputs": [
      {
       "output_type": "display_data",
       "png": "\n",
       "text": [
        "<Figure size 648x432 with 1 Axes>"
       ]
      },
      {
       "html": [
        "<div>\n",
        "<style scoped>\n",
        "    .dataframe tbody tr th:only-of-type {\n",
        "        vertical-align: middle;\n",
        "    }\n",
        "\n",
        "    .dataframe tbody tr th {\n",
        "        vertical-align: top;\n",
        "    }\n",
        "\n",
        "    .dataframe thead th {\n",
        "        text-align: right;\n",
        "    }\n",
        "</style>\n",
        "<table border=\"1\" class=\"dataframe\">\n",
        "  <thead>\n",
        "    <tr style=\"text-align: right;\">\n",
        "      <th>Country</th>\n",
        "      <th>Belarus</th>\n",
        "      <th>Egypt</th>\n",
        "      <th>France</th>\n",
        "      <th>Honduras</th>\n",
        "      <th>Latvia</th>\n",
        "      <th>Russia</th>\n",
        "      <th>Somalia</th>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>Date</th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "    </tr>\n",
        "  </thead>\n",
        "  <tbody>\n",
        "    <tr>\n",
        "      <th>2020-11-01</th>\n",
        "      <td>1.58</td>\n",
        "      <td>1.89</td>\n",
        "      <td>26.89</td>\n",
        "      <td>0.97</td>\n",
        "      <td>186.26</td>\n",
        "      <td>2.05</td>\n",
        "      <td>0.0</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>2020-11-02</th>\n",
        "      <td>1.58</td>\n",
        "      <td>1.89</td>\n",
        "      <td>26.89</td>\n",
        "      <td>0.97</td>\n",
        "      <td>186.26</td>\n",
        "      <td>2.05</td>\n",
        "      <td>0.0</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>2020-11-03</th>\n",
        "      <td>1.58</td>\n",
        "      <td>1.89</td>\n",
        "      <td>26.89</td>\n",
        "      <td>0.97</td>\n",
        "      <td>186.26</td>\n",
        "      <td>2.05</td>\n",
        "      <td>0.0</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>2020-11-04</th>\n",
        "      <td>1.58</td>\n",
        "      <td>1.89</td>\n",
        "      <td>26.89</td>\n",
        "      <td>0.97</td>\n",
        "      <td>186.26</td>\n",
        "      <td>2.05</td>\n",
        "      <td>0.0</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>2020-11-05</th>\n",
        "      <td>1.58</td>\n",
        "      <td>1.89</td>\n",
        "      <td>26.89</td>\n",
        "      <td>0.97</td>\n",
        "      <td>186.26</td>\n",
        "      <td>2.05</td>\n",
        "      <td>0.0</td>\n",
        "    </tr>\n",
        "  </tbody>\n",
        "</table>\n",
        "</div>"
       ],
       "output_type": "pyout",
       "prompt_number": 14,
       "text": [
        "Country     Belarus  Egypt  France  Honduras  Latvia  Russia  Somalia\n",
        "Date                                                                 \n",
        "2020-11-01     1.58   1.89   26.89      0.97  186.26    2.05      0.0\n",
        "2020-11-02     1.58   1.89   26.89      0.97  186.26    2.05      0.0\n",
        "2020-11-03     1.58   1.89   26.89      0.97  186.26    2.05      0.0\n",
        "2020-11-04     1.58   1.89   26.89      0.97  186.26    2.05      0.0\n",
        "2020-11-05     1.58   1.89   26.89      0.97  186.26    2.05      0.0"
       ]
      }
     ],
     "prompt_number": 14
    },
    {
     "cell_type": "heading",
     "level": 3,
     "metadata": {},
     "source": [
      "$\\rho$: Effective contact rate $\\mathrm{[-]}$"
     ]
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "analyser.history(\"rho\", roll_window=None).tail()"
     ],
     "language": "python",
     "metadata": {},
     "outputs": [
      {
       "output_type": "display_data",
       "png": "\n",
       "text": [
        "<Figure size 648x432 with 1 Axes>"
       ]
      },
      {
       "html": [
        "<div>\n",
        "<style scoped>\n",
        "    .dataframe tbody tr th:only-of-type {\n",
        "        vertical-align: middle;\n",
        "    }\n",
        "\n",
        "    .dataframe tbody tr th {\n",
        "        vertical-align: top;\n",
        "    }\n",
        "\n",
        "    .dataframe thead th {\n",
        "        text-align: right;\n",
        "    }\n",
        "</style>\n",
        "<table border=\"1\" class=\"dataframe\">\n",
        "  <thead>\n",
        "    <tr style=\"text-align: right;\">\n",
        "      <th>Country</th>\n",
        "      <th>Belarus</th>\n",
        "      <th>Egypt</th>\n",
        "      <th>France</th>\n",
        "      <th>Honduras</th>\n",
        "      <th>Latvia</th>\n",
        "      <th>Russia</th>\n",
        "      <th>Somalia</th>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>Date</th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "    </tr>\n",
        "  </thead>\n",
        "  <tbody>\n",
        "    <tr>\n",
        "      <th>2020-11-01</th>\n",
        "      <td>0.024243</td>\n",
        "      <td>0.034564</td>\n",
        "      <td>0.00778</td>\n",
        "      <td>0.001486</td>\n",
        "      <td>0.008526</td>\n",
        "      <td>0.001934</td>\n",
        "      <td>0.0</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>2020-11-02</th>\n",
        "      <td>0.024243</td>\n",
        "      <td>0.034564</td>\n",
        "      <td>0.00778</td>\n",
        "      <td>0.001486</td>\n",
        "      <td>0.008526</td>\n",
        "      <td>0.001934</td>\n",
        "      <td>0.0</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>2020-11-03</th>\n",
        "      <td>0.024243</td>\n",
        "      <td>0.034564</td>\n",
        "      <td>0.00778</td>\n",
        "      <td>0.001486</td>\n",
        "      <td>0.008526</td>\n",
        "      <td>0.001934</td>\n",
        "      <td>0.0</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>2020-11-04</th>\n",
        "      <td>0.024243</td>\n",
        "      <td>0.034564</td>\n",
        "      <td>0.00778</td>\n",
        "      <td>0.001486</td>\n",
        "      <td>0.008526</td>\n",
        "      <td>0.001934</td>\n",
        "      <td>0.0</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>2020-11-05</th>\n",
        "      <td>0.024243</td>\n",
        "      <td>0.034564</td>\n",
        "      <td>0.00778</td>\n",
        "      <td>0.001486</td>\n",
        "      <td>0.008526</td>\n",
        "      <td>0.001934</td>\n",
        "      <td>0.0</td>\n",
        "    </tr>\n",
        "  </tbody>\n",
        "</table>\n",
        "</div>"
       ],
       "output_type": "pyout",
       "prompt_number": 15,
       "text": [
        "Country      Belarus     Egypt   France  Honduras    Latvia    Russia  Somalia\n",
        "Date                                                                          \n",
        "2020-11-01  0.024243  0.034564  0.00778  0.001486  0.008526  0.001934      0.0\n",
        "2020-11-02  0.024243  0.034564  0.00778  0.001486  0.008526  0.001934      0.0\n",
        "2020-11-03  0.024243  0.034564  0.00778  0.001486  0.008526  0.001934      0.0\n",
        "2020-11-04  0.024243  0.034564  0.00778  0.001486  0.008526  0.001934      0.0\n",
        "2020-11-05  0.024243  0.034564  0.00778  0.001486  0.008526  0.001934      0.0"
       ]
      }
     ],
     "prompt_number": 15
    },
    {
     "cell_type": "heading",
     "level": 3,
     "metadata": {},
     "source": [
      "$\\sigma$: Recovery rate $\\mathrm{[-]}$"
     ]
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "analyser.history(\"sigma\", roll_window=None).tail()"
     ],
     "language": "python",
     "metadata": {},
     "outputs": [
      {
       "output_type": "display_data",
       "png": "\n",
       "text": [
        "<Figure size 648x432 with 1 Axes>"
       ]
      },
      {
       "html": [
        "<div>\n",
        "<style scoped>\n",
        "    .dataframe tbody tr th:only-of-type {\n",
        "        vertical-align: middle;\n",
        "    }\n",
        "\n",
        "    .dataframe tbody tr th {\n",
        "        vertical-align: top;\n",
        "    }\n",
        "\n",
        "    .dataframe thead th {\n",
        "        text-align: right;\n",
        "    }\n",
        "</style>\n",
        "<table border=\"1\" class=\"dataframe\">\n",
        "  <thead>\n",
        "    <tr style=\"text-align: right;\">\n",
        "      <th>Country</th>\n",
        "      <th>Belarus</th>\n",
        "      <th>Egypt</th>\n",
        "      <th>France</th>\n",
        "      <th>Honduras</th>\n",
        "      <th>Latvia</th>\n",
        "      <th>Russia</th>\n",
        "      <th>Somalia</th>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>Date</th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "    </tr>\n",
        "  </thead>\n",
        "  <tbody>\n",
        "    <tr>\n",
        "      <th>2020-11-01</th>\n",
        "      <td>0.015262</td>\n",
        "      <td>0.016493</td>\n",
        "      <td>0.000243</td>\n",
        "      <td>0.001485</td>\n",
        "      <td>0.0</td>\n",
        "      <td>0.000918</td>\n",
        "      <td>0.0</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>2020-11-02</th>\n",
        "      <td>0.015262</td>\n",
        "      <td>0.016493</td>\n",
        "      <td>0.000243</td>\n",
        "      <td>0.001485</td>\n",
        "      <td>0.0</td>\n",
        "      <td>0.000918</td>\n",
        "      <td>0.0</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>2020-11-03</th>\n",
        "      <td>0.015262</td>\n",
        "      <td>0.016493</td>\n",
        "      <td>0.000243</td>\n",
        "      <td>0.001485</td>\n",
        "      <td>0.0</td>\n",
        "      <td>0.000918</td>\n",
        "      <td>0.0</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>2020-11-04</th>\n",
        "      <td>0.015262</td>\n",
        "      <td>0.016493</td>\n",
        "      <td>0.000243</td>\n",
        "      <td>0.001485</td>\n",
        "      <td>0.0</td>\n",
        "      <td>0.000918</td>\n",
        "      <td>0.0</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>2020-11-05</th>\n",
        "      <td>0.015262</td>\n",
        "      <td>0.016493</td>\n",
        "      <td>0.000243</td>\n",
        "      <td>0.001485</td>\n",
        "      <td>0.0</td>\n",
        "      <td>0.000918</td>\n",
        "      <td>0.0</td>\n",
        "    </tr>\n",
        "  </tbody>\n",
        "</table>\n",
        "</div>"
       ],
       "output_type": "pyout",
       "prompt_number": 16,
       "text": [
        "Country      Belarus     Egypt    France  Honduras  Latvia    Russia  Somalia\n",
        "Date                                                                         \n",
        "2020-11-01  0.015262  0.016493  0.000243  0.001485     0.0  0.000918      0.0\n",
        "2020-11-02  0.015262  0.016493  0.000243  0.001485     0.0  0.000918      0.0\n",
        "2020-11-03  0.015262  0.016493  0.000243  0.001485     0.0  0.000918      0.0\n",
        "2020-11-04  0.015262  0.016493  0.000243  0.001485     0.0  0.000918      0.0\n",
        "2020-11-05  0.015262  0.016493  0.000243  0.001485     0.0  0.000918      0.0"
       ]
      }
     ],
     "prompt_number": 16
    },
    {
     "cell_type": "heading",
     "level": 3,
     "metadata": {},
     "source": [
      "$\\kappa$: Mortality rate of infected cases $\\mathrm{[-]}$"
     ]
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "analyser.history(\"kappa\", roll_window=None).tail()"
     ],
     "language": "python",
     "metadata": {},
     "outputs": [
      {
       "output_type": "display_data",
       "png": "\n",
       "text": [
        "<Figure size 648x432 with 1 Axes>"
       ]
      },
      {
       "html": [
        "<div>\n",
        "<style scoped>\n",
        "    .dataframe tbody tr th:only-of-type {\n",
        "        vertical-align: middle;\n",
        "    }\n",
        "\n",
        "    .dataframe tbody tr th {\n",
        "        vertical-align: top;\n",
        "    }\n",
        "\n",
        "    .dataframe thead th {\n",
        "        text-align: right;\n",
        "    }\n",
        "</style>\n",
        "<table border=\"1\" class=\"dataframe\">\n",
        "  <thead>\n",
        "    <tr style=\"text-align: right;\">\n",
        "      <th>Country</th>\n",
        "      <th>Belarus</th>\n",
        "      <th>Egypt</th>\n",
        "      <th>France</th>\n",
        "      <th>Honduras</th>\n",
        "      <th>Latvia</th>\n",
        "      <th>Russia</th>\n",
        "      <th>Somalia</th>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>Date</th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "    </tr>\n",
        "  </thead>\n",
        "  <tbody>\n",
        "    <tr>\n",
        "      <th>2020-11-01</th>\n",
        "      <td>0.000117</td>\n",
        "      <td>0.000523</td>\n",
        "      <td>0.000046</td>\n",
        "      <td>0.000049</td>\n",
        "      <td>0.000046</td>\n",
        "      <td>0.000025</td>\n",
        "      <td>0.000153</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>2020-11-02</th>\n",
        "      <td>0.000117</td>\n",
        "      <td>0.000523</td>\n",
        "      <td>0.000046</td>\n",
        "      <td>0.000049</td>\n",
        "      <td>0.000046</td>\n",
        "      <td>0.000025</td>\n",
        "      <td>0.000153</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>2020-11-03</th>\n",
        "      <td>0.000117</td>\n",
        "      <td>0.000523</td>\n",
        "      <td>0.000046</td>\n",
        "      <td>0.000049</td>\n",
        "      <td>0.000046</td>\n",
        "      <td>0.000025</td>\n",
        "      <td>0.000153</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>2020-11-04</th>\n",
        "      <td>0.000117</td>\n",
        "      <td>0.000523</td>\n",
        "      <td>0.000046</td>\n",
        "      <td>0.000049</td>\n",
        "      <td>0.000046</td>\n",
        "      <td>0.000025</td>\n",
        "      <td>0.000153</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>2020-11-05</th>\n",
        "      <td>0.000117</td>\n",
        "      <td>0.000523</td>\n",
        "      <td>0.000046</td>\n",
        "      <td>0.000049</td>\n",
        "      <td>0.000046</td>\n",
        "      <td>0.000025</td>\n",
        "      <td>0.000153</td>\n",
        "    </tr>\n",
        "  </tbody>\n",
        "</table>\n",
        "</div>"
       ],
       "output_type": "pyout",
       "prompt_number": 17,
       "text": [
        "Country      Belarus     Egypt    France  Honduras    Latvia    Russia  \\\n",
        "Date                                                                     \n",
        "2020-11-01  0.000117  0.000523  0.000046  0.000049  0.000046  0.000025   \n",
        "2020-11-02  0.000117  0.000523  0.000046  0.000049  0.000046  0.000025   \n",
        "2020-11-03  0.000117  0.000523  0.000046  0.000049  0.000046  0.000025   \n",
        "2020-11-04  0.000117  0.000523  0.000046  0.000049  0.000046  0.000025   \n",
        "2020-11-05  0.000117  0.000523  0.000046  0.000049  0.000046  0.000025   \n",
        "\n",
        "Country      Somalia  \n",
        "Date                  \n",
        "2020-11-01  0.000153  \n",
        "2020-11-02  0.000153  \n",
        "2020-11-03  0.000153  \n",
        "2020-11-04  0.000153  \n",
        "2020-11-05  0.000153  "
       ]
      }
     ],
     "prompt_number": 17
    },
    {
     "cell_type": "heading",
     "level": 3,
     "metadata": {},
     "source": [
      "$\\theta$: Mortality rate of S$^\\ast$ cases $\\mathrm{[-]}$"
     ]
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "analyser.history(\"theta\", roll_window=None).tail()"
     ],
     "language": "python",
     "metadata": {},
     "outputs": [
      {
       "output_type": "display_data",
       "png": "\n",
       "text": [
        "<Figure size 648x432 with 1 Axes>"
       ]
      },
      {
       "html": [
        "<div>\n",
        "<style scoped>\n",
        "    .dataframe tbody tr th:only-of-type {\n",
        "        vertical-align: middle;\n",
        "    }\n",
        "\n",
        "    .dataframe tbody tr th {\n",
        "        vertical-align: top;\n",
        "    }\n",
        "\n",
        "    .dataframe thead th {\n",
        "        text-align: right;\n",
        "    }\n",
        "</style>\n",
        "<table border=\"1\" class=\"dataframe\">\n",
        "  <thead>\n",
        "    <tr style=\"text-align: right;\">\n",
        "      <th>Country</th>\n",
        "      <th>Belarus</th>\n",
        "      <th>Egypt</th>\n",
        "      <th>France</th>\n",
        "      <th>Honduras</th>\n",
        "      <th>Latvia</th>\n",
        "      <th>Russia</th>\n",
        "      <th>Somalia</th>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>Date</th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "    </tr>\n",
        "  </thead>\n",
        "  <tbody>\n",
        "    <tr>\n",
        "      <th>2020-11-01</th>\n",
        "      <td>0.000636</td>\n",
        "      <td>0.067094</td>\n",
        "      <td>0.001255</td>\n",
        "      <td>0.001075</td>\n",
        "      <td>0.001256</td>\n",
        "      <td>0.001357</td>\n",
        "      <td>0.512286</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>2020-11-02</th>\n",
        "      <td>0.000636</td>\n",
        "      <td>0.067094</td>\n",
        "      <td>0.001255</td>\n",
        "      <td>0.001075</td>\n",
        "      <td>0.001256</td>\n",
        "      <td>0.001357</td>\n",
        "      <td>0.512286</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>2020-11-03</th>\n",
        "      <td>0.000636</td>\n",
        "      <td>0.067094</td>\n",
        "      <td>0.001255</td>\n",
        "      <td>0.001075</td>\n",
        "      <td>0.001256</td>\n",
        "      <td>0.001357</td>\n",
        "      <td>0.512286</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>2020-11-04</th>\n",
        "      <td>0.000636</td>\n",
        "      <td>0.067094</td>\n",
        "      <td>0.001255</td>\n",
        "      <td>0.001075</td>\n",
        "      <td>0.001256</td>\n",
        "      <td>0.001357</td>\n",
        "      <td>0.512286</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>2020-11-05</th>\n",
        "      <td>0.000636</td>\n",
        "      <td>0.067094</td>\n",
        "      <td>0.001255</td>\n",
        "      <td>0.001075</td>\n",
        "      <td>0.001256</td>\n",
        "      <td>0.001357</td>\n",
        "      <td>0.512286</td>\n",
        "    </tr>\n",
        "  </tbody>\n",
        "</table>\n",
        "</div>"
       ],
       "output_type": "pyout",
       "prompt_number": 18,
       "text": [
        "Country      Belarus     Egypt    France  Honduras    Latvia    Russia  \\\n",
        "Date                                                                     \n",
        "2020-11-01  0.000636  0.067094  0.001255  0.001075  0.001256  0.001357   \n",
        "2020-11-02  0.000636  0.067094  0.001255  0.001075  0.001256  0.001357   \n",
        "2020-11-03  0.000636  0.067094  0.001255  0.001075  0.001256  0.001357   \n",
        "2020-11-04  0.000636  0.067094  0.001255  0.001075  0.001256  0.001357   \n",
        "2020-11-05  0.000636  0.067094  0.001255  0.001075  0.001256  0.001357   \n",
        "\n",
        "Country      Somalia  \n",
        "Date                  \n",
        "2020-11-01  0.512286  \n",
        "2020-11-02  0.512286  \n",
        "2020-11-03  0.512286  \n",
        "2020-11-04  0.512286  \n",
        "2020-11-05  0.512286  "
       ]
      }
     ],
     "prompt_number": 18
    },
    {
     "cell_type": "markdown",
     "metadata": {},
     "source": [
      "## (Experimental): Relationship of OxCGRT index and parameter values\n",
      "Government responses will impact on parameter values of ODE models about 14 days later. Here, we will investigate on the relationship of [stringency index (from OxCGRT)](https://github.com/OxCGRT/covid-policy-tracker/blob/master/documentation/index_methodology.md) and reproduction number/model parameters.\n"
     ]
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "%matplotlib inline\n",
      "from matplotlib import pyplot as plt\n",
      "import seaborn as sns\n",
      "import pandas as pd"
     ],
     "language": "python",
     "metadata": {},
     "outputs": [],
     "prompt_number": 19
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "df = analyser.track()\n",
      "param_cols = [\"Rt\", *cs.SIRF.PARAMETERS]\n",
      "oxcgrt_cols = oxcgrt_data.OXCGRT_VARS[:]\n",
      "cols = param_cols + oxcgrt_cols\n",
      "delay = 14\n",
      "\n",
      "for col in param_cols:\n",
      "    df[col] = pd.to_numeric(df[col], errors=\"coerce\")\n",
      "    df[col] = df.groupby(\"Country\")[col].shift(0 - delay)\n",
      "\n",
      "df = df.dropna(how=\"any\")\n",
      "df = df.loc[:, [\"Date\", \"Country\", *cols]]\n",
      "track_df = df.copy()\n",
      "track_df.info()"
     ],
     "language": "python",
     "metadata": {},
     "outputs": [
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "<class 'pandas.core.frame.DataFrame'>\n",
        "Int64Index: 59507 entries, 0 to 59590\n",
        "Data columns (total 19 columns):\n",
        " #   Column                               Non-Null Count  Dtype         \n",
        "---  ------                               --------------  -----         \n",
        " 0   Date                                 59507 non-null  datetime64[ns]\n",
        " 1   Country                              59507 non-null  object        \n",
        " 2   Rt                                   59507 non-null  float64       \n",
        " 3   theta                                59507 non-null  float64       \n",
        " 4   kappa                                59507 non-null  float64       \n",
        " 5   rho                                  59507 non-null  float64       \n",
        " 6   sigma                                59507 non-null  float64       \n",
        " 7   School_closing                       59507 non-null  int64         \n",
        " 8   Workplace_closing                    59507 non-null  int64         \n",
        " 9   Cancel_events                        59507 non-null  int64         \n",
        " 10  Gatherings_restrictions              59507 non-null  int64         \n",
        " 11  Transport_closing                    59507 non-null  int64         \n",
        " 12  Stay_home_restrictions               59507 non-null  int64         \n",
        " 13  Internal_movement_restrictions       59507 non-null  int64         \n",
        " 14  International_movement_restrictions  59507 non-null  int64         \n",
        " 15  Information_campaigns                59507 non-null  int64         \n",
        " 16  Testing_policy                       59507 non-null  int64         \n",
        " 17  Contact_tracing                      59507 non-null  int64         \n",
        " 18  Stringency_index                     59507 non-null  float64       \n",
        "dtypes: datetime64[ns](1), float64(6), int64(11), object(1)\n",
        "memory usage: 9.1+ MB\n"
       ]
      }
     ],
     "prompt_number": 20
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "# Correlation\n",
      "df = track_df.copy()\n",
      "df.corr().style.background_gradient(axis=None)"
     ],
     "language": "python",
     "metadata": {},
     "outputs": [
      {
       "html": [
        "<style  type=\"text/css\" >\n",
        "#T_f7d1fd38_1f6c_11eb_99d8_525400dfa902row0_col0,#T_f7d1fd38_1f6c_11eb_99d8_525400dfa902row1_col1,#T_f7d1fd38_1f6c_11eb_99d8_525400dfa902row2_col2,#T_f7d1fd38_1f6c_11eb_99d8_525400dfa902row3_col3,#T_f7d1fd38_1f6c_11eb_99d8_525400dfa902row4_col4,#T_f7d1fd38_1f6c_11eb_99d8_525400dfa902row5_col5,#T_f7d1fd38_1f6c_11eb_99d8_525400dfa902row6_col6,#T_f7d1fd38_1f6c_11eb_99d8_525400dfa902row7_col7,#T_f7d1fd38_1f6c_11eb_99d8_525400dfa902row8_col8,#T_f7d1fd38_1f6c_11eb_99d8_525400dfa902row9_col9,#T_f7d1fd38_1f6c_11eb_99d8_525400dfa902row10_col10,#T_f7d1fd38_1f6c_11eb_99d8_525400dfa902row11_col11,#T_f7d1fd38_1f6c_11eb_99d8_525400dfa902row12_col12,#T_f7d1fd38_1f6c_11eb_99d8_525400dfa902row13_col13,#T_f7d1fd38_1f6c_11eb_99d8_525400dfa902row14_col14,#T_f7d1fd38_1f6c_11eb_99d8_525400dfa902row15_col15,#T_f7d1fd38_1f6c_11eb_99d8_525400dfa902row16_col16{\n",
        "            background-color:  #023858;\n",
        "            color:  #f1f1f1;\n",
        "        }#T_f7d1fd38_1f6c_11eb_99d8_525400dfa902row0_col1,#T_f7d1fd38_1f6c_11eb_99d8_525400dfa902row1_col0,#T_f7d1fd38_1f6c_11eb_99d8_525400dfa902row1_col7,#T_f7d1fd38_1f6c_11eb_99d8_525400dfa902row3_col8,#T_f7d1fd38_1f6c_11eb_99d8_525400dfa902row7_col1,#T_f7d1fd38_1f6c_11eb_99d8_525400dfa902row8_col3{\n",
        "            background-color:  #e1dfed;\n",
        "            color:  #000000;\n",
        "        }#T_f7d1fd38_1f6c_11eb_99d8_525400dfa902row0_col2,#T_f7d1fd38_1f6c_11eb_99d8_525400dfa902row2_col0,#T_f7d1fd38_1f6c_11eb_99d8_525400dfa902row2_col5,#T_f7d1fd38_1f6c_11eb_99d8_525400dfa902row5_col2{\n",
        "            background-color:  #d5d5e8;\n",
        "            color:  #000000;\n",
        "        }#T_f7d1fd38_1f6c_11eb_99d8_525400dfa902row0_col3,#T_f7d1fd38_1f6c_11eb_99d8_525400dfa902row3_col0,#T_f7d1fd38_1f6c_11eb_99d8_525400dfa902row10_col11,#T_f7d1fd38_1f6c_11eb_99d8_525400dfa902row11_col10{\n",
        "            background-color:  #91b5d6;\n",
        "            color:  #000000;\n",
        "        }#T_f7d1fd38_1f6c_11eb_99d8_525400dfa902row0_col4,#T_f7d1fd38_1f6c_11eb_99d8_525400dfa902row4_col0{\n",
        "            background-color:  #eae6f1;\n",
        "            color:  #000000;\n",
        "        }#T_f7d1fd38_1f6c_11eb_99d8_525400dfa902row0_col5,#T_f7d1fd38_1f6c_11eb_99d8_525400dfa902row5_col0{\n",
        "            background-color:  #e7e3f0;\n",
        "            color:  #000000;\n",
        "        }#T_f7d1fd38_1f6c_11eb_99d8_525400dfa902row0_col6,#T_f7d1fd38_1f6c_11eb_99d8_525400dfa902row6_col0{\n",
        "            background-color:  #dedcec;\n",
        "            color:  #000000;\n",
        "        }#T_f7d1fd38_1f6c_11eb_99d8_525400dfa902row0_col7,#T_f7d1fd38_1f6c_11eb_99d8_525400dfa902row7_col0{\n",
        "            background-color:  #bfc9e1;\n",
        "            color:  #000000;\n",
        "        }#T_f7d1fd38_1f6c_11eb_99d8_525400dfa902row0_col8,#T_f7d1fd38_1f6c_11eb_99d8_525400dfa902row8_col0,#T_f7d1fd38_1f6c_11eb_99d8_525400dfa902row11_col14,#T_f7d1fd38_1f6c_11eb_99d8_525400dfa902row14_col11{\n",
        "            background-color:  #c6cce3;\n",
        "            color:  #000000;\n",
        "        }#T_f7d1fd38_1f6c_11eb_99d8_525400dfa902row0_col9,#T_f7d1fd38_1f6c_11eb_99d8_525400dfa902row9_col0{\n",
        "            background-color:  #80aed2;\n",
        "            color:  #000000;\n",
        "        }#T_f7d1fd38_1f6c_11eb_99d8_525400dfa902row0_col10,#T_f7d1fd38_1f6c_11eb_99d8_525400dfa902row10_col0{\n",
        "            background-color:  #e6e2ef;\n",
        "            color:  #000000;\n",
        "        }#T_f7d1fd38_1f6c_11eb_99d8_525400dfa902row0_col11,#T_f7d1fd38_1f6c_11eb_99d8_525400dfa902row0_col16,#T_f7d1fd38_1f6c_11eb_99d8_525400dfa902row11_col0,#T_f7d1fd38_1f6c_11eb_99d8_525400dfa902row16_col0{\n",
        "            background-color:  #d0d1e6;\n",
        "            color:  #000000;\n",
        "        }#T_f7d1fd38_1f6c_11eb_99d8_525400dfa902row0_col12,#T_f7d1fd38_1f6c_11eb_99d8_525400dfa902row1_col16,#T_f7d1fd38_1f6c_11eb_99d8_525400dfa902row12_col0,#T_f7d1fd38_1f6c_11eb_99d8_525400dfa902row16_col1{\n",
        "            background-color:  #adc1dd;\n",
        "            color:  #000000;\n",
        "        }#T_f7d1fd38_1f6c_11eb_99d8_525400dfa902row0_col13,#T_f7d1fd38_1f6c_11eb_99d8_525400dfa902row13_col0{\n",
        "            background-color:  #b0c2de;\n",
        "            color:  #000000;\n",
        "        }#T_f7d1fd38_1f6c_11eb_99d8_525400dfa902row0_col14,#T_f7d1fd38_1f6c_11eb_99d8_525400dfa902row14_col0{\n",
        "            background-color:  #e8e4f0;\n",
        "            color:  #000000;\n",
        "        }#T_f7d1fd38_1f6c_11eb_99d8_525400dfa902row0_col15,#T_f7d1fd38_1f6c_11eb_99d8_525400dfa902row15_col0{\n",
        "            background-color:  #f1ebf5;\n",
        "            color:  #000000;\n",
        "        }#T_f7d1fd38_1f6c_11eb_99d8_525400dfa902row1_col2,#T_f7d1fd38_1f6c_11eb_99d8_525400dfa902row2_col1{\n",
        "            background-color:  #034c78;\n",
        "            color:  #f1f1f1;\n",
        "        }#T_f7d1fd38_1f6c_11eb_99d8_525400dfa902row1_col3,#T_f7d1fd38_1f6c_11eb_99d8_525400dfa902row3_col1{\n",
        "            background-color:  #0f76b3;\n",
        "            color:  #f1f1f1;\n",
        "        }#T_f7d1fd38_1f6c_11eb_99d8_525400dfa902row1_col4,#T_f7d1fd38_1f6c_11eb_99d8_525400dfa902row4_col1,#T_f7d1fd38_1f6c_11eb_99d8_525400dfa902row7_col11,#T_f7d1fd38_1f6c_11eb_99d8_525400dfa902row11_col7{\n",
        "            background-color:  #8eb3d5;\n",
        "            color:  #000000;\n",
        "        }#T_f7d1fd38_1f6c_11eb_99d8_525400dfa902row1_col5,#T_f7d1fd38_1f6c_11eb_99d8_525400dfa902row5_col1{\n",
        "            background-color:  #d7d6e9;\n",
        "            color:  #000000;\n",
        "        }#T_f7d1fd38_1f6c_11eb_99d8_525400dfa902row1_col6,#T_f7d1fd38_1f6c_11eb_99d8_525400dfa902row6_col1{\n",
        "            background-color:  #d8d7e9;\n",
        "            color:  #000000;\n",
        "        }#T_f7d1fd38_1f6c_11eb_99d8_525400dfa902row1_col8,#T_f7d1fd38_1f6c_11eb_99d8_525400dfa902row3_col5,#T_f7d1fd38_1f6c_11eb_99d8_525400dfa902row5_col3,#T_f7d1fd38_1f6c_11eb_99d8_525400dfa902row8_col1{\n",
        "            background-color:  #ebe6f2;\n",
        "            color:  #000000;\n",
        "        }#T_f7d1fd38_1f6c_11eb_99d8_525400dfa902row1_col9,#T_f7d1fd38_1f6c_11eb_99d8_525400dfa902row9_col1{\n",
        "            background-color:  #e9e5f1;\n",
        "            color:  #000000;\n",
        "        }#T_f7d1fd38_1f6c_11eb_99d8_525400dfa902row1_col10,#T_f7d1fd38_1f6c_11eb_99d8_525400dfa902row10_col1{\n",
        "            background-color:  #d3d4e7;\n",
        "            color:  #000000;\n",
        "        }#T_f7d1fd38_1f6c_11eb_99d8_525400dfa902row1_col11,#T_f7d1fd38_1f6c_11eb_99d8_525400dfa902row4_col13,#T_f7d1fd38_1f6c_11eb_99d8_525400dfa902row9_col16,#T_f7d1fd38_1f6c_11eb_99d8_525400dfa902row11_col1,#T_f7d1fd38_1f6c_11eb_99d8_525400dfa902row13_col4,#T_f7d1fd38_1f6c_11eb_99d8_525400dfa902row16_col9{\n",
        "            background-color:  #cacee5;\n",
        "            color:  #000000;\n",
        "        }#T_f7d1fd38_1f6c_11eb_99d8_525400dfa902row1_col12,#T_f7d1fd38_1f6c_11eb_99d8_525400dfa902row12_col1{\n",
        "            background-color:  #9cb9d9;\n",
        "            color:  #000000;\n",
        "        }#T_f7d1fd38_1f6c_11eb_99d8_525400dfa902row1_col13,#T_f7d1fd38_1f6c_11eb_99d8_525400dfa902row13_col1{\n",
        "            background-color:  #ede8f3;\n",
        "            color:  #000000;\n",
        "        }#T_f7d1fd38_1f6c_11eb_99d8_525400dfa902row1_col14,#T_f7d1fd38_1f6c_11eb_99d8_525400dfa902row2_col7,#T_f7d1fd38_1f6c_11eb_99d8_525400dfa902row7_col2,#T_f7d1fd38_1f6c_11eb_99d8_525400dfa902row14_col1{\n",
        "            background-color:  #ced0e6;\n",
        "            color:  #000000;\n",
        "        }#T_f7d1fd38_1f6c_11eb_99d8_525400dfa902row1_col15,#T_f7d1fd38_1f6c_11eb_99d8_525400dfa902row15_col1{\n",
        "            background-color:  #acc0dd;\n",
        "            color:  #000000;\n",
        "        }#T_f7d1fd38_1f6c_11eb_99d8_525400dfa902row2_col3,#T_f7d1fd38_1f6c_11eb_99d8_525400dfa902row3_col2,#T_f7d1fd38_1f6c_11eb_99d8_525400dfa902row14_col15,#T_f7d1fd38_1f6c_11eb_99d8_525400dfa902row15_col14{\n",
        "            background-color:  #045f95;\n",
        "            color:  #f1f1f1;\n",
        "        }#T_f7d1fd38_1f6c_11eb_99d8_525400dfa902row2_col4,#T_f7d1fd38_1f6c_11eb_99d8_525400dfa902row4_col2,#T_f7d1fd38_1f6c_11eb_99d8_525400dfa902row4_col7,#T_f7d1fd38_1f6c_11eb_99d8_525400dfa902row7_col4{\n",
        "            background-color:  #89b1d4;\n",
        "            color:  #000000;\n",
        "        }#T_f7d1fd38_1f6c_11eb_99d8_525400dfa902row2_col6,#T_f7d1fd38_1f6c_11eb_99d8_525400dfa902row2_col14,#T_f7d1fd38_1f6c_11eb_99d8_525400dfa902row6_col2,#T_f7d1fd38_1f6c_11eb_99d8_525400dfa902row14_col2{\n",
        "            background-color:  #d6d6e9;\n",
        "            color:  #000000;\n",
        "        }#T_f7d1fd38_1f6c_11eb_99d8_525400dfa902row2_col8,#T_f7d1fd38_1f6c_11eb_99d8_525400dfa902row8_col2,#T_f7d1fd38_1f6c_11eb_99d8_525400dfa902row9_col12,#T_f7d1fd38_1f6c_11eb_99d8_525400dfa902row12_col9{\n",
        "            background-color:  #e0dded;\n",
        "            color:  #000000;\n",
        "        }#T_f7d1fd38_1f6c_11eb_99d8_525400dfa902row2_col9,#T_f7d1fd38_1f6c_11eb_99d8_525400dfa902row9_col2{\n",
        "            background-color:  #fbf3f9;\n",
        "            color:  #000000;\n",
        "        }#T_f7d1fd38_1f6c_11eb_99d8_525400dfa902row2_col10,#T_f7d1fd38_1f6c_11eb_99d8_525400dfa902row2_col15,#T_f7d1fd38_1f6c_11eb_99d8_525400dfa902row10_col2,#T_f7d1fd38_1f6c_11eb_99d8_525400dfa902row15_col2{\n",
        "            background-color:  #c1cae2;\n",
        "            color:  #000000;\n",
        "        }#T_f7d1fd38_1f6c_11eb_99d8_525400dfa902row2_col11,#T_f7d1fd38_1f6c_11eb_99d8_525400dfa902row11_col2{\n",
        "            background-color:  #c5cce3;\n",
        "            color:  #000000;\n",
        "        }#T_f7d1fd38_1f6c_11eb_99d8_525400dfa902row2_col12,#T_f7d1fd38_1f6c_11eb_99d8_525400dfa902row12_col2{\n",
        "            background-color:  #75a9cf;\n",
        "            color:  #000000;\n",
        "        }#T_f7d1fd38_1f6c_11eb_99d8_525400dfa902row2_col13,#T_f7d1fd38_1f6c_11eb_99d8_525400dfa902row13_col2{\n",
        "            background-color:  #f5eff6;\n",
        "            color:  #000000;\n",
        "        }#T_f7d1fd38_1f6c_11eb_99d8_525400dfa902row2_col16,#T_f7d1fd38_1f6c_11eb_99d8_525400dfa902row8_col9,#T_f7d1fd38_1f6c_11eb_99d8_525400dfa902row9_col8,#T_f7d1fd38_1f6c_11eb_99d8_525400dfa902row16_col2{\n",
        "            background-color:  #a8bedc;\n",
        "            color:  #000000;\n",
        "        }#T_f7d1fd38_1f6c_11eb_99d8_525400dfa902row3_col4,#T_f7d1fd38_1f6c_11eb_99d8_525400dfa902row4_col3{\n",
        "            background-color:  #7eadd1;\n",
        "            color:  #000000;\n",
        "        }#T_f7d1fd38_1f6c_11eb_99d8_525400dfa902row3_col6,#T_f7d1fd38_1f6c_11eb_99d8_525400dfa902row6_col3{\n",
        "            background-color:  #eee9f3;\n",
        "            color:  #000000;\n",
        "        }#T_f7d1fd38_1f6c_11eb_99d8_525400dfa902row3_col7,#T_f7d1fd38_1f6c_11eb_99d8_525400dfa902row7_col3{\n",
        "            background-color:  #cdd0e5;\n",
        "            color:  #000000;\n",
        "        }#T_f7d1fd38_1f6c_11eb_99d8_525400dfa902row3_col9,#T_f7d1fd38_1f6c_11eb_99d8_525400dfa902row3_col13,#T_f7d1fd38_1f6c_11eb_99d8_525400dfa902row9_col3,#T_f7d1fd38_1f6c_11eb_99d8_525400dfa902row13_col3{\n",
        "            background-color:  #fff7fb;\n",
        "            color:  #000000;\n",
        "        }#T_f7d1fd38_1f6c_11eb_99d8_525400dfa902row3_col10,#T_f7d1fd38_1f6c_11eb_99d8_525400dfa902row10_col3{\n",
        "            background-color:  #dad9ea;\n",
        "            color:  #000000;\n",
        "        }#T_f7d1fd38_1f6c_11eb_99d8_525400dfa902row3_col11,#T_f7d1fd38_1f6c_11eb_99d8_525400dfa902row3_col16,#T_f7d1fd38_1f6c_11eb_99d8_525400dfa902row7_col9,#T_f7d1fd38_1f6c_11eb_99d8_525400dfa902row9_col7,#T_f7d1fd38_1f6c_11eb_99d8_525400dfa902row11_col3,#T_f7d1fd38_1f6c_11eb_99d8_525400dfa902row16_col3{\n",
        "            background-color:  #b7c5df;\n",
        "            color:  #000000;\n",
        "        }#T_f7d1fd38_1f6c_11eb_99d8_525400dfa902row3_col12,#T_f7d1fd38_1f6c_11eb_99d8_525400dfa902row12_col3{\n",
        "            background-color:  #84b0d3;\n",
        "            color:  #000000;\n",
        "        }#T_f7d1fd38_1f6c_11eb_99d8_525400dfa902row3_col14,#T_f7d1fd38_1f6c_11eb_99d8_525400dfa902row14_col3{\n",
        "            background-color:  #f7f0f7;\n",
        "            color:  #000000;\n",
        "        }#T_f7d1fd38_1f6c_11eb_99d8_525400dfa902row3_col15,#T_f7d1fd38_1f6c_11eb_99d8_525400dfa902row15_col3{\n",
        "            background-color:  #f2ecf5;\n",
        "            color:  #000000;\n",
        "        }#T_f7d1fd38_1f6c_11eb_99d8_525400dfa902row4_col5,#T_f7d1fd38_1f6c_11eb_99d8_525400dfa902row4_col12,#T_f7d1fd38_1f6c_11eb_99d8_525400dfa902row5_col4,#T_f7d1fd38_1f6c_11eb_99d8_525400dfa902row12_col4{\n",
        "            background-color:  #88b1d4;\n",
        "            color:  #000000;\n",
        "        }#T_f7d1fd38_1f6c_11eb_99d8_525400dfa902row4_col6,#T_f7d1fd38_1f6c_11eb_99d8_525400dfa902row6_col4{\n",
        "            background-color:  #8cb3d5;\n",
        "            color:  #000000;\n",
        "        }#T_f7d1fd38_1f6c_11eb_99d8_525400dfa902row4_col8,#T_f7d1fd38_1f6c_11eb_99d8_525400dfa902row8_col4,#T_f7d1fd38_1f6c_11eb_99d8_525400dfa902row11_col13,#T_f7d1fd38_1f6c_11eb_99d8_525400dfa902row13_col11{\n",
        "            background-color:  #94b6d7;\n",
        "            color:  #000000;\n",
        "        }#T_f7d1fd38_1f6c_11eb_99d8_525400dfa902row4_col9,#T_f7d1fd38_1f6c_11eb_99d8_525400dfa902row9_col4{\n",
        "            background-color:  #f4edf6;\n",
        "            color:  #000000;\n",
        "        }#T_f7d1fd38_1f6c_11eb_99d8_525400dfa902row4_col10,#T_f7d1fd38_1f6c_11eb_99d8_525400dfa902row7_col14,#T_f7d1fd38_1f6c_11eb_99d8_525400dfa902row10_col4,#T_f7d1fd38_1f6c_11eb_99d8_525400dfa902row14_col7{\n",
        "            background-color:  #79abd0;\n",
        "            color:  #000000;\n",
        "        }#T_f7d1fd38_1f6c_11eb_99d8_525400dfa902row4_col11,#T_f7d1fd38_1f6c_11eb_99d8_525400dfa902row11_col4{\n",
        "            background-color:  #8bb2d4;\n",
        "            color:  #000000;\n",
        "        }#T_f7d1fd38_1f6c_11eb_99d8_525400dfa902row4_col14,#T_f7d1fd38_1f6c_11eb_99d8_525400dfa902row14_col4{\n",
        "            background-color:  #a1bbda;\n",
        "            color:  #000000;\n",
        "        }#T_f7d1fd38_1f6c_11eb_99d8_525400dfa902row4_col15,#T_f7d1fd38_1f6c_11eb_99d8_525400dfa902row12_col15,#T_f7d1fd38_1f6c_11eb_99d8_525400dfa902row15_col4,#T_f7d1fd38_1f6c_11eb_99d8_525400dfa902row15_col12{\n",
        "            background-color:  #97b7d7;\n",
        "            color:  #000000;\n",
        "        }#T_f7d1fd38_1f6c_11eb_99d8_525400dfa902row4_col16,#T_f7d1fd38_1f6c_11eb_99d8_525400dfa902row11_col16,#T_f7d1fd38_1f6c_11eb_99d8_525400dfa902row16_col4,#T_f7d1fd38_1f6c_11eb_99d8_525400dfa902row16_col11{\n",
        "            background-color:  #6fa7ce;\n",
        "            color:  #000000;\n",
        "        }#T_f7d1fd38_1f6c_11eb_99d8_525400dfa902row5_col6,#T_f7d1fd38_1f6c_11eb_99d8_525400dfa902row6_col5{\n",
        "            background-color:  #03456c;\n",
        "            color:  #f1f1f1;\n",
        "        }#T_f7d1fd38_1f6c_11eb_99d8_525400dfa902row5_col7,#T_f7d1fd38_1f6c_11eb_99d8_525400dfa902row7_col5,#T_f7d1fd38_1f6c_11eb_99d8_525400dfa902row7_col10,#T_f7d1fd38_1f6c_11eb_99d8_525400dfa902row10_col7{\n",
        "            background-color:  #04588a;\n",
        "            color:  #f1f1f1;\n",
        "        }#T_f7d1fd38_1f6c_11eb_99d8_525400dfa902row5_col8,#T_f7d1fd38_1f6c_11eb_99d8_525400dfa902row8_col5,#T_f7d1fd38_1f6c_11eb_99d8_525400dfa902row8_col10,#T_f7d1fd38_1f6c_11eb_99d8_525400dfa902row10_col8{\n",
        "            background-color:  #045c90;\n",
        "            color:  #f1f1f1;\n",
        "        }#T_f7d1fd38_1f6c_11eb_99d8_525400dfa902row5_col9,#T_f7d1fd38_1f6c_11eb_99d8_525400dfa902row9_col5{\n",
        "            background-color:  #abbfdc;\n",
        "            color:  #000000;\n",
        "        }#T_f7d1fd38_1f6c_11eb_99d8_525400dfa902row5_col10,#T_f7d1fd38_1f6c_11eb_99d8_525400dfa902row6_col10,#T_f7d1fd38_1f6c_11eb_99d8_525400dfa902row10_col5,#T_f7d1fd38_1f6c_11eb_99d8_525400dfa902row10_col6{\n",
        "            background-color:  #034973;\n",
        "            color:  #f1f1f1;\n",
        "        }#T_f7d1fd38_1f6c_11eb_99d8_525400dfa902row5_col11,#T_f7d1fd38_1f6c_11eb_99d8_525400dfa902row11_col5,#T_f7d1fd38_1f6c_11eb_99d8_525400dfa902row14_col16,#T_f7d1fd38_1f6c_11eb_99d8_525400dfa902row16_col14{\n",
        "            background-color:  #9ebad9;\n",
        "            color:  #000000;\n",
        "        }#T_f7d1fd38_1f6c_11eb_99d8_525400dfa902row5_col12,#T_f7d1fd38_1f6c_11eb_99d8_525400dfa902row12_col5{\n",
        "            background-color:  #2d8abd;\n",
        "            color:  #000000;\n",
        "        }#T_f7d1fd38_1f6c_11eb_99d8_525400dfa902row5_col13,#T_f7d1fd38_1f6c_11eb_99d8_525400dfa902row6_col13,#T_f7d1fd38_1f6c_11eb_99d8_525400dfa902row13_col5,#T_f7d1fd38_1f6c_11eb_99d8_525400dfa902row13_col6{\n",
        "            background-color:  #0568a3;\n",
        "            color:  #f1f1f1;\n",
        "        }#T_f7d1fd38_1f6c_11eb_99d8_525400dfa902row5_col14,#T_f7d1fd38_1f6c_11eb_99d8_525400dfa902row14_col5{\n",
        "            background-color:  #3790c0;\n",
        "            color:  #000000;\n",
        "        }#T_f7d1fd38_1f6c_11eb_99d8_525400dfa902row5_col15,#T_f7d1fd38_1f6c_11eb_99d8_525400dfa902row8_col12,#T_f7d1fd38_1f6c_11eb_99d8_525400dfa902row12_col8,#T_f7d1fd38_1f6c_11eb_99d8_525400dfa902row15_col5{\n",
        "            background-color:  #157ab5;\n",
        "            color:  #000000;\n",
        "        }#T_f7d1fd38_1f6c_11eb_99d8_525400dfa902row5_col16,#T_f7d1fd38_1f6c_11eb_99d8_525400dfa902row16_col5{\n",
        "            background-color:  #046096;\n",
        "            color:  #f1f1f1;\n",
        "        }#T_f7d1fd38_1f6c_11eb_99d8_525400dfa902row6_col7,#T_f7d1fd38_1f6c_11eb_99d8_525400dfa902row7_col6,#T_f7d1fd38_1f6c_11eb_99d8_525400dfa902row7_col16,#T_f7d1fd38_1f6c_11eb_99d8_525400dfa902row16_col7{\n",
        "            background-color:  #045b8e;\n",
        "            color:  #f1f1f1;\n",
        "        }#T_f7d1fd38_1f6c_11eb_99d8_525400dfa902row6_col8,#T_f7d1fd38_1f6c_11eb_99d8_525400dfa902row8_col6{\n",
        "            background-color:  #045d92;\n",
        "            color:  #f1f1f1;\n",
        "        }#T_f7d1fd38_1f6c_11eb_99d8_525400dfa902row6_col9,#T_f7d1fd38_1f6c_11eb_99d8_525400dfa902row9_col6{\n",
        "            background-color:  #a5bddb;\n",
        "            color:  #000000;\n",
        "        }#T_f7d1fd38_1f6c_11eb_99d8_525400dfa902row6_col11,#T_f7d1fd38_1f6c_11eb_99d8_525400dfa902row11_col6{\n",
        "            background-color:  #b3c3de;\n",
        "            color:  #000000;\n",
        "        }#T_f7d1fd38_1f6c_11eb_99d8_525400dfa902row6_col12,#T_f7d1fd38_1f6c_11eb_99d8_525400dfa902row12_col6{\n",
        "            background-color:  #3d93c2;\n",
        "            color:  #000000;\n",
        "        }#T_f7d1fd38_1f6c_11eb_99d8_525400dfa902row6_col14,#T_f7d1fd38_1f6c_11eb_99d8_525400dfa902row14_col6{\n",
        "            background-color:  #2a88bc;\n",
        "            color:  #000000;\n",
        "        }#T_f7d1fd38_1f6c_11eb_99d8_525400dfa902row6_col15,#T_f7d1fd38_1f6c_11eb_99d8_525400dfa902row15_col6{\n",
        "            background-color:  #1077b4;\n",
        "            color:  #f1f1f1;\n",
        "        }#T_f7d1fd38_1f6c_11eb_99d8_525400dfa902row6_col16,#T_f7d1fd38_1f6c_11eb_99d8_525400dfa902row16_col6{\n",
        "            background-color:  #046299;\n",
        "            color:  #f1f1f1;\n",
        "        }#T_f7d1fd38_1f6c_11eb_99d8_525400dfa902row7_col8,#T_f7d1fd38_1f6c_11eb_99d8_525400dfa902row8_col7{\n",
        "            background-color:  #045e94;\n",
        "            color:  #f1f1f1;\n",
        "        }#T_f7d1fd38_1f6c_11eb_99d8_525400dfa902row7_col12,#T_f7d1fd38_1f6c_11eb_99d8_525400dfa902row12_col7{\n",
        "            background-color:  #056ead;\n",
        "            color:  #f1f1f1;\n",
        "        }#T_f7d1fd38_1f6c_11eb_99d8_525400dfa902row7_col13,#T_f7d1fd38_1f6c_11eb_99d8_525400dfa902row13_col7{\n",
        "            background-color:  #056ba9;\n",
        "            color:  #f1f1f1;\n",
        "        }#T_f7d1fd38_1f6c_11eb_99d8_525400dfa902row7_col15,#T_f7d1fd38_1f6c_11eb_99d8_525400dfa902row15_col7,#T_f7d1fd38_1f6c_11eb_99d8_525400dfa902row15_col16,#T_f7d1fd38_1f6c_11eb_99d8_525400dfa902row16_col15{\n",
        "            background-color:  #509ac6;\n",
        "            color:  #000000;\n",
        "        }#T_f7d1fd38_1f6c_11eb_99d8_525400dfa902row8_col11,#T_f7d1fd38_1f6c_11eb_99d8_525400dfa902row11_col8{\n",
        "            background-color:  #81aed2;\n",
        "            color:  #000000;\n",
        "        }#T_f7d1fd38_1f6c_11eb_99d8_525400dfa902row8_col13,#T_f7d1fd38_1f6c_11eb_99d8_525400dfa902row13_col8{\n",
        "            background-color:  #0d75b3;\n",
        "            color:  #f1f1f1;\n",
        "        }#T_f7d1fd38_1f6c_11eb_99d8_525400dfa902row8_col14,#T_f7d1fd38_1f6c_11eb_99d8_525400dfa902row14_col8{\n",
        "            background-color:  #71a8ce;\n",
        "            color:  #000000;\n",
        "        }#T_f7d1fd38_1f6c_11eb_99d8_525400dfa902row8_col15,#T_f7d1fd38_1f6c_11eb_99d8_525400dfa902row15_col8{\n",
        "            background-color:  #60a1ca;\n",
        "            color:  #000000;\n",
        "        }#T_f7d1fd38_1f6c_11eb_99d8_525400dfa902row8_col16,#T_f7d1fd38_1f6c_11eb_99d8_525400dfa902row16_col8{\n",
        "            background-color:  #0567a2;\n",
        "            color:  #f1f1f1;\n",
        "        }#T_f7d1fd38_1f6c_11eb_99d8_525400dfa902row9_col10,#T_f7d1fd38_1f6c_11eb_99d8_525400dfa902row10_col9{\n",
        "            background-color:  #c0c9e2;\n",
        "            color:  #000000;\n",
        "        }#T_f7d1fd38_1f6c_11eb_99d8_525400dfa902row9_col11,#T_f7d1fd38_1f6c_11eb_99d8_525400dfa902row11_col9{\n",
        "            background-color:  #69a5cc;\n",
        "            color:  #000000;\n",
        "        }#T_f7d1fd38_1f6c_11eb_99d8_525400dfa902row9_col13,#T_f7d1fd38_1f6c_11eb_99d8_525400dfa902row13_col9{\n",
        "            background-color:  #3991c1;\n",
        "            color:  #000000;\n",
        "        }#T_f7d1fd38_1f6c_11eb_99d8_525400dfa902row9_col14,#T_f7d1fd38_1f6c_11eb_99d8_525400dfa902row11_col12,#T_f7d1fd38_1f6c_11eb_99d8_525400dfa902row12_col11,#T_f7d1fd38_1f6c_11eb_99d8_525400dfa902row14_col9{\n",
        "            background-color:  #a2bcda;\n",
        "            color:  #000000;\n",
        "        }#T_f7d1fd38_1f6c_11eb_99d8_525400dfa902row9_col15,#T_f7d1fd38_1f6c_11eb_99d8_525400dfa902row15_col9{\n",
        "            background-color:  #9fbad9;\n",
        "            color:  #000000;\n",
        "        }#T_f7d1fd38_1f6c_11eb_99d8_525400dfa902row10_col12,#T_f7d1fd38_1f6c_11eb_99d8_525400dfa902row10_col14,#T_f7d1fd38_1f6c_11eb_99d8_525400dfa902row12_col10,#T_f7d1fd38_1f6c_11eb_99d8_525400dfa902row14_col10{\n",
        "            background-color:  #308cbe;\n",
        "            color:  #000000;\n",
        "        }#T_f7d1fd38_1f6c_11eb_99d8_525400dfa902row10_col13,#T_f7d1fd38_1f6c_11eb_99d8_525400dfa902row13_col10,#T_f7d1fd38_1f6c_11eb_99d8_525400dfa902row13_col16,#T_f7d1fd38_1f6c_11eb_99d8_525400dfa902row16_col13{\n",
        "            background-color:  #0872b1;\n",
        "            color:  #f1f1f1;\n",
        "        }#T_f7d1fd38_1f6c_11eb_99d8_525400dfa902row10_col15,#T_f7d1fd38_1f6c_11eb_99d8_525400dfa902row15_col10{\n",
        "            background-color:  #2081b9;\n",
        "            color:  #000000;\n",
        "        }#T_f7d1fd38_1f6c_11eb_99d8_525400dfa902row10_col16,#T_f7d1fd38_1f6c_11eb_99d8_525400dfa902row16_col10{\n",
        "            background-color:  #04649e;\n",
        "            color:  #f1f1f1;\n",
        "        }#T_f7d1fd38_1f6c_11eb_99d8_525400dfa902row11_col15,#T_f7d1fd38_1f6c_11eb_99d8_525400dfa902row15_col11{\n",
        "            background-color:  #b1c2de;\n",
        "            color:  #000000;\n",
        "        }#T_f7d1fd38_1f6c_11eb_99d8_525400dfa902row12_col13,#T_f7d1fd38_1f6c_11eb_99d8_525400dfa902row13_col12{\n",
        "            background-color:  #5c9fc9;\n",
        "            color:  #000000;\n",
        "        }#T_f7d1fd38_1f6c_11eb_99d8_525400dfa902row12_col14,#T_f7d1fd38_1f6c_11eb_99d8_525400dfa902row14_col12{\n",
        "            background-color:  #b5c4df;\n",
        "            color:  #000000;\n",
        "        }#T_f7d1fd38_1f6c_11eb_99d8_525400dfa902row12_col16,#T_f7d1fd38_1f6c_11eb_99d8_525400dfa902row16_col12{\n",
        "            background-color:  #0567a1;\n",
        "            color:  #f1f1f1;\n",
        "        }#T_f7d1fd38_1f6c_11eb_99d8_525400dfa902row13_col14,#T_f7d1fd38_1f6c_11eb_99d8_525400dfa902row14_col13{\n",
        "            background-color:  #2c89bd;\n",
        "            color:  #000000;\n",
        "        }#T_f7d1fd38_1f6c_11eb_99d8_525400dfa902row13_col15,#T_f7d1fd38_1f6c_11eb_99d8_525400dfa902row15_col13{\n",
        "            background-color:  #1278b4;\n",
        "            color:  #f1f1f1;\n",
        "        }</style><table id=\"T_f7d1fd38_1f6c_11eb_99d8_525400dfa902\" ><thead>    <tr>        <th class=\"blank level0\" ></th>        <th class=\"col_heading level0 col0\" >Rt</th>        <th class=\"col_heading level0 col1\" >theta</th>        <th class=\"col_heading level0 col2\" >kappa</th>        <th class=\"col_heading level0 col3\" >rho</th>        <th class=\"col_heading level0 col4\" >sigma</th>        <th class=\"col_heading level0 col5\" >School_closing</th>        <th class=\"col_heading level0 col6\" >Workplace_closing</th>        <th class=\"col_heading level0 col7\" >Cancel_events</th>        <th class=\"col_heading level0 col8\" >Gatherings_restrictions</th>        <th class=\"col_heading level0 col9\" >Transport_closing</th>        <th class=\"col_heading level0 col10\" >Stay_home_restrictions</th>        <th class=\"col_heading level0 col11\" >Internal_movement_restrictions</th>        <th class=\"col_heading level0 col12\" >International_movement_restrictions</th>        <th class=\"col_heading level0 col13\" >Information_campaigns</th>        <th class=\"col_heading level0 col14\" >Testing_policy</th>        <th class=\"col_heading level0 col15\" >Contact_tracing</th>        <th class=\"col_heading level0 col16\" >Stringency_index</th>    </tr></thead><tbody>\n",
        "                <tr>\n",
        "                        <th id=\"T_f7d1fd38_1f6c_11eb_99d8_525400dfa902level0_row0\" class=\"row_heading level0 row0\" >Rt</th>\n",
        "                        <td id=\"T_f7d1fd38_1f6c_11eb_99d8_525400dfa902row0_col0\" class=\"data row0 col0\" >1.000000</td>\n",
        "                        <td id=\"T_f7d1fd38_1f6c_11eb_99d8_525400dfa902row0_col1\" class=\"data row0 col1\" >-0.279659</td>\n",
        "                        <td id=\"T_f7d1fd38_1f6c_11eb_99d8_525400dfa902row0_col2\" class=\"data row0 col2\" >-0.194535</td>\n",
        "                        <td id=\"T_f7d1fd38_1f6c_11eb_99d8_525400dfa902row0_col3\" class=\"data row0 col3\" >0.114692</td>\n",
        "                        <td id=\"T_f7d1fd38_1f6c_11eb_99d8_525400dfa902row0_col4\" class=\"data row0 col4\" >-0.343457</td>\n",
        "                        <td id=\"T_f7d1fd38_1f6c_11eb_99d8_525400dfa902row0_col5\" class=\"data row0 col5\" >-0.324534</td>\n",
        "                        <td id=\"T_f7d1fd38_1f6c_11eb_99d8_525400dfa902row0_col6\" class=\"data row0 col6\" >-0.257033</td>\n",
        "                        <td id=\"T_f7d1fd38_1f6c_11eb_99d8_525400dfa902row0_col7\" class=\"data row0 col7\" >-0.080382</td>\n",
        "                        <td id=\"T_f7d1fd38_1f6c_11eb_99d8_525400dfa902row0_col8\" class=\"data row0 col8\" >-0.117581</td>\n",
        "                        <td id=\"T_f7d1fd38_1f6c_11eb_99d8_525400dfa902row0_col9\" class=\"data row0 col9\" >0.180453</td>\n",
        "                        <td id=\"T_f7d1fd38_1f6c_11eb_99d8_525400dfa902row0_col10\" class=\"data row0 col10\" >-0.309551</td>\n",
        "                        <td id=\"T_f7d1fd38_1f6c_11eb_99d8_525400dfa902row0_col11\" class=\"data row0 col11\" >-0.161683</td>\n",
        "                        <td id=\"T_f7d1fd38_1f6c_11eb_99d8_525400dfa902row0_col12\" class=\"data row0 col12\" >-0.003804</td>\n",
        "                        <td id=\"T_f7d1fd38_1f6c_11eb_99d8_525400dfa902row0_col13\" class=\"data row0 col13\" >-0.012763</td>\n",
        "                        <td id=\"T_f7d1fd38_1f6c_11eb_99d8_525400dfa902row0_col14\" class=\"data row0 col14\" >-0.329967</td>\n",
        "                        <td id=\"T_f7d1fd38_1f6c_11eb_99d8_525400dfa902row0_col15\" class=\"data row0 col15\" >-0.406483</td>\n",
        "                        <td id=\"T_f7d1fd38_1f6c_11eb_99d8_525400dfa902row0_col16\" class=\"data row0 col16\" >-0.162152</td>\n",
        "            </tr>\n",
        "            <tr>\n",
        "                        <th id=\"T_f7d1fd38_1f6c_11eb_99d8_525400dfa902level0_row1\" class=\"row_heading level0 row1\" >theta</th>\n",
        "                        <td id=\"T_f7d1fd38_1f6c_11eb_99d8_525400dfa902row1_col0\" class=\"data row1 col0\" >-0.279659</td>\n",
        "                        <td id=\"T_f7d1fd38_1f6c_11eb_99d8_525400dfa902row1_col1\" class=\"data row1 col1\" >1.000000</td>\n",
        "                        <td id=\"T_f7d1fd38_1f6c_11eb_99d8_525400dfa902row1_col2\" class=\"data row1 col2\" >0.878995</td>\n",
        "                        <td id=\"T_f7d1fd38_1f6c_11eb_99d8_525400dfa902row1_col3\" class=\"data row1 col3\" >0.574547</td>\n",
        "                        <td id=\"T_f7d1fd38_1f6c_11eb_99d8_525400dfa902row1_col4\" class=\"data row1 col4\" >0.122721</td>\n",
        "                        <td id=\"T_f7d1fd38_1f6c_11eb_99d8_525400dfa902row1_col5\" class=\"data row1 col5\" >-0.209539</td>\n",
        "                        <td id=\"T_f7d1fd38_1f6c_11eb_99d8_525400dfa902row1_col6\" class=\"data row1 col6\" >-0.214691</td>\n",
        "                        <td id=\"T_f7d1fd38_1f6c_11eb_99d8_525400dfa902row1_col7\" class=\"data row1 col7\" >-0.280758</td>\n",
        "                        <td id=\"T_f7d1fd38_1f6c_11eb_99d8_525400dfa902row1_col8\" class=\"data row1 col8\" >-0.349788</td>\n",
        "                        <td id=\"T_f7d1fd38_1f6c_11eb_99d8_525400dfa902row1_col9\" class=\"data row1 col9\" >-0.336694</td>\n",
        "                        <td id=\"T_f7d1fd38_1f6c_11eb_99d8_525400dfa902row1_col10\" class=\"data row1 col10\" >-0.185153</td>\n",
        "                        <td id=\"T_f7d1fd38_1f6c_11eb_99d8_525400dfa902row1_col11\" class=\"data row1 col11\" >-0.137935</td>\n",
        "                        <td id=\"T_f7d1fd38_1f6c_11eb_99d8_525400dfa902row1_col12\" class=\"data row1 col12\" >0.069551</td>\n",
        "                        <td id=\"T_f7d1fd38_1f6c_11eb_99d8_525400dfa902row1_col13\" class=\"data row1 col13\" >-0.365143</td>\n",
        "                        <td id=\"T_f7d1fd38_1f6c_11eb_99d8_525400dfa902row1_col14\" class=\"data row1 col14\" >-0.153414</td>\n",
        "                        <td id=\"T_f7d1fd38_1f6c_11eb_99d8_525400dfa902row1_col15\" class=\"data row1 col15\" >0.004221</td>\n",
        "                        <td id=\"T_f7d1fd38_1f6c_11eb_99d8_525400dfa902row1_col16\" class=\"data row1 col16\" >-0.001099</td>\n",
        "            </tr>\n",
        "            <tr>\n",
        "                        <th id=\"T_f7d1fd38_1f6c_11eb_99d8_525400dfa902level0_row2\" class=\"row_heading level0 row2\" >kappa</th>\n",
        "                        <td id=\"T_f7d1fd38_1f6c_11eb_99d8_525400dfa902row2_col0\" class=\"data row2 col0\" >-0.194535</td>\n",
        "                        <td id=\"T_f7d1fd38_1f6c_11eb_99d8_525400dfa902row2_col1\" class=\"data row2 col1\" >0.878995</td>\n",
        "                        <td id=\"T_f7d1fd38_1f6c_11eb_99d8_525400dfa902row2_col2\" class=\"data row2 col2\" >1.000000</td>\n",
        "                        <td id=\"T_f7d1fd38_1f6c_11eb_99d8_525400dfa902row2_col3\" class=\"data row2 col3\" >0.761927</td>\n",
        "                        <td id=\"T_f7d1fd38_1f6c_11eb_99d8_525400dfa902row2_col4\" class=\"data row2 col4\" >0.139971</td>\n",
        "                        <td id=\"T_f7d1fd38_1f6c_11eb_99d8_525400dfa902row2_col5\" class=\"data row2 col5\" >-0.197683</td>\n",
        "                        <td id=\"T_f7d1fd38_1f6c_11eb_99d8_525400dfa902row2_col6\" class=\"data row2 col6\" >-0.204545</td>\n",
        "                        <td id=\"T_f7d1fd38_1f6c_11eb_99d8_525400dfa902row2_col7\" class=\"data row2 col7\" >-0.152393</td>\n",
        "                        <td id=\"T_f7d1fd38_1f6c_11eb_99d8_525400dfa902row2_col8\" class=\"data row2 col8\" >-0.266819</td>\n",
        "                        <td id=\"T_f7d1fd38_1f6c_11eb_99d8_525400dfa902row2_col9\" class=\"data row2 col9\" >-0.502678</td>\n",
        "                        <td id=\"T_f7d1fd38_1f6c_11eb_99d8_525400dfa902row2_col10\" class=\"data row2 col10\" >-0.095834</td>\n",
        "                        <td id=\"T_f7d1fd38_1f6c_11eb_99d8_525400dfa902row2_col11\" class=\"data row2 col11\" >-0.113709</td>\n",
        "                        <td id=\"T_f7d1fd38_1f6c_11eb_99d8_525400dfa902row2_col12\" class=\"data row2 col12\" >0.221706</td>\n",
        "                        <td id=\"T_f7d1fd38_1f6c_11eb_99d8_525400dfa902row2_col13\" class=\"data row2 col13\" >-0.449381</td>\n",
        "                        <td id=\"T_f7d1fd38_1f6c_11eb_99d8_525400dfa902row2_col14\" class=\"data row2 col14\" >-0.205434</td>\n",
        "                        <td id=\"T_f7d1fd38_1f6c_11eb_99d8_525400dfa902row2_col15\" class=\"data row2 col15\" >-0.092412</td>\n",
        "                        <td id=\"T_f7d1fd38_1f6c_11eb_99d8_525400dfa902row2_col16\" class=\"data row2 col16\" >0.019260</td>\n",
        "            </tr>\n",
        "            <tr>\n",
        "                        <th id=\"T_f7d1fd38_1f6c_11eb_99d8_525400dfa902level0_row3\" class=\"row_heading level0 row3\" >rho</th>\n",
        "                        <td id=\"T_f7d1fd38_1f6c_11eb_99d8_525400dfa902row3_col0\" class=\"data row3 col0\" >0.114692</td>\n",
        "                        <td id=\"T_f7d1fd38_1f6c_11eb_99d8_525400dfa902row3_col1\" class=\"data row3 col1\" >0.574547</td>\n",
        "                        <td id=\"T_f7d1fd38_1f6c_11eb_99d8_525400dfa902row3_col2\" class=\"data row3 col2\" >0.761927</td>\n",
        "                        <td id=\"T_f7d1fd38_1f6c_11eb_99d8_525400dfa902row3_col3\" class=\"data row3 col3\" >1.000000</td>\n",
        "                        <td id=\"T_f7d1fd38_1f6c_11eb_99d8_525400dfa902row3_col4\" class=\"data row3 col4\" >0.184680</td>\n",
        "                        <td id=\"T_f7d1fd38_1f6c_11eb_99d8_525400dfa902row3_col5\" class=\"data row3 col5\" >-0.350132</td>\n",
        "                        <td id=\"T_f7d1fd38_1f6c_11eb_99d8_525400dfa902row3_col6\" class=\"data row3 col6\" >-0.377775</td>\n",
        "                        <td id=\"T_f7d1fd38_1f6c_11eb_99d8_525400dfa902row3_col7\" class=\"data row3 col7\" >-0.149290</td>\n",
        "                        <td id=\"T_f7d1fd38_1f6c_11eb_99d8_525400dfa902row3_col8\" class=\"data row3 col8\" >-0.281733</td>\n",
        "                        <td id=\"T_f7d1fd38_1f6c_11eb_99d8_525400dfa902row3_col9\" class=\"data row3 col9\" >-0.548343</td>\n",
        "                        <td id=\"T_f7d1fd38_1f6c_11eb_99d8_525400dfa902row3_col10\" class=\"data row3 col10\" >-0.234032</td>\n",
        "                        <td id=\"T_f7d1fd38_1f6c_11eb_99d8_525400dfa902row3_col11\" class=\"data row3 col11\" >-0.046908</td>\n",
        "                        <td id=\"T_f7d1fd38_1f6c_11eb_99d8_525400dfa902row3_col12\" class=\"data row3 col12\" >0.161712</td>\n",
        "                        <td id=\"T_f7d1fd38_1f6c_11eb_99d8_525400dfa902row3_col13\" class=\"data row3 col13\" >-0.550945</td>\n",
        "                        <td id=\"T_f7d1fd38_1f6c_11eb_99d8_525400dfa902row3_col14\" class=\"data row3 col14\" >-0.466454</td>\n",
        "                        <td id=\"T_f7d1fd38_1f6c_11eb_99d8_525400dfa902row3_col15\" class=\"data row3 col15\" >-0.414409</td>\n",
        "                        <td id=\"T_f7d1fd38_1f6c_11eb_99d8_525400dfa902row3_col16\" class=\"data row3 col16\" >-0.044686</td>\n",
        "            </tr>\n",
        "            <tr>\n",
        "                        <th id=\"T_f7d1fd38_1f6c_11eb_99d8_525400dfa902level0_row4\" class=\"row_heading level0 row4\" >sigma</th>\n",
        "                        <td id=\"T_f7d1fd38_1f6c_11eb_99d8_525400dfa902row4_col0\" class=\"data row4 col0\" >-0.343457</td>\n",
        "                        <td id=\"T_f7d1fd38_1f6c_11eb_99d8_525400dfa902row4_col1\" class=\"data row4 col1\" >0.122721</td>\n",
        "                        <td id=\"T_f7d1fd38_1f6c_11eb_99d8_525400dfa902row4_col2\" class=\"data row4 col2\" >0.139971</td>\n",
        "                        <td id=\"T_f7d1fd38_1f6c_11eb_99d8_525400dfa902row4_col3\" class=\"data row4 col3\" >0.184680</td>\n",
        "                        <td id=\"T_f7d1fd38_1f6c_11eb_99d8_525400dfa902row4_col4\" class=\"data row4 col4\" >1.000000</td>\n",
        "                        <td id=\"T_f7d1fd38_1f6c_11eb_99d8_525400dfa902row4_col5\" class=\"data row4 col5\" >0.146096</td>\n",
        "                        <td id=\"T_f7d1fd38_1f6c_11eb_99d8_525400dfa902row4_col6\" class=\"data row4 col6\" >0.128652</td>\n",
        "                        <td id=\"T_f7d1fd38_1f6c_11eb_99d8_525400dfa902row4_col7\" class=\"data row4 col7\" >0.145727</td>\n",
        "                        <td id=\"T_f7d1fd38_1f6c_11eb_99d8_525400dfa902row4_col8\" class=\"data row4 col8\" >0.100194</td>\n",
        "                        <td id=\"T_f7d1fd38_1f6c_11eb_99d8_525400dfa902row4_col9\" class=\"data row4 col9\" >-0.430106</td>\n",
        "                        <td id=\"T_f7d1fd38_1f6c_11eb_99d8_525400dfa902row4_col10\" class=\"data row4 col10\" >0.205069</td>\n",
        "                        <td id=\"T_f7d1fd38_1f6c_11eb_99d8_525400dfa902row4_col11\" class=\"data row4 col11\" >0.135590</td>\n",
        "                        <td id=\"T_f7d1fd38_1f6c_11eb_99d8_525400dfa902row4_col12\" class=\"data row4 col12\" >0.146176</td>\n",
        "                        <td id=\"T_f7d1fd38_1f6c_11eb_99d8_525400dfa902row4_col13\" class=\"data row4 col13\" >-0.137626</td>\n",
        "                        <td id=\"T_f7d1fd38_1f6c_11eb_99d8_525400dfa902row4_col14\" class=\"data row4 col14\" >0.050450</td>\n",
        "                        <td id=\"T_f7d1fd38_1f6c_11eb_99d8_525400dfa902row4_col15\" class=\"data row4 col15\" >0.088631</td>\n",
        "                        <td id=\"T_f7d1fd38_1f6c_11eb_99d8_525400dfa902row4_col16\" class=\"data row4 col16\" >0.240687</td>\n",
        "            </tr>\n",
        "            <tr>\n",
        "                        <th id=\"T_f7d1fd38_1f6c_11eb_99d8_525400dfa902level0_row5\" class=\"row_heading level0 row5\" >School_closing</th>\n",
        "                        <td id=\"T_f7d1fd38_1f6c_11eb_99d8_525400dfa902row5_col0\" class=\"data row5 col0\" >-0.324534</td>\n",
        "                        <td id=\"T_f7d1fd38_1f6c_11eb_99d8_525400dfa902row5_col1\" class=\"data row5 col1\" >-0.209539</td>\n",
        "                        <td id=\"T_f7d1fd38_1f6c_11eb_99d8_525400dfa902row5_col2\" class=\"data row5 col2\" >-0.197683</td>\n",
        "                        <td id=\"T_f7d1fd38_1f6c_11eb_99d8_525400dfa902row5_col3\" class=\"data row5 col3\" >-0.350132</td>\n",
        "                        <td id=\"T_f7d1fd38_1f6c_11eb_99d8_525400dfa902row5_col4\" class=\"data row5 col4\" >0.146096</td>\n",
        "                        <td id=\"T_f7d1fd38_1f6c_11eb_99d8_525400dfa902row5_col5\" class=\"data row5 col5\" >1.000000</td>\n",
        "                        <td id=\"T_f7d1fd38_1f6c_11eb_99d8_525400dfa902row5_col6\" class=\"data row5 col6\" >0.926257</td>\n",
        "                        <td id=\"T_f7d1fd38_1f6c_11eb_99d8_525400dfa902row5_col7\" class=\"data row5 col7\" >0.816739</td>\n",
        "                        <td id=\"T_f7d1fd38_1f6c_11eb_99d8_525400dfa902row5_col8\" class=\"data row5 col8\" >0.787504</td>\n",
        "                        <td id=\"T_f7d1fd38_1f6c_11eb_99d8_525400dfa902row5_col9\" class=\"data row5 col9\" >0.010239</td>\n",
        "                        <td id=\"T_f7d1fd38_1f6c_11eb_99d8_525400dfa902row5_col10\" class=\"data row5 col10\" >0.900480</td>\n",
        "                        <td id=\"T_f7d1fd38_1f6c_11eb_99d8_525400dfa902row5_col11\" class=\"data row5 col11\" >0.066542</td>\n",
        "                        <td id=\"T_f7d1fd38_1f6c_11eb_99d8_525400dfa902row5_col12\" class=\"data row5 col12\" >0.453554</td>\n",
        "                        <td id=\"T_f7d1fd38_1f6c_11eb_99d8_525400dfa902row5_col13\" class=\"data row5 col13\" >0.681420</td>\n",
        "                        <td id=\"T_f7d1fd38_1f6c_11eb_99d8_525400dfa902row5_col14\" class=\"data row5 col14\" >0.412898</td>\n",
        "                        <td id=\"T_f7d1fd38_1f6c_11eb_99d8_525400dfa902row5_col15\" class=\"data row5 col15\" >0.546231</td>\n",
        "                        <td id=\"T_f7d1fd38_1f6c_11eb_99d8_525400dfa902row5_col16\" class=\"data row5 col16\" >0.756658</td>\n",
        "            </tr>\n",
        "            <tr>\n",
        "                        <th id=\"T_f7d1fd38_1f6c_11eb_99d8_525400dfa902level0_row6\" class=\"row_heading level0 row6\" >Workplace_closing</th>\n",
        "                        <td id=\"T_f7d1fd38_1f6c_11eb_99d8_525400dfa902row6_col0\" class=\"data row6 col0\" >-0.257033</td>\n",
        "                        <td id=\"T_f7d1fd38_1f6c_11eb_99d8_525400dfa902row6_col1\" class=\"data row6 col1\" >-0.214691</td>\n",
        "                        <td id=\"T_f7d1fd38_1f6c_11eb_99d8_525400dfa902row6_col2\" class=\"data row6 col2\" >-0.204545</td>\n",
        "                        <td id=\"T_f7d1fd38_1f6c_11eb_99d8_525400dfa902row6_col3\" class=\"data row6 col3\" >-0.377775</td>\n",
        "                        <td id=\"T_f7d1fd38_1f6c_11eb_99d8_525400dfa902row6_col4\" class=\"data row6 col4\" >0.128652</td>\n",
        "                        <td id=\"T_f7d1fd38_1f6c_11eb_99d8_525400dfa902row6_col5\" class=\"data row6 col5\" >0.926257</td>\n",
        "                        <td id=\"T_f7d1fd38_1f6c_11eb_99d8_525400dfa902row6_col6\" class=\"data row6 col6\" >1.000000</td>\n",
        "                        <td id=\"T_f7d1fd38_1f6c_11eb_99d8_525400dfa902row6_col7\" class=\"data row6 col7\" >0.799108</td>\n",
        "                        <td id=\"T_f7d1fd38_1f6c_11eb_99d8_525400dfa902row6_col8\" class=\"data row6 col8\" >0.777845</td>\n",
        "                        <td id=\"T_f7d1fd38_1f6c_11eb_99d8_525400dfa902row6_col9\" class=\"data row6 col9\" >0.031713</td>\n",
        "                        <td id=\"T_f7d1fd38_1f6c_11eb_99d8_525400dfa902row6_col10\" class=\"data row6 col10\" >0.901504</td>\n",
        "                        <td id=\"T_f7d1fd38_1f6c_11eb_99d8_525400dfa902row6_col11\" class=\"data row6 col11\" >-0.027194</td>\n",
        "                        <td id=\"T_f7d1fd38_1f6c_11eb_99d8_525400dfa902row6_col12\" class=\"data row6 col12\" >0.398722</td>\n",
        "                        <td id=\"T_f7d1fd38_1f6c_11eb_99d8_525400dfa902row6_col13\" class=\"data row6 col13\" >0.682825</td>\n",
        "                        <td id=\"T_f7d1fd38_1f6c_11eb_99d8_525400dfa902row6_col14\" class=\"data row6 col14\" >0.460889</td>\n",
        "                        <td id=\"T_f7d1fd38_1f6c_11eb_99d8_525400dfa902row6_col15\" class=\"data row6 col15\" >0.567399</td>\n",
        "                        <td id=\"T_f7d1fd38_1f6c_11eb_99d8_525400dfa902row6_col16\" class=\"data row6 col16\" >0.738748</td>\n",
        "            </tr>\n",
        "            <tr>\n",
        "                        <th id=\"T_f7d1fd38_1f6c_11eb_99d8_525400dfa902level0_row7\" class=\"row_heading level0 row7\" >Cancel_events</th>\n",
        "                        <td id=\"T_f7d1fd38_1f6c_11eb_99d8_525400dfa902row7_col0\" class=\"data row7 col0\" >-0.080382</td>\n",
        "                        <td id=\"T_f7d1fd38_1f6c_11eb_99d8_525400dfa902row7_col1\" class=\"data row7 col1\" >-0.280758</td>\n",
        "                        <td id=\"T_f7d1fd38_1f6c_11eb_99d8_525400dfa902row7_col2\" class=\"data row7 col2\" >-0.152393</td>\n",
        "                        <td id=\"T_f7d1fd38_1f6c_11eb_99d8_525400dfa902row7_col3\" class=\"data row7 col3\" >-0.149290</td>\n",
        "                        <td id=\"T_f7d1fd38_1f6c_11eb_99d8_525400dfa902row7_col4\" class=\"data row7 col4\" >0.145727</td>\n",
        "                        <td id=\"T_f7d1fd38_1f6c_11eb_99d8_525400dfa902row7_col5\" class=\"data row7 col5\" >0.816739</td>\n",
        "                        <td id=\"T_f7d1fd38_1f6c_11eb_99d8_525400dfa902row7_col6\" class=\"data row7 col6\" >0.799108</td>\n",
        "                        <td id=\"T_f7d1fd38_1f6c_11eb_99d8_525400dfa902row7_col7\" class=\"data row7 col7\" >1.000000</td>\n",
        "                        <td id=\"T_f7d1fd38_1f6c_11eb_99d8_525400dfa902row7_col8\" class=\"data row7 col8\" >0.768726</td>\n",
        "                        <td id=\"T_f7d1fd38_1f6c_11eb_99d8_525400dfa902row7_col9\" class=\"data row7 col9\" >-0.044479</td>\n",
        "                        <td id=\"T_f7d1fd38_1f6c_11eb_99d8_525400dfa902row7_col10\" class=\"data row7 col10\" >0.812693</td>\n",
        "                        <td id=\"T_f7d1fd38_1f6c_11eb_99d8_525400dfa902row7_col11\" class=\"data row7 col11\" >0.123914</td>\n",
        "                        <td id=\"T_f7d1fd38_1f6c_11eb_99d8_525400dfa902row7_col12\" class=\"data row7 col12\" >0.627122</td>\n",
        "                        <td id=\"T_f7d1fd38_1f6c_11eb_99d8_525400dfa902row7_col13\" class=\"data row7 col13\" >0.650743</td>\n",
        "                        <td id=\"T_f7d1fd38_1f6c_11eb_99d8_525400dfa902row7_col14\" class=\"data row7 col14\" >0.204454</td>\n",
        "                        <td id=\"T_f7d1fd38_1f6c_11eb_99d8_525400dfa902row7_col15\" class=\"data row7 col15\" >0.337490</td>\n",
        "                        <td id=\"T_f7d1fd38_1f6c_11eb_99d8_525400dfa902row7_col16\" class=\"data row7 col16\" >0.799535</td>\n",
        "            </tr>\n",
        "            <tr>\n",
        "                        <th id=\"T_f7d1fd38_1f6c_11eb_99d8_525400dfa902level0_row8\" class=\"row_heading level0 row8\" >Gatherings_restrictions</th>\n",
        "                        <td id=\"T_f7d1fd38_1f6c_11eb_99d8_525400dfa902row8_col0\" class=\"data row8 col0\" >-0.117581</td>\n",
        "                        <td id=\"T_f7d1fd38_1f6c_11eb_99d8_525400dfa902row8_col1\" class=\"data row8 col1\" >-0.349788</td>\n",
        "                        <td id=\"T_f7d1fd38_1f6c_11eb_99d8_525400dfa902row8_col2\" class=\"data row8 col2\" >-0.266819</td>\n",
        "                        <td id=\"T_f7d1fd38_1f6c_11eb_99d8_525400dfa902row8_col3\" class=\"data row8 col3\" >-0.281733</td>\n",
        "                        <td id=\"T_f7d1fd38_1f6c_11eb_99d8_525400dfa902row8_col4\" class=\"data row8 col4\" >0.100194</td>\n",
        "                        <td id=\"T_f7d1fd38_1f6c_11eb_99d8_525400dfa902row8_col5\" class=\"data row8 col5\" >0.787504</td>\n",
        "                        <td id=\"T_f7d1fd38_1f6c_11eb_99d8_525400dfa902row8_col6\" class=\"data row8 col6\" >0.777845</td>\n",
        "                        <td id=\"T_f7d1fd38_1f6c_11eb_99d8_525400dfa902row8_col7\" class=\"data row8 col7\" >0.768726</td>\n",
        "                        <td id=\"T_f7d1fd38_1f6c_11eb_99d8_525400dfa902row8_col8\" class=\"data row8 col8\" >1.000000</td>\n",
        "                        <td id=\"T_f7d1fd38_1f6c_11eb_99d8_525400dfa902row8_col9\" class=\"data row8 col9\" >0.019302</td>\n",
        "                        <td id=\"T_f7d1fd38_1f6c_11eb_99d8_525400dfa902row8_col10\" class=\"data row8 col10\" >0.787768</td>\n",
        "                        <td id=\"T_f7d1fd38_1f6c_11eb_99d8_525400dfa902row8_col11\" class=\"data row8 col11\" >0.173154</td>\n",
        "                        <td id=\"T_f7d1fd38_1f6c_11eb_99d8_525400dfa902row8_col12\" class=\"data row8 col12\" >0.546457</td>\n",
        "                        <td id=\"T_f7d1fd38_1f6c_11eb_99d8_525400dfa902row8_col13\" class=\"data row8 col13\" >0.576867</td>\n",
        "                        <td id=\"T_f7d1fd38_1f6c_11eb_99d8_525400dfa902row8_col14\" class=\"data row8 col14\" >0.236159</td>\n",
        "                        <td id=\"T_f7d1fd38_1f6c_11eb_99d8_525400dfa902row8_col15\" class=\"data row8 col15\" >0.288038</td>\n",
        "                        <td id=\"T_f7d1fd38_1f6c_11eb_99d8_525400dfa902row8_col16\" class=\"data row8 col16\" >0.687523</td>\n",
        "            </tr>\n",
        "            <tr>\n",
        "                        <th id=\"T_f7d1fd38_1f6c_11eb_99d8_525400dfa902level0_row9\" class=\"row_heading level0 row9\" >Transport_closing</th>\n",
        "                        <td id=\"T_f7d1fd38_1f6c_11eb_99d8_525400dfa902row9_col0\" class=\"data row9 col0\" >0.180453</td>\n",
        "                        <td id=\"T_f7d1fd38_1f6c_11eb_99d8_525400dfa902row9_col1\" class=\"data row9 col1\" >-0.336694</td>\n",
        "                        <td id=\"T_f7d1fd38_1f6c_11eb_99d8_525400dfa902row9_col2\" class=\"data row9 col2\" >-0.502678</td>\n",
        "                        <td id=\"T_f7d1fd38_1f6c_11eb_99d8_525400dfa902row9_col3\" class=\"data row9 col3\" >-0.548343</td>\n",
        "                        <td id=\"T_f7d1fd38_1f6c_11eb_99d8_525400dfa902row9_col4\" class=\"data row9 col4\" >-0.430106</td>\n",
        "                        <td id=\"T_f7d1fd38_1f6c_11eb_99d8_525400dfa902row9_col5\" class=\"data row9 col5\" >0.010239</td>\n",
        "                        <td id=\"T_f7d1fd38_1f6c_11eb_99d8_525400dfa902row9_col6\" class=\"data row9 col6\" >0.031713</td>\n",
        "                        <td id=\"T_f7d1fd38_1f6c_11eb_99d8_525400dfa902row9_col7\" class=\"data row9 col7\" >-0.044479</td>\n",
        "                        <td id=\"T_f7d1fd38_1f6c_11eb_99d8_525400dfa902row9_col8\" class=\"data row9 col8\" >0.019302</td>\n",
        "                        <td id=\"T_f7d1fd38_1f6c_11eb_99d8_525400dfa902row9_col9\" class=\"data row9 col9\" >1.000000</td>\n",
        "                        <td id=\"T_f7d1fd38_1f6c_11eb_99d8_525400dfa902row9_col10\" class=\"data row9 col10\" >-0.084733</td>\n",
        "                        <td id=\"T_f7d1fd38_1f6c_11eb_99d8_525400dfa902row9_col11\" class=\"data row9 col11\" >0.255194</td>\n",
        "                        <td id=\"T_f7d1fd38_1f6c_11eb_99d8_525400dfa902row9_col12\" class=\"data row9 col12\" >-0.271269</td>\n",
        "                        <td id=\"T_f7d1fd38_1f6c_11eb_99d8_525400dfa902row9_col13\" class=\"data row9 col13\" >0.407404</td>\n",
        "                        <td id=\"T_f7d1fd38_1f6c_11eb_99d8_525400dfa902row9_col14\" class=\"data row9 col14\" >0.046064</td>\n",
        "                        <td id=\"T_f7d1fd38_1f6c_11eb_99d8_525400dfa902row9_col15\" class=\"data row9 col15\" >0.059692</td>\n",
        "                        <td id=\"T_f7d1fd38_1f6c_11eb_99d8_525400dfa902row9_col16\" class=\"data row9 col16\" >-0.138161</td>\n",
        "            </tr>\n",
        "            <tr>\n",
        "                        <th id=\"T_f7d1fd38_1f6c_11eb_99d8_525400dfa902level0_row10\" class=\"row_heading level0 row10\" >Stay_home_restrictions</th>\n",
        "                        <td id=\"T_f7d1fd38_1f6c_11eb_99d8_525400dfa902row10_col0\" class=\"data row10 col0\" >-0.309551</td>\n",
        "                        <td id=\"T_f7d1fd38_1f6c_11eb_99d8_525400dfa902row10_col1\" class=\"data row10 col1\" >-0.185153</td>\n",
        "                        <td id=\"T_f7d1fd38_1f6c_11eb_99d8_525400dfa902row10_col2\" class=\"data row10 col2\" >-0.095834</td>\n",
        "                        <td id=\"T_f7d1fd38_1f6c_11eb_99d8_525400dfa902row10_col3\" class=\"data row10 col3\" >-0.234032</td>\n",
        "                        <td id=\"T_f7d1fd38_1f6c_11eb_99d8_525400dfa902row10_col4\" class=\"data row10 col4\" >0.205069</td>\n",
        "                        <td id=\"T_f7d1fd38_1f6c_11eb_99d8_525400dfa902row10_col5\" class=\"data row10 col5\" >0.900480</td>\n",
        "                        <td id=\"T_f7d1fd38_1f6c_11eb_99d8_525400dfa902row10_col6\" class=\"data row10 col6\" >0.901504</td>\n",
        "                        <td id=\"T_f7d1fd38_1f6c_11eb_99d8_525400dfa902row10_col7\" class=\"data row10 col7\" >0.812693</td>\n",
        "                        <td id=\"T_f7d1fd38_1f6c_11eb_99d8_525400dfa902row10_col8\" class=\"data row10 col8\" >0.787768</td>\n",
        "                        <td id=\"T_f7d1fd38_1f6c_11eb_99d8_525400dfa902row10_col9\" class=\"data row10 col9\" >-0.084733</td>\n",
        "                        <td id=\"T_f7d1fd38_1f6c_11eb_99d8_525400dfa902row10_col10\" class=\"data row10 col10\" >1.000000</td>\n",
        "                        <td id=\"T_f7d1fd38_1f6c_11eb_99d8_525400dfa902row10_col11\" class=\"data row10 col11\" >0.109585</td>\n",
        "                        <td id=\"T_f7d1fd38_1f6c_11eb_99d8_525400dfa902row10_col12\" class=\"data row10 col12\" >0.439874</td>\n",
        "                        <td id=\"T_f7d1fd38_1f6c_11eb_99d8_525400dfa902row10_col13\" class=\"data row10 col13\" >0.595364</td>\n",
        "                        <td id=\"T_f7d1fd38_1f6c_11eb_99d8_525400dfa902row10_col14\" class=\"data row10 col14\" >0.438982</td>\n",
        "                        <td id=\"T_f7d1fd38_1f6c_11eb_99d8_525400dfa902row10_col15\" class=\"data row10 col15\" >0.506883</td>\n",
        "                        <td id=\"T_f7d1fd38_1f6c_11eb_99d8_525400dfa902row10_col16\" class=\"data row10 col16\" >0.714769</td>\n",
        "            </tr>\n",
        "            <tr>\n",
        "                        <th id=\"T_f7d1fd38_1f6c_11eb_99d8_525400dfa902level0_row11\" class=\"row_heading level0 row11\" >Internal_movement_restrictions</th>\n",
        "                        <td id=\"T_f7d1fd38_1f6c_11eb_99d8_525400dfa902row11_col0\" class=\"data row11 col0\" >-0.161683</td>\n",
        "                        <td id=\"T_f7d1fd38_1f6c_11eb_99d8_525400dfa902row11_col1\" class=\"data row11 col1\" >-0.137935</td>\n",
        "                        <td id=\"T_f7d1fd38_1f6c_11eb_99d8_525400dfa902row11_col2\" class=\"data row11 col2\" >-0.113709</td>\n",
        "                        <td id=\"T_f7d1fd38_1f6c_11eb_99d8_525400dfa902row11_col3\" class=\"data row11 col3\" >-0.046908</td>\n",
        "                        <td id=\"T_f7d1fd38_1f6c_11eb_99d8_525400dfa902row11_col4\" class=\"data row11 col4\" >0.135590</td>\n",
        "                        <td id=\"T_f7d1fd38_1f6c_11eb_99d8_525400dfa902row11_col5\" class=\"data row11 col5\" >0.066542</td>\n",
        "                        <td id=\"T_f7d1fd38_1f6c_11eb_99d8_525400dfa902row11_col6\" class=\"data row11 col6\" >-0.027194</td>\n",
        "                        <td id=\"T_f7d1fd38_1f6c_11eb_99d8_525400dfa902row11_col7\" class=\"data row11 col7\" >0.123914</td>\n",
        "                        <td id=\"T_f7d1fd38_1f6c_11eb_99d8_525400dfa902row11_col8\" class=\"data row11 col8\" >0.173154</td>\n",
        "                        <td id=\"T_f7d1fd38_1f6c_11eb_99d8_525400dfa902row11_col9\" class=\"data row11 col9\" >0.255194</td>\n",
        "                        <td id=\"T_f7d1fd38_1f6c_11eb_99d8_525400dfa902row11_col10\" class=\"data row11 col10\" >0.109585</td>\n",
        "                        <td id=\"T_f7d1fd38_1f6c_11eb_99d8_525400dfa902row11_col11\" class=\"data row11 col11\" >1.000000</td>\n",
        "                        <td id=\"T_f7d1fd38_1f6c_11eb_99d8_525400dfa902row11_col12\" class=\"data row11 col12\" >0.045049</td>\n",
        "                        <td id=\"T_f7d1fd38_1f6c_11eb_99d8_525400dfa902row11_col13\" class=\"data row11 col13\" >0.099234</td>\n",
        "                        <td id=\"T_f7d1fd38_1f6c_11eb_99d8_525400dfa902row11_col14\" class=\"data row11 col14\" >-0.120541</td>\n",
        "                        <td id=\"T_f7d1fd38_1f6c_11eb_99d8_525400dfa902row11_col15\" class=\"data row11 col15\" >-0.023840</td>\n",
        "                        <td id=\"T_f7d1fd38_1f6c_11eb_99d8_525400dfa902row11_col16\" class=\"data row11 col16\" >0.240513</td>\n",
        "            </tr>\n",
        "            <tr>\n",
        "                        <th id=\"T_f7d1fd38_1f6c_11eb_99d8_525400dfa902level0_row12\" class=\"row_heading level0 row12\" >International_movement_restrictions</th>\n",
        "                        <td id=\"T_f7d1fd38_1f6c_11eb_99d8_525400dfa902row12_col0\" class=\"data row12 col0\" >-0.003804</td>\n",
        "                        <td id=\"T_f7d1fd38_1f6c_11eb_99d8_525400dfa902row12_col1\" class=\"data row12 col1\" >0.069551</td>\n",
        "                        <td id=\"T_f7d1fd38_1f6c_11eb_99d8_525400dfa902row12_col2\" class=\"data row12 col2\" >0.221706</td>\n",
        "                        <td id=\"T_f7d1fd38_1f6c_11eb_99d8_525400dfa902row12_col3\" class=\"data row12 col3\" >0.161712</td>\n",
        "                        <td id=\"T_f7d1fd38_1f6c_11eb_99d8_525400dfa902row12_col4\" class=\"data row12 col4\" >0.146176</td>\n",
        "                        <td id=\"T_f7d1fd38_1f6c_11eb_99d8_525400dfa902row12_col5\" class=\"data row12 col5\" >0.453554</td>\n",
        "                        <td id=\"T_f7d1fd38_1f6c_11eb_99d8_525400dfa902row12_col6\" class=\"data row12 col6\" >0.398722</td>\n",
        "                        <td id=\"T_f7d1fd38_1f6c_11eb_99d8_525400dfa902row12_col7\" class=\"data row12 col7\" >0.627122</td>\n",
        "                        <td id=\"T_f7d1fd38_1f6c_11eb_99d8_525400dfa902row12_col8\" class=\"data row12 col8\" >0.546457</td>\n",
        "                        <td id=\"T_f7d1fd38_1f6c_11eb_99d8_525400dfa902row12_col9\" class=\"data row12 col9\" >-0.271269</td>\n",
        "                        <td id=\"T_f7d1fd38_1f6c_11eb_99d8_525400dfa902row12_col10\" class=\"data row12 col10\" >0.439874</td>\n",
        "                        <td id=\"T_f7d1fd38_1f6c_11eb_99d8_525400dfa902row12_col11\" class=\"data row12 col11\" >0.045049</td>\n",
        "                        <td id=\"T_f7d1fd38_1f6c_11eb_99d8_525400dfa902row12_col12\" class=\"data row12 col12\" >1.000000</td>\n",
        "                        <td id=\"T_f7d1fd38_1f6c_11eb_99d8_525400dfa902row12_col13\" class=\"data row12 col13\" >0.302483</td>\n",
        "                        <td id=\"T_f7d1fd38_1f6c_11eb_99d8_525400dfa902row12_col14\" class=\"data row12 col14\" >-0.036865</td>\n",
        "                        <td id=\"T_f7d1fd38_1f6c_11eb_99d8_525400dfa902row12_col15\" class=\"data row12 col15\" >0.086516</td>\n",
        "                        <td id=\"T_f7d1fd38_1f6c_11eb_99d8_525400dfa902row12_col16\" class=\"data row12 col16\" >0.695411</td>\n",
        "            </tr>\n",
        "            <tr>\n",
        "                        <th id=\"T_f7d1fd38_1f6c_11eb_99d8_525400dfa902level0_row13\" class=\"row_heading level0 row13\" >Information_campaigns</th>\n",
        "                        <td id=\"T_f7d1fd38_1f6c_11eb_99d8_525400dfa902row13_col0\" class=\"data row13 col0\" >-0.012763</td>\n",
        "                        <td id=\"T_f7d1fd38_1f6c_11eb_99d8_525400dfa902row13_col1\" class=\"data row13 col1\" >-0.365143</td>\n",
        "                        <td id=\"T_f7d1fd38_1f6c_11eb_99d8_525400dfa902row13_col2\" class=\"data row13 col2\" >-0.449381</td>\n",
        "                        <td id=\"T_f7d1fd38_1f6c_11eb_99d8_525400dfa902row13_col3\" class=\"data row13 col3\" >-0.550945</td>\n",
        "                        <td id=\"T_f7d1fd38_1f6c_11eb_99d8_525400dfa902row13_col4\" class=\"data row13 col4\" >-0.137626</td>\n",
        "                        <td id=\"T_f7d1fd38_1f6c_11eb_99d8_525400dfa902row13_col5\" class=\"data row13 col5\" >0.681420</td>\n",
        "                        <td id=\"T_f7d1fd38_1f6c_11eb_99d8_525400dfa902row13_col6\" class=\"data row13 col6\" >0.682825</td>\n",
        "                        <td id=\"T_f7d1fd38_1f6c_11eb_99d8_525400dfa902row13_col7\" class=\"data row13 col7\" >0.650743</td>\n",
        "                        <td id=\"T_f7d1fd38_1f6c_11eb_99d8_525400dfa902row13_col8\" class=\"data row13 col8\" >0.576867</td>\n",
        "                        <td id=\"T_f7d1fd38_1f6c_11eb_99d8_525400dfa902row13_col9\" class=\"data row13 col9\" >0.407404</td>\n",
        "                        <td id=\"T_f7d1fd38_1f6c_11eb_99d8_525400dfa902row13_col10\" class=\"data row13 col10\" >0.595364</td>\n",
        "                        <td id=\"T_f7d1fd38_1f6c_11eb_99d8_525400dfa902row13_col11\" class=\"data row13 col11\" >0.099234</td>\n",
        "                        <td id=\"T_f7d1fd38_1f6c_11eb_99d8_525400dfa902row13_col12\" class=\"data row13 col12\" >0.302483</td>\n",
        "                        <td id=\"T_f7d1fd38_1f6c_11eb_99d8_525400dfa902row13_col13\" class=\"data row13 col13\" >1.000000</td>\n",
        "                        <td id=\"T_f7d1fd38_1f6c_11eb_99d8_525400dfa902row13_col14\" class=\"data row13 col14\" >0.457721</td>\n",
        "                        <td id=\"T_f7d1fd38_1f6c_11eb_99d8_525400dfa902row13_col15\" class=\"data row13 col15\" >0.561023</td>\n",
        "                        <td id=\"T_f7d1fd38_1f6c_11eb_99d8_525400dfa902row13_col16\" class=\"data row13 col16\" >0.599812</td>\n",
        "            </tr>\n",
        "            <tr>\n",
        "                        <th id=\"T_f7d1fd38_1f6c_11eb_99d8_525400dfa902level0_row14\" class=\"row_heading level0 row14\" >Testing_policy</th>\n",
        "                        <td id=\"T_f7d1fd38_1f6c_11eb_99d8_525400dfa902row14_col0\" class=\"data row14 col0\" >-0.329967</td>\n",
        "                        <td id=\"T_f7d1fd38_1f6c_11eb_99d8_525400dfa902row14_col1\" class=\"data row14 col1\" >-0.153414</td>\n",
        "                        <td id=\"T_f7d1fd38_1f6c_11eb_99d8_525400dfa902row14_col2\" class=\"data row14 col2\" >-0.205434</td>\n",
        "                        <td id=\"T_f7d1fd38_1f6c_11eb_99d8_525400dfa902row14_col3\" class=\"data row14 col3\" >-0.466454</td>\n",
        "                        <td id=\"T_f7d1fd38_1f6c_11eb_99d8_525400dfa902row14_col4\" class=\"data row14 col4\" >0.050450</td>\n",
        "                        <td id=\"T_f7d1fd38_1f6c_11eb_99d8_525400dfa902row14_col5\" class=\"data row14 col5\" >0.412898</td>\n",
        "                        <td id=\"T_f7d1fd38_1f6c_11eb_99d8_525400dfa902row14_col6\" class=\"data row14 col6\" >0.460889</td>\n",
        "                        <td id=\"T_f7d1fd38_1f6c_11eb_99d8_525400dfa902row14_col7\" class=\"data row14 col7\" >0.204454</td>\n",
        "                        <td id=\"T_f7d1fd38_1f6c_11eb_99d8_525400dfa902row14_col8\" class=\"data row14 col8\" >0.236159</td>\n",
        "                        <td id=\"T_f7d1fd38_1f6c_11eb_99d8_525400dfa902row14_col9\" class=\"data row14 col9\" >0.046064</td>\n",
        "                        <td id=\"T_f7d1fd38_1f6c_11eb_99d8_525400dfa902row14_col10\" class=\"data row14 col10\" >0.438982</td>\n",
        "                        <td id=\"T_f7d1fd38_1f6c_11eb_99d8_525400dfa902row14_col11\" class=\"data row14 col11\" >-0.120541</td>\n",
        "                        <td id=\"T_f7d1fd38_1f6c_11eb_99d8_525400dfa902row14_col12\" class=\"data row14 col12\" >-0.036865</td>\n",
        "                        <td id=\"T_f7d1fd38_1f6c_11eb_99d8_525400dfa902row14_col13\" class=\"data row14 col13\" >0.457721</td>\n",
        "                        <td id=\"T_f7d1fd38_1f6c_11eb_99d8_525400dfa902row14_col14\" class=\"data row14 col14\" >1.000000</td>\n",
        "                        <td id=\"T_f7d1fd38_1f6c_11eb_99d8_525400dfa902row14_col15\" class=\"data row14 col15\" >0.757823</td>\n",
        "                        <td id=\"T_f7d1fd38_1f6c_11eb_99d8_525400dfa902row14_col16\" class=\"data row14 col16\" >0.066553</td>\n",
        "            </tr>\n",
        "            <tr>\n",
        "                        <th id=\"T_f7d1fd38_1f6c_11eb_99d8_525400dfa902level0_row15\" class=\"row_heading level0 row15\" >Contact_tracing</th>\n",
        "                        <td id=\"T_f7d1fd38_1f6c_11eb_99d8_525400dfa902row15_col0\" class=\"data row15 col0\" >-0.406483</td>\n",
        "                        <td id=\"T_f7d1fd38_1f6c_11eb_99d8_525400dfa902row15_col1\" class=\"data row15 col1\" >0.004221</td>\n",
        "                        <td id=\"T_f7d1fd38_1f6c_11eb_99d8_525400dfa902row15_col2\" class=\"data row15 col2\" >-0.092412</td>\n",
        "                        <td id=\"T_f7d1fd38_1f6c_11eb_99d8_525400dfa902row15_col3\" class=\"data row15 col3\" >-0.414409</td>\n",
        "                        <td id=\"T_f7d1fd38_1f6c_11eb_99d8_525400dfa902row15_col4\" class=\"data row15 col4\" >0.088631</td>\n",
        "                        <td id=\"T_f7d1fd38_1f6c_11eb_99d8_525400dfa902row15_col5\" class=\"data row15 col5\" >0.546231</td>\n",
        "                        <td id=\"T_f7d1fd38_1f6c_11eb_99d8_525400dfa902row15_col6\" class=\"data row15 col6\" >0.567399</td>\n",
        "                        <td id=\"T_f7d1fd38_1f6c_11eb_99d8_525400dfa902row15_col7\" class=\"data row15 col7\" >0.337490</td>\n",
        "                        <td id=\"T_f7d1fd38_1f6c_11eb_99d8_525400dfa902row15_col8\" class=\"data row15 col8\" >0.288038</td>\n",
        "                        <td id=\"T_f7d1fd38_1f6c_11eb_99d8_525400dfa902row15_col9\" class=\"data row15 col9\" >0.059692</td>\n",
        "                        <td id=\"T_f7d1fd38_1f6c_11eb_99d8_525400dfa902row15_col10\" class=\"data row15 col10\" >0.506883</td>\n",
        "                        <td id=\"T_f7d1fd38_1f6c_11eb_99d8_525400dfa902row15_col11\" class=\"data row15 col11\" >-0.023840</td>\n",
        "                        <td id=\"T_f7d1fd38_1f6c_11eb_99d8_525400dfa902row15_col12\" class=\"data row15 col12\" >0.086516</td>\n",
        "                        <td id=\"T_f7d1fd38_1f6c_11eb_99d8_525400dfa902row15_col13\" class=\"data row15 col13\" >0.561023</td>\n",
        "                        <td id=\"T_f7d1fd38_1f6c_11eb_99d8_525400dfa902row15_col14\" class=\"data row15 col14\" >0.757823</td>\n",
        "                        <td id=\"T_f7d1fd38_1f6c_11eb_99d8_525400dfa902row15_col15\" class=\"data row15 col15\" >1.000000</td>\n",
        "                        <td id=\"T_f7d1fd38_1f6c_11eb_99d8_525400dfa902row15_col16\" class=\"data row15 col16\" >0.334070</td>\n",
        "            </tr>\n",
        "            <tr>\n",
        "                        <th id=\"T_f7d1fd38_1f6c_11eb_99d8_525400dfa902level0_row16\" class=\"row_heading level0 row16\" >Stringency_index</th>\n",
        "                        <td id=\"T_f7d1fd38_1f6c_11eb_99d8_525400dfa902row16_col0\" class=\"data row16 col0\" >-0.162152</td>\n",
        "                        <td id=\"T_f7d1fd38_1f6c_11eb_99d8_525400dfa902row16_col1\" class=\"data row16 col1\" >-0.001099</td>\n",
        "                        <td id=\"T_f7d1fd38_1f6c_11eb_99d8_525400dfa902row16_col2\" class=\"data row16 col2\" >0.019260</td>\n",
        "                        <td id=\"T_f7d1fd38_1f6c_11eb_99d8_525400dfa902row16_col3\" class=\"data row16 col3\" >-0.044686</td>\n",
        "                        <td id=\"T_f7d1fd38_1f6c_11eb_99d8_525400dfa902row16_col4\" class=\"data row16 col4\" >0.240687</td>\n",
        "                        <td id=\"T_f7d1fd38_1f6c_11eb_99d8_525400dfa902row16_col5\" class=\"data row16 col5\" >0.756658</td>\n",
        "                        <td id=\"T_f7d1fd38_1f6c_11eb_99d8_525400dfa902row16_col6\" class=\"data row16 col6\" >0.738748</td>\n",
        "                        <td id=\"T_f7d1fd38_1f6c_11eb_99d8_525400dfa902row16_col7\" class=\"data row16 col7\" >0.799535</td>\n",
        "                        <td id=\"T_f7d1fd38_1f6c_11eb_99d8_525400dfa902row16_col8\" class=\"data row16 col8\" >0.687523</td>\n",
        "                        <td id=\"T_f7d1fd38_1f6c_11eb_99d8_525400dfa902row16_col9\" class=\"data row16 col9\" >-0.138161</td>\n",
        "                        <td id=\"T_f7d1fd38_1f6c_11eb_99d8_525400dfa902row16_col10\" class=\"data row16 col10\" >0.714769</td>\n",
        "                        <td id=\"T_f7d1fd38_1f6c_11eb_99d8_525400dfa902row16_col11\" class=\"data row16 col11\" >0.240513</td>\n",
        "                        <td id=\"T_f7d1fd38_1f6c_11eb_99d8_525400dfa902row16_col12\" class=\"data row16 col12\" >0.695411</td>\n",
        "                        <td id=\"T_f7d1fd38_1f6c_11eb_99d8_525400dfa902row16_col13\" class=\"data row16 col13\" >0.599812</td>\n",
        "                        <td id=\"T_f7d1fd38_1f6c_11eb_99d8_525400dfa902row16_col14\" class=\"data row16 col14\" >0.066553</td>\n",
        "                        <td id=\"T_f7d1fd38_1f6c_11eb_99d8_525400dfa902row16_col15\" class=\"data row16 col15\" >0.334070</td>\n",
        "                        <td id=\"T_f7d1fd38_1f6c_11eb_99d8_525400dfa902row16_col16\" class=\"data row16 col16\" >1.000000</td>\n",
        "            </tr>\n",
        "    </tbody></table>"
       ],
       "output_type": "pyout",
       "prompt_number": 21,
       "text": [
        "<pandas.io.formats.style.Styler at 0x7f6e313d6d30>"
       ]
      }
     ],
     "prompt_number": 21
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "# Scatter plot of Stringency index and Rt\n",
      "df = track_df.copy()\n",
      "sns.scatterplot(data=df, x=\"Stringency_index\", y=\"Rt\", hue=\"Country\", legend=\"brief\", marker=\"+\")\n",
      "bbox_to_anchor=(1.02, 0)\n",
      "bbox_loc=\"lower left\"\n",
      "plt.legend(bbox_to_anchor=bbox_to_anchor, loc=bbox_loc, borderaxespad=0)\n",
      "plt.title(\"Relationship of Stringency index and reproduction number\")\n",
      "plt.ylabel(\"Reproduction number\")\n",
      "plt.xlabel(\"Stringency index\")\n",
      "plt.show()"
     ],
     "language": "python",
     "metadata": {},
     "outputs": [
      {
       "output_type": "display_data",
       "png": "\n",
       "text": [
        "<Figure size 432x288 with 1 Axes>"
       ]
      }
     ],
     "prompt_number": 22
    }
   ],
   "metadata": {}
  }
 ]
}
