{
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3.8.2 64-bit ('.venv': venv)",
   "name": "python_defaultSpec_1597669925034"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.8.2-final"
  },
  "name": ""
 },
 "nbformat": 3,
 "nbformat_minor": 0,
 "worksheets": [
  {
   "cells": [
    {
     "cell_type": "markdown",
     "metadata": {},
     "source": [
      "# Usage (details: policy measures)\n",
      "Here, we will analyse the relationship of policy measures and parameter values of SIR-derived ODE models. Policy measures are tracked by [Oxford Covid-19 Government Response Tracker (OxCGRT)](https://github.com/OxCGRT/covid-policy-tracker)."
     ]
    },
    {
     "cell_type": "heading",
     "level": 2,
     "metadata": {},
     "source": [
      "Preparation"
     ]
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "# Standard users\n",
      "# !pip install covsirphy\n",
      "# Developers (Note: this notebook is in example directory)\n",
      "import os\n",
      "os.chdir(\"../\")"
     ],
     "language": "python",
     "metadata": {},
     "outputs": [],
     "prompt_number": 1
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "from pprint import pprint"
     ],
     "language": "python",
     "metadata": {},
     "outputs": [],
     "prompt_number": 2
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "import covsirphy as cs\n",
      "cs.__version__"
     ],
     "language": "python",
     "metadata": {},
     "outputs": [
      {
       "output_type": "pyout",
       "prompt_number": 3,
       "text": [
        "'2.8.3-alpha.new.224'"
       ]
      }
     ],
     "prompt_number": 3
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "# Standard users and developers\n",
      "data_loader = cs.DataLoader(\"input\")\n",
      "# The number of cases (JHU style)\n",
      "jhu_data = data_loader.jhu(verbose=False)\n",
      "# Population in each country\n",
      "population_data = data_loader.population(verbose=False)\n",
      "# Government Response Tracker (OxCGRT)\n",
      "oxcgrt_data = data_loader.oxcgrt(verbose=False)\n",
      "# Description/citation\n",
      "print(oxcgrt_data.citation)"
     ],
     "language": "python",
     "metadata": {
      "tags": []
     },
     "outputs": [
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "(Secondary source) Guidotti, E., Ardia, D., (2020), \"COVID-19 Data Hub\", Journal of Open Source Software 5(51):2376, doi: 10.21105/joss.02376.\n",
        "We can get Citation list of primary sources with DataLoader(...).covid19dh_citation"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      }
     ],
     "prompt_number": 4
    },
    {
     "cell_type": "markdown",
     "metadata": {},
     "source": [
      "## Class for policy measure analysis\n",
      "We will `PolicyMeasures` class to find relationship of policy measures and parameter values of SIR-derived ODE models."
     ]
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "# Create analyser with tau value 360 [min] (can be changed)\n",
      "analyser = cs.PolicyMeasures(jhu_data, population_data, oxcgrt_data, tau=360)\n",
      "# The number of registerd countries\n",
      "len(analyser.countries)"
     ],
     "language": "python",
     "metadata": {
      "tags": []
     },
     "outputs": [
      {
       "output_type": "pyout",
       "prompt_number": 5,
       "text": [
        "184"
       ]
      }
     ],
     "prompt_number": 5
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "# We can get Scenario instance for detailed scenario analysis\n",
      "type(analyser.scenario(\"Japan\"))"
     ],
     "language": "python",
     "metadata": {},
     "outputs": [
      {
       "output_type": "pyout",
       "prompt_number": 6,
       "text": [
        "covsirphy.analysis.scenario.Scenario"
       ]
      }
     ],
     "prompt_number": 6
    },
    {
     "cell_type": "markdown",
     "metadata": {},
     "source": [
      "## Set phases with S-R trend analysis\n",
      "We will perform S-R trend analysis to set phases in all countries. Countries which do not have **12th phases** will be un-registered for the next analysis. This number will be adjusted for your analysis."
     ]
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "# Show the number of phases of all countries\n",
      "analyser.trend()\n",
      "pprint(analyser.phase_len(), compact=True)"
     ],
     "language": "python",
     "metadata": {},
     "outputs": [
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "{"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "4"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ": "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "['Tanzania', 'Myanmar']"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        " "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "5"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ": "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "["
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Hungary'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Jordan'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Trinidad and Tobago'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Tunisia'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Papua New Guinea'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        "     "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Georgia'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Brunei'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Grenada'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Dominica'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Belize'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        "     "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Antigua and Barbuda'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Fiji'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Libya'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "]"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        " "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "6"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ": "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "["
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Andorra'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Equatorial Guinea'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Uganda'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Cambodia'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Guinea-Bissau'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        "     "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Slovakia'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Jamaica'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Seychelles'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Slovenia'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Czech Republic'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        "     "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Lesotho'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Yemen'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Cyprus'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Ireland'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Comoros'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Mauritius'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "]"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        " "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "7"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ": "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "["
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Sao Tome and Principe'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Kazakhstan'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Bahamas'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Kyrgyzstan'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Gambia'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        "     "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'South Sudan'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Angola'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Malawi'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Paraguay'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Montenegro'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Colombia'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        "     "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'New Zealand'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Australia'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Lebanon'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Vietnam'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Namibia'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Netherlands'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        "     "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Spain'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Mozambique'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Burundi'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Central African Republic'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Mongolia'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        "     "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Monaco'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Afghanistan'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Guyana'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Saint Vincent and the Grenadines'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        "     "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'San Marino'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "]"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        " "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "8"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ": "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "["
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Malta'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Sudan'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Costa Rica'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Israel'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Nicaragua'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Morocco'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        "     "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Zimbabwe'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Botswana'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Saint Lucia'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Austria'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Palestine'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Barbados'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        "     "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Denmark'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Zambia'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Ethiopia'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Madagascar'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Kenya'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Argentina'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        "     "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Ukraine'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Nepal'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Ecuador'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Croatia'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Niger'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Rwanda'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Lithuania'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        "     "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Eritrea'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Norway'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Djibouti'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Iceland'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Thailand'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Suriname'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "]"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        " "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "9"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ": "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "["
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Ghana'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'India'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Uruguay'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Poland'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Serbia'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Sri Lanka'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        "     "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Philippines'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Somalia'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Maldives'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'China'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Japan'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Benin'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        "     "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Cameroon'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Gabon'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Burkina Faso'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Chad'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Finland'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Romania'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        "     "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'South Africa'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Haiti'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Liberia'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Bermuda'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Liechtenstein'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Qatar'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        "     "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Mauritania'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Greece'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Syria'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Kosovo'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Bhutan'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Tajikistan'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        "     "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Korea, South'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Taiwan'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "]"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        " "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "10"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ": "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "["
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'El Salvador'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Sierra Leone'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Indonesia'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Azerbaijan'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Singapore'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        "      "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Pakistan'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Chile'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Oman'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Senegal'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Swaziland'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Malaysia'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        "      "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Estonia'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Portugal'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Venezuela'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Albania'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Guatemala'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Cuba'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        "      "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Canada'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Cape Verde'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Germany'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Congo'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Mali'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Belarus'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        "      "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Luxembourg'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Saudi Arabia'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Uzbekistan'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Bulgaria'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "]"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        " "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "11"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ": "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "["
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Bangladesh'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Egypt'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Algeria'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Dominican Republic'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Honduras'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        "      "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Nigeria'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Moldova'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Togo'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Guinea'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'France'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Iraq'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Belgium'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        "      "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Bosnia and Herzegovina'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Panama'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Armenia'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Mexico'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Macedonia'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        "      "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Switzerland'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Peru'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "]"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        " "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "12"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ": "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "["
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Bahrain'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Latvia'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Iran'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'United Arab Emirates'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Italy'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Kuwait'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        "      "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Brazil'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Turkey'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Bolivia'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'United States'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "]"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        " "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "13"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ": "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "['Russia']"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "}"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      }
     ],
     "prompt_number": 7
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "# Set phases with S-R trend analysis\n",
      "analyser.trend(min_len=12)\n",
      "# The number of countries\n",
      "len(analyser.countries)"
     ],
     "language": "python",
     "metadata": {},
     "outputs": [
      {
       "output_type": "pyout",
       "prompt_number": 8,
       "text": [
        "11"
       ]
      }
     ],
     "prompt_number": 8
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "phase_len_dict = analyser.phase_len()\n",
      "pprint(phase_len_dict, compact=True)"
     ],
     "language": "python",
     "metadata": {
      "tags": []
     },
     "outputs": [
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "{"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "12"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ": "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "["
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Bahrain'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Latvia'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Iran'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'United Arab Emirates'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Italy'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Kuwait'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        "      "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Brazil'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Turkey'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Bolivia'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'United States'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "]"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        " "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "13"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ": "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "['Russia']"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "}"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      }
     ],
     "prompt_number": 9
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "# Here, only show the countries which have the most phases\n",
      "countries_show = max(phase_len_dict.items(), key=lambda x: x[0])[1]\n",
      "# Show summary\n",
      "analyser.summary(countries=countries_show)"
     ],
     "language": "python",
     "metadata": {
      "tags": []
     },
     "outputs": [
      {
       "html": [
        "<div>\n",
        "<style scoped>\n",
        "    .dataframe tbody tr th:only-of-type {\n",
        "        vertical-align: middle;\n",
        "    }\n",
        "\n",
        "    .dataframe tbody tr th {\n",
        "        vertical-align: top;\n",
        "    }\n",
        "\n",
        "    .dataframe thead th {\n",
        "        text-align: right;\n",
        "    }\n",
        "</style>\n",
        "<table border=\"1\" class=\"dataframe\">\n",
        "  <thead>\n",
        "    <tr style=\"text-align: right;\">\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th>Type</th>\n",
        "      <th>Start</th>\n",
        "      <th>End</th>\n",
        "      <th>Population</th>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>Country</th>\n",
        "      <th>Phase</th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "    </tr>\n",
        "  </thead>\n",
        "  <tbody>\n",
        "    <tr>\n",
        "      <th rowspan=\"13\" valign=\"top\">Russia</th>\n",
        "      <th>0th</th>\n",
        "      <td>Past</td>\n",
        "      <td>12Feb2020</td>\n",
        "      <td>06May2020</td>\n",
        "      <td>330457362</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>1st</th>\n",
        "      <td>Past</td>\n",
        "      <td>07May2020</td>\n",
        "      <td>18May2020</td>\n",
        "      <td>330457362</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>2nd</th>\n",
        "      <td>Past</td>\n",
        "      <td>19May2020</td>\n",
        "      <td>29May2020</td>\n",
        "      <td>330457362</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>3rd</th>\n",
        "      <td>Past</td>\n",
        "      <td>30May2020</td>\n",
        "      <td>10Jun2020</td>\n",
        "      <td>330457362</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>4th</th>\n",
        "      <td>Past</td>\n",
        "      <td>11Jun2020</td>\n",
        "      <td>21Jun2020</td>\n",
        "      <td>330457362</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>5th</th>\n",
        "      <td>Past</td>\n",
        "      <td>22Jun2020</td>\n",
        "      <td>03Jul2020</td>\n",
        "      <td>330457362</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>6th</th>\n",
        "      <td>Past</td>\n",
        "      <td>04Jul2020</td>\n",
        "      <td>17Jul2020</td>\n",
        "      <td>330457362</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>7th</th>\n",
        "      <td>Past</td>\n",
        "      <td>18Jul2020</td>\n",
        "      <td>31Jul2020</td>\n",
        "      <td>330457362</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>8th</th>\n",
        "      <td>Past</td>\n",
        "      <td>01Aug2020</td>\n",
        "      <td>15Aug2020</td>\n",
        "      <td>330457362</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>9th</th>\n",
        "      <td>Past</td>\n",
        "      <td>16Aug2020</td>\n",
        "      <td>02Sep2020</td>\n",
        "      <td>330457362</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>10th</th>\n",
        "      <td>Past</td>\n",
        "      <td>03Sep2020</td>\n",
        "      <td>18Sep2020</td>\n",
        "      <td>330457362</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>11th</th>\n",
        "      <td>Past</td>\n",
        "      <td>19Sep2020</td>\n",
        "      <td>30Sep2020</td>\n",
        "      <td>330457362</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>12th</th>\n",
        "      <td>Past</td>\n",
        "      <td>01Oct2020</td>\n",
        "      <td>11Oct2020</td>\n",
        "      <td>330457362</td>\n",
        "    </tr>\n",
        "  </tbody>\n",
        "</table>\n",
        "</div>"
       ],
       "output_type": "pyout",
       "prompt_number": 10,
       "text": [
        "               Type      Start        End  Population\n",
        "Country Phase                                        \n",
        "Russia  0th    Past  12Feb2020  06May2020   330457362\n",
        "        1st    Past  07May2020  18May2020   330457362\n",
        "        2nd    Past  19May2020  29May2020   330457362\n",
        "        3rd    Past  30May2020  10Jun2020   330457362\n",
        "        4th    Past  11Jun2020  21Jun2020   330457362\n",
        "        5th    Past  22Jun2020  03Jul2020   330457362\n",
        "        6th    Past  04Jul2020  17Jul2020   330457362\n",
        "        7th    Past  18Jul2020  31Jul2020   330457362\n",
        "        8th    Past  01Aug2020  15Aug2020   330457362\n",
        "        9th    Past  16Aug2020  02Sep2020   330457362\n",
        "        10th   Past  03Sep2020  18Sep2020   330457362\n",
        "        11th   Past  19Sep2020  30Sep2020   330457362\n",
        "        12th   Past  01Oct2020  11Oct2020   330457362"
       ]
      }
     ],
     "prompt_number": 10
    },
    {
     "cell_type": "markdown",
     "metadata": {},
     "source": [
      "## Parameter estimation\n",
      "we will estimate the parameter values with SIR-derived ODE models in each country."
     ]
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "# Parameter estimation with SIR-F model\n",
      "analyser.estimate(cs.SIRF)"
     ],
     "language": "python",
     "metadata": {
      "tags": []
     },
     "outputs": [
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n",
        "<SIR-F model: parameter estimation>"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "Running optimization with 4 CPUs..."
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tUSA,  2nd phase (03Jun2020 - 23Jun2020): finished  557 trials in 0 min 20 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tITA,  6th phase (28May2020 - 14Jul2020): finished  560 trials in 0 min 20 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tARE,  5th phase (21Jun2020 - 03Jul2020): finished  177 trials in 0 min  5 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tUSA,  5th phase (18Jul2020 - 28Jul2020): finished  318 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tBHR,  1st phase (07May2020 - 31May2020): finished 1430 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tBRA,  1st phase (28May2020 - 14Jun2020): finished 1438 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tKWT,  4th phase (23Jun2020 - 06Jul2020): finished 1458 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tTUR,  2nd phase (30Apr2020 - 08May2020): finished 1149 trials in 0 min 45 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tRUS, 11th phase (19Sep2020 - 30Sep2020): finished 1357 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tBOL,  7th phase (11Aug2020 - 25Aug2020): finished 1343 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tRUS,  5th phase (22Jun2020 - 03Jul2020): finished 1389 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tRUS, 12th phase (01Oct2020 - 11Oct2020): finished 1072 trials in 0 min 45 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tBRA,  8th phase (20Aug2020 - 30Aug2020): finished 1309 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tBHR, 10th phase (17Sep2020 - 26Sep2020): finished  180 trials in 0 min  5 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tBOL,  3rd phase (06Jul2020 - 15Jul2020): finished 1353 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tKWT,  9th phase (02Sep2020 - 12Sep2020): finished 1282 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tARE, 11th phase (02Oct2020 - 11Oct2020): finished 1321 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tRUS,  8th phase (01Aug2020 - 15Aug2020): finished 1371 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tRUS,  9th phase (16Aug2020 - 02Sep2020): finished 1391 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tLVA,  4th phase (08May2020 - 15May2020): finished 1356 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tITA, 11th phase (03Oct2020 - 11Oct2020): finished  292 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tBRA,  4th phase (09Jul2020 - 20Jul2020): finished  416 trials in 0 min 15 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tBRA,  7th phase (11Aug2020 - 19Aug2020): finished 1366 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tITA,  7th phase (15Jul2020 - 25Aug2020): finished 1307 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tUSA,  3rd phase (24Jun2020 - 07Jul2020): finished 1362 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tITA,  5th phase (12May2020 - 27May2020): finished  240 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tBRA,  5th phase (21Jul2020 - 30Jul2020): finished 1318 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tBHR,  5th phase (08Jul2020 - 19Jul2020): finished 1316 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tBHR,  8th phase (22Aug2020 - 05Sep2020): finished 1286 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tBOL,  2nd phase (26Jun2020 - 05Jul2020): finished  281 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tIRN,  6th phase (04Jul2020 - 19Jul2020): finished  139 trials in 0 min  5 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tBOL,  1st phase (14Jun2020 - 25Jun2020): finished 1335 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tUSA,  7th phase (08Aug2020 - 19Aug2020): finished  527 trials in 0 min 20 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tBHR, 11th phase (27Sep2020 - 11Oct2020): finished  268 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tLVA,  2nd phase (19Apr2020 - 29Apr2020): finished 1282 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tTUR, 11th phase (23Sep2020 - 11Oct2020): finished  155 trials in 0 min  5 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tARE,  4th phase (06Jun2020 - 20Jun2020): finished  960 trials in 0 min 40 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tIRN,  3rd phase (15May2020 - 01Jun2020): finished  274 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tUSA,  1st phase (04May2020 - 02Jun2020): finished 1363 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tLVA, 10th phase (11Sep2020 - 24Sep2020): finished  983 trials in 0 min 35 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tUSA,  8th phase (20Aug2020 - 02Sep2020): finished  159 trials in 0 min  5 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tBRA,  0th phase (16Mar2020 - 27May2020): finished 1178 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tBRA, 11th phase (24Sep2020 - 11Oct2020): finished  525 trials in 0 min 20 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tBRA,  9th phase (31Aug2020 - 10Sep2020): finished  276 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tKWT, 10th phase (13Sep2020 - 24Sep2020): finished 1346 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tARE,  0th phase (12Feb2020 - 29Apr2020): finished 1320 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tLVA,  7th phase (09Jul2020 - 05Aug2020): finished 1548 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tIRN,  9th phase (23Aug2020 - 13Sep2020): finished  305 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tBRA,  6th phase (31Jul2020 - 10Aug2020): finished 1035 trials in 0 min 40 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tARE,  6th phase (04Jul2020 - 23Jul2020): finished 1401 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tITA,  3rd phase (11Apr2020 - 23Apr2020): finished 1417 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tBHR,  4th phase (25Jun2020 - 07Jul2020): finished 1410 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tITA,  9th phase (13Sep2020 - 23Sep2020): finished  154 trials in 0 min  5 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tARE,  2nd phase (15May2020 - 24May2020): finished 1422 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tIRN, 11th phase (28Sep2020 - 11Oct2020): finished  179 trials in 0 min  5 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tLVA,  5th phase (16May2020 - 29May2020): finished 1443 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tKWT,  6th phase (21Jul2020 - 03Aug2020): finished  572 trials in 0 min 20 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tKWT,  8th phase (18Aug2020 - 01Sep2020): finished  568 trials in 0 min 20 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tIRN,  7th phase (20Jul2020 - 04Aug2020): finished  177 trials in 0 min  5 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tITA,  1st phase (21Mar2020 - 28Mar2020): finished 1238 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tIRN,  1st phase (30Mar2020 - 18Apr2020): finished 1231 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tRUS,  3rd phase (30May2020 - 10Jun2020): finished 1197 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tIRN,  8th phase (05Aug2020 - 22Aug2020): finished  360 trials in 0 min 15 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tKWT,  1st phase (13May2020 - 27May2020): finished 1170 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tITA, 10th phase (24Sep2020 - 02Oct2020): finished  231 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tTUR,  6th phase (28Jun2020 - 15Jul2020): finished  542 trials in 0 min 25 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tRUS,  0th phase (12Feb2020 - 06May2020): finished 1148 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tKWT,  5th phase (07Jul2020 - 20Jul2020): finished 1152 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tBOL,  4th phase (16Jul2020 - 23Jul2020): finished  229 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tUSA,  9th phase (03Sep2020 - 16Sep2020): finished  923 trials in 0 min 45 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tTUR, 10th phase (08Sep2020 - 22Sep2020): finished  136 trials in 0 min  5 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tUSA,  4th phase (08Jul2020 - 17Jul2020): finished  332 trials in 0 min 15 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tIRN,  2nd phase (19Apr2020 - 14May2020): finished  461 trials in 0 min 20 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tBHR,  2nd phase (01Jun2020 - 13Jun2020): finished 1137 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tIRN,  0th phase (26Feb2020 - 29Mar2020): finished 1129 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tLVA,  6th phase (30May2020 - 08Jul2020): finished 1103 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tBRA, 10th phase (11Sep2020 - 23Sep2020): finished  131 trials in 0 min  5 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tIRN,  5th phase (18Jun2020 - 03Jul2020): finished   98 trials in 0 min  5 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tBOL,  6th phase (01Aug2020 - 10Aug2020): finished  134 trials in 0 min  5 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tARE,  9th phase (11Sep2020 - 22Sep2020): finished  949 trials in 0 min 50 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tRUS,  4th phase (11Jun2020 - 21Jun2020): finished 1084 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tARE,  3rd phase (25May2020 - 05Jun2020): finished 1163 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tBRA,  3rd phase (27Jun2020 - 08Jul2020): finished 1207 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tKWT,  2nd phase (28May2020 - 07Jun2020): finished 1241 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tUSA,  6th phase (29Jul2020 - 07Aug2020): finished  425 trials in 0 min 15 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tTUR,  7th phase (16Jul2020 - 04Aug2020): finished  270 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tTUR,  3rd phase (09May2020 - 22May2020): finished 1279 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tTUR,  9th phase (23Aug2020 - 07Sep2020): finished  388 trials in 0 min 15 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tLVA,  9th phase (29Aug2020 - 10Sep2020): finished 1272 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tBHR,  7th phase (06Aug2020 - 21Aug2020): finished 1278 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tRUS,  1st phase (07May2020 - 18May2020): finished 1262 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tARE, 10th phase (23Sep2020 - 01Oct2020): finished  281 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tUSA,  0th phase (09Feb2020 - 03May2020): finished 1251 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tKWT,  3rd phase (08Jun2020 - 22Jun2020): finished 1469 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tBHR,  0th phase (06Mar2020 - 06May2020): finished 1440 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tTUR,  1st phase (17Apr2020 - 29Apr2020): finished 1501 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tRUS,  7th phase (18Jul2020 - 31Jul2020): finished 1507 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tBOL,  5th phase (24Jul2020 - 31Jul2020): finished  631 trials in 0 min 20 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tTUR,  0th phase (24Mar2020 - 16Apr2020): finished 1491 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tITA,  2nd phase (29Mar2020 - 10Apr2020): finished 1502 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tRUS,  6th phase (04Jul2020 - 17Jul2020): finished 1499 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tBOL,  8th phase (26Aug2020 - 02Sep2020): finished  338 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tLVA,  1st phase (07Apr2020 - 18Apr2020): finished 1731 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tUSA, 11th phase (29Sep2020 - 11Oct2020): finished  758 trials in 0 min 25 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tBHR,  9th phase (06Sep2020 - 16Sep2020): finished 1515 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tARE,  1st phase (30Apr2020 - 14May2020): finished 1504 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tKWT,  7th phase (04Aug2020 - 17Aug2020): finished  312 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tITA,  0th phase (24Feb2020 - 20Mar2020): finished 1492 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tARE,  8th phase (21Aug2020 - 10Sep2020): finished 1478 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tITA,  4th phase (24Apr2020 - 11May2020): finished 1484 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tLVA,  8th phase (06Aug2020 - 28Aug2020): finished 1688 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tTUR,  5th phase (13Jun2020 - 27Jun2020): finished 1481 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tBHR,  6th phase (20Jul2020 - 05Aug2020): finished  177 trials in 0 min  5 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tIRN, 10th phase (14Sep2020 - 27Sep2020): finished  173 trials in 0 min  5 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tUSA, 10th phase (17Sep2020 - 28Sep2020): finished  735 trials in 0 min 25 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tRUS, 10th phase (03Sep2020 - 18Sep2020): finished 1491 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tKWT,  0th phase (08Mar2020 - 12May2020): finished 1324 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tBHR,  3rd phase (14Jun2020 - 24Jun2020): finished 1506 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tBRA,  2nd phase (15Jun2020 - 26Jun2020): finished  487 trials in 0 min 15 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tRUS,  2nd phase (19May2020 - 29May2020): finished 1495 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tLVA, 11th phase (25Sep2020 - 11Oct2020): finished 1734 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tBOL,  0th phase (01Apr2020 - 13Jun2020): finished 1474 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tLVA,  0th phase (10Mar2020 - 06Apr2020): finished 1725 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tLVA,  3rd phase (30Apr2020 - 07May2020): finished 1772 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tTUR,  4th phase (23May2020 - 12Jun2020): finished 1566 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tBOL,  9th phase (03Sep2020 - 10Sep2020): finished 1586 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tARE,  7th phase (24Jul2020 - 20Aug2020): finished 1683 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tIRN,  4th phase (02Jun2020 - 17Jun2020): finished  839 trials in 0 min 25 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tITA,  8th phase (26Aug2020 - 12Sep2020): finished  194 trials in 0 min  5 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "Completed optimization. Total: 23 min 48 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      }
     ],
     "prompt_number": 11
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "# Show summary\n",
      "analyser.summary(countries=countries_show)"
     ],
     "language": "python",
     "metadata": {},
     "outputs": [
      {
       "html": [
        "<div>\n",
        "<style scoped>\n",
        "    .dataframe tbody tr th:only-of-type {\n",
        "        vertical-align: middle;\n",
        "    }\n",
        "\n",
        "    .dataframe tbody tr th {\n",
        "        vertical-align: top;\n",
        "    }\n",
        "\n",
        "    .dataframe thead th {\n",
        "        text-align: right;\n",
        "    }\n",
        "</style>\n",
        "<table border=\"1\" class=\"dataframe\">\n",
        "  <thead>\n",
        "    <tr style=\"text-align: right;\">\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th>Type</th>\n",
        "      <th>Start</th>\n",
        "      <th>End</th>\n",
        "      <th>Population</th>\n",
        "      <th>ODE</th>\n",
        "      <th>Rt</th>\n",
        "      <th>theta</th>\n",
        "      <th>kappa</th>\n",
        "      <th>rho</th>\n",
        "      <th>sigma</th>\n",
        "      <th>tau</th>\n",
        "      <th>1/gamma [day]</th>\n",
        "      <th>1/alpha2 [day]</th>\n",
        "      <th>1/beta [day]</th>\n",
        "      <th>alpha1 [-]</th>\n",
        "      <th>RMSLE</th>\n",
        "      <th>Trials</th>\n",
        "      <th>Runtime</th>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>Country</th>\n",
        "      <th>Phase</th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "    </tr>\n",
        "  </thead>\n",
        "  <tbody>\n",
        "    <tr>\n",
        "      <th rowspan=\"13\" valign=\"top\">Russia</th>\n",
        "      <th>0th</th>\n",
        "      <td>Past</td>\n",
        "      <td>12Feb2020</td>\n",
        "      <td>06May2020</td>\n",
        "      <td>330457362</td>\n",
        "      <td>SIR-F</td>\n",
        "      <td>0.02</td>\n",
        "      <td>0.602763</td>\n",
        "      <td>0.544883</td>\n",
        "      <td>0.034081</td>\n",
        "      <td>0.002299</td>\n",
        "      <td>360</td>\n",
        "      <td>108</td>\n",
        "      <td>0</td>\n",
        "      <td>7</td>\n",
        "      <td>0.603</td>\n",
        "      <td>18.966727</td>\n",
        "      <td>1148</td>\n",
        "      <td>1 min  0 sec</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>1st</th>\n",
        "      <td>Past</td>\n",
        "      <td>07May2020</td>\n",
        "      <td>18May2020</td>\n",
        "      <td>330457362</td>\n",
        "      <td>SIR-F</td>\n",
        "      <td>2.85</td>\n",
        "      <td>0.001806</td>\n",
        "      <td>0.000093</td>\n",
        "      <td>0.013110</td>\n",
        "      <td>0.004495</td>\n",
        "      <td>360</td>\n",
        "      <td>55</td>\n",
        "      <td>2675</td>\n",
        "      <td>19</td>\n",
        "      <td>0.002</td>\n",
        "      <td>0.087751</td>\n",
        "      <td>1262</td>\n",
        "      <td>1 min  0 sec</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>2nd</th>\n",
        "      <td>Past</td>\n",
        "      <td>19May2020</td>\n",
        "      <td>29May2020</td>\n",
        "      <td>330457362</td>\n",
        "      <td>SIR-F</td>\n",
        "      <td>1.03</td>\n",
        "      <td>0.000337</td>\n",
        "      <td>0.000113</td>\n",
        "      <td>0.006707</td>\n",
        "      <td>0.006392</td>\n",
        "      <td>360</td>\n",
        "      <td>39</td>\n",
        "      <td>2208</td>\n",
        "      <td>37</td>\n",
        "      <td>0.000</td>\n",
        "      <td>0.111343</td>\n",
        "      <td>1495</td>\n",
        "      <td>1 min  0 sec</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>3rd</th>\n",
        "      <td>Past</td>\n",
        "      <td>30May2020</td>\n",
        "      <td>10Jun2020</td>\n",
        "      <td>330457362</td>\n",
        "      <td>SIR-F</td>\n",
        "      <td>1.05</td>\n",
        "      <td>0.000542</td>\n",
        "      <td>0.000095</td>\n",
        "      <td>0.004816</td>\n",
        "      <td>0.004492</td>\n",
        "      <td>360</td>\n",
        "      <td>55</td>\n",
        "      <td>2645</td>\n",
        "      <td>51</td>\n",
        "      <td>0.001</td>\n",
        "      <td>0.096661</td>\n",
        "      <td>1197</td>\n",
        "      <td>1 min  0 sec</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>4th</th>\n",
        "      <td>Past</td>\n",
        "      <td>11Jun2020</td>\n",
        "      <td>21Jun2020</td>\n",
        "      <td>330457362</td>\n",
        "      <td>SIR-F</td>\n",
        "      <td>1.20</td>\n",
        "      <td>0.001089</td>\n",
        "      <td>0.000069</td>\n",
        "      <td>0.003829</td>\n",
        "      <td>0.003124</td>\n",
        "      <td>360</td>\n",
        "      <td>80</td>\n",
        "      <td>3612</td>\n",
        "      <td>65</td>\n",
        "      <td>0.001</td>\n",
        "      <td>0.059396</td>\n",
        "      <td>1084</td>\n",
        "      <td>1 min  0 sec</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>5th</th>\n",
        "      <td>Past</td>\n",
        "      <td>22Jun2020</td>\n",
        "      <td>03Jul2020</td>\n",
        "      <td>330457362</td>\n",
        "      <td>SIR-F</td>\n",
        "      <td>1.03</td>\n",
        "      <td>0.018470</td>\n",
        "      <td>0.000004</td>\n",
        "      <td>0.002736</td>\n",
        "      <td>0.002599</td>\n",
        "      <td>360</td>\n",
        "      <td>96</td>\n",
        "      <td>68316</td>\n",
        "      <td>91</td>\n",
        "      <td>0.018</td>\n",
        "      <td>0.062681</td>\n",
        "      <td>1389</td>\n",
        "      <td>1 min  0 sec</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>6th</th>\n",
        "      <td>Past</td>\n",
        "      <td>04Jul2020</td>\n",
        "      <td>17Jul2020</td>\n",
        "      <td>330457362</td>\n",
        "      <td>SIR-F</td>\n",
        "      <td>0.89</td>\n",
        "      <td>0.000242</td>\n",
        "      <td>0.000057</td>\n",
        "      <td>0.002299</td>\n",
        "      <td>0.002514</td>\n",
        "      <td>360</td>\n",
        "      <td>99</td>\n",
        "      <td>4387</td>\n",
        "      <td>108</td>\n",
        "      <td>0.000</td>\n",
        "      <td>0.064728</td>\n",
        "      <td>1499</td>\n",
        "      <td>1 min  0 sec</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>7th</th>\n",
        "      <td>Past</td>\n",
        "      <td>18Jul2020</td>\n",
        "      <td>31Jul2020</td>\n",
        "      <td>330457362</td>\n",
        "      <td>SIR-F</td>\n",
        "      <td>0.76</td>\n",
        "      <td>0.000031</td>\n",
        "      <td>0.000041</td>\n",
        "      <td>0.001834</td>\n",
        "      <td>0.002377</td>\n",
        "      <td>360</td>\n",
        "      <td>105</td>\n",
        "      <td>6131</td>\n",
        "      <td>136</td>\n",
        "      <td>0.000</td>\n",
        "      <td>0.060525</td>\n",
        "      <td>1507</td>\n",
        "      <td>1 min  0 sec</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>8th</th>\n",
        "      <td>Past</td>\n",
        "      <td>01Aug2020</td>\n",
        "      <td>15Aug2020</td>\n",
        "      <td>330457362</td>\n",
        "      <td>SIR-F</td>\n",
        "      <td>0.73</td>\n",
        "      <td>0.016638</td>\n",
        "      <td>0.000011</td>\n",
        "      <td>0.001426</td>\n",
        "      <td>0.001913</td>\n",
        "      <td>360</td>\n",
        "      <td>130</td>\n",
        "      <td>22598</td>\n",
        "      <td>175</td>\n",
        "      <td>0.017</td>\n",
        "      <td>0.056319</td>\n",
        "      <td>1371</td>\n",
        "      <td>1 min  0 sec</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>9th</th>\n",
        "      <td>Past</td>\n",
        "      <td>16Aug2020</td>\n",
        "      <td>02Sep2020</td>\n",
        "      <td>330457362</td>\n",
        "      <td>SIR-F</td>\n",
        "      <td>0.87</td>\n",
        "      <td>0.019479</td>\n",
        "      <td>0.000002</td>\n",
        "      <td>0.001273</td>\n",
        "      <td>0.001426</td>\n",
        "      <td>360</td>\n",
        "      <td>175</td>\n",
        "      <td>132403</td>\n",
        "      <td>196</td>\n",
        "      <td>0.019</td>\n",
        "      <td>0.053140</td>\n",
        "      <td>1391</td>\n",
        "      <td>1 min  0 sec</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>10th</th>\n",
        "      <td>Past</td>\n",
        "      <td>03Sep2020</td>\n",
        "      <td>18Sep2020</td>\n",
        "      <td>330457362</td>\n",
        "      <td>SIR-F</td>\n",
        "      <td>1.02</td>\n",
        "      <td>0.001628</td>\n",
        "      <td>0.000021</td>\n",
        "      <td>0.001279</td>\n",
        "      <td>0.001232</td>\n",
        "      <td>360</td>\n",
        "      <td>202</td>\n",
        "      <td>11747</td>\n",
        "      <td>195</td>\n",
        "      <td>0.002</td>\n",
        "      <td>0.038815</td>\n",
        "      <td>1491</td>\n",
        "      <td>1 min  0 sec</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>11th</th>\n",
        "      <td>Past</td>\n",
        "      <td>19Sep2020</td>\n",
        "      <td>30Sep2020</td>\n",
        "      <td>330457362</td>\n",
        "      <td>SIR-F</td>\n",
        "      <td>1.91</td>\n",
        "      <td>0.000964</td>\n",
        "      <td>0.000021</td>\n",
        "      <td>0.001508</td>\n",
        "      <td>0.000766</td>\n",
        "      <td>360</td>\n",
        "      <td>326</td>\n",
        "      <td>11761</td>\n",
        "      <td>165</td>\n",
        "      <td>0.001</td>\n",
        "      <td>0.017508</td>\n",
        "      <td>1357</td>\n",
        "      <td>1 min  0 sec</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>12th</th>\n",
        "      <td>Past</td>\n",
        "      <td>01Oct2020</td>\n",
        "      <td>11Oct2020</td>\n",
        "      <td>330457362</td>\n",
        "      <td>SIR-F</td>\n",
        "      <td>1.70</td>\n",
        "      <td>0.002424</td>\n",
        "      <td>0.000031</td>\n",
        "      <td>0.002296</td>\n",
        "      <td>0.001314</td>\n",
        "      <td>360</td>\n",
        "      <td>190</td>\n",
        "      <td>8003</td>\n",
        "      <td>108</td>\n",
        "      <td>0.002</td>\n",
        "      <td>0.011734</td>\n",
        "      <td>1072</td>\n",
        "      <td>0 min 45 sec</td>\n",
        "    </tr>\n",
        "  </tbody>\n",
        "</table>\n",
        "</div>"
       ],
       "output_type": "pyout",
       "prompt_number": 12,
       "text": [
        "               Type      Start        End  Population    ODE    Rt     theta  \\\n",
        "Country Phase                                                                  \n",
        "Russia  0th    Past  12Feb2020  06May2020   330457362  SIR-F  0.02  0.602763   \n",
        "        1st    Past  07May2020  18May2020   330457362  SIR-F  2.85  0.001806   \n",
        "        2nd    Past  19May2020  29May2020   330457362  SIR-F  1.03  0.000337   \n",
        "        3rd    Past  30May2020  10Jun2020   330457362  SIR-F  1.05  0.000542   \n",
        "        4th    Past  11Jun2020  21Jun2020   330457362  SIR-F  1.20  0.001089   \n",
        "        5th    Past  22Jun2020  03Jul2020   330457362  SIR-F  1.03  0.018470   \n",
        "        6th    Past  04Jul2020  17Jul2020   330457362  SIR-F  0.89  0.000242   \n",
        "        7th    Past  18Jul2020  31Jul2020   330457362  SIR-F  0.76  0.000031   \n",
        "        8th    Past  01Aug2020  15Aug2020   330457362  SIR-F  0.73  0.016638   \n",
        "        9th    Past  16Aug2020  02Sep2020   330457362  SIR-F  0.87  0.019479   \n",
        "        10th   Past  03Sep2020  18Sep2020   330457362  SIR-F  1.02  0.001628   \n",
        "        11th   Past  19Sep2020  30Sep2020   330457362  SIR-F  1.91  0.000964   \n",
        "        12th   Past  01Oct2020  11Oct2020   330457362  SIR-F  1.70  0.002424   \n",
        "\n",
        "                  kappa       rho     sigma  tau  1/gamma [day]  \\\n",
        "Country Phase                                                     \n",
        "Russia  0th    0.544883  0.034081  0.002299  360            108   \n",
        "        1st    0.000093  0.013110  0.004495  360             55   \n",
        "        2nd    0.000113  0.006707  0.006392  360             39   \n",
        "        3rd    0.000095  0.004816  0.004492  360             55   \n",
        "        4th    0.000069  0.003829  0.003124  360             80   \n",
        "        5th    0.000004  0.002736  0.002599  360             96   \n",
        "        6th    0.000057  0.002299  0.002514  360             99   \n",
        "        7th    0.000041  0.001834  0.002377  360            105   \n",
        "        8th    0.000011  0.001426  0.001913  360            130   \n",
        "        9th    0.000002  0.001273  0.001426  360            175   \n",
        "        10th   0.000021  0.001279  0.001232  360            202   \n",
        "        11th   0.000021  0.001508  0.000766  360            326   \n",
        "        12th   0.000031  0.002296  0.001314  360            190   \n",
        "\n",
        "               1/alpha2 [day]  1/beta [day]  alpha1 [-]      RMSLE  Trials  \\\n",
        "Country Phase                                                                \n",
        "Russia  0th                 0             7       0.603  18.966727    1148   \n",
        "        1st              2675            19       0.002   0.087751    1262   \n",
        "        2nd              2208            37       0.000   0.111343    1495   \n",
        "        3rd              2645            51       0.001   0.096661    1197   \n",
        "        4th              3612            65       0.001   0.059396    1084   \n",
        "        5th             68316            91       0.018   0.062681    1389   \n",
        "        6th              4387           108       0.000   0.064728    1499   \n",
        "        7th              6131           136       0.000   0.060525    1507   \n",
        "        8th             22598           175       0.017   0.056319    1371   \n",
        "        9th            132403           196       0.019   0.053140    1391   \n",
        "        10th            11747           195       0.002   0.038815    1491   \n",
        "        11th            11761           165       0.001   0.017508    1357   \n",
        "        12th             8003           108       0.002   0.011734    1072   \n",
        "\n",
        "                    Runtime  \n",
        "Country Phase                \n",
        "Russia  0th    1 min  0 sec  \n",
        "        1st    1 min  0 sec  \n",
        "        2nd    1 min  0 sec  \n",
        "        3rd    1 min  0 sec  \n",
        "        4th    1 min  0 sec  \n",
        "        5th    1 min  0 sec  \n",
        "        6th    1 min  0 sec  \n",
        "        7th    1 min  0 sec  \n",
        "        8th    1 min  0 sec  \n",
        "        9th    1 min  0 sec  \n",
        "        10th   1 min  0 sec  \n",
        "        11th   1 min  0 sec  \n",
        "        12th   0 min 45 sec  "
       ]
      }
     ],
     "prompt_number": 12
    },
    {
     "cell_type": "markdown",
     "metadata": {},
     "source": [
      "## Compare the history of parameters\n",
      "Here, compare the history of parameter values if countries."
     ]
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "# All parameter/day parameter/Rt/OxCGRT\n",
      "analyser.track().head()"
     ],
     "language": "python",
     "metadata": {},
     "outputs": [
      {
       "html": [
        "<div>\n",
        "<style scoped>\n",
        "    .dataframe tbody tr th:only-of-type {\n",
        "        vertical-align: middle;\n",
        "    }\n",
        "\n",
        "    .dataframe tbody tr th {\n",
        "        vertical-align: top;\n",
        "    }\n",
        "\n",
        "    .dataframe thead th {\n",
        "        text-align: right;\n",
        "    }\n",
        "</style>\n",
        "<table border=\"1\" class=\"dataframe\">\n",
        "  <thead>\n",
        "    <tr style=\"text-align: right;\">\n",
        "      <th></th>\n",
        "      <th>Date</th>\n",
        "      <th>Country</th>\n",
        "      <th>theta</th>\n",
        "      <th>kappa</th>\n",
        "      <th>rho</th>\n",
        "      <th>sigma</th>\n",
        "      <th>alpha1 [-]</th>\n",
        "      <th>1/alpha2 [day]</th>\n",
        "      <th>1/beta [day]</th>\n",
        "      <th>1/gamma [day]</th>\n",
        "      <th>...</th>\n",
        "      <th>Cancel_events</th>\n",
        "      <th>Gatherings_restrictions</th>\n",
        "      <th>Transport_closing</th>\n",
        "      <th>Stay_home_restrictions</th>\n",
        "      <th>Internal_movement_restrictions</th>\n",
        "      <th>International_movement_restrictions</th>\n",
        "      <th>Information_campaigns</th>\n",
        "      <th>Testing_policy</th>\n",
        "      <th>Contact_tracing</th>\n",
        "      <th>Stringency_index</th>\n",
        "    </tr>\n",
        "  </thead>\n",
        "  <tbody>\n",
        "    <tr>\n",
        "      <th>0</th>\n",
        "      <td>2020-03-06</td>\n",
        "      <td>Bahrain</td>\n",
        "      <td>0.000408827</td>\n",
        "      <td>0.000256613</td>\n",
        "      <td>0.0276043</td>\n",
        "      <td>0.0161614</td>\n",
        "      <td>0</td>\n",
        "      <td>974</td>\n",
        "      <td>9</td>\n",
        "      <td>15</td>\n",
        "      <td>...</td>\n",
        "      <td>0</td>\n",
        "      <td>0</td>\n",
        "      <td>0</td>\n",
        "      <td>0</td>\n",
        "      <td>0</td>\n",
        "      <td>3</td>\n",
        "      <td>2</td>\n",
        "      <td>2</td>\n",
        "      <td>2</td>\n",
        "      <td>30.56</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>1</th>\n",
        "      <td>2020-03-07</td>\n",
        "      <td>Bahrain</td>\n",
        "      <td>0.000408827</td>\n",
        "      <td>0.000256613</td>\n",
        "      <td>0.0276043</td>\n",
        "      <td>0.0161614</td>\n",
        "      <td>0</td>\n",
        "      <td>974</td>\n",
        "      <td>9</td>\n",
        "      <td>15</td>\n",
        "      <td>...</td>\n",
        "      <td>0</td>\n",
        "      <td>0</td>\n",
        "      <td>0</td>\n",
        "      <td>0</td>\n",
        "      <td>0</td>\n",
        "      <td>3</td>\n",
        "      <td>2</td>\n",
        "      <td>2</td>\n",
        "      <td>2</td>\n",
        "      <td>30.56</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>2</th>\n",
        "      <td>2020-03-08</td>\n",
        "      <td>Bahrain</td>\n",
        "      <td>0.000408827</td>\n",
        "      <td>0.000256613</td>\n",
        "      <td>0.0276043</td>\n",
        "      <td>0.0161614</td>\n",
        "      <td>0</td>\n",
        "      <td>974</td>\n",
        "      <td>9</td>\n",
        "      <td>15</td>\n",
        "      <td>...</td>\n",
        "      <td>0</td>\n",
        "      <td>0</td>\n",
        "      <td>0</td>\n",
        "      <td>0</td>\n",
        "      <td>0</td>\n",
        "      <td>3</td>\n",
        "      <td>2</td>\n",
        "      <td>2</td>\n",
        "      <td>2</td>\n",
        "      <td>30.56</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>3</th>\n",
        "      <td>2020-03-09</td>\n",
        "      <td>Bahrain</td>\n",
        "      <td>0.000408827</td>\n",
        "      <td>0.000256613</td>\n",
        "      <td>0.0276043</td>\n",
        "      <td>0.0161614</td>\n",
        "      <td>0</td>\n",
        "      <td>974</td>\n",
        "      <td>9</td>\n",
        "      <td>15</td>\n",
        "      <td>...</td>\n",
        "      <td>0</td>\n",
        "      <td>0</td>\n",
        "      <td>0</td>\n",
        "      <td>0</td>\n",
        "      <td>0</td>\n",
        "      <td>3</td>\n",
        "      <td>2</td>\n",
        "      <td>2</td>\n",
        "      <td>2</td>\n",
        "      <td>30.56</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>4</th>\n",
        "      <td>2020-03-10</td>\n",
        "      <td>Bahrain</td>\n",
        "      <td>0.000408827</td>\n",
        "      <td>0.000256613</td>\n",
        "      <td>0.0276043</td>\n",
        "      <td>0.0161614</td>\n",
        "      <td>0</td>\n",
        "      <td>974</td>\n",
        "      <td>9</td>\n",
        "      <td>15</td>\n",
        "      <td>...</td>\n",
        "      <td>0</td>\n",
        "      <td>0</td>\n",
        "      <td>0</td>\n",
        "      <td>0</td>\n",
        "      <td>0</td>\n",
        "      <td>3</td>\n",
        "      <td>2</td>\n",
        "      <td>2</td>\n",
        "      <td>2</td>\n",
        "      <td>30.56</td>\n",
        "    </tr>\n",
        "  </tbody>\n",
        "</table>\n",
        "<p>5 rows \u00d7 23 columns</p>\n",
        "</div>"
       ],
       "output_type": "pyout",
       "prompt_number": 13,
       "text": [
        "        Date  Country        theta        kappa        rho      sigma  \\\n",
        "0 2020-03-06  Bahrain  0.000408827  0.000256613  0.0276043  0.0161614   \n",
        "1 2020-03-07  Bahrain  0.000408827  0.000256613  0.0276043  0.0161614   \n",
        "2 2020-03-08  Bahrain  0.000408827  0.000256613  0.0276043  0.0161614   \n",
        "3 2020-03-09  Bahrain  0.000408827  0.000256613  0.0276043  0.0161614   \n",
        "4 2020-03-10  Bahrain  0.000408827  0.000256613  0.0276043  0.0161614   \n",
        "\n",
        "  alpha1 [-] 1/alpha2 [day] 1/beta [day] 1/gamma [day]  ... Cancel_events  \\\n",
        "0          0            974            9            15  ...             0   \n",
        "1          0            974            9            15  ...             0   \n",
        "2          0            974            9            15  ...             0   \n",
        "3          0            974            9            15  ...             0   \n",
        "4          0            974            9            15  ...             0   \n",
        "\n",
        "   Gatherings_restrictions  Transport_closing  Stay_home_restrictions  \\\n",
        "0                        0                  0                       0   \n",
        "1                        0                  0                       0   \n",
        "2                        0                  0                       0   \n",
        "3                        0                  0                       0   \n",
        "4                        0                  0                       0   \n",
        "\n",
        "   Internal_movement_restrictions  International_movement_restrictions  \\\n",
        "0                               0                                    3   \n",
        "1                               0                                    3   \n",
        "2                               0                                    3   \n",
        "3                               0                                    3   \n",
        "4                               0                                    3   \n",
        "\n",
        "   Information_campaigns  Testing_policy  Contact_tracing  Stringency_index  \n",
        "0                      2               2                2             30.56  \n",
        "1                      2               2                2             30.56  \n",
        "2                      2               2                2             30.56  \n",
        "3                      2               2                2             30.56  \n",
        "4                      2               2                2             30.56  \n",
        "\n",
        "[5 rows x 23 columns]"
       ]
      }
     ],
     "prompt_number": 13
    },
    {
     "cell_type": "heading",
     "level": 3,
     "metadata": {},
     "source": [
      "$Rt$: Reprodcution number $\\mathrm{[-]}$"
     ]
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "analyser.param_history(\"Rt\", roll_window=None).tail()"
     ],
     "language": "python",
     "metadata": {},
     "outputs": [
      {
       "output_type": "display_data",
       "png": "\n",
       "text": [
        "<Figure size 648x432 with 1 Axes>"
       ]
      },
      {
       "html": [
        "<div>\n",
        "<style scoped>\n",
        "    .dataframe tbody tr th:only-of-type {\n",
        "        vertical-align: middle;\n",
        "    }\n",
        "\n",
        "    .dataframe tbody tr th {\n",
        "        vertical-align: top;\n",
        "    }\n",
        "\n",
        "    .dataframe thead th {\n",
        "        text-align: right;\n",
        "    }\n",
        "</style>\n",
        "<table border=\"1\" class=\"dataframe\">\n",
        "  <thead>\n",
        "    <tr style=\"text-align: right;\">\n",
        "      <th>Country</th>\n",
        "      <th>Bahrain</th>\n",
        "      <th>Bolivia</th>\n",
        "      <th>Brazil</th>\n",
        "      <th>Iran</th>\n",
        "      <th>Italy</th>\n",
        "      <th>Kuwait</th>\n",
        "      <th>Latvia</th>\n",
        "      <th>Russia</th>\n",
        "      <th>Turkey</th>\n",
        "      <th>United Arab Emirates</th>\n",
        "      <th>United States</th>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>Date</th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "    </tr>\n",
        "  </thead>\n",
        "  <tbody>\n",
        "    <tr>\n",
        "      <th>2020-10-07</th>\n",
        "      <td>0.81</td>\n",
        "      <td>0.28</td>\n",
        "      <td>0.96</td>\n",
        "      <td>1.52</td>\n",
        "      <td>3.28</td>\n",
        "      <td>0.93</td>\n",
        "      <td>311.38</td>\n",
        "      <td>1.7</td>\n",
        "      <td>1.13</td>\n",
        "      <td>0.94</td>\n",
        "      <td>2.05</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>2020-10-08</th>\n",
        "      <td>0.81</td>\n",
        "      <td>0.28</td>\n",
        "      <td>0.96</td>\n",
        "      <td>1.52</td>\n",
        "      <td>3.28</td>\n",
        "      <td>0.93</td>\n",
        "      <td>311.38</td>\n",
        "      <td>1.7</td>\n",
        "      <td>1.13</td>\n",
        "      <td>0.94</td>\n",
        "      <td>2.05</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>2020-10-09</th>\n",
        "      <td>0.81</td>\n",
        "      <td>0.28</td>\n",
        "      <td>0.96</td>\n",
        "      <td>1.52</td>\n",
        "      <td>3.28</td>\n",
        "      <td>0.93</td>\n",
        "      <td>311.38</td>\n",
        "      <td>1.7</td>\n",
        "      <td>1.13</td>\n",
        "      <td>0.94</td>\n",
        "      <td>2.05</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>2020-10-10</th>\n",
        "      <td>0.81</td>\n",
        "      <td>0.28</td>\n",
        "      <td>0.96</td>\n",
        "      <td>1.52</td>\n",
        "      <td>3.28</td>\n",
        "      <td>0.93</td>\n",
        "      <td>311.38</td>\n",
        "      <td>1.7</td>\n",
        "      <td>1.13</td>\n",
        "      <td>0.94</td>\n",
        "      <td>2.05</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>2020-10-11</th>\n",
        "      <td>0.81</td>\n",
        "      <td>0.28</td>\n",
        "      <td>0.96</td>\n",
        "      <td>1.52</td>\n",
        "      <td>3.28</td>\n",
        "      <td>0.93</td>\n",
        "      <td>311.38</td>\n",
        "      <td>1.7</td>\n",
        "      <td>1.13</td>\n",
        "      <td>0.94</td>\n",
        "      <td>2.05</td>\n",
        "    </tr>\n",
        "  </tbody>\n",
        "</table>\n",
        "</div>"
       ],
       "output_type": "pyout",
       "prompt_number": 14,
       "text": [
        "Country     Bahrain  Bolivia  Brazil  Iran  Italy  Kuwait  Latvia  Russia  \\\n",
        "Date                                                                        \n",
        "2020-10-07     0.81     0.28    0.96  1.52   3.28    0.93  311.38     1.7   \n",
        "2020-10-08     0.81     0.28    0.96  1.52   3.28    0.93  311.38     1.7   \n",
        "2020-10-09     0.81     0.28    0.96  1.52   3.28    0.93  311.38     1.7   \n",
        "2020-10-10     0.81     0.28    0.96  1.52   3.28    0.93  311.38     1.7   \n",
        "2020-10-11     0.81     0.28    0.96  1.52   3.28    0.93  311.38     1.7   \n",
        "\n",
        "Country     Turkey  United Arab Emirates  United States  \n",
        "Date                                                     \n",
        "2020-10-07    1.13                  0.94           2.05  \n",
        "2020-10-08    1.13                  0.94           2.05  \n",
        "2020-10-09    1.13                  0.94           2.05  \n",
        "2020-10-10    1.13                  0.94           2.05  \n",
        "2020-10-11    1.13                  0.94           2.05  "
       ]
      }
     ],
     "prompt_number": 14
    },
    {
     "cell_type": "heading",
     "level": 3,
     "metadata": {},
     "source": [
      "$\\rho$: Effective contact rate $\\mathrm{[-]}$"
     ]
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "analyser.param_history(\"rho\", roll_window=None).tail()"
     ],
     "language": "python",
     "metadata": {},
     "outputs": [
      {
       "output_type": "display_data",
       "png": "\n",
       "text": [
        "<Figure size 648x432 with 1 Axes>"
       ]
      },
      {
       "html": [
        "<div>\n",
        "<style scoped>\n",
        "    .dataframe tbody tr th:only-of-type {\n",
        "        vertical-align: middle;\n",
        "    }\n",
        "\n",
        "    .dataframe tbody tr th {\n",
        "        vertical-align: top;\n",
        "    }\n",
        "\n",
        "    .dataframe thead th {\n",
        "        text-align: right;\n",
        "    }\n",
        "</style>\n",
        "<table border=\"1\" class=\"dataframe\">\n",
        "  <thead>\n",
        "    <tr style=\"text-align: right;\">\n",
        "      <th>Country</th>\n",
        "      <th>Bahrain</th>\n",
        "      <th>Bolivia</th>\n",
        "      <th>Brazil</th>\n",
        "      <th>Iran</th>\n",
        "      <th>Italy</th>\n",
        "      <th>Kuwait</th>\n",
        "      <th>Latvia</th>\n",
        "      <th>Russia</th>\n",
        "      <th>Turkey</th>\n",
        "      <th>United Arab Emirates</th>\n",
        "      <th>United States</th>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>Date</th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "    </tr>\n",
        "  </thead>\n",
        "  <tbody>\n",
        "    <tr>\n",
        "      <th>2020-10-07</th>\n",
        "      <td>0.023548</td>\n",
        "      <td>0.004584</td>\n",
        "      <td>0.015734</td>\n",
        "      <td>0.017565</td>\n",
        "      <td>0.013159</td>\n",
        "      <td>0.019028</td>\n",
        "      <td>0.007769</td>\n",
        "      <td>0.002296</td>\n",
        "      <td>0.012738</td>\n",
        "      <td>0.027642</td>\n",
        "      <td>0.002817</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>2020-10-08</th>\n",
        "      <td>0.023548</td>\n",
        "      <td>0.004584</td>\n",
        "      <td>0.015734</td>\n",
        "      <td>0.017565</td>\n",
        "      <td>0.013159</td>\n",
        "      <td>0.019028</td>\n",
        "      <td>0.007769</td>\n",
        "      <td>0.002296</td>\n",
        "      <td>0.012738</td>\n",
        "      <td>0.027642</td>\n",
        "      <td>0.002817</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>2020-10-09</th>\n",
        "      <td>0.023548</td>\n",
        "      <td>0.004584</td>\n",
        "      <td>0.015734</td>\n",
        "      <td>0.017565</td>\n",
        "      <td>0.013159</td>\n",
        "      <td>0.019028</td>\n",
        "      <td>0.007769</td>\n",
        "      <td>0.002296</td>\n",
        "      <td>0.012738</td>\n",
        "      <td>0.027642</td>\n",
        "      <td>0.002817</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>2020-10-10</th>\n",
        "      <td>0.023548</td>\n",
        "      <td>0.004584</td>\n",
        "      <td>0.015734</td>\n",
        "      <td>0.017565</td>\n",
        "      <td>0.013159</td>\n",
        "      <td>0.019028</td>\n",
        "      <td>0.007769</td>\n",
        "      <td>0.002296</td>\n",
        "      <td>0.012738</td>\n",
        "      <td>0.027642</td>\n",
        "      <td>0.002817</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>2020-10-11</th>\n",
        "      <td>0.023548</td>\n",
        "      <td>0.004584</td>\n",
        "      <td>0.015734</td>\n",
        "      <td>0.017565</td>\n",
        "      <td>0.013159</td>\n",
        "      <td>0.019028</td>\n",
        "      <td>0.007769</td>\n",
        "      <td>0.002296</td>\n",
        "      <td>0.012738</td>\n",
        "      <td>0.027642</td>\n",
        "      <td>0.002817</td>\n",
        "    </tr>\n",
        "  </tbody>\n",
        "</table>\n",
        "</div>"
       ],
       "output_type": "pyout",
       "prompt_number": 15,
       "text": [
        "Country      Bahrain   Bolivia    Brazil      Iran     Italy    Kuwait  \\\n",
        "Date                                                                     \n",
        "2020-10-07  0.023548  0.004584  0.015734  0.017565  0.013159  0.019028   \n",
        "2020-10-08  0.023548  0.004584  0.015734  0.017565  0.013159  0.019028   \n",
        "2020-10-09  0.023548  0.004584  0.015734  0.017565  0.013159  0.019028   \n",
        "2020-10-10  0.023548  0.004584  0.015734  0.017565  0.013159  0.019028   \n",
        "2020-10-11  0.023548  0.004584  0.015734  0.017565  0.013159  0.019028   \n",
        "\n",
        "Country       Latvia    Russia    Turkey  United Arab Emirates  United States  \n",
        "Date                                                                           \n",
        "2020-10-07  0.007769  0.002296  0.012738              0.027642       0.002817  \n",
        "2020-10-08  0.007769  0.002296  0.012738              0.027642       0.002817  \n",
        "2020-10-09  0.007769  0.002296  0.012738              0.027642       0.002817  \n",
        "2020-10-10  0.007769  0.002296  0.012738              0.027642       0.002817  \n",
        "2020-10-11  0.007769  0.002296  0.012738              0.027642       0.002817  "
       ]
      }
     ],
     "prompt_number": 15
    },
    {
     "cell_type": "heading",
     "level": 3,
     "metadata": {},
     "source": [
      "$\\sigma$: Recovery rate $\\mathrm{[-]}$"
     ]
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "analyser.param_history(\"sigma\", roll_window=None).tail()"
     ],
     "language": "python",
     "metadata": {},
     "outputs": [
      {
       "output_type": "display_data",
       "png": "\n",
       "text": [
        "<Figure size 648x432 with 1 Axes>"
       ]
      },
      {
       "html": [
        "<div>\n",
        "<style scoped>\n",
        "    .dataframe tbody tr th:only-of-type {\n",
        "        vertical-align: middle;\n",
        "    }\n",
        "\n",
        "    .dataframe tbody tr th {\n",
        "        vertical-align: top;\n",
        "    }\n",
        "\n",
        "    .dataframe thead th {\n",
        "        text-align: right;\n",
        "    }\n",
        "</style>\n",
        "<table border=\"1\" class=\"dataframe\">\n",
        "  <thead>\n",
        "    <tr style=\"text-align: right;\">\n",
        "      <th>Country</th>\n",
        "      <th>Bahrain</th>\n",
        "      <th>Bolivia</th>\n",
        "      <th>Brazil</th>\n",
        "      <th>Iran</th>\n",
        "      <th>Italy</th>\n",
        "      <th>Kuwait</th>\n",
        "      <th>Latvia</th>\n",
        "      <th>Russia</th>\n",
        "      <th>Turkey</th>\n",
        "      <th>United Arab Emirates</th>\n",
        "      <th>United States</th>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>Date</th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "    </tr>\n",
        "  </thead>\n",
        "  <tbody>\n",
        "    <tr>\n",
        "      <th>2020-10-07</th>\n",
        "      <td>0.028786</td>\n",
        "      <td>0.011106</td>\n",
        "      <td>0.015857</td>\n",
        "      <td>0.010787</td>\n",
        "      <td>0.003941</td>\n",
        "      <td>0.020373</td>\n",
        "      <td>0.0</td>\n",
        "      <td>0.001314</td>\n",
        "      <td>0.010847</td>\n",
        "      <td>0.029244</td>\n",
        "      <td>0.001343</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>2020-10-08</th>\n",
        "      <td>0.028786</td>\n",
        "      <td>0.011106</td>\n",
        "      <td>0.015857</td>\n",
        "      <td>0.010787</td>\n",
        "      <td>0.003941</td>\n",
        "      <td>0.020373</td>\n",
        "      <td>0.0</td>\n",
        "      <td>0.001314</td>\n",
        "      <td>0.010847</td>\n",
        "      <td>0.029244</td>\n",
        "      <td>0.001343</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>2020-10-09</th>\n",
        "      <td>0.028786</td>\n",
        "      <td>0.011106</td>\n",
        "      <td>0.015857</td>\n",
        "      <td>0.010787</td>\n",
        "      <td>0.003941</td>\n",
        "      <td>0.020373</td>\n",
        "      <td>0.0</td>\n",
        "      <td>0.001314</td>\n",
        "      <td>0.010847</td>\n",
        "      <td>0.029244</td>\n",
        "      <td>0.001343</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>2020-10-10</th>\n",
        "      <td>0.028786</td>\n",
        "      <td>0.011106</td>\n",
        "      <td>0.015857</td>\n",
        "      <td>0.010787</td>\n",
        "      <td>0.003941</td>\n",
        "      <td>0.020373</td>\n",
        "      <td>0.0</td>\n",
        "      <td>0.001314</td>\n",
        "      <td>0.010847</td>\n",
        "      <td>0.029244</td>\n",
        "      <td>0.001343</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>2020-10-11</th>\n",
        "      <td>0.028786</td>\n",
        "      <td>0.011106</td>\n",
        "      <td>0.015857</td>\n",
        "      <td>0.010787</td>\n",
        "      <td>0.003941</td>\n",
        "      <td>0.020373</td>\n",
        "      <td>0.0</td>\n",
        "      <td>0.001314</td>\n",
        "      <td>0.010847</td>\n",
        "      <td>0.029244</td>\n",
        "      <td>0.001343</td>\n",
        "    </tr>\n",
        "  </tbody>\n",
        "</table>\n",
        "</div>"
       ],
       "output_type": "pyout",
       "prompt_number": 16,
       "text": [
        "Country      Bahrain   Bolivia    Brazil      Iran     Italy    Kuwait  \\\n",
        "Date                                                                     \n",
        "2020-10-07  0.028786  0.011106  0.015857  0.010787  0.003941  0.020373   \n",
        "2020-10-08  0.028786  0.011106  0.015857  0.010787  0.003941  0.020373   \n",
        "2020-10-09  0.028786  0.011106  0.015857  0.010787  0.003941  0.020373   \n",
        "2020-10-10  0.028786  0.011106  0.015857  0.010787  0.003941  0.020373   \n",
        "2020-10-11  0.028786  0.011106  0.015857  0.010787  0.003941  0.020373   \n",
        "\n",
        "Country     Latvia    Russia    Turkey  United Arab Emirates  United States  \n",
        "Date                                                                         \n",
        "2020-10-07     0.0  0.001314  0.010847              0.029244       0.001343  \n",
        "2020-10-08     0.0  0.001314  0.010847              0.029244       0.001343  \n",
        "2020-10-09     0.0  0.001314  0.010847              0.029244       0.001343  \n",
        "2020-10-10     0.0  0.001314  0.010847              0.029244       0.001343  \n",
        "2020-10-11     0.0  0.001314  0.010847              0.029244       0.001343  "
       ]
      }
     ],
     "prompt_number": 16
    },
    {
     "cell_type": "heading",
     "level": 3,
     "metadata": {},
     "source": [
      "$\\kappa$: Mortality rate of infected cases $\\mathrm{[-]}$"
     ]
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "analyser.param_history(\"kappa\", roll_window=None).tail()"
     ],
     "language": "python",
     "metadata": {},
     "outputs": [
      {
       "output_type": "display_data",
       "png": "\n",
       "text": [
        "<Figure size 648x432 with 1 Axes>"
       ]
      },
      {
       "html": [
        "<div>\n",
        "<style scoped>\n",
        "    .dataframe tbody tr th:only-of-type {\n",
        "        vertical-align: middle;\n",
        "    }\n",
        "\n",
        "    .dataframe tbody tr th {\n",
        "        vertical-align: top;\n",
        "    }\n",
        "\n",
        "    .dataframe thead th {\n",
        "        text-align: right;\n",
        "    }\n",
        "</style>\n",
        "<table border=\"1\" class=\"dataframe\">\n",
        "  <thead>\n",
        "    <tr style=\"text-align: right;\">\n",
        "      <th>Country</th>\n",
        "      <th>Bahrain</th>\n",
        "      <th>Bolivia</th>\n",
        "      <th>Brazil</th>\n",
        "      <th>Iran</th>\n",
        "      <th>Italy</th>\n",
        "      <th>Kuwait</th>\n",
        "      <th>Latvia</th>\n",
        "      <th>Russia</th>\n",
        "      <th>Turkey</th>\n",
        "      <th>United Arab Emirates</th>\n",
        "      <th>United States</th>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>Date</th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "    </tr>\n",
        "  </thead>\n",
        "  <tbody>\n",
        "    <tr>\n",
        "      <th>2020-10-07</th>\n",
        "      <td>0.000096</td>\n",
        "      <td>0.000452</td>\n",
        "      <td>0.00045</td>\n",
        "      <td>0.000301</td>\n",
        "      <td>0.000071</td>\n",
        "      <td>0.000069</td>\n",
        "      <td>0.000025</td>\n",
        "      <td>0.000031</td>\n",
        "      <td>0.000109</td>\n",
        "      <td>0.000031</td>\n",
        "      <td>0.000002</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>2020-10-08</th>\n",
        "      <td>0.000096</td>\n",
        "      <td>0.000452</td>\n",
        "      <td>0.00045</td>\n",
        "      <td>0.000301</td>\n",
        "      <td>0.000071</td>\n",
        "      <td>0.000069</td>\n",
        "      <td>0.000025</td>\n",
        "      <td>0.000031</td>\n",
        "      <td>0.000109</td>\n",
        "      <td>0.000031</td>\n",
        "      <td>0.000002</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>2020-10-09</th>\n",
        "      <td>0.000096</td>\n",
        "      <td>0.000452</td>\n",
        "      <td>0.00045</td>\n",
        "      <td>0.000301</td>\n",
        "      <td>0.000071</td>\n",
        "      <td>0.000069</td>\n",
        "      <td>0.000025</td>\n",
        "      <td>0.000031</td>\n",
        "      <td>0.000109</td>\n",
        "      <td>0.000031</td>\n",
        "      <td>0.000002</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>2020-10-10</th>\n",
        "      <td>0.000096</td>\n",
        "      <td>0.000452</td>\n",
        "      <td>0.00045</td>\n",
        "      <td>0.000301</td>\n",
        "      <td>0.000071</td>\n",
        "      <td>0.000069</td>\n",
        "      <td>0.000025</td>\n",
        "      <td>0.000031</td>\n",
        "      <td>0.000109</td>\n",
        "      <td>0.000031</td>\n",
        "      <td>0.000002</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>2020-10-11</th>\n",
        "      <td>0.000096</td>\n",
        "      <td>0.000452</td>\n",
        "      <td>0.00045</td>\n",
        "      <td>0.000301</td>\n",
        "      <td>0.000071</td>\n",
        "      <td>0.000069</td>\n",
        "      <td>0.000025</td>\n",
        "      <td>0.000031</td>\n",
        "      <td>0.000109</td>\n",
        "      <td>0.000031</td>\n",
        "      <td>0.000002</td>\n",
        "    </tr>\n",
        "  </tbody>\n",
        "</table>\n",
        "</div>"
       ],
       "output_type": "pyout",
       "prompt_number": 17,
       "text": [
        "Country      Bahrain   Bolivia   Brazil      Iran     Italy    Kuwait  \\\n",
        "Date                                                                    \n",
        "2020-10-07  0.000096  0.000452  0.00045  0.000301  0.000071  0.000069   \n",
        "2020-10-08  0.000096  0.000452  0.00045  0.000301  0.000071  0.000069   \n",
        "2020-10-09  0.000096  0.000452  0.00045  0.000301  0.000071  0.000069   \n",
        "2020-10-10  0.000096  0.000452  0.00045  0.000301  0.000071  0.000069   \n",
        "2020-10-11  0.000096  0.000452  0.00045  0.000301  0.000071  0.000069   \n",
        "\n",
        "Country       Latvia    Russia    Turkey  United Arab Emirates  United States  \n",
        "Date                                                                           \n",
        "2020-10-07  0.000025  0.000031  0.000109              0.000031       0.000002  \n",
        "2020-10-08  0.000025  0.000031  0.000109              0.000031       0.000002  \n",
        "2020-10-09  0.000025  0.000031  0.000109              0.000031       0.000002  \n",
        "2020-10-10  0.000025  0.000031  0.000109              0.000031       0.000002  \n",
        "2020-10-11  0.000025  0.000031  0.000109              0.000031       0.000002  "
       ]
      }
     ],
     "prompt_number": 17
    },
    {
     "cell_type": "heading",
     "level": 3,
     "metadata": {},
     "source": [
      "$\\theta$: Mortality rate of S$^\\ast$ cases $\\mathrm{[-]}$"
     ]
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "analyser.param_history(\"theta\", roll_window=None).tail()"
     ],
     "language": "python",
     "metadata": {},
     "outputs": [
      {
       "output_type": "display_data",
       "png": "\n",
       "text": [
        "<Figure size 648x432 with 1 Axes>"
       ]
      },
      {
       "html": [
        "<div>\n",
        "<style scoped>\n",
        "    .dataframe tbody tr th:only-of-type {\n",
        "        vertical-align: middle;\n",
        "    }\n",
        "\n",
        "    .dataframe tbody tr th {\n",
        "        vertical-align: top;\n",
        "    }\n",
        "\n",
        "    .dataframe thead th {\n",
        "        text-align: right;\n",
        "    }\n",
        "</style>\n",
        "<table border=\"1\" class=\"dataframe\">\n",
        "  <thead>\n",
        "    <tr style=\"text-align: right;\">\n",
        "      <th>Country</th>\n",
        "      <th>Bahrain</th>\n",
        "      <th>Bolivia</th>\n",
        "      <th>Brazil</th>\n",
        "      <th>Iran</th>\n",
        "      <th>Italy</th>\n",
        "      <th>Kuwait</th>\n",
        "      <th>Latvia</th>\n",
        "      <th>Russia</th>\n",
        "      <th>Turkey</th>\n",
        "      <th>United Arab Emirates</th>\n",
        "      <th>United States</th>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>Date</th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "    </tr>\n",
        "  </thead>\n",
        "  <tbody>\n",
        "    <tr>\n",
        "      <th>2020-10-07</th>\n",
        "      <td>0.000514</td>\n",
        "      <td>0.295296</td>\n",
        "      <td>0.000234</td>\n",
        "      <td>0.038101</td>\n",
        "      <td>0.000928</td>\n",
        "      <td>0.001062</td>\n",
        "      <td>0.001247</td>\n",
        "      <td>0.002424</td>\n",
        "      <td>0.030618</td>\n",
        "      <td>0.000938</td>\n",
        "      <td>0.02152</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>2020-10-08</th>\n",
        "      <td>0.000514</td>\n",
        "      <td>0.295296</td>\n",
        "      <td>0.000234</td>\n",
        "      <td>0.038101</td>\n",
        "      <td>0.000928</td>\n",
        "      <td>0.001062</td>\n",
        "      <td>0.001247</td>\n",
        "      <td>0.002424</td>\n",
        "      <td>0.030618</td>\n",
        "      <td>0.000938</td>\n",
        "      <td>0.02152</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>2020-10-09</th>\n",
        "      <td>0.000514</td>\n",
        "      <td>0.295296</td>\n",
        "      <td>0.000234</td>\n",
        "      <td>0.038101</td>\n",
        "      <td>0.000928</td>\n",
        "      <td>0.001062</td>\n",
        "      <td>0.001247</td>\n",
        "      <td>0.002424</td>\n",
        "      <td>0.030618</td>\n",
        "      <td>0.000938</td>\n",
        "      <td>0.02152</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>2020-10-10</th>\n",
        "      <td>0.000514</td>\n",
        "      <td>0.295296</td>\n",
        "      <td>0.000234</td>\n",
        "      <td>0.038101</td>\n",
        "      <td>0.000928</td>\n",
        "      <td>0.001062</td>\n",
        "      <td>0.001247</td>\n",
        "      <td>0.002424</td>\n",
        "      <td>0.030618</td>\n",
        "      <td>0.000938</td>\n",
        "      <td>0.02152</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>2020-10-11</th>\n",
        "      <td>0.000514</td>\n",
        "      <td>0.295296</td>\n",
        "      <td>0.000234</td>\n",
        "      <td>0.038101</td>\n",
        "      <td>0.000928</td>\n",
        "      <td>0.001062</td>\n",
        "      <td>0.001247</td>\n",
        "      <td>0.002424</td>\n",
        "      <td>0.030618</td>\n",
        "      <td>0.000938</td>\n",
        "      <td>0.02152</td>\n",
        "    </tr>\n",
        "  </tbody>\n",
        "</table>\n",
        "</div>"
       ],
       "output_type": "pyout",
       "prompt_number": 18,
       "text": [
        "Country      Bahrain   Bolivia    Brazil      Iran     Italy    Kuwait  \\\n",
        "Date                                                                     \n",
        "2020-10-07  0.000514  0.295296  0.000234  0.038101  0.000928  0.001062   \n",
        "2020-10-08  0.000514  0.295296  0.000234  0.038101  0.000928  0.001062   \n",
        "2020-10-09  0.000514  0.295296  0.000234  0.038101  0.000928  0.001062   \n",
        "2020-10-10  0.000514  0.295296  0.000234  0.038101  0.000928  0.001062   \n",
        "2020-10-11  0.000514  0.295296  0.000234  0.038101  0.000928  0.001062   \n",
        "\n",
        "Country       Latvia    Russia    Turkey  United Arab Emirates  United States  \n",
        "Date                                                                           \n",
        "2020-10-07  0.001247  0.002424  0.030618              0.000938        0.02152  \n",
        "2020-10-08  0.001247  0.002424  0.030618              0.000938        0.02152  \n",
        "2020-10-09  0.001247  0.002424  0.030618              0.000938        0.02152  \n",
        "2020-10-10  0.001247  0.002424  0.030618              0.000938        0.02152  \n",
        "2020-10-11  0.001247  0.002424  0.030618              0.000938        0.02152  "
       ]
      }
     ],
     "prompt_number": 18
    },
    {
     "cell_type": "markdown",
     "metadata": {},
     "source": [
      "## (Experimental): Relationship of OxCGRT index and parameter values\n",
      "Government responses will impact on parameter values of ODE models about 14 days later. Here, we will investigate on the relationship of [stringency index (from OxCGRT)](https://github.com/OxCGRT/covid-policy-tracker/blob/master/documentation/index_methodology.md) and reproduction number/model parameters.\n"
     ]
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "%matplotlib inline\n",
      "from matplotlib import pyplot as plt\n",
      "import seaborn as sns\n",
      "import pandas as pd"
     ],
     "language": "python",
     "metadata": {},
     "outputs": [],
     "prompt_number": 19
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "df = analyser.track()\n",
      "param_cols = [\"Rt\", *cs.SIRF.PARAMETERS]\n",
      "oxcgrt_cols = oxcgrt_data.OXCGRT_VARS[:]\n",
      "cols = param_cols + oxcgrt_cols\n",
      "delay = 14\n",
      "\n",
      "for col in param_cols:\n",
      "    df[col] = pd.to_numeric(df[col], errors=\"coerce\")\n",
      "    df[col] = df.groupby(\"Country\")[col].shift(0 - delay)\n",
      "\n",
      "df = df.dropna(how=\"any\")\n",
      "df = df.loc[:, [\"Date\", \"Country\", *cols]]\n",
      "track_df = df.copy()\n",
      "track_df.info()"
     ],
     "language": "python",
     "metadata": {},
     "outputs": [
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "<class 'pandas.core.frame.DataFrame'>\n",
        "Int64Index: 67284 entries, 0 to 67423\n",
        "Data columns (total 19 columns):\n",
        " #   Column                               Non-Null Count  Dtype         \n",
        "---  ------                               --------------  -----         \n",
        " 0   Date                                 67284 non-null  datetime64[ns]\n",
        " 1   Country                              67284 non-null  object        \n",
        " 2   Rt                                   67284 non-null  float64       \n",
        " 3   theta                                67284 non-null  float64       \n",
        " 4   kappa                                67284 non-null  float64       \n",
        " 5   rho                                  67284 non-null  float64       \n",
        " 6   sigma                                67284 non-null  float64       \n",
        " 7   School_closing                       67284 non-null  int64         \n",
        " 8   Workplace_closing                    67284 non-null  int64         \n",
        " 9   Cancel_events                        67284 non-null  int64         \n",
        " 10  Gatherings_restrictions              67284 non-null  int64         \n",
        " 11  Transport_closing                    67284 non-null  int64         \n",
        " 12  Stay_home_restrictions               67284 non-null  int64         \n",
        " 13  Internal_movement_restrictions       67284 non-null  int64         \n",
        " 14  International_movement_restrictions  67284 non-null  int64         \n",
        " 15  Information_campaigns                67284 non-null  int64         \n",
        " 16  Testing_policy                       67284 non-null  int64         \n",
        " 17  Contact_tracing                      67284 non-null  int64         \n",
        " 18  Stringency_index                     67284 non-null  float64       \n",
        "dtypes: datetime64[ns](1), float64(6), int64(11), object(1)\n",
        "memory usage: 10.3+ MB\n"
       ]
      }
     ],
     "prompt_number": 20
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "# Correlation\n",
      "df = track_df.copy()\n",
      "df.corr().style.background_gradient(axis=None)"
     ],
     "language": "python",
     "metadata": {},
     "outputs": [
      {
       "html": [
        "<style  type=\"text/css\" >\n",
        "#T_83be0c82_0bd7_11eb_86af_525400030ad8row0_col0,#T_83be0c82_0bd7_11eb_86af_525400030ad8row1_col1,#T_83be0c82_0bd7_11eb_86af_525400030ad8row2_col2,#T_83be0c82_0bd7_11eb_86af_525400030ad8row3_col3,#T_83be0c82_0bd7_11eb_86af_525400030ad8row4_col4,#T_83be0c82_0bd7_11eb_86af_525400030ad8row5_col5,#T_83be0c82_0bd7_11eb_86af_525400030ad8row6_col6,#T_83be0c82_0bd7_11eb_86af_525400030ad8row7_col7,#T_83be0c82_0bd7_11eb_86af_525400030ad8row8_col8,#T_83be0c82_0bd7_11eb_86af_525400030ad8row9_col9,#T_83be0c82_0bd7_11eb_86af_525400030ad8row10_col10,#T_83be0c82_0bd7_11eb_86af_525400030ad8row11_col11,#T_83be0c82_0bd7_11eb_86af_525400030ad8row12_col12,#T_83be0c82_0bd7_11eb_86af_525400030ad8row13_col13,#T_83be0c82_0bd7_11eb_86af_525400030ad8row14_col14,#T_83be0c82_0bd7_11eb_86af_525400030ad8row15_col15,#T_83be0c82_0bd7_11eb_86af_525400030ad8row16_col16{\n",
        "            background-color:  #023858;\n",
        "            color:  #f1f1f1;\n",
        "        }#T_83be0c82_0bd7_11eb_86af_525400030ad8row0_col1,#T_83be0c82_0bd7_11eb_86af_525400030ad8row0_col6,#T_83be0c82_0bd7_11eb_86af_525400030ad8row0_col8,#T_83be0c82_0bd7_11eb_86af_525400030ad8row1_col0,#T_83be0c82_0bd7_11eb_86af_525400030ad8row6_col0,#T_83be0c82_0bd7_11eb_86af_525400030ad8row8_col0{\n",
        "            background-color:  #e0dded;\n",
        "            color:  #000000;\n",
        "        }#T_83be0c82_0bd7_11eb_86af_525400030ad8row0_col2,#T_83be0c82_0bd7_11eb_86af_525400030ad8row2_col0{\n",
        "            background-color:  #dcdaeb;\n",
        "            color:  #000000;\n",
        "        }#T_83be0c82_0bd7_11eb_86af_525400030ad8row0_col3,#T_83be0c82_0bd7_11eb_86af_525400030ad8row2_col10,#T_83be0c82_0bd7_11eb_86af_525400030ad8row3_col0,#T_83be0c82_0bd7_11eb_86af_525400030ad8row4_col5,#T_83be0c82_0bd7_11eb_86af_525400030ad8row5_col4,#T_83be0c82_0bd7_11eb_86af_525400030ad8row5_col15,#T_83be0c82_0bd7_11eb_86af_525400030ad8row10_col2,#T_83be0c82_0bd7_11eb_86af_525400030ad8row15_col5{\n",
        "            background-color:  #78abd0;\n",
        "            color:  #000000;\n",
        "        }#T_83be0c82_0bd7_11eb_86af_525400030ad8row0_col4,#T_83be0c82_0bd7_11eb_86af_525400030ad8row4_col0{\n",
        "            background-color:  #f0eaf4;\n",
        "            color:  #000000;\n",
        "        }#T_83be0c82_0bd7_11eb_86af_525400030ad8row0_col5,#T_83be0c82_0bd7_11eb_86af_525400030ad8row5_col0{\n",
        "            background-color:  #f5eff6;\n",
        "            color:  #000000;\n",
        "        }#T_83be0c82_0bd7_11eb_86af_525400030ad8row0_col7,#T_83be0c82_0bd7_11eb_86af_525400030ad8row7_col0{\n",
        "            background-color:  #eae6f1;\n",
        "            color:  #000000;\n",
        "        }#T_83be0c82_0bd7_11eb_86af_525400030ad8row0_col9,#T_83be0c82_0bd7_11eb_86af_525400030ad8row9_col0{\n",
        "            background-color:  #ede8f3;\n",
        "            color:  #000000;\n",
        "        }#T_83be0c82_0bd7_11eb_86af_525400030ad8row0_col10,#T_83be0c82_0bd7_11eb_86af_525400030ad8row2_col14,#T_83be0c82_0bd7_11eb_86af_525400030ad8row10_col0,#T_83be0c82_0bd7_11eb_86af_525400030ad8row14_col2{\n",
        "            background-color:  #e7e3f0;\n",
        "            color:  #000000;\n",
        "        }#T_83be0c82_0bd7_11eb_86af_525400030ad8row0_col11,#T_83be0c82_0bd7_11eb_86af_525400030ad8row1_col13,#T_83be0c82_0bd7_11eb_86af_525400030ad8row11_col0,#T_83be0c82_0bd7_11eb_86af_525400030ad8row13_col1{\n",
        "            background-color:  #f7f0f7;\n",
        "            color:  #000000;\n",
        "        }#T_83be0c82_0bd7_11eb_86af_525400030ad8row0_col12,#T_83be0c82_0bd7_11eb_86af_525400030ad8row0_col14,#T_83be0c82_0bd7_11eb_86af_525400030ad8row12_col0,#T_83be0c82_0bd7_11eb_86af_525400030ad8row14_col0{\n",
        "            background-color:  #e5e1ef;\n",
        "            color:  #000000;\n",
        "        }#T_83be0c82_0bd7_11eb_86af_525400030ad8row0_col13,#T_83be0c82_0bd7_11eb_86af_525400030ad8row13_col0{\n",
        "            background-color:  #d1d2e6;\n",
        "            color:  #000000;\n",
        "        }#T_83be0c82_0bd7_11eb_86af_525400030ad8row0_col15,#T_83be0c82_0bd7_11eb_86af_525400030ad8row1_col7,#T_83be0c82_0bd7_11eb_86af_525400030ad8row7_col1,#T_83be0c82_0bd7_11eb_86af_525400030ad8row15_col0{\n",
        "            background-color:  #d9d8ea;\n",
        "            color:  #000000;\n",
        "        }#T_83be0c82_0bd7_11eb_86af_525400030ad8row0_col16,#T_83be0c82_0bd7_11eb_86af_525400030ad8row3_col15,#T_83be0c82_0bd7_11eb_86af_525400030ad8row15_col3,#T_83be0c82_0bd7_11eb_86af_525400030ad8row16_col0{\n",
        "            background-color:  #ece7f2;\n",
        "            color:  #000000;\n",
        "        }#T_83be0c82_0bd7_11eb_86af_525400030ad8row1_col2,#T_83be0c82_0bd7_11eb_86af_525400030ad8row2_col1{\n",
        "            background-color:  #023b5d;\n",
        "            color:  #f1f1f1;\n",
        "        }#T_83be0c82_0bd7_11eb_86af_525400030ad8row1_col3,#T_83be0c82_0bd7_11eb_86af_525400030ad8row3_col1,#T_83be0c82_0bd7_11eb_86af_525400030ad8row7_col12,#T_83be0c82_0bd7_11eb_86af_525400030ad8row8_col10,#T_83be0c82_0bd7_11eb_86af_525400030ad8row10_col8,#T_83be0c82_0bd7_11eb_86af_525400030ad8row12_col7{\n",
        "            background-color:  #056caa;\n",
        "            color:  #f1f1f1;\n",
        "        }#T_83be0c82_0bd7_11eb_86af_525400030ad8row1_col4,#T_83be0c82_0bd7_11eb_86af_525400030ad8row4_col1{\n",
        "            background-color:  #adc1dd;\n",
        "            color:  #000000;\n",
        "        }#T_83be0c82_0bd7_11eb_86af_525400030ad8row1_col5,#T_83be0c82_0bd7_11eb_86af_525400030ad8row2_col6,#T_83be0c82_0bd7_11eb_86af_525400030ad8row5_col1,#T_83be0c82_0bd7_11eb_86af_525400030ad8row6_col2{\n",
        "            background-color:  #dad9ea;\n",
        "            color:  #000000;\n",
        "        }#T_83be0c82_0bd7_11eb_86af_525400030ad8row1_col6,#T_83be0c82_0bd7_11eb_86af_525400030ad8row6_col1{\n",
        "            background-color:  #d8d7e9;\n",
        "            color:  #000000;\n",
        "        }#T_83be0c82_0bd7_11eb_86af_525400030ad8row1_col8,#T_83be0c82_0bd7_11eb_86af_525400030ad8row2_col9,#T_83be0c82_0bd7_11eb_86af_525400030ad8row8_col1,#T_83be0c82_0bd7_11eb_86af_525400030ad8row9_col2{\n",
        "            background-color:  #d0d1e6;\n",
        "            color:  #000000;\n",
        "        }#T_83be0c82_0bd7_11eb_86af_525400030ad8row1_col9,#T_83be0c82_0bd7_11eb_86af_525400030ad8row9_col1{\n",
        "            background-color:  #d5d5e8;\n",
        "            color:  #000000;\n",
        "        }#T_83be0c82_0bd7_11eb_86af_525400030ad8row1_col10,#T_83be0c82_0bd7_11eb_86af_525400030ad8row8_col14,#T_83be0c82_0bd7_11eb_86af_525400030ad8row10_col1,#T_83be0c82_0bd7_11eb_86af_525400030ad8row14_col8{\n",
        "            background-color:  #7bacd1;\n",
        "            color:  #000000;\n",
        "        }#T_83be0c82_0bd7_11eb_86af_525400030ad8row1_col11,#T_83be0c82_0bd7_11eb_86af_525400030ad8row4_col9,#T_83be0c82_0bd7_11eb_86af_525400030ad8row9_col4,#T_83be0c82_0bd7_11eb_86af_525400030ad8row11_col1{\n",
        "            background-color:  #8eb3d5;\n",
        "            color:  #000000;\n",
        "        }#T_83be0c82_0bd7_11eb_86af_525400030ad8row1_col12,#T_83be0c82_0bd7_11eb_86af_525400030ad8row12_col1{\n",
        "            background-color:  #96b6d7;\n",
        "            color:  #000000;\n",
        "        }#T_83be0c82_0bd7_11eb_86af_525400030ad8row1_col14,#T_83be0c82_0bd7_11eb_86af_525400030ad8row14_col1{\n",
        "            background-color:  #e8e4f0;\n",
        "            color:  #000000;\n",
        "        }#T_83be0c82_0bd7_11eb_86af_525400030ad8row1_col15,#T_83be0c82_0bd7_11eb_86af_525400030ad8row15_col1{\n",
        "            background-color:  #c1cae2;\n",
        "            color:  #000000;\n",
        "        }#T_83be0c82_0bd7_11eb_86af_525400030ad8row1_col16,#T_83be0c82_0bd7_11eb_86af_525400030ad8row2_col16,#T_83be0c82_0bd7_11eb_86af_525400030ad8row3_col16,#T_83be0c82_0bd7_11eb_86af_525400030ad8row4_col14,#T_83be0c82_0bd7_11eb_86af_525400030ad8row14_col4,#T_83be0c82_0bd7_11eb_86af_525400030ad8row16_col1,#T_83be0c82_0bd7_11eb_86af_525400030ad8row16_col2,#T_83be0c82_0bd7_11eb_86af_525400030ad8row16_col3{\n",
        "            background-color:  #c4cbe3;\n",
        "            color:  #000000;\n",
        "        }#T_83be0c82_0bd7_11eb_86af_525400030ad8row2_col3,#T_83be0c82_0bd7_11eb_86af_525400030ad8row3_col2,#T_83be0c82_0bd7_11eb_86af_525400030ad8row5_col6,#T_83be0c82_0bd7_11eb_86af_525400030ad8row6_col5{\n",
        "            background-color:  #0569a4;\n",
        "            color:  #f1f1f1;\n",
        "        }#T_83be0c82_0bd7_11eb_86af_525400030ad8row2_col4,#T_83be0c82_0bd7_11eb_86af_525400030ad8row4_col2,#T_83be0c82_0bd7_11eb_86af_525400030ad8row11_col15,#T_83be0c82_0bd7_11eb_86af_525400030ad8row15_col11{\n",
        "            background-color:  #b7c5df;\n",
        "            color:  #000000;\n",
        "        }#T_83be0c82_0bd7_11eb_86af_525400030ad8row2_col5,#T_83be0c82_0bd7_11eb_86af_525400030ad8row3_col5,#T_83be0c82_0bd7_11eb_86af_525400030ad8row5_col2,#T_83be0c82_0bd7_11eb_86af_525400030ad8row5_col3{\n",
        "            background-color:  #dedcec;\n",
        "            color:  #000000;\n",
        "        }#T_83be0c82_0bd7_11eb_86af_525400030ad8row2_col7,#T_83be0c82_0bd7_11eb_86af_525400030ad8row7_col2{\n",
        "            background-color:  #d7d6e9;\n",
        "            color:  #000000;\n",
        "        }#T_83be0c82_0bd7_11eb_86af_525400030ad8row2_col8,#T_83be0c82_0bd7_11eb_86af_525400030ad8row3_col7,#T_83be0c82_0bd7_11eb_86af_525400030ad8row7_col3,#T_83be0c82_0bd7_11eb_86af_525400030ad8row8_col2{\n",
        "            background-color:  #cccfe5;\n",
        "            color:  #000000;\n",
        "        }#T_83be0c82_0bd7_11eb_86af_525400030ad8row2_col11,#T_83be0c82_0bd7_11eb_86af_525400030ad8row2_col12,#T_83be0c82_0bd7_11eb_86af_525400030ad8row11_col2,#T_83be0c82_0bd7_11eb_86af_525400030ad8row12_col2{\n",
        "            background-color:  #88b1d4;\n",
        "            color:  #000000;\n",
        "        }#T_83be0c82_0bd7_11eb_86af_525400030ad8row2_col13,#T_83be0c82_0bd7_11eb_86af_525400030ad8row13_col2{\n",
        "            background-color:  #f8f1f8;\n",
        "            color:  #000000;\n",
        "        }#T_83be0c82_0bd7_11eb_86af_525400030ad8row2_col15,#T_83be0c82_0bd7_11eb_86af_525400030ad8row15_col2{\n",
        "            background-color:  #c8cde4;\n",
        "            color:  #000000;\n",
        "        }#T_83be0c82_0bd7_11eb_86af_525400030ad8row3_col4,#T_83be0c82_0bd7_11eb_86af_525400030ad8row4_col3,#T_83be0c82_0bd7_11eb_86af_525400030ad8row12_col15,#T_83be0c82_0bd7_11eb_86af_525400030ad8row15_col12{\n",
        "            background-color:  #a2bcda;\n",
        "            color:  #000000;\n",
        "        }#T_83be0c82_0bd7_11eb_86af_525400030ad8row3_col6,#T_83be0c82_0bd7_11eb_86af_525400030ad8row6_col3{\n",
        "            background-color:  #e0deed;\n",
        "            color:  #000000;\n",
        "        }#T_83be0c82_0bd7_11eb_86af_525400030ad8row3_col8,#T_83be0c82_0bd7_11eb_86af_525400030ad8row8_col3{\n",
        "            background-color:  #bfc9e1;\n",
        "            color:  #000000;\n",
        "        }#T_83be0c82_0bd7_11eb_86af_525400030ad8row3_col9,#T_83be0c82_0bd7_11eb_86af_525400030ad8row9_col3{\n",
        "            background-color:  #c6cce3;\n",
        "            color:  #000000;\n",
        "        }#T_83be0c82_0bd7_11eb_86af_525400030ad8row3_col10,#T_83be0c82_0bd7_11eb_86af_525400030ad8row10_col3{\n",
        "            background-color:  #8bb2d4;\n",
        "            color:  #000000;\n",
        "        }#T_83be0c82_0bd7_11eb_86af_525400030ad8row3_col11,#T_83be0c82_0bd7_11eb_86af_525400030ad8row11_col3{\n",
        "            background-color:  #8cb3d5;\n",
        "            color:  #000000;\n",
        "        }#T_83be0c82_0bd7_11eb_86af_525400030ad8row3_col12,#T_83be0c82_0bd7_11eb_86af_525400030ad8row12_col3{\n",
        "            background-color:  #97b7d7;\n",
        "            color:  #000000;\n",
        "        }#T_83be0c82_0bd7_11eb_86af_525400030ad8row3_col13,#T_83be0c82_0bd7_11eb_86af_525400030ad8row13_col3{\n",
        "            background-color:  #fef6fa;\n",
        "            color:  #000000;\n",
        "        }#T_83be0c82_0bd7_11eb_86af_525400030ad8row3_col14,#T_83be0c82_0bd7_11eb_86af_525400030ad8row14_col3{\n",
        "            background-color:  #fff7fb;\n",
        "            color:  #000000;\n",
        "        }#T_83be0c82_0bd7_11eb_86af_525400030ad8row4_col6,#T_83be0c82_0bd7_11eb_86af_525400030ad8row6_col4{\n",
        "            background-color:  #b8c6e0;\n",
        "            color:  #000000;\n",
        "        }#T_83be0c82_0bd7_11eb_86af_525400030ad8row4_col7,#T_83be0c82_0bd7_11eb_86af_525400030ad8row4_col11,#T_83be0c82_0bd7_11eb_86af_525400030ad8row7_col4,#T_83be0c82_0bd7_11eb_86af_525400030ad8row11_col4{\n",
        "            background-color:  #75a9cf;\n",
        "            color:  #000000;\n",
        "        }#T_83be0c82_0bd7_11eb_86af_525400030ad8row4_col8,#T_83be0c82_0bd7_11eb_86af_525400030ad8row4_col15,#T_83be0c82_0bd7_11eb_86af_525400030ad8row8_col4,#T_83be0c82_0bd7_11eb_86af_525400030ad8row15_col4{\n",
        "            background-color:  #a1bbda;\n",
        "            color:  #000000;\n",
        "        }#T_83be0c82_0bd7_11eb_86af_525400030ad8row4_col10,#T_83be0c82_0bd7_11eb_86af_525400030ad8row10_col4{\n",
        "            background-color:  #91b5d6;\n",
        "            color:  #000000;\n",
        "        }#T_83be0c82_0bd7_11eb_86af_525400030ad8row4_col12,#T_83be0c82_0bd7_11eb_86af_525400030ad8row12_col4{\n",
        "            background-color:  #a5bddb;\n",
        "            color:  #000000;\n",
        "        }#T_83be0c82_0bd7_11eb_86af_525400030ad8row4_col13,#T_83be0c82_0bd7_11eb_86af_525400030ad8row13_col4{\n",
        "            background-color:  #bbc7e0;\n",
        "            color:  #000000;\n",
        "        }#T_83be0c82_0bd7_11eb_86af_525400030ad8row4_col16,#T_83be0c82_0bd7_11eb_86af_525400030ad8row16_col4{\n",
        "            background-color:  #81aed2;\n",
        "            color:  #000000;\n",
        "        }#T_83be0c82_0bd7_11eb_86af_525400030ad8row5_col7,#T_83be0c82_0bd7_11eb_86af_525400030ad8row7_col5{\n",
        "            background-color:  #05659f;\n",
        "            color:  #f1f1f1;\n",
        "        }#T_83be0c82_0bd7_11eb_86af_525400030ad8row5_col8,#T_83be0c82_0bd7_11eb_86af_525400030ad8row8_col5{\n",
        "            background-color:  #0570b0;\n",
        "            color:  #f1f1f1;\n",
        "        }#T_83be0c82_0bd7_11eb_86af_525400030ad8row5_col9,#T_83be0c82_0bd7_11eb_86af_525400030ad8row9_col5{\n",
        "            background-color:  #2685bb;\n",
        "            color:  #000000;\n",
        "        }#T_83be0c82_0bd7_11eb_86af_525400030ad8row5_col10,#T_83be0c82_0bd7_11eb_86af_525400030ad8row5_col11,#T_83be0c82_0bd7_11eb_86af_525400030ad8row10_col5,#T_83be0c82_0bd7_11eb_86af_525400030ad8row11_col5{\n",
        "            background-color:  #1c7fb8;\n",
        "            color:  #000000;\n",
        "        }#T_83be0c82_0bd7_11eb_86af_525400030ad8row5_col12,#T_83be0c82_0bd7_11eb_86af_525400030ad8row12_col5{\n",
        "            background-color:  #3991c1;\n",
        "            color:  #000000;\n",
        "        }#T_83be0c82_0bd7_11eb_86af_525400030ad8row5_col13,#T_83be0c82_0bd7_11eb_86af_525400030ad8row11_col16,#T_83be0c82_0bd7_11eb_86af_525400030ad8row13_col5,#T_83be0c82_0bd7_11eb_86af_525400030ad8row16_col11{\n",
        "            background-color:  #056dab;\n",
        "            color:  #f1f1f1;\n",
        "        }#T_83be0c82_0bd7_11eb_86af_525400030ad8row5_col14,#T_83be0c82_0bd7_11eb_86af_525400030ad8row14_col5{\n",
        "            background-color:  #308cbe;\n",
        "            color:  #000000;\n",
        "        }#T_83be0c82_0bd7_11eb_86af_525400030ad8row5_col16,#T_83be0c82_0bd7_11eb_86af_525400030ad8row6_col13,#T_83be0c82_0bd7_11eb_86af_525400030ad8row7_col16,#T_83be0c82_0bd7_11eb_86af_525400030ad8row13_col6,#T_83be0c82_0bd7_11eb_86af_525400030ad8row16_col5,#T_83be0c82_0bd7_11eb_86af_525400030ad8row16_col7{\n",
        "            background-color:  #045b8e;\n",
        "            color:  #f1f1f1;\n",
        "        }#T_83be0c82_0bd7_11eb_86af_525400030ad8row6_col7,#T_83be0c82_0bd7_11eb_86af_525400030ad8row6_col8,#T_83be0c82_0bd7_11eb_86af_525400030ad8row7_col6,#T_83be0c82_0bd7_11eb_86af_525400030ad8row8_col6,#T_83be0c82_0bd7_11eb_86af_525400030ad8row9_col12,#T_83be0c82_0bd7_11eb_86af_525400030ad8row12_col9{\n",
        "            background-color:  #0f76b3;\n",
        "            color:  #f1f1f1;\n",
        "        }#T_83be0c82_0bd7_11eb_86af_525400030ad8row6_col9,#T_83be0c82_0bd7_11eb_86af_525400030ad8row9_col6{\n",
        "            background-color:  #348ebf;\n",
        "            color:  #000000;\n",
        "        }#T_83be0c82_0bd7_11eb_86af_525400030ad8row6_col10,#T_83be0c82_0bd7_11eb_86af_525400030ad8row10_col6{\n",
        "            background-color:  #157ab5;\n",
        "            color:  #000000;\n",
        "        }#T_83be0c82_0bd7_11eb_86af_525400030ad8row6_col11,#T_83be0c82_0bd7_11eb_86af_525400030ad8row11_col6{\n",
        "            background-color:  #529bc7;\n",
        "            color:  #000000;\n",
        "        }#T_83be0c82_0bd7_11eb_86af_525400030ad8row6_col12,#T_83be0c82_0bd7_11eb_86af_525400030ad8row12_col6{\n",
        "            background-color:  #4c99c5;\n",
        "            color:  #000000;\n",
        "        }#T_83be0c82_0bd7_11eb_86af_525400030ad8row6_col14,#T_83be0c82_0bd7_11eb_86af_525400030ad8row14_col6{\n",
        "            background-color:  #2786bb;\n",
        "            color:  #000000;\n",
        "        }#T_83be0c82_0bd7_11eb_86af_525400030ad8row6_col15,#T_83be0c82_0bd7_11eb_86af_525400030ad8row11_col12,#T_83be0c82_0bd7_11eb_86af_525400030ad8row12_col11,#T_83be0c82_0bd7_11eb_86af_525400030ad8row15_col6{\n",
        "            background-color:  #4897c4;\n",
        "            color:  #000000;\n",
        "        }#T_83be0c82_0bd7_11eb_86af_525400030ad8row6_col16,#T_83be0c82_0bd7_11eb_86af_525400030ad8row8_col9,#T_83be0c82_0bd7_11eb_86af_525400030ad8row9_col8,#T_83be0c82_0bd7_11eb_86af_525400030ad8row16_col6{\n",
        "            background-color:  #045c90;\n",
        "            color:  #f1f1f1;\n",
        "        }#T_83be0c82_0bd7_11eb_86af_525400030ad8row7_col8,#T_83be0c82_0bd7_11eb_86af_525400030ad8row8_col7{\n",
        "            background-color:  #056fae;\n",
        "            color:  #f1f1f1;\n",
        "        }#T_83be0c82_0bd7_11eb_86af_525400030ad8row7_col9,#T_83be0c82_0bd7_11eb_86af_525400030ad8row7_col11,#T_83be0c82_0bd7_11eb_86af_525400030ad8row9_col7,#T_83be0c82_0bd7_11eb_86af_525400030ad8row11_col7{\n",
        "            background-color:  #197db7;\n",
        "            color:  #000000;\n",
        "        }#T_83be0c82_0bd7_11eb_86af_525400030ad8row7_col10,#T_83be0c82_0bd7_11eb_86af_525400030ad8row10_col7{\n",
        "            background-color:  #2c89bd;\n",
        "            color:  #000000;\n",
        "        }#T_83be0c82_0bd7_11eb_86af_525400030ad8row7_col13,#T_83be0c82_0bd7_11eb_86af_525400030ad8row13_col7{\n",
        "            background-color:  #0771b1;\n",
        "            color:  #f1f1f1;\n",
        "        }#T_83be0c82_0bd7_11eb_86af_525400030ad8row7_col14,#T_83be0c82_0bd7_11eb_86af_525400030ad8row14_col7{\n",
        "            background-color:  #62a2cb;\n",
        "            color:  #000000;\n",
        "        }#T_83be0c82_0bd7_11eb_86af_525400030ad8row7_col15,#T_83be0c82_0bd7_11eb_86af_525400030ad8row15_col7{\n",
        "            background-color:  #79abd0;\n",
        "            color:  #000000;\n",
        "        }#T_83be0c82_0bd7_11eb_86af_525400030ad8row8_col11,#T_83be0c82_0bd7_11eb_86af_525400030ad8row11_col8{\n",
        "            background-color:  #056ba7;\n",
        "            color:  #f1f1f1;\n",
        "        }#T_83be0c82_0bd7_11eb_86af_525400030ad8row8_col12,#T_83be0c82_0bd7_11eb_86af_525400030ad8row12_col8{\n",
        "            background-color:  #1278b4;\n",
        "            color:  #f1f1f1;\n",
        "        }#T_83be0c82_0bd7_11eb_86af_525400030ad8row8_col13,#T_83be0c82_0bd7_11eb_86af_525400030ad8row13_col8{\n",
        "            background-color:  #2484ba;\n",
        "            color:  #000000;\n",
        "        }#T_83be0c82_0bd7_11eb_86af_525400030ad8row8_col15,#T_83be0c82_0bd7_11eb_86af_525400030ad8row15_col8{\n",
        "            background-color:  #abbfdc;\n",
        "            color:  #000000;\n",
        "        }#T_83be0c82_0bd7_11eb_86af_525400030ad8row8_col16,#T_83be0c82_0bd7_11eb_86af_525400030ad8row16_col8{\n",
        "            background-color:  #034f7d;\n",
        "            color:  #f1f1f1;\n",
        "        }#T_83be0c82_0bd7_11eb_86af_525400030ad8row9_col10,#T_83be0c82_0bd7_11eb_86af_525400030ad8row10_col9{\n",
        "            background-color:  #2081b9;\n",
        "            color:  #000000;\n",
        "        }#T_83be0c82_0bd7_11eb_86af_525400030ad8row9_col11,#T_83be0c82_0bd7_11eb_86af_525400030ad8row11_col9{\n",
        "            background-color:  #0872b1;\n",
        "            color:  #f1f1f1;\n",
        "        }#T_83be0c82_0bd7_11eb_86af_525400030ad8row9_col13,#T_83be0c82_0bd7_11eb_86af_525400030ad8row10_col14,#T_83be0c82_0bd7_11eb_86af_525400030ad8row11_col14,#T_83be0c82_0bd7_11eb_86af_525400030ad8row13_col9,#T_83be0c82_0bd7_11eb_86af_525400030ad8row14_col10,#T_83be0c82_0bd7_11eb_86af_525400030ad8row14_col11{\n",
        "            background-color:  #63a2cb;\n",
        "            color:  #000000;\n",
        "        }#T_83be0c82_0bd7_11eb_86af_525400030ad8row9_col14,#T_83be0c82_0bd7_11eb_86af_525400030ad8row14_col9{\n",
        "            background-color:  #b3c3de;\n",
        "            color:  #000000;\n",
        "        }#T_83be0c82_0bd7_11eb_86af_525400030ad8row9_col15,#T_83be0c82_0bd7_11eb_86af_525400030ad8row15_col9{\n",
        "            background-color:  #dddbec;\n",
        "            color:  #000000;\n",
        "        }#T_83be0c82_0bd7_11eb_86af_525400030ad8row9_col16,#T_83be0c82_0bd7_11eb_86af_525400030ad8row16_col9{\n",
        "            background-color:  #046299;\n",
        "            color:  #f1f1f1;\n",
        "        }#T_83be0c82_0bd7_11eb_86af_525400030ad8row10_col11,#T_83be0c82_0bd7_11eb_86af_525400030ad8row11_col10{\n",
        "            background-color:  #046198;\n",
        "            color:  #f1f1f1;\n",
        "        }#T_83be0c82_0bd7_11eb_86af_525400030ad8row10_col12,#T_83be0c82_0bd7_11eb_86af_525400030ad8row12_col10{\n",
        "            background-color:  #2d8abd;\n",
        "            color:  #000000;\n",
        "        }#T_83be0c82_0bd7_11eb_86af_525400030ad8row10_col13,#T_83be0c82_0bd7_11eb_86af_525400030ad8row13_col10{\n",
        "            background-color:  #569dc8;\n",
        "            color:  #000000;\n",
        "        }#T_83be0c82_0bd7_11eb_86af_525400030ad8row10_col15,#T_83be0c82_0bd7_11eb_86af_525400030ad8row15_col10,#T_83be0c82_0bd7_11eb_86af_525400030ad8row15_col16,#T_83be0c82_0bd7_11eb_86af_525400030ad8row16_col15{\n",
        "            background-color:  #69a5cc;\n",
        "            color:  #000000;\n",
        "        }#T_83be0c82_0bd7_11eb_86af_525400030ad8row10_col16,#T_83be0c82_0bd7_11eb_86af_525400030ad8row16_col10{\n",
        "            background-color:  #046096;\n",
        "            color:  #f1f1f1;\n",
        "        }#T_83be0c82_0bd7_11eb_86af_525400030ad8row11_col13,#T_83be0c82_0bd7_11eb_86af_525400030ad8row13_col11{\n",
        "            background-color:  #94b6d7;\n",
        "            color:  #000000;\n",
        "        }#T_83be0c82_0bd7_11eb_86af_525400030ad8row12_col13,#T_83be0c82_0bd7_11eb_86af_525400030ad8row13_col12{\n",
        "            background-color:  #4e9ac6;\n",
        "            color:  #000000;\n",
        "        }#T_83be0c82_0bd7_11eb_86af_525400030ad8row12_col14,#T_83be0c82_0bd7_11eb_86af_525400030ad8row14_col12{\n",
        "            background-color:  #acc0dd;\n",
        "            color:  #000000;\n",
        "        }#T_83be0c82_0bd7_11eb_86af_525400030ad8row12_col16,#T_83be0c82_0bd7_11eb_86af_525400030ad8row16_col12{\n",
        "            background-color:  #0568a3;\n",
        "            color:  #f1f1f1;\n",
        "        }#T_83be0c82_0bd7_11eb_86af_525400030ad8row13_col14,#T_83be0c82_0bd7_11eb_86af_525400030ad8row14_col13{\n",
        "            background-color:  #1e80b8;\n",
        "            color:  #000000;\n",
        "        }#T_83be0c82_0bd7_11eb_86af_525400030ad8row13_col15,#T_83be0c82_0bd7_11eb_86af_525400030ad8row15_col13{\n",
        "            background-color:  #1b7eb7;\n",
        "            color:  #000000;\n",
        "        }#T_83be0c82_0bd7_11eb_86af_525400030ad8row13_col16,#T_83be0c82_0bd7_11eb_86af_525400030ad8row16_col13{\n",
        "            background-color:  #0566a0;\n",
        "            color:  #f1f1f1;\n",
        "        }#T_83be0c82_0bd7_11eb_86af_525400030ad8row14_col15,#T_83be0c82_0bd7_11eb_86af_525400030ad8row15_col14{\n",
        "            background-color:  #2383ba;\n",
        "            color:  #000000;\n",
        "        }#T_83be0c82_0bd7_11eb_86af_525400030ad8row14_col16,#T_83be0c82_0bd7_11eb_86af_525400030ad8row16_col14{\n",
        "            background-color:  #5ea0ca;\n",
        "            color:  #000000;\n",
        "        }</style><table id=\"T_83be0c82_0bd7_11eb_86af_525400030ad8\" ><thead>    <tr>        <th class=\"blank level0\" ></th>        <th class=\"col_heading level0 col0\" >Rt</th>        <th class=\"col_heading level0 col1\" >theta</th>        <th class=\"col_heading level0 col2\" >kappa</th>        <th class=\"col_heading level0 col3\" >rho</th>        <th class=\"col_heading level0 col4\" >sigma</th>        <th class=\"col_heading level0 col5\" >School_closing</th>        <th class=\"col_heading level0 col6\" >Workplace_closing</th>        <th class=\"col_heading level0 col7\" >Cancel_events</th>        <th class=\"col_heading level0 col8\" >Gatherings_restrictions</th>        <th class=\"col_heading level0 col9\" >Transport_closing</th>        <th class=\"col_heading level0 col10\" >Stay_home_restrictions</th>        <th class=\"col_heading level0 col11\" >Internal_movement_restrictions</th>        <th class=\"col_heading level0 col12\" >International_movement_restrictions</th>        <th class=\"col_heading level0 col13\" >Information_campaigns</th>        <th class=\"col_heading level0 col14\" >Testing_policy</th>        <th class=\"col_heading level0 col15\" >Contact_tracing</th>        <th class=\"col_heading level0 col16\" >Stringency_index</th>    </tr></thead><tbody>\n",
        "                <tr>\n",
        "                        <th id=\"T_83be0c82_0bd7_11eb_86af_525400030ad8level0_row0\" class=\"row_heading level0 row0\" >Rt</th>\n",
        "                        <td id=\"T_83be0c82_0bd7_11eb_86af_525400030ad8row0_col0\" class=\"data row0 col0\" >1.000000</td>\n",
        "                        <td id=\"T_83be0c82_0bd7_11eb_86af_525400030ad8row0_col1\" class=\"data row0 col1\" >-0.176084</td>\n",
        "                        <td id=\"T_83be0c82_0bd7_11eb_86af_525400030ad8row0_col2\" class=\"data row0 col2\" >-0.149973</td>\n",
        "                        <td id=\"T_83be0c82_0bd7_11eb_86af_525400030ad8row0_col3\" class=\"data row0 col3\" >0.269555</td>\n",
        "                        <td id=\"T_83be0c82_0bd7_11eb_86af_525400030ad8row0_col4\" class=\"data row0 col4\" >-0.293099</td>\n",
        "                        <td id=\"T_83be0c82_0bd7_11eb_86af_525400030ad8row0_col5\" class=\"data row0 col5\" >-0.344253</td>\n",
        "                        <td id=\"T_83be0c82_0bd7_11eb_86af_525400030ad8row0_col6\" class=\"data row0 col6\" >-0.171985</td>\n",
        "                        <td id=\"T_83be0c82_0bd7_11eb_86af_525400030ad8row0_col7\" class=\"data row0 col7\" >-0.240878</td>\n",
        "                        <td id=\"T_83be0c82_0bd7_11eb_86af_525400030ad8row0_col8\" class=\"data row0 col8\" >-0.174696</td>\n",
        "                        <td id=\"T_83be0c82_0bd7_11eb_86af_525400030ad8row0_col9\" class=\"data row0 col9\" >-0.262543</td>\n",
        "                        <td id=\"T_83be0c82_0bd7_11eb_86af_525400030ad8row0_col10\" class=\"data row0 col10\" >-0.222425</td>\n",
        "                        <td id=\"T_83be0c82_0bd7_11eb_86af_525400030ad8row0_col11\" class=\"data row0 col11\" >-0.361244</td>\n",
        "                        <td id=\"T_83be0c82_0bd7_11eb_86af_525400030ad8row0_col12\" class=\"data row0 col12\" >-0.209655</td>\n",
        "                        <td id=\"T_83be0c82_0bd7_11eb_86af_525400030ad8row0_col13\" class=\"data row0 col13\" >-0.079523</td>\n",
        "                        <td id=\"T_83be0c82_0bd7_11eb_86af_525400030ad8row0_col14\" class=\"data row0 col14\" >-0.207220</td>\n",
        "                        <td id=\"T_83be0c82_0bd7_11eb_86af_525400030ad8row0_col15\" class=\"data row0 col15\" >-0.131693</td>\n",
        "                        <td id=\"T_83be0c82_0bd7_11eb_86af_525400030ad8row0_col16\" class=\"data row0 col16\" >-0.251051</td>\n",
        "            </tr>\n",
        "            <tr>\n",
        "                        <th id=\"T_83be0c82_0bd7_11eb_86af_525400030ad8level0_row1\" class=\"row_heading level0 row1\" >theta</th>\n",
        "                        <td id=\"T_83be0c82_0bd7_11eb_86af_525400030ad8row1_col0\" class=\"data row1 col0\" >-0.176084</td>\n",
        "                        <td id=\"T_83be0c82_0bd7_11eb_86af_525400030ad8row1_col1\" class=\"data row1 col1\" >1.000000</td>\n",
        "                        <td id=\"T_83be0c82_0bd7_11eb_86af_525400030ad8row1_col2\" class=\"data row1 col2\" >0.982852</td>\n",
        "                        <td id=\"T_83be0c82_0bd7_11eb_86af_525400030ad8row1_col3\" class=\"data row1 col3\" >0.670508</td>\n",
        "                        <td id=\"T_83be0c82_0bd7_11eb_86af_525400030ad8row1_col4\" class=\"data row1 col4\" >0.074137</td>\n",
        "                        <td id=\"T_83be0c82_0bd7_11eb_86af_525400030ad8row1_col5\" class=\"data row1 col5\" >-0.139497</td>\n",
        "                        <td id=\"T_83be0c82_0bd7_11eb_86af_525400030ad8row1_col6\" class=\"data row1 col6\" >-0.122738</td>\n",
        "                        <td id=\"T_83be0c82_0bd7_11eb_86af_525400030ad8row1_col7\" class=\"data row1 col7\" >-0.132573</td>\n",
        "                        <td id=\"T_83be0c82_0bd7_11eb_86af_525400030ad8row1_col8\" class=\"data row1 col8\" >-0.073026</td>\n",
        "                        <td id=\"T_83be0c82_0bd7_11eb_86af_525400030ad8row1_col9\" class=\"data row1 col9\" >-0.106797</td>\n",
        "                        <td id=\"T_83be0c82_0bd7_11eb_86af_525400030ad8row1_col10\" class=\"data row1 col10\" >0.259214</td>\n",
        "                        <td id=\"T_83be0c82_0bd7_11eb_86af_525400030ad8row1_col11\" class=\"data row1 col11\" >0.191832</td>\n",
        "                        <td id=\"T_83be0c82_0bd7_11eb_86af_525400030ad8row1_col12\" class=\"data row1 col12\" >0.164467</td>\n",
        "                        <td id=\"T_83be0c82_0bd7_11eb_86af_525400030ad8row1_col13\" class=\"data row1 col13\" >-0.354628</td>\n",
        "                        <td id=\"T_83be0c82_0bd7_11eb_86af_525400030ad8row1_col14\" class=\"data row1 col14\" >-0.232867</td>\n",
        "                        <td id=\"T_83be0c82_0bd7_11eb_86af_525400030ad8row1_col15\" class=\"data row1 col15\" >-0.011215</td>\n",
        "                        <td id=\"T_83be0c82_0bd7_11eb_86af_525400030ad8row1_col16\" class=\"data row1 col16\" >-0.024000</td>\n",
        "            </tr>\n",
        "            <tr>\n",
        "                        <th id=\"T_83be0c82_0bd7_11eb_86af_525400030ad8level0_row2\" class=\"row_heading level0 row2\" >kappa</th>\n",
        "                        <td id=\"T_83be0c82_0bd7_11eb_86af_525400030ad8row2_col0\" class=\"data row2 col0\" >-0.149973</td>\n",
        "                        <td id=\"T_83be0c82_0bd7_11eb_86af_525400030ad8row2_col1\" class=\"data row2 col1\" >0.982852</td>\n",
        "                        <td id=\"T_83be0c82_0bd7_11eb_86af_525400030ad8row2_col2\" class=\"data row2 col2\" >1.000000</td>\n",
        "                        <td id=\"T_83be0c82_0bd7_11eb_86af_525400030ad8row2_col3\" class=\"data row2 col3\" >0.697879</td>\n",
        "                        <td id=\"T_83be0c82_0bd7_11eb_86af_525400030ad8row2_col4\" class=\"data row2 col4\" >0.032170</td>\n",
        "                        <td id=\"T_83be0c82_0bd7_11eb_86af_525400030ad8row2_col5\" class=\"data row2 col5\" >-0.164299</td>\n",
        "                        <td id=\"T_83be0c82_0bd7_11eb_86af_525400030ad8row2_col6\" class=\"data row2 col6\" >-0.141023</td>\n",
        "                        <td id=\"T_83be0c82_0bd7_11eb_86af_525400030ad8row2_col7\" class=\"data row2 col7\" >-0.117431</td>\n",
        "                        <td id=\"T_83be0c82_0bd7_11eb_86af_525400030ad8row2_col8\" class=\"data row2 col8\" >-0.054203</td>\n",
        "                        <td id=\"T_83be0c82_0bd7_11eb_86af_525400030ad8row2_col9\" class=\"data row2 col9\" >-0.074891</td>\n",
        "                        <td id=\"T_83be0c82_0bd7_11eb_86af_525400030ad8row2_col10\" class=\"data row2 col10\" >0.266102</td>\n",
        "                        <td id=\"T_83be0c82_0bd7_11eb_86af_525400030ad8row2_col11\" class=\"data row2 col11\" >0.213719</td>\n",
        "                        <td id=\"T_83be0c82_0bd7_11eb_86af_525400030ad8row2_col12\" class=\"data row2 col12\" >0.214899</td>\n",
        "                        <td id=\"T_83be0c82_0bd7_11eb_86af_525400030ad8row2_col13\" class=\"data row2 col13\" >-0.364355</td>\n",
        "                        <td id=\"T_83be0c82_0bd7_11eb_86af_525400030ad8row2_col14\" class=\"data row2 col14\" >-0.226592</td>\n",
        "                        <td id=\"T_83be0c82_0bd7_11eb_86af_525400030ad8row2_col15\" class=\"data row2 col15\" >-0.037893</td>\n",
        "                        <td id=\"T_83be0c82_0bd7_11eb_86af_525400030ad8row2_col16\" class=\"data row2 col16\" >-0.023344</td>\n",
        "            </tr>\n",
        "            <tr>\n",
        "                        <th id=\"T_83be0c82_0bd7_11eb_86af_525400030ad8level0_row3\" class=\"row_heading level0 row3\" >rho</th>\n",
        "                        <td id=\"T_83be0c82_0bd7_11eb_86af_525400030ad8row3_col0\" class=\"data row3 col0\" >0.269555</td>\n",
        "                        <td id=\"T_83be0c82_0bd7_11eb_86af_525400030ad8row3_col1\" class=\"data row3 col1\" >0.670508</td>\n",
        "                        <td id=\"T_83be0c82_0bd7_11eb_86af_525400030ad8row3_col2\" class=\"data row3 col2\" >0.697879</td>\n",
        "                        <td id=\"T_83be0c82_0bd7_11eb_86af_525400030ad8row3_col3\" class=\"data row3 col3\" >1.000000</td>\n",
        "                        <td id=\"T_83be0c82_0bd7_11eb_86af_525400030ad8row3_col4\" class=\"data row3 col4\" >0.116585</td>\n",
        "                        <td id=\"T_83be0c82_0bd7_11eb_86af_525400030ad8row3_col5\" class=\"data row3 col5\" >-0.162161</td>\n",
        "                        <td id=\"T_83be0c82_0bd7_11eb_86af_525400030ad8row3_col6\" class=\"data row3 col6\" >-0.177755</td>\n",
        "                        <td id=\"T_83be0c82_0bd7_11eb_86af_525400030ad8row3_col7\" class=\"data row3 col7\" >-0.054409</td>\n",
        "                        <td id=\"T_83be0c82_0bd7_11eb_86af_525400030ad8row3_col8\" class=\"data row3 col8\" >-0.001426</td>\n",
        "                        <td id=\"T_83be0c82_0bd7_11eb_86af_525400030ad8row3_col9\" class=\"data row3 col9\" >-0.035600</td>\n",
        "                        <td id=\"T_83be0c82_0bd7_11eb_86af_525400030ad8row3_col10\" class=\"data row3 col10\" >0.201013</td>\n",
        "                        <td id=\"T_83be0c82_0bd7_11eb_86af_525400030ad8row3_col11\" class=\"data row3 col11\" >0.194563</td>\n",
        "                        <td id=\"T_83be0c82_0bd7_11eb_86af_525400030ad8row3_col12\" class=\"data row3 col12\" >0.155903</td>\n",
        "                        <td id=\"T_83be0c82_0bd7_11eb_86af_525400030ad8row3_col13\" class=\"data row3 col13\" >-0.421760</td>\n",
        "                        <td id=\"T_83be0c82_0bd7_11eb_86af_525400030ad8row3_col14\" class=\"data row3 col14\" >-0.435418</td>\n",
        "                        <td id=\"T_83be0c82_0bd7_11eb_86af_525400030ad8row3_col15\" class=\"data row3 col15\" >-0.253748</td>\n",
        "                        <td id=\"T_83be0c82_0bd7_11eb_86af_525400030ad8row3_col16\" class=\"data row3 col16\" >-0.020695</td>\n",
        "            </tr>\n",
        "            <tr>\n",
        "                        <th id=\"T_83be0c82_0bd7_11eb_86af_525400030ad8level0_row4\" class=\"row_heading level0 row4\" >sigma</th>\n",
        "                        <td id=\"T_83be0c82_0bd7_11eb_86af_525400030ad8row4_col0\" class=\"data row4 col0\" >-0.293099</td>\n",
        "                        <td id=\"T_83be0c82_0bd7_11eb_86af_525400030ad8row4_col1\" class=\"data row4 col1\" >0.074137</td>\n",
        "                        <td id=\"T_83be0c82_0bd7_11eb_86af_525400030ad8row4_col2\" class=\"data row4 col2\" >0.032170</td>\n",
        "                        <td id=\"T_83be0c82_0bd7_11eb_86af_525400030ad8row4_col3\" class=\"data row4 col3\" >0.116585</td>\n",
        "                        <td id=\"T_83be0c82_0bd7_11eb_86af_525400030ad8row4_col4\" class=\"data row4 col4\" >1.000000</td>\n",
        "                        <td id=\"T_83be0c82_0bd7_11eb_86af_525400030ad8row4_col5\" class=\"data row4 col5\" >0.266546</td>\n",
        "                        <td id=\"T_83be0c82_0bd7_11eb_86af_525400030ad8row4_col6\" class=\"data row4 col6\" >0.025889</td>\n",
        "                        <td id=\"T_83be0c82_0bd7_11eb_86af_525400030ad8row4_col7\" class=\"data row4 col7\" >0.280977</td>\n",
        "                        <td id=\"T_83be0c82_0bd7_11eb_86af_525400030ad8row4_col8\" class=\"data row4 col8\" >0.122757</td>\n",
        "                        <td id=\"T_83be0c82_0bd7_11eb_86af_525400030ad8row4_col9\" class=\"data row4 col9\" >0.190063</td>\n",
        "                        <td id=\"T_83be0c82_0bd7_11eb_86af_525400030ad8row4_col10\" class=\"data row4 col10\" >0.178034</td>\n",
        "                        <td id=\"T_83be0c82_0bd7_11eb_86af_525400030ad8row4_col11\" class=\"data row4 col11\" >0.281025</td>\n",
        "                        <td id=\"T_83be0c82_0bd7_11eb_86af_525400030ad8row4_col12\" class=\"data row4 col12\" >0.105435</td>\n",
        "                        <td id=\"T_83be0c82_0bd7_11eb_86af_525400030ad8row4_col13\" class=\"data row4 col13\" >0.017005</td>\n",
        "                        <td id=\"T_83be0c82_0bd7_11eb_86af_525400030ad8row4_col14\" class=\"data row4 col14\" >-0.021824</td>\n",
        "                        <td id=\"T_83be0c82_0bd7_11eb_86af_525400030ad8row4_col15\" class=\"data row4 col15\" >0.122750</td>\n",
        "                        <td id=\"T_83be0c82_0bd7_11eb_86af_525400030ad8row4_col16\" class=\"data row4 col16\" >0.234815</td>\n",
        "            </tr>\n",
        "            <tr>\n",
        "                        <th id=\"T_83be0c82_0bd7_11eb_86af_525400030ad8level0_row5\" class=\"row_heading level0 row5\" >School_closing</th>\n",
        "                        <td id=\"T_83be0c82_0bd7_11eb_86af_525400030ad8row5_col0\" class=\"data row5 col0\" >-0.344253</td>\n",
        "                        <td id=\"T_83be0c82_0bd7_11eb_86af_525400030ad8row5_col1\" class=\"data row5 col1\" >-0.139497</td>\n",
        "                        <td id=\"T_83be0c82_0bd7_11eb_86af_525400030ad8row5_col2\" class=\"data row5 col2\" >-0.164299</td>\n",
        "                        <td id=\"T_83be0c82_0bd7_11eb_86af_525400030ad8row5_col3\" class=\"data row5 col3\" >-0.162161</td>\n",
        "                        <td id=\"T_83be0c82_0bd7_11eb_86af_525400030ad8row5_col4\" class=\"data row5 col4\" >0.266546</td>\n",
        "                        <td id=\"T_83be0c82_0bd7_11eb_86af_525400030ad8row5_col5\" class=\"data row5 col5\" >1.000000</td>\n",
        "                        <td id=\"T_83be0c82_0bd7_11eb_86af_525400030ad8row5_col6\" class=\"data row5 col6\" >0.699933</td>\n",
        "                        <td id=\"T_83be0c82_0bd7_11eb_86af_525400030ad8row5_col7\" class=\"data row5 col7\" >0.730653</td>\n",
        "                        <td id=\"T_83be0c82_0bd7_11eb_86af_525400030ad8row5_col8\" class=\"data row5 col8\" >0.635680</td>\n",
        "                        <td id=\"T_83be0c82_0bd7_11eb_86af_525400030ad8row5_col9\" class=\"data row5 col9\" >0.520495</td>\n",
        "                        <td id=\"T_83be0c82_0bd7_11eb_86af_525400030ad8row5_col10\" class=\"data row5 col10\" >0.553363</td>\n",
        "                        <td id=\"T_83be0c82_0bd7_11eb_86af_525400030ad8row5_col11\" class=\"data row5 col11\" >0.553402</td>\n",
        "                        <td id=\"T_83be0c82_0bd7_11eb_86af_525400030ad8row5_col12\" class=\"data row5 col12\" >0.455169</td>\n",
        "                        <td id=\"T_83be0c82_0bd7_11eb_86af_525400030ad8row5_col13\" class=\"data row5 col13\" >0.668767</td>\n",
        "                        <td id=\"T_83be0c82_0bd7_11eb_86af_525400030ad8row5_col14\" class=\"data row5 col14\" >0.480439</td>\n",
        "                        <td id=\"T_83be0c82_0bd7_11eb_86af_525400030ad8row5_col15\" class=\"data row5 col15\" >0.267214</td>\n",
        "                        <td id=\"T_83be0c82_0bd7_11eb_86af_525400030ad8row5_col16\" class=\"data row5 col16\" >0.812643</td>\n",
        "            </tr>\n",
        "            <tr>\n",
        "                        <th id=\"T_83be0c82_0bd7_11eb_86af_525400030ad8level0_row6\" class=\"row_heading level0 row6\" >Workplace_closing</th>\n",
        "                        <td id=\"T_83be0c82_0bd7_11eb_86af_525400030ad8row6_col0\" class=\"data row6 col0\" >-0.171985</td>\n",
        "                        <td id=\"T_83be0c82_0bd7_11eb_86af_525400030ad8row6_col1\" class=\"data row6 col1\" >-0.122738</td>\n",
        "                        <td id=\"T_83be0c82_0bd7_11eb_86af_525400030ad8row6_col2\" class=\"data row6 col2\" >-0.141023</td>\n",
        "                        <td id=\"T_83be0c82_0bd7_11eb_86af_525400030ad8row6_col3\" class=\"data row6 col3\" >-0.177755</td>\n",
        "                        <td id=\"T_83be0c82_0bd7_11eb_86af_525400030ad8row6_col4\" class=\"data row6 col4\" >0.025889</td>\n",
        "                        <td id=\"T_83be0c82_0bd7_11eb_86af_525400030ad8row6_col5\" class=\"data row6 col5\" >0.699933</td>\n",
        "                        <td id=\"T_83be0c82_0bd7_11eb_86af_525400030ad8row6_col6\" class=\"data row6 col6\" >1.000000</td>\n",
        "                        <td id=\"T_83be0c82_0bd7_11eb_86af_525400030ad8row6_col7\" class=\"data row6 col7\" >0.605780</td>\n",
        "                        <td id=\"T_83be0c82_0bd7_11eb_86af_525400030ad8row6_col8\" class=\"data row6 col8\" >0.606639</td>\n",
        "                        <td id=\"T_83be0c82_0bd7_11eb_86af_525400030ad8row6_col9\" class=\"data row6 col9\" >0.472790</td>\n",
        "                        <td id=\"T_83be0c82_0bd7_11eb_86af_525400030ad8row6_col10\" class=\"data row6 col10\" >0.580387</td>\n",
        "                        <td id=\"T_83be0c82_0bd7_11eb_86af_525400030ad8row6_col11\" class=\"data row6 col11\" >0.382931</td>\n",
        "                        <td id=\"T_83be0c82_0bd7_11eb_86af_525400030ad8row6_col12\" class=\"data row6 col12\" >0.400036</td>\n",
        "                        <td id=\"T_83be0c82_0bd7_11eb_86af_525400030ad8row6_col13\" class=\"data row6 col13\" >0.814014</td>\n",
        "                        <td id=\"T_83be0c82_0bd7_11eb_86af_525400030ad8row6_col14\" class=\"data row6 col14\" >0.516242</td>\n",
        "                        <td id=\"T_83be0c82_0bd7_11eb_86af_525400030ad8row6_col15\" class=\"data row6 col15\" >0.405949</td>\n",
        "                        <td id=\"T_83be0c82_0bd7_11eb_86af_525400030ad8row6_col16\" class=\"data row6 col16\" >0.798591</td>\n",
        "            </tr>\n",
        "            <tr>\n",
        "                        <th id=\"T_83be0c82_0bd7_11eb_86af_525400030ad8level0_row7\" class=\"row_heading level0 row7\" >Cancel_events</th>\n",
        "                        <td id=\"T_83be0c82_0bd7_11eb_86af_525400030ad8row7_col0\" class=\"data row7 col0\" >-0.240878</td>\n",
        "                        <td id=\"T_83be0c82_0bd7_11eb_86af_525400030ad8row7_col1\" class=\"data row7 col1\" >-0.132573</td>\n",
        "                        <td id=\"T_83be0c82_0bd7_11eb_86af_525400030ad8row7_col2\" class=\"data row7 col2\" >-0.117431</td>\n",
        "                        <td id=\"T_83be0c82_0bd7_11eb_86af_525400030ad8row7_col3\" class=\"data row7 col3\" >-0.054409</td>\n",
        "                        <td id=\"T_83be0c82_0bd7_11eb_86af_525400030ad8row7_col4\" class=\"data row7 col4\" >0.280977</td>\n",
        "                        <td id=\"T_83be0c82_0bd7_11eb_86af_525400030ad8row7_col5\" class=\"data row7 col5\" >0.730653</td>\n",
        "                        <td id=\"T_83be0c82_0bd7_11eb_86af_525400030ad8row7_col6\" class=\"data row7 col6\" >0.605780</td>\n",
        "                        <td id=\"T_83be0c82_0bd7_11eb_86af_525400030ad8row7_col7\" class=\"data row7 col7\" >1.000000</td>\n",
        "                        <td id=\"T_83be0c82_0bd7_11eb_86af_525400030ad8row7_col8\" class=\"data row7 col8\" >0.651896</td>\n",
        "                        <td id=\"T_83be0c82_0bd7_11eb_86af_525400030ad8row7_col9\" class=\"data row7 col9\" >0.563125</td>\n",
        "                        <td id=\"T_83be0c82_0bd7_11eb_86af_525400030ad8row7_col10\" class=\"data row7 col10\" >0.497619</td>\n",
        "                        <td id=\"T_83be0c82_0bd7_11eb_86af_525400030ad8row7_col11\" class=\"data row7 col11\" >0.562690</td>\n",
        "                        <td id=\"T_83be0c82_0bd7_11eb_86af_525400030ad8row7_col12\" class=\"data row7 col12\" >0.671674</td>\n",
        "                        <td id=\"T_83be0c82_0bd7_11eb_86af_525400030ad8row7_col13\" class=\"data row7 col13\" >0.630884</td>\n",
        "                        <td id=\"T_83be0c82_0bd7_11eb_86af_525400030ad8row7_col14\" class=\"data row7 col14\" >0.334621</td>\n",
        "                        <td id=\"T_83be0c82_0bd7_11eb_86af_525400030ad8row7_col15\" class=\"data row7 col15\" >0.261258</td>\n",
        "                        <td id=\"T_83be0c82_0bd7_11eb_86af_525400030ad8row7_col16\" class=\"data row7 col16\" >0.811368</td>\n",
        "            </tr>\n",
        "            <tr>\n",
        "                        <th id=\"T_83be0c82_0bd7_11eb_86af_525400030ad8level0_row8\" class=\"row_heading level0 row8\" >Gatherings_restrictions</th>\n",
        "                        <td id=\"T_83be0c82_0bd7_11eb_86af_525400030ad8row8_col0\" class=\"data row8 col0\" >-0.174696</td>\n",
        "                        <td id=\"T_83be0c82_0bd7_11eb_86af_525400030ad8row8_col1\" class=\"data row8 col1\" >-0.073026</td>\n",
        "                        <td id=\"T_83be0c82_0bd7_11eb_86af_525400030ad8row8_col2\" class=\"data row8 col2\" >-0.054203</td>\n",
        "                        <td id=\"T_83be0c82_0bd7_11eb_86af_525400030ad8row8_col3\" class=\"data row8 col3\" >-0.001426</td>\n",
        "                        <td id=\"T_83be0c82_0bd7_11eb_86af_525400030ad8row8_col4\" class=\"data row8 col4\" >0.122757</td>\n",
        "                        <td id=\"T_83be0c82_0bd7_11eb_86af_525400030ad8row8_col5\" class=\"data row8 col5\" >0.635680</td>\n",
        "                        <td id=\"T_83be0c82_0bd7_11eb_86af_525400030ad8row8_col6\" class=\"data row8 col6\" >0.606639</td>\n",
        "                        <td id=\"T_83be0c82_0bd7_11eb_86af_525400030ad8row8_col7\" class=\"data row8 col7\" >0.651896</td>\n",
        "                        <td id=\"T_83be0c82_0bd7_11eb_86af_525400030ad8row8_col8\" class=\"data row8 col8\" >1.000000</td>\n",
        "                        <td id=\"T_83be0c82_0bd7_11eb_86af_525400030ad8row8_col9\" class=\"data row8 col9\" >0.801551</td>\n",
        "                        <td id=\"T_83be0c82_0bd7_11eb_86af_525400030ad8row8_col10\" class=\"data row8 col10\" >0.673120</td>\n",
        "                        <td id=\"T_83be0c82_0bd7_11eb_86af_525400030ad8row8_col11\" class=\"data row8 col11\" >0.684089</td>\n",
        "                        <td id=\"T_83be0c82_0bd7_11eb_86af_525400030ad8row8_col12\" class=\"data row8 col12\" >0.593324</td>\n",
        "                        <td id=\"T_83be0c82_0bd7_11eb_86af_525400030ad8row8_col13\" class=\"data row8 col13\" >0.528503</td>\n",
        "                        <td id=\"T_83be0c82_0bd7_11eb_86af_525400030ad8row8_col14\" class=\"data row8 col14\" >0.259631</td>\n",
        "                        <td id=\"T_83be0c82_0bd7_11eb_86af_525400030ad8row8_col15\" class=\"data row8 col15\" >0.084011</td>\n",
        "                        <td id=\"T_83be0c82_0bd7_11eb_86af_525400030ad8row8_col16\" class=\"data row8 col16\" >0.873137</td>\n",
        "            </tr>\n",
        "            <tr>\n",
        "                        <th id=\"T_83be0c82_0bd7_11eb_86af_525400030ad8level0_row9\" class=\"row_heading level0 row9\" >Transport_closing</th>\n",
        "                        <td id=\"T_83be0c82_0bd7_11eb_86af_525400030ad8row9_col0\" class=\"data row9 col0\" >-0.262543</td>\n",
        "                        <td id=\"T_83be0c82_0bd7_11eb_86af_525400030ad8row9_col1\" class=\"data row9 col1\" >-0.106797</td>\n",
        "                        <td id=\"T_83be0c82_0bd7_11eb_86af_525400030ad8row9_col2\" class=\"data row9 col2\" >-0.074891</td>\n",
        "                        <td id=\"T_83be0c82_0bd7_11eb_86af_525400030ad8row9_col3\" class=\"data row9 col3\" >-0.035600</td>\n",
        "                        <td id=\"T_83be0c82_0bd7_11eb_86af_525400030ad8row9_col4\" class=\"data row9 col4\" >0.190063</td>\n",
        "                        <td id=\"T_83be0c82_0bd7_11eb_86af_525400030ad8row9_col5\" class=\"data row9 col5\" >0.520495</td>\n",
        "                        <td id=\"T_83be0c82_0bd7_11eb_86af_525400030ad8row9_col6\" class=\"data row9 col6\" >0.472790</td>\n",
        "                        <td id=\"T_83be0c82_0bd7_11eb_86af_525400030ad8row9_col7\" class=\"data row9 col7\" >0.563125</td>\n",
        "                        <td id=\"T_83be0c82_0bd7_11eb_86af_525400030ad8row9_col8\" class=\"data row9 col8\" >0.801551</td>\n",
        "                        <td id=\"T_83be0c82_0bd7_11eb_86af_525400030ad8row9_col9\" class=\"data row9 col9\" >1.000000</td>\n",
        "                        <td id=\"T_83be0c82_0bd7_11eb_86af_525400030ad8row9_col10\" class=\"data row9 col10\" >0.544540</td>\n",
        "                        <td id=\"T_83be0c82_0bd7_11eb_86af_525400030ad8row9_col11\" class=\"data row9 col11\" >0.624363</td>\n",
        "                        <td id=\"T_83be0c82_0bd7_11eb_86af_525400030ad8row9_col12\" class=\"data row9 col12\" >0.606824</td>\n",
        "                        <td id=\"T_83be0c82_0bd7_11eb_86af_525400030ad8row9_col13\" class=\"data row9 col13\" >0.327484</td>\n",
        "                        <td id=\"T_83be0c82_0bd7_11eb_86af_525400030ad8row9_col14\" class=\"data row9 col14\" >0.048483</td>\n",
        "                        <td id=\"T_83be0c82_0bd7_11eb_86af_525400030ad8row9_col15\" class=\"data row9 col15\" >-0.159497</td>\n",
        "                        <td id=\"T_83be0c82_0bd7_11eb_86af_525400030ad8row9_col16\" class=\"data row9 col16\" >0.754446</td>\n",
        "            </tr>\n",
        "            <tr>\n",
        "                        <th id=\"T_83be0c82_0bd7_11eb_86af_525400030ad8level0_row10\" class=\"row_heading level0 row10\" >Stay_home_restrictions</th>\n",
        "                        <td id=\"T_83be0c82_0bd7_11eb_86af_525400030ad8row10_col0\" class=\"data row10 col0\" >-0.222425</td>\n",
        "                        <td id=\"T_83be0c82_0bd7_11eb_86af_525400030ad8row10_col1\" class=\"data row10 col1\" >0.259214</td>\n",
        "                        <td id=\"T_83be0c82_0bd7_11eb_86af_525400030ad8row10_col2\" class=\"data row10 col2\" >0.266102</td>\n",
        "                        <td id=\"T_83be0c82_0bd7_11eb_86af_525400030ad8row10_col3\" class=\"data row10 col3\" >0.201013</td>\n",
        "                        <td id=\"T_83be0c82_0bd7_11eb_86af_525400030ad8row10_col4\" class=\"data row10 col4\" >0.178034</td>\n",
        "                        <td id=\"T_83be0c82_0bd7_11eb_86af_525400030ad8row10_col5\" class=\"data row10 col5\" >0.553363</td>\n",
        "                        <td id=\"T_83be0c82_0bd7_11eb_86af_525400030ad8row10_col6\" class=\"data row10 col6\" >0.580387</td>\n",
        "                        <td id=\"T_83be0c82_0bd7_11eb_86af_525400030ad8row10_col7\" class=\"data row10 col7\" >0.497619</td>\n",
        "                        <td id=\"T_83be0c82_0bd7_11eb_86af_525400030ad8row10_col8\" class=\"data row10 col8\" >0.673120</td>\n",
        "                        <td id=\"T_83be0c82_0bd7_11eb_86af_525400030ad8row10_col9\" class=\"data row10 col9\" >0.544540</td>\n",
        "                        <td id=\"T_83be0c82_0bd7_11eb_86af_525400030ad8row10_col10\" class=\"data row10 col10\" >1.000000</td>\n",
        "                        <td id=\"T_83be0c82_0bd7_11eb_86af_525400030ad8row10_col11\" class=\"data row10 col11\" >0.760892</td>\n",
        "                        <td id=\"T_83be0c82_0bd7_11eb_86af_525400030ad8row10_col12\" class=\"data row10 col12\" >0.494508</td>\n",
        "                        <td id=\"T_83be0c82_0bd7_11eb_86af_525400030ad8row10_col13\" class=\"data row10 col13\" >0.370451</td>\n",
        "                        <td id=\"T_83be0c82_0bd7_11eb_86af_525400030ad8row10_col14\" class=\"data row10 col14\" >0.330238</td>\n",
        "                        <td id=\"T_83be0c82_0bd7_11eb_86af_525400030ad8row10_col15\" class=\"data row10 col15\" >0.314412</td>\n",
        "                        <td id=\"T_83be0c82_0bd7_11eb_86af_525400030ad8row10_col16\" class=\"data row10 col16\" >0.772216</td>\n",
        "            </tr>\n",
        "            <tr>\n",
        "                        <th id=\"T_83be0c82_0bd7_11eb_86af_525400030ad8level0_row11\" class=\"row_heading level0 row11\" >Internal_movement_restrictions</th>\n",
        "                        <td id=\"T_83be0c82_0bd7_11eb_86af_525400030ad8row11_col0\" class=\"data row11 col0\" >-0.361244</td>\n",
        "                        <td id=\"T_83be0c82_0bd7_11eb_86af_525400030ad8row11_col1\" class=\"data row11 col1\" >0.191832</td>\n",
        "                        <td id=\"T_83be0c82_0bd7_11eb_86af_525400030ad8row11_col2\" class=\"data row11 col2\" >0.213719</td>\n",
        "                        <td id=\"T_83be0c82_0bd7_11eb_86af_525400030ad8row11_col3\" class=\"data row11 col3\" >0.194563</td>\n",
        "                        <td id=\"T_83be0c82_0bd7_11eb_86af_525400030ad8row11_col4\" class=\"data row11 col4\" >0.281025</td>\n",
        "                        <td id=\"T_83be0c82_0bd7_11eb_86af_525400030ad8row11_col5\" class=\"data row11 col5\" >0.553402</td>\n",
        "                        <td id=\"T_83be0c82_0bd7_11eb_86af_525400030ad8row11_col6\" class=\"data row11 col6\" >0.382931</td>\n",
        "                        <td id=\"T_83be0c82_0bd7_11eb_86af_525400030ad8row11_col7\" class=\"data row11 col7\" >0.562690</td>\n",
        "                        <td id=\"T_83be0c82_0bd7_11eb_86af_525400030ad8row11_col8\" class=\"data row11 col8\" >0.684089</td>\n",
        "                        <td id=\"T_83be0c82_0bd7_11eb_86af_525400030ad8row11_col9\" class=\"data row11 col9\" >0.624363</td>\n",
        "                        <td id=\"T_83be0c82_0bd7_11eb_86af_525400030ad8row11_col10\" class=\"data row11 col10\" >0.760892</td>\n",
        "                        <td id=\"T_83be0c82_0bd7_11eb_86af_525400030ad8row11_col11\" class=\"data row11 col11\" >1.000000</td>\n",
        "                        <td id=\"T_83be0c82_0bd7_11eb_86af_525400030ad8row11_col12\" class=\"data row11 col12\" >0.408118</td>\n",
        "                        <td id=\"T_83be0c82_0bd7_11eb_86af_525400030ad8row11_col13\" class=\"data row11 col13\" >0.166418</td>\n",
        "                        <td id=\"T_83be0c82_0bd7_11eb_86af_525400030ad8row11_col14\" class=\"data row11 col14\" >0.330898</td>\n",
        "                        <td id=\"T_83be0c82_0bd7_11eb_86af_525400030ad8row11_col15\" class=\"data row11 col15\" >0.033013</td>\n",
        "                        <td id=\"T_83be0c82_0bd7_11eb_86af_525400030ad8row11_col16\" class=\"data row11 col16\" >0.667040</td>\n",
        "            </tr>\n",
        "            <tr>\n",
        "                        <th id=\"T_83be0c82_0bd7_11eb_86af_525400030ad8level0_row12\" class=\"row_heading level0 row12\" >International_movement_restrictions</th>\n",
        "                        <td id=\"T_83be0c82_0bd7_11eb_86af_525400030ad8row12_col0\" class=\"data row12 col0\" >-0.209655</td>\n",
        "                        <td id=\"T_83be0c82_0bd7_11eb_86af_525400030ad8row12_col1\" class=\"data row12 col1\" >0.164467</td>\n",
        "                        <td id=\"T_83be0c82_0bd7_11eb_86af_525400030ad8row12_col2\" class=\"data row12 col2\" >0.214899</td>\n",
        "                        <td id=\"T_83be0c82_0bd7_11eb_86af_525400030ad8row12_col3\" class=\"data row12 col3\" >0.155903</td>\n",
        "                        <td id=\"T_83be0c82_0bd7_11eb_86af_525400030ad8row12_col4\" class=\"data row12 col4\" >0.105435</td>\n",
        "                        <td id=\"T_83be0c82_0bd7_11eb_86af_525400030ad8row12_col5\" class=\"data row12 col5\" >0.455169</td>\n",
        "                        <td id=\"T_83be0c82_0bd7_11eb_86af_525400030ad8row12_col6\" class=\"data row12 col6\" >0.400036</td>\n",
        "                        <td id=\"T_83be0c82_0bd7_11eb_86af_525400030ad8row12_col7\" class=\"data row12 col7\" >0.671674</td>\n",
        "                        <td id=\"T_83be0c82_0bd7_11eb_86af_525400030ad8row12_col8\" class=\"data row12 col8\" >0.593324</td>\n",
        "                        <td id=\"T_83be0c82_0bd7_11eb_86af_525400030ad8row12_col9\" class=\"data row12 col9\" >0.606824</td>\n",
        "                        <td id=\"T_83be0c82_0bd7_11eb_86af_525400030ad8row12_col10\" class=\"data row12 col10\" >0.494508</td>\n",
        "                        <td id=\"T_83be0c82_0bd7_11eb_86af_525400030ad8row12_col11\" class=\"data row12 col11\" >0.408118</td>\n",
        "                        <td id=\"T_83be0c82_0bd7_11eb_86af_525400030ad8row12_col12\" class=\"data row12 col12\" >1.000000</td>\n",
        "                        <td id=\"T_83be0c82_0bd7_11eb_86af_525400030ad8row12_col13\" class=\"data row12 col13\" >0.391206</td>\n",
        "                        <td id=\"T_83be0c82_0bd7_11eb_86af_525400030ad8row12_col14\" class=\"data row12 col14\" >0.075314</td>\n",
        "                        <td id=\"T_83be0c82_0bd7_11eb_86af_525400030ad8row12_col15\" class=\"data row12 col15\" >0.114774</td>\n",
        "                        <td id=\"T_83be0c82_0bd7_11eb_86af_525400030ad8row12_col16\" class=\"data row12 col16\" >0.705999</td>\n",
        "            </tr>\n",
        "            <tr>\n",
        "                        <th id=\"T_83be0c82_0bd7_11eb_86af_525400030ad8level0_row13\" class=\"row_heading level0 row13\" >Information_campaigns</th>\n",
        "                        <td id=\"T_83be0c82_0bd7_11eb_86af_525400030ad8row13_col0\" class=\"data row13 col0\" >-0.079523</td>\n",
        "                        <td id=\"T_83be0c82_0bd7_11eb_86af_525400030ad8row13_col1\" class=\"data row13 col1\" >-0.354628</td>\n",
        "                        <td id=\"T_83be0c82_0bd7_11eb_86af_525400030ad8row13_col2\" class=\"data row13 col2\" >-0.364355</td>\n",
        "                        <td id=\"T_83be0c82_0bd7_11eb_86af_525400030ad8row13_col3\" class=\"data row13 col3\" >-0.421760</td>\n",
        "                        <td id=\"T_83be0c82_0bd7_11eb_86af_525400030ad8row13_col4\" class=\"data row13 col4\" >0.017005</td>\n",
        "                        <td id=\"T_83be0c82_0bd7_11eb_86af_525400030ad8row13_col5\" class=\"data row13 col5\" >0.668767</td>\n",
        "                        <td id=\"T_83be0c82_0bd7_11eb_86af_525400030ad8row13_col6\" class=\"data row13 col6\" >0.814014</td>\n",
        "                        <td id=\"T_83be0c82_0bd7_11eb_86af_525400030ad8row13_col7\" class=\"data row13 col7\" >0.630884</td>\n",
        "                        <td id=\"T_83be0c82_0bd7_11eb_86af_525400030ad8row13_col8\" class=\"data row13 col8\" >0.528503</td>\n",
        "                        <td id=\"T_83be0c82_0bd7_11eb_86af_525400030ad8row13_col9\" class=\"data row13 col9\" >0.327484</td>\n",
        "                        <td id=\"T_83be0c82_0bd7_11eb_86af_525400030ad8row13_col10\" class=\"data row13 col10\" >0.370451</td>\n",
        "                        <td id=\"T_83be0c82_0bd7_11eb_86af_525400030ad8row13_col11\" class=\"data row13 col11\" >0.166418</td>\n",
        "                        <td id=\"T_83be0c82_0bd7_11eb_86af_525400030ad8row13_col12\" class=\"data row13 col12\" >0.391206</td>\n",
        "                        <td id=\"T_83be0c82_0bd7_11eb_86af_525400030ad8row13_col13\" class=\"data row13 col13\" >1.000000</td>\n",
        "                        <td id=\"T_83be0c82_0bd7_11eb_86af_525400030ad8row13_col14\" class=\"data row13 col14\" >0.550761</td>\n",
        "                        <td id=\"T_83be0c82_0bd7_11eb_86af_525400030ad8row13_col15\" class=\"data row13 col15\" >0.560827</td>\n",
        "                        <td id=\"T_83be0c82_0bd7_11eb_86af_525400030ad8row13_col16\" class=\"data row13 col16\" >0.723356</td>\n",
        "            </tr>\n",
        "            <tr>\n",
        "                        <th id=\"T_83be0c82_0bd7_11eb_86af_525400030ad8level0_row14\" class=\"row_heading level0 row14\" >Testing_policy</th>\n",
        "                        <td id=\"T_83be0c82_0bd7_11eb_86af_525400030ad8row14_col0\" class=\"data row14 col0\" >-0.207220</td>\n",
        "                        <td id=\"T_83be0c82_0bd7_11eb_86af_525400030ad8row14_col1\" class=\"data row14 col1\" >-0.232867</td>\n",
        "                        <td id=\"T_83be0c82_0bd7_11eb_86af_525400030ad8row14_col2\" class=\"data row14 col2\" >-0.226592</td>\n",
        "                        <td id=\"T_83be0c82_0bd7_11eb_86af_525400030ad8row14_col3\" class=\"data row14 col3\" >-0.435418</td>\n",
        "                        <td id=\"T_83be0c82_0bd7_11eb_86af_525400030ad8row14_col4\" class=\"data row14 col4\" >-0.021824</td>\n",
        "                        <td id=\"T_83be0c82_0bd7_11eb_86af_525400030ad8row14_col5\" class=\"data row14 col5\" >0.480439</td>\n",
        "                        <td id=\"T_83be0c82_0bd7_11eb_86af_525400030ad8row14_col6\" class=\"data row14 col6\" >0.516242</td>\n",
        "                        <td id=\"T_83be0c82_0bd7_11eb_86af_525400030ad8row14_col7\" class=\"data row14 col7\" >0.334621</td>\n",
        "                        <td id=\"T_83be0c82_0bd7_11eb_86af_525400030ad8row14_col8\" class=\"data row14 col8\" >0.259631</td>\n",
        "                        <td id=\"T_83be0c82_0bd7_11eb_86af_525400030ad8row14_col9\" class=\"data row14 col9\" >0.048483</td>\n",
        "                        <td id=\"T_83be0c82_0bd7_11eb_86af_525400030ad8row14_col10\" class=\"data row14 col10\" >0.330238</td>\n",
        "                        <td id=\"T_83be0c82_0bd7_11eb_86af_525400030ad8row14_col11\" class=\"data row14 col11\" >0.330898</td>\n",
        "                        <td id=\"T_83be0c82_0bd7_11eb_86af_525400030ad8row14_col12\" class=\"data row14 col12\" >0.075314</td>\n",
        "                        <td id=\"T_83be0c82_0bd7_11eb_86af_525400030ad8row14_col13\" class=\"data row14 col13\" >0.550761</td>\n",
        "                        <td id=\"T_83be0c82_0bd7_11eb_86af_525400030ad8row14_col14\" class=\"data row14 col14\" >1.000000</td>\n",
        "                        <td id=\"T_83be0c82_0bd7_11eb_86af_525400030ad8row14_col15\" class=\"data row14 col15\" >0.533675</td>\n",
        "                        <td id=\"T_83be0c82_0bd7_11eb_86af_525400030ad8row14_col16\" class=\"data row14 col16\" >0.347446</td>\n",
        "            </tr>\n",
        "            <tr>\n",
        "                        <th id=\"T_83be0c82_0bd7_11eb_86af_525400030ad8level0_row15\" class=\"row_heading level0 row15\" >Contact_tracing</th>\n",
        "                        <td id=\"T_83be0c82_0bd7_11eb_86af_525400030ad8row15_col0\" class=\"data row15 col0\" >-0.131693</td>\n",
        "                        <td id=\"T_83be0c82_0bd7_11eb_86af_525400030ad8row15_col1\" class=\"data row15 col1\" >-0.011215</td>\n",
        "                        <td id=\"T_83be0c82_0bd7_11eb_86af_525400030ad8row15_col2\" class=\"data row15 col2\" >-0.037893</td>\n",
        "                        <td id=\"T_83be0c82_0bd7_11eb_86af_525400030ad8row15_col3\" class=\"data row15 col3\" >-0.253748</td>\n",
        "                        <td id=\"T_83be0c82_0bd7_11eb_86af_525400030ad8row15_col4\" class=\"data row15 col4\" >0.122750</td>\n",
        "                        <td id=\"T_83be0c82_0bd7_11eb_86af_525400030ad8row15_col5\" class=\"data row15 col5\" >0.267214</td>\n",
        "                        <td id=\"T_83be0c82_0bd7_11eb_86af_525400030ad8row15_col6\" class=\"data row15 col6\" >0.405949</td>\n",
        "                        <td id=\"T_83be0c82_0bd7_11eb_86af_525400030ad8row15_col7\" class=\"data row15 col7\" >0.261258</td>\n",
        "                        <td id=\"T_83be0c82_0bd7_11eb_86af_525400030ad8row15_col8\" class=\"data row15 col8\" >0.084011</td>\n",
        "                        <td id=\"T_83be0c82_0bd7_11eb_86af_525400030ad8row15_col9\" class=\"data row15 col9\" >-0.159497</td>\n",
        "                        <td id=\"T_83be0c82_0bd7_11eb_86af_525400030ad8row15_col10\" class=\"data row15 col10\" >0.314412</td>\n",
        "                        <td id=\"T_83be0c82_0bd7_11eb_86af_525400030ad8row15_col11\" class=\"data row15 col11\" >0.033013</td>\n",
        "                        <td id=\"T_83be0c82_0bd7_11eb_86af_525400030ad8row15_col12\" class=\"data row15 col12\" >0.114774</td>\n",
        "                        <td id=\"T_83be0c82_0bd7_11eb_86af_525400030ad8row15_col13\" class=\"data row15 col13\" >0.560827</td>\n",
        "                        <td id=\"T_83be0c82_0bd7_11eb_86af_525400030ad8row15_col14\" class=\"data row15 col14\" >0.533675</td>\n",
        "                        <td id=\"T_83be0c82_0bd7_11eb_86af_525400030ad8row15_col15\" class=\"data row15 col15\" >1.000000</td>\n",
        "                        <td id=\"T_83be0c82_0bd7_11eb_86af_525400030ad8row15_col16\" class=\"data row15 col16\" >0.313587</td>\n",
        "            </tr>\n",
        "            <tr>\n",
        "                        <th id=\"T_83be0c82_0bd7_11eb_86af_525400030ad8level0_row16\" class=\"row_heading level0 row16\" >Stringency_index</th>\n",
        "                        <td id=\"T_83be0c82_0bd7_11eb_86af_525400030ad8row16_col0\" class=\"data row16 col0\" >-0.251051</td>\n",
        "                        <td id=\"T_83be0c82_0bd7_11eb_86af_525400030ad8row16_col1\" class=\"data row16 col1\" >-0.024000</td>\n",
        "                        <td id=\"T_83be0c82_0bd7_11eb_86af_525400030ad8row16_col2\" class=\"data row16 col2\" >-0.023344</td>\n",
        "                        <td id=\"T_83be0c82_0bd7_11eb_86af_525400030ad8row16_col3\" class=\"data row16 col3\" >-0.020695</td>\n",
        "                        <td id=\"T_83be0c82_0bd7_11eb_86af_525400030ad8row16_col4\" class=\"data row16 col4\" >0.234815</td>\n",
        "                        <td id=\"T_83be0c82_0bd7_11eb_86af_525400030ad8row16_col5\" class=\"data row16 col5\" >0.812643</td>\n",
        "                        <td id=\"T_83be0c82_0bd7_11eb_86af_525400030ad8row16_col6\" class=\"data row16 col6\" >0.798591</td>\n",
        "                        <td id=\"T_83be0c82_0bd7_11eb_86af_525400030ad8row16_col7\" class=\"data row16 col7\" >0.811368</td>\n",
        "                        <td id=\"T_83be0c82_0bd7_11eb_86af_525400030ad8row16_col8\" class=\"data row16 col8\" >0.873137</td>\n",
        "                        <td id=\"T_83be0c82_0bd7_11eb_86af_525400030ad8row16_col9\" class=\"data row16 col9\" >0.754446</td>\n",
        "                        <td id=\"T_83be0c82_0bd7_11eb_86af_525400030ad8row16_col10\" class=\"data row16 col10\" >0.772216</td>\n",
        "                        <td id=\"T_83be0c82_0bd7_11eb_86af_525400030ad8row16_col11\" class=\"data row16 col11\" >0.667040</td>\n",
        "                        <td id=\"T_83be0c82_0bd7_11eb_86af_525400030ad8row16_col12\" class=\"data row16 col12\" >0.705999</td>\n",
        "                        <td id=\"T_83be0c82_0bd7_11eb_86af_525400030ad8row16_col13\" class=\"data row16 col13\" >0.723356</td>\n",
        "                        <td id=\"T_83be0c82_0bd7_11eb_86af_525400030ad8row16_col14\" class=\"data row16 col14\" >0.347446</td>\n",
        "                        <td id=\"T_83be0c82_0bd7_11eb_86af_525400030ad8row16_col15\" class=\"data row16 col15\" >0.313587</td>\n",
        "                        <td id=\"T_83be0c82_0bd7_11eb_86af_525400030ad8row16_col16\" class=\"data row16 col16\" >1.000000</td>\n",
        "            </tr>\n",
        "    </tbody></table>"
       ],
       "output_type": "pyout",
       "prompt_number": 21,
       "text": [
        "<pandas.io.formats.style.Styler at 0x7ff319173400>"
       ]
      }
     ],
     "prompt_number": 21
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "# Scatter plot of Stringency index and Rt\n",
      "df = track_df.copy()\n",
      "sns.scatterplot(data=df, x=\"Stringency_index\", y=\"Rt\", hue=\"Country\", legend=\"brief\", marker=\"+\")\n",
      "bbox_to_anchor=(1.02, 0)\n",
      "bbox_loc=\"lower left\"\n",
      "plt.legend(bbox_to_anchor=bbox_to_anchor, loc=bbox_loc, borderaxespad=0)\n",
      "plt.title(\"Relationship of Stringency index and reproduction number\")\n",
      "plt.ylabel(\"Reproduction number\")\n",
      "plt.xlabel(\"Stringency index\")\n",
      "plt.show()"
     ],
     "language": "python",
     "metadata": {},
     "outputs": [
      {
       "output_type": "display_data",
       "png": "\n",
       "text": [
        "<Figure size 432x288 with 1 Axes>"
       ]
      }
     ],
     "prompt_number": 22
    }
   ],
   "metadata": {}
  }
 ]
}
