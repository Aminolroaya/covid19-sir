{
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3.8.2 64-bit ('.venv': venv)",
   "name": "python_defaultSpec_1597669925034"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.8.2-final"
  },
  "name": ""
 },
 "nbformat": 3,
 "nbformat_minor": 0,
 "worksheets": [
  {
   "cells": [
    {
     "cell_type": "markdown",
     "metadata": {},
     "source": [
      "# Usage (details: policy measures)\n",
      "Here, we will analyse the relationship of policy measures and parameter values of SIR-derived ODE models. Policy measures are tracked by [Oxford Covid-19 Government Response Tracker (OxCGRT)](https://github.com/OxCGRT/covid-policy-tracker)."
     ]
    },
    {
     "cell_type": "heading",
     "level": 2,
     "metadata": {},
     "source": [
      "Preparation"
     ]
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "# Standard users\n",
      "# !pip install covsirphy\n",
      "# Developers (Note: this notebook is in example directory)\n",
      "import os\n",
      "os.chdir(\"../\")"
     ],
     "language": "python",
     "metadata": {},
     "outputs": [],
     "prompt_number": 1
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "from pprint import pprint"
     ],
     "language": "python",
     "metadata": {},
     "outputs": [],
     "prompt_number": 2
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "import covsirphy as cs\n",
      "cs.__version__"
     ],
     "language": "python",
     "metadata": {},
     "outputs": [
      {
       "output_type": "pyout",
       "prompt_number": 3,
       "text": [
        "'2.8.3'"
       ]
      }
     ],
     "prompt_number": 3
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "# Standard users and developers\n",
      "data_loader = cs.DataLoader(\"input\")\n",
      "# The number of cases (JHU style)\n",
      "jhu_data = data_loader.jhu(verbose=False)\n",
      "# Population in each country\n",
      "population_data = data_loader.population(verbose=False)\n",
      "# Government Response Tracker (OxCGRT)\n",
      "oxcgrt_data = data_loader.oxcgrt(verbose=False)\n",
      "# Description/citation\n",
      "print(oxcgrt_data.citation)"
     ],
     "language": "python",
     "metadata": {
      "tags": []
     },
     "outputs": [
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "(Secondary source) Guidotti, E., Ardia, D., (2020), \"COVID-19 Data Hub\", Journal of Open Source Software 5(51):2376, doi: 10.21105/joss.02376.\n",
        "We can get Citation list of primary sources with DataLoader(...).covid19dh_citation"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      }
     ],
     "prompt_number": 4
    },
    {
     "cell_type": "markdown",
     "metadata": {},
     "source": [
      "## Class for policy measure analysis\n",
      "We will `PolicyMeasures` class to find relationship of policy measures and parameter values of SIR-derived ODE models."
     ]
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "# Create analyser with tau value 360 [min] (can be changed)\n",
      "analyser = cs.PolicyMeasures(jhu_data, population_data, oxcgrt_data, tau=360)\n",
      "# The number of registerd countries\n",
      "len(analyser.countries)"
     ],
     "language": "python",
     "metadata": {
      "tags": []
     },
     "outputs": [
      {
       "output_type": "pyout",
       "prompt_number": 5,
       "text": [
        "184"
       ]
      }
     ],
     "prompt_number": 5
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "# We can get Scenario instance for detailed scenario analysis\n",
      "type(analyser.scenario(\"Japan\"))"
     ],
     "language": "python",
     "metadata": {},
     "outputs": [
      {
       "output_type": "pyout",
       "prompt_number": 6,
       "text": [
        "covsirphy.analysis.scenario.Scenario"
       ]
      }
     ],
     "prompt_number": 6
    },
    {
     "cell_type": "markdown",
     "metadata": {},
     "source": [
      "## Set phases with S-R trend analysis\n",
      "We will perform S-R trend analysis to set phases in all countries. Countries which do not have **12th phases** will be un-registered for the next analysis. This number will be adjusted for your analysis."
     ]
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "# Show the number of phases of all countries\n",
      "analyser.trend()\n",
      "pprint(analyser.phase_len(), compact=True)"
     ],
     "language": "python",
     "metadata": {},
     "outputs": [
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "{"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "4"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ": "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "["
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Myanmar'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Georgia'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Trinidad and Tobago'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Tanzania'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        "     "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Papua New Guinea'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Belize'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Uganda'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "]"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        " "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "5"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ": "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "["
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Tunisia'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Brunei'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Grenada'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Jamaica'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Seychelles'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Fiji'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        "     "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Mauritius'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Jordan'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Dominica'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Libya'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "]"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        " "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "6"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ": "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "["
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Kosovo'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Monaco'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Hungary'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Namibia'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Lebanon'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Antigua and Barbuda'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        "     "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Guyana'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Cambodia'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Gambia'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Yemen'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Kazakhstan'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Equatorial Guinea'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        "     "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Lesotho'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Sao Tome and Principe'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Ireland'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Netherlands'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "]"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        " "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "7"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ": "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "["
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Botswana'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Andorra'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Mozambique'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Ethiopia'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Czech Republic'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        "     "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Guinea-Bissau'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Nepal'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Eritrea'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Paraguay'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        "     "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Central African Republic'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Kyrgyzstan'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Malawi'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Colombia'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Vietnam'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        "     "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Spain'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Burundi'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'San Marino'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Bahamas'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        "     "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Saint Vincent and the Grenadines'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Slovakia'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Afghanistan'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Zambia'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        "     "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Cyprus'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Australia'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'New Zealand'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Rwanda'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "]"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        " "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "8"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ": "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "["
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Niger'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Slovenia'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Cameroon'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Morocco'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Kenya'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Taiwan'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Venezuela'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        "     "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Barbados'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Argentina'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Djibouti'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Ghana'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Norway'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Iceland'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        "     "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Angola'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Madagascar'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Philippines'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Bhutan'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Austria'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Croatia'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        "     "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Guatemala'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Mongolia'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Costa Rica'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Zimbabwe'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Saint Lucia'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        "     "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Uruguay'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Israel'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Comoros'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Thailand'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Suriname'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Malta'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Syria'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        "     "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Liechtenstein'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Montenegro'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Palestine'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'South Sudan'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "]"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        " "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "9"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ": "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "["
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Indonesia'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Chad'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Oman'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Lithuania'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'South Africa'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Sudan'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        "     "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Sri Lanka'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Congo'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'India'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Mauritania'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Korea, South'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Japan'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        "     "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Qatar'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Somalia'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Serbia'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Bermuda'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Greece'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Maldives'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Benin'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        "     "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'China'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Sierra Leone'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Haiti'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Luxembourg'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Singapore'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Cuba'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        "     "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Pakistan'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Ukraine'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Tajikistan'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "]"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        " "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "10"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ": "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "["
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Liberia'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Malaysia'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Switzerland'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Denmark'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Poland'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Canada'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        "      "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Azerbaijan'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Honduras'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Estonia'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Algeria'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Saudi Arabia'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Romania'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        "      "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Nicaragua'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Cape Verde'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Germany'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Ecuador'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Albania'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Swaziland'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        "      "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Armenia'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Senegal'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Finland'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Chile'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Gabon'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Belarus'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Iraq'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        "      "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Uzbekistan'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Bosnia and Herzegovina'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Togo'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'El Salvador'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "]"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        " "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "11"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ": "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "["
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Kuwait'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Egypt'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Belgium'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Nigeria'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Bulgaria'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Bangladesh'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        "      "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Dominican Republic'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Burkina Faso'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Bolivia'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Guinea'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Latvia'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        "      "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Panama'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Moldova'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Peru'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Mexico'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Mali'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Macedonia'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "]"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        " "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "12"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ": "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "["
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'United States'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'United Arab Emirates'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Iran'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'France'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Turkey'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        "      "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Italy'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Brazil'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Portugal'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Bahrain'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "]"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        " "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "13"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ": "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "['Russia']"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "}"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      }
     ],
     "prompt_number": 7
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "# Set phases with S-R trend analysis\n",
      "analyser.trend(min_len=12)\n",
      "# The number of countries\n",
      "len(analyser.countries)"
     ],
     "language": "python",
     "metadata": {},
     "outputs": [
      {
       "output_type": "pyout",
       "prompt_number": 8,
       "text": [
        "10"
       ]
      }
     ],
     "prompt_number": 8
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "phase_len_dict = analyser.phase_len()\n",
      "pprint(phase_len_dict, compact=True)"
     ],
     "language": "python",
     "metadata": {
      "tags": []
     },
     "outputs": [
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "{"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "12"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ": "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "["
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'United States'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'United Arab Emirates'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Iran'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'France'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Turkey'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        "      "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Italy'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Brazil'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Portugal'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Bahrain'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "]"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        " "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "13"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ": "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "['Russia']"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "}"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      }
     ],
     "prompt_number": 9
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "# Here, only show the countries which have the most phases\n",
      "countries_show = max(phase_len_dict.items(), key=lambda x: x[0])[1]\n",
      "# Show summary\n",
      "analyser.summary(countries=countries_show)"
     ],
     "language": "python",
     "metadata": {
      "tags": []
     },
     "outputs": [
      {
       "html": [
        "<div>\n",
        "<style scoped>\n",
        "    .dataframe tbody tr th:only-of-type {\n",
        "        vertical-align: middle;\n",
        "    }\n",
        "\n",
        "    .dataframe tbody tr th {\n",
        "        vertical-align: top;\n",
        "    }\n",
        "\n",
        "    .dataframe thead th {\n",
        "        text-align: right;\n",
        "    }\n",
        "</style>\n",
        "<table border=\"1\" class=\"dataframe\">\n",
        "  <thead>\n",
        "    <tr style=\"text-align: right;\">\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th>Type</th>\n",
        "      <th>Start</th>\n",
        "      <th>End</th>\n",
        "      <th>Population</th>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>Country</th>\n",
        "      <th>Phase</th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "    </tr>\n",
        "  </thead>\n",
        "  <tbody>\n",
        "    <tr>\n",
        "      <th rowspan=\"13\" valign=\"top\">Russia</th>\n",
        "      <th>0th</th>\n",
        "      <td>Past</td>\n",
        "      <td>12Feb2020</td>\n",
        "      <td>06May2020</td>\n",
        "      <td>330457362</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>1st</th>\n",
        "      <td>Past</td>\n",
        "      <td>07May2020</td>\n",
        "      <td>16May2020</td>\n",
        "      <td>330457362</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>2nd</th>\n",
        "      <td>Past</td>\n",
        "      <td>17May2020</td>\n",
        "      <td>26May2020</td>\n",
        "      <td>330457362</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>3rd</th>\n",
        "      <td>Past</td>\n",
        "      <td>27May2020</td>\n",
        "      <td>04Jun2020</td>\n",
        "      <td>330457362</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>4th</th>\n",
        "      <td>Past</td>\n",
        "      <td>05Jun2020</td>\n",
        "      <td>13Jun2020</td>\n",
        "      <td>330457362</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>5th</th>\n",
        "      <td>Past</td>\n",
        "      <td>14Jun2020</td>\n",
        "      <td>23Jun2020</td>\n",
        "      <td>330457362</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>6th</th>\n",
        "      <td>Past</td>\n",
        "      <td>24Jun2020</td>\n",
        "      <td>04Jul2020</td>\n",
        "      <td>330457362</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>7th</th>\n",
        "      <td>Past</td>\n",
        "      <td>05Jul2020</td>\n",
        "      <td>17Jul2020</td>\n",
        "      <td>330457362</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>8th</th>\n",
        "      <td>Past</td>\n",
        "      <td>18Jul2020</td>\n",
        "      <td>31Jul2020</td>\n",
        "      <td>330457362</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>9th</th>\n",
        "      <td>Past</td>\n",
        "      <td>01Aug2020</td>\n",
        "      <td>15Aug2020</td>\n",
        "      <td>330457362</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>10th</th>\n",
        "      <td>Past</td>\n",
        "      <td>16Aug2020</td>\n",
        "      <td>02Sep2020</td>\n",
        "      <td>330457362</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>11th</th>\n",
        "      <td>Past</td>\n",
        "      <td>03Sep2020</td>\n",
        "      <td>17Sep2020</td>\n",
        "      <td>330457362</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>12th</th>\n",
        "      <td>Past</td>\n",
        "      <td>18Sep2020</td>\n",
        "      <td>03Oct2020</td>\n",
        "      <td>330457362</td>\n",
        "    </tr>\n",
        "  </tbody>\n",
        "</table>\n",
        "</div>"
       ],
       "output_type": "pyout",
       "prompt_number": 10,
       "text": [
        "               Type      Start        End  Population\n",
        "Country Phase                                        \n",
        "Russia  0th    Past  12Feb2020  06May2020   330457362\n",
        "        1st    Past  07May2020  16May2020   330457362\n",
        "        2nd    Past  17May2020  26May2020   330457362\n",
        "        3rd    Past  27May2020  04Jun2020   330457362\n",
        "        4th    Past  05Jun2020  13Jun2020   330457362\n",
        "        5th    Past  14Jun2020  23Jun2020   330457362\n",
        "        6th    Past  24Jun2020  04Jul2020   330457362\n",
        "        7th    Past  05Jul2020  17Jul2020   330457362\n",
        "        8th    Past  18Jul2020  31Jul2020   330457362\n",
        "        9th    Past  01Aug2020  15Aug2020   330457362\n",
        "        10th   Past  16Aug2020  02Sep2020   330457362\n",
        "        11th   Past  03Sep2020  17Sep2020   330457362\n",
        "        12th   Past  18Sep2020  03Oct2020   330457362"
       ]
      }
     ],
     "prompt_number": 10
    },
    {
     "cell_type": "markdown",
     "metadata": {},
     "source": [
      "## Parameter estimation\n",
      "we will estimate the parameter values with SIR-derived ODE models in each country."
     ]
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "# Parameter estimation with SIR-F model\n",
      "analyser.estimate(cs.SIRF)"
     ],
     "language": "python",
     "metadata": {
      "tags": []
     },
     "outputs": [
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n",
        "<SIR-F model: parameter estimation>"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "Running optimization with 4 CPUs..."
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tBRA,  6th phase (29Jul2020 - 05Aug2020): finished 1202 trials in 0 min 30 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tUSA,  5th phase (08Jul2020 - 18Jul2020): finished  475 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tUSA,  3rd phase (06Jun2020 - 25Jun2020): finished 1977 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tTUR,  0th phase (24Mar2020 - 16Apr2020): finished 1970 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tIRN,  0th phase (26Feb2020 - 29Mar2020): finished 1976 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tARE,  6th phase (05Jul2020 - 22Jul2020): finished  219 trials in 0 min  5 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tITA,  6th phase (11May2020 - 26May2020): finished  437 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tPRT,  9th phase (02Sep2020 - 13Sep2020): finished 1958 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tBRA,  4th phase (08Jul2020 - 20Jul2020): finished  465 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tRUS,  7th phase (05Jul2020 - 17Jul2020): finished 1961 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tRUS,  9th phase (01Aug2020 - 15Aug2020): finished 1964 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tIRN,  1st phase (30Mar2020 - 17Apr2020): finished 1965 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tIRN,  4th phase (01Jun2020 - 16Jun2020): finished 1854 trials in 0 min 55 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tBHR, 10th phase (15Sep2020 - 22Sep2020): finished  464 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tTUR,  1st phase (17Apr2020 - 29Apr2020): finished 1961 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tFRA,  2nd phase (03Apr2020 - 12Apr2020): finished 1956 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tBHR,  8th phase (19Aug2020 - 04Sep2020): finished 1943 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tTUR,  6th phase (28Jun2020 - 13Jul2020): finished  250 trials in 0 min  5 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tARE,  2nd phase (15May2020 - 24May2020): finished 1956 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tIRN,  6th phase (01Jul2020 - 15Jul2020): finished  245 trials in 0 min  5 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tBHR,  2nd phase (01Jun2020 - 13Jun2020): finished 1968 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tPRT,  0th phase (14Mar2020 - 28Apr2020): finished 1933 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tIRN, 10th phase (05Sep2020 - 20Sep2020): finished 1959 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tBHR,  9th phase (05Sep2020 - 14Sep2020): finished  258 trials in 0 min  5 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tTUR,  9th phase (21Aug2020 - 04Sep2020): finished  255 trials in 0 min  5 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tTUR,  3rd phase (09May2020 - 23May2020): finished 1947 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tPRT,  7th phase (23Jul2020 - 13Aug2020): finished 1944 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tPRT,  6th phase (09Jul2020 - 22Jul2020): finished 1950 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tARE,  1st phase (28Apr2020 - 14May2020): finished 1940 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tTUR,  2nd phase (30Apr2020 - 08May2020): finished 1170 trials in 0 min 30 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tFRA,  9th phase (27Aug2020 - 10Sep2020): finished 1316 trials in 0 min 35 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tRUS,  0th phase (12Feb2020 - 06May2020): finished 1978 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tITA,  1st phase (21Mar2020 - 28Mar2020): finished 1971 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tBHR,  3rd phase (14Jun2020 - 25Jun2020): finished 1940 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tIRN,  7th phase (16Jul2020 - 30Jul2020): finished 1949 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tBRA,  9th phase (25Aug2020 - 02Sep2020): finished  464 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tFRA,  1st phase (24Mar2020 - 02Apr2020): finished 1936 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tRUS,  8th phase (18Jul2020 - 31Jul2020): finished 1940 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tUSA,  9th phase (20Aug2020 - 02Sep2020): finished  253 trials in 0 min  5 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tIRN,  5th phase (17Jun2020 - 30Jun2020): finished 1948 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tBHR,  0th phase (06Mar2020 - 11May2020): finished 1880 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tRUS,  4th phase (05Jun2020 - 13Jun2020): finished 1971 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tITA,  4th phase (19Apr2020 - 30Apr2020): finished 1950 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tBRA,  2nd phase (14Jun2020 - 26Jun2020): finished 1169 trials in 0 min 30 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tUSA, 11th phase (18Sep2020 - 03Oct2020): finished 1464 trials in 0 min 40 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tFRA,  7th phase (09Jul2020 - 10Aug2020): finished 1950 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tUSA,  4th phase (26Jun2020 - 07Jul2020): finished 1966 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tITA,  3rd phase (09Apr2020 - 18Apr2020): finished  230 trials in 0 min  5 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tPRT,  2nd phase (15May2020 - 29May2020): finished 1947 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tARE,  4th phase (07Jun2020 - 20Jun2020): finished 1938 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tBRA,  1st phase (27May2020 - 13Jun2020): finished 1941 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tRUS,  6th phase (24Jun2020 - 04Jul2020): finished 1946 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tITA, 10th phase (12Sep2020 - 23Sep2020): finished  254 trials in 0 min  5 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tTUR, 10th phase (05Sep2020 - 18Sep2020): finished  253 trials in 0 min  5 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tRUS,  1st phase (07May2020 - 16May2020): finished 1969 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tPRT,  1st phase (29Apr2020 - 14May2020): finished 1961 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tFRA,  4th phase (22Apr2020 - 04May2020): finished 1940 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tFRA,  8th phase (11Aug2020 - 26Aug2020): finished  465 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tPRT,  4th phase (13Jun2020 - 24Jun2020): finished 1934 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tIRN,  2nd phase (18Apr2020 - 13May2020): finished  246 trials in 0 min  5 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tFRA,  5th phase (05May2020 - 28May2020): finished 1907 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tTUR,  8th phase (03Aug2020 - 20Aug2020): finished 1910 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tUSA,  2nd phase (11May2020 - 05Jun2020): finished 1929 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tARE, 10th phase (17Sep2020 - 24Sep2020): finished 1944 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tTUR, 11th phase (19Sep2020 - 03Oct2020): finished  247 trials in 0 min  5 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tBHR, 11th phase (23Sep2020 - 03Oct2020): finished  248 trials in 0 min  5 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tBRA,  5th phase (21Jul2020 - 28Jul2020): finished 1954 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tBRA,  0th phase (16Mar2020 - 26May2020): finished 1900 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tBRA,  7th phase (06Aug2020 - 13Aug2020): finished  476 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tTUR,  5th phase (14Jun2020 - 27Jun2020): finished 1311 trials in 0 min 35 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tARE,  5th phase (21Jun2020 - 04Jul2020): finished  253 trials in 0 min  5 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tBRA, 11th phase (17Sep2020 - 03Oct2020): finished 1955 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tRUS,  3rd phase (27May2020 - 04Jun2020): finished 1944 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tBRA,  8th phase (14Aug2020 - 24Aug2020): finished 1946 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tITA,  2nd phase (29Mar2020 - 08Apr2020): finished 1930 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tARE,  8th phase (20Aug2020 - 07Sep2020): finished 1947 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tITA,  9th phase (25Aug2020 - 11Sep2020): finished 1957 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tBHR,  6th phase (19Jul2020 - 03Aug2020): finished  246 trials in 0 min  5 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tBRA, 10th phase (03Sep2020 - 16Sep2020): finished 1958 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tPRT, 10th phase (14Sep2020 - 23Sep2020): finished 1942 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tITA,  5th phase (01May2020 - 10May2020): finished  442 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tIRN, 11th phase (21Sep2020 - 03Oct2020): finished 1945 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tUSA, 10th phase (03Sep2020 - 17Sep2020): finished  659 trials in 0 min 15 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tBHR,  1st phase (12May2020 - 31May2020): finished 1956 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tUSA,  0th phase (09Feb2020 - 19Apr2020): finished 1916 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tTUR,  4th phase (24May2020 - 13Jun2020): finished  233 trials in 0 min  5 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tARE,  9th phase (08Sep2020 - 16Sep2020): finished 1974 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tUSA,  6th phase (19Jul2020 - 28Jul2020): finished  255 trials in 0 min  5 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tITA, 11th phase (24Sep2020 - 03Oct2020): finished  258 trials in 0 min  5 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tBHR,  5th phase (07Jul2020 - 18Jul2020): finished 1952 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tITA,  8th phase (15Jul2020 - 24Aug2020): finished 1908 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tARE, 11th phase (25Sep2020 - 03Oct2020): finished 1927 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tRUS,  2nd phase (17May2020 - 26May2020): finished 1941 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tITA,  7th phase (27May2020 - 14Jul2020): finished  638 trials in 0 min 15 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tBRA,  3rd phase (27Jun2020 - 07Jul2020): finished 1930 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tRUS, 10th phase (16Aug2020 - 02Sep2020): finished 1946 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tFRA,  3rd phase (13Apr2020 - 21Apr2020): finished 1959 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tARE,  7th phase (23Jul2020 - 19Aug2020): finished 1922 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tIRN,  3rd phase (14May2020 - 31May2020): finished  251 trials in 0 min  5 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tIRN,  9th phase (17Aug2020 - 04Sep2020): finished 1939 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tFRA,  6th phase (29May2020 - 08Jul2020): finished 1696 trials in 0 min 50 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tUSA,  7th phase (29Jul2020 - 07Aug2020): finished  438 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tPRT,  3rd phase (30May2020 - 12Jun2020): finished 1956 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tBHR,  4th phase (26Jun2020 - 06Jul2020): finished 1938 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tRUS,  5th phase (14Jun2020 - 23Jun2020): finished 1943 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tITA,  0th phase (24Feb2020 - 20Mar2020): finished 1948 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tUSA,  1st phase (20Apr2020 - 10May2020): finished 1957 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tTUR,  7th phase (14Jul2020 - 02Aug2020): finished  242 trials in 0 min  5 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tPRT,  8th phase (14Aug2020 - 01Sep2020): finished 1948 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tPRT,  5th phase (25Jun2020 - 08Jul2020): finished 1995 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tUSA,  8th phase (08Aug2020 - 19Aug2020): finished  492 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tIRN,  8th phase (31Jul2020 - 16Aug2020): finished  674 trials in 0 min 15 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tARE,  3rd phase (25May2020 - 06Jun2020): finished 2057 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tFRA, 10th phase (11Sep2020 - 24Sep2020): finished  700 trials in 0 min 15 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tFRA,  0th phase (12Feb2020 - 23Mar2020): finished 2027 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tBHR,  7th phase (04Aug2020 - 18Aug2020): finished 2075 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tARE,  0th phase (12Feb2020 - 27Apr2020): finished 2026 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "Completed optimization. Total: 23 min 13 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      }
     ],
     "prompt_number": 11
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "# Show summary\n",
      "analyser.summary(countries=countries_show)"
     ],
     "language": "python",
     "metadata": {},
     "outputs": [
      {
       "html": [
        "<div>\n",
        "<style scoped>\n",
        "    .dataframe tbody tr th:only-of-type {\n",
        "        vertical-align: middle;\n",
        "    }\n",
        "\n",
        "    .dataframe tbody tr th {\n",
        "        vertical-align: top;\n",
        "    }\n",
        "\n",
        "    .dataframe thead th {\n",
        "        text-align: right;\n",
        "    }\n",
        "</style>\n",
        "<table border=\"1\" class=\"dataframe\">\n",
        "  <thead>\n",
        "    <tr style=\"text-align: right;\">\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th>Type</th>\n",
        "      <th>Start</th>\n",
        "      <th>End</th>\n",
        "      <th>Population</th>\n",
        "      <th>ODE</th>\n",
        "      <th>Rt</th>\n",
        "      <th>theta</th>\n",
        "      <th>kappa</th>\n",
        "      <th>rho</th>\n",
        "      <th>sigma</th>\n",
        "      <th>tau</th>\n",
        "      <th>1/gamma [day]</th>\n",
        "      <th>1/alpha2 [day]</th>\n",
        "      <th>1/beta [day]</th>\n",
        "      <th>alpha1 [-]</th>\n",
        "      <th>RMSLE</th>\n",
        "      <th>Trials</th>\n",
        "      <th>Runtime</th>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>Country</th>\n",
        "      <th>Phase</th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "    </tr>\n",
        "  </thead>\n",
        "  <tbody>\n",
        "    <tr>\n",
        "      <th rowspan=\"13\" valign=\"top\">Russia</th>\n",
        "      <th>0th</th>\n",
        "      <td>Past</td>\n",
        "      <td>12Feb2020</td>\n",
        "      <td>06May2020</td>\n",
        "      <td>330457362</td>\n",
        "      <td>SIR-F</td>\n",
        "      <td>0.02</td>\n",
        "      <td>0.602763</td>\n",
        "      <td>0.544883</td>\n",
        "      <td>0.0340813</td>\n",
        "      <td>0.00229851</td>\n",
        "      <td>360</td>\n",
        "      <td>108</td>\n",
        "      <td>0</td>\n",
        "      <td>7</td>\n",
        "      <td>0.603</td>\n",
        "      <td>18.9667</td>\n",
        "      <td>1978</td>\n",
        "      <td>1 min  0 sec</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>1st</th>\n",
        "      <td>Past</td>\n",
        "      <td>07May2020</td>\n",
        "      <td>16May2020</td>\n",
        "      <td>330457362</td>\n",
        "      <td>SIR-F</td>\n",
        "      <td>2.51</td>\n",
        "      <td>0.000729031</td>\n",
        "      <td>0.000119717</td>\n",
        "      <td>0.0129583</td>\n",
        "      <td>0.00504465</td>\n",
        "      <td>360</td>\n",
        "      <td>49</td>\n",
        "      <td>2088</td>\n",
        "      <td>19</td>\n",
        "      <td>0.001</td>\n",
        "      <td>0.0742295</td>\n",
        "      <td>1969</td>\n",
        "      <td>1 min  0 sec</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>2nd</th>\n",
        "      <td>Past</td>\n",
        "      <td>17May2020</td>\n",
        "      <td>26May2020</td>\n",
        "      <td>330457362</td>\n",
        "      <td>SIR-F</td>\n",
        "      <td>1.56</td>\n",
        "      <td>0.000494399</td>\n",
        "      <td>0.000105681</td>\n",
        "      <td>0.00698823</td>\n",
        "      <td>0.00436447</td>\n",
        "      <td>360</td>\n",
        "      <td>57</td>\n",
        "      <td>2365</td>\n",
        "      <td>35</td>\n",
        "      <td>0</td>\n",
        "      <td>0.0866889</td>\n",
        "      <td>1941</td>\n",
        "      <td>1 min  0 sec</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>3rd</th>\n",
        "      <td>Past</td>\n",
        "      <td>27May2020</td>\n",
        "      <td>04Jun2020</td>\n",
        "      <td>330457362</td>\n",
        "      <td>SIR-F</td>\n",
        "      <td>1.03</td>\n",
        "      <td>0.000708362</td>\n",
        "      <td>0.000116581</td>\n",
        "      <td>0.00547912</td>\n",
        "      <td>0.00519557</td>\n",
        "      <td>360</td>\n",
        "      <td>48</td>\n",
        "      <td>2144</td>\n",
        "      <td>45</td>\n",
        "      <td>0.001</td>\n",
        "      <td>0.0672237</td>\n",
        "      <td>1944</td>\n",
        "      <td>1 min  0 sec</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>4th</th>\n",
        "      <td>Past</td>\n",
        "      <td>05Jun2020</td>\n",
        "      <td>13Jun2020</td>\n",
        "      <td>330457362</td>\n",
        "      <td>SIR-F</td>\n",
        "      <td>1.25</td>\n",
        "      <td>0.000825421</td>\n",
        "      <td>8.45185e-05</td>\n",
        "      <td>0.00464652</td>\n",
        "      <td>0.00362314</td>\n",
        "      <td>360</td>\n",
        "      <td>69</td>\n",
        "      <td>2957</td>\n",
        "      <td>53</td>\n",
        "      <td>0.001</td>\n",
        "      <td>0.0483449</td>\n",
        "      <td>1971</td>\n",
        "      <td>1 min  0 sec</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>5th</th>\n",
        "      <td>Past</td>\n",
        "      <td>14Jun2020</td>\n",
        "      <td>23Jun2020</td>\n",
        "      <td>330457362</td>\n",
        "      <td>SIR-F</td>\n",
        "      <td>0.82</td>\n",
        "      <td>0.000348462</td>\n",
        "      <td>7.90578e-05</td>\n",
        "      <td>0.00346657</td>\n",
        "      <td>0.0041384</td>\n",
        "      <td>360</td>\n",
        "      <td>60</td>\n",
        "      <td>3162</td>\n",
        "      <td>72</td>\n",
        "      <td>0</td>\n",
        "      <td>0.0638472</td>\n",
        "      <td>1943</td>\n",
        "      <td>1 min  0 sec</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>6th</th>\n",
        "      <td>Past</td>\n",
        "      <td>24Jun2020</td>\n",
        "      <td>04Jul2020</td>\n",
        "      <td>330457362</td>\n",
        "      <td>SIR-F</td>\n",
        "      <td>0.94</td>\n",
        "      <td>0.0188683</td>\n",
        "      <td>1.10558e-05</td>\n",
        "      <td>0.00256772</td>\n",
        "      <td>0.00267148</td>\n",
        "      <td>360</td>\n",
        "      <td>93</td>\n",
        "      <td>22612</td>\n",
        "      <td>97</td>\n",
        "      <td>0.019</td>\n",
        "      <td>0.0500926</td>\n",
        "      <td>1946</td>\n",
        "      <td>1 min  0 sec</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>7th</th>\n",
        "      <td>Past</td>\n",
        "      <td>05Jul2020</td>\n",
        "      <td>17Jul2020</td>\n",
        "      <td>330457362</td>\n",
        "      <td>SIR-F</td>\n",
        "      <td>0.72</td>\n",
        "      <td>8.48193e-05</td>\n",
        "      <td>6.00107e-05</td>\n",
        "      <td>0.00219128</td>\n",
        "      <td>0.0029791</td>\n",
        "      <td>360</td>\n",
        "      <td>83</td>\n",
        "      <td>4165</td>\n",
        "      <td>114</td>\n",
        "      <td>0</td>\n",
        "      <td>0.0702426</td>\n",
        "      <td>1961</td>\n",
        "      <td>1 min  0 sec</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>8th</th>\n",
        "      <td>Past</td>\n",
        "      <td>18Jul2020</td>\n",
        "      <td>31Jul2020</td>\n",
        "      <td>330457362</td>\n",
        "      <td>SIR-F</td>\n",
        "      <td>0.76</td>\n",
        "      <td>0.0167783</td>\n",
        "      <td>9.85096e-06</td>\n",
        "      <td>0.00184458</td>\n",
        "      <td>0.00237292</td>\n",
        "      <td>360</td>\n",
        "      <td>105</td>\n",
        "      <td>25378</td>\n",
        "      <td>135</td>\n",
        "      <td>0.017</td>\n",
        "      <td>0.060159</td>\n",
        "      <td>1940</td>\n",
        "      <td>1 min  0 sec</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>9th</th>\n",
        "      <td>Past</td>\n",
        "      <td>01Aug2020</td>\n",
        "      <td>15Aug2020</td>\n",
        "      <td>330457362</td>\n",
        "      <td>SIR-F</td>\n",
        "      <td>0.73</td>\n",
        "      <td>0.0166376</td>\n",
        "      <td>1.10626e-05</td>\n",
        "      <td>0.00142563</td>\n",
        "      <td>0.00191296</td>\n",
        "      <td>360</td>\n",
        "      <td>130</td>\n",
        "      <td>22598</td>\n",
        "      <td>175</td>\n",
        "      <td>0.017</td>\n",
        "      <td>0.0563194</td>\n",
        "      <td>1964</td>\n",
        "      <td>1 min  0 sec</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>10th</th>\n",
        "      <td>Past</td>\n",
        "      <td>16Aug2020</td>\n",
        "      <td>02Sep2020</td>\n",
        "      <td>330457362</td>\n",
        "      <td>SIR-F</td>\n",
        "      <td>0.87</td>\n",
        "      <td>0.0194786</td>\n",
        "      <td>1.88817e-06</td>\n",
        "      <td>0.00127257</td>\n",
        "      <td>0.00142586</td>\n",
        "      <td>360</td>\n",
        "      <td>175</td>\n",
        "      <td>132403</td>\n",
        "      <td>196</td>\n",
        "      <td>0.019</td>\n",
        "      <td>0.0531401</td>\n",
        "      <td>1946</td>\n",
        "      <td>1 min  0 sec</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>11th</th>\n",
        "      <td>Past</td>\n",
        "      <td>03Sep2020</td>\n",
        "      <td>17Sep2020</td>\n",
        "      <td>330457362</td>\n",
        "      <td>-</td>\n",
        "      <td>-</td>\n",
        "      <td>-</td>\n",
        "      <td>-</td>\n",
        "      <td>-</td>\n",
        "      <td>-</td>\n",
        "      <td>-</td>\n",
        "      <td>-</td>\n",
        "      <td>-</td>\n",
        "      <td>-</td>\n",
        "      <td>-</td>\n",
        "      <td>-</td>\n",
        "      <td>-</td>\n",
        "      <td>-</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>12th</th>\n",
        "      <td>Past</td>\n",
        "      <td>18Sep2020</td>\n",
        "      <td>03Oct2020</td>\n",
        "      <td>330457362</td>\n",
        "      <td>-</td>\n",
        "      <td>-</td>\n",
        "      <td>-</td>\n",
        "      <td>-</td>\n",
        "      <td>-</td>\n",
        "      <td>-</td>\n",
        "      <td>-</td>\n",
        "      <td>-</td>\n",
        "      <td>-</td>\n",
        "      <td>-</td>\n",
        "      <td>-</td>\n",
        "      <td>-</td>\n",
        "      <td>-</td>\n",
        "      <td>-</td>\n",
        "    </tr>\n",
        "  </tbody>\n",
        "</table>\n",
        "</div>"
       ],
       "output_type": "pyout",
       "prompt_number": 12,
       "text": [
        "               Type      Start        End  Population    ODE    Rt  \\\n",
        "Country Phase                                                        \n",
        "Russia  0th    Past  12Feb2020  06May2020   330457362  SIR-F  0.02   \n",
        "        1st    Past  07May2020  16May2020   330457362  SIR-F  2.51   \n",
        "        2nd    Past  17May2020  26May2020   330457362  SIR-F  1.56   \n",
        "        3rd    Past  27May2020  04Jun2020   330457362  SIR-F  1.03   \n",
        "        4th    Past  05Jun2020  13Jun2020   330457362  SIR-F  1.25   \n",
        "        5th    Past  14Jun2020  23Jun2020   330457362  SIR-F  0.82   \n",
        "        6th    Past  24Jun2020  04Jul2020   330457362  SIR-F  0.94   \n",
        "        7th    Past  05Jul2020  17Jul2020   330457362  SIR-F  0.72   \n",
        "        8th    Past  18Jul2020  31Jul2020   330457362  SIR-F  0.76   \n",
        "        9th    Past  01Aug2020  15Aug2020   330457362  SIR-F  0.73   \n",
        "        10th   Past  16Aug2020  02Sep2020   330457362  SIR-F  0.87   \n",
        "        11th   Past  03Sep2020  17Sep2020   330457362      -     -   \n",
        "        12th   Past  18Sep2020  03Oct2020   330457362      -     -   \n",
        "\n",
        "                     theta        kappa         rho       sigma  tau  \\\n",
        "Country Phase                                                          \n",
        "Russia  0th       0.602763     0.544883   0.0340813  0.00229851  360   \n",
        "        1st    0.000729031  0.000119717   0.0129583  0.00504465  360   \n",
        "        2nd    0.000494399  0.000105681  0.00698823  0.00436447  360   \n",
        "        3rd    0.000708362  0.000116581  0.00547912  0.00519557  360   \n",
        "        4th    0.000825421  8.45185e-05  0.00464652  0.00362314  360   \n",
        "        5th    0.000348462  7.90578e-05  0.00346657   0.0041384  360   \n",
        "        6th      0.0188683  1.10558e-05  0.00256772  0.00267148  360   \n",
        "        7th    8.48193e-05  6.00107e-05  0.00219128   0.0029791  360   \n",
        "        8th      0.0167783  9.85096e-06  0.00184458  0.00237292  360   \n",
        "        9th      0.0166376  1.10626e-05  0.00142563  0.00191296  360   \n",
        "        10th     0.0194786  1.88817e-06  0.00127257  0.00142586  360   \n",
        "        11th             -            -           -           -    -   \n",
        "        12th             -            -           -           -    -   \n",
        "\n",
        "              1/gamma [day] 1/alpha2 [day] 1/beta [day] alpha1 [-]      RMSLE  \\\n",
        "Country Phase                                                                   \n",
        "Russia  0th             108              0            7      0.603    18.9667   \n",
        "        1st              49           2088           19      0.001  0.0742295   \n",
        "        2nd              57           2365           35          0  0.0866889   \n",
        "        3rd              48           2144           45      0.001  0.0672237   \n",
        "        4th              69           2957           53      0.001  0.0483449   \n",
        "        5th              60           3162           72          0  0.0638472   \n",
        "        6th              93          22612           97      0.019  0.0500926   \n",
        "        7th              83           4165          114          0  0.0702426   \n",
        "        8th             105          25378          135      0.017   0.060159   \n",
        "        9th             130          22598          175      0.017  0.0563194   \n",
        "        10th            175         132403          196      0.019  0.0531401   \n",
        "        11th              -              -            -          -          -   \n",
        "        12th              -              -            -          -          -   \n",
        "\n",
        "              Trials       Runtime  \n",
        "Country Phase                       \n",
        "Russia  0th     1978  1 min  0 sec  \n",
        "        1st     1969  1 min  0 sec  \n",
        "        2nd     1941  1 min  0 sec  \n",
        "        3rd     1944  1 min  0 sec  \n",
        "        4th     1971  1 min  0 sec  \n",
        "        5th     1943  1 min  0 sec  \n",
        "        6th     1946  1 min  0 sec  \n",
        "        7th     1961  1 min  0 sec  \n",
        "        8th     1940  1 min  0 sec  \n",
        "        9th     1964  1 min  0 sec  \n",
        "        10th    1946  1 min  0 sec  \n",
        "        11th       -             -  \n",
        "        12th       -             -  "
       ]
      }
     ],
     "prompt_number": 12
    },
    {
     "cell_type": "markdown",
     "metadata": {},
     "source": [
      "## Compare the history of parameters\n",
      "Here, compare the history of parameter values if countries."
     ]
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "# All parameter/day parameter/Rt/OxCGRT\n",
      "analyser.track().head()"
     ],
     "language": "python",
     "metadata": {},
     "outputs": [
      {
       "html": [
        "<div>\n",
        "<style scoped>\n",
        "    .dataframe tbody tr th:only-of-type {\n",
        "        vertical-align: middle;\n",
        "    }\n",
        "\n",
        "    .dataframe tbody tr th {\n",
        "        vertical-align: top;\n",
        "    }\n",
        "\n",
        "    .dataframe thead th {\n",
        "        text-align: right;\n",
        "    }\n",
        "</style>\n",
        "<table border=\"1\" class=\"dataframe\">\n",
        "  <thead>\n",
        "    <tr style=\"text-align: right;\">\n",
        "      <th></th>\n",
        "      <th>Date</th>\n",
        "      <th>Country</th>\n",
        "      <th>theta</th>\n",
        "      <th>kappa</th>\n",
        "      <th>rho</th>\n",
        "      <th>sigma</th>\n",
        "      <th>alpha1 [-]</th>\n",
        "      <th>1/alpha2 [day]</th>\n",
        "      <th>1/beta [day]</th>\n",
        "      <th>1/gamma [day]</th>\n",
        "      <th>...</th>\n",
        "      <th>Cancel_events</th>\n",
        "      <th>Gatherings_restrictions</th>\n",
        "      <th>Transport_closing</th>\n",
        "      <th>Stay_home_restrictions</th>\n",
        "      <th>Internal_movement_restrictions</th>\n",
        "      <th>International_movement_restrictions</th>\n",
        "      <th>Information_campaigns</th>\n",
        "      <th>Testing_policy</th>\n",
        "      <th>Contact_tracing</th>\n",
        "      <th>Stringency_index</th>\n",
        "    </tr>\n",
        "  </thead>\n",
        "  <tbody>\n",
        "    <tr>\n",
        "      <th>0</th>\n",
        "      <td>2020-02-09</td>\n",
        "      <td>United States</td>\n",
        "      <td>0.00237777</td>\n",
        "      <td>0.000538589</td>\n",
        "      <td>0.0133965</td>\n",
        "      <td>0.00139548</td>\n",
        "      <td>0.002</td>\n",
        "      <td>464</td>\n",
        "      <td>18</td>\n",
        "      <td>179</td>\n",
        "      <td>...</td>\n",
        "      <td>0</td>\n",
        "      <td>0</td>\n",
        "      <td>0</td>\n",
        "      <td>0</td>\n",
        "      <td>0</td>\n",
        "      <td>2</td>\n",
        "      <td>0</td>\n",
        "      <td>0</td>\n",
        "      <td>1</td>\n",
        "      <td>5.56</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>1</th>\n",
        "      <td>2020-02-09</td>\n",
        "      <td>United States</td>\n",
        "      <td>0.00237777</td>\n",
        "      <td>0.000538589</td>\n",
        "      <td>0.0133965</td>\n",
        "      <td>0.00139548</td>\n",
        "      <td>0.002</td>\n",
        "      <td>464</td>\n",
        "      <td>18</td>\n",
        "      <td>179</td>\n",
        "      <td>...</td>\n",
        "      <td>0</td>\n",
        "      <td>0</td>\n",
        "      <td>0</td>\n",
        "      <td>0</td>\n",
        "      <td>0</td>\n",
        "      <td>0</td>\n",
        "      <td>0</td>\n",
        "      <td>0</td>\n",
        "      <td>0</td>\n",
        "      <td>0.00</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>2</th>\n",
        "      <td>2020-02-09</td>\n",
        "      <td>United States</td>\n",
        "      <td>0.00237777</td>\n",
        "      <td>0.000538589</td>\n",
        "      <td>0.0133965</td>\n",
        "      <td>0.00139548</td>\n",
        "      <td>0.002</td>\n",
        "      <td>464</td>\n",
        "      <td>18</td>\n",
        "      <td>179</td>\n",
        "      <td>...</td>\n",
        "      <td>0</td>\n",
        "      <td>0</td>\n",
        "      <td>0</td>\n",
        "      <td>0</td>\n",
        "      <td>0</td>\n",
        "      <td>0</td>\n",
        "      <td>0</td>\n",
        "      <td>0</td>\n",
        "      <td>0</td>\n",
        "      <td>0.00</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>3</th>\n",
        "      <td>2020-02-09</td>\n",
        "      <td>United States</td>\n",
        "      <td>0.00237777</td>\n",
        "      <td>0.000538589</td>\n",
        "      <td>0.0133965</td>\n",
        "      <td>0.00139548</td>\n",
        "      <td>0.002</td>\n",
        "      <td>464</td>\n",
        "      <td>18</td>\n",
        "      <td>179</td>\n",
        "      <td>...</td>\n",
        "      <td>0</td>\n",
        "      <td>0</td>\n",
        "      <td>0</td>\n",
        "      <td>0</td>\n",
        "      <td>0</td>\n",
        "      <td>0</td>\n",
        "      <td>0</td>\n",
        "      <td>0</td>\n",
        "      <td>0</td>\n",
        "      <td>0.00</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>4</th>\n",
        "      <td>2020-02-09</td>\n",
        "      <td>United States</td>\n",
        "      <td>0.00237777</td>\n",
        "      <td>0.000538589</td>\n",
        "      <td>0.0133965</td>\n",
        "      <td>0.00139548</td>\n",
        "      <td>0.002</td>\n",
        "      <td>464</td>\n",
        "      <td>18</td>\n",
        "      <td>179</td>\n",
        "      <td>...</td>\n",
        "      <td>0</td>\n",
        "      <td>0</td>\n",
        "      <td>0</td>\n",
        "      <td>0</td>\n",
        "      <td>0</td>\n",
        "      <td>0</td>\n",
        "      <td>0</td>\n",
        "      <td>0</td>\n",
        "      <td>0</td>\n",
        "      <td>0.00</td>\n",
        "    </tr>\n",
        "  </tbody>\n",
        "</table>\n",
        "<p>5 rows \u00d7 23 columns</p>\n",
        "</div>"
       ],
       "output_type": "pyout",
       "prompt_number": 13,
       "text": [
        "        Date        Country       theta        kappa        rho       sigma  \\\n",
        "0 2020-02-09  United States  0.00237777  0.000538589  0.0133965  0.00139548   \n",
        "1 2020-02-09  United States  0.00237777  0.000538589  0.0133965  0.00139548   \n",
        "2 2020-02-09  United States  0.00237777  0.000538589  0.0133965  0.00139548   \n",
        "3 2020-02-09  United States  0.00237777  0.000538589  0.0133965  0.00139548   \n",
        "4 2020-02-09  United States  0.00237777  0.000538589  0.0133965  0.00139548   \n",
        "\n",
        "  alpha1 [-] 1/alpha2 [day] 1/beta [day] 1/gamma [day]  ... Cancel_events  \\\n",
        "0      0.002            464           18           179  ...             0   \n",
        "1      0.002            464           18           179  ...             0   \n",
        "2      0.002            464           18           179  ...             0   \n",
        "3      0.002            464           18           179  ...             0   \n",
        "4      0.002            464           18           179  ...             0   \n",
        "\n",
        "   Gatherings_restrictions  Transport_closing  Stay_home_restrictions  \\\n",
        "0                        0                  0                       0   \n",
        "1                        0                  0                       0   \n",
        "2                        0                  0                       0   \n",
        "3                        0                  0                       0   \n",
        "4                        0                  0                       0   \n",
        "\n",
        "   Internal_movement_restrictions  International_movement_restrictions  \\\n",
        "0                               0                                    2   \n",
        "1                               0                                    0   \n",
        "2                               0                                    0   \n",
        "3                               0                                    0   \n",
        "4                               0                                    0   \n",
        "\n",
        "   Information_campaigns  Testing_policy  Contact_tracing  Stringency_index  \n",
        "0                      0               0                1              5.56  \n",
        "1                      0               0                0              0.00  \n",
        "2                      0               0                0              0.00  \n",
        "3                      0               0                0              0.00  \n",
        "4                      0               0                0              0.00  \n",
        "\n",
        "[5 rows x 23 columns]"
       ]
      }
     ],
     "prompt_number": 13
    },
    {
     "cell_type": "heading",
     "level": 3,
     "metadata": {},
     "source": [
      "$Rt$: Reprodcution number $\\mathrm{[-]}$"
     ]
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "analyser.param_history(\"Rt\", roll_window=None).tail()"
     ],
     "language": "python",
     "metadata": {},
     "outputs": [
      {
       "output_type": "display_data",
       "png": "\n",
       "text": [
        "<Figure size 648x432 with 1 Axes>"
       ]
      },
      {
       "html": [
        "<div>\n",
        "<style scoped>\n",
        "    .dataframe tbody tr th:only-of-type {\n",
        "        vertical-align: middle;\n",
        "    }\n",
        "\n",
        "    .dataframe tbody tr th {\n",
        "        vertical-align: top;\n",
        "    }\n",
        "\n",
        "    .dataframe thead th {\n",
        "        text-align: right;\n",
        "    }\n",
        "</style>\n",
        "<table border=\"1\" class=\"dataframe\">\n",
        "  <thead>\n",
        "    <tr style=\"text-align: right;\">\n",
        "      <th>Country</th>\n",
        "      <th>Bahrain</th>\n",
        "      <th>Brazil</th>\n",
        "      <th>France</th>\n",
        "      <th>Iran</th>\n",
        "      <th>Italy</th>\n",
        "      <th>Portugal</th>\n",
        "      <th>Russia</th>\n",
        "      <th>Turkey</th>\n",
        "      <th>United Arab Emirates</th>\n",
        "      <th>United States</th>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>Date</th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "    </tr>\n",
        "  </thead>\n",
        "  <tbody>\n",
        "    <tr>\n",
        "      <th>2020-09-29</th>\n",
        "      <td>0.78</td>\n",
        "      <td>0.9</td>\n",
        "      <td>21.97</td>\n",
        "      <td>1.56</td>\n",
        "      <td>1.85</td>\n",
        "      <td>3.19</td>\n",
        "      <td>0.87</td>\n",
        "      <td>1.2</td>\n",
        "      <td>0.97</td>\n",
        "      <td>1.92</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>2020-09-30</th>\n",
        "      <td>0.78</td>\n",
        "      <td>0.9</td>\n",
        "      <td>21.97</td>\n",
        "      <td>1.56</td>\n",
        "      <td>1.85</td>\n",
        "      <td>3.19</td>\n",
        "      <td>0.87</td>\n",
        "      <td>1.2</td>\n",
        "      <td>0.97</td>\n",
        "      <td>1.92</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>2020-10-01</th>\n",
        "      <td>0.78</td>\n",
        "      <td>0.9</td>\n",
        "      <td>21.97</td>\n",
        "      <td>1.56</td>\n",
        "      <td>1.85</td>\n",
        "      <td>3.19</td>\n",
        "      <td>0.87</td>\n",
        "      <td>1.2</td>\n",
        "      <td>0.97</td>\n",
        "      <td>1.92</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>2020-10-02</th>\n",
        "      <td>0.78</td>\n",
        "      <td>0.9</td>\n",
        "      <td>21.97</td>\n",
        "      <td>1.56</td>\n",
        "      <td>1.85</td>\n",
        "      <td>3.19</td>\n",
        "      <td>0.87</td>\n",
        "      <td>1.2</td>\n",
        "      <td>0.97</td>\n",
        "      <td>1.92</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>2020-10-03</th>\n",
        "      <td>0.78</td>\n",
        "      <td>0.9</td>\n",
        "      <td>21.97</td>\n",
        "      <td>1.56</td>\n",
        "      <td>1.85</td>\n",
        "      <td>3.19</td>\n",
        "      <td>0.87</td>\n",
        "      <td>1.2</td>\n",
        "      <td>0.97</td>\n",
        "      <td>1.92</td>\n",
        "    </tr>\n",
        "  </tbody>\n",
        "</table>\n",
        "</div>"
       ],
       "output_type": "pyout",
       "prompt_number": 14,
       "text": [
        "Country     Bahrain  Brazil  France  Iran  Italy  Portugal  Russia  Turkey  \\\n",
        "Date                                                                         \n",
        "2020-09-29     0.78     0.9   21.97  1.56   1.85      3.19    0.87     1.2   \n",
        "2020-09-30     0.78     0.9   21.97  1.56   1.85      3.19    0.87     1.2   \n",
        "2020-10-01     0.78     0.9   21.97  1.56   1.85      3.19    0.87     1.2   \n",
        "2020-10-02     0.78     0.9   21.97  1.56   1.85      3.19    0.87     1.2   \n",
        "2020-10-03     0.78     0.9   21.97  1.56   1.85      3.19    0.87     1.2   \n",
        "\n",
        "Country     United Arab Emirates  United States  \n",
        "Date                                             \n",
        "2020-09-29                  0.97           1.92  \n",
        "2020-09-30                  0.97           1.92  \n",
        "2020-10-01                  0.97           1.92  \n",
        "2020-10-02                  0.97           1.92  \n",
        "2020-10-03                  0.97           1.92  "
       ]
      }
     ],
     "prompt_number": 14
    },
    {
     "cell_type": "heading",
     "level": 3,
     "metadata": {},
     "source": [
      "$\\rho$: Effective contact rate $\\mathrm{[-]}$"
     ]
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "analyser.param_history(\"rho\", roll_window=None).tail()"
     ],
     "language": "python",
     "metadata": {},
     "outputs": [
      {
       "output_type": "display_data",
       "png": "\n",
       "text": [
        "<Figure size 648x432 with 1 Axes>"
       ]
      },
      {
       "html": [
        "<div>\n",
        "<style scoped>\n",
        "    .dataframe tbody tr th:only-of-type {\n",
        "        vertical-align: middle;\n",
        "    }\n",
        "\n",
        "    .dataframe tbody tr th {\n",
        "        vertical-align: top;\n",
        "    }\n",
        "\n",
        "    .dataframe thead th {\n",
        "        text-align: right;\n",
        "    }\n",
        "</style>\n",
        "<table border=\"1\" class=\"dataframe\">\n",
        "  <thead>\n",
        "    <tr style=\"text-align: right;\">\n",
        "      <th>Country</th>\n",
        "      <th>Bahrain</th>\n",
        "      <th>Brazil</th>\n",
        "      <th>France</th>\n",
        "      <th>Iran</th>\n",
        "      <th>Italy</th>\n",
        "      <th>Portugal</th>\n",
        "      <th>Russia</th>\n",
        "      <th>Turkey</th>\n",
        "      <th>United Arab Emirates</th>\n",
        "      <th>United States</th>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>Date</th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "    </tr>\n",
        "  </thead>\n",
        "  <tbody>\n",
        "    <tr>\n",
        "      <th>2020-09-29</th>\n",
        "      <td>0.020909</td>\n",
        "      <td>0.015382</td>\n",
        "      <td>0.008697</td>\n",
        "      <td>0.019606</td>\n",
        "      <td>0.009685</td>\n",
        "      <td>0.002679</td>\n",
        "      <td>0.001273</td>\n",
        "      <td>0.012784</td>\n",
        "      <td>0.025323</td>\n",
        "      <td>0.002443</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>2020-09-30</th>\n",
        "      <td>0.020909</td>\n",
        "      <td>0.015382</td>\n",
        "      <td>0.008697</td>\n",
        "      <td>0.019606</td>\n",
        "      <td>0.009685</td>\n",
        "      <td>0.002679</td>\n",
        "      <td>0.001273</td>\n",
        "      <td>0.012784</td>\n",
        "      <td>0.025323</td>\n",
        "      <td>0.002443</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>2020-10-01</th>\n",
        "      <td>0.020909</td>\n",
        "      <td>0.015382</td>\n",
        "      <td>0.008697</td>\n",
        "      <td>0.019606</td>\n",
        "      <td>0.009685</td>\n",
        "      <td>0.002679</td>\n",
        "      <td>0.001273</td>\n",
        "      <td>0.012784</td>\n",
        "      <td>0.025323</td>\n",
        "      <td>0.002443</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>2020-10-02</th>\n",
        "      <td>0.020909</td>\n",
        "      <td>0.015382</td>\n",
        "      <td>0.008697</td>\n",
        "      <td>0.019606</td>\n",
        "      <td>0.009685</td>\n",
        "      <td>0.002679</td>\n",
        "      <td>0.001273</td>\n",
        "      <td>0.012784</td>\n",
        "      <td>0.025323</td>\n",
        "      <td>0.002443</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>2020-10-03</th>\n",
        "      <td>0.020909</td>\n",
        "      <td>0.015382</td>\n",
        "      <td>0.008697</td>\n",
        "      <td>0.019606</td>\n",
        "      <td>0.009685</td>\n",
        "      <td>0.002679</td>\n",
        "      <td>0.001273</td>\n",
        "      <td>0.012784</td>\n",
        "      <td>0.025323</td>\n",
        "      <td>0.002443</td>\n",
        "    </tr>\n",
        "  </tbody>\n",
        "</table>\n",
        "</div>"
       ],
       "output_type": "pyout",
       "prompt_number": 15,
       "text": [
        "Country      Bahrain    Brazil    France      Iran     Italy  Portugal  \\\n",
        "Date                                                                     \n",
        "2020-09-29  0.020909  0.015382  0.008697  0.019606  0.009685  0.002679   \n",
        "2020-09-30  0.020909  0.015382  0.008697  0.019606  0.009685  0.002679   \n",
        "2020-10-01  0.020909  0.015382  0.008697  0.019606  0.009685  0.002679   \n",
        "2020-10-02  0.020909  0.015382  0.008697  0.019606  0.009685  0.002679   \n",
        "2020-10-03  0.020909  0.015382  0.008697  0.019606  0.009685  0.002679   \n",
        "\n",
        "Country       Russia    Turkey  United Arab Emirates  United States  \n",
        "Date                                                                 \n",
        "2020-09-29  0.001273  0.012784              0.025323       0.002443  \n",
        "2020-09-30  0.001273  0.012784              0.025323       0.002443  \n",
        "2020-10-01  0.001273  0.012784              0.025323       0.002443  \n",
        "2020-10-02  0.001273  0.012784              0.025323       0.002443  \n",
        "2020-10-03  0.001273  0.012784              0.025323       0.002443  "
       ]
      }
     ],
     "prompt_number": 15
    },
    {
     "cell_type": "heading",
     "level": 3,
     "metadata": {},
     "source": [
      "$\\sigma$: Recovery rate $\\mathrm{[-]}$"
     ]
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "analyser.param_history(\"sigma\", roll_window=None).tail()"
     ],
     "language": "python",
     "metadata": {},
     "outputs": [
      {
       "output_type": "display_data",
       "png": "\n",
       "text": [
        "<Figure size 648x432 with 1 Axes>"
       ]
      },
      {
       "html": [
        "<div>\n",
        "<style scoped>\n",
        "    .dataframe tbody tr th:only-of-type {\n",
        "        vertical-align: middle;\n",
        "    }\n",
        "\n",
        "    .dataframe tbody tr th {\n",
        "        vertical-align: top;\n",
        "    }\n",
        "\n",
        "    .dataframe thead th {\n",
        "        text-align: right;\n",
        "    }\n",
        "</style>\n",
        "<table border=\"1\" class=\"dataframe\">\n",
        "  <thead>\n",
        "    <tr style=\"text-align: right;\">\n",
        "      <th>Country</th>\n",
        "      <th>Bahrain</th>\n",
        "      <th>Brazil</th>\n",
        "      <th>France</th>\n",
        "      <th>Iran</th>\n",
        "      <th>Italy</th>\n",
        "      <th>Portugal</th>\n",
        "      <th>Russia</th>\n",
        "      <th>Turkey</th>\n",
        "      <th>United Arab Emirates</th>\n",
        "      <th>United States</th>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>Date</th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "    </tr>\n",
        "  </thead>\n",
        "  <tbody>\n",
        "    <tr>\n",
        "      <th>2020-09-29</th>\n",
        "      <td>0.026781</td>\n",
        "      <td>0.016744</td>\n",
        "      <td>0.000359</td>\n",
        "      <td>0.01188</td>\n",
        "      <td>0.005066</td>\n",
        "      <td>0.000818</td>\n",
        "      <td>0.001426</td>\n",
        "      <td>0.010173</td>\n",
        "      <td>0.026069</td>\n",
        "      <td>0.00124</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>2020-09-30</th>\n",
        "      <td>0.026781</td>\n",
        "      <td>0.016744</td>\n",
        "      <td>0.000359</td>\n",
        "      <td>0.01188</td>\n",
        "      <td>0.005066</td>\n",
        "      <td>0.000818</td>\n",
        "      <td>0.001426</td>\n",
        "      <td>0.010173</td>\n",
        "      <td>0.026069</td>\n",
        "      <td>0.00124</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>2020-10-01</th>\n",
        "      <td>0.026781</td>\n",
        "      <td>0.016744</td>\n",
        "      <td>0.000359</td>\n",
        "      <td>0.01188</td>\n",
        "      <td>0.005066</td>\n",
        "      <td>0.000818</td>\n",
        "      <td>0.001426</td>\n",
        "      <td>0.010173</td>\n",
        "      <td>0.026069</td>\n",
        "      <td>0.00124</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>2020-10-02</th>\n",
        "      <td>0.026781</td>\n",
        "      <td>0.016744</td>\n",
        "      <td>0.000359</td>\n",
        "      <td>0.01188</td>\n",
        "      <td>0.005066</td>\n",
        "      <td>0.000818</td>\n",
        "      <td>0.001426</td>\n",
        "      <td>0.010173</td>\n",
        "      <td>0.026069</td>\n",
        "      <td>0.00124</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>2020-10-03</th>\n",
        "      <td>0.026781</td>\n",
        "      <td>0.016744</td>\n",
        "      <td>0.000359</td>\n",
        "      <td>0.01188</td>\n",
        "      <td>0.005066</td>\n",
        "      <td>0.000818</td>\n",
        "      <td>0.001426</td>\n",
        "      <td>0.010173</td>\n",
        "      <td>0.026069</td>\n",
        "      <td>0.00124</td>\n",
        "    </tr>\n",
        "  </tbody>\n",
        "</table>\n",
        "</div>"
       ],
       "output_type": "pyout",
       "prompt_number": 16,
       "text": [
        "Country      Bahrain    Brazil    France     Iran     Italy  Portugal  \\\n",
        "Date                                                                    \n",
        "2020-09-29  0.026781  0.016744  0.000359  0.01188  0.005066  0.000818   \n",
        "2020-09-30  0.026781  0.016744  0.000359  0.01188  0.005066  0.000818   \n",
        "2020-10-01  0.026781  0.016744  0.000359  0.01188  0.005066  0.000818   \n",
        "2020-10-02  0.026781  0.016744  0.000359  0.01188  0.005066  0.000818   \n",
        "2020-10-03  0.026781  0.016744  0.000359  0.01188  0.005066  0.000818   \n",
        "\n",
        "Country       Russia    Turkey  United Arab Emirates  United States  \n",
        "Date                                                                 \n",
        "2020-09-29  0.001426  0.010173              0.026069        0.00124  \n",
        "2020-09-30  0.001426  0.010173              0.026069        0.00124  \n",
        "2020-10-01  0.001426  0.010173              0.026069        0.00124  \n",
        "2020-10-02  0.001426  0.010173              0.026069        0.00124  \n",
        "2020-10-03  0.001426  0.010173              0.026069        0.00124  "
       ]
      }
     ],
     "prompt_number": 16
    },
    {
     "cell_type": "heading",
     "level": 3,
     "metadata": {},
     "source": [
      "$\\kappa$: Mortality rate of infected cases $\\mathrm{[-]}$"
     ]
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "analyser.param_history(\"kappa\", roll_window=None).tail()"
     ],
     "language": "python",
     "metadata": {},
     "outputs": [
      {
       "output_type": "display_data",
       "png": "\n",
       "text": [
        "<Figure size 648x432 with 1 Axes>"
       ]
      },
      {
       "html": [
        "<div>\n",
        "<style scoped>\n",
        "    .dataframe tbody tr th:only-of-type {\n",
        "        vertical-align: middle;\n",
        "    }\n",
        "\n",
        "    .dataframe tbody tr th {\n",
        "        vertical-align: top;\n",
        "    }\n",
        "\n",
        "    .dataframe thead th {\n",
        "        text-align: right;\n",
        "    }\n",
        "</style>\n",
        "<table border=\"1\" class=\"dataframe\">\n",
        "  <thead>\n",
        "    <tr style=\"text-align: right;\">\n",
        "      <th>Country</th>\n",
        "      <th>Bahrain</th>\n",
        "      <th>Brazil</th>\n",
        "      <th>France</th>\n",
        "      <th>Iran</th>\n",
        "      <th>Italy</th>\n",
        "      <th>Portugal</th>\n",
        "      <th>Russia</th>\n",
        "      <th>Turkey</th>\n",
        "      <th>United Arab Emirates</th>\n",
        "      <th>United States</th>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>Date</th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "    </tr>\n",
        "  </thead>\n",
        "  <tbody>\n",
        "    <tr>\n",
        "      <th>2020-09-29</th>\n",
        "      <td>0.000071</td>\n",
        "      <td>0.000118</td>\n",
        "      <td>0.000036</td>\n",
        "      <td>0.000019</td>\n",
        "      <td>0.000162</td>\n",
        "      <td>0.000021</td>\n",
        "      <td>0.000002</td>\n",
        "      <td>0.000191</td>\n",
        "      <td>0.000041</td>\n",
        "      <td>0.00001</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>2020-09-30</th>\n",
        "      <td>0.000071</td>\n",
        "      <td>0.000118</td>\n",
        "      <td>0.000036</td>\n",
        "      <td>0.000019</td>\n",
        "      <td>0.000162</td>\n",
        "      <td>0.000021</td>\n",
        "      <td>0.000002</td>\n",
        "      <td>0.000191</td>\n",
        "      <td>0.000041</td>\n",
        "      <td>0.00001</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>2020-10-01</th>\n",
        "      <td>0.000071</td>\n",
        "      <td>0.000118</td>\n",
        "      <td>0.000036</td>\n",
        "      <td>0.000019</td>\n",
        "      <td>0.000162</td>\n",
        "      <td>0.000021</td>\n",
        "      <td>0.000002</td>\n",
        "      <td>0.000191</td>\n",
        "      <td>0.000041</td>\n",
        "      <td>0.00001</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>2020-10-02</th>\n",
        "      <td>0.000071</td>\n",
        "      <td>0.000118</td>\n",
        "      <td>0.000036</td>\n",
        "      <td>0.000019</td>\n",
        "      <td>0.000162</td>\n",
        "      <td>0.000021</td>\n",
        "      <td>0.000002</td>\n",
        "      <td>0.000191</td>\n",
        "      <td>0.000041</td>\n",
        "      <td>0.00001</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>2020-10-03</th>\n",
        "      <td>0.000071</td>\n",
        "      <td>0.000118</td>\n",
        "      <td>0.000036</td>\n",
        "      <td>0.000019</td>\n",
        "      <td>0.000162</td>\n",
        "      <td>0.000021</td>\n",
        "      <td>0.000002</td>\n",
        "      <td>0.000191</td>\n",
        "      <td>0.000041</td>\n",
        "      <td>0.00001</td>\n",
        "    </tr>\n",
        "  </tbody>\n",
        "</table>\n",
        "</div>"
       ],
       "output_type": "pyout",
       "prompt_number": 17,
       "text": [
        "Country      Bahrain    Brazil    France      Iran     Italy  Portugal  \\\n",
        "Date                                                                     \n",
        "2020-09-29  0.000071  0.000118  0.000036  0.000019  0.000162  0.000021   \n",
        "2020-09-30  0.000071  0.000118  0.000036  0.000019  0.000162  0.000021   \n",
        "2020-10-01  0.000071  0.000118  0.000036  0.000019  0.000162  0.000021   \n",
        "2020-10-02  0.000071  0.000118  0.000036  0.000019  0.000162  0.000021   \n",
        "2020-10-03  0.000071  0.000118  0.000036  0.000019  0.000162  0.000021   \n",
        "\n",
        "Country       Russia    Turkey  United Arab Emirates  United States  \n",
        "Date                                                                 \n",
        "2020-09-29  0.000002  0.000191              0.000041        0.00001  \n",
        "2020-09-30  0.000002  0.000191              0.000041        0.00001  \n",
        "2020-10-01  0.000002  0.000191              0.000041        0.00001  \n",
        "2020-10-02  0.000002  0.000191              0.000041        0.00001  \n",
        "2020-10-03  0.000002  0.000191              0.000041        0.00001  "
       ]
      }
     ],
     "prompt_number": 17
    },
    {
     "cell_type": "heading",
     "level": 3,
     "metadata": {},
     "source": [
      "$\\theta$: Mortality rate of S$^\\ast$ cases $\\mathrm{[-]}$"
     ]
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "analyser.param_history(\"theta\", roll_window=None).tail()"
     ],
     "language": "python",
     "metadata": {},
     "outputs": [
      {
       "output_type": "display_data",
       "png": "\n",
       "text": [
        "<Figure size 648x432 with 1 Axes>"
       ]
      },
      {
       "html": [
        "<div>\n",
        "<style scoped>\n",
        "    .dataframe tbody tr th:only-of-type {\n",
        "        vertical-align: middle;\n",
        "    }\n",
        "\n",
        "    .dataframe tbody tr th {\n",
        "        vertical-align: top;\n",
        "    }\n",
        "\n",
        "    .dataframe thead th {\n",
        "        text-align: right;\n",
        "    }\n",
        "</style>\n",
        "<table border=\"1\" class=\"dataframe\">\n",
        "  <thead>\n",
        "    <tr style=\"text-align: right;\">\n",
        "      <th>Country</th>\n",
        "      <th>Bahrain</th>\n",
        "      <th>Brazil</th>\n",
        "      <th>France</th>\n",
        "      <th>Iran</th>\n",
        "      <th>Italy</th>\n",
        "      <th>Portugal</th>\n",
        "      <th>Russia</th>\n",
        "      <th>Turkey</th>\n",
        "      <th>United Arab Emirates</th>\n",
        "      <th>United States</th>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>Date</th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "    </tr>\n",
        "  </thead>\n",
        "  <tbody>\n",
        "    <tr>\n",
        "      <th>2020-09-29</th>\n",
        "      <td>0.001155</td>\n",
        "      <td>0.018485</td>\n",
        "      <td>0.000983</td>\n",
        "      <td>0.053077</td>\n",
        "      <td>0.001117</td>\n",
        "      <td>0.000859</td>\n",
        "      <td>0.019479</td>\n",
        "      <td>0.027087</td>\n",
        "      <td>0.000019</td>\n",
        "      <td>0.017936</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>2020-09-30</th>\n",
        "      <td>0.001155</td>\n",
        "      <td>0.018485</td>\n",
        "      <td>0.000983</td>\n",
        "      <td>0.053077</td>\n",
        "      <td>0.001117</td>\n",
        "      <td>0.000859</td>\n",
        "      <td>0.019479</td>\n",
        "      <td>0.027087</td>\n",
        "      <td>0.000019</td>\n",
        "      <td>0.017936</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>2020-10-01</th>\n",
        "      <td>0.001155</td>\n",
        "      <td>0.018485</td>\n",
        "      <td>0.000983</td>\n",
        "      <td>0.053077</td>\n",
        "      <td>0.001117</td>\n",
        "      <td>0.000859</td>\n",
        "      <td>0.019479</td>\n",
        "      <td>0.027087</td>\n",
        "      <td>0.000019</td>\n",
        "      <td>0.017936</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>2020-10-02</th>\n",
        "      <td>0.001155</td>\n",
        "      <td>0.018485</td>\n",
        "      <td>0.000983</td>\n",
        "      <td>0.053077</td>\n",
        "      <td>0.001117</td>\n",
        "      <td>0.000859</td>\n",
        "      <td>0.019479</td>\n",
        "      <td>0.027087</td>\n",
        "      <td>0.000019</td>\n",
        "      <td>0.017936</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>2020-10-03</th>\n",
        "      <td>0.001155</td>\n",
        "      <td>0.018485</td>\n",
        "      <td>0.000983</td>\n",
        "      <td>0.053077</td>\n",
        "      <td>0.001117</td>\n",
        "      <td>0.000859</td>\n",
        "      <td>0.019479</td>\n",
        "      <td>0.027087</td>\n",
        "      <td>0.000019</td>\n",
        "      <td>0.017936</td>\n",
        "    </tr>\n",
        "  </tbody>\n",
        "</table>\n",
        "</div>"
       ],
       "output_type": "pyout",
       "prompt_number": 18,
       "text": [
        "Country      Bahrain    Brazil    France      Iran     Italy  Portugal  \\\n",
        "Date                                                                     \n",
        "2020-09-29  0.001155  0.018485  0.000983  0.053077  0.001117  0.000859   \n",
        "2020-09-30  0.001155  0.018485  0.000983  0.053077  0.001117  0.000859   \n",
        "2020-10-01  0.001155  0.018485  0.000983  0.053077  0.001117  0.000859   \n",
        "2020-10-02  0.001155  0.018485  0.000983  0.053077  0.001117  0.000859   \n",
        "2020-10-03  0.001155  0.018485  0.000983  0.053077  0.001117  0.000859   \n",
        "\n",
        "Country       Russia    Turkey  United Arab Emirates  United States  \n",
        "Date                                                                 \n",
        "2020-09-29  0.019479  0.027087              0.000019       0.017936  \n",
        "2020-09-30  0.019479  0.027087              0.000019       0.017936  \n",
        "2020-10-01  0.019479  0.027087              0.000019       0.017936  \n",
        "2020-10-02  0.019479  0.027087              0.000019       0.017936  \n",
        "2020-10-03  0.019479  0.027087              0.000019       0.017936  "
       ]
      }
     ],
     "prompt_number": 18
    },
    {
     "cell_type": "markdown",
     "metadata": {},
     "source": [
      "## (Experimental): Relationship of OxCGRT index and parameter values\n",
      "Government responses will impact on parameter values of ODE models about 14 days later. Here, we will investigate on the relationship of [stringency index (from OxCGRT)](https://github.com/OxCGRT/covid-policy-tracker/blob/master/documentation/index_methodology.md) and reproduction number/model parameters.\n"
     ]
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "%matplotlib inline\n",
      "from matplotlib import pyplot as plt\n",
      "import seaborn as sns\n",
      "import pandas as pd"
     ],
     "language": "python",
     "metadata": {},
     "outputs": [],
     "prompt_number": 19
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "df = analyser.track()\n",
      "param_cols = [\"Rt\", *cs.SIRF.PARAMETERS]\n",
      "oxcgrt_cols = oxcgrt_data.OXCGRT_VARS[:]\n",
      "cols = param_cols + oxcgrt_cols\n",
      "delay = 14\n",
      "\n",
      "for col in param_cols:\n",
      "    df[col] = pd.to_numeric(df[col], errors=\"coerce\")\n",
      "    df[col] = df.groupby(\"Country\")[col].shift(0 - delay)\n",
      "\n",
      "df = df.dropna(how=\"any\")\n",
      "df = df.loc[:, [\"Date\", \"Country\", *cols]]\n",
      "track_df = df.copy()\n",
      "track_df.info()"
     ],
     "language": "python",
     "metadata": {},
     "outputs": [
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "<class 'pandas.core.frame.DataFrame'>\n",
        "Int64Index: 47113 entries, 0 to 47238\n",
        "Data columns (total 19 columns):\n",
        " #   Column                               Non-Null Count  Dtype         \n",
        "---  ------                               --------------  -----         \n",
        " 0   Date                                 47113 non-null  datetime64[ns]\n",
        " 1   Country                              47113 non-null  object        \n",
        " 2   Rt                                   47113 non-null  float64       \n",
        " 3   theta                                47113 non-null  float64       \n",
        " 4   kappa                                47113 non-null  float64       \n",
        " 5   rho                                  47113 non-null  float64       \n",
        " 6   sigma                                47113 non-null  float64       \n",
        " 7   School_closing                       47113 non-null  int64         \n",
        " 8   Workplace_closing                    47113 non-null  int64         \n",
        " 9   Cancel_events                        47113 non-null  int64         \n",
        " 10  Gatherings_restrictions              47113 non-null  int64         \n",
        " 11  Transport_closing                    47113 non-null  int64         \n",
        " 12  Stay_home_restrictions               47113 non-null  int64         \n",
        " 13  Internal_movement_restrictions       47113 non-null  int64         \n",
        " 14  International_movement_restrictions  47113 non-null  int64         \n",
        " 15  Information_campaigns                47113 non-null  int64         \n",
        " 16  Testing_policy                       47113 non-null  int64         \n",
        " 17  Contact_tracing                      47113 non-null  int64         \n",
        " 18  Stringency_index                     47113 non-null  float64       \n",
        "dtypes: datetime64[ns](1), float64(6), int64(11), object(1)\n",
        "memory usage: 7.2+ MB\n"
       ]
      }
     ],
     "prompt_number": 20
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "# Correlation\n",
      "df = track_df.copy()\n",
      "df.corr().style.background_gradient(axis=None)"
     ],
     "language": "python",
     "metadata": {},
     "outputs": [
      {
       "html": [
        "<style  type=\"text/css\" >\n",
        "#T_60420dda_057e_11eb_a35b_525400ef21barow0_col0,#T_60420dda_057e_11eb_a35b_525400ef21barow1_col1,#T_60420dda_057e_11eb_a35b_525400ef21barow2_col2,#T_60420dda_057e_11eb_a35b_525400ef21barow3_col3,#T_60420dda_057e_11eb_a35b_525400ef21barow4_col4,#T_60420dda_057e_11eb_a35b_525400ef21barow5_col5,#T_60420dda_057e_11eb_a35b_525400ef21barow6_col6,#T_60420dda_057e_11eb_a35b_525400ef21barow7_col7,#T_60420dda_057e_11eb_a35b_525400ef21barow8_col8,#T_60420dda_057e_11eb_a35b_525400ef21barow9_col9,#T_60420dda_057e_11eb_a35b_525400ef21barow10_col10,#T_60420dda_057e_11eb_a35b_525400ef21barow11_col11,#T_60420dda_057e_11eb_a35b_525400ef21barow12_col12,#T_60420dda_057e_11eb_a35b_525400ef21barow13_col13,#T_60420dda_057e_11eb_a35b_525400ef21barow14_col14,#T_60420dda_057e_11eb_a35b_525400ef21barow15_col15,#T_60420dda_057e_11eb_a35b_525400ef21barow16_col16{\n",
        "            background-color:  #023858;\n",
        "            color:  #f1f1f1;\n",
        "        }#T_60420dda_057e_11eb_a35b_525400ef21barow0_col1,#T_60420dda_057e_11eb_a35b_525400ef21barow1_col0{\n",
        "            background-color:  #e6e2ef;\n",
        "            color:  #000000;\n",
        "        }#T_60420dda_057e_11eb_a35b_525400ef21barow0_col2,#T_60420dda_057e_11eb_a35b_525400ef21barow2_col0{\n",
        "            background-color:  #e4e1ef;\n",
        "            color:  #000000;\n",
        "        }#T_60420dda_057e_11eb_a35b_525400ef21barow0_col3,#T_60420dda_057e_11eb_a35b_525400ef21barow3_col0{\n",
        "            background-color:  #8fb4d6;\n",
        "            color:  #000000;\n",
        "        }#T_60420dda_057e_11eb_a35b_525400ef21barow0_col4,#T_60420dda_057e_11eb_a35b_525400ef21barow4_col0{\n",
        "            background-color:  #e2dfee;\n",
        "            color:  #000000;\n",
        "        }#T_60420dda_057e_11eb_a35b_525400ef21barow0_col5,#T_60420dda_057e_11eb_a35b_525400ef21barow0_col16,#T_60420dda_057e_11eb_a35b_525400ef21barow4_col11,#T_60420dda_057e_11eb_a35b_525400ef21barow5_col0,#T_60420dda_057e_11eb_a35b_525400ef21barow11_col4,#T_60420dda_057e_11eb_a35b_525400ef21barow16_col0{\n",
        "            background-color:  #c1cae2;\n",
        "            color:  #000000;\n",
        "        }#T_60420dda_057e_11eb_a35b_525400ef21barow0_col6,#T_60420dda_057e_11eb_a35b_525400ef21barow6_col0{\n",
        "            background-color:  #a7bddb;\n",
        "            color:  #000000;\n",
        "        }#T_60420dda_057e_11eb_a35b_525400ef21barow0_col7,#T_60420dda_057e_11eb_a35b_525400ef21barow3_col15,#T_60420dda_057e_11eb_a35b_525400ef21barow7_col0,#T_60420dda_057e_11eb_a35b_525400ef21barow15_col3{\n",
        "            background-color:  #d5d5e8;\n",
        "            color:  #000000;\n",
        "        }#T_60420dda_057e_11eb_a35b_525400ef21barow0_col8,#T_60420dda_057e_11eb_a35b_525400ef21barow3_col12,#T_60420dda_057e_11eb_a35b_525400ef21barow8_col0,#T_60420dda_057e_11eb_a35b_525400ef21barow12_col3{\n",
        "            background-color:  #b0c2de;\n",
        "            color:  #000000;\n",
        "        }#T_60420dda_057e_11eb_a35b_525400ef21barow0_col9,#T_60420dda_057e_11eb_a35b_525400ef21barow1_col16,#T_60420dda_057e_11eb_a35b_525400ef21barow9_col0,#T_60420dda_057e_11eb_a35b_525400ef21barow16_col1{\n",
        "            background-color:  #cdd0e5;\n",
        "            color:  #000000;\n",
        "        }#T_60420dda_057e_11eb_a35b_525400ef21barow0_col10,#T_60420dda_057e_11eb_a35b_525400ef21barow1_col6,#T_60420dda_057e_11eb_a35b_525400ef21barow6_col1,#T_60420dda_057e_11eb_a35b_525400ef21barow10_col0{\n",
        "            background-color:  #d4d4e8;\n",
        "            color:  #000000;\n",
        "        }#T_60420dda_057e_11eb_a35b_525400ef21barow0_col11,#T_60420dda_057e_11eb_a35b_525400ef21barow11_col0{\n",
        "            background-color:  #c8cde4;\n",
        "            color:  #000000;\n",
        "        }#T_60420dda_057e_11eb_a35b_525400ef21barow0_col12,#T_60420dda_057e_11eb_a35b_525400ef21barow3_col8,#T_60420dda_057e_11eb_a35b_525400ef21barow8_col3,#T_60420dda_057e_11eb_a35b_525400ef21barow12_col0{\n",
        "            background-color:  #d8d7e9;\n",
        "            color:  #000000;\n",
        "        }#T_60420dda_057e_11eb_a35b_525400ef21barow0_col13,#T_60420dda_057e_11eb_a35b_525400ef21barow4_col9,#T_60420dda_057e_11eb_a35b_525400ef21barow9_col4,#T_60420dda_057e_11eb_a35b_525400ef21barow13_col0{\n",
        "            background-color:  #b9c6e0;\n",
        "            color:  #000000;\n",
        "        }#T_60420dda_057e_11eb_a35b_525400ef21barow0_col14,#T_60420dda_057e_11eb_a35b_525400ef21barow4_col8,#T_60420dda_057e_11eb_a35b_525400ef21barow8_col4,#T_60420dda_057e_11eb_a35b_525400ef21barow14_col0{\n",
        "            background-color:  #cacee5;\n",
        "            color:  #000000;\n",
        "        }#T_60420dda_057e_11eb_a35b_525400ef21barow0_col15,#T_60420dda_057e_11eb_a35b_525400ef21barow15_col0{\n",
        "            background-color:  #dad9ea;\n",
        "            color:  #000000;\n",
        "        }#T_60420dda_057e_11eb_a35b_525400ef21barow1_col2,#T_60420dda_057e_11eb_a35b_525400ef21barow2_col1{\n",
        "            background-color:  #023a5b;\n",
        "            color:  #f1f1f1;\n",
        "        }#T_60420dda_057e_11eb_a35b_525400ef21barow1_col3,#T_60420dda_057e_11eb_a35b_525400ef21barow3_col1{\n",
        "            background-color:  #045f95;\n",
        "            color:  #f1f1f1;\n",
        "        }#T_60420dda_057e_11eb_a35b_525400ef21barow1_col4,#T_60420dda_057e_11eb_a35b_525400ef21barow4_col1{\n",
        "            background-color:  #c2cbe2;\n",
        "            color:  #000000;\n",
        "        }#T_60420dda_057e_11eb_a35b_525400ef21barow1_col5,#T_60420dda_057e_11eb_a35b_525400ef21barow5_col1{\n",
        "            background-color:  #dfddec;\n",
        "            color:  #000000;\n",
        "        }#T_60420dda_057e_11eb_a35b_525400ef21barow1_col7,#T_60420dda_057e_11eb_a35b_525400ef21barow7_col1{\n",
        "            background-color:  #ebe6f2;\n",
        "            color:  #000000;\n",
        "        }#T_60420dda_057e_11eb_a35b_525400ef21barow1_col8,#T_60420dda_057e_11eb_a35b_525400ef21barow8_col1{\n",
        "            background-color:  #dcdaeb;\n",
        "            color:  #000000;\n",
        "        }#T_60420dda_057e_11eb_a35b_525400ef21barow1_col9,#T_60420dda_057e_11eb_a35b_525400ef21barow9_col1{\n",
        "            background-color:  #e0dded;\n",
        "            color:  #000000;\n",
        "        }#T_60420dda_057e_11eb_a35b_525400ef21barow1_col10,#T_60420dda_057e_11eb_a35b_525400ef21barow2_col12,#T_60420dda_057e_11eb_a35b_525400ef21barow10_col1,#T_60420dda_057e_11eb_a35b_525400ef21barow12_col2{\n",
        "            background-color:  #81aed2;\n",
        "            color:  #000000;\n",
        "        }#T_60420dda_057e_11eb_a35b_525400ef21barow1_col11,#T_60420dda_057e_11eb_a35b_525400ef21barow9_col15,#T_60420dda_057e_11eb_a35b_525400ef21barow11_col1,#T_60420dda_057e_11eb_a35b_525400ef21barow15_col9{\n",
        "            background-color:  #b1c2de;\n",
        "            color:  #000000;\n",
        "        }#T_60420dda_057e_11eb_a35b_525400ef21barow1_col12,#T_60420dda_057e_11eb_a35b_525400ef21barow2_col10,#T_60420dda_057e_11eb_a35b_525400ef21barow3_col10,#T_60420dda_057e_11eb_a35b_525400ef21barow10_col2,#T_60420dda_057e_11eb_a35b_525400ef21barow10_col3,#T_60420dda_057e_11eb_a35b_525400ef21barow12_col1{\n",
        "            background-color:  #86b0d3;\n",
        "            color:  #000000;\n",
        "        }#T_60420dda_057e_11eb_a35b_525400ef21barow1_col13,#T_60420dda_057e_11eb_a35b_525400ef21barow13_col1{\n",
        "            background-color:  #f4edf6;\n",
        "            color:  #000000;\n",
        "        }#T_60420dda_057e_11eb_a35b_525400ef21barow1_col14,#T_60420dda_057e_11eb_a35b_525400ef21barow14_col1{\n",
        "            background-color:  #f5eef6;\n",
        "            color:  #000000;\n",
        "        }#T_60420dda_057e_11eb_a35b_525400ef21barow1_col15,#T_60420dda_057e_11eb_a35b_525400ef21barow15_col1{\n",
        "            background-color:  #bcc7e1;\n",
        "            color:  #000000;\n",
        "        }#T_60420dda_057e_11eb_a35b_525400ef21barow2_col3,#T_60420dda_057e_11eb_a35b_525400ef21barow3_col2,#T_60420dda_057e_11eb_a35b_525400ef21barow9_col16,#T_60420dda_057e_11eb_a35b_525400ef21barow11_col16,#T_60420dda_057e_11eb_a35b_525400ef21barow16_col9,#T_60420dda_057e_11eb_a35b_525400ef21barow16_col11{\n",
        "            background-color:  #046096;\n",
        "            color:  #f1f1f1;\n",
        "        }#T_60420dda_057e_11eb_a35b_525400ef21barow2_col4,#T_60420dda_057e_11eb_a35b_525400ef21barow3_col6,#T_60420dda_057e_11eb_a35b_525400ef21barow4_col2,#T_60420dda_057e_11eb_a35b_525400ef21barow6_col3{\n",
        "            background-color:  #d0d1e6;\n",
        "            color:  #000000;\n",
        "        }#T_60420dda_057e_11eb_a35b_525400ef21barow2_col5,#T_60420dda_057e_11eb_a35b_525400ef21barow5_col2{\n",
        "            background-color:  #e3e0ee;\n",
        "            color:  #000000;\n",
        "        }#T_60420dda_057e_11eb_a35b_525400ef21barow2_col6,#T_60420dda_057e_11eb_a35b_525400ef21barow6_col2{\n",
        "            background-color:  #d9d8ea;\n",
        "            color:  #000000;\n",
        "        }#T_60420dda_057e_11eb_a35b_525400ef21barow2_col7,#T_60420dda_057e_11eb_a35b_525400ef21barow7_col2{\n",
        "            background-color:  #ede8f3;\n",
        "            color:  #000000;\n",
        "        }#T_60420dda_057e_11eb_a35b_525400ef21barow2_col8,#T_60420dda_057e_11eb_a35b_525400ef21barow8_col2{\n",
        "            background-color:  #dddbec;\n",
        "            color:  #000000;\n",
        "        }#T_60420dda_057e_11eb_a35b_525400ef21barow2_col9,#T_60420dda_057e_11eb_a35b_525400ef21barow9_col2{\n",
        "            background-color:  #e0deed;\n",
        "            color:  #000000;\n",
        "        }#T_60420dda_057e_11eb_a35b_525400ef21barow2_col11,#T_60420dda_057e_11eb_a35b_525400ef21barow3_col11,#T_60420dda_057e_11eb_a35b_525400ef21barow11_col2,#T_60420dda_057e_11eb_a35b_525400ef21barow11_col3{\n",
        "            background-color:  #b4c4df;\n",
        "            color:  #000000;\n",
        "        }#T_60420dda_057e_11eb_a35b_525400ef21barow2_col13,#T_60420dda_057e_11eb_a35b_525400ef21barow13_col2{\n",
        "            background-color:  #f5eff6;\n",
        "            color:  #000000;\n",
        "        }#T_60420dda_057e_11eb_a35b_525400ef21barow2_col14,#T_60420dda_057e_11eb_a35b_525400ef21barow14_col2{\n",
        "            background-color:  #f1ebf4;\n",
        "            color:  #000000;\n",
        "        }#T_60420dda_057e_11eb_a35b_525400ef21barow2_col15,#T_60420dda_057e_11eb_a35b_525400ef21barow15_col2{\n",
        "            background-color:  #bbc7e0;\n",
        "            color:  #000000;\n",
        "        }#T_60420dda_057e_11eb_a35b_525400ef21barow2_col16,#T_60420dda_057e_11eb_a35b_525400ef21barow16_col2{\n",
        "            background-color:  #d2d3e7;\n",
        "            color:  #000000;\n",
        "        }#T_60420dda_057e_11eb_a35b_525400ef21barow3_col4,#T_60420dda_057e_11eb_a35b_525400ef21barow4_col3{\n",
        "            background-color:  #acc0dd;\n",
        "            color:  #000000;\n",
        "        }#T_60420dda_057e_11eb_a35b_525400ef21barow3_col5,#T_60420dda_057e_11eb_a35b_525400ef21barow5_col3{\n",
        "            background-color:  #d7d6e9;\n",
        "            color:  #000000;\n",
        "        }#T_60420dda_057e_11eb_a35b_525400ef21barow3_col7,#T_60420dda_057e_11eb_a35b_525400ef21barow7_col3{\n",
        "            background-color:  #f1ebf5;\n",
        "            color:  #000000;\n",
        "        }#T_60420dda_057e_11eb_a35b_525400ef21barow3_col9,#T_60420dda_057e_11eb_a35b_525400ef21barow9_col3{\n",
        "            background-color:  #e1dfed;\n",
        "            color:  #000000;\n",
        "        }#T_60420dda_057e_11eb_a35b_525400ef21barow3_col13,#T_60420dda_057e_11eb_a35b_525400ef21barow13_col3{\n",
        "            background-color:  #f8f1f8;\n",
        "            color:  #000000;\n",
        "        }#T_60420dda_057e_11eb_a35b_525400ef21barow3_col14,#T_60420dda_057e_11eb_a35b_525400ef21barow14_col3{\n",
        "            background-color:  #fff7fb;\n",
        "            color:  #000000;\n",
        "        }#T_60420dda_057e_11eb_a35b_525400ef21barow3_col16,#T_60420dda_057e_11eb_a35b_525400ef21barow16_col3{\n",
        "            background-color:  #ced0e6;\n",
        "            color:  #000000;\n",
        "        }#T_60420dda_057e_11eb_a35b_525400ef21barow4_col5,#T_60420dda_057e_11eb_a35b_525400ef21barow5_col4{\n",
        "            background-color:  #89b1d4;\n",
        "            color:  #000000;\n",
        "        }#T_60420dda_057e_11eb_a35b_525400ef21barow4_col6,#T_60420dda_057e_11eb_a35b_525400ef21barow6_col4{\n",
        "            background-color:  #b5c4df;\n",
        "            color:  #000000;\n",
        "        }#T_60420dda_057e_11eb_a35b_525400ef21barow4_col7,#T_60420dda_057e_11eb_a35b_525400ef21barow7_col4{\n",
        "            background-color:  #a4bcda;\n",
        "            color:  #000000;\n",
        "        }#T_60420dda_057e_11eb_a35b_525400ef21barow4_col10,#T_60420dda_057e_11eb_a35b_525400ef21barow10_col4{\n",
        "            background-color:  #a9bfdc;\n",
        "            color:  #000000;\n",
        "        }#T_60420dda_057e_11eb_a35b_525400ef21barow4_col12,#T_60420dda_057e_11eb_a35b_525400ef21barow12_col4{\n",
        "            background-color:  #d1d2e6;\n",
        "            color:  #000000;\n",
        "        }#T_60420dda_057e_11eb_a35b_525400ef21barow4_col13,#T_60420dda_057e_11eb_a35b_525400ef21barow13_col4{\n",
        "            background-color:  #a8bedc;\n",
        "            color:  #000000;\n",
        "        }#T_60420dda_057e_11eb_a35b_525400ef21barow4_col14,#T_60420dda_057e_11eb_a35b_525400ef21barow14_col4{\n",
        "            background-color:  #d6d6e9;\n",
        "            color:  #000000;\n",
        "        }#T_60420dda_057e_11eb_a35b_525400ef21barow4_col15,#T_60420dda_057e_11eb_a35b_525400ef21barow15_col4{\n",
        "            background-color:  #93b5d6;\n",
        "            color:  #000000;\n",
        "        }#T_60420dda_057e_11eb_a35b_525400ef21barow4_col16,#T_60420dda_057e_11eb_a35b_525400ef21barow16_col4{\n",
        "            background-color:  #9fbad9;\n",
        "            color:  #000000;\n",
        "        }#T_60420dda_057e_11eb_a35b_525400ef21barow5_col6,#T_60420dda_057e_11eb_a35b_525400ef21barow6_col5{\n",
        "            background-color:  #0566a0;\n",
        "            color:  #f1f1f1;\n",
        "        }#T_60420dda_057e_11eb_a35b_525400ef21barow5_col7,#T_60420dda_057e_11eb_a35b_525400ef21barow7_col5{\n",
        "            background-color:  #046198;\n",
        "            color:  #f1f1f1;\n",
        "        }#T_60420dda_057e_11eb_a35b_525400ef21barow5_col8,#T_60420dda_057e_11eb_a35b_525400ef21barow8_col5{\n",
        "            background-color:  #0f76b3;\n",
        "            color:  #f1f1f1;\n",
        "        }#T_60420dda_057e_11eb_a35b_525400ef21barow5_col9,#T_60420dda_057e_11eb_a35b_525400ef21barow9_col5{\n",
        "            background-color:  #1379b5;\n",
        "            color:  #f1f1f1;\n",
        "        }#T_60420dda_057e_11eb_a35b_525400ef21barow5_col10,#T_60420dda_057e_11eb_a35b_525400ef21barow6_col11,#T_60420dda_057e_11eb_a35b_525400ef21barow10_col5,#T_60420dda_057e_11eb_a35b_525400ef21barow11_col6,#T_60420dda_057e_11eb_a35b_525400ef21barow12_col14,#T_60420dda_057e_11eb_a35b_525400ef21barow14_col12{\n",
        "            background-color:  #187cb6;\n",
        "            color:  #000000;\n",
        "        }#T_60420dda_057e_11eb_a35b_525400ef21barow5_col11,#T_60420dda_057e_11eb_a35b_525400ef21barow11_col5{\n",
        "            background-color:  #2383ba;\n",
        "            color:  #000000;\n",
        "        }#T_60420dda_057e_11eb_a35b_525400ef21barow5_col12,#T_60420dda_057e_11eb_a35b_525400ef21barow12_col5,#T_60420dda_057e_11eb_a35b_525400ef21barow15_col16,#T_60420dda_057e_11eb_a35b_525400ef21barow16_col15{\n",
        "            background-color:  #4094c3;\n",
        "            color:  #000000;\n",
        "        }#T_60420dda_057e_11eb_a35b_525400ef21barow5_col13,#T_60420dda_057e_11eb_a35b_525400ef21barow13_col5{\n",
        "            background-color:  #056aa6;\n",
        "            color:  #f1f1f1;\n",
        "        }#T_60420dda_057e_11eb_a35b_525400ef21barow5_col14,#T_60420dda_057e_11eb_a35b_525400ef21barow14_col5{\n",
        "            background-color:  #2f8bbe;\n",
        "            color:  #000000;\n",
        "        }#T_60420dda_057e_11eb_a35b_525400ef21barow5_col15,#T_60420dda_057e_11eb_a35b_525400ef21barow15_col5{\n",
        "            background-color:  #7bacd1;\n",
        "            color:  #000000;\n",
        "        }#T_60420dda_057e_11eb_a35b_525400ef21barow5_col16,#T_60420dda_057e_11eb_a35b_525400ef21barow16_col5{\n",
        "            background-color:  #045b8e;\n",
        "            color:  #f1f1f1;\n",
        "        }#T_60420dda_057e_11eb_a35b_525400ef21barow6_col7,#T_60420dda_057e_11eb_a35b_525400ef21barow7_col6{\n",
        "            background-color:  #04649e;\n",
        "            color:  #f1f1f1;\n",
        "        }#T_60420dda_057e_11eb_a35b_525400ef21barow6_col8,#T_60420dda_057e_11eb_a35b_525400ef21barow8_col6{\n",
        "            background-color:  #056ba9;\n",
        "            color:  #f1f1f1;\n",
        "        }#T_60420dda_057e_11eb_a35b_525400ef21barow6_col9,#T_60420dda_057e_11eb_a35b_525400ef21barow9_col6{\n",
        "            background-color:  #0570b0;\n",
        "            color:  #f1f1f1;\n",
        "        }#T_60420dda_057e_11eb_a35b_525400ef21barow6_col10,#T_60420dda_057e_11eb_a35b_525400ef21barow10_col6{\n",
        "            background-color:  #0a73b2;\n",
        "            color:  #f1f1f1;\n",
        "        }#T_60420dda_057e_11eb_a35b_525400ef21barow6_col12,#T_60420dda_057e_11eb_a35b_525400ef21barow12_col6{\n",
        "            background-color:  #308cbe;\n",
        "            color:  #000000;\n",
        "        }#T_60420dda_057e_11eb_a35b_525400ef21barow6_col13,#T_60420dda_057e_11eb_a35b_525400ef21barow8_col9,#T_60420dda_057e_11eb_a35b_525400ef21barow9_col8,#T_60420dda_057e_11eb_a35b_525400ef21barow10_col16,#T_60420dda_057e_11eb_a35b_525400ef21barow13_col6,#T_60420dda_057e_11eb_a35b_525400ef21barow16_col10{\n",
        "            background-color:  #045e94;\n",
        "            color:  #f1f1f1;\n",
        "        }#T_60420dda_057e_11eb_a35b_525400ef21barow6_col14,#T_60420dda_057e_11eb_a35b_525400ef21barow14_col6{\n",
        "            background-color:  #2d8abd;\n",
        "            color:  #000000;\n",
        "        }#T_60420dda_057e_11eb_a35b_525400ef21barow6_col15,#T_60420dda_057e_11eb_a35b_525400ef21barow15_col6{\n",
        "            background-color:  #62a2cb;\n",
        "            color:  #000000;\n",
        "        }#T_60420dda_057e_11eb_a35b_525400ef21barow6_col16,#T_60420dda_057e_11eb_a35b_525400ef21barow16_col6{\n",
        "            background-color:  #03517e;\n",
        "            color:  #f1f1f1;\n",
        "        }#T_60420dda_057e_11eb_a35b_525400ef21barow7_col8,#T_60420dda_057e_11eb_a35b_525400ef21barow8_col7,#T_60420dda_057e_11eb_a35b_525400ef21barow8_col10,#T_60420dda_057e_11eb_a35b_525400ef21barow10_col8{\n",
        "            background-color:  #056faf;\n",
        "            color:  #f1f1f1;\n",
        "        }#T_60420dda_057e_11eb_a35b_525400ef21barow7_col9,#T_60420dda_057e_11eb_a35b_525400ef21barow8_col12,#T_60420dda_057e_11eb_a35b_525400ef21barow8_col14,#T_60420dda_057e_11eb_a35b_525400ef21barow9_col7,#T_60420dda_057e_11eb_a35b_525400ef21barow12_col8,#T_60420dda_057e_11eb_a35b_525400ef21barow14_col8{\n",
        "            background-color:  #2685bb;\n",
        "            color:  #000000;\n",
        "        }#T_60420dda_057e_11eb_a35b_525400ef21barow7_col10,#T_60420dda_057e_11eb_a35b_525400ef21barow7_col11,#T_60420dda_057e_11eb_a35b_525400ef21barow9_col13,#T_60420dda_057e_11eb_a35b_525400ef21barow10_col7,#T_60420dda_057e_11eb_a35b_525400ef21barow11_col7,#T_60420dda_057e_11eb_a35b_525400ef21barow13_col9{\n",
        "            background-color:  #2a88bc;\n",
        "            color:  #000000;\n",
        "        }#T_60420dda_057e_11eb_a35b_525400ef21barow7_col12,#T_60420dda_057e_11eb_a35b_525400ef21barow12_col7{\n",
        "            background-color:  #2484ba;\n",
        "            color:  #000000;\n",
        "        }#T_60420dda_057e_11eb_a35b_525400ef21barow7_col13,#T_60420dda_057e_11eb_a35b_525400ef21barow13_col7{\n",
        "            background-color:  #045382;\n",
        "            color:  #f1f1f1;\n",
        "        }#T_60420dda_057e_11eb_a35b_525400ef21barow7_col14,#T_60420dda_057e_11eb_a35b_525400ef21barow12_col16,#T_60420dda_057e_11eb_a35b_525400ef21barow14_col7,#T_60420dda_057e_11eb_a35b_525400ef21barow16_col12{\n",
        "            background-color:  #0771b1;\n",
        "            color:  #f1f1f1;\n",
        "        }#T_60420dda_057e_11eb_a35b_525400ef21barow7_col15,#T_60420dda_057e_11eb_a35b_525400ef21barow15_col7{\n",
        "            background-color:  #1b7eb7;\n",
        "            color:  #000000;\n",
        "        }#T_60420dda_057e_11eb_a35b_525400ef21barow7_col16,#T_60420dda_057e_11eb_a35b_525400ef21barow16_col7{\n",
        "            background-color:  #045a8d;\n",
        "            color:  #f1f1f1;\n",
        "        }#T_60420dda_057e_11eb_a35b_525400ef21barow8_col11,#T_60420dda_057e_11eb_a35b_525400ef21barow11_col8{\n",
        "            background-color:  #04639b;\n",
        "            color:  #f1f1f1;\n",
        "        }#T_60420dda_057e_11eb_a35b_525400ef21barow8_col13,#T_60420dda_057e_11eb_a35b_525400ef21barow13_col8{\n",
        "            background-color:  #056dab;\n",
        "            color:  #f1f1f1;\n",
        "        }#T_60420dda_057e_11eb_a35b_525400ef21barow8_col15,#T_60420dda_057e_11eb_a35b_525400ef21barow15_col8{\n",
        "            background-color:  #7eadd1;\n",
        "            color:  #000000;\n",
        "        }#T_60420dda_057e_11eb_a35b_525400ef21barow8_col16,#T_60420dda_057e_11eb_a35b_525400ef21barow16_col8{\n",
        "            background-color:  #045483;\n",
        "            color:  #f1f1f1;\n",
        "        }#T_60420dda_057e_11eb_a35b_525400ef21barow9_col10,#T_60420dda_057e_11eb_a35b_525400ef21barow10_col9{\n",
        "            background-color:  #056fae;\n",
        "            color:  #f1f1f1;\n",
        "        }#T_60420dda_057e_11eb_a35b_525400ef21barow9_col11,#T_60420dda_057e_11eb_a35b_525400ef21barow11_col9{\n",
        "            background-color:  #05659f;\n",
        "            color:  #f1f1f1;\n",
        "        }#T_60420dda_057e_11eb_a35b_525400ef21barow9_col12,#T_60420dda_057e_11eb_a35b_525400ef21barow11_col13,#T_60420dda_057e_11eb_a35b_525400ef21barow12_col9,#T_60420dda_057e_11eb_a35b_525400ef21barow13_col11{\n",
        "            background-color:  #3b92c1;\n",
        "            color:  #000000;\n",
        "        }#T_60420dda_057e_11eb_a35b_525400ef21barow9_col14,#T_60420dda_057e_11eb_a35b_525400ef21barow14_col9{\n",
        "            background-color:  #348ebf;\n",
        "            color:  #000000;\n",
        "        }#T_60420dda_057e_11eb_a35b_525400ef21barow10_col11,#T_60420dda_057e_11eb_a35b_525400ef21barow11_col10,#T_60420dda_057e_11eb_a35b_525400ef21barow13_col16,#T_60420dda_057e_11eb_a35b_525400ef21barow16_col13{\n",
        "            background-color:  #045d92;\n",
        "            color:  #f1f1f1;\n",
        "        }#T_60420dda_057e_11eb_a35b_525400ef21barow10_col12,#T_60420dda_057e_11eb_a35b_525400ef21barow12_col10{\n",
        "            background-color:  #1c7fb8;\n",
        "            color:  #000000;\n",
        "        }#T_60420dda_057e_11eb_a35b_525400ef21barow10_col13,#T_60420dda_057e_11eb_a35b_525400ef21barow13_col10{\n",
        "            background-color:  #4897c4;\n",
        "            color:  #000000;\n",
        "        }#T_60420dda_057e_11eb_a35b_525400ef21barow10_col14,#T_60420dda_057e_11eb_a35b_525400ef21barow14_col10{\n",
        "            background-color:  #6fa7ce;\n",
        "            color:  #000000;\n",
        "        }#T_60420dda_057e_11eb_a35b_525400ef21barow10_col15,#T_60420dda_057e_11eb_a35b_525400ef21barow15_col10{\n",
        "            background-color:  #69a5cc;\n",
        "            color:  #000000;\n",
        "        }#T_60420dda_057e_11eb_a35b_525400ef21barow11_col12,#T_60420dda_057e_11eb_a35b_525400ef21barow12_col11,#T_60420dda_057e_11eb_a35b_525400ef21barow12_col13,#T_60420dda_057e_11eb_a35b_525400ef21barow13_col12,#T_60420dda_057e_11eb_a35b_525400ef21barow14_col16,#T_60420dda_057e_11eb_a35b_525400ef21barow16_col14{\n",
        "            background-color:  #2c89bd;\n",
        "            color:  #000000;\n",
        "        }#T_60420dda_057e_11eb_a35b_525400ef21barow11_col14,#T_60420dda_057e_11eb_a35b_525400ef21barow14_col11{\n",
        "            background-color:  #60a1ca;\n",
        "            color:  #000000;\n",
        "        }#T_60420dda_057e_11eb_a35b_525400ef21barow11_col15,#T_60420dda_057e_11eb_a35b_525400ef21barow15_col11{\n",
        "            background-color:  #8bb2d4;\n",
        "            color:  #000000;\n",
        "        }#T_60420dda_057e_11eb_a35b_525400ef21barow12_col15,#T_60420dda_057e_11eb_a35b_525400ef21barow15_col12{\n",
        "            background-color:  #2786bb;\n",
        "            color:  #000000;\n",
        "        }#T_60420dda_057e_11eb_a35b_525400ef21barow13_col14,#T_60420dda_057e_11eb_a35b_525400ef21barow14_col13{\n",
        "            background-color:  #056caa;\n",
        "            color:  #f1f1f1;\n",
        "        }#T_60420dda_057e_11eb_a35b_525400ef21barow13_col15,#T_60420dda_057e_11eb_a35b_525400ef21barow15_col13{\n",
        "            background-color:  #197db7;\n",
        "            color:  #000000;\n",
        "        }#T_60420dda_057e_11eb_a35b_525400ef21barow14_col15,#T_60420dda_057e_11eb_a35b_525400ef21barow15_col14{\n",
        "            background-color:  #4697c4;\n",
        "            color:  #000000;\n",
        "        }</style><table id=\"T_60420dda_057e_11eb_a35b_525400ef21ba\" ><thead>    <tr>        <th class=\"blank level0\" ></th>        <th class=\"col_heading level0 col0\" >Rt</th>        <th class=\"col_heading level0 col1\" >theta</th>        <th class=\"col_heading level0 col2\" >kappa</th>        <th class=\"col_heading level0 col3\" >rho</th>        <th class=\"col_heading level0 col4\" >sigma</th>        <th class=\"col_heading level0 col5\" >School_closing</th>        <th class=\"col_heading level0 col6\" >Workplace_closing</th>        <th class=\"col_heading level0 col7\" >Cancel_events</th>        <th class=\"col_heading level0 col8\" >Gatherings_restrictions</th>        <th class=\"col_heading level0 col9\" >Transport_closing</th>        <th class=\"col_heading level0 col10\" >Stay_home_restrictions</th>        <th class=\"col_heading level0 col11\" >Internal_movement_restrictions</th>        <th class=\"col_heading level0 col12\" >International_movement_restrictions</th>        <th class=\"col_heading level0 col13\" >Information_campaigns</th>        <th class=\"col_heading level0 col14\" >Testing_policy</th>        <th class=\"col_heading level0 col15\" >Contact_tracing</th>        <th class=\"col_heading level0 col16\" >Stringency_index</th>    </tr></thead><tbody>\n",
        "                <tr>\n",
        "                        <th id=\"T_60420dda_057e_11eb_a35b_525400ef21balevel0_row0\" class=\"row_heading level0 row0\" >Rt</th>\n",
        "                        <td id=\"T_60420dda_057e_11eb_a35b_525400ef21barow0_col0\" class=\"data row0 col0\" >1.000000</td>\n",
        "                        <td id=\"T_60420dda_057e_11eb_a35b_525400ef21barow0_col1\" class=\"data row0 col1\" >-0.234310</td>\n",
        "                        <td id=\"T_60420dda_057e_11eb_a35b_525400ef21barow0_col2\" class=\"data row0 col2\" >-0.224769</td>\n",
        "                        <td id=\"T_60420dda_057e_11eb_a35b_525400ef21barow0_col3\" class=\"data row0 col3\" >0.171010</td>\n",
        "                        <td id=\"T_60420dda_057e_11eb_a35b_525400ef21barow0_col4\" class=\"data row0 col4\" >-0.211672</td>\n",
        "                        <td id=\"T_60420dda_057e_11eb_a35b_525400ef21barow0_col5\" class=\"data row0 col5\" >-0.026614</td>\n",
        "                        <td id=\"T_60420dda_057e_11eb_a35b_525400ef21barow0_col6\" class=\"data row0 col6\" >0.082042</td>\n",
        "                        <td id=\"T_60420dda_057e_11eb_a35b_525400ef21barow0_col7\" class=\"data row0 col7\" >-0.124309</td>\n",
        "                        <td id=\"T_60420dda_057e_11eb_a35b_525400ef21barow0_col8\" class=\"data row0 col8\" >0.044819</td>\n",
        "                        <td id=\"T_60420dda_057e_11eb_a35b_525400ef21barow0_col9\" class=\"data row0 col9\" >-0.077768</td>\n",
        "                        <td id=\"T_60420dda_057e_11eb_a35b_525400ef21barow0_col10\" class=\"data row0 col10\" >-0.121377</td>\n",
        "                        <td id=\"T_60420dda_057e_11eb_a35b_525400ef21barow0_col11\" class=\"data row0 col11\" >-0.056005</td>\n",
        "                        <td id=\"T_60420dda_057e_11eb_a35b_525400ef21barow0_col12\" class=\"data row0 col12\" >-0.144261</td>\n",
        "                        <td id=\"T_60420dda_057e_11eb_a35b_525400ef21barow0_col13\" class=\"data row0 col13\" >0.002834</td>\n",
        "                        <td id=\"T_60420dda_057e_11eb_a35b_525400ef21barow0_col14\" class=\"data row0 col14\" >-0.070509</td>\n",
        "                        <td id=\"T_60420dda_057e_11eb_a35b_525400ef21barow0_col15\" class=\"data row0 col15\" >-0.157607</td>\n",
        "                        <td id=\"T_60420dda_057e_11eb_a35b_525400ef21barow0_col16\" class=\"data row0 col16\" >-0.031072</td>\n",
        "            </tr>\n",
        "            <tr>\n",
        "                        <th id=\"T_60420dda_057e_11eb_a35b_525400ef21balevel0_row1\" class=\"row_heading level0 row1\" >theta</th>\n",
        "                        <td id=\"T_60420dda_057e_11eb_a35b_525400ef21barow1_col0\" class=\"data row1 col0\" >-0.234310</td>\n",
        "                        <td id=\"T_60420dda_057e_11eb_a35b_525400ef21barow1_col1\" class=\"data row1 col1\" >1.000000</td>\n",
        "                        <td id=\"T_60420dda_057e_11eb_a35b_525400ef21barow1_col2\" class=\"data row1 col2\" >0.984288</td>\n",
        "                        <td id=\"T_60420dda_057e_11eb_a35b_525400ef21barow1_col3\" class=\"data row1 col3\" >0.772745</td>\n",
        "                        <td id=\"T_60420dda_057e_11eb_a35b_525400ef21barow1_col4\" class=\"data row1 col4\" >-0.035861</td>\n",
        "                        <td id=\"T_60420dda_057e_11eb_a35b_525400ef21barow1_col5\" class=\"data row1 col5\" >-0.190947</td>\n",
        "                        <td id=\"T_60420dda_057e_11eb_a35b_525400ef21barow1_col6\" class=\"data row1 col6\" >-0.118247</td>\n",
        "                        <td id=\"T_60420dda_057e_11eb_a35b_525400ef21barow1_col7\" class=\"data row1 col7\" >-0.265970</td>\n",
        "                        <td id=\"T_60420dda_057e_11eb_a35b_525400ef21barow1_col8\" class=\"data row1 col8\" >-0.173815</td>\n",
        "                        <td id=\"T_60420dda_057e_11eb_a35b_525400ef21barow1_col9\" class=\"data row1 col9\" >-0.196572</td>\n",
        "                        <td id=\"T_60420dda_057e_11eb_a35b_525400ef21barow1_col10\" class=\"data row1 col10\" >0.220727</td>\n",
        "                        <td id=\"T_60420dda_057e_11eb_a35b_525400ef21barow1_col11\" class=\"data row1 col11\" >0.041658</td>\n",
        "                        <td id=\"T_60420dda_057e_11eb_a35b_525400ef21barow1_col12\" class=\"data row1 col12\" >0.205338</td>\n",
        "                        <td id=\"T_60420dda_057e_11eb_a35b_525400ef21barow1_col13\" class=\"data row1 col13\" >-0.347096</td>\n",
        "                        <td id=\"T_60420dda_057e_11eb_a35b_525400ef21barow1_col14\" class=\"data row1 col14\" >-0.358858</td>\n",
        "                        <td id=\"T_60420dda_057e_11eb_a35b_525400ef21barow1_col15\" class=\"data row1 col15\" >-0.003698</td>\n",
        "                        <td id=\"T_60420dda_057e_11eb_a35b_525400ef21barow1_col16\" class=\"data row1 col16\" >-0.079354</td>\n",
        "            </tr>\n",
        "            <tr>\n",
        "                        <th id=\"T_60420dda_057e_11eb_a35b_525400ef21balevel0_row2\" class=\"row_heading level0 row2\" >kappa</th>\n",
        "                        <td id=\"T_60420dda_057e_11eb_a35b_525400ef21barow2_col0\" class=\"data row2 col0\" >-0.224769</td>\n",
        "                        <td id=\"T_60420dda_057e_11eb_a35b_525400ef21barow2_col1\" class=\"data row2 col1\" >0.984288</td>\n",
        "                        <td id=\"T_60420dda_057e_11eb_a35b_525400ef21barow2_col2\" class=\"data row2 col2\" >1.000000</td>\n",
        "                        <td id=\"T_60420dda_057e_11eb_a35b_525400ef21barow2_col3\" class=\"data row2 col3\" >0.767279</td>\n",
        "                        <td id=\"T_60420dda_057e_11eb_a35b_525400ef21barow2_col4\" class=\"data row2 col4\" >-0.090703</td>\n",
        "                        <td id=\"T_60420dda_057e_11eb_a35b_525400ef21barow2_col5\" class=\"data row2 col5\" >-0.219915</td>\n",
        "                        <td id=\"T_60420dda_057e_11eb_a35b_525400ef21barow2_col6\" class=\"data row2 col6\" >-0.156113</td>\n",
        "                        <td id=\"T_60420dda_057e_11eb_a35b_525400ef21barow2_col7\" class=\"data row2 col7\" >-0.285147</td>\n",
        "                        <td id=\"T_60420dda_057e_11eb_a35b_525400ef21barow2_col8\" class=\"data row2 col8\" >-0.176906</td>\n",
        "                        <td id=\"T_60420dda_057e_11eb_a35b_525400ef21barow2_col9\" class=\"data row2 col9\" >-0.199705</td>\n",
        "                        <td id=\"T_60420dda_057e_11eb_a35b_525400ef21barow2_col10\" class=\"data row2 col10\" >0.206709</td>\n",
        "                        <td id=\"T_60420dda_057e_11eb_a35b_525400ef21barow2_col11\" class=\"data row2 col11\" >0.030572</td>\n",
        "                        <td id=\"T_60420dda_057e_11eb_a35b_525400ef21barow2_col12\" class=\"data row2 col12\" >0.223622</td>\n",
        "                        <td id=\"T_60420dda_057e_11eb_a35b_525400ef21barow2_col13\" class=\"data row2 col13\" >-0.363427</td>\n",
        "                        <td id=\"T_60420dda_057e_11eb_a35b_525400ef21barow2_col14\" class=\"data row2 col14\" >-0.318059</td>\n",
        "                        <td id=\"T_60420dda_057e_11eb_a35b_525400ef21barow2_col15\" class=\"data row2 col15\" >0.001776</td>\n",
        "                        <td id=\"T_60420dda_057e_11eb_a35b_525400ef21barow2_col16\" class=\"data row2 col16\" >-0.110775</td>\n",
        "            </tr>\n",
        "            <tr>\n",
        "                        <th id=\"T_60420dda_057e_11eb_a35b_525400ef21balevel0_row3\" class=\"row_heading level0 row3\" >rho</th>\n",
        "                        <td id=\"T_60420dda_057e_11eb_a35b_525400ef21barow3_col0\" class=\"data row3 col0\" >0.171010</td>\n",
        "                        <td id=\"T_60420dda_057e_11eb_a35b_525400ef21barow3_col1\" class=\"data row3 col1\" >0.772745</td>\n",
        "                        <td id=\"T_60420dda_057e_11eb_a35b_525400ef21barow3_col2\" class=\"data row3 col2\" >0.767279</td>\n",
        "                        <td id=\"T_60420dda_057e_11eb_a35b_525400ef21barow3_col3\" class=\"data row3 col3\" >1.000000</td>\n",
        "                        <td id=\"T_60420dda_057e_11eb_a35b_525400ef21barow3_col4\" class=\"data row3 col4\" >0.061880</td>\n",
        "                        <td id=\"T_60420dda_057e_11eb_a35b_525400ef21barow3_col5\" class=\"data row3 col5\" >-0.139180</td>\n",
        "                        <td id=\"T_60420dda_057e_11eb_a35b_525400ef21barow3_col6\" class=\"data row3 col6\" >-0.092915</td>\n",
        "                        <td id=\"T_60420dda_057e_11eb_a35b_525400ef21barow3_col7\" class=\"data row3 col7\" >-0.324376</td>\n",
        "                        <td id=\"T_60420dda_057e_11eb_a35b_525400ef21barow3_col8\" class=\"data row3 col8\" >-0.145887</td>\n",
        "                        <td id=\"T_60420dda_057e_11eb_a35b_525400ef21barow3_col9\" class=\"data row3 col9\" >-0.206597</td>\n",
        "                        <td id=\"T_60420dda_057e_11eb_a35b_525400ef21barow3_col10\" class=\"data row3 col10\" >0.203053</td>\n",
        "                        <td id=\"T_60420dda_057e_11eb_a35b_525400ef21barow3_col11\" class=\"data row3 col11\" >0.027279</td>\n",
        "                        <td id=\"T_60420dda_057e_11eb_a35b_525400ef21barow3_col12\" class=\"data row3 col12\" >0.045358</td>\n",
        "                        <td id=\"T_60420dda_057e_11eb_a35b_525400ef21barow3_col13\" class=\"data row3 col13\" >-0.385570</td>\n",
        "                        <td id=\"T_60420dda_057e_11eb_a35b_525400ef21barow3_col14\" class=\"data row3 col14\" >-0.459625</td>\n",
        "                        <td id=\"T_60420dda_057e_11eb_a35b_525400ef21barow3_col15\" class=\"data row3 col15\" >-0.123230</td>\n",
        "                        <td id=\"T_60420dda_057e_11eb_a35b_525400ef21barow3_col16\" class=\"data row3 col16\" >-0.087237</td>\n",
        "            </tr>\n",
        "            <tr>\n",
        "                        <th id=\"T_60420dda_057e_11eb_a35b_525400ef21balevel0_row4\" class=\"row_heading level0 row4\" >sigma</th>\n",
        "                        <td id=\"T_60420dda_057e_11eb_a35b_525400ef21barow4_col0\" class=\"data row4 col0\" >-0.211672</td>\n",
        "                        <td id=\"T_60420dda_057e_11eb_a35b_525400ef21barow4_col1\" class=\"data row4 col1\" >-0.035861</td>\n",
        "                        <td id=\"T_60420dda_057e_11eb_a35b_525400ef21barow4_col2\" class=\"data row4 col2\" >-0.090703</td>\n",
        "                        <td id=\"T_60420dda_057e_11eb_a35b_525400ef21barow4_col3\" class=\"data row4 col3\" >0.061880</td>\n",
        "                        <td id=\"T_60420dda_057e_11eb_a35b_525400ef21barow4_col4\" class=\"data row4 col4\" >1.000000</td>\n",
        "                        <td id=\"T_60420dda_057e_11eb_a35b_525400ef21barow4_col5\" class=\"data row4 col5\" >0.195183</td>\n",
        "                        <td id=\"T_60420dda_057e_11eb_a35b_525400ef21barow4_col6\" class=\"data row4 col6\" >0.023563</td>\n",
        "                        <td id=\"T_60420dda_057e_11eb_a35b_525400ef21barow4_col7\" class=\"data row4 col7\" >0.094328</td>\n",
        "                        <td id=\"T_60420dda_057e_11eb_a35b_525400ef21barow4_col8\" class=\"data row4 col8\" >-0.068011</td>\n",
        "                        <td id=\"T_60420dda_057e_11eb_a35b_525400ef21barow4_col9\" class=\"data row4 col9\" >0.006019</td>\n",
        "                        <td id=\"T_60420dda_057e_11eb_a35b_525400ef21barow4_col10\" class=\"data row4 col10\" >0.073954</td>\n",
        "                        <td id=\"T_60420dda_057e_11eb_a35b_525400ef21barow4_col11\" class=\"data row4 col11\" >-0.030763</td>\n",
        "                        <td id=\"T_60420dda_057e_11eb_a35b_525400ef21barow4_col12\" class=\"data row4 col12\" >-0.100131</td>\n",
        "                        <td id=\"T_60420dda_057e_11eb_a35b_525400ef21barow4_col13\" class=\"data row4 col13\" >0.077401</td>\n",
        "                        <td id=\"T_60420dda_057e_11eb_a35b_525400ef21barow4_col14\" class=\"data row4 col14\" >-0.132695</td>\n",
        "                        <td id=\"T_60420dda_057e_11eb_a35b_525400ef21barow4_col15\" class=\"data row4 col15\" >0.159889</td>\n",
        "                        <td id=\"T_60420dda_057e_11eb_a35b_525400ef21barow4_col16\" class=\"data row4 col16\" >0.113421</td>\n",
        "            </tr>\n",
        "            <tr>\n",
        "                        <th id=\"T_60420dda_057e_11eb_a35b_525400ef21balevel0_row5\" class=\"row_heading level0 row5\" >School_closing</th>\n",
        "                        <td id=\"T_60420dda_057e_11eb_a35b_525400ef21barow5_col0\" class=\"data row5 col0\" >-0.026614</td>\n",
        "                        <td id=\"T_60420dda_057e_11eb_a35b_525400ef21barow5_col1\" class=\"data row5 col1\" >-0.190947</td>\n",
        "                        <td id=\"T_60420dda_057e_11eb_a35b_525400ef21barow5_col2\" class=\"data row5 col2\" >-0.219915</td>\n",
        "                        <td id=\"T_60420dda_057e_11eb_a35b_525400ef21barow5_col3\" class=\"data row5 col3\" >-0.139180</td>\n",
        "                        <td id=\"T_60420dda_057e_11eb_a35b_525400ef21barow5_col4\" class=\"data row5 col4\" >0.195183</td>\n",
        "                        <td id=\"T_60420dda_057e_11eb_a35b_525400ef21barow5_col5\" class=\"data row5 col5\" >1.000000</td>\n",
        "                        <td id=\"T_60420dda_057e_11eb_a35b_525400ef21barow5_col6\" class=\"data row5 col6\" >0.719238</td>\n",
        "                        <td id=\"T_60420dda_057e_11eb_a35b_525400ef21barow5_col7\" class=\"data row5 col7\" >0.760114</td>\n",
        "                        <td id=\"T_60420dda_057e_11eb_a35b_525400ef21barow5_col8\" class=\"data row5 col8\" >0.599290</td>\n",
        "                        <td id=\"T_60420dda_057e_11eb_a35b_525400ef21barow5_col9\" class=\"data row5 col9\" >0.579670</td>\n",
        "                        <td id=\"T_60420dda_057e_11eb_a35b_525400ef21barow5_col10\" class=\"data row5 col10\" >0.565262</td>\n",
        "                        <td id=\"T_60420dda_057e_11eb_a35b_525400ef21barow5_col11\" class=\"data row5 col11\" >0.525121</td>\n",
        "                        <td id=\"T_60420dda_057e_11eb_a35b_525400ef21barow5_col12\" class=\"data row5 col12\" >0.424014</td>\n",
        "                        <td id=\"T_60420dda_057e_11eb_a35b_525400ef21barow5_col13\" class=\"data row5 col13\" >0.680956</td>\n",
        "                        <td id=\"T_60420dda_057e_11eb_a35b_525400ef21barow5_col14\" class=\"data row5 col14\" >0.477977</td>\n",
        "                        <td id=\"T_60420dda_057e_11eb_a35b_525400ef21barow5_col15\" class=\"data row5 col15\" >0.245976</td>\n",
        "                        <td id=\"T_60420dda_057e_11eb_a35b_525400ef21barow5_col16\" class=\"data row5 col16\" >0.807458</td>\n",
        "            </tr>\n",
        "            <tr>\n",
        "                        <th id=\"T_60420dda_057e_11eb_a35b_525400ef21balevel0_row6\" class=\"row_heading level0 row6\" >Workplace_closing</th>\n",
        "                        <td id=\"T_60420dda_057e_11eb_a35b_525400ef21barow6_col0\" class=\"data row6 col0\" >0.082042</td>\n",
        "                        <td id=\"T_60420dda_057e_11eb_a35b_525400ef21barow6_col1\" class=\"data row6 col1\" >-0.118247</td>\n",
        "                        <td id=\"T_60420dda_057e_11eb_a35b_525400ef21barow6_col2\" class=\"data row6 col2\" >-0.156113</td>\n",
        "                        <td id=\"T_60420dda_057e_11eb_a35b_525400ef21barow6_col3\" class=\"data row6 col3\" >-0.092915</td>\n",
        "                        <td id=\"T_60420dda_057e_11eb_a35b_525400ef21barow6_col4\" class=\"data row6 col4\" >0.023563</td>\n",
        "                        <td id=\"T_60420dda_057e_11eb_a35b_525400ef21barow6_col5\" class=\"data row6 col5\" >0.719238</td>\n",
        "                        <td id=\"T_60420dda_057e_11eb_a35b_525400ef21barow6_col6\" class=\"data row6 col6\" >1.000000</td>\n",
        "                        <td id=\"T_60420dda_057e_11eb_a35b_525400ef21barow6_col7\" class=\"data row6 col7\" >0.729849</td>\n",
        "                        <td id=\"T_60420dda_057e_11eb_a35b_525400ef21barow6_col8\" class=\"data row6 col8\" >0.671412</td>\n",
        "                        <td id=\"T_60420dda_057e_11eb_a35b_525400ef21barow6_col9\" class=\"data row6 col9\" >0.632899</td>\n",
        "                        <td id=\"T_60420dda_057e_11eb_a35b_525400ef21barow6_col10\" class=\"data row6 col10\" >0.613435</td>\n",
        "                        <td id=\"T_60420dda_057e_11eb_a35b_525400ef21barow6_col11\" class=\"data row6 col11\" >0.562375</td>\n",
        "                        <td id=\"T_60420dda_057e_11eb_a35b_525400ef21barow6_col12\" class=\"data row6 col12\" >0.474959</td>\n",
        "                        <td id=\"T_60420dda_057e_11eb_a35b_525400ef21barow6_col13\" class=\"data row6 col13\" >0.782677</td>\n",
        "                        <td id=\"T_60420dda_057e_11eb_a35b_525400ef21barow6_col14\" class=\"data row6 col14\" >0.484311</td>\n",
        "                        <td id=\"T_60420dda_057e_11eb_a35b_525400ef21barow6_col15\" class=\"data row6 col15\" >0.326147</td>\n",
        "                        <td id=\"T_60420dda_057e_11eb_a35b_525400ef21barow6_col16\" class=\"data row6 col16\" >0.863284</td>\n",
        "            </tr>\n",
        "            <tr>\n",
        "                        <th id=\"T_60420dda_057e_11eb_a35b_525400ef21balevel0_row7\" class=\"row_heading level0 row7\" >Cancel_events</th>\n",
        "                        <td id=\"T_60420dda_057e_11eb_a35b_525400ef21barow7_col0\" class=\"data row7 col0\" >-0.124309</td>\n",
        "                        <td id=\"T_60420dda_057e_11eb_a35b_525400ef21barow7_col1\" class=\"data row7 col1\" >-0.265970</td>\n",
        "                        <td id=\"T_60420dda_057e_11eb_a35b_525400ef21barow7_col2\" class=\"data row7 col2\" >-0.285147</td>\n",
        "                        <td id=\"T_60420dda_057e_11eb_a35b_525400ef21barow7_col3\" class=\"data row7 col3\" >-0.324376</td>\n",
        "                        <td id=\"T_60420dda_057e_11eb_a35b_525400ef21barow7_col4\" class=\"data row7 col4\" >0.094328</td>\n",
        "                        <td id=\"T_60420dda_057e_11eb_a35b_525400ef21barow7_col5\" class=\"data row7 col5\" >0.760114</td>\n",
        "                        <td id=\"T_60420dda_057e_11eb_a35b_525400ef21barow7_col6\" class=\"data row7 col6\" >0.729849</td>\n",
        "                        <td id=\"T_60420dda_057e_11eb_a35b_525400ef21barow7_col7\" class=\"data row7 col7\" >1.000000</td>\n",
        "                        <td id=\"T_60420dda_057e_11eb_a35b_525400ef21barow7_col8\" class=\"data row7 col8\" >0.637193</td>\n",
        "                        <td id=\"T_60420dda_057e_11eb_a35b_525400ef21barow7_col9\" class=\"data row7 col9\" >0.513872</td>\n",
        "                        <td id=\"T_60420dda_057e_11eb_a35b_525400ef21barow7_col10\" class=\"data row7 col10\" >0.494208</td>\n",
        "                        <td id=\"T_60420dda_057e_11eb_a35b_525400ef21barow7_col11\" class=\"data row7 col11\" >0.493948</td>\n",
        "                        <td id=\"T_60420dda_057e_11eb_a35b_525400ef21barow7_col12\" class=\"data row7 col12\" >0.519242</td>\n",
        "                        <td id=\"T_60420dda_057e_11eb_a35b_525400ef21barow7_col13\" class=\"data row7 col13\" >0.854865</td>\n",
        "                        <td id=\"T_60420dda_057e_11eb_a35b_525400ef21barow7_col14\" class=\"data row7 col14\" >0.624316</td>\n",
        "                        <td id=\"T_60420dda_057e_11eb_a35b_525400ef21barow7_col15\" class=\"data row7 col15\" >0.552416</td>\n",
        "                        <td id=\"T_60420dda_057e_11eb_a35b_525400ef21barow7_col16\" class=\"data row7 col16\" >0.814207</td>\n",
        "            </tr>\n",
        "            <tr>\n",
        "                        <th id=\"T_60420dda_057e_11eb_a35b_525400ef21balevel0_row8\" class=\"row_heading level0 row8\" >Gatherings_restrictions</th>\n",
        "                        <td id=\"T_60420dda_057e_11eb_a35b_525400ef21barow8_col0\" class=\"data row8 col0\" >0.044819</td>\n",
        "                        <td id=\"T_60420dda_057e_11eb_a35b_525400ef21barow8_col1\" class=\"data row8 col1\" >-0.173815</td>\n",
        "                        <td id=\"T_60420dda_057e_11eb_a35b_525400ef21barow8_col2\" class=\"data row8 col2\" >-0.176906</td>\n",
        "                        <td id=\"T_60420dda_057e_11eb_a35b_525400ef21barow8_col3\" class=\"data row8 col3\" >-0.145887</td>\n",
        "                        <td id=\"T_60420dda_057e_11eb_a35b_525400ef21barow8_col4\" class=\"data row8 col4\" >-0.068011</td>\n",
        "                        <td id=\"T_60420dda_057e_11eb_a35b_525400ef21barow8_col5\" class=\"data row8 col5\" >0.599290</td>\n",
        "                        <td id=\"T_60420dda_057e_11eb_a35b_525400ef21barow8_col6\" class=\"data row8 col6\" >0.671412</td>\n",
        "                        <td id=\"T_60420dda_057e_11eb_a35b_525400ef21barow8_col7\" class=\"data row8 col7\" >0.637193</td>\n",
        "                        <td id=\"T_60420dda_057e_11eb_a35b_525400ef21barow8_col8\" class=\"data row8 col8\" >1.000000</td>\n",
        "                        <td id=\"T_60420dda_057e_11eb_a35b_525400ef21barow8_col9\" class=\"data row8 col9\" >0.781787</td>\n",
        "                        <td id=\"T_60420dda_057e_11eb_a35b_525400ef21barow8_col10\" class=\"data row8 col10\" >0.637604</td>\n",
        "                        <td id=\"T_60420dda_057e_11eb_a35b_525400ef21barow8_col11\" class=\"data row8 col11\" >0.738181</td>\n",
        "                        <td id=\"T_60420dda_057e_11eb_a35b_525400ef21barow8_col12\" class=\"data row8 col12\" >0.511583</td>\n",
        "                        <td id=\"T_60420dda_057e_11eb_a35b_525400ef21barow8_col13\" class=\"data row8 col13\" >0.662816</td>\n",
        "                        <td id=\"T_60420dda_057e_11eb_a35b_525400ef21barow8_col14\" class=\"data row8 col14\" >0.509739</td>\n",
        "                        <td id=\"T_60420dda_057e_11eb_a35b_525400ef21barow8_col15\" class=\"data row8 col15\" >0.233402</td>\n",
        "                        <td id=\"T_60420dda_057e_11eb_a35b_525400ef21barow8_col16\" class=\"data row8 col16\" >0.849331</td>\n",
        "            </tr>\n",
        "            <tr>\n",
        "                        <th id=\"T_60420dda_057e_11eb_a35b_525400ef21balevel0_row9\" class=\"row_heading level0 row9\" >Transport_closing</th>\n",
        "                        <td id=\"T_60420dda_057e_11eb_a35b_525400ef21barow9_col0\" class=\"data row9 col0\" >-0.077768</td>\n",
        "                        <td id=\"T_60420dda_057e_11eb_a35b_525400ef21barow9_col1\" class=\"data row9 col1\" >-0.196572</td>\n",
        "                        <td id=\"T_60420dda_057e_11eb_a35b_525400ef21barow9_col2\" class=\"data row9 col2\" >-0.199705</td>\n",
        "                        <td id=\"T_60420dda_057e_11eb_a35b_525400ef21barow9_col3\" class=\"data row9 col3\" >-0.206597</td>\n",
        "                        <td id=\"T_60420dda_057e_11eb_a35b_525400ef21barow9_col4\" class=\"data row9 col4\" >0.006019</td>\n",
        "                        <td id=\"T_60420dda_057e_11eb_a35b_525400ef21barow9_col5\" class=\"data row9 col5\" >0.579670</td>\n",
        "                        <td id=\"T_60420dda_057e_11eb_a35b_525400ef21barow9_col6\" class=\"data row9 col6\" >0.632899</td>\n",
        "                        <td id=\"T_60420dda_057e_11eb_a35b_525400ef21barow9_col7\" class=\"data row9 col7\" >0.513872</td>\n",
        "                        <td id=\"T_60420dda_057e_11eb_a35b_525400ef21barow9_col8\" class=\"data row9 col8\" >0.781787</td>\n",
        "                        <td id=\"T_60420dda_057e_11eb_a35b_525400ef21barow9_col9\" class=\"data row9 col9\" >1.000000</td>\n",
        "                        <td id=\"T_60420dda_057e_11eb_a35b_525400ef21barow9_col10\" class=\"data row9 col10\" >0.645726</td>\n",
        "                        <td id=\"T_60420dda_057e_11eb_a35b_525400ef21barow9_col11\" class=\"data row9 col11\" >0.724934</td>\n",
        "                        <td id=\"T_60420dda_057e_11eb_a35b_525400ef21barow9_col12\" class=\"data row9 col12\" >0.440078</td>\n",
        "                        <td id=\"T_60420dda_057e_11eb_a35b_525400ef21barow9_col13\" class=\"data row9 col13\" >0.492774</td>\n",
        "                        <td id=\"T_60420dda_057e_11eb_a35b_525400ef21barow9_col14\" class=\"data row9 col14\" >0.463272</td>\n",
        "                        <td id=\"T_60420dda_057e_11eb_a35b_525400ef21barow9_col15\" class=\"data row9 col15\" >0.041576</td>\n",
        "                        <td id=\"T_60420dda_057e_11eb_a35b_525400ef21barow9_col16\" class=\"data row9 col16\" >0.771300</td>\n",
        "            </tr>\n",
        "            <tr>\n",
        "                        <th id=\"T_60420dda_057e_11eb_a35b_525400ef21balevel0_row10\" class=\"row_heading level0 row10\" >Stay_home_restrictions</th>\n",
        "                        <td id=\"T_60420dda_057e_11eb_a35b_525400ef21barow10_col0\" class=\"data row10 col0\" >-0.121377</td>\n",
        "                        <td id=\"T_60420dda_057e_11eb_a35b_525400ef21barow10_col1\" class=\"data row10 col1\" >0.220727</td>\n",
        "                        <td id=\"T_60420dda_057e_11eb_a35b_525400ef21barow10_col2\" class=\"data row10 col2\" >0.206709</td>\n",
        "                        <td id=\"T_60420dda_057e_11eb_a35b_525400ef21barow10_col3\" class=\"data row10 col3\" >0.203053</td>\n",
        "                        <td id=\"T_60420dda_057e_11eb_a35b_525400ef21barow10_col4\" class=\"data row10 col4\" >0.073954</td>\n",
        "                        <td id=\"T_60420dda_057e_11eb_a35b_525400ef21barow10_col5\" class=\"data row10 col5\" >0.565262</td>\n",
        "                        <td id=\"T_60420dda_057e_11eb_a35b_525400ef21barow10_col6\" class=\"data row10 col6\" >0.613435</td>\n",
        "                        <td id=\"T_60420dda_057e_11eb_a35b_525400ef21barow10_col7\" class=\"data row10 col7\" >0.494208</td>\n",
        "                        <td id=\"T_60420dda_057e_11eb_a35b_525400ef21barow10_col8\" class=\"data row10 col8\" >0.637604</td>\n",
        "                        <td id=\"T_60420dda_057e_11eb_a35b_525400ef21barow10_col9\" class=\"data row10 col9\" >0.645726</td>\n",
        "                        <td id=\"T_60420dda_057e_11eb_a35b_525400ef21barow10_col10\" class=\"data row10 col10\" >1.000000</td>\n",
        "                        <td id=\"T_60420dda_057e_11eb_a35b_525400ef21barow10_col11\" class=\"data row10 col11\" >0.791315</td>\n",
        "                        <td id=\"T_60420dda_057e_11eb_a35b_525400ef21barow10_col12\" class=\"data row10 col12\" >0.546361</td>\n",
        "                        <td id=\"T_60420dda_057e_11eb_a35b_525400ef21barow10_col13\" class=\"data row10 col13\" >0.396421</td>\n",
        "                        <td id=\"T_60420dda_057e_11eb_a35b_525400ef21barow10_col14\" class=\"data row10 col14\" >0.282660</td>\n",
        "                        <td id=\"T_60420dda_057e_11eb_a35b_525400ef21barow10_col15\" class=\"data row10 col15\" >0.303915</td>\n",
        "                        <td id=\"T_60420dda_057e_11eb_a35b_525400ef21barow10_col16\" class=\"data row10 col16\" >0.781458</td>\n",
        "            </tr>\n",
        "            <tr>\n",
        "                        <th id=\"T_60420dda_057e_11eb_a35b_525400ef21balevel0_row11\" class=\"row_heading level0 row11\" >Internal_movement_restrictions</th>\n",
        "                        <td id=\"T_60420dda_057e_11eb_a35b_525400ef21barow11_col0\" class=\"data row11 col0\" >-0.056005</td>\n",
        "                        <td id=\"T_60420dda_057e_11eb_a35b_525400ef21barow11_col1\" class=\"data row11 col1\" >0.041658</td>\n",
        "                        <td id=\"T_60420dda_057e_11eb_a35b_525400ef21barow11_col2\" class=\"data row11 col2\" >0.030572</td>\n",
        "                        <td id=\"T_60420dda_057e_11eb_a35b_525400ef21barow11_col3\" class=\"data row11 col3\" >0.027279</td>\n",
        "                        <td id=\"T_60420dda_057e_11eb_a35b_525400ef21barow11_col4\" class=\"data row11 col4\" >-0.030763</td>\n",
        "                        <td id=\"T_60420dda_057e_11eb_a35b_525400ef21barow11_col5\" class=\"data row11 col5\" >0.525121</td>\n",
        "                        <td id=\"T_60420dda_057e_11eb_a35b_525400ef21barow11_col6\" class=\"data row11 col6\" >0.562375</td>\n",
        "                        <td id=\"T_60420dda_057e_11eb_a35b_525400ef21barow11_col7\" class=\"data row11 col7\" >0.493948</td>\n",
        "                        <td id=\"T_60420dda_057e_11eb_a35b_525400ef21barow11_col8\" class=\"data row11 col8\" >0.738181</td>\n",
        "                        <td id=\"T_60420dda_057e_11eb_a35b_525400ef21barow11_col9\" class=\"data row11 col9\" >0.724934</td>\n",
        "                        <td id=\"T_60420dda_057e_11eb_a35b_525400ef21barow11_col10\" class=\"data row11 col10\" >0.791315</td>\n",
        "                        <td id=\"T_60420dda_057e_11eb_a35b_525400ef21barow11_col11\" class=\"data row11 col11\" >1.000000</td>\n",
        "                        <td id=\"T_60420dda_057e_11eb_a35b_525400ef21barow11_col12\" class=\"data row11 col12\" >0.492386</td>\n",
        "                        <td id=\"T_60420dda_057e_11eb_a35b_525400ef21barow11_col13\" class=\"data row11 col13\" >0.441082</td>\n",
        "                        <td id=\"T_60420dda_057e_11eb_a35b_525400ef21barow11_col14\" class=\"data row11 col14\" >0.329552</td>\n",
        "                        <td id=\"T_60420dda_057e_11eb_a35b_525400ef21barow11_col15\" class=\"data row11 col15\" >0.187041</td>\n",
        "                        <td id=\"T_60420dda_057e_11eb_a35b_525400ef21barow11_col16\" class=\"data row11 col16\" >0.767426</td>\n",
        "            </tr>\n",
        "            <tr>\n",
        "                        <th id=\"T_60420dda_057e_11eb_a35b_525400ef21balevel0_row12\" class=\"row_heading level0 row12\" >International_movement_restrictions</th>\n",
        "                        <td id=\"T_60420dda_057e_11eb_a35b_525400ef21barow12_col0\" class=\"data row12 col0\" >-0.144261</td>\n",
        "                        <td id=\"T_60420dda_057e_11eb_a35b_525400ef21barow12_col1\" class=\"data row12 col1\" >0.205338</td>\n",
        "                        <td id=\"T_60420dda_057e_11eb_a35b_525400ef21barow12_col2\" class=\"data row12 col2\" >0.223622</td>\n",
        "                        <td id=\"T_60420dda_057e_11eb_a35b_525400ef21barow12_col3\" class=\"data row12 col3\" >0.045358</td>\n",
        "                        <td id=\"T_60420dda_057e_11eb_a35b_525400ef21barow12_col4\" class=\"data row12 col4\" >-0.100131</td>\n",
        "                        <td id=\"T_60420dda_057e_11eb_a35b_525400ef21barow12_col5\" class=\"data row12 col5\" >0.424014</td>\n",
        "                        <td id=\"T_60420dda_057e_11eb_a35b_525400ef21barow12_col6\" class=\"data row12 col6\" >0.474959</td>\n",
        "                        <td id=\"T_60420dda_057e_11eb_a35b_525400ef21barow12_col7\" class=\"data row12 col7\" >0.519242</td>\n",
        "                        <td id=\"T_60420dda_057e_11eb_a35b_525400ef21barow12_col8\" class=\"data row12 col8\" >0.511583</td>\n",
        "                        <td id=\"T_60420dda_057e_11eb_a35b_525400ef21barow12_col9\" class=\"data row12 col9\" >0.440078</td>\n",
        "                        <td id=\"T_60420dda_057e_11eb_a35b_525400ef21barow12_col10\" class=\"data row12 col10\" >0.546361</td>\n",
        "                        <td id=\"T_60420dda_057e_11eb_a35b_525400ef21barow12_col11\" class=\"data row12 col11\" >0.492386</td>\n",
        "                        <td id=\"T_60420dda_057e_11eb_a35b_525400ef21barow12_col12\" class=\"data row12 col12\" >1.000000</td>\n",
        "                        <td id=\"T_60420dda_057e_11eb_a35b_525400ef21barow12_col13\" class=\"data row12 col13\" >0.489201</td>\n",
        "                        <td id=\"T_60420dda_057e_11eb_a35b_525400ef21barow12_col14\" class=\"data row12 col14\" >0.563529</td>\n",
        "                        <td id=\"T_60420dda_057e_11eb_a35b_525400ef21barow12_col15\" class=\"data row12 col15\" >0.506313</td>\n",
        "                        <td id=\"T_60420dda_057e_11eb_a35b_525400ef21barow12_col16\" class=\"data row12 col16\" >0.628108</td>\n",
        "            </tr>\n",
        "            <tr>\n",
        "                        <th id=\"T_60420dda_057e_11eb_a35b_525400ef21balevel0_row13\" class=\"row_heading level0 row13\" >Information_campaigns</th>\n",
        "                        <td id=\"T_60420dda_057e_11eb_a35b_525400ef21barow13_col0\" class=\"data row13 col0\" >0.002834</td>\n",
        "                        <td id=\"T_60420dda_057e_11eb_a35b_525400ef21barow13_col1\" class=\"data row13 col1\" >-0.347096</td>\n",
        "                        <td id=\"T_60420dda_057e_11eb_a35b_525400ef21barow13_col2\" class=\"data row13 col2\" >-0.363427</td>\n",
        "                        <td id=\"T_60420dda_057e_11eb_a35b_525400ef21barow13_col3\" class=\"data row13 col3\" >-0.385570</td>\n",
        "                        <td id=\"T_60420dda_057e_11eb_a35b_525400ef21barow13_col4\" class=\"data row13 col4\" >0.077401</td>\n",
        "                        <td id=\"T_60420dda_057e_11eb_a35b_525400ef21barow13_col5\" class=\"data row13 col5\" >0.680956</td>\n",
        "                        <td id=\"T_60420dda_057e_11eb_a35b_525400ef21barow13_col6\" class=\"data row13 col6\" >0.782677</td>\n",
        "                        <td id=\"T_60420dda_057e_11eb_a35b_525400ef21barow13_col7\" class=\"data row13 col7\" >0.854865</td>\n",
        "                        <td id=\"T_60420dda_057e_11eb_a35b_525400ef21barow13_col8\" class=\"data row13 col8\" >0.662816</td>\n",
        "                        <td id=\"T_60420dda_057e_11eb_a35b_525400ef21barow13_col9\" class=\"data row13 col9\" >0.492774</td>\n",
        "                        <td id=\"T_60420dda_057e_11eb_a35b_525400ef21barow13_col10\" class=\"data row13 col10\" >0.396421</td>\n",
        "                        <td id=\"T_60420dda_057e_11eb_a35b_525400ef21barow13_col11\" class=\"data row13 col11\" >0.441082</td>\n",
        "                        <td id=\"T_60420dda_057e_11eb_a35b_525400ef21barow13_col12\" class=\"data row13 col12\" >0.489201</td>\n",
        "                        <td id=\"T_60420dda_057e_11eb_a35b_525400ef21barow13_col13\" class=\"data row13 col13\" >1.000000</td>\n",
        "                        <td id=\"T_60420dda_057e_11eb_a35b_525400ef21barow13_col14\" class=\"data row13 col14\" >0.668446</td>\n",
        "                        <td id=\"T_60420dda_057e_11eb_a35b_525400ef21barow13_col15\" class=\"data row13 col15\" >0.559264</td>\n",
        "                        <td id=\"T_60420dda_057e_11eb_a35b_525400ef21barow13_col16\" class=\"data row13 col16\" >0.794101</td>\n",
        "            </tr>\n",
        "            <tr>\n",
        "                        <th id=\"T_60420dda_057e_11eb_a35b_525400ef21balevel0_row14\" class=\"row_heading level0 row14\" >Testing_policy</th>\n",
        "                        <td id=\"T_60420dda_057e_11eb_a35b_525400ef21barow14_col0\" class=\"data row14 col0\" >-0.070509</td>\n",
        "                        <td id=\"T_60420dda_057e_11eb_a35b_525400ef21barow14_col1\" class=\"data row14 col1\" >-0.358858</td>\n",
        "                        <td id=\"T_60420dda_057e_11eb_a35b_525400ef21barow14_col2\" class=\"data row14 col2\" >-0.318059</td>\n",
        "                        <td id=\"T_60420dda_057e_11eb_a35b_525400ef21barow14_col3\" class=\"data row14 col3\" >-0.459625</td>\n",
        "                        <td id=\"T_60420dda_057e_11eb_a35b_525400ef21barow14_col4\" class=\"data row14 col4\" >-0.132695</td>\n",
        "                        <td id=\"T_60420dda_057e_11eb_a35b_525400ef21barow14_col5\" class=\"data row14 col5\" >0.477977</td>\n",
        "                        <td id=\"T_60420dda_057e_11eb_a35b_525400ef21barow14_col6\" class=\"data row14 col6\" >0.484311</td>\n",
        "                        <td id=\"T_60420dda_057e_11eb_a35b_525400ef21barow14_col7\" class=\"data row14 col7\" >0.624316</td>\n",
        "                        <td id=\"T_60420dda_057e_11eb_a35b_525400ef21barow14_col8\" class=\"data row14 col8\" >0.509739</td>\n",
        "                        <td id=\"T_60420dda_057e_11eb_a35b_525400ef21barow14_col9\" class=\"data row14 col9\" >0.463272</td>\n",
        "                        <td id=\"T_60420dda_057e_11eb_a35b_525400ef21barow14_col10\" class=\"data row14 col10\" >0.282660</td>\n",
        "                        <td id=\"T_60420dda_057e_11eb_a35b_525400ef21barow14_col11\" class=\"data row14 col11\" >0.329552</td>\n",
        "                        <td id=\"T_60420dda_057e_11eb_a35b_525400ef21barow14_col12\" class=\"data row14 col12\" >0.563529</td>\n",
        "                        <td id=\"T_60420dda_057e_11eb_a35b_525400ef21barow14_col13\" class=\"data row14 col13\" >0.668446</td>\n",
        "                        <td id=\"T_60420dda_057e_11eb_a35b_525400ef21barow14_col14\" class=\"data row14 col14\" >1.000000</td>\n",
        "                        <td id=\"T_60420dda_057e_11eb_a35b_525400ef21barow14_col15\" class=\"data row14 col15\" >0.406726</td>\n",
        "                        <td id=\"T_60420dda_057e_11eb_a35b_525400ef21barow14_col16\" class=\"data row14 col16\" >0.490109</td>\n",
        "            </tr>\n",
        "            <tr>\n",
        "                        <th id=\"T_60420dda_057e_11eb_a35b_525400ef21balevel0_row15\" class=\"row_heading level0 row15\" >Contact_tracing</th>\n",
        "                        <td id=\"T_60420dda_057e_11eb_a35b_525400ef21barow15_col0\" class=\"data row15 col0\" >-0.157607</td>\n",
        "                        <td id=\"T_60420dda_057e_11eb_a35b_525400ef21barow15_col1\" class=\"data row15 col1\" >-0.003698</td>\n",
        "                        <td id=\"T_60420dda_057e_11eb_a35b_525400ef21barow15_col2\" class=\"data row15 col2\" >0.001776</td>\n",
        "                        <td id=\"T_60420dda_057e_11eb_a35b_525400ef21barow15_col3\" class=\"data row15 col3\" >-0.123230</td>\n",
        "                        <td id=\"T_60420dda_057e_11eb_a35b_525400ef21barow15_col4\" class=\"data row15 col4\" >0.159889</td>\n",
        "                        <td id=\"T_60420dda_057e_11eb_a35b_525400ef21barow15_col5\" class=\"data row15 col5\" >0.245976</td>\n",
        "                        <td id=\"T_60420dda_057e_11eb_a35b_525400ef21barow15_col6\" class=\"data row15 col6\" >0.326147</td>\n",
        "                        <td id=\"T_60420dda_057e_11eb_a35b_525400ef21barow15_col7\" class=\"data row15 col7\" >0.552416</td>\n",
        "                        <td id=\"T_60420dda_057e_11eb_a35b_525400ef21barow15_col8\" class=\"data row15 col8\" >0.233402</td>\n",
        "                        <td id=\"T_60420dda_057e_11eb_a35b_525400ef21barow15_col9\" class=\"data row15 col9\" >0.041576</td>\n",
        "                        <td id=\"T_60420dda_057e_11eb_a35b_525400ef21barow15_col10\" class=\"data row15 col10\" >0.303915</td>\n",
        "                        <td id=\"T_60420dda_057e_11eb_a35b_525400ef21barow15_col11\" class=\"data row15 col11\" >0.187041</td>\n",
        "                        <td id=\"T_60420dda_057e_11eb_a35b_525400ef21barow15_col12\" class=\"data row15 col12\" >0.506313</td>\n",
        "                        <td id=\"T_60420dda_057e_11eb_a35b_525400ef21barow15_col13\" class=\"data row15 col13\" >0.559264</td>\n",
        "                        <td id=\"T_60420dda_057e_11eb_a35b_525400ef21barow15_col14\" class=\"data row15 col14\" >0.406726</td>\n",
        "                        <td id=\"T_60420dda_057e_11eb_a35b_525400ef21barow15_col15\" class=\"data row15 col15\" >1.000000</td>\n",
        "                        <td id=\"T_60420dda_057e_11eb_a35b_525400ef21barow15_col16\" class=\"data row15 col16\" >0.419435</td>\n",
        "            </tr>\n",
        "            <tr>\n",
        "                        <th id=\"T_60420dda_057e_11eb_a35b_525400ef21balevel0_row16\" class=\"row_heading level0 row16\" >Stringency_index</th>\n",
        "                        <td id=\"T_60420dda_057e_11eb_a35b_525400ef21barow16_col0\" class=\"data row16 col0\" >-0.031072</td>\n",
        "                        <td id=\"T_60420dda_057e_11eb_a35b_525400ef21barow16_col1\" class=\"data row16 col1\" >-0.079354</td>\n",
        "                        <td id=\"T_60420dda_057e_11eb_a35b_525400ef21barow16_col2\" class=\"data row16 col2\" >-0.110775</td>\n",
        "                        <td id=\"T_60420dda_057e_11eb_a35b_525400ef21barow16_col3\" class=\"data row16 col3\" >-0.087237</td>\n",
        "                        <td id=\"T_60420dda_057e_11eb_a35b_525400ef21barow16_col4\" class=\"data row16 col4\" >0.113421</td>\n",
        "                        <td id=\"T_60420dda_057e_11eb_a35b_525400ef21barow16_col5\" class=\"data row16 col5\" >0.807458</td>\n",
        "                        <td id=\"T_60420dda_057e_11eb_a35b_525400ef21barow16_col6\" class=\"data row16 col6\" >0.863284</td>\n",
        "                        <td id=\"T_60420dda_057e_11eb_a35b_525400ef21barow16_col7\" class=\"data row16 col7\" >0.814207</td>\n",
        "                        <td id=\"T_60420dda_057e_11eb_a35b_525400ef21barow16_col8\" class=\"data row16 col8\" >0.849331</td>\n",
        "                        <td id=\"T_60420dda_057e_11eb_a35b_525400ef21barow16_col9\" class=\"data row16 col9\" >0.771300</td>\n",
        "                        <td id=\"T_60420dda_057e_11eb_a35b_525400ef21barow16_col10\" class=\"data row16 col10\" >0.781458</td>\n",
        "                        <td id=\"T_60420dda_057e_11eb_a35b_525400ef21barow16_col11\" class=\"data row16 col11\" >0.767426</td>\n",
        "                        <td id=\"T_60420dda_057e_11eb_a35b_525400ef21barow16_col12\" class=\"data row16 col12\" >0.628108</td>\n",
        "                        <td id=\"T_60420dda_057e_11eb_a35b_525400ef21barow16_col13\" class=\"data row16 col13\" >0.794101</td>\n",
        "                        <td id=\"T_60420dda_057e_11eb_a35b_525400ef21barow16_col14\" class=\"data row16 col14\" >0.490109</td>\n",
        "                        <td id=\"T_60420dda_057e_11eb_a35b_525400ef21barow16_col15\" class=\"data row16 col15\" >0.419435</td>\n",
        "                        <td id=\"T_60420dda_057e_11eb_a35b_525400ef21barow16_col16\" class=\"data row16 col16\" >1.000000</td>\n",
        "            </tr>\n",
        "    </tbody></table>"
       ],
       "output_type": "pyout",
       "prompt_number": 21,
       "text": [
        "<pandas.io.formats.style.Styler at 0x7f1dc12188b0>"
       ]
      }
     ],
     "prompt_number": 21
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "# Scatter plot of Stringency index and Rt\n",
      "df = track_df.copy()\n",
      "sns.scatterplot(data=df, x=\"Stringency_index\", y=\"Rt\", hue=\"Country\", legend=\"brief\", marker=\"+\")\n",
      "bbox_to_anchor=(1.02, 0)\n",
      "bbox_loc=\"lower left\"\n",
      "plt.legend(bbox_to_anchor=bbox_to_anchor, loc=bbox_loc, borderaxespad=0)\n",
      "plt.title(\"Relationship of Stringency index and reproduction number\")\n",
      "plt.ylabel(\"Reproduction number\")\n",
      "plt.xlabel(\"Stringency index\")\n",
      "plt.show()"
     ],
     "language": "python",
     "metadata": {},
     "outputs": [
      {
       "output_type": "display_data",
       "png": "\n",
       "text": [
        "<Figure size 432x288 with 1 Axes>"
       ]
      }
     ],
     "prompt_number": 22
    }
   ],
   "metadata": {}
  }
 ]
}
