{
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3.8.2 64-bit ('.venv': venv)",
   "name": "python_defaultSpec_1597669925034"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.8.2-final"
  },
  "name": ""
 },
 "nbformat": 3,
 "nbformat_minor": 0,
 "worksheets": [
  {
   "cells": [
    {
     "cell_type": "markdown",
     "metadata": {},
     "source": [
      "# Usage (details: policy measures)\n",
      "Here, we will analyse the relationship of policy measures and parameter values of SIR-derived ODE models. Policy measures are tracked by [Oxford Covid-19 Government Response Tracker (OxCGRT)](https://github.com/OxCGRT/covid-policy-tracker)."
     ]
    },
    {
     "cell_type": "heading",
     "level": 2,
     "metadata": {},
     "source": [
      "Preparation"
     ]
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "# Standard users\n",
      "# !pip install covsirphy\n",
      "# Developers (Note: this notebook is in example directory)\n",
      "import os\n",
      "os.chdir(\"../\")"
     ],
     "language": "python",
     "metadata": {},
     "outputs": [],
     "prompt_number": 1
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "from pprint import pprint"
     ],
     "language": "python",
     "metadata": {},
     "outputs": [],
     "prompt_number": 2
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "import covsirphy as cs\n",
      "cs.__version__"
     ],
     "language": "python",
     "metadata": {},
     "outputs": [
      {
       "output_type": "pyout",
       "prompt_number": 3,
       "text": [
        "'2.8.3-alpha.new.224'"
       ]
      }
     ],
     "prompt_number": 3
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "# Standard users and developers\n",
      "data_loader = cs.DataLoader(\"input\")\n",
      "# The number of cases (JHU style)\n",
      "jhu_data = data_loader.jhu(verbose=False)\n",
      "# Population in each country\n",
      "population_data = data_loader.population(verbose=False)\n",
      "# Government Response Tracker (OxCGRT)\n",
      "oxcgrt_data = data_loader.oxcgrt(verbose=False)\n",
      "# Description/citation\n",
      "print(oxcgrt_data.citation)"
     ],
     "language": "python",
     "metadata": {
      "tags": []
     },
     "outputs": [
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "(Secondary source) Guidotti, E., Ardia, D., (2020), \"COVID-19 Data Hub\", Journal of Open Source Software 5(51):2376, doi: 10.21105/joss.02376.\n",
        "We can get Citation list of primary sources with DataLoader(...).covid19dh_citation"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      }
     ],
     "prompt_number": 4
    },
    {
     "cell_type": "markdown",
     "metadata": {},
     "source": [
      "## Class for policy measure analysis\n",
      "We will `PolicyMeasures` class to find relationship of policy measures and parameter values of SIR-derived ODE models."
     ]
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "# Create analyser with tau value 360 [min] (can be changed)\n",
      "analyser = cs.PolicyMeasures(jhu_data, population_data, oxcgrt_data, tau=360)\n",
      "# The number of registerd countries\n",
      "len(analyser.countries)"
     ],
     "language": "python",
     "metadata": {
      "tags": []
     },
     "outputs": [
      {
       "output_type": "pyout",
       "prompt_number": 5,
       "text": [
        "184"
       ]
      }
     ],
     "prompt_number": 5
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "# We can get Scenario instance for detailed scenario analysis\n",
      "type(analyser.scenario(\"Japan\"))"
     ],
     "language": "python",
     "metadata": {},
     "outputs": [
      {
       "output_type": "pyout",
       "prompt_number": 6,
       "text": [
        "covsirphy.analysis.scenario.Scenario"
       ]
      }
     ],
     "prompt_number": 6
    },
    {
     "cell_type": "markdown",
     "metadata": {},
     "source": [
      "## Set phases with S-R trend analysis\n",
      "We will perform S-R trend analysis to set phases in all countries. Countries which do not have **12th phases** will be un-registered for the next analysis. This number will be adjusted for your analysis."
     ]
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "# Show the number of phases of all countries\n",
      "analyser.trend()\n",
      "pprint(analyser.phase_len(), compact=True)"
     ],
     "language": "python",
     "metadata": {},
     "outputs": [
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "{"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "4"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ": "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "['Tanzania', 'Myanmar']"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        " "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "5"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ": "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "["
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Seychelles'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Tunisia'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Papua New Guinea'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Georgia'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Brunei'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        "     "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Dominica'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Uganda'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Fiji'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Jordan'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Grenada'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Hungary'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Belize'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "]"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        " "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "6"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ": "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "["
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Jamaica'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Equatorial Guinea'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Mauritius'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Slovakia'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Ireland'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        "     "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Slovenia'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Cambodia'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Yemen'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Namibia'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Libya'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Angola'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        "     "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Trinidad and Tobago'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Antigua and Barbuda'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "]"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        " "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "7"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ": "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "["
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Colombia'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Lebanon'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Montenegro'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Bahamas'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Malawi'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        "     "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Sao Tome and Principe'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Paraguay'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'San Marino'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Gambia'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Monaco'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        "     "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Comoros'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'New Zealand'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Spain'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Nepal'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Liechtenstein'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Mozambique'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        "     "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Central African Republic'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Saint Vincent and the Grenadines'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        "     "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Netherlands'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Kazakhstan'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Kyrgyzstan'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Australia'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Andorra'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        "     "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Lesotho'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Guyana'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Burundi'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Guinea-Bissau'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Vietnam'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        "     "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Czech Republic'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "]"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        " "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "8"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ": "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "["
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Croatia'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Ethiopia'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Norway'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Morocco'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Sudan'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Rwanda'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Iceland'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        "     "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Madagascar'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Argentina'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Zambia'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Mongolia'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Thailand'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'South Sudan'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        "     "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Ecuador'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Eritrea'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Costa Rica'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Niger'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Ukraine'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Palestine'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        "     "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Austria'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Israel'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Zimbabwe'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Denmark'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Afghanistan'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Nicaragua'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        "     "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Saint Lucia'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Botswana'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Cyprus'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Suriname'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "]"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        " "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "9"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ": "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "["
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Kenya'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Bermuda'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Tajikistan'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Malta'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'China'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Poland'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Haiti'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        "     "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Bulgaria'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Philippines'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Taiwan'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Barbados'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Lithuania'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        "     "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'South Africa'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Djibouti'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Gabon'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Benin'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Cameroon'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Serbia'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        "     "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Korea, South'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Mauritania'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Chad'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Uruguay'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Sri Lanka'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Syria'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        "     "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Kosovo'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Venezuela'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Japan'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Burkina Faso'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Greece'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'India'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        "     "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Bhutan'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Maldives'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Ghana'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "]"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        " "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "10"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ": "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "["
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Azerbaijan'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Finland'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Sierra Leone'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Singapore'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Romania'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Qatar'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        "      "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'El Salvador'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Liberia'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Belarus'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Oman'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Swaziland'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Congo'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        "      "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Cape Verde'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Germany'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Portugal'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Luxembourg'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Pakistan'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        "      "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Saudi Arabia'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Chile'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Indonesia'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Guatemala'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Switzerland'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Cuba'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        "      "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Somalia'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Malaysia'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Estonia'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Canada'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Senegal'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Uzbekistan'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "]"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        " "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "11"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ": "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "["
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Macedonia'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Armenia'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Italy'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Togo'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Peru'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Bangladesh'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        "      "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Bosnia and Herzegovina'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Mexico'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'United Arab Emirates'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Iraq'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        "      "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Honduras'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Egypt'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Albania'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Algeria'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Mali'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Belgium'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Panama'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        "      "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Guinea'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Dominican Republic'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Moldova'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "]"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        " "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "12"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ": "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "["
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'France'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'United States'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Kuwait'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Turkey'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Brazil'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Latvia'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        "      "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Bahrain'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Nigeria'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "]"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        " "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "13"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ": "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "['Iran', 'Russia', 'Bolivia']"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "}"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      }
     ],
     "prompt_number": 7
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "# Set phases with S-R trend analysis\n",
      "analyser.trend(min_len=12)\n",
      "# The number of countries\n",
      "len(analyser.countries)"
     ],
     "language": "python",
     "metadata": {},
     "outputs": [
      {
       "output_type": "pyout",
       "prompt_number": 8,
       "text": [
        "11"
       ]
      }
     ],
     "prompt_number": 8
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "phase_len_dict = analyser.phase_len()\n",
      "pprint(phase_len_dict, compact=True)"
     ],
     "language": "python",
     "metadata": {
      "tags": []
     },
     "outputs": [
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "{"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "12"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ": "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "["
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'France'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'United States'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Kuwait'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Turkey'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Brazil'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Latvia'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        "      "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Bahrain'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Nigeria'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "]"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        " "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "13"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ": "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "['Iran', 'Russia', 'Bolivia']"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "}"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      }
     ],
     "prompt_number": 9
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "# Here, only show the countries which have the most phases\n",
      "countries_show = max(phase_len_dict.items(), key=lambda x: x[0])[1]\n",
      "# Show summary\n",
      "analyser.summary(countries=countries_show)"
     ],
     "language": "python",
     "metadata": {
      "tags": []
     },
     "outputs": [
      {
       "html": [
        "<div>\n",
        "<style scoped>\n",
        "    .dataframe tbody tr th:only-of-type {\n",
        "        vertical-align: middle;\n",
        "    }\n",
        "\n",
        "    .dataframe tbody tr th {\n",
        "        vertical-align: top;\n",
        "    }\n",
        "\n",
        "    .dataframe thead th {\n",
        "        text-align: right;\n",
        "    }\n",
        "</style>\n",
        "<table border=\"1\" class=\"dataframe\">\n",
        "  <thead>\n",
        "    <tr style=\"text-align: right;\">\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th>Type</th>\n",
        "      <th>Start</th>\n",
        "      <th>End</th>\n",
        "      <th>Population</th>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>Country</th>\n",
        "      <th>Phase</th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "    </tr>\n",
        "  </thead>\n",
        "  <tbody>\n",
        "    <tr>\n",
        "      <th rowspan=\"13\" valign=\"top\">Iran</th>\n",
        "      <th>0th</th>\n",
        "      <td>Past</td>\n",
        "      <td>26Feb2020</td>\n",
        "      <td>29Mar2020</td>\n",
        "      <td>81800269</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>1st</th>\n",
        "      <td>Past</td>\n",
        "      <td>30Mar2020</td>\n",
        "      <td>16Apr2020</td>\n",
        "      <td>81800269</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>2nd</th>\n",
        "      <td>Past</td>\n",
        "      <td>17Apr2020</td>\n",
        "      <td>13May2020</td>\n",
        "      <td>81800269</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>3rd</th>\n",
        "      <td>Past</td>\n",
        "      <td>14May2020</td>\n",
        "      <td>31May2020</td>\n",
        "      <td>81800269</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>4th</th>\n",
        "      <td>Past</td>\n",
        "      <td>01Jun2020</td>\n",
        "      <td>16Jun2020</td>\n",
        "      <td>81800269</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>5th</th>\n",
        "      <td>Past</td>\n",
        "      <td>17Jun2020</td>\n",
        "      <td>01Jul2020</td>\n",
        "      <td>81800269</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>6th</th>\n",
        "      <td>Past</td>\n",
        "      <td>02Jul2020</td>\n",
        "      <td>16Jul2020</td>\n",
        "      <td>81800269</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>7th</th>\n",
        "      <td>Past</td>\n",
        "      <td>17Jul2020</td>\n",
        "      <td>30Jul2020</td>\n",
        "      <td>81800269</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>8th</th>\n",
        "      <td>Past</td>\n",
        "      <td>31Jul2020</td>\n",
        "      <td>15Aug2020</td>\n",
        "      <td>81800269</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>9th</th>\n",
        "      <td>Past</td>\n",
        "      <td>16Aug2020</td>\n",
        "      <td>03Sep2020</td>\n",
        "      <td>81800269</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>10th</th>\n",
        "      <td>Past</td>\n",
        "      <td>04Sep2020</td>\n",
        "      <td>18Sep2020</td>\n",
        "      <td>81800269</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>11th</th>\n",
        "      <td>Past</td>\n",
        "      <td>19Sep2020</td>\n",
        "      <td>30Sep2020</td>\n",
        "      <td>81800269</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>12th</th>\n",
        "      <td>Past</td>\n",
        "      <td>01Oct2020</td>\n",
        "      <td>12Oct2020</td>\n",
        "      <td>81800269</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th rowspan=\"13\" valign=\"top\">Russia</th>\n",
        "      <th>0th</th>\n",
        "      <td>Past</td>\n",
        "      <td>12Feb2020</td>\n",
        "      <td>06May2020</td>\n",
        "      <td>330457362</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>1st</th>\n",
        "      <td>Past</td>\n",
        "      <td>07May2020</td>\n",
        "      <td>18May2020</td>\n",
        "      <td>330457362</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>2nd</th>\n",
        "      <td>Past</td>\n",
        "      <td>19May2020</td>\n",
        "      <td>29May2020</td>\n",
        "      <td>330457362</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>3rd</th>\n",
        "      <td>Past</td>\n",
        "      <td>30May2020</td>\n",
        "      <td>10Jun2020</td>\n",
        "      <td>330457362</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>4th</th>\n",
        "      <td>Past</td>\n",
        "      <td>11Jun2020</td>\n",
        "      <td>21Jun2020</td>\n",
        "      <td>330457362</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>5th</th>\n",
        "      <td>Past</td>\n",
        "      <td>22Jun2020</td>\n",
        "      <td>03Jul2020</td>\n",
        "      <td>330457362</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>6th</th>\n",
        "      <td>Past</td>\n",
        "      <td>04Jul2020</td>\n",
        "      <td>17Jul2020</td>\n",
        "      <td>330457362</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>7th</th>\n",
        "      <td>Past</td>\n",
        "      <td>18Jul2020</td>\n",
        "      <td>31Jul2020</td>\n",
        "      <td>330457362</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>8th</th>\n",
        "      <td>Past</td>\n",
        "      <td>01Aug2020</td>\n",
        "      <td>15Aug2020</td>\n",
        "      <td>330457362</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>9th</th>\n",
        "      <td>Past</td>\n",
        "      <td>16Aug2020</td>\n",
        "      <td>02Sep2020</td>\n",
        "      <td>330457362</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>10th</th>\n",
        "      <td>Past</td>\n",
        "      <td>03Sep2020</td>\n",
        "      <td>18Sep2020</td>\n",
        "      <td>330457362</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>11th</th>\n",
        "      <td>Past</td>\n",
        "      <td>19Sep2020</td>\n",
        "      <td>01Oct2020</td>\n",
        "      <td>330457362</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>12th</th>\n",
        "      <td>Past</td>\n",
        "      <td>02Oct2020</td>\n",
        "      <td>12Oct2020</td>\n",
        "      <td>330457362</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th rowspan=\"13\" valign=\"top\">Bolivia</th>\n",
        "      <th>0th</th>\n",
        "      <td>Past</td>\n",
        "      <td>01Apr2020</td>\n",
        "      <td>13Jun2020</td>\n",
        "      <td>11353142</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>1st</th>\n",
        "      <td>Past</td>\n",
        "      <td>14Jun2020</td>\n",
        "      <td>25Jun2020</td>\n",
        "      <td>11353142</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>2nd</th>\n",
        "      <td>Past</td>\n",
        "      <td>26Jun2020</td>\n",
        "      <td>05Jul2020</td>\n",
        "      <td>11353142</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>3rd</th>\n",
        "      <td>Past</td>\n",
        "      <td>06Jul2020</td>\n",
        "      <td>15Jul2020</td>\n",
        "      <td>11353142</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>4th</th>\n",
        "      <td>Past</td>\n",
        "      <td>16Jul2020</td>\n",
        "      <td>23Jul2020</td>\n",
        "      <td>11353142</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>5th</th>\n",
        "      <td>Past</td>\n",
        "      <td>24Jul2020</td>\n",
        "      <td>31Jul2020</td>\n",
        "      <td>11353142</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>6th</th>\n",
        "      <td>Past</td>\n",
        "      <td>01Aug2020</td>\n",
        "      <td>09Aug2020</td>\n",
        "      <td>11353142</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>7th</th>\n",
        "      <td>Past</td>\n",
        "      <td>10Aug2020</td>\n",
        "      <td>17Aug2020</td>\n",
        "      <td>11353142</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>8th</th>\n",
        "      <td>Past</td>\n",
        "      <td>18Aug2020</td>\n",
        "      <td>25Aug2020</td>\n",
        "      <td>11353142</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>9th</th>\n",
        "      <td>Past</td>\n",
        "      <td>26Aug2020</td>\n",
        "      <td>02Sep2020</td>\n",
        "      <td>11353142</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>10th</th>\n",
        "      <td>Past</td>\n",
        "      <td>03Sep2020</td>\n",
        "      <td>10Sep2020</td>\n",
        "      <td>11353142</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>11th</th>\n",
        "      <td>Past</td>\n",
        "      <td>11Sep2020</td>\n",
        "      <td>21Sep2020</td>\n",
        "      <td>11353142</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>12th</th>\n",
        "      <td>Past</td>\n",
        "      <td>22Sep2020</td>\n",
        "      <td>12Oct2020</td>\n",
        "      <td>11353142</td>\n",
        "    </tr>\n",
        "  </tbody>\n",
        "</table>\n",
        "</div>"
       ],
       "output_type": "pyout",
       "prompt_number": 10,
       "text": [
        "               Type      Start        End  Population\n",
        "Country Phase                                        \n",
        "Iran    0th    Past  26Feb2020  29Mar2020    81800269\n",
        "        1st    Past  30Mar2020  16Apr2020    81800269\n",
        "        2nd    Past  17Apr2020  13May2020    81800269\n",
        "        3rd    Past  14May2020  31May2020    81800269\n",
        "        4th    Past  01Jun2020  16Jun2020    81800269\n",
        "        5th    Past  17Jun2020  01Jul2020    81800269\n",
        "        6th    Past  02Jul2020  16Jul2020    81800269\n",
        "        7th    Past  17Jul2020  30Jul2020    81800269\n",
        "        8th    Past  31Jul2020  15Aug2020    81800269\n",
        "        9th    Past  16Aug2020  03Sep2020    81800269\n",
        "        10th   Past  04Sep2020  18Sep2020    81800269\n",
        "        11th   Past  19Sep2020  30Sep2020    81800269\n",
        "        12th   Past  01Oct2020  12Oct2020    81800269\n",
        "Russia  0th    Past  12Feb2020  06May2020   330457362\n",
        "        1st    Past  07May2020  18May2020   330457362\n",
        "        2nd    Past  19May2020  29May2020   330457362\n",
        "        3rd    Past  30May2020  10Jun2020   330457362\n",
        "        4th    Past  11Jun2020  21Jun2020   330457362\n",
        "        5th    Past  22Jun2020  03Jul2020   330457362\n",
        "        6th    Past  04Jul2020  17Jul2020   330457362\n",
        "        7th    Past  18Jul2020  31Jul2020   330457362\n",
        "        8th    Past  01Aug2020  15Aug2020   330457362\n",
        "        9th    Past  16Aug2020  02Sep2020   330457362\n",
        "        10th   Past  03Sep2020  18Sep2020   330457362\n",
        "        11th   Past  19Sep2020  01Oct2020   330457362\n",
        "        12th   Past  02Oct2020  12Oct2020   330457362\n",
        "Bolivia 0th    Past  01Apr2020  13Jun2020    11353142\n",
        "        1st    Past  14Jun2020  25Jun2020    11353142\n",
        "        2nd    Past  26Jun2020  05Jul2020    11353142\n",
        "        3rd    Past  06Jul2020  15Jul2020    11353142\n",
        "        4th    Past  16Jul2020  23Jul2020    11353142\n",
        "        5th    Past  24Jul2020  31Jul2020    11353142\n",
        "        6th    Past  01Aug2020  09Aug2020    11353142\n",
        "        7th    Past  10Aug2020  17Aug2020    11353142\n",
        "        8th    Past  18Aug2020  25Aug2020    11353142\n",
        "        9th    Past  26Aug2020  02Sep2020    11353142\n",
        "        10th   Past  03Sep2020  10Sep2020    11353142\n",
        "        11th   Past  11Sep2020  21Sep2020    11353142\n",
        "        12th   Past  22Sep2020  12Oct2020    11353142"
       ]
      }
     ],
     "prompt_number": 10
    },
    {
     "cell_type": "markdown",
     "metadata": {},
     "source": [
      "## Parameter estimation\n",
      "we will estimate the parameter values with SIR-derived ODE models in each country."
     ]
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "# Parameter estimation with SIR-F model\n",
      "analyser.estimate(cs.SIRF)"
     ],
     "language": "python",
     "metadata": {
      "tags": []
     },
     "outputs": [
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n",
        "<SIR-F model: parameter estimation>"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "Running optimization with 4 CPUs..."
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tUSA,  6th phase (29Jul2020 - 07Aug2020): finished  399 trials in 0 min 20 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tKWT,  7th phase (05Aug2020 - 17Aug2020): finished  205 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tBOL,  5th phase (24Jul2020 - 31Jul2020): finished  637 trials in 0 min 35 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tBHR,  5th phase (08Jul2020 - 19Jul2020): finished  996 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tRUS, 10th phase (03Sep2020 - 18Sep2020): finished  997 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tTUR,  2nd phase (30Apr2020 - 08May2020): finished  841 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tFRA,  4th phase (05May2020 - 01Jun2020): finished  819 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tUSA,  8th phase (20Aug2020 - 02Sep2020): finished  163 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tBHR,  7th phase (07Aug2020 - 22Aug2020): finished  770 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tLVA,  1st phase (07Apr2020 - 18Apr2020): finished  902 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tBOL,  8th phase (18Aug2020 - 25Aug2020): finished  570 trials in 0 min 40 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tBRA, 11th phase (25Sep2020 - 12Oct2020): finished  298 trials in 0 min 20 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tBRA,  1st phase (28May2020 - 14Jun2020): finished  797 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tBRA,  2nd phase (15Jun2020 - 26Jun2020): finished  451 trials in 0 min 30 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tBRA,  7th phase (11Aug2020 - 19Aug2020): finished  797 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tBOL,  1st phase (14Jun2020 - 25Jun2020): finished  804 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tIRN,  8th phase (31Jul2020 - 15Aug2020): finished  358 trials in 0 min 25 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tIRN,  1st phase (30Mar2020 - 16Apr2020): finished  791 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tNGA, 10th phase (02Sep2020 - 20Sep2020): finished  817 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tRUS,  7th phase (18Jul2020 - 31Jul2020): finished  767 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tBHR, 10th phase (17Sep2020 - 27Sep2020): finished  147 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tUSA,  4th phase (08Jul2020 - 17Jul2020): finished  348 trials in 0 min 25 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tBHR,  9th phase (07Sep2020 - 16Sep2020): finished  173 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tLVA,  6th phase (01Jun2020 - 09Jul2020): finished  782 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tUSA,  3rd phase (24Jun2020 - 07Jul2020): finished  830 trials in 1 min  1 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tFRA,  3rd phase (21Apr2020 - 04May2020): finished  931 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tBOL, 10th phase (03Sep2020 - 10Sep2020): finished  540 trials in 0 min 30 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tRUS, 11th phase (19Sep2020 - 01Oct2020): finished  939 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tKWT, 10th phase (14Sep2020 - 25Sep2020): finished  236 trials in 0 min 15 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tTUR,  0th phase (24Mar2020 - 16Apr2020): finished  908 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tUSA,  2nd phase (03Jun2020 - 23Jun2020): finished  531 trials in 0 min 35 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tLVA,  3rd phase (30Apr2020 - 07May2020): finished  999 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tBHR, 11th phase (28Sep2020 - 12Oct2020): finished  194 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tKWT,  6th phase (21Jul2020 - 04Aug2020): finished  202 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tBRA,  8th phase (20Aug2020 - 30Aug2020): finished  921 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tKWT,  0th phase (08Mar2020 - 12May2020): finished  691 trials in 1 min  1 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tNGA,  9th phase (19Aug2020 - 01Sep2020): finished  488 trials in 0 min 30 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tBOL,  2nd phase (26Jun2020 - 05Jul2020): finished  252 trials in 0 min 15 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tUSA,  7th phase (08Aug2020 - 19Aug2020): finished  480 trials in 0 min 30 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tIRN,  3rd phase (14May2020 - 31May2020): finished  299 trials in 0 min 15 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tTUR,  4th phase (23May2020 - 12Jun2020): finished  894 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tBHR,  0th phase (06Mar2020 - 06May2020): finished  813 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tIRN, 11th phase (19Sep2020 - 30Sep2020): finished  204 trials in 0 min 20 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tFRA, 10th phase (25Sep2020 - 02Oct2020): finished  763 trials in 1 min  1 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tBHR,  3rd phase (14Jun2020 - 24Jun2020): finished  722 trials in 1 min  1 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tKWT,  8th phase (18Aug2020 - 01Sep2020): finished  537 trials in 0 min 30 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tIRN,  9th phase (16Aug2020 - 03Sep2020): finished  863 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tTUR,  7th phase (16Jul2020 - 04Aug2020): finished  218 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tUSA,  1st phase (04May2020 - 02Jun2020): finished  893 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tBRA,  0th phase (16Mar2020 - 27May2020): finished  921 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tFRA,  2nd phase (05Apr2020 - 20Apr2020): finished  887 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tBHR,  8th phase (23Aug2020 - 06Sep2020): finished  880 trials in 1 min  1 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tRUS,  0th phase (12Feb2020 - 06May2020): finished  839 trials in 1 min  1 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tLVA,  9th phase (30Aug2020 - 11Sep2020): finished  814 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tUSA,  5th phase (18Jul2020 - 28Jul2020): finished  187 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tBHR,  1st phase (07May2020 - 31May2020): finished  920 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tNGA,  4th phase (27Jun2020 - 12Jul2020): finished  940 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tNGA,  0th phase (18Mar2020 - 18May2020): finished  890 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tRUS,  8th phase (01Aug2020 - 15Aug2020): finished  933 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tBRA,  3rd phase (27Jun2020 - 08Jul2020): finished  930 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tUSA, 10th phase (17Sep2020 - 29Sep2020): finished  863 trials in 0 min 55 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tFRA,  0th phase (12Feb2020 - 24Mar2020): finished  754 trials in 1 min  1 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tBOL,  6th phase (01Aug2020 - 09Aug2020): finished  185 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tTUR,  6th phase (28Jun2020 - 15Jul2020): finished  499 trials in 0 min 30 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tLVA,  2nd phase (19Apr2020 - 29Apr2020): finished  918 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tTUR,  3rd phase (09May2020 - 22May2020): finished  918 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tRUS,  4th phase (11Jun2020 - 21Jun2020): finished  924 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tNGA,  3rd phase (19Jun2020 - 26Jun2020): finished  931 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tNGA,  2nd phase (07Jun2020 - 18Jun2020): finished  832 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tFRA,  9th phase (11Sep2020 - 24Sep2020): finished  685 trials in 0 min 50 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tLVA,  7th phase (10Jul2020 - 05Aug2020): finished  933 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tTUR, 11th phase (23Sep2020 - 12Oct2020): finished  213 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tKWT,  9th phase (02Sep2020 - 13Sep2020): finished  846 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tNGA,  6th phase (21Jul2020 - 28Jul2020): finished  236 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tNGA,  1st phase (19May2020 - 06Jun2020): finished  997 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tIRN,  4th phase (01Jun2020 - 16Jun2020): finished  992 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tKWT,  2nd phase (28May2020 - 07Jun2020): finished  994 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tRUS,  5th phase (22Jun2020 - 03Jul2020): finished  982 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tTUR,  9th phase (23Aug2020 - 07Sep2020): finished  300 trials in 0 min 15 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tFRA,  7th phase (10Aug2020 - 26Aug2020): finished  947 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tRUS,  3rd phase (30May2020 - 10Jun2020): finished  949 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tKWT,  1st phase (13May2020 - 27May2020): finished  960 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tBOL,  7th phase (10Aug2020 - 17Aug2020): finished  274 trials in 0 min 15 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tBOL,  9th phase (26Aug2020 - 02Sep2020): finished  267 trials in 0 min 15 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tKWT,  5th phase (07Jul2020 - 20Jul2020): finished  984 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tKWT,  3rd phase (08Jun2020 - 22Jun2020): finished  981 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tBRA,  5th phase (21Jul2020 - 30Jul2020): finished 1025 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tTUR,  1st phase (17Apr2020 - 29Apr2020): finished 1030 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tBOL,  3rd phase (06Jul2020 - 15Jul2020): finished 1004 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tNGA,  5th phase (13Jul2020 - 20Jul2020): finished  381 trials in 0 min 20 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tBHR,  6th phase (20Jul2020 - 06Aug2020): finished  208 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tBHR,  2nd phase (01Jun2020 - 13Jun2020): finished 1009 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tFRA,  8th phase (27Aug2020 - 10Sep2020): finished 1039 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tRUS,  9th phase (16Aug2020 - 02Sep2020): finished 1026 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tBRA,  4th phase (09Jul2020 - 20Jul2020): finished  474 trials in 0 min 25 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tIRN,  0th phase (26Feb2020 - 29Mar2020): finished 1024 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tRUS,  2nd phase (19May2020 - 29May2020): finished 1018 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tLVA,  5th phase (16May2020 - 31May2020): finished 1118 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tKWT, 11th phase (26Sep2020 - 12Oct2020): finished  613 trials in 0 min 35 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tIRN,  2nd phase (17Apr2020 - 13May2020): finished  208 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tRUS,  6th phase (04Jul2020 - 17Jul2020): finished  960 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tBOL,  0th phase (01Apr2020 - 13Jun2020): finished  958 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tTUR, 10th phase (08Sep2020 - 22Sep2020): finished  230 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tLVA,  8th phase (06Aug2020 - 29Aug2020): finished 1157 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tIRN, 10th phase (04Sep2020 - 18Sep2020): finished 1036 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tNGA,  8th phase (08Aug2020 - 18Aug2020): finished  381 trials in 0 min 20 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tIRN,  7th phase (17Jul2020 - 30Jul2020): finished  193 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tUSA,  0th phase (09Feb2020 - 03May2020): finished  935 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tFRA,  5th phase (02Jun2020 - 08Jul2020): finished  996 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tBOL, 12th phase (22Sep2020 - 12Oct2020): finished  182 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tTUR,  8th phase (05Aug2020 - 22Aug2020): finished  345 trials in 0 min 20 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tUSA,  9th phase (03Sep2020 - 16Sep2020): finished  932 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tRUS,  1st phase (07May2020 - 18May2020): finished  878 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tLVA, 10th phase (12Sep2020 - 24Sep2020): finished 1010 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tUSA, 11th phase (30Sep2020 - 12Oct2020): finished  745 trials in 0 min 50 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tBRA,  6th phase (31Jul2020 - 10Aug2020): finished  908 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tBHR,  4th phase (25Jun2020 - 07Jul2020): finished  246 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tBOL,  4th phase (16Jul2020 - 23Jul2020): finished  233 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tRUS, 12th phase (02Oct2020 - 12Oct2020): finished 1039 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tFRA,  1st phase (25Mar2020 - 04Apr2020): finished 1051 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tBOL, 11th phase (11Sep2020 - 21Sep2020): finished  290 trials in 0 min 15 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tKWT,  4th phase (23Jun2020 - 06Jul2020): finished 1013 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tFRA,  6th phase (09Jul2020 - 09Aug2020): finished 1005 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tTUR,  5th phase (13Jun2020 - 27Jun2020): finished 1010 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tNGA, 11th phase (21Sep2020 - 12Oct2020): finished  199 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tIRN,  6th phase (02Jul2020 - 16Jul2020): finished  106 trials in 0 min  5 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tFRA, 11th phase (03Oct2020 - 12Oct2020): finished  488 trials in 0 min 25 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tIRN,  5th phase (17Jun2020 - 01Jul2020): finished 1078 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tLVA,  4th phase (08May2020 - 15May2020): finished 1081 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tBRA,  9th phase (31Aug2020 - 10Sep2020): finished  222 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tIRN, 12th phase (01Oct2020 - 12Oct2020): finished  231 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tLVA,  0th phase (10Mar2020 - 06Apr2020): finished 1372 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "Completed optimization. Total: 26 min 27 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      }
     ],
     "prompt_number": 11
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "# Show summary\n",
      "analyser.summary(countries=countries_show)"
     ],
     "language": "python",
     "metadata": {},
     "outputs": [
      {
       "html": [
        "<div>\n",
        "<style scoped>\n",
        "    .dataframe tbody tr th:only-of-type {\n",
        "        vertical-align: middle;\n",
        "    }\n",
        "\n",
        "    .dataframe tbody tr th {\n",
        "        vertical-align: top;\n",
        "    }\n",
        "\n",
        "    .dataframe thead th {\n",
        "        text-align: right;\n",
        "    }\n",
        "</style>\n",
        "<table border=\"1\" class=\"dataframe\">\n",
        "  <thead>\n",
        "    <tr style=\"text-align: right;\">\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th>Type</th>\n",
        "      <th>Start</th>\n",
        "      <th>End</th>\n",
        "      <th>Population</th>\n",
        "      <th>ODE</th>\n",
        "      <th>Rt</th>\n",
        "      <th>theta</th>\n",
        "      <th>kappa</th>\n",
        "      <th>rho</th>\n",
        "      <th>sigma</th>\n",
        "      <th>tau</th>\n",
        "      <th>1/gamma [day]</th>\n",
        "      <th>1/alpha2 [day]</th>\n",
        "      <th>alpha1 [-]</th>\n",
        "      <th>1/beta [day]</th>\n",
        "      <th>RMSLE</th>\n",
        "      <th>Trials</th>\n",
        "      <th>Runtime</th>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>Country</th>\n",
        "      <th>Phase</th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "    </tr>\n",
        "  </thead>\n",
        "  <tbody>\n",
        "    <tr>\n",
        "      <th rowspan=\"13\" valign=\"top\">Iran</th>\n",
        "      <th>0th</th>\n",
        "      <td>Past</td>\n",
        "      <td>26Feb2020</td>\n",
        "      <td>29Mar2020</td>\n",
        "      <td>81800269</td>\n",
        "      <td>SIR-F</td>\n",
        "      <td>5.68</td>\n",
        "      <td>0.248343</td>\n",
        "      <td>0.000243</td>\n",
        "      <td>0.051945</td>\n",
        "      <td>0.006633</td>\n",
        "      <td>360</td>\n",
        "      <td>37</td>\n",
        "      <td>1029</td>\n",
        "      <td>0.248</td>\n",
        "      <td>4</td>\n",
        "      <td>4.331893</td>\n",
        "      <td>1024</td>\n",
        "      <td>1 min  0 sec</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>1st</th>\n",
        "      <td>Past</td>\n",
        "      <td>30Mar2020</td>\n",
        "      <td>16Apr2020</td>\n",
        "      <td>81800269</td>\n",
        "      <td>SIR-F</td>\n",
        "      <td>0.94</td>\n",
        "      <td>0.062430</td>\n",
        "      <td>0.000214</td>\n",
        "      <td>0.018588</td>\n",
        "      <td>0.018290</td>\n",
        "      <td>360</td>\n",
        "      <td>13</td>\n",
        "      <td>1170</td>\n",
        "      <td>0.062</td>\n",
        "      <td>13</td>\n",
        "      <td>0.222973</td>\n",
        "      <td>791</td>\n",
        "      <td>1 min  0 sec</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>2nd</th>\n",
        "      <td>Past</td>\n",
        "      <td>17Apr2020</td>\n",
        "      <td>13May2020</td>\n",
        "      <td>81800269</td>\n",
        "      <td>SIR-F</td>\n",
        "      <td>0.76</td>\n",
        "      <td>0.056466</td>\n",
        "      <td>0.000071</td>\n",
        "      <td>0.018152</td>\n",
        "      <td>0.022424</td>\n",
        "      <td>360</td>\n",
        "      <td>11</td>\n",
        "      <td>3515</td>\n",
        "      <td>0.056</td>\n",
        "      <td>13</td>\n",
        "      <td>0.148853</td>\n",
        "      <td>208</td>\n",
        "      <td>0 min 10 sec</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>3rd</th>\n",
        "      <td>Past</td>\n",
        "      <td>14May2020</td>\n",
        "      <td>31May2020</td>\n",
        "      <td>81800269</td>\n",
        "      <td>SIR-F</td>\n",
        "      <td>1.29</td>\n",
        "      <td>0.020228</td>\n",
        "      <td>0.000162</td>\n",
        "      <td>0.025894</td>\n",
        "      <td>0.019500</td>\n",
        "      <td>360</td>\n",
        "      <td>12</td>\n",
        "      <td>1543</td>\n",
        "      <td>0.020</td>\n",
        "      <td>9</td>\n",
        "      <td>0.035904</td>\n",
        "      <td>299</td>\n",
        "      <td>0 min 15 sec</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>4th</th>\n",
        "      <td>Past</td>\n",
        "      <td>01Jun2020</td>\n",
        "      <td>16Jun2020</td>\n",
        "      <td>81800269</td>\n",
        "      <td>SIR-F</td>\n",
        "      <td>1.10</td>\n",
        "      <td>0.019470</td>\n",
        "      <td>0.000263</td>\n",
        "      <td>0.020853</td>\n",
        "      <td>0.018349</td>\n",
        "      <td>360</td>\n",
        "      <td>13</td>\n",
        "      <td>949</td>\n",
        "      <td>0.019</td>\n",
        "      <td>11</td>\n",
        "      <td>0.062363</td>\n",
        "      <td>992</td>\n",
        "      <td>1 min  0 sec</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>5th</th>\n",
        "      <td>Past</td>\n",
        "      <td>17Jun2020</td>\n",
        "      <td>01Jul2020</td>\n",
        "      <td>81800269</td>\n",
        "      <td>SIR-F</td>\n",
        "      <td>0.92</td>\n",
        "      <td>0.034958</td>\n",
        "      <td>0.000148</td>\n",
        "      <td>0.021794</td>\n",
        "      <td>0.022737</td>\n",
        "      <td>360</td>\n",
        "      <td>10</td>\n",
        "      <td>1689</td>\n",
        "      <td>0.035</td>\n",
        "      <td>11</td>\n",
        "      <td>0.027110</td>\n",
        "      <td>1078</td>\n",
        "      <td>1 min  0 sec</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>6th</th>\n",
        "      <td>Past</td>\n",
        "      <td>02Jul2020</td>\n",
        "      <td>16Jul2020</td>\n",
        "      <td>81800269</td>\n",
        "      <td>SIR-F</td>\n",
        "      <td>0.93</td>\n",
        "      <td>0.043986</td>\n",
        "      <td>0.000826</td>\n",
        "      <td>0.023903</td>\n",
        "      <td>0.023878</td>\n",
        "      <td>360</td>\n",
        "      <td>10</td>\n",
        "      <td>302</td>\n",
        "      <td>0.044</td>\n",
        "      <td>10</td>\n",
        "      <td>0.035907</td>\n",
        "      <td>106</td>\n",
        "      <td>0 min  5 sec</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>7th</th>\n",
        "      <td>Past</td>\n",
        "      <td>17Jul2020</td>\n",
        "      <td>30Jul2020</td>\n",
        "      <td>81800269</td>\n",
        "      <td>SIR-F</td>\n",
        "      <td>1.03</td>\n",
        "      <td>0.080195</td>\n",
        "      <td>0.000002</td>\n",
        "      <td>0.028132</td>\n",
        "      <td>0.025103</td>\n",
        "      <td>360</td>\n",
        "      <td>9</td>\n",
        "      <td>132847</td>\n",
        "      <td>0.080</td>\n",
        "      <td>8</td>\n",
        "      <td>0.035405</td>\n",
        "      <td>193</td>\n",
        "      <td>0 min 10 sec</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>8th</th>\n",
        "      <td>Past</td>\n",
        "      <td>31Jul2020</td>\n",
        "      <td>15Aug2020</td>\n",
        "      <td>81800269</td>\n",
        "      <td>SIR-F</td>\n",
        "      <td>1.07</td>\n",
        "      <td>0.037224</td>\n",
        "      <td>0.000972</td>\n",
        "      <td>0.025865</td>\n",
        "      <td>0.022274</td>\n",
        "      <td>360</td>\n",
        "      <td>11</td>\n",
        "      <td>257</td>\n",
        "      <td>0.037</td>\n",
        "      <td>9</td>\n",
        "      <td>0.031195</td>\n",
        "      <td>358</td>\n",
        "      <td>0 min 25 sec</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>9th</th>\n",
        "      <td>Past</td>\n",
        "      <td>16Aug2020</td>\n",
        "      <td>03Sep2020</td>\n",
        "      <td>81800269</td>\n",
        "      <td>SIR-F</td>\n",
        "      <td>1.20</td>\n",
        "      <td>0.034381</td>\n",
        "      <td>0.000511</td>\n",
        "      <td>0.019142</td>\n",
        "      <td>0.014878</td>\n",
        "      <td>360</td>\n",
        "      <td>16</td>\n",
        "      <td>489</td>\n",
        "      <td>0.034</td>\n",
        "      <td>13</td>\n",
        "      <td>0.026755</td>\n",
        "      <td>863</td>\n",
        "      <td>1 min  0 sec</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>10th</th>\n",
        "      <td>Past</td>\n",
        "      <td>04Sep2020</td>\n",
        "      <td>18Sep2020</td>\n",
        "      <td>81800269</td>\n",
        "      <td>SIR-F</td>\n",
        "      <td>1.16</td>\n",
        "      <td>0.050314</td>\n",
        "      <td>0.000163</td>\n",
        "      <td>0.017983</td>\n",
        "      <td>0.014537</td>\n",
        "      <td>360</td>\n",
        "      <td>17</td>\n",
        "      <td>1533</td>\n",
        "      <td>0.050</td>\n",
        "      <td>13</td>\n",
        "      <td>0.017700</td>\n",
        "      <td>1036</td>\n",
        "      <td>1 min  0 sec</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>11th</th>\n",
        "      <td>Past</td>\n",
        "      <td>19Sep2020</td>\n",
        "      <td>30Sep2020</td>\n",
        "      <td>81800269</td>\n",
        "      <td>SIR-F</td>\n",
        "      <td>1.57</td>\n",
        "      <td>0.035206</td>\n",
        "      <td>0.000180</td>\n",
        "      <td>0.020232</td>\n",
        "      <td>0.012272</td>\n",
        "      <td>360</td>\n",
        "      <td>20</td>\n",
        "      <td>1388</td>\n",
        "      <td>0.035</td>\n",
        "      <td>12</td>\n",
        "      <td>0.009289</td>\n",
        "      <td>204</td>\n",
        "      <td>0 min 20 sec</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>12th</th>\n",
        "      <td>Past</td>\n",
        "      <td>01Oct2020</td>\n",
        "      <td>12Oct2020</td>\n",
        "      <td>81800269</td>\n",
        "      <td>SIR-F</td>\n",
        "      <td>1.49</td>\n",
        "      <td>0.000808</td>\n",
        "      <td>0.000855</td>\n",
        "      <td>0.016594</td>\n",
        "      <td>0.010265</td>\n",
        "      <td>360</td>\n",
        "      <td>24</td>\n",
        "      <td>292</td>\n",
        "      <td>0.001</td>\n",
        "      <td>15</td>\n",
        "      <td>0.013011</td>\n",
        "      <td>231</td>\n",
        "      <td>0 min 10 sec</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th rowspan=\"13\" valign=\"top\">Russia</th>\n",
        "      <th>0th</th>\n",
        "      <td>Past</td>\n",
        "      <td>12Feb2020</td>\n",
        "      <td>06May2020</td>\n",
        "      <td>330457362</td>\n",
        "      <td>SIR-F</td>\n",
        "      <td>0.02</td>\n",
        "      <td>0.602763</td>\n",
        "      <td>0.544883</td>\n",
        "      <td>0.034081</td>\n",
        "      <td>0.002299</td>\n",
        "      <td>360</td>\n",
        "      <td>108</td>\n",
        "      <td>0</td>\n",
        "      <td>0.603</td>\n",
        "      <td>7</td>\n",
        "      <td>18.966727</td>\n",
        "      <td>839</td>\n",
        "      <td>1 min  1 sec</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>1st</th>\n",
        "      <td>Past</td>\n",
        "      <td>07May2020</td>\n",
        "      <td>18May2020</td>\n",
        "      <td>330457362</td>\n",
        "      <td>SIR-F</td>\n",
        "      <td>2.85</td>\n",
        "      <td>0.001806</td>\n",
        "      <td>0.000093</td>\n",
        "      <td>0.013110</td>\n",
        "      <td>0.004495</td>\n",
        "      <td>360</td>\n",
        "      <td>55</td>\n",
        "      <td>2675</td>\n",
        "      <td>0.002</td>\n",
        "      <td>19</td>\n",
        "      <td>0.087751</td>\n",
        "      <td>878</td>\n",
        "      <td>1 min  0 sec</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>2nd</th>\n",
        "      <td>Past</td>\n",
        "      <td>19May2020</td>\n",
        "      <td>29May2020</td>\n",
        "      <td>330457362</td>\n",
        "      <td>SIR-F</td>\n",
        "      <td>1.03</td>\n",
        "      <td>0.000337</td>\n",
        "      <td>0.000113</td>\n",
        "      <td>0.006707</td>\n",
        "      <td>0.006392</td>\n",
        "      <td>360</td>\n",
        "      <td>39</td>\n",
        "      <td>2208</td>\n",
        "      <td>0.000</td>\n",
        "      <td>37</td>\n",
        "      <td>0.111343</td>\n",
        "      <td>1018</td>\n",
        "      <td>1 min  0 sec</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>3rd</th>\n",
        "      <td>Past</td>\n",
        "      <td>30May2020</td>\n",
        "      <td>10Jun2020</td>\n",
        "      <td>330457362</td>\n",
        "      <td>SIR-F</td>\n",
        "      <td>1.00</td>\n",
        "      <td>0.001120</td>\n",
        "      <td>0.000106</td>\n",
        "      <td>0.004818</td>\n",
        "      <td>0.004706</td>\n",
        "      <td>360</td>\n",
        "      <td>53</td>\n",
        "      <td>2363</td>\n",
        "      <td>0.001</td>\n",
        "      <td>51</td>\n",
        "      <td>0.101672</td>\n",
        "      <td>949</td>\n",
        "      <td>1 min  0 sec</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>4th</th>\n",
        "      <td>Past</td>\n",
        "      <td>11Jun2020</td>\n",
        "      <td>21Jun2020</td>\n",
        "      <td>330457362</td>\n",
        "      <td>SIR-F</td>\n",
        "      <td>1.10</td>\n",
        "      <td>0.000771</td>\n",
        "      <td>0.000079</td>\n",
        "      <td>0.003680</td>\n",
        "      <td>0.003265</td>\n",
        "      <td>360</td>\n",
        "      <td>76</td>\n",
        "      <td>3160</td>\n",
        "      <td>0.001</td>\n",
        "      <td>67</td>\n",
        "      <td>0.063317</td>\n",
        "      <td>924</td>\n",
        "      <td>1 min  0 sec</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>5th</th>\n",
        "      <td>Past</td>\n",
        "      <td>22Jun2020</td>\n",
        "      <td>03Jul2020</td>\n",
        "      <td>330457362</td>\n",
        "      <td>SIR-F</td>\n",
        "      <td>1.03</td>\n",
        "      <td>0.018470</td>\n",
        "      <td>0.000004</td>\n",
        "      <td>0.002736</td>\n",
        "      <td>0.002599</td>\n",
        "      <td>360</td>\n",
        "      <td>96</td>\n",
        "      <td>68316</td>\n",
        "      <td>0.018</td>\n",
        "      <td>91</td>\n",
        "      <td>0.062681</td>\n",
        "      <td>982</td>\n",
        "      <td>1 min  0 sec</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>6th</th>\n",
        "      <td>Past</td>\n",
        "      <td>04Jul2020</td>\n",
        "      <td>17Jul2020</td>\n",
        "      <td>330457362</td>\n",
        "      <td>SIR-F</td>\n",
        "      <td>0.82</td>\n",
        "      <td>0.025150</td>\n",
        "      <td>0.000002</td>\n",
        "      <td>0.002209</td>\n",
        "      <td>0.002617</td>\n",
        "      <td>360</td>\n",
        "      <td>95</td>\n",
        "      <td>103465</td>\n",
        "      <td>0.025</td>\n",
        "      <td>113</td>\n",
        "      <td>0.069530</td>\n",
        "      <td>960</td>\n",
        "      <td>1 min  0 sec</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>7th</th>\n",
        "      <td>Past</td>\n",
        "      <td>18Jul2020</td>\n",
        "      <td>31Jul2020</td>\n",
        "      <td>330457362</td>\n",
        "      <td>SIR-F</td>\n",
        "      <td>0.74</td>\n",
        "      <td>0.018828</td>\n",
        "      <td>0.000060</td>\n",
        "      <td>0.001808</td>\n",
        "      <td>0.002322</td>\n",
        "      <td>360</td>\n",
        "      <td>107</td>\n",
        "      <td>4193</td>\n",
        "      <td>0.019</td>\n",
        "      <td>138</td>\n",
        "      <td>0.090879</td>\n",
        "      <td>767</td>\n",
        "      <td>1 min  0 sec</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>8th</th>\n",
        "      <td>Past</td>\n",
        "      <td>01Aug2020</td>\n",
        "      <td>15Aug2020</td>\n",
        "      <td>330457362</td>\n",
        "      <td>SIR-F</td>\n",
        "      <td>0.73</td>\n",
        "      <td>0.014333</td>\n",
        "      <td>0.000084</td>\n",
        "      <td>0.001433</td>\n",
        "      <td>0.001855</td>\n",
        "      <td>360</td>\n",
        "      <td>134</td>\n",
        "      <td>2987</td>\n",
        "      <td>0.014</td>\n",
        "      <td>174</td>\n",
        "      <td>0.115306</td>\n",
        "      <td>933</td>\n",
        "      <td>1 min  0 sec</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>9th</th>\n",
        "      <td>Past</td>\n",
        "      <td>16Aug2020</td>\n",
        "      <td>02Sep2020</td>\n",
        "      <td>330457362</td>\n",
        "      <td>SIR-F</td>\n",
        "      <td>0.81</td>\n",
        "      <td>0.019814</td>\n",
        "      <td>0.000004</td>\n",
        "      <td>0.001273</td>\n",
        "      <td>0.001543</td>\n",
        "      <td>360</td>\n",
        "      <td>162</td>\n",
        "      <td>68337</td>\n",
        "      <td>0.020</td>\n",
        "      <td>196</td>\n",
        "      <td>0.057769</td>\n",
        "      <td>1026</td>\n",
        "      <td>1 min  0 sec</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>10th</th>\n",
        "      <td>Past</td>\n",
        "      <td>03Sep2020</td>\n",
        "      <td>18Sep2020</td>\n",
        "      <td>330457362</td>\n",
        "      <td>SIR-F</td>\n",
        "      <td>1.02</td>\n",
        "      <td>0.001628</td>\n",
        "      <td>0.000021</td>\n",
        "      <td>0.001279</td>\n",
        "      <td>0.001232</td>\n",
        "      <td>360</td>\n",
        "      <td>202</td>\n",
        "      <td>11747</td>\n",
        "      <td>0.002</td>\n",
        "      <td>195</td>\n",
        "      <td>0.038815</td>\n",
        "      <td>997</td>\n",
        "      <td>1 min  0 sec</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>11th</th>\n",
        "      <td>Past</td>\n",
        "      <td>19Sep2020</td>\n",
        "      <td>01Oct2020</td>\n",
        "      <td>330457362</td>\n",
        "      <td>SIR-F</td>\n",
        "      <td>1.59</td>\n",
        "      <td>0.001468</td>\n",
        "      <td>0.000037</td>\n",
        "      <td>0.001478</td>\n",
        "      <td>0.000892</td>\n",
        "      <td>360</td>\n",
        "      <td>280</td>\n",
        "      <td>6772</td>\n",
        "      <td>0.001</td>\n",
        "      <td>169</td>\n",
        "      <td>0.026616</td>\n",
        "      <td>939</td>\n",
        "      <td>1 min  0 sec</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>12th</th>\n",
        "      <td>Past</td>\n",
        "      <td>02Oct2020</td>\n",
        "      <td>12Oct2020</td>\n",
        "      <td>330457362</td>\n",
        "      <td>SIR-F</td>\n",
        "      <td>2.30</td>\n",
        "      <td>0.001324</td>\n",
        "      <td>0.000025</td>\n",
        "      <td>0.002174</td>\n",
        "      <td>0.000919</td>\n",
        "      <td>360</td>\n",
        "      <td>271</td>\n",
        "      <td>10005</td>\n",
        "      <td>0.001</td>\n",
        "      <td>114</td>\n",
        "      <td>0.016206</td>\n",
        "      <td>1039</td>\n",
        "      <td>1 min  0 sec</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th rowspan=\"13\" valign=\"top\">Bolivia</th>\n",
        "      <th>0th</th>\n",
        "      <td>Past</td>\n",
        "      <td>01Apr2020</td>\n",
        "      <td>13Jun2020</td>\n",
        "      <td>11353142</td>\n",
        "      <td>SIR-F</td>\n",
        "      <td>8.49</td>\n",
        "      <td>0.000948</td>\n",
        "      <td>0.000813</td>\n",
        "      <td>0.020592</td>\n",
        "      <td>0.001611</td>\n",
        "      <td>360</td>\n",
        "      <td>155</td>\n",
        "      <td>307</td>\n",
        "      <td>0.001</td>\n",
        "      <td>12</td>\n",
        "      <td>1.344826</td>\n",
        "      <td>958</td>\n",
        "      <td>1 min  0 sec</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>1st</th>\n",
        "      <td>Past</td>\n",
        "      <td>14Jun2020</td>\n",
        "      <td>25Jun2020</td>\n",
        "      <td>11353142</td>\n",
        "      <td>SIR-F</td>\n",
        "      <td>2.26</td>\n",
        "      <td>0.000626</td>\n",
        "      <td>0.000399</td>\n",
        "      <td>0.012805</td>\n",
        "      <td>0.005262</td>\n",
        "      <td>360</td>\n",
        "      <td>47</td>\n",
        "      <td>626</td>\n",
        "      <td>0.001</td>\n",
        "      <td>19</td>\n",
        "      <td>0.029513</td>\n",
        "      <td>804</td>\n",
        "      <td>1 min  0 sec</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>2nd</th>\n",
        "      <td>Past</td>\n",
        "      <td>26Jun2020</td>\n",
        "      <td>05Jul2020</td>\n",
        "      <td>11353142</td>\n",
        "      <td>SIR-F</td>\n",
        "      <td>2.45</td>\n",
        "      <td>0.044230</td>\n",
        "      <td>0.000059</td>\n",
        "      <td>0.012148</td>\n",
        "      <td>0.004679</td>\n",
        "      <td>360</td>\n",
        "      <td>53</td>\n",
        "      <td>4220</td>\n",
        "      <td>0.044</td>\n",
        "      <td>20</td>\n",
        "      <td>0.013818</td>\n",
        "      <td>252</td>\n",
        "      <td>0 min 15 sec</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>3rd</th>\n",
        "      <td>Past</td>\n",
        "      <td>06Jul2020</td>\n",
        "      <td>15Jul2020</td>\n",
        "      <td>11353142</td>\n",
        "      <td>SIR-F</td>\n",
        "      <td>2.55</td>\n",
        "      <td>0.039537</td>\n",
        "      <td>0.000046</td>\n",
        "      <td>0.010829</td>\n",
        "      <td>0.004028</td>\n",
        "      <td>360</td>\n",
        "      <td>62</td>\n",
        "      <td>5447</td>\n",
        "      <td>0.040</td>\n",
        "      <td>23</td>\n",
        "      <td>0.008409</td>\n",
        "      <td>1004</td>\n",
        "      <td>1 min  0 sec</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>4th</th>\n",
        "      <td>Past</td>\n",
        "      <td>16Jul2020</td>\n",
        "      <td>23Jul2020</td>\n",
        "      <td>11353142</td>\n",
        "      <td>SIR-F</td>\n",
        "      <td>3.80</td>\n",
        "      <td>0.003448</td>\n",
        "      <td>0.000327</td>\n",
        "      <td>0.010564</td>\n",
        "      <td>0.002444</td>\n",
        "      <td>360</td>\n",
        "      <td>102</td>\n",
        "      <td>764</td>\n",
        "      <td>0.003</td>\n",
        "      <td>23</td>\n",
        "      <td>0.016094</td>\n",
        "      <td>233</td>\n",
        "      <td>0 min 10 sec</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>5th</th>\n",
        "      <td>Past</td>\n",
        "      <td>24Jul2020</td>\n",
        "      <td>31Jul2020</td>\n",
        "      <td>11353142</td>\n",
        "      <td>SIR-F</td>\n",
        "      <td>3.74</td>\n",
        "      <td>0.050134</td>\n",
        "      <td>0.000019</td>\n",
        "      <td>0.007781</td>\n",
        "      <td>0.001956</td>\n",
        "      <td>360</td>\n",
        "      <td>127</td>\n",
        "      <td>13369</td>\n",
        "      <td>0.050</td>\n",
        "      <td>32</td>\n",
        "      <td>0.011217</td>\n",
        "      <td>637</td>\n",
        "      <td>0 min 35 sec</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>6th</th>\n",
        "      <td>Past</td>\n",
        "      <td>01Aug2020</td>\n",
        "      <td>09Aug2020</td>\n",
        "      <td>11353142</td>\n",
        "      <td>SIR-F</td>\n",
        "      <td>1.86</td>\n",
        "      <td>0.039504</td>\n",
        "      <td>0.000054</td>\n",
        "      <td>0.006684</td>\n",
        "      <td>0.003397</td>\n",
        "      <td>360</td>\n",
        "      <td>73</td>\n",
        "      <td>4601</td>\n",
        "      <td>0.040</td>\n",
        "      <td>37</td>\n",
        "      <td>0.016880</td>\n",
        "      <td>185</td>\n",
        "      <td>0 min 10 sec</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>7th</th>\n",
        "      <td>Past</td>\n",
        "      <td>10Aug2020</td>\n",
        "      <td>17Aug2020</td>\n",
        "      <td>11353142</td>\n",
        "      <td>SIR-F</td>\n",
        "      <td>1.24</td>\n",
        "      <td>0.018271</td>\n",
        "      <td>0.000162</td>\n",
        "      <td>0.005346</td>\n",
        "      <td>0.004059</td>\n",
        "      <td>360</td>\n",
        "      <td>61</td>\n",
        "      <td>1542</td>\n",
        "      <td>0.018</td>\n",
        "      <td>46</td>\n",
        "      <td>0.010728</td>\n",
        "      <td>274</td>\n",
        "      <td>0 min 15 sec</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>8th</th>\n",
        "      <td>Past</td>\n",
        "      <td>18Aug2020</td>\n",
        "      <td>25Aug2020</td>\n",
        "      <td>11353142</td>\n",
        "      <td>SIR-F</td>\n",
        "      <td>0.68</td>\n",
        "      <td>0.000655</td>\n",
        "      <td>0.000256</td>\n",
        "      <td>0.004274</td>\n",
        "      <td>0.006041</td>\n",
        "      <td>360</td>\n",
        "      <td>41</td>\n",
        "      <td>976</td>\n",
        "      <td>0.001</td>\n",
        "      <td>58</td>\n",
        "      <td>0.015997</td>\n",
        "      <td>570</td>\n",
        "      <td>0 min 40 sec</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>9th</th>\n",
        "      <td>Past</td>\n",
        "      <td>26Aug2020</td>\n",
        "      <td>02Sep2020</td>\n",
        "      <td>11353142</td>\n",
        "      <td>SIR-F</td>\n",
        "      <td>0.43</td>\n",
        "      <td>0.019029</td>\n",
        "      <td>0.000237</td>\n",
        "      <td>0.004146</td>\n",
        "      <td>0.009276</td>\n",
        "      <td>360</td>\n",
        "      <td>26</td>\n",
        "      <td>1054</td>\n",
        "      <td>0.019</td>\n",
        "      <td>60</td>\n",
        "      <td>0.004036</td>\n",
        "      <td>267</td>\n",
        "      <td>0 min 15 sec</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>10th</th>\n",
        "      <td>Past</td>\n",
        "      <td>03Sep2020</td>\n",
        "      <td>10Sep2020</td>\n",
        "      <td>11353142</td>\n",
        "      <td>SIR-F</td>\n",
        "      <td>0.31</td>\n",
        "      <td>0.182304</td>\n",
        "      <td>0.000846</td>\n",
        "      <td>0.004662</td>\n",
        "      <td>0.011317</td>\n",
        "      <td>360</td>\n",
        "      <td>22</td>\n",
        "      <td>295</td>\n",
        "      <td>0.182</td>\n",
        "      <td>53</td>\n",
        "      <td>0.043770</td>\n",
        "      <td>540</td>\n",
        "      <td>0 min 30 sec</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>11th</th>\n",
        "      <td>Past</td>\n",
        "      <td>11Sep2020</td>\n",
        "      <td>21Sep2020</td>\n",
        "      <td>11353142</td>\n",
        "      <td>SIR-F</td>\n",
        "      <td>0.61</td>\n",
        "      <td>0.060726</td>\n",
        "      <td>0.000059</td>\n",
        "      <td>0.004344</td>\n",
        "      <td>0.006609</td>\n",
        "      <td>360</td>\n",
        "      <td>37</td>\n",
        "      <td>4229</td>\n",
        "      <td>0.061</td>\n",
        "      <td>57</td>\n",
        "      <td>0.010327</td>\n",
        "      <td>290</td>\n",
        "      <td>0 min 15 sec</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>12th</th>\n",
        "      <td>Past</td>\n",
        "      <td>22Sep2020</td>\n",
        "      <td>12Oct2020</td>\n",
        "      <td>11353142</td>\n",
        "      <td>SIR-F</td>\n",
        "      <td>0.60</td>\n",
        "      <td>0.059281</td>\n",
        "      <td>0.000093</td>\n",
        "      <td>0.002494</td>\n",
        "      <td>0.003792</td>\n",
        "      <td>360</td>\n",
        "      <td>65</td>\n",
        "      <td>2699</td>\n",
        "      <td>0.059</td>\n",
        "      <td>100</td>\n",
        "      <td>0.016328</td>\n",
        "      <td>182</td>\n",
        "      <td>0 min 10 sec</td>\n",
        "    </tr>\n",
        "  </tbody>\n",
        "</table>\n",
        "</div>"
       ],
       "output_type": "pyout",
       "prompt_number": 12,
       "text": [
        "               Type      Start        End  Population    ODE    Rt     theta  \\\n",
        "Country Phase                                                                  \n",
        "Iran    0th    Past  26Feb2020  29Mar2020    81800269  SIR-F  5.68  0.248343   \n",
        "        1st    Past  30Mar2020  16Apr2020    81800269  SIR-F  0.94  0.062430   \n",
        "        2nd    Past  17Apr2020  13May2020    81800269  SIR-F  0.76  0.056466   \n",
        "        3rd    Past  14May2020  31May2020    81800269  SIR-F  1.29  0.020228   \n",
        "        4th    Past  01Jun2020  16Jun2020    81800269  SIR-F  1.10  0.019470   \n",
        "        5th    Past  17Jun2020  01Jul2020    81800269  SIR-F  0.92  0.034958   \n",
        "        6th    Past  02Jul2020  16Jul2020    81800269  SIR-F  0.93  0.043986   \n",
        "        7th    Past  17Jul2020  30Jul2020    81800269  SIR-F  1.03  0.080195   \n",
        "        8th    Past  31Jul2020  15Aug2020    81800269  SIR-F  1.07  0.037224   \n",
        "        9th    Past  16Aug2020  03Sep2020    81800269  SIR-F  1.20  0.034381   \n",
        "        10th   Past  04Sep2020  18Sep2020    81800269  SIR-F  1.16  0.050314   \n",
        "        11th   Past  19Sep2020  30Sep2020    81800269  SIR-F  1.57  0.035206   \n",
        "        12th   Past  01Oct2020  12Oct2020    81800269  SIR-F  1.49  0.000808   \n",
        "Russia  0th    Past  12Feb2020  06May2020   330457362  SIR-F  0.02  0.602763   \n",
        "        1st    Past  07May2020  18May2020   330457362  SIR-F  2.85  0.001806   \n",
        "        2nd    Past  19May2020  29May2020   330457362  SIR-F  1.03  0.000337   \n",
        "        3rd    Past  30May2020  10Jun2020   330457362  SIR-F  1.00  0.001120   \n",
        "        4th    Past  11Jun2020  21Jun2020   330457362  SIR-F  1.10  0.000771   \n",
        "        5th    Past  22Jun2020  03Jul2020   330457362  SIR-F  1.03  0.018470   \n",
        "        6th    Past  04Jul2020  17Jul2020   330457362  SIR-F  0.82  0.025150   \n",
        "        7th    Past  18Jul2020  31Jul2020   330457362  SIR-F  0.74  0.018828   \n",
        "        8th    Past  01Aug2020  15Aug2020   330457362  SIR-F  0.73  0.014333   \n",
        "        9th    Past  16Aug2020  02Sep2020   330457362  SIR-F  0.81  0.019814   \n",
        "        10th   Past  03Sep2020  18Sep2020   330457362  SIR-F  1.02  0.001628   \n",
        "        11th   Past  19Sep2020  01Oct2020   330457362  SIR-F  1.59  0.001468   \n",
        "        12th   Past  02Oct2020  12Oct2020   330457362  SIR-F  2.30  0.001324   \n",
        "Bolivia 0th    Past  01Apr2020  13Jun2020    11353142  SIR-F  8.49  0.000948   \n",
        "        1st    Past  14Jun2020  25Jun2020    11353142  SIR-F  2.26  0.000626   \n",
        "        2nd    Past  26Jun2020  05Jul2020    11353142  SIR-F  2.45  0.044230   \n",
        "        3rd    Past  06Jul2020  15Jul2020    11353142  SIR-F  2.55  0.039537   \n",
        "        4th    Past  16Jul2020  23Jul2020    11353142  SIR-F  3.80  0.003448   \n",
        "        5th    Past  24Jul2020  31Jul2020    11353142  SIR-F  3.74  0.050134   \n",
        "        6th    Past  01Aug2020  09Aug2020    11353142  SIR-F  1.86  0.039504   \n",
        "        7th    Past  10Aug2020  17Aug2020    11353142  SIR-F  1.24  0.018271   \n",
        "        8th    Past  18Aug2020  25Aug2020    11353142  SIR-F  0.68  0.000655   \n",
        "        9th    Past  26Aug2020  02Sep2020    11353142  SIR-F  0.43  0.019029   \n",
        "        10th   Past  03Sep2020  10Sep2020    11353142  SIR-F  0.31  0.182304   \n",
        "        11th   Past  11Sep2020  21Sep2020    11353142  SIR-F  0.61  0.060726   \n",
        "        12th   Past  22Sep2020  12Oct2020    11353142  SIR-F  0.60  0.059281   \n",
        "\n",
        "                  kappa       rho     sigma  tau  1/gamma [day]  \\\n",
        "Country Phase                                                     \n",
        "Iran    0th    0.000243  0.051945  0.006633  360             37   \n",
        "        1st    0.000214  0.018588  0.018290  360             13   \n",
        "        2nd    0.000071  0.018152  0.022424  360             11   \n",
        "        3rd    0.000162  0.025894  0.019500  360             12   \n",
        "        4th    0.000263  0.020853  0.018349  360             13   \n",
        "        5th    0.000148  0.021794  0.022737  360             10   \n",
        "        6th    0.000826  0.023903  0.023878  360             10   \n",
        "        7th    0.000002  0.028132  0.025103  360              9   \n",
        "        8th    0.000972  0.025865  0.022274  360             11   \n",
        "        9th    0.000511  0.019142  0.014878  360             16   \n",
        "        10th   0.000163  0.017983  0.014537  360             17   \n",
        "        11th   0.000180  0.020232  0.012272  360             20   \n",
        "        12th   0.000855  0.016594  0.010265  360             24   \n",
        "Russia  0th    0.544883  0.034081  0.002299  360            108   \n",
        "        1st    0.000093  0.013110  0.004495  360             55   \n",
        "        2nd    0.000113  0.006707  0.006392  360             39   \n",
        "        3rd    0.000106  0.004818  0.004706  360             53   \n",
        "        4th    0.000079  0.003680  0.003265  360             76   \n",
        "        5th    0.000004  0.002736  0.002599  360             96   \n",
        "        6th    0.000002  0.002209  0.002617  360             95   \n",
        "        7th    0.000060  0.001808  0.002322  360            107   \n",
        "        8th    0.000084  0.001433  0.001855  360            134   \n",
        "        9th    0.000004  0.001273  0.001543  360            162   \n",
        "        10th   0.000021  0.001279  0.001232  360            202   \n",
        "        11th   0.000037  0.001478  0.000892  360            280   \n",
        "        12th   0.000025  0.002174  0.000919  360            271   \n",
        "Bolivia 0th    0.000813  0.020592  0.001611  360            155   \n",
        "        1st    0.000399  0.012805  0.005262  360             47   \n",
        "        2nd    0.000059  0.012148  0.004679  360             53   \n",
        "        3rd    0.000046  0.010829  0.004028  360             62   \n",
        "        4th    0.000327  0.010564  0.002444  360            102   \n",
        "        5th    0.000019  0.007781  0.001956  360            127   \n",
        "        6th    0.000054  0.006684  0.003397  360             73   \n",
        "        7th    0.000162  0.005346  0.004059  360             61   \n",
        "        8th    0.000256  0.004274  0.006041  360             41   \n",
        "        9th    0.000237  0.004146  0.009276  360             26   \n",
        "        10th   0.000846  0.004662  0.011317  360             22   \n",
        "        11th   0.000059  0.004344  0.006609  360             37   \n",
        "        12th   0.000093  0.002494  0.003792  360             65   \n",
        "\n",
        "               1/alpha2 [day]  alpha1 [-]  1/beta [day]      RMSLE  Trials  \\\n",
        "Country Phase                                                                \n",
        "Iran    0th              1029       0.248             4   4.331893    1024   \n",
        "        1st              1170       0.062            13   0.222973     791   \n",
        "        2nd              3515       0.056            13   0.148853     208   \n",
        "        3rd              1543       0.020             9   0.035904     299   \n",
        "        4th               949       0.019            11   0.062363     992   \n",
        "        5th              1689       0.035            11   0.027110    1078   \n",
        "        6th               302       0.044            10   0.035907     106   \n",
        "        7th            132847       0.080             8   0.035405     193   \n",
        "        8th               257       0.037             9   0.031195     358   \n",
        "        9th               489       0.034            13   0.026755     863   \n",
        "        10th             1533       0.050            13   0.017700    1036   \n",
        "        11th             1388       0.035            12   0.009289     204   \n",
        "        12th              292       0.001            15   0.013011     231   \n",
        "Russia  0th                 0       0.603             7  18.966727     839   \n",
        "        1st              2675       0.002            19   0.087751     878   \n",
        "        2nd              2208       0.000            37   0.111343    1018   \n",
        "        3rd              2363       0.001            51   0.101672     949   \n",
        "        4th              3160       0.001            67   0.063317     924   \n",
        "        5th             68316       0.018            91   0.062681     982   \n",
        "        6th            103465       0.025           113   0.069530     960   \n",
        "        7th              4193       0.019           138   0.090879     767   \n",
        "        8th              2987       0.014           174   0.115306     933   \n",
        "        9th             68337       0.020           196   0.057769    1026   \n",
        "        10th            11747       0.002           195   0.038815     997   \n",
        "        11th             6772       0.001           169   0.026616     939   \n",
        "        12th            10005       0.001           114   0.016206    1039   \n",
        "Bolivia 0th               307       0.001            12   1.344826     958   \n",
        "        1st               626       0.001            19   0.029513     804   \n",
        "        2nd              4220       0.044            20   0.013818     252   \n",
        "        3rd              5447       0.040            23   0.008409    1004   \n",
        "        4th               764       0.003            23   0.016094     233   \n",
        "        5th             13369       0.050            32   0.011217     637   \n",
        "        6th              4601       0.040            37   0.016880     185   \n",
        "        7th              1542       0.018            46   0.010728     274   \n",
        "        8th               976       0.001            58   0.015997     570   \n",
        "        9th              1054       0.019            60   0.004036     267   \n",
        "        10th              295       0.182            53   0.043770     540   \n",
        "        11th             4229       0.061            57   0.010327     290   \n",
        "        12th             2699       0.059           100   0.016328     182   \n",
        "\n",
        "                    Runtime  \n",
        "Country Phase                \n",
        "Iran    0th    1 min  0 sec  \n",
        "        1st    1 min  0 sec  \n",
        "        2nd    0 min 10 sec  \n",
        "        3rd    0 min 15 sec  \n",
        "        4th    1 min  0 sec  \n",
        "        5th    1 min  0 sec  \n",
        "        6th    0 min  5 sec  \n",
        "        7th    0 min 10 sec  \n",
        "        8th    0 min 25 sec  \n",
        "        9th    1 min  0 sec  \n",
        "        10th   1 min  0 sec  \n",
        "        11th   0 min 20 sec  \n",
        "        12th   0 min 10 sec  \n",
        "Russia  0th    1 min  1 sec  \n",
        "        1st    1 min  0 sec  \n",
        "        2nd    1 min  0 sec  \n",
        "        3rd    1 min  0 sec  \n",
        "        4th    1 min  0 sec  \n",
        "        5th    1 min  0 sec  \n",
        "        6th    1 min  0 sec  \n",
        "        7th    1 min  0 sec  \n",
        "        8th    1 min  0 sec  \n",
        "        9th    1 min  0 sec  \n",
        "        10th   1 min  0 sec  \n",
        "        11th   1 min  0 sec  \n",
        "        12th   1 min  0 sec  \n",
        "Bolivia 0th    1 min  0 sec  \n",
        "        1st    1 min  0 sec  \n",
        "        2nd    0 min 15 sec  \n",
        "        3rd    1 min  0 sec  \n",
        "        4th    0 min 10 sec  \n",
        "        5th    0 min 35 sec  \n",
        "        6th    0 min 10 sec  \n",
        "        7th    0 min 15 sec  \n",
        "        8th    0 min 40 sec  \n",
        "        9th    0 min 15 sec  \n",
        "        10th   0 min 30 sec  \n",
        "        11th   0 min 15 sec  \n",
        "        12th   0 min 10 sec  "
       ]
      }
     ],
     "prompt_number": 12
    },
    {
     "cell_type": "markdown",
     "metadata": {},
     "source": [
      "## Compare the history of parameters\n",
      "Here, compare the history of parameter values if countries."
     ]
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "# All parameter/day parameter/Rt/OxCGRT\n",
      "analyser.track().head()"
     ],
     "language": "python",
     "metadata": {},
     "outputs": [
      {
       "html": [
        "<div>\n",
        "<style scoped>\n",
        "    .dataframe tbody tr th:only-of-type {\n",
        "        vertical-align: middle;\n",
        "    }\n",
        "\n",
        "    .dataframe tbody tr th {\n",
        "        vertical-align: top;\n",
        "    }\n",
        "\n",
        "    .dataframe thead th {\n",
        "        text-align: right;\n",
        "    }\n",
        "</style>\n",
        "<table border=\"1\" class=\"dataframe\">\n",
        "  <thead>\n",
        "    <tr style=\"text-align: right;\">\n",
        "      <th></th>\n",
        "      <th>Date</th>\n",
        "      <th>Country</th>\n",
        "      <th>theta</th>\n",
        "      <th>kappa</th>\n",
        "      <th>rho</th>\n",
        "      <th>sigma</th>\n",
        "      <th>alpha1 [-]</th>\n",
        "      <th>1/alpha2 [day]</th>\n",
        "      <th>1/beta [day]</th>\n",
        "      <th>1/gamma [day]</th>\n",
        "      <th>...</th>\n",
        "      <th>Cancel_events</th>\n",
        "      <th>Gatherings_restrictions</th>\n",
        "      <th>Transport_closing</th>\n",
        "      <th>Stay_home_restrictions</th>\n",
        "      <th>Internal_movement_restrictions</th>\n",
        "      <th>International_movement_restrictions</th>\n",
        "      <th>Information_campaigns</th>\n",
        "      <th>Testing_policy</th>\n",
        "      <th>Contact_tracing</th>\n",
        "      <th>Stringency_index</th>\n",
        "    </tr>\n",
        "  </thead>\n",
        "  <tbody>\n",
        "    <tr>\n",
        "      <th>0</th>\n",
        "      <td>2020-02-12</td>\n",
        "      <td>France</td>\n",
        "      <td>0.347471</td>\n",
        "      <td>0.372632</td>\n",
        "      <td>0.0213529</td>\n",
        "      <td>0.00137594</td>\n",
        "      <td>0.347</td>\n",
        "      <td>0</td>\n",
        "      <td>11</td>\n",
        "      <td>181</td>\n",
        "      <td>...</td>\n",
        "      <td>0</td>\n",
        "      <td>0</td>\n",
        "      <td>0</td>\n",
        "      <td>0</td>\n",
        "      <td>0</td>\n",
        "      <td>2</td>\n",
        "      <td>2</td>\n",
        "      <td>0</td>\n",
        "      <td>0</td>\n",
        "      <td>13.89</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>1</th>\n",
        "      <td>2020-02-12</td>\n",
        "      <td>France</td>\n",
        "      <td>0.347471</td>\n",
        "      <td>0.372632</td>\n",
        "      <td>0.0213529</td>\n",
        "      <td>0.00137594</td>\n",
        "      <td>0.347</td>\n",
        "      <td>0</td>\n",
        "      <td>11</td>\n",
        "      <td>181</td>\n",
        "      <td>...</td>\n",
        "      <td>0</td>\n",
        "      <td>0</td>\n",
        "      <td>0</td>\n",
        "      <td>0</td>\n",
        "      <td>0</td>\n",
        "      <td>0</td>\n",
        "      <td>0</td>\n",
        "      <td>0</td>\n",
        "      <td>0</td>\n",
        "      <td>0.00</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>2</th>\n",
        "      <td>2020-02-12</td>\n",
        "      <td>France</td>\n",
        "      <td>0.347471</td>\n",
        "      <td>0.372632</td>\n",
        "      <td>0.0213529</td>\n",
        "      <td>0.00137594</td>\n",
        "      <td>0.347</td>\n",
        "      <td>0</td>\n",
        "      <td>11</td>\n",
        "      <td>181</td>\n",
        "      <td>...</td>\n",
        "      <td>0</td>\n",
        "      <td>0</td>\n",
        "      <td>0</td>\n",
        "      <td>0</td>\n",
        "      <td>0</td>\n",
        "      <td>1</td>\n",
        "      <td>2</td>\n",
        "      <td>0</td>\n",
        "      <td>0</td>\n",
        "      <td>11.11</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>3</th>\n",
        "      <td>2020-02-12</td>\n",
        "      <td>France</td>\n",
        "      <td>0.347471</td>\n",
        "      <td>0.372632</td>\n",
        "      <td>0.0213529</td>\n",
        "      <td>0.00137594</td>\n",
        "      <td>0.347</td>\n",
        "      <td>0</td>\n",
        "      <td>11</td>\n",
        "      <td>181</td>\n",
        "      <td>...</td>\n",
        "      <td>0</td>\n",
        "      <td>0</td>\n",
        "      <td>0</td>\n",
        "      <td>0</td>\n",
        "      <td>0</td>\n",
        "      <td>0</td>\n",
        "      <td>0</td>\n",
        "      <td>0</td>\n",
        "      <td>0</td>\n",
        "      <td>0.00</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>4</th>\n",
        "      <td>2020-02-12</td>\n",
        "      <td>France</td>\n",
        "      <td>0.347471</td>\n",
        "      <td>0.372632</td>\n",
        "      <td>0.0213529</td>\n",
        "      <td>0.00137594</td>\n",
        "      <td>0.347</td>\n",
        "      <td>0</td>\n",
        "      <td>11</td>\n",
        "      <td>181</td>\n",
        "      <td>...</td>\n",
        "      <td>0</td>\n",
        "      <td>0</td>\n",
        "      <td>0</td>\n",
        "      <td>0</td>\n",
        "      <td>0</td>\n",
        "      <td>0</td>\n",
        "      <td>0</td>\n",
        "      <td>0</td>\n",
        "      <td>0</td>\n",
        "      <td>0.00</td>\n",
        "    </tr>\n",
        "  </tbody>\n",
        "</table>\n",
        "<p>5 rows \u00d7 23 columns</p>\n",
        "</div>"
       ],
       "output_type": "pyout",
       "prompt_number": 13,
       "text": [
        "        Date Country     theta     kappa        rho       sigma alpha1 [-]  \\\n",
        "0 2020-02-12  France  0.347471  0.372632  0.0213529  0.00137594      0.347   \n",
        "1 2020-02-12  France  0.347471  0.372632  0.0213529  0.00137594      0.347   \n",
        "2 2020-02-12  France  0.347471  0.372632  0.0213529  0.00137594      0.347   \n",
        "3 2020-02-12  France  0.347471  0.372632  0.0213529  0.00137594      0.347   \n",
        "4 2020-02-12  France  0.347471  0.372632  0.0213529  0.00137594      0.347   \n",
        "\n",
        "  1/alpha2 [day] 1/beta [day] 1/gamma [day]  ... Cancel_events  \\\n",
        "0              0           11           181  ...             0   \n",
        "1              0           11           181  ...             0   \n",
        "2              0           11           181  ...             0   \n",
        "3              0           11           181  ...             0   \n",
        "4              0           11           181  ...             0   \n",
        "\n",
        "   Gatherings_restrictions  Transport_closing  Stay_home_restrictions  \\\n",
        "0                        0                  0                       0   \n",
        "1                        0                  0                       0   \n",
        "2                        0                  0                       0   \n",
        "3                        0                  0                       0   \n",
        "4                        0                  0                       0   \n",
        "\n",
        "   Internal_movement_restrictions  International_movement_restrictions  \\\n",
        "0                               0                                    2   \n",
        "1                               0                                    0   \n",
        "2                               0                                    1   \n",
        "3                               0                                    0   \n",
        "4                               0                                    0   \n",
        "\n",
        "   Information_campaigns  Testing_policy  Contact_tracing  Stringency_index  \n",
        "0                      2               0                0             13.89  \n",
        "1                      0               0                0              0.00  \n",
        "2                      2               0                0             11.11  \n",
        "3                      0               0                0              0.00  \n",
        "4                      0               0                0              0.00  \n",
        "\n",
        "[5 rows x 23 columns]"
       ]
      }
     ],
     "prompt_number": 13
    },
    {
     "cell_type": "heading",
     "level": 3,
     "metadata": {},
     "source": [
      "$Rt$: Reprodcution number $\\mathrm{[-]}$"
     ]
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "analyser.param_history(\"Rt\", roll_window=None).tail()"
     ],
     "language": "python",
     "metadata": {},
     "outputs": [
      {
       "output_type": "display_data",
       "png": "\n",
       "text": [
        "<Figure size 648x432 with 1 Axes>"
       ]
      },
      {
       "html": [
        "<div>\n",
        "<style scoped>\n",
        "    .dataframe tbody tr th:only-of-type {\n",
        "        vertical-align: middle;\n",
        "    }\n",
        "\n",
        "    .dataframe tbody tr th {\n",
        "        vertical-align: top;\n",
        "    }\n",
        "\n",
        "    .dataframe thead th {\n",
        "        text-align: right;\n",
        "    }\n",
        "</style>\n",
        "<table border=\"1\" class=\"dataframe\">\n",
        "  <thead>\n",
        "    <tr style=\"text-align: right;\">\n",
        "      <th>Country</th>\n",
        "      <th>Bahrain</th>\n",
        "      <th>Bolivia</th>\n",
        "      <th>Brazil</th>\n",
        "      <th>France</th>\n",
        "      <th>Iran</th>\n",
        "      <th>Kuwait</th>\n",
        "      <th>Latvia</th>\n",
        "      <th>Nigeria</th>\n",
        "      <th>Russia</th>\n",
        "      <th>Turkey</th>\n",
        "      <th>United States</th>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>Date</th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "    </tr>\n",
        "  </thead>\n",
        "  <tbody>\n",
        "    <tr>\n",
        "      <th>2020-10-08</th>\n",
        "      <td>0.82</td>\n",
        "      <td>0.6</td>\n",
        "      <td>0.99</td>\n",
        "      <td>30.19</td>\n",
        "      <td>1.49</td>\n",
        "      <td>0.85</td>\n",
        "      <td>58.33</td>\n",
        "      <td>0.9</td>\n",
        "      <td>2.3</td>\n",
        "      <td>1.13</td>\n",
        "      <td>2.36</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>2020-10-09</th>\n",
        "      <td>0.82</td>\n",
        "      <td>0.6</td>\n",
        "      <td>0.99</td>\n",
        "      <td>30.19</td>\n",
        "      <td>1.49</td>\n",
        "      <td>0.85</td>\n",
        "      <td>58.33</td>\n",
        "      <td>0.9</td>\n",
        "      <td>2.3</td>\n",
        "      <td>1.13</td>\n",
        "      <td>2.36</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>2020-10-10</th>\n",
        "      <td>0.82</td>\n",
        "      <td>0.6</td>\n",
        "      <td>0.99</td>\n",
        "      <td>30.19</td>\n",
        "      <td>1.49</td>\n",
        "      <td>0.85</td>\n",
        "      <td>58.33</td>\n",
        "      <td>0.9</td>\n",
        "      <td>2.3</td>\n",
        "      <td>1.13</td>\n",
        "      <td>2.36</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>2020-10-11</th>\n",
        "      <td>0.82</td>\n",
        "      <td>0.6</td>\n",
        "      <td>0.99</td>\n",
        "      <td>30.19</td>\n",
        "      <td>1.49</td>\n",
        "      <td>0.85</td>\n",
        "      <td>58.33</td>\n",
        "      <td>0.9</td>\n",
        "      <td>2.3</td>\n",
        "      <td>1.13</td>\n",
        "      <td>2.36</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>2020-10-12</th>\n",
        "      <td>0.82</td>\n",
        "      <td>0.6</td>\n",
        "      <td>0.99</td>\n",
        "      <td>30.19</td>\n",
        "      <td>1.49</td>\n",
        "      <td>0.85</td>\n",
        "      <td>58.33</td>\n",
        "      <td>0.9</td>\n",
        "      <td>2.3</td>\n",
        "      <td>1.13</td>\n",
        "      <td>2.36</td>\n",
        "    </tr>\n",
        "  </tbody>\n",
        "</table>\n",
        "</div>"
       ],
       "output_type": "pyout",
       "prompt_number": 14,
       "text": [
        "Country     Bahrain  Bolivia  Brazil  France  Iran  Kuwait  Latvia  Nigeria  \\\n",
        "Date                                                                          \n",
        "2020-10-08     0.82      0.6    0.99   30.19  1.49    0.85   58.33      0.9   \n",
        "2020-10-09     0.82      0.6    0.99   30.19  1.49    0.85   58.33      0.9   \n",
        "2020-10-10     0.82      0.6    0.99   30.19  1.49    0.85   58.33      0.9   \n",
        "2020-10-11     0.82      0.6    0.99   30.19  1.49    0.85   58.33      0.9   \n",
        "2020-10-12     0.82      0.6    0.99   30.19  1.49    0.85   58.33      0.9   \n",
        "\n",
        "Country     Russia  Turkey  United States  \n",
        "Date                                       \n",
        "2020-10-08     2.3    1.13           2.36  \n",
        "2020-10-09     2.3    1.13           2.36  \n",
        "2020-10-10     2.3    1.13           2.36  \n",
        "2020-10-11     2.3    1.13           2.36  \n",
        "2020-10-12     2.3    1.13           2.36  "
       ]
      }
     ],
     "prompt_number": 14
    },
    {
     "cell_type": "heading",
     "level": 3,
     "metadata": {},
     "source": [
      "$\\rho$: Effective contact rate $\\mathrm{[-]}$"
     ]
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "analyser.param_history(\"rho\", roll_window=None).tail()"
     ],
     "language": "python",
     "metadata": {},
     "outputs": [
      {
       "output_type": "display_data",
       "png": "\n",
       "text": [
        "<Figure size 648x432 with 1 Axes>"
       ]
      },
      {
       "html": [
        "<div>\n",
        "<style scoped>\n",
        "    .dataframe tbody tr th:only-of-type {\n",
        "        vertical-align: middle;\n",
        "    }\n",
        "\n",
        "    .dataframe tbody tr th {\n",
        "        vertical-align: top;\n",
        "    }\n",
        "\n",
        "    .dataframe thead th {\n",
        "        text-align: right;\n",
        "    }\n",
        "</style>\n",
        "<table border=\"1\" class=\"dataframe\">\n",
        "  <thead>\n",
        "    <tr style=\"text-align: right;\">\n",
        "      <th>Country</th>\n",
        "      <th>Bahrain</th>\n",
        "      <th>Bolivia</th>\n",
        "      <th>Brazil</th>\n",
        "      <th>France</th>\n",
        "      <th>Iran</th>\n",
        "      <th>Kuwait</th>\n",
        "      <th>Latvia</th>\n",
        "      <th>Nigeria</th>\n",
        "      <th>Russia</th>\n",
        "      <th>Turkey</th>\n",
        "      <th>United States</th>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>Date</th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "    </tr>\n",
        "  </thead>\n",
        "  <tbody>\n",
        "    <tr>\n",
        "      <th>2020-10-08</th>\n",
        "      <td>0.023352</td>\n",
        "      <td>0.002494</td>\n",
        "      <td>0.014903</td>\n",
        "      <td>0.006923</td>\n",
        "      <td>0.016594</td>\n",
        "      <td>0.017743</td>\n",
        "      <td>0.000845</td>\n",
        "      <td>0.004321</td>\n",
        "      <td>0.002174</td>\n",
        "      <td>0.012676</td>\n",
        "      <td>0.002951</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>2020-10-09</th>\n",
        "      <td>0.023352</td>\n",
        "      <td>0.002494</td>\n",
        "      <td>0.014903</td>\n",
        "      <td>0.006923</td>\n",
        "      <td>0.016594</td>\n",
        "      <td>0.017743</td>\n",
        "      <td>0.000845</td>\n",
        "      <td>0.004321</td>\n",
        "      <td>0.002174</td>\n",
        "      <td>0.012676</td>\n",
        "      <td>0.002951</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>2020-10-10</th>\n",
        "      <td>0.023352</td>\n",
        "      <td>0.002494</td>\n",
        "      <td>0.014903</td>\n",
        "      <td>0.006923</td>\n",
        "      <td>0.016594</td>\n",
        "      <td>0.017743</td>\n",
        "      <td>0.000845</td>\n",
        "      <td>0.004321</td>\n",
        "      <td>0.002174</td>\n",
        "      <td>0.012676</td>\n",
        "      <td>0.002951</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>2020-10-11</th>\n",
        "      <td>0.023352</td>\n",
        "      <td>0.002494</td>\n",
        "      <td>0.014903</td>\n",
        "      <td>0.006923</td>\n",
        "      <td>0.016594</td>\n",
        "      <td>0.017743</td>\n",
        "      <td>0.000845</td>\n",
        "      <td>0.004321</td>\n",
        "      <td>0.002174</td>\n",
        "      <td>0.012676</td>\n",
        "      <td>0.002951</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>2020-10-12</th>\n",
        "      <td>0.023352</td>\n",
        "      <td>0.002494</td>\n",
        "      <td>0.014903</td>\n",
        "      <td>0.006923</td>\n",
        "      <td>0.016594</td>\n",
        "      <td>0.017743</td>\n",
        "      <td>0.000845</td>\n",
        "      <td>0.004321</td>\n",
        "      <td>0.002174</td>\n",
        "      <td>0.012676</td>\n",
        "      <td>0.002951</td>\n",
        "    </tr>\n",
        "  </tbody>\n",
        "</table>\n",
        "</div>"
       ],
       "output_type": "pyout",
       "prompt_number": 15,
       "text": [
        "Country      Bahrain   Bolivia    Brazil    France      Iran    Kuwait  \\\n",
        "Date                                                                     \n",
        "2020-10-08  0.023352  0.002494  0.014903  0.006923  0.016594  0.017743   \n",
        "2020-10-09  0.023352  0.002494  0.014903  0.006923  0.016594  0.017743   \n",
        "2020-10-10  0.023352  0.002494  0.014903  0.006923  0.016594  0.017743   \n",
        "2020-10-11  0.023352  0.002494  0.014903  0.006923  0.016594  0.017743   \n",
        "2020-10-12  0.023352  0.002494  0.014903  0.006923  0.016594  0.017743   \n",
        "\n",
        "Country       Latvia   Nigeria    Russia    Turkey  United States  \n",
        "Date                                                               \n",
        "2020-10-08  0.000845  0.004321  0.002174  0.012676       0.002951  \n",
        "2020-10-09  0.000845  0.004321  0.002174  0.012676       0.002951  \n",
        "2020-10-10  0.000845  0.004321  0.002174  0.012676       0.002951  \n",
        "2020-10-11  0.000845  0.004321  0.002174  0.012676       0.002951  \n",
        "2020-10-12  0.000845  0.004321  0.002174  0.012676       0.002951  "
       ]
      }
     ],
     "prompt_number": 15
    },
    {
     "cell_type": "heading",
     "level": 3,
     "metadata": {},
     "source": [
      "$\\sigma$: Recovery rate $\\mathrm{[-]}$"
     ]
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "analyser.param_history(\"sigma\", roll_window=None).tail()"
     ],
     "language": "python",
     "metadata": {},
     "outputs": [
      {
       "output_type": "display_data",
       "png": "\n",
       "text": [
        "<Figure size 648x432 with 1 Axes>"
       ]
      },
      {
       "html": [
        "<div>\n",
        "<style scoped>\n",
        "    .dataframe tbody tr th:only-of-type {\n",
        "        vertical-align: middle;\n",
        "    }\n",
        "\n",
        "    .dataframe tbody tr th {\n",
        "        vertical-align: top;\n",
        "    }\n",
        "\n",
        "    .dataframe thead th {\n",
        "        text-align: right;\n",
        "    }\n",
        "</style>\n",
        "<table border=\"1\" class=\"dataframe\">\n",
        "  <thead>\n",
        "    <tr style=\"text-align: right;\">\n",
        "      <th>Country</th>\n",
        "      <th>Bahrain</th>\n",
        "      <th>Bolivia</th>\n",
        "      <th>Brazil</th>\n",
        "      <th>France</th>\n",
        "      <th>Iran</th>\n",
        "      <th>Kuwait</th>\n",
        "      <th>Latvia</th>\n",
        "      <th>Nigeria</th>\n",
        "      <th>Russia</th>\n",
        "      <th>Turkey</th>\n",
        "      <th>United States</th>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>Date</th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "    </tr>\n",
        "  </thead>\n",
        "  <tbody>\n",
        "    <tr>\n",
        "      <th>2020-10-08</th>\n",
        "      <td>0.028432</td>\n",
        "      <td>0.003792</td>\n",
        "      <td>0.014731</td>\n",
        "      <td>0.000192</td>\n",
        "      <td>0.010265</td>\n",
        "      <td>0.020767</td>\n",
        "      <td>0.0</td>\n",
        "      <td>0.004779</td>\n",
        "      <td>0.000919</td>\n",
        "      <td>0.010795</td>\n",
        "      <td>0.001222</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>2020-10-09</th>\n",
        "      <td>0.028432</td>\n",
        "      <td>0.003792</td>\n",
        "      <td>0.014731</td>\n",
        "      <td>0.000192</td>\n",
        "      <td>0.010265</td>\n",
        "      <td>0.020767</td>\n",
        "      <td>0.0</td>\n",
        "      <td>0.004779</td>\n",
        "      <td>0.000919</td>\n",
        "      <td>0.010795</td>\n",
        "      <td>0.001222</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>2020-10-10</th>\n",
        "      <td>0.028432</td>\n",
        "      <td>0.003792</td>\n",
        "      <td>0.014731</td>\n",
        "      <td>0.000192</td>\n",
        "      <td>0.010265</td>\n",
        "      <td>0.020767</td>\n",
        "      <td>0.0</td>\n",
        "      <td>0.004779</td>\n",
        "      <td>0.000919</td>\n",
        "      <td>0.010795</td>\n",
        "      <td>0.001222</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>2020-10-11</th>\n",
        "      <td>0.028432</td>\n",
        "      <td>0.003792</td>\n",
        "      <td>0.014731</td>\n",
        "      <td>0.000192</td>\n",
        "      <td>0.010265</td>\n",
        "      <td>0.020767</td>\n",
        "      <td>0.0</td>\n",
        "      <td>0.004779</td>\n",
        "      <td>0.000919</td>\n",
        "      <td>0.010795</td>\n",
        "      <td>0.001222</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>2020-10-12</th>\n",
        "      <td>0.028432</td>\n",
        "      <td>0.003792</td>\n",
        "      <td>0.014731</td>\n",
        "      <td>0.000192</td>\n",
        "      <td>0.010265</td>\n",
        "      <td>0.020767</td>\n",
        "      <td>0.0</td>\n",
        "      <td>0.004779</td>\n",
        "      <td>0.000919</td>\n",
        "      <td>0.010795</td>\n",
        "      <td>0.001222</td>\n",
        "    </tr>\n",
        "  </tbody>\n",
        "</table>\n",
        "</div>"
       ],
       "output_type": "pyout",
       "prompt_number": 16,
       "text": [
        "Country      Bahrain   Bolivia    Brazil    France      Iran    Kuwait  \\\n",
        "Date                                                                     \n",
        "2020-10-08  0.028432  0.003792  0.014731  0.000192  0.010265  0.020767   \n",
        "2020-10-09  0.028432  0.003792  0.014731  0.000192  0.010265  0.020767   \n",
        "2020-10-10  0.028432  0.003792  0.014731  0.000192  0.010265  0.020767   \n",
        "2020-10-11  0.028432  0.003792  0.014731  0.000192  0.010265  0.020767   \n",
        "2020-10-12  0.028432  0.003792  0.014731  0.000192  0.010265  0.020767   \n",
        "\n",
        "Country     Latvia   Nigeria    Russia    Turkey  United States  \n",
        "Date                                                             \n",
        "2020-10-08     0.0  0.004779  0.000919  0.010795       0.001222  \n",
        "2020-10-09     0.0  0.004779  0.000919  0.010795       0.001222  \n",
        "2020-10-10     0.0  0.004779  0.000919  0.010795       0.001222  \n",
        "2020-10-11     0.0  0.004779  0.000919  0.010795       0.001222  \n",
        "2020-10-12     0.0  0.004779  0.000919  0.010795       0.001222  "
       ]
      }
     ],
     "prompt_number": 16
    },
    {
     "cell_type": "heading",
     "level": 3,
     "metadata": {},
     "source": [
      "$\\kappa$: Mortality rate of infected cases $\\mathrm{[-]}$"
     ]
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "analyser.param_history(\"kappa\", roll_window=None).tail()"
     ],
     "language": "python",
     "metadata": {},
     "outputs": [
      {
       "output_type": "display_data",
       "png": "\n",
       "text": [
        "<Figure size 648x432 with 1 Axes>"
       ]
      },
      {
       "html": [
        "<div>\n",
        "<style scoped>\n",
        "    .dataframe tbody tr th:only-of-type {\n",
        "        vertical-align: middle;\n",
        "    }\n",
        "\n",
        "    .dataframe tbody tr th {\n",
        "        vertical-align: top;\n",
        "    }\n",
        "\n",
        "    .dataframe thead th {\n",
        "        text-align: right;\n",
        "    }\n",
        "</style>\n",
        "<table border=\"1\" class=\"dataframe\">\n",
        "  <thead>\n",
        "    <tr style=\"text-align: right;\">\n",
        "      <th>Country</th>\n",
        "      <th>Bahrain</th>\n",
        "      <th>Bolivia</th>\n",
        "      <th>Brazil</th>\n",
        "      <th>France</th>\n",
        "      <th>Iran</th>\n",
        "      <th>Kuwait</th>\n",
        "      <th>Latvia</th>\n",
        "      <th>Nigeria</th>\n",
        "      <th>Russia</th>\n",
        "      <th>Turkey</th>\n",
        "      <th>United States</th>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>Date</th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "    </tr>\n",
        "  </thead>\n",
        "  <tbody>\n",
        "    <tr>\n",
        "      <th>2020-10-08</th>\n",
        "      <td>0.000071</td>\n",
        "      <td>0.000093</td>\n",
        "      <td>0.000005</td>\n",
        "      <td>0.000037</td>\n",
        "      <td>0.000855</td>\n",
        "      <td>0.000114</td>\n",
        "      <td>0.000014</td>\n",
        "      <td>0.000002</td>\n",
        "      <td>0.000025</td>\n",
        "      <td>0.000109</td>\n",
        "      <td>0.000025</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>2020-10-09</th>\n",
        "      <td>0.000071</td>\n",
        "      <td>0.000093</td>\n",
        "      <td>0.000005</td>\n",
        "      <td>0.000037</td>\n",
        "      <td>0.000855</td>\n",
        "      <td>0.000114</td>\n",
        "      <td>0.000014</td>\n",
        "      <td>0.000002</td>\n",
        "      <td>0.000025</td>\n",
        "      <td>0.000109</td>\n",
        "      <td>0.000025</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>2020-10-10</th>\n",
        "      <td>0.000071</td>\n",
        "      <td>0.000093</td>\n",
        "      <td>0.000005</td>\n",
        "      <td>0.000037</td>\n",
        "      <td>0.000855</td>\n",
        "      <td>0.000114</td>\n",
        "      <td>0.000014</td>\n",
        "      <td>0.000002</td>\n",
        "      <td>0.000025</td>\n",
        "      <td>0.000109</td>\n",
        "      <td>0.000025</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>2020-10-11</th>\n",
        "      <td>0.000071</td>\n",
        "      <td>0.000093</td>\n",
        "      <td>0.000005</td>\n",
        "      <td>0.000037</td>\n",
        "      <td>0.000855</td>\n",
        "      <td>0.000114</td>\n",
        "      <td>0.000014</td>\n",
        "      <td>0.000002</td>\n",
        "      <td>0.000025</td>\n",
        "      <td>0.000109</td>\n",
        "      <td>0.000025</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>2020-10-12</th>\n",
        "      <td>0.000071</td>\n",
        "      <td>0.000093</td>\n",
        "      <td>0.000005</td>\n",
        "      <td>0.000037</td>\n",
        "      <td>0.000855</td>\n",
        "      <td>0.000114</td>\n",
        "      <td>0.000014</td>\n",
        "      <td>0.000002</td>\n",
        "      <td>0.000025</td>\n",
        "      <td>0.000109</td>\n",
        "      <td>0.000025</td>\n",
        "    </tr>\n",
        "  </tbody>\n",
        "</table>\n",
        "</div>"
       ],
       "output_type": "pyout",
       "prompt_number": 17,
       "text": [
        "Country      Bahrain   Bolivia    Brazil    France      Iran    Kuwait  \\\n",
        "Date                                                                     \n",
        "2020-10-08  0.000071  0.000093  0.000005  0.000037  0.000855  0.000114   \n",
        "2020-10-09  0.000071  0.000093  0.000005  0.000037  0.000855  0.000114   \n",
        "2020-10-10  0.000071  0.000093  0.000005  0.000037  0.000855  0.000114   \n",
        "2020-10-11  0.000071  0.000093  0.000005  0.000037  0.000855  0.000114   \n",
        "2020-10-12  0.000071  0.000093  0.000005  0.000037  0.000855  0.000114   \n",
        "\n",
        "Country       Latvia   Nigeria    Russia    Turkey  United States  \n",
        "Date                                                               \n",
        "2020-10-08  0.000014  0.000002  0.000025  0.000109       0.000025  \n",
        "2020-10-09  0.000014  0.000002  0.000025  0.000109       0.000025  \n",
        "2020-10-10  0.000014  0.000002  0.000025  0.000109       0.000025  \n",
        "2020-10-11  0.000014  0.000002  0.000025  0.000109       0.000025  \n",
        "2020-10-12  0.000014  0.000002  0.000025  0.000109       0.000025  "
       ]
      }
     ],
     "prompt_number": 17
    },
    {
     "cell_type": "heading",
     "level": 3,
     "metadata": {},
     "source": [
      "$\\theta$: Mortality rate of S$^\\ast$ cases $\\mathrm{[-]}$"
     ]
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "analyser.param_history(\"theta\", roll_window=None).tail()"
     ],
     "language": "python",
     "metadata": {},
     "outputs": [
      {
       "output_type": "display_data",
       "png": "\n",
       "text": [
        "<Figure size 648x432 with 1 Axes>"
       ]
      },
      {
       "html": [
        "<div>\n",
        "<style scoped>\n",
        "    .dataframe tbody tr th:only-of-type {\n",
        "        vertical-align: middle;\n",
        "    }\n",
        "\n",
        "    .dataframe tbody tr th {\n",
        "        vertical-align: top;\n",
        "    }\n",
        "\n",
        "    .dataframe thead th {\n",
        "        text-align: right;\n",
        "    }\n",
        "</style>\n",
        "<table border=\"1\" class=\"dataframe\">\n",
        "  <thead>\n",
        "    <tr style=\"text-align: right;\">\n",
        "      <th>Country</th>\n",
        "      <th>Bahrain</th>\n",
        "      <th>Bolivia</th>\n",
        "      <th>Brazil</th>\n",
        "      <th>France</th>\n",
        "      <th>Iran</th>\n",
        "      <th>Kuwait</th>\n",
        "      <th>Latvia</th>\n",
        "      <th>Nigeria</th>\n",
        "      <th>Russia</th>\n",
        "      <th>Turkey</th>\n",
        "      <th>United States</th>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>Date</th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "    </tr>\n",
        "  </thead>\n",
        "  <tbody>\n",
        "    <tr>\n",
        "      <th>2020-10-08</th>\n",
        "      <td>0.001322</td>\n",
        "      <td>0.059281</td>\n",
        "      <td>0.018075</td>\n",
        "      <td>0.000665</td>\n",
        "      <td>0.000808</td>\n",
        "      <td>0.000592</td>\n",
        "      <td>0.000101</td>\n",
        "      <td>0.009024</td>\n",
        "      <td>0.001324</td>\n",
        "      <td>0.030618</td>\n",
        "      <td>0.001272</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>2020-10-09</th>\n",
        "      <td>0.001322</td>\n",
        "      <td>0.059281</td>\n",
        "      <td>0.018075</td>\n",
        "      <td>0.000665</td>\n",
        "      <td>0.000808</td>\n",
        "      <td>0.000592</td>\n",
        "      <td>0.000101</td>\n",
        "      <td>0.009024</td>\n",
        "      <td>0.001324</td>\n",
        "      <td>0.030618</td>\n",
        "      <td>0.001272</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>2020-10-10</th>\n",
        "      <td>0.001322</td>\n",
        "      <td>0.059281</td>\n",
        "      <td>0.018075</td>\n",
        "      <td>0.000665</td>\n",
        "      <td>0.000808</td>\n",
        "      <td>0.000592</td>\n",
        "      <td>0.000101</td>\n",
        "      <td>0.009024</td>\n",
        "      <td>0.001324</td>\n",
        "      <td>0.030618</td>\n",
        "      <td>0.001272</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>2020-10-11</th>\n",
        "      <td>0.001322</td>\n",
        "      <td>0.059281</td>\n",
        "      <td>0.018075</td>\n",
        "      <td>0.000665</td>\n",
        "      <td>0.000808</td>\n",
        "      <td>0.000592</td>\n",
        "      <td>0.000101</td>\n",
        "      <td>0.009024</td>\n",
        "      <td>0.001324</td>\n",
        "      <td>0.030618</td>\n",
        "      <td>0.001272</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>2020-10-12</th>\n",
        "      <td>0.001322</td>\n",
        "      <td>0.059281</td>\n",
        "      <td>0.018075</td>\n",
        "      <td>0.000665</td>\n",
        "      <td>0.000808</td>\n",
        "      <td>0.000592</td>\n",
        "      <td>0.000101</td>\n",
        "      <td>0.009024</td>\n",
        "      <td>0.001324</td>\n",
        "      <td>0.030618</td>\n",
        "      <td>0.001272</td>\n",
        "    </tr>\n",
        "  </tbody>\n",
        "</table>\n",
        "</div>"
       ],
       "output_type": "pyout",
       "prompt_number": 18,
       "text": [
        "Country      Bahrain   Bolivia    Brazil    France      Iran    Kuwait  \\\n",
        "Date                                                                     \n",
        "2020-10-08  0.001322  0.059281  0.018075  0.000665  0.000808  0.000592   \n",
        "2020-10-09  0.001322  0.059281  0.018075  0.000665  0.000808  0.000592   \n",
        "2020-10-10  0.001322  0.059281  0.018075  0.000665  0.000808  0.000592   \n",
        "2020-10-11  0.001322  0.059281  0.018075  0.000665  0.000808  0.000592   \n",
        "2020-10-12  0.001322  0.059281  0.018075  0.000665  0.000808  0.000592   \n",
        "\n",
        "Country       Latvia   Nigeria    Russia    Turkey  United States  \n",
        "Date                                                               \n",
        "2020-10-08  0.000101  0.009024  0.001324  0.030618       0.001272  \n",
        "2020-10-09  0.000101  0.009024  0.001324  0.030618       0.001272  \n",
        "2020-10-10  0.000101  0.009024  0.001324  0.030618       0.001272  \n",
        "2020-10-11  0.000101  0.009024  0.001324  0.030618       0.001272  \n",
        "2020-10-12  0.000101  0.009024  0.001324  0.030618       0.001272  "
       ]
      }
     ],
     "prompt_number": 18
    },
    {
     "cell_type": "markdown",
     "metadata": {},
     "source": [
      "## (Experimental): Relationship of OxCGRT index and parameter values\n",
      "Government responses will impact on parameter values of ODE models about 14 days later. Here, we will investigate on the relationship of [stringency index (from OxCGRT)](https://github.com/OxCGRT/covid-policy-tracker/blob/master/documentation/index_methodology.md) and reproduction number/model parameters.\n"
     ]
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "%matplotlib inline\n",
      "from matplotlib import pyplot as plt\n",
      "import seaborn as sns\n",
      "import pandas as pd"
     ],
     "language": "python",
     "metadata": {},
     "outputs": [],
     "prompt_number": 19
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "df = analyser.track()\n",
      "param_cols = [\"Rt\", *cs.SIRF.PARAMETERS]\n",
      "oxcgrt_cols = oxcgrt_data.OXCGRT_VARS[:]\n",
      "cols = param_cols + oxcgrt_cols\n",
      "delay = 14\n",
      "\n",
      "for col in param_cols:\n",
      "    df[col] = pd.to_numeric(df[col], errors=\"coerce\")\n",
      "    df[col] = df.groupby(\"Country\")[col].shift(0 - delay)\n",
      "\n",
      "df = df.dropna(how=\"any\")\n",
      "df = df.loc[:, [\"Date\", \"Country\", *cols]]\n",
      "track_df = df.copy()\n",
      "track_df.info()"
     ],
     "language": "python",
     "metadata": {},
     "outputs": [
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "<class 'pandas.core.frame.DataFrame'>\n",
        "Int64Index: 68537 entries, 0 to 68676\n",
        "Data columns (total 19 columns):\n",
        " #   Column                               Non-Null Count  Dtype         \n",
        "---  ------                               --------------  -----         \n",
        " 0   Date                                 68537 non-null  datetime64[ns]\n",
        " 1   Country                              68537 non-null  object        \n",
        " 2   Rt                                   68537 non-null  float64       \n",
        " 3   theta                                68537 non-null  float64       \n",
        " 4   kappa                                68537 non-null  float64       \n",
        " 5   rho                                  68537 non-null  float64       \n",
        " 6   sigma                                68537 non-null  float64       \n",
        " 7   School_closing                       68537 non-null  int64         \n",
        " 8   Workplace_closing                    68537 non-null  int64         \n",
        " 9   Cancel_events                        68537 non-null  int64         \n",
        " 10  Gatherings_restrictions              68537 non-null  int64         \n",
        " 11  Transport_closing                    68537 non-null  int64         \n",
        " 12  Stay_home_restrictions               68537 non-null  int64         \n",
        " 13  Internal_movement_restrictions       68537 non-null  int64         \n",
        " 14  International_movement_restrictions  68537 non-null  int64         \n",
        " 15  Information_campaigns                68537 non-null  int64         \n",
        " 16  Testing_policy                       68537 non-null  int64         \n",
        " 17  Contact_tracing                      68537 non-null  int64         \n",
        " 18  Stringency_index                     68537 non-null  float64       \n",
        "dtypes: datetime64[ns](1), float64(6), int64(11), object(1)\n",
        "memory usage: 10.5+ MB\n"
       ]
      }
     ],
     "prompt_number": 20
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "# Correlation\n",
      "df = track_df.copy()\n",
      "df.corr().style.background_gradient(axis=None)"
     ],
     "language": "python",
     "metadata": {},
     "outputs": [
      {
       "html": [
        "<style  type=\"text/css\" >\n",
        "#T_8a9ee95a_0c9e_11eb_8060_525400567ed2row0_col0,#T_8a9ee95a_0c9e_11eb_8060_525400567ed2row1_col1,#T_8a9ee95a_0c9e_11eb_8060_525400567ed2row2_col2,#T_8a9ee95a_0c9e_11eb_8060_525400567ed2row3_col3,#T_8a9ee95a_0c9e_11eb_8060_525400567ed2row4_col4,#T_8a9ee95a_0c9e_11eb_8060_525400567ed2row5_col5,#T_8a9ee95a_0c9e_11eb_8060_525400567ed2row6_col6,#T_8a9ee95a_0c9e_11eb_8060_525400567ed2row7_col7,#T_8a9ee95a_0c9e_11eb_8060_525400567ed2row8_col8,#T_8a9ee95a_0c9e_11eb_8060_525400567ed2row9_col9,#T_8a9ee95a_0c9e_11eb_8060_525400567ed2row10_col10,#T_8a9ee95a_0c9e_11eb_8060_525400567ed2row11_col11,#T_8a9ee95a_0c9e_11eb_8060_525400567ed2row12_col12,#T_8a9ee95a_0c9e_11eb_8060_525400567ed2row13_col13,#T_8a9ee95a_0c9e_11eb_8060_525400567ed2row14_col14,#T_8a9ee95a_0c9e_11eb_8060_525400567ed2row15_col15,#T_8a9ee95a_0c9e_11eb_8060_525400567ed2row16_col16{\n",
        "            background-color:  #023858;\n",
        "            color:  #f1f1f1;\n",
        "        }#T_8a9ee95a_0c9e_11eb_8060_525400567ed2row0_col1,#T_8a9ee95a_0c9e_11eb_8060_525400567ed2row1_col0{\n",
        "            background-color:  #e0deed;\n",
        "            color:  #000000;\n",
        "        }#T_8a9ee95a_0c9e_11eb_8060_525400567ed2row0_col2,#T_8a9ee95a_0c9e_11eb_8060_525400567ed2row0_col8,#T_8a9ee95a_0c9e_11eb_8060_525400567ed2row1_col5,#T_8a9ee95a_0c9e_11eb_8060_525400567ed2row2_col0,#T_8a9ee95a_0c9e_11eb_8060_525400567ed2row5_col1,#T_8a9ee95a_0c9e_11eb_8060_525400567ed2row8_col0{\n",
        "            background-color:  #d6d6e9;\n",
        "            color:  #000000;\n",
        "        }#T_8a9ee95a_0c9e_11eb_8060_525400567ed2row0_col3,#T_8a9ee95a_0c9e_11eb_8060_525400567ed2row3_col0{\n",
        "            background-color:  #4897c4;\n",
        "            color:  #000000;\n",
        "        }#T_8a9ee95a_0c9e_11eb_8060_525400567ed2row0_col4,#T_8a9ee95a_0c9e_11eb_8060_525400567ed2row0_col5,#T_8a9ee95a_0c9e_11eb_8060_525400567ed2row4_col0,#T_8a9ee95a_0c9e_11eb_8060_525400567ed2row5_col0{\n",
        "            background-color:  #e5e1ef;\n",
        "            color:  #000000;\n",
        "        }#T_8a9ee95a_0c9e_11eb_8060_525400567ed2row0_col6,#T_8a9ee95a_0c9e_11eb_8060_525400567ed2row0_col10,#T_8a9ee95a_0c9e_11eb_8060_525400567ed2row6_col0,#T_8a9ee95a_0c9e_11eb_8060_525400567ed2row10_col0{\n",
        "            background-color:  #e1dfed;\n",
        "            color:  #000000;\n",
        "        }#T_8a9ee95a_0c9e_11eb_8060_525400567ed2row0_col7,#T_8a9ee95a_0c9e_11eb_8060_525400567ed2row0_col9,#T_8a9ee95a_0c9e_11eb_8060_525400567ed2row2_col7,#T_8a9ee95a_0c9e_11eb_8060_525400567ed2row7_col0,#T_8a9ee95a_0c9e_11eb_8060_525400567ed2row7_col2,#T_8a9ee95a_0c9e_11eb_8060_525400567ed2row9_col0{\n",
        "            background-color:  #d5d5e8;\n",
        "            color:  #000000;\n",
        "        }#T_8a9ee95a_0c9e_11eb_8060_525400567ed2row0_col11,#T_8a9ee95a_0c9e_11eb_8060_525400567ed2row11_col0{\n",
        "            background-color:  #efe9f3;\n",
        "            color:  #000000;\n",
        "        }#T_8a9ee95a_0c9e_11eb_8060_525400567ed2row0_col12,#T_8a9ee95a_0c9e_11eb_8060_525400567ed2row12_col0{\n",
        "            background-color:  #cdd0e5;\n",
        "            color:  #000000;\n",
        "        }#T_8a9ee95a_0c9e_11eb_8060_525400567ed2row0_col13,#T_8a9ee95a_0c9e_11eb_8060_525400567ed2row13_col0{\n",
        "            background-color:  #d7d6e9;\n",
        "            color:  #000000;\n",
        "        }#T_8a9ee95a_0c9e_11eb_8060_525400567ed2row0_col14,#T_8a9ee95a_0c9e_11eb_8060_525400567ed2row14_col0{\n",
        "            background-color:  #f5eff6;\n",
        "            color:  #000000;\n",
        "        }#T_8a9ee95a_0c9e_11eb_8060_525400567ed2row0_col15,#T_8a9ee95a_0c9e_11eb_8060_525400567ed2row15_col0{\n",
        "            background-color:  #eae6f1;\n",
        "            color:  #000000;\n",
        "        }#T_8a9ee95a_0c9e_11eb_8060_525400567ed2row0_col16,#T_8a9ee95a_0c9e_11eb_8060_525400567ed2row2_col6,#T_8a9ee95a_0c9e_11eb_8060_525400567ed2row6_col2,#T_8a9ee95a_0c9e_11eb_8060_525400567ed2row16_col0{\n",
        "            background-color:  #dedcec;\n",
        "            color:  #000000;\n",
        "        }#T_8a9ee95a_0c9e_11eb_8060_525400567ed2row1_col2,#T_8a9ee95a_0c9e_11eb_8060_525400567ed2row2_col1{\n",
        "            background-color:  #03517e;\n",
        "            color:  #f1f1f1;\n",
        "        }#T_8a9ee95a_0c9e_11eb_8060_525400567ed2row1_col3,#T_8a9ee95a_0c9e_11eb_8060_525400567ed2row3_col1{\n",
        "            background-color:  #1379b5;\n",
        "            color:  #f1f1f1;\n",
        "        }#T_8a9ee95a_0c9e_11eb_8060_525400567ed2row1_col4,#T_8a9ee95a_0c9e_11eb_8060_525400567ed2row4_col1{\n",
        "            background-color:  #a9bfdc;\n",
        "            color:  #000000;\n",
        "        }#T_8a9ee95a_0c9e_11eb_8060_525400567ed2row1_col6,#T_8a9ee95a_0c9e_11eb_8060_525400567ed2row6_col1{\n",
        "            background-color:  #d2d3e7;\n",
        "            color:  #000000;\n",
        "        }#T_8a9ee95a_0c9e_11eb_8060_525400567ed2row1_col7,#T_8a9ee95a_0c9e_11eb_8060_525400567ed2row7_col1{\n",
        "            background-color:  #e4e1ef;\n",
        "            color:  #000000;\n",
        "        }#T_8a9ee95a_0c9e_11eb_8060_525400567ed2row1_col8,#T_8a9ee95a_0c9e_11eb_8060_525400567ed2row8_col1{\n",
        "            background-color:  #d0d1e6;\n",
        "            color:  #000000;\n",
        "        }#T_8a9ee95a_0c9e_11eb_8060_525400567ed2row1_col9,#T_8a9ee95a_0c9e_11eb_8060_525400567ed2row2_col5,#T_8a9ee95a_0c9e_11eb_8060_525400567ed2row5_col2,#T_8a9ee95a_0c9e_11eb_8060_525400567ed2row9_col1,#T_8a9ee95a_0c9e_11eb_8060_525400567ed2row9_col15,#T_8a9ee95a_0c9e_11eb_8060_525400567ed2row15_col9{\n",
        "            background-color:  #d9d8ea;\n",
        "            color:  #000000;\n",
        "        }#T_8a9ee95a_0c9e_11eb_8060_525400567ed2row1_col10,#T_8a9ee95a_0c9e_11eb_8060_525400567ed2row4_col12,#T_8a9ee95a_0c9e_11eb_8060_525400567ed2row10_col1,#T_8a9ee95a_0c9e_11eb_8060_525400567ed2row12_col4{\n",
        "            background-color:  #8cb3d5;\n",
        "            color:  #000000;\n",
        "        }#T_8a9ee95a_0c9e_11eb_8060_525400567ed2row1_col11,#T_8a9ee95a_0c9e_11eb_8060_525400567ed2row1_col15,#T_8a9ee95a_0c9e_11eb_8060_525400567ed2row11_col1,#T_8a9ee95a_0c9e_11eb_8060_525400567ed2row15_col1{\n",
        "            background-color:  #b0c2de;\n",
        "            color:  #000000;\n",
        "        }#T_8a9ee95a_0c9e_11eb_8060_525400567ed2row1_col12,#T_8a9ee95a_0c9e_11eb_8060_525400567ed2row12_col1{\n",
        "            background-color:  #afc1dd;\n",
        "            color:  #000000;\n",
        "        }#T_8a9ee95a_0c9e_11eb_8060_525400567ed2row1_col13,#T_8a9ee95a_0c9e_11eb_8060_525400567ed2row13_col1{\n",
        "            background-color:  #ede8f3;\n",
        "            color:  #000000;\n",
        "        }#T_8a9ee95a_0c9e_11eb_8060_525400567ed2row1_col14,#T_8a9ee95a_0c9e_11eb_8060_525400567ed2row2_col14,#T_8a9ee95a_0c9e_11eb_8060_525400567ed2row3_col6,#T_8a9ee95a_0c9e_11eb_8060_525400567ed2row6_col3,#T_8a9ee95a_0c9e_11eb_8060_525400567ed2row14_col1,#T_8a9ee95a_0c9e_11eb_8060_525400567ed2row14_col2{\n",
        "            background-color:  #e7e3f0;\n",
        "            color:  #000000;\n",
        "        }#T_8a9ee95a_0c9e_11eb_8060_525400567ed2row1_col16,#T_8a9ee95a_0c9e_11eb_8060_525400567ed2row3_col16,#T_8a9ee95a_0c9e_11eb_8060_525400567ed2row16_col1,#T_8a9ee95a_0c9e_11eb_8060_525400567ed2row16_col3{\n",
        "            background-color:  #c6cce3;\n",
        "            color:  #000000;\n",
        "        }#T_8a9ee95a_0c9e_11eb_8060_525400567ed2row2_col3,#T_8a9ee95a_0c9e_11eb_8060_525400567ed2row3_col2{\n",
        "            background-color:  #046198;\n",
        "            color:  #f1f1f1;\n",
        "        }#T_8a9ee95a_0c9e_11eb_8060_525400567ed2row2_col4,#T_8a9ee95a_0c9e_11eb_8060_525400567ed2row4_col2{\n",
        "            background-color:  #abbfdc;\n",
        "            color:  #000000;\n",
        "        }#T_8a9ee95a_0c9e_11eb_8060_525400567ed2row2_col8,#T_8a9ee95a_0c9e_11eb_8060_525400567ed2row8_col2{\n",
        "            background-color:  #ced0e6;\n",
        "            color:  #000000;\n",
        "        }#T_8a9ee95a_0c9e_11eb_8060_525400567ed2row2_col9,#T_8a9ee95a_0c9e_11eb_8060_525400567ed2row9_col2{\n",
        "            background-color:  #d2d2e7;\n",
        "            color:  #000000;\n",
        "        }#T_8a9ee95a_0c9e_11eb_8060_525400567ed2row2_col10,#T_8a9ee95a_0c9e_11eb_8060_525400567ed2row10_col2{\n",
        "            background-color:  #80aed2;\n",
        "            color:  #000000;\n",
        "        }#T_8a9ee95a_0c9e_11eb_8060_525400567ed2row2_col11,#T_8a9ee95a_0c9e_11eb_8060_525400567ed2row3_col10,#T_8a9ee95a_0c9e_11eb_8060_525400567ed2row10_col3,#T_8a9ee95a_0c9e_11eb_8060_525400567ed2row11_col2{\n",
        "            background-color:  #8eb3d5;\n",
        "            color:  #000000;\n",
        "        }#T_8a9ee95a_0c9e_11eb_8060_525400567ed2row2_col12,#T_8a9ee95a_0c9e_11eb_8060_525400567ed2row12_col2{\n",
        "            background-color:  #96b6d7;\n",
        "            color:  #000000;\n",
        "        }#T_8a9ee95a_0c9e_11eb_8060_525400567ed2row2_col13,#T_8a9ee95a_0c9e_11eb_8060_525400567ed2row13_col2{\n",
        "            background-color:  #f7f0f7;\n",
        "            color:  #000000;\n",
        "        }#T_8a9ee95a_0c9e_11eb_8060_525400567ed2row2_col15,#T_8a9ee95a_0c9e_11eb_8060_525400567ed2row15_col2{\n",
        "            background-color:  #c9cee4;\n",
        "            color:  #000000;\n",
        "        }#T_8a9ee95a_0c9e_11eb_8060_525400567ed2row2_col16,#T_8a9ee95a_0c9e_11eb_8060_525400567ed2row16_col2{\n",
        "            background-color:  #c8cde4;\n",
        "            color:  #000000;\n",
        "        }#T_8a9ee95a_0c9e_11eb_8060_525400567ed2row3_col4,#T_8a9ee95a_0c9e_11eb_8060_525400567ed2row4_col3,#T_8a9ee95a_0c9e_11eb_8060_525400567ed2row11_col13,#T_8a9ee95a_0c9e_11eb_8060_525400567ed2row13_col11{\n",
        "            background-color:  #88b1d4;\n",
        "            color:  #000000;\n",
        "        }#T_8a9ee95a_0c9e_11eb_8060_525400567ed2row3_col5,#T_8a9ee95a_0c9e_11eb_8060_525400567ed2row5_col3{\n",
        "            background-color:  #d8d7e9;\n",
        "            color:  #000000;\n",
        "        }#T_8a9ee95a_0c9e_11eb_8060_525400567ed2row3_col7,#T_8a9ee95a_0c9e_11eb_8060_525400567ed2row7_col3{\n",
        "            background-color:  #cacee5;\n",
        "            color:  #000000;\n",
        "        }#T_8a9ee95a_0c9e_11eb_8060_525400567ed2row3_col8,#T_8a9ee95a_0c9e_11eb_8060_525400567ed2row8_col3{\n",
        "            background-color:  #c5cce3;\n",
        "            color:  #000000;\n",
        "        }#T_8a9ee95a_0c9e_11eb_8060_525400567ed2row3_col9,#T_8a9ee95a_0c9e_11eb_8060_525400567ed2row4_col14,#T_8a9ee95a_0c9e_11eb_8060_525400567ed2row9_col3,#T_8a9ee95a_0c9e_11eb_8060_525400567ed2row14_col4{\n",
        "            background-color:  #bfc9e1;\n",
        "            color:  #000000;\n",
        "        }#T_8a9ee95a_0c9e_11eb_8060_525400567ed2row3_col11,#T_8a9ee95a_0c9e_11eb_8060_525400567ed2row11_col3{\n",
        "            background-color:  #91b5d6;\n",
        "            color:  #000000;\n",
        "        }#T_8a9ee95a_0c9e_11eb_8060_525400567ed2row3_col12,#T_8a9ee95a_0c9e_11eb_8060_525400567ed2row12_col3{\n",
        "            background-color:  #9ab8d8;\n",
        "            color:  #000000;\n",
        "        }#T_8a9ee95a_0c9e_11eb_8060_525400567ed2row3_col13,#T_8a9ee95a_0c9e_11eb_8060_525400567ed2row3_col14,#T_8a9ee95a_0c9e_11eb_8060_525400567ed2row13_col3,#T_8a9ee95a_0c9e_11eb_8060_525400567ed2row14_col3{\n",
        "            background-color:  #fff7fb;\n",
        "            color:  #000000;\n",
        "        }#T_8a9ee95a_0c9e_11eb_8060_525400567ed2row3_col15,#T_8a9ee95a_0c9e_11eb_8060_525400567ed2row15_col3{\n",
        "            background-color:  #f1ebf5;\n",
        "            color:  #000000;\n",
        "        }#T_8a9ee95a_0c9e_11eb_8060_525400567ed2row4_col5,#T_8a9ee95a_0c9e_11eb_8060_525400567ed2row5_col4{\n",
        "            background-color:  #76aad0;\n",
        "            color:  #000000;\n",
        "        }#T_8a9ee95a_0c9e_11eb_8060_525400567ed2row4_col6,#T_8a9ee95a_0c9e_11eb_8060_525400567ed2row6_col4{\n",
        "            background-color:  #a8bedc;\n",
        "            color:  #000000;\n",
        "        }#T_8a9ee95a_0c9e_11eb_8060_525400567ed2row4_col7,#T_8a9ee95a_0c9e_11eb_8060_525400567ed2row7_col4{\n",
        "            background-color:  #79abd0;\n",
        "            color:  #000000;\n",
        "        }#T_8a9ee95a_0c9e_11eb_8060_525400567ed2row4_col8,#T_8a9ee95a_0c9e_11eb_8060_525400567ed2row8_col4{\n",
        "            background-color:  #86b0d3;\n",
        "            color:  #000000;\n",
        "        }#T_8a9ee95a_0c9e_11eb_8060_525400567ed2row4_col9,#T_8a9ee95a_0c9e_11eb_8060_525400567ed2row9_col4{\n",
        "            background-color:  #63a2cb;\n",
        "            color:  #000000;\n",
        "        }#T_8a9ee95a_0c9e_11eb_8060_525400567ed2row4_col10,#T_8a9ee95a_0c9e_11eb_8060_525400567ed2row10_col4{\n",
        "            background-color:  #69a5cc;\n",
        "            color:  #000000;\n",
        "        }#T_8a9ee95a_0c9e_11eb_8060_525400567ed2row4_col11,#T_8a9ee95a_0c9e_11eb_8060_525400567ed2row9_col13,#T_8a9ee95a_0c9e_11eb_8060_525400567ed2row11_col4,#T_8a9ee95a_0c9e_11eb_8060_525400567ed2row13_col9{\n",
        "            background-color:  #569dc8;\n",
        "            color:  #000000;\n",
        "        }#T_8a9ee95a_0c9e_11eb_8060_525400567ed2row4_col13,#T_8a9ee95a_0c9e_11eb_8060_525400567ed2row13_col4{\n",
        "            background-color:  #bcc7e1;\n",
        "            color:  #000000;\n",
        "        }#T_8a9ee95a_0c9e_11eb_8060_525400567ed2row4_col15,#T_8a9ee95a_0c9e_11eb_8060_525400567ed2row15_col4{\n",
        "            background-color:  #b4c4df;\n",
        "            color:  #000000;\n",
        "        }#T_8a9ee95a_0c9e_11eb_8060_525400567ed2row4_col16,#T_8a9ee95a_0c9e_11eb_8060_525400567ed2row10_col14,#T_8a9ee95a_0c9e_11eb_8060_525400567ed2row14_col10,#T_8a9ee95a_0c9e_11eb_8060_525400567ed2row16_col4{\n",
        "            background-color:  #71a8ce;\n",
        "            color:  #000000;\n",
        "        }#T_8a9ee95a_0c9e_11eb_8060_525400567ed2row5_col6,#T_8a9ee95a_0c9e_11eb_8060_525400567ed2row6_col5{\n",
        "            background-color:  #04639b;\n",
        "            color:  #f1f1f1;\n",
        "        }#T_8a9ee95a_0c9e_11eb_8060_525400567ed2row5_col7,#T_8a9ee95a_0c9e_11eb_8060_525400567ed2row7_col5{\n",
        "            background-color:  #04629a;\n",
        "            color:  #f1f1f1;\n",
        "        }#T_8a9ee95a_0c9e_11eb_8060_525400567ed2row5_col8,#T_8a9ee95a_0c9e_11eb_8060_525400567ed2row5_col13,#T_8a9ee95a_0c9e_11eb_8060_525400567ed2row7_col9,#T_8a9ee95a_0c9e_11eb_8060_525400567ed2row8_col5,#T_8a9ee95a_0c9e_11eb_8060_525400567ed2row9_col7,#T_8a9ee95a_0c9e_11eb_8060_525400567ed2row13_col5{\n",
        "            background-color:  #056ead;\n",
        "            color:  #f1f1f1;\n",
        "        }#T_8a9ee95a_0c9e_11eb_8060_525400567ed2row5_col9,#T_8a9ee95a_0c9e_11eb_8060_525400567ed2row6_col8,#T_8a9ee95a_0c9e_11eb_8060_525400567ed2row8_col6,#T_8a9ee95a_0c9e_11eb_8060_525400567ed2row9_col5,#T_8a9ee95a_0c9e_11eb_8060_525400567ed2row9_col12,#T_8a9ee95a_0c9e_11eb_8060_525400567ed2row12_col9{\n",
        "            background-color:  #0a73b2;\n",
        "            color:  #f1f1f1;\n",
        "        }#T_8a9ee95a_0c9e_11eb_8060_525400567ed2row5_col10,#T_8a9ee95a_0c9e_11eb_8060_525400567ed2row10_col5{\n",
        "            background-color:  #056faf;\n",
        "            color:  #f1f1f1;\n",
        "        }#T_8a9ee95a_0c9e_11eb_8060_525400567ed2row5_col11,#T_8a9ee95a_0c9e_11eb_8060_525400567ed2row11_col5{\n",
        "            background-color:  #197db7;\n",
        "            color:  #000000;\n",
        "        }#T_8a9ee95a_0c9e_11eb_8060_525400567ed2row5_col12,#T_8a9ee95a_0c9e_11eb_8060_525400567ed2row12_col5{\n",
        "            background-color:  #2987bc;\n",
        "            color:  #000000;\n",
        "        }#T_8a9ee95a_0c9e_11eb_8060_525400567ed2row5_col14,#T_8a9ee95a_0c9e_11eb_8060_525400567ed2row14_col5{\n",
        "            background-color:  #3f93c2;\n",
        "            color:  #000000;\n",
        "        }#T_8a9ee95a_0c9e_11eb_8060_525400567ed2row5_col15,#T_8a9ee95a_0c9e_11eb_8060_525400567ed2row15_col5{\n",
        "            background-color:  #89b1d4;\n",
        "            color:  #000000;\n",
        "        }#T_8a9ee95a_0c9e_11eb_8060_525400567ed2row5_col16,#T_8a9ee95a_0c9e_11eb_8060_525400567ed2row7_col16,#T_8a9ee95a_0c9e_11eb_8060_525400567ed2row16_col5,#T_8a9ee95a_0c9e_11eb_8060_525400567ed2row16_col7{\n",
        "            background-color:  #045788;\n",
        "            color:  #f1f1f1;\n",
        "        }#T_8a9ee95a_0c9e_11eb_8060_525400567ed2row6_col7,#T_8a9ee95a_0c9e_11eb_8060_525400567ed2row7_col6{\n",
        "            background-color:  #0771b1;\n",
        "            color:  #f1f1f1;\n",
        "        }#T_8a9ee95a_0c9e_11eb_8060_525400567ed2row6_col9,#T_8a9ee95a_0c9e_11eb_8060_525400567ed2row9_col6{\n",
        "            background-color:  #2685bb;\n",
        "            color:  #000000;\n",
        "        }#T_8a9ee95a_0c9e_11eb_8060_525400567ed2row6_col10,#T_8a9ee95a_0c9e_11eb_8060_525400567ed2row7_col11,#T_8a9ee95a_0c9e_11eb_8060_525400567ed2row10_col6,#T_8a9ee95a_0c9e_11eb_8060_525400567ed2row11_col7{\n",
        "            background-color:  #0d75b3;\n",
        "            color:  #f1f1f1;\n",
        "        }#T_8a9ee95a_0c9e_11eb_8060_525400567ed2row6_col11,#T_8a9ee95a_0c9e_11eb_8060_525400567ed2row11_col6{\n",
        "            background-color:  #4697c4;\n",
        "            color:  #000000;\n",
        "        }#T_8a9ee95a_0c9e_11eb_8060_525400567ed2row6_col12,#T_8a9ee95a_0c9e_11eb_8060_525400567ed2row12_col6{\n",
        "            background-color:  #3b92c1;\n",
        "            color:  #000000;\n",
        "        }#T_8a9ee95a_0c9e_11eb_8060_525400567ed2row6_col13,#T_8a9ee95a_0c9e_11eb_8060_525400567ed2row13_col6{\n",
        "            background-color:  #045b8f;\n",
        "            color:  #f1f1f1;\n",
        "        }#T_8a9ee95a_0c9e_11eb_8060_525400567ed2row6_col14,#T_8a9ee95a_0c9e_11eb_8060_525400567ed2row14_col6{\n",
        "            background-color:  #348ebf;\n",
        "            color:  #000000;\n",
        "        }#T_8a9ee95a_0c9e_11eb_8060_525400567ed2row6_col15,#T_8a9ee95a_0c9e_11eb_8060_525400567ed2row15_col6{\n",
        "            background-color:  #529bc7;\n",
        "            color:  #000000;\n",
        "        }#T_8a9ee95a_0c9e_11eb_8060_525400567ed2row6_col16,#T_8a9ee95a_0c9e_11eb_8060_525400567ed2row16_col6{\n",
        "            background-color:  #045a8d;\n",
        "            color:  #f1f1f1;\n",
        "        }#T_8a9ee95a_0c9e_11eb_8060_525400567ed2row7_col8,#T_8a9ee95a_0c9e_11eb_8060_525400567ed2row8_col7{\n",
        "            background-color:  #0569a5;\n",
        "            color:  #f1f1f1;\n",
        "        }#T_8a9ee95a_0c9e_11eb_8060_525400567ed2row7_col10,#T_8a9ee95a_0c9e_11eb_8060_525400567ed2row8_col13,#T_8a9ee95a_0c9e_11eb_8060_525400567ed2row10_col7,#T_8a9ee95a_0c9e_11eb_8060_525400567ed2row13_col8{\n",
        "            background-color:  #187cb6;\n",
        "            color:  #000000;\n",
        "        }#T_8a9ee95a_0c9e_11eb_8060_525400567ed2row7_col12,#T_8a9ee95a_0c9e_11eb_8060_525400567ed2row12_col7{\n",
        "            background-color:  #0567a1;\n",
        "            color:  #f1f1f1;\n",
        "        }#T_8a9ee95a_0c9e_11eb_8060_525400567ed2row7_col13,#T_8a9ee95a_0c9e_11eb_8060_525400567ed2row9_col11,#T_8a9ee95a_0c9e_11eb_8060_525400567ed2row11_col9,#T_8a9ee95a_0c9e_11eb_8060_525400567ed2row13_col7{\n",
        "            background-color:  #0570b0;\n",
        "            color:  #f1f1f1;\n",
        "        }#T_8a9ee95a_0c9e_11eb_8060_525400567ed2row7_col14,#T_8a9ee95a_0c9e_11eb_8060_525400567ed2row14_col7{\n",
        "            background-color:  #62a2cb;\n",
        "            color:  #000000;\n",
        "        }#T_8a9ee95a_0c9e_11eb_8060_525400567ed2row7_col15,#T_8a9ee95a_0c9e_11eb_8060_525400567ed2row8_col14,#T_8a9ee95a_0c9e_11eb_8060_525400567ed2row14_col8,#T_8a9ee95a_0c9e_11eb_8060_525400567ed2row15_col7{\n",
        "            background-color:  #7eadd1;\n",
        "            color:  #000000;\n",
        "        }#T_8a9ee95a_0c9e_11eb_8060_525400567ed2row8_col9,#T_8a9ee95a_0c9e_11eb_8060_525400567ed2row9_col8{\n",
        "            background-color:  #045d92;\n",
        "            color:  #f1f1f1;\n",
        "        }#T_8a9ee95a_0c9e_11eb_8060_525400567ed2row8_col10,#T_8a9ee95a_0c9e_11eb_8060_525400567ed2row10_col8{\n",
        "            background-color:  #056fae;\n",
        "            color:  #f1f1f1;\n",
        "        }#T_8a9ee95a_0c9e_11eb_8060_525400567ed2row8_col11,#T_8a9ee95a_0c9e_11eb_8060_525400567ed2row11_col8{\n",
        "            background-color:  #0568a3;\n",
        "            color:  #f1f1f1;\n",
        "        }#T_8a9ee95a_0c9e_11eb_8060_525400567ed2row8_col12,#T_8a9ee95a_0c9e_11eb_8060_525400567ed2row12_col8{\n",
        "            background-color:  #0c74b2;\n",
        "            color:  #f1f1f1;\n",
        "        }#T_8a9ee95a_0c9e_11eb_8060_525400567ed2row8_col15,#T_8a9ee95a_0c9e_11eb_8060_525400567ed2row15_col8{\n",
        "            background-color:  #a2bcda;\n",
        "            color:  #000000;\n",
        "        }#T_8a9ee95a_0c9e_11eb_8060_525400567ed2row8_col16,#T_8a9ee95a_0c9e_11eb_8060_525400567ed2row16_col8{\n",
        "            background-color:  #034f7d;\n",
        "            color:  #f1f1f1;\n",
        "        }#T_8a9ee95a_0c9e_11eb_8060_525400567ed2row9_col10,#T_8a9ee95a_0c9e_11eb_8060_525400567ed2row10_col9,#T_8a9ee95a_0c9e_11eb_8060_525400567ed2row13_col15,#T_8a9ee95a_0c9e_11eb_8060_525400567ed2row15_col13{\n",
        "            background-color:  #167bb6;\n",
        "            color:  #000000;\n",
        "        }#T_8a9ee95a_0c9e_11eb_8060_525400567ed2row9_col14,#T_8a9ee95a_0c9e_11eb_8060_525400567ed2row14_col9{\n",
        "            background-color:  #bbc7e0;\n",
        "            color:  #000000;\n",
        "        }#T_8a9ee95a_0c9e_11eb_8060_525400567ed2row9_col16,#T_8a9ee95a_0c9e_11eb_8060_525400567ed2row10_col16,#T_8a9ee95a_0c9e_11eb_8060_525400567ed2row16_col9,#T_8a9ee95a_0c9e_11eb_8060_525400567ed2row16_col10{\n",
        "            background-color:  #045e94;\n",
        "            color:  #f1f1f1;\n",
        "        }#T_8a9ee95a_0c9e_11eb_8060_525400567ed2row10_col11,#T_8a9ee95a_0c9e_11eb_8060_525400567ed2row11_col10,#T_8a9ee95a_0c9e_11eb_8060_525400567ed2row12_col16,#T_8a9ee95a_0c9e_11eb_8060_525400567ed2row16_col12{\n",
        "            background-color:  #0566a0;\n",
        "            color:  #f1f1f1;\n",
        "        }#T_8a9ee95a_0c9e_11eb_8060_525400567ed2row10_col12,#T_8a9ee95a_0c9e_11eb_8060_525400567ed2row12_col10{\n",
        "            background-color:  #2786bb;\n",
        "            color:  #000000;\n",
        "        }#T_8a9ee95a_0c9e_11eb_8060_525400567ed2row10_col13,#T_8a9ee95a_0c9e_11eb_8060_525400567ed2row13_col10{\n",
        "            background-color:  #4c99c5;\n",
        "            color:  #000000;\n",
        "        }#T_8a9ee95a_0c9e_11eb_8060_525400567ed2row10_col15,#T_8a9ee95a_0c9e_11eb_8060_525400567ed2row15_col10{\n",
        "            background-color:  #6ba5cd;\n",
        "            color:  #000000;\n",
        "        }#T_8a9ee95a_0c9e_11eb_8060_525400567ed2row11_col12,#T_8a9ee95a_0c9e_11eb_8060_525400567ed2row12_col11{\n",
        "            background-color:  #4295c3;\n",
        "            color:  #000000;\n",
        "        }#T_8a9ee95a_0c9e_11eb_8060_525400567ed2row11_col14,#T_8a9ee95a_0c9e_11eb_8060_525400567ed2row14_col11,#T_8a9ee95a_0c9e_11eb_8060_525400567ed2row15_col16,#T_8a9ee95a_0c9e_11eb_8060_525400567ed2row16_col15{\n",
        "            background-color:  #73a9cf;\n",
        "            color:  #000000;\n",
        "        }#T_8a9ee95a_0c9e_11eb_8060_525400567ed2row11_col15,#T_8a9ee95a_0c9e_11eb_8060_525400567ed2row15_col11{\n",
        "            background-color:  #b1c2de;\n",
        "            color:  #000000;\n",
        "        }#T_8a9ee95a_0c9e_11eb_8060_525400567ed2row11_col16,#T_8a9ee95a_0c9e_11eb_8060_525400567ed2row16_col11{\n",
        "            background-color:  #056ba9;\n",
        "            color:  #f1f1f1;\n",
        "        }#T_8a9ee95a_0c9e_11eb_8060_525400567ed2row12_col13,#T_8a9ee95a_0c9e_11eb_8060_525400567ed2row13_col12{\n",
        "            background-color:  #3790c0;\n",
        "            color:  #000000;\n",
        "        }#T_8a9ee95a_0c9e_11eb_8060_525400567ed2row12_col14,#T_8a9ee95a_0c9e_11eb_8060_525400567ed2row14_col12{\n",
        "            background-color:  #9ebad9;\n",
        "            color:  #000000;\n",
        "        }#T_8a9ee95a_0c9e_11eb_8060_525400567ed2row12_col15,#T_8a9ee95a_0c9e_11eb_8060_525400567ed2row15_col12{\n",
        "            background-color:  #8bb2d4;\n",
        "            color:  #000000;\n",
        "        }#T_8a9ee95a_0c9e_11eb_8060_525400567ed2row13_col14,#T_8a9ee95a_0c9e_11eb_8060_525400567ed2row14_col13{\n",
        "            background-color:  #1b7eb7;\n",
        "            color:  #000000;\n",
        "        }#T_8a9ee95a_0c9e_11eb_8060_525400567ed2row13_col16,#T_8a9ee95a_0c9e_11eb_8060_525400567ed2row16_col13{\n",
        "            background-color:  #04649e;\n",
        "            color:  #f1f1f1;\n",
        "        }#T_8a9ee95a_0c9e_11eb_8060_525400567ed2row14_col15,#T_8a9ee95a_0c9e_11eb_8060_525400567ed2row15_col14{\n",
        "            background-color:  #0f76b3;\n",
        "            color:  #f1f1f1;\n",
        "        }#T_8a9ee95a_0c9e_11eb_8060_525400567ed2row14_col16,#T_8a9ee95a_0c9e_11eb_8060_525400567ed2row16_col14{\n",
        "            background-color:  #6da6cd;\n",
        "            color:  #000000;\n",
        "        }</style><table id=\"T_8a9ee95a_0c9e_11eb_8060_525400567ed2\" ><thead>    <tr>        <th class=\"blank level0\" ></th>        <th class=\"col_heading level0 col0\" >Rt</th>        <th class=\"col_heading level0 col1\" >theta</th>        <th class=\"col_heading level0 col2\" >kappa</th>        <th class=\"col_heading level0 col3\" >rho</th>        <th class=\"col_heading level0 col4\" >sigma</th>        <th class=\"col_heading level0 col5\" >School_closing</th>        <th class=\"col_heading level0 col6\" >Workplace_closing</th>        <th class=\"col_heading level0 col7\" >Cancel_events</th>        <th class=\"col_heading level0 col8\" >Gatherings_restrictions</th>        <th class=\"col_heading level0 col9\" >Transport_closing</th>        <th class=\"col_heading level0 col10\" >Stay_home_restrictions</th>        <th class=\"col_heading level0 col11\" >Internal_movement_restrictions</th>        <th class=\"col_heading level0 col12\" >International_movement_restrictions</th>        <th class=\"col_heading level0 col13\" >Information_campaigns</th>        <th class=\"col_heading level0 col14\" >Testing_policy</th>        <th class=\"col_heading level0 col15\" >Contact_tracing</th>        <th class=\"col_heading level0 col16\" >Stringency_index</th>    </tr></thead><tbody>\n",
        "                <tr>\n",
        "                        <th id=\"T_8a9ee95a_0c9e_11eb_8060_525400567ed2level0_row0\" class=\"row_heading level0 row0\" >Rt</th>\n",
        "                        <td id=\"T_8a9ee95a_0c9e_11eb_8060_525400567ed2row0_col0\" class=\"data row0 col0\" >1.000000</td>\n",
        "                        <td id=\"T_8a9ee95a_0c9e_11eb_8060_525400567ed2row0_col1\" class=\"data row0 col1\" >-0.199862</td>\n",
        "                        <td id=\"T_8a9ee95a_0c9e_11eb_8060_525400567ed2row0_col2\" class=\"data row0 col2\" >-0.132394</td>\n",
        "                        <td id=\"T_8a9ee95a_0c9e_11eb_8060_525400567ed2row0_col3\" class=\"data row0 col3\" >0.399288</td>\n",
        "                        <td id=\"T_8a9ee95a_0c9e_11eb_8060_525400567ed2row0_col4\" class=\"data row0 col4\" >-0.232843</td>\n",
        "                        <td id=\"T_8a9ee95a_0c9e_11eb_8060_525400567ed2row0_col5\" class=\"data row0 col5\" >-0.228660</td>\n",
        "                        <td id=\"T_8a9ee95a_0c9e_11eb_8060_525400567ed2row0_col6\" class=\"data row0 col6\" >-0.206919</td>\n",
        "                        <td id=\"T_8a9ee95a_0c9e_11eb_8060_525400567ed2row0_col7\" class=\"data row0 col7\" >-0.128881</td>\n",
        "                        <td id=\"T_8a9ee95a_0c9e_11eb_8060_525400567ed2row0_col8\" class=\"data row0 col8\" >-0.134458</td>\n",
        "                        <td id=\"T_8a9ee95a_0c9e_11eb_8060_525400567ed2row0_col9\" class=\"data row0 col9\" >-0.126994</td>\n",
        "                        <td id=\"T_8a9ee95a_0c9e_11eb_8060_525400567ed2row0_col10\" class=\"data row0 col10\" >-0.208853</td>\n",
        "                        <td id=\"T_8a9ee95a_0c9e_11eb_8060_525400567ed2row0_col11\" class=\"data row0 col11\" >-0.307340</td>\n",
        "                        <td id=\"T_8a9ee95a_0c9e_11eb_8060_525400567ed2row0_col12\" class=\"data row0 col12\" >-0.082430</td>\n",
        "                        <td id=\"T_8a9ee95a_0c9e_11eb_8060_525400567ed2row0_col13\" class=\"data row0 col13\" >-0.137226</td>\n",
        "                        <td id=\"T_8a9ee95a_0c9e_11eb_8060_525400567ed2row0_col14\" class=\"data row0 col14\" >-0.365782</td>\n",
        "                        <td id=\"T_8a9ee95a_0c9e_11eb_8060_525400567ed2row0_col15\" class=\"data row0 col15\" >-0.263106</td>\n",
        "                        <td id=\"T_8a9ee95a_0c9e_11eb_8060_525400567ed2row0_col16\" class=\"data row0 col16\" >-0.182348</td>\n",
        "            </tr>\n",
        "            <tr>\n",
        "                        <th id=\"T_8a9ee95a_0c9e_11eb_8060_525400567ed2level0_row1\" class=\"row_heading level0 row1\" >theta</th>\n",
        "                        <td id=\"T_8a9ee95a_0c9e_11eb_8060_525400567ed2row1_col0\" class=\"data row1 col0\" >-0.199862</td>\n",
        "                        <td id=\"T_8a9ee95a_0c9e_11eb_8060_525400567ed2row1_col1\" class=\"data row1 col1\" >1.000000</td>\n",
        "                        <td id=\"T_8a9ee95a_0c9e_11eb_8060_525400567ed2row1_col2\" class=\"data row1 col2\" >0.865658</td>\n",
        "                        <td id=\"T_8a9ee95a_0c9e_11eb_8060_525400567ed2row1_col3\" class=\"data row1 col3\" >0.582522</td>\n",
        "                        <td id=\"T_8a9ee95a_0c9e_11eb_8060_525400567ed2row1_col4\" class=\"data row1 col4\" >0.073963</td>\n",
        "                        <td id=\"T_8a9ee95a_0c9e_11eb_8060_525400567ed2row1_col5\" class=\"data row1 col5\" >-0.134186</td>\n",
        "                        <td id=\"T_8a9ee95a_0c9e_11eb_8060_525400567ed2row1_col6\" class=\"data row1 col6\" >-0.110947</td>\n",
        "                        <td id=\"T_8a9ee95a_0c9e_11eb_8060_525400567ed2row1_col7\" class=\"data row1 col7\" >-0.223343</td>\n",
        "                        <td id=\"T_8a9ee95a_0c9e_11eb_8060_525400567ed2row1_col8\" class=\"data row1 col8\" >-0.094429</td>\n",
        "                        <td id=\"T_8a9ee95a_0c9e_11eb_8060_525400567ed2row1_col9\" class=\"data row1 col9\" >-0.152861</td>\n",
        "                        <td id=\"T_8a9ee95a_0c9e_11eb_8060_525400567ed2row1_col10\" class=\"data row1 col10\" >0.182356</td>\n",
        "                        <td id=\"T_8a9ee95a_0c9e_11eb_8060_525400567ed2row1_col11\" class=\"data row1 col11\" >0.040765</td>\n",
        "                        <td id=\"T_8a9ee95a_0c9e_11eb_8060_525400567ed2row1_col12\" class=\"data row1 col12\" >0.050630</td>\n",
        "                        <td id=\"T_8a9ee95a_0c9e_11eb_8060_525400567ed2row1_col13\" class=\"data row1 col13\" >-0.288633</td>\n",
        "                        <td id=\"T_8a9ee95a_0c9e_11eb_8060_525400567ed2row1_col14\" class=\"data row1 col14\" >-0.241917</td>\n",
        "                        <td id=\"T_8a9ee95a_0c9e_11eb_8060_525400567ed2row1_col15\" class=\"data row1 col15\" >0.044290</td>\n",
        "                        <td id=\"T_8a9ee95a_0c9e_11eb_8060_525400567ed2row1_col16\" class=\"data row1 col16\" >-0.055860</td>\n",
        "            </tr>\n",
        "            <tr>\n",
        "                        <th id=\"T_8a9ee95a_0c9e_11eb_8060_525400567ed2level0_row2\" class=\"row_heading level0 row2\" >kappa</th>\n",
        "                        <td id=\"T_8a9ee95a_0c9e_11eb_8060_525400567ed2row2_col0\" class=\"data row2 col0\" >-0.132394</td>\n",
        "                        <td id=\"T_8a9ee95a_0c9e_11eb_8060_525400567ed2row2_col1\" class=\"data row2 col1\" >0.865658</td>\n",
        "                        <td id=\"T_8a9ee95a_0c9e_11eb_8060_525400567ed2row2_col2\" class=\"data row2 col2\" >1.000000</td>\n",
        "                        <td id=\"T_8a9ee95a_0c9e_11eb_8060_525400567ed2row2_col3\" class=\"data row2 col3\" >0.756017</td>\n",
        "                        <td id=\"T_8a9ee95a_0c9e_11eb_8060_525400567ed2row2_col4\" class=\"data row2 col4\" >0.069075</td>\n",
        "                        <td id=\"T_8a9ee95a_0c9e_11eb_8060_525400567ed2row2_col5\" class=\"data row2 col5\" >-0.154662</td>\n",
        "                        <td id=\"T_8a9ee95a_0c9e_11eb_8060_525400567ed2row2_col6\" class=\"data row2 col6\" >-0.184438</td>\n",
        "                        <td id=\"T_8a9ee95a_0c9e_11eb_8060_525400567ed2row2_col7\" class=\"data row2 col7\" >-0.128534</td>\n",
        "                        <td id=\"T_8a9ee95a_0c9e_11eb_8060_525400567ed2row2_col8\" class=\"data row2 col8\" >-0.088203</td>\n",
        "                        <td id=\"T_8a9ee95a_0c9e_11eb_8060_525400567ed2row2_col9\" class=\"data row2 col9\" >-0.106517</td>\n",
        "                        <td id=\"T_8a9ee95a_0c9e_11eb_8060_525400567ed2row2_col10\" class=\"data row2 col10\" >0.226133</td>\n",
        "                        <td id=\"T_8a9ee95a_0c9e_11eb_8060_525400567ed2row2_col11\" class=\"data row2 col11\" >0.173238</td>\n",
        "                        <td id=\"T_8a9ee95a_0c9e_11eb_8060_525400567ed2row2_col12\" class=\"data row2 col12\" >0.143451</td>\n",
        "                        <td id=\"T_8a9ee95a_0c9e_11eb_8060_525400567ed2row2_col13\" class=\"data row2 col13\" >-0.383442</td>\n",
        "                        <td id=\"T_8a9ee95a_0c9e_11eb_8060_525400567ed2row2_col14\" class=\"data row2 col14\" >-0.249339</td>\n",
        "                        <td id=\"T_8a9ee95a_0c9e_11eb_8060_525400567ed2row2_col15\" class=\"data row2 col15\" >-0.065833</td>\n",
        "                        <td id=\"T_8a9ee95a_0c9e_11eb_8060_525400567ed2row2_col16\" class=\"data row2 col16\" >-0.061480</td>\n",
        "            </tr>\n",
        "            <tr>\n",
        "                        <th id=\"T_8a9ee95a_0c9e_11eb_8060_525400567ed2level0_row3\" class=\"row_heading level0 row3\" >rho</th>\n",
        "                        <td id=\"T_8a9ee95a_0c9e_11eb_8060_525400567ed2row3_col0\" class=\"data row3 col0\" >0.399288</td>\n",
        "                        <td id=\"T_8a9ee95a_0c9e_11eb_8060_525400567ed2row3_col1\" class=\"data row3 col1\" >0.582522</td>\n",
        "                        <td id=\"T_8a9ee95a_0c9e_11eb_8060_525400567ed2row3_col2\" class=\"data row3 col2\" >0.756017</td>\n",
        "                        <td id=\"T_8a9ee95a_0c9e_11eb_8060_525400567ed2row3_col3\" class=\"data row3 col3\" >1.000000</td>\n",
        "                        <td id=\"T_8a9ee95a_0c9e_11eb_8060_525400567ed2row3_col4\" class=\"data row3 col4\" >0.195102</td>\n",
        "                        <td id=\"T_8a9ee95a_0c9e_11eb_8060_525400567ed2row3_col5\" class=\"data row3 col5\" >-0.142821</td>\n",
        "                        <td id=\"T_8a9ee95a_0c9e_11eb_8060_525400567ed2row3_col6\" class=\"data row3 col6\" >-0.242317</td>\n",
        "                        <td id=\"T_8a9ee95a_0c9e_11eb_8060_525400567ed2row3_col7\" class=\"data row3 col7\" >-0.069257</td>\n",
        "                        <td id=\"T_8a9ee95a_0c9e_11eb_8060_525400567ed2row3_col8\" class=\"data row3 col8\" >-0.046286</td>\n",
        "                        <td id=\"T_8a9ee95a_0c9e_11eb_8060_525400567ed2row3_col9\" class=\"data row3 col9\" >-0.019905</td>\n",
        "                        <td id=\"T_8a9ee95a_0c9e_11eb_8060_525400567ed2row3_col10\" class=\"data row3 col10\" >0.175744</td>\n",
        "                        <td id=\"T_8a9ee95a_0c9e_11eb_8060_525400567ed2row3_col11\" class=\"data row3 col11\" >0.165343</td>\n",
        "                        <td id=\"T_8a9ee95a_0c9e_11eb_8060_525400567ed2row3_col12\" class=\"data row3 col12\" >0.131361</td>\n",
        "                        <td id=\"T_8a9ee95a_0c9e_11eb_8060_525400567ed2row3_col13\" class=\"data row3 col13\" >-0.461881</td>\n",
        "                        <td id=\"T_8a9ee95a_0c9e_11eb_8060_525400567ed2row3_col14\" class=\"data row3 col14\" >-0.458923</td>\n",
        "                        <td id=\"T_8a9ee95a_0c9e_11eb_8060_525400567ed2row3_col15\" class=\"data row3 col15\" >-0.326444</td>\n",
        "                        <td id=\"T_8a9ee95a_0c9e_11eb_8060_525400567ed2row3_col16\" class=\"data row3 col16\" >-0.055553</td>\n",
        "            </tr>\n",
        "            <tr>\n",
        "                        <th id=\"T_8a9ee95a_0c9e_11eb_8060_525400567ed2level0_row4\" class=\"row_heading level0 row4\" >sigma</th>\n",
        "                        <td id=\"T_8a9ee95a_0c9e_11eb_8060_525400567ed2row4_col0\" class=\"data row4 col0\" >-0.232843</td>\n",
        "                        <td id=\"T_8a9ee95a_0c9e_11eb_8060_525400567ed2row4_col1\" class=\"data row4 col1\" >0.073963</td>\n",
        "                        <td id=\"T_8a9ee95a_0c9e_11eb_8060_525400567ed2row4_col2\" class=\"data row4 col2\" >0.069075</td>\n",
        "                        <td id=\"T_8a9ee95a_0c9e_11eb_8060_525400567ed2row4_col3\" class=\"data row4 col3\" >0.195102</td>\n",
        "                        <td id=\"T_8a9ee95a_0c9e_11eb_8060_525400567ed2row4_col4\" class=\"data row4 col4\" >1.000000</td>\n",
        "                        <td id=\"T_8a9ee95a_0c9e_11eb_8060_525400567ed2row4_col5\" class=\"data row4 col5\" >0.257795</td>\n",
        "                        <td id=\"T_8a9ee95a_0c9e_11eb_8060_525400567ed2row4_col6\" class=\"data row4 col6\" >0.077458</td>\n",
        "                        <td id=\"T_8a9ee95a_0c9e_11eb_8060_525400567ed2row4_col7\" class=\"data row4 col7\" >0.248946</td>\n",
        "                        <td id=\"T_8a9ee95a_0c9e_11eb_8060_525400567ed2row4_col8\" class=\"data row4 col8\" >0.202433</td>\n",
        "                        <td id=\"T_8a9ee95a_0c9e_11eb_8060_525400567ed2row4_col9\" class=\"data row4 col9\" >0.316300</td>\n",
        "                        <td id=\"T_8a9ee95a_0c9e_11eb_8060_525400567ed2row4_col10\" class=\"data row4 col10\" >0.300245</td>\n",
        "                        <td id=\"T_8a9ee95a_0c9e_11eb_8060_525400567ed2row4_col11\" class=\"data row4 col11\" >0.358798</td>\n",
        "                        <td id=\"T_8a9ee95a_0c9e_11eb_8060_525400567ed2row4_col12\" class=\"data row4 col12\" >0.180279</td>\n",
        "                        <td id=\"T_8a9ee95a_0c9e_11eb_8060_525400567ed2row4_col13\" class=\"data row4 col13\" >-0.010325</td>\n",
        "                        <td id=\"T_8a9ee95a_0c9e_11eb_8060_525400567ed2row4_col14\" class=\"data row4 col14\" >-0.017797</td>\n",
        "                        <td id=\"T_8a9ee95a_0c9e_11eb_8060_525400567ed2row4_col15\" class=\"data row4 col15\" >0.028565</td>\n",
        "                        <td id=\"T_8a9ee95a_0c9e_11eb_8060_525400567ed2row4_col16\" class=\"data row4 col16\" >0.276642</td>\n",
        "            </tr>\n",
        "            <tr>\n",
        "                        <th id=\"T_8a9ee95a_0c9e_11eb_8060_525400567ed2level0_row5\" class=\"row_heading level0 row5\" >School_closing</th>\n",
        "                        <td id=\"T_8a9ee95a_0c9e_11eb_8060_525400567ed2row5_col0\" class=\"data row5 col0\" >-0.228660</td>\n",
        "                        <td id=\"T_8a9ee95a_0c9e_11eb_8060_525400567ed2row5_col1\" class=\"data row5 col1\" >-0.134186</td>\n",
        "                        <td id=\"T_8a9ee95a_0c9e_11eb_8060_525400567ed2row5_col2\" class=\"data row5 col2\" >-0.154662</td>\n",
        "                        <td id=\"T_8a9ee95a_0c9e_11eb_8060_525400567ed2row5_col3\" class=\"data row5 col3\" >-0.142821</td>\n",
        "                        <td id=\"T_8a9ee95a_0c9e_11eb_8060_525400567ed2row5_col4\" class=\"data row5 col4\" >0.257795</td>\n",
        "                        <td id=\"T_8a9ee95a_0c9e_11eb_8060_525400567ed2row5_col5\" class=\"data row5 col5\" >1.000000</td>\n",
        "                        <td id=\"T_8a9ee95a_0c9e_11eb_8060_525400567ed2row5_col6\" class=\"data row5 col6\" >0.740207</td>\n",
        "                        <td id=\"T_8a9ee95a_0c9e_11eb_8060_525400567ed2row5_col7\" class=\"data row5 col7\" >0.746087</td>\n",
        "                        <td id=\"T_8a9ee95a_0c9e_11eb_8060_525400567ed2row5_col8\" class=\"data row5 col8\" >0.646702</td>\n",
        "                        <td id=\"T_8a9ee95a_0c9e_11eb_8060_525400567ed2row5_col9\" class=\"data row5 col9\" >0.614187</td>\n",
        "                        <td id=\"T_8a9ee95a_0c9e_11eb_8060_525400567ed2row5_col10\" class=\"data row5 col10\" >0.635901</td>\n",
        "                        <td id=\"T_8a9ee95a_0c9e_11eb_8060_525400567ed2row5_col11\" class=\"data row5 col11\" >0.554939</td>\n",
        "                        <td id=\"T_8a9ee95a_0c9e_11eb_8060_525400567ed2row5_col12\" class=\"data row5 col12\" >0.498291</td>\n",
        "                        <td id=\"T_8a9ee95a_0c9e_11eb_8060_525400567ed2row5_col13\" class=\"data row5 col13\" >0.646043</td>\n",
        "                        <td id=\"T_8a9ee95a_0c9e_11eb_8060_525400567ed2row5_col14\" class=\"data row5 col14\" >0.427935</td>\n",
        "                        <td id=\"T_8a9ee95a_0c9e_11eb_8060_525400567ed2row5_col15\" class=\"data row5 col15\" >0.190113</td>\n",
        "                        <td id=\"T_8a9ee95a_0c9e_11eb_8060_525400567ed2row5_col16\" class=\"data row5 col16\" >0.831945</td>\n",
        "            </tr>\n",
        "            <tr>\n",
        "                        <th id=\"T_8a9ee95a_0c9e_11eb_8060_525400567ed2level0_row6\" class=\"row_heading level0 row6\" >Workplace_closing</th>\n",
        "                        <td id=\"T_8a9ee95a_0c9e_11eb_8060_525400567ed2row6_col0\" class=\"data row6 col0\" >-0.206919</td>\n",
        "                        <td id=\"T_8a9ee95a_0c9e_11eb_8060_525400567ed2row6_col1\" class=\"data row6 col1\" >-0.110947</td>\n",
        "                        <td id=\"T_8a9ee95a_0c9e_11eb_8060_525400567ed2row6_col2\" class=\"data row6 col2\" >-0.184438</td>\n",
        "                        <td id=\"T_8a9ee95a_0c9e_11eb_8060_525400567ed2row6_col3\" class=\"data row6 col3\" >-0.242317</td>\n",
        "                        <td id=\"T_8a9ee95a_0c9e_11eb_8060_525400567ed2row6_col4\" class=\"data row6 col4\" >0.077458</td>\n",
        "                        <td id=\"T_8a9ee95a_0c9e_11eb_8060_525400567ed2row6_col5\" class=\"data row6 col5\" >0.740207</td>\n",
        "                        <td id=\"T_8a9ee95a_0c9e_11eb_8060_525400567ed2row6_col6\" class=\"data row6 col6\" >1.000000</td>\n",
        "                        <td id=\"T_8a9ee95a_0c9e_11eb_8060_525400567ed2row6_col7\" class=\"data row6 col7\" >0.624349</td>\n",
        "                        <td id=\"T_8a9ee95a_0c9e_11eb_8060_525400567ed2row6_col8\" class=\"data row6 col8\" >0.615875</td>\n",
        "                        <td id=\"T_8a9ee95a_0c9e_11eb_8060_525400567ed2row6_col9\" class=\"data row6 col9\" >0.510440</td>\n",
        "                        <td id=\"T_8a9ee95a_0c9e_11eb_8060_525400567ed2row6_col10\" class=\"data row6 col10\" >0.604249</td>\n",
        "                        <td id=\"T_8a9ee95a_0c9e_11eb_8060_525400567ed2row6_col11\" class=\"data row6 col11\" >0.401145</td>\n",
        "                        <td id=\"T_8a9ee95a_0c9e_11eb_8060_525400567ed2row6_col12\" class=\"data row6 col12\" >0.435534</td>\n",
        "                        <td id=\"T_8a9ee95a_0c9e_11eb_8060_525400567ed2row6_col13\" class=\"data row6 col13\" >0.804088</td>\n",
        "                        <td id=\"T_8a9ee95a_0c9e_11eb_8060_525400567ed2row6_col14\" class=\"data row6 col14\" >0.462388</td>\n",
        "                        <td id=\"T_8a9ee95a_0c9e_11eb_8060_525400567ed2row6_col15\" class=\"data row6 col15\" >0.371362</td>\n",
        "                        <td id=\"T_8a9ee95a_0c9e_11eb_8060_525400567ed2row6_col16\" class=\"data row6 col16\" >0.815563</td>\n",
        "            </tr>\n",
        "            <tr>\n",
        "                        <th id=\"T_8a9ee95a_0c9e_11eb_8060_525400567ed2level0_row7\" class=\"row_heading level0 row7\" >Cancel_events</th>\n",
        "                        <td id=\"T_8a9ee95a_0c9e_11eb_8060_525400567ed2row7_col0\" class=\"data row7 col0\" >-0.128881</td>\n",
        "                        <td id=\"T_8a9ee95a_0c9e_11eb_8060_525400567ed2row7_col1\" class=\"data row7 col1\" >-0.223343</td>\n",
        "                        <td id=\"T_8a9ee95a_0c9e_11eb_8060_525400567ed2row7_col2\" class=\"data row7 col2\" >-0.128534</td>\n",
        "                        <td id=\"T_8a9ee95a_0c9e_11eb_8060_525400567ed2row7_col3\" class=\"data row7 col3\" >-0.069257</td>\n",
        "                        <td id=\"T_8a9ee95a_0c9e_11eb_8060_525400567ed2row7_col4\" class=\"data row7 col4\" >0.248946</td>\n",
        "                        <td id=\"T_8a9ee95a_0c9e_11eb_8060_525400567ed2row7_col5\" class=\"data row7 col5\" >0.746087</td>\n",
        "                        <td id=\"T_8a9ee95a_0c9e_11eb_8060_525400567ed2row7_col6\" class=\"data row7 col6\" >0.624349</td>\n",
        "                        <td id=\"T_8a9ee95a_0c9e_11eb_8060_525400567ed2row7_col7\" class=\"data row7 col7\" >1.000000</td>\n",
        "                        <td id=\"T_8a9ee95a_0c9e_11eb_8060_525400567ed2row7_col8\" class=\"data row7 col8\" >0.687582</td>\n",
        "                        <td id=\"T_8a9ee95a_0c9e_11eb_8060_525400567ed2row7_col9\" class=\"data row7 col9\" >0.647861</td>\n",
        "                        <td id=\"T_8a9ee95a_0c9e_11eb_8060_525400567ed2row7_col10\" class=\"data row7 col10\" >0.563292</td>\n",
        "                        <td id=\"T_8a9ee95a_0c9e_11eb_8060_525400567ed2row7_col11\" class=\"data row7 col11\" >0.602209</td>\n",
        "                        <td id=\"T_8a9ee95a_0c9e_11eb_8060_525400567ed2row7_col12\" class=\"data row7 col12\" >0.710866</td>\n",
        "                        <td id=\"T_8a9ee95a_0c9e_11eb_8060_525400567ed2row7_col13\" class=\"data row7 col13\" >0.633541</td>\n",
        "                        <td id=\"T_8a9ee95a_0c9e_11eb_8060_525400567ed2row7_col14\" class=\"data row7 col14\" >0.321481</td>\n",
        "                        <td id=\"T_8a9ee95a_0c9e_11eb_8060_525400567ed2row7_col15\" class=\"data row7 col15\" >0.229177</td>\n",
        "                        <td id=\"T_8a9ee95a_0c9e_11eb_8060_525400567ed2row7_col16\" class=\"data row7 col16\" >0.833409</td>\n",
        "            </tr>\n",
        "            <tr>\n",
        "                        <th id=\"T_8a9ee95a_0c9e_11eb_8060_525400567ed2level0_row8\" class=\"row_heading level0 row8\" >Gatherings_restrictions</th>\n",
        "                        <td id=\"T_8a9ee95a_0c9e_11eb_8060_525400567ed2row8_col0\" class=\"data row8 col0\" >-0.134458</td>\n",
        "                        <td id=\"T_8a9ee95a_0c9e_11eb_8060_525400567ed2row8_col1\" class=\"data row8 col1\" >-0.094429</td>\n",
        "                        <td id=\"T_8a9ee95a_0c9e_11eb_8060_525400567ed2row8_col2\" class=\"data row8 col2\" >-0.088203</td>\n",
        "                        <td id=\"T_8a9ee95a_0c9e_11eb_8060_525400567ed2row8_col3\" class=\"data row8 col3\" >-0.046286</td>\n",
        "                        <td id=\"T_8a9ee95a_0c9e_11eb_8060_525400567ed2row8_col4\" class=\"data row8 col4\" >0.202433</td>\n",
        "                        <td id=\"T_8a9ee95a_0c9e_11eb_8060_525400567ed2row8_col5\" class=\"data row8 col5\" >0.646702</td>\n",
        "                        <td id=\"T_8a9ee95a_0c9e_11eb_8060_525400567ed2row8_col6\" class=\"data row8 col6\" >0.615875</td>\n",
        "                        <td id=\"T_8a9ee95a_0c9e_11eb_8060_525400567ed2row8_col7\" class=\"data row8 col7\" >0.687582</td>\n",
        "                        <td id=\"T_8a9ee95a_0c9e_11eb_8060_525400567ed2row8_col8\" class=\"data row8 col8\" >1.000000</td>\n",
        "                        <td id=\"T_8a9ee95a_0c9e_11eb_8060_525400567ed2row8_col9\" class=\"data row8 col9\" >0.794370</td>\n",
        "                        <td id=\"T_8a9ee95a_0c9e_11eb_8060_525400567ed2row8_col10\" class=\"data row8 col10\" >0.640718</td>\n",
        "                        <td id=\"T_8a9ee95a_0c9e_11eb_8060_525400567ed2row8_col11\" class=\"data row8 col11\" >0.699200</td>\n",
        "                        <td id=\"T_8a9ee95a_0c9e_11eb_8060_525400567ed2row8_col12\" class=\"data row8 col12\" >0.607597</td>\n",
        "                        <td id=\"T_8a9ee95a_0c9e_11eb_8060_525400567ed2row8_col13\" class=\"data row8 col13\" >0.565379</td>\n",
        "                        <td id=\"T_8a9ee95a_0c9e_11eb_8060_525400567ed2row8_col14\" class=\"data row8 col14\" >0.232122</td>\n",
        "                        <td id=\"T_8a9ee95a_0c9e_11eb_8060_525400567ed2row8_col15\" class=\"data row8 col15\" >0.102757</td>\n",
        "                        <td id=\"T_8a9ee95a_0c9e_11eb_8060_525400567ed2row8_col16\" class=\"data row8 col16\" >0.871235</td>\n",
        "            </tr>\n",
        "            <tr>\n",
        "                        <th id=\"T_8a9ee95a_0c9e_11eb_8060_525400567ed2level0_row9\" class=\"row_heading level0 row9\" >Transport_closing</th>\n",
        "                        <td id=\"T_8a9ee95a_0c9e_11eb_8060_525400567ed2row9_col0\" class=\"data row9 col0\" >-0.126994</td>\n",
        "                        <td id=\"T_8a9ee95a_0c9e_11eb_8060_525400567ed2row9_col1\" class=\"data row9 col1\" >-0.152861</td>\n",
        "                        <td id=\"T_8a9ee95a_0c9e_11eb_8060_525400567ed2row9_col2\" class=\"data row9 col2\" >-0.106517</td>\n",
        "                        <td id=\"T_8a9ee95a_0c9e_11eb_8060_525400567ed2row9_col3\" class=\"data row9 col3\" >-0.019905</td>\n",
        "                        <td id=\"T_8a9ee95a_0c9e_11eb_8060_525400567ed2row9_col4\" class=\"data row9 col4\" >0.316300</td>\n",
        "                        <td id=\"T_8a9ee95a_0c9e_11eb_8060_525400567ed2row9_col5\" class=\"data row9 col5\" >0.614187</td>\n",
        "                        <td id=\"T_8a9ee95a_0c9e_11eb_8060_525400567ed2row9_col6\" class=\"data row9 col6\" >0.510440</td>\n",
        "                        <td id=\"T_8a9ee95a_0c9e_11eb_8060_525400567ed2row9_col7\" class=\"data row9 col7\" >0.647861</td>\n",
        "                        <td id=\"T_8a9ee95a_0c9e_11eb_8060_525400567ed2row9_col8\" class=\"data row9 col8\" >0.794370</td>\n",
        "                        <td id=\"T_8a9ee95a_0c9e_11eb_8060_525400567ed2row9_col9\" class=\"data row9 col9\" >1.000000</td>\n",
        "                        <td id=\"T_8a9ee95a_0c9e_11eb_8060_525400567ed2row9_col10\" class=\"data row9 col10\" >0.568165</td>\n",
        "                        <td id=\"T_8a9ee95a_0c9e_11eb_8060_525400567ed2row9_col11\" class=\"data row9 col11\" >0.630655</td>\n",
        "                        <td id=\"T_8a9ee95a_0c9e_11eb_8060_525400567ed2row9_col12\" class=\"data row9 col12\" >0.613083</td>\n",
        "                        <td id=\"T_8a9ee95a_0c9e_11eb_8060_525400567ed2row9_col13\" class=\"data row9 col13\" >0.356933</td>\n",
        "                        <td id=\"T_8a9ee95a_0c9e_11eb_8060_525400567ed2row9_col14\" class=\"data row9 col14\" >-0.003028</td>\n",
        "                        <td id=\"T_8a9ee95a_0c9e_11eb_8060_525400567ed2row9_col15\" class=\"data row9 col15\" >-0.151453</td>\n",
        "                        <td id=\"T_8a9ee95a_0c9e_11eb_8060_525400567ed2row9_col16\" class=\"data row9 col16\" >0.780870</td>\n",
        "            </tr>\n",
        "            <tr>\n",
        "                        <th id=\"T_8a9ee95a_0c9e_11eb_8060_525400567ed2level0_row10\" class=\"row_heading level0 row10\" >Stay_home_restrictions</th>\n",
        "                        <td id=\"T_8a9ee95a_0c9e_11eb_8060_525400567ed2row10_col0\" class=\"data row10 col0\" >-0.208853</td>\n",
        "                        <td id=\"T_8a9ee95a_0c9e_11eb_8060_525400567ed2row10_col1\" class=\"data row10 col1\" >0.182356</td>\n",
        "                        <td id=\"T_8a9ee95a_0c9e_11eb_8060_525400567ed2row10_col2\" class=\"data row10 col2\" >0.226133</td>\n",
        "                        <td id=\"T_8a9ee95a_0c9e_11eb_8060_525400567ed2row10_col3\" class=\"data row10 col3\" >0.175744</td>\n",
        "                        <td id=\"T_8a9ee95a_0c9e_11eb_8060_525400567ed2row10_col4\" class=\"data row10 col4\" >0.300245</td>\n",
        "                        <td id=\"T_8a9ee95a_0c9e_11eb_8060_525400567ed2row10_col5\" class=\"data row10 col5\" >0.635901</td>\n",
        "                        <td id=\"T_8a9ee95a_0c9e_11eb_8060_525400567ed2row10_col6\" class=\"data row10 col6\" >0.604249</td>\n",
        "                        <td id=\"T_8a9ee95a_0c9e_11eb_8060_525400567ed2row10_col7\" class=\"data row10 col7\" >0.563292</td>\n",
        "                        <td id=\"T_8a9ee95a_0c9e_11eb_8060_525400567ed2row10_col8\" class=\"data row10 col8\" >0.640718</td>\n",
        "                        <td id=\"T_8a9ee95a_0c9e_11eb_8060_525400567ed2row10_col9\" class=\"data row10 col9\" >0.568165</td>\n",
        "                        <td id=\"T_8a9ee95a_0c9e_11eb_8060_525400567ed2row10_col10\" class=\"data row10 col10\" >1.000000</td>\n",
        "                        <td id=\"T_8a9ee95a_0c9e_11eb_8060_525400567ed2row10_col11\" class=\"data row10 col11\" >0.720142</td>\n",
        "                        <td id=\"T_8a9ee95a_0c9e_11eb_8060_525400567ed2row10_col12\" class=\"data row10 col12\" >0.507433</td>\n",
        "                        <td id=\"T_8a9ee95a_0c9e_11eb_8060_525400567ed2row10_col13\" class=\"data row10 col13\" >0.385850</td>\n",
        "                        <td id=\"T_8a9ee95a_0c9e_11eb_8060_525400567ed2row10_col14\" class=\"data row10 col14\" >0.279448</td>\n",
        "                        <td id=\"T_8a9ee95a_0c9e_11eb_8060_525400567ed2row10_col15\" class=\"data row10 col15\" >0.292070</td>\n",
        "                        <td id=\"T_8a9ee95a_0c9e_11eb_8060_525400567ed2row10_col16\" class=\"data row10 col16\" >0.780390</td>\n",
        "            </tr>\n",
        "            <tr>\n",
        "                        <th id=\"T_8a9ee95a_0c9e_11eb_8060_525400567ed2level0_row11\" class=\"row_heading level0 row11\" >Internal_movement_restrictions</th>\n",
        "                        <td id=\"T_8a9ee95a_0c9e_11eb_8060_525400567ed2row11_col0\" class=\"data row11 col0\" >-0.307340</td>\n",
        "                        <td id=\"T_8a9ee95a_0c9e_11eb_8060_525400567ed2row11_col1\" class=\"data row11 col1\" >0.040765</td>\n",
        "                        <td id=\"T_8a9ee95a_0c9e_11eb_8060_525400567ed2row11_col2\" class=\"data row11 col2\" >0.173238</td>\n",
        "                        <td id=\"T_8a9ee95a_0c9e_11eb_8060_525400567ed2row11_col3\" class=\"data row11 col3\" >0.165343</td>\n",
        "                        <td id=\"T_8a9ee95a_0c9e_11eb_8060_525400567ed2row11_col4\" class=\"data row11 col4\" >0.358798</td>\n",
        "                        <td id=\"T_8a9ee95a_0c9e_11eb_8060_525400567ed2row11_col5\" class=\"data row11 col5\" >0.554939</td>\n",
        "                        <td id=\"T_8a9ee95a_0c9e_11eb_8060_525400567ed2row11_col6\" class=\"data row11 col6\" >0.401145</td>\n",
        "                        <td id=\"T_8a9ee95a_0c9e_11eb_8060_525400567ed2row11_col7\" class=\"data row11 col7\" >0.602209</td>\n",
        "                        <td id=\"T_8a9ee95a_0c9e_11eb_8060_525400567ed2row11_col8\" class=\"data row11 col8\" >0.699200</td>\n",
        "                        <td id=\"T_8a9ee95a_0c9e_11eb_8060_525400567ed2row11_col9\" class=\"data row11 col9\" >0.630655</td>\n",
        "                        <td id=\"T_8a9ee95a_0c9e_11eb_8060_525400567ed2row11_col10\" class=\"data row11 col10\" >0.720142</td>\n",
        "                        <td id=\"T_8a9ee95a_0c9e_11eb_8060_525400567ed2row11_col11\" class=\"data row11 col11\" >1.000000</td>\n",
        "                        <td id=\"T_8a9ee95a_0c9e_11eb_8060_525400567ed2row11_col12\" class=\"data row11 col12\" >0.414356</td>\n",
        "                        <td id=\"T_8a9ee95a_0c9e_11eb_8060_525400567ed2row11_col13\" class=\"data row11 col13\" >0.200160</td>\n",
        "                        <td id=\"T_8a9ee95a_0c9e_11eb_8060_525400567ed2row11_col14\" class=\"data row11 col14\" >0.271452</td>\n",
        "                        <td id=\"T_8a9ee95a_0c9e_11eb_8060_525400567ed2row11_col15\" class=\"data row11 col15\" >0.038632</td>\n",
        "                        <td id=\"T_8a9ee95a_0c9e_11eb_8060_525400567ed2row11_col16\" class=\"data row11 col16\" >0.672544</td>\n",
        "            </tr>\n",
        "            <tr>\n",
        "                        <th id=\"T_8a9ee95a_0c9e_11eb_8060_525400567ed2level0_row12\" class=\"row_heading level0 row12\" >International_movement_restrictions</th>\n",
        "                        <td id=\"T_8a9ee95a_0c9e_11eb_8060_525400567ed2row12_col0\" class=\"data row12 col0\" >-0.082430</td>\n",
        "                        <td id=\"T_8a9ee95a_0c9e_11eb_8060_525400567ed2row12_col1\" class=\"data row12 col1\" >0.050630</td>\n",
        "                        <td id=\"T_8a9ee95a_0c9e_11eb_8060_525400567ed2row12_col2\" class=\"data row12 col2\" >0.143451</td>\n",
        "                        <td id=\"T_8a9ee95a_0c9e_11eb_8060_525400567ed2row12_col3\" class=\"data row12 col3\" >0.131361</td>\n",
        "                        <td id=\"T_8a9ee95a_0c9e_11eb_8060_525400567ed2row12_col4\" class=\"data row12 col4\" >0.180279</td>\n",
        "                        <td id=\"T_8a9ee95a_0c9e_11eb_8060_525400567ed2row12_col5\" class=\"data row12 col5\" >0.498291</td>\n",
        "                        <td id=\"T_8a9ee95a_0c9e_11eb_8060_525400567ed2row12_col6\" class=\"data row12 col6\" >0.435534</td>\n",
        "                        <td id=\"T_8a9ee95a_0c9e_11eb_8060_525400567ed2row12_col7\" class=\"data row12 col7\" >0.710866</td>\n",
        "                        <td id=\"T_8a9ee95a_0c9e_11eb_8060_525400567ed2row12_col8\" class=\"data row12 col8\" >0.607597</td>\n",
        "                        <td id=\"T_8a9ee95a_0c9e_11eb_8060_525400567ed2row12_col9\" class=\"data row12 col9\" >0.613083</td>\n",
        "                        <td id=\"T_8a9ee95a_0c9e_11eb_8060_525400567ed2row12_col10\" class=\"data row12 col10\" >0.507433</td>\n",
        "                        <td id=\"T_8a9ee95a_0c9e_11eb_8060_525400567ed2row12_col11\" class=\"data row12 col11\" >0.414356</td>\n",
        "                        <td id=\"T_8a9ee95a_0c9e_11eb_8060_525400567ed2row12_col12\" class=\"data row12 col12\" >1.000000</td>\n",
        "                        <td id=\"T_8a9ee95a_0c9e_11eb_8060_525400567ed2row12_col13\" class=\"data row12 col13\" >0.449541</td>\n",
        "                        <td id=\"T_8a9ee95a_0c9e_11eb_8060_525400567ed2row12_col14\" class=\"data row12 col14\" >0.117119</td>\n",
        "                        <td id=\"T_8a9ee95a_0c9e_11eb_8060_525400567ed2row12_col15\" class=\"data row12 col15\" >0.185163</td>\n",
        "                        <td id=\"T_8a9ee95a_0c9e_11eb_8060_525400567ed2row12_col16\" class=\"data row12 col16\" >0.719979</td>\n",
        "            </tr>\n",
        "            <tr>\n",
        "                        <th id=\"T_8a9ee95a_0c9e_11eb_8060_525400567ed2level0_row13\" class=\"row_heading level0 row13\" >Information_campaigns</th>\n",
        "                        <td id=\"T_8a9ee95a_0c9e_11eb_8060_525400567ed2row13_col0\" class=\"data row13 col0\" >-0.137226</td>\n",
        "                        <td id=\"T_8a9ee95a_0c9e_11eb_8060_525400567ed2row13_col1\" class=\"data row13 col1\" >-0.288633</td>\n",
        "                        <td id=\"T_8a9ee95a_0c9e_11eb_8060_525400567ed2row13_col2\" class=\"data row13 col2\" >-0.383442</td>\n",
        "                        <td id=\"T_8a9ee95a_0c9e_11eb_8060_525400567ed2row13_col3\" class=\"data row13 col3\" >-0.461881</td>\n",
        "                        <td id=\"T_8a9ee95a_0c9e_11eb_8060_525400567ed2row13_col4\" class=\"data row13 col4\" >-0.010325</td>\n",
        "                        <td id=\"T_8a9ee95a_0c9e_11eb_8060_525400567ed2row13_col5\" class=\"data row13 col5\" >0.646043</td>\n",
        "                        <td id=\"T_8a9ee95a_0c9e_11eb_8060_525400567ed2row13_col6\" class=\"data row13 col6\" >0.804088</td>\n",
        "                        <td id=\"T_8a9ee95a_0c9e_11eb_8060_525400567ed2row13_col7\" class=\"data row13 col7\" >0.633541</td>\n",
        "                        <td id=\"T_8a9ee95a_0c9e_11eb_8060_525400567ed2row13_col8\" class=\"data row13 col8\" >0.565379</td>\n",
        "                        <td id=\"T_8a9ee95a_0c9e_11eb_8060_525400567ed2row13_col9\" class=\"data row13 col9\" >0.356933</td>\n",
        "                        <td id=\"T_8a9ee95a_0c9e_11eb_8060_525400567ed2row13_col10\" class=\"data row13 col10\" >0.385850</td>\n",
        "                        <td id=\"T_8a9ee95a_0c9e_11eb_8060_525400567ed2row13_col11\" class=\"data row13 col11\" >0.200160</td>\n",
        "                        <td id=\"T_8a9ee95a_0c9e_11eb_8060_525400567ed2row13_col12\" class=\"data row13 col12\" >0.449541</td>\n",
        "                        <td id=\"T_8a9ee95a_0c9e_11eb_8060_525400567ed2row13_col13\" class=\"data row13 col13\" >1.000000</td>\n",
        "                        <td id=\"T_8a9ee95a_0c9e_11eb_8060_525400567ed2row13_col14\" class=\"data row13 col14\" >0.549747</td>\n",
        "                        <td id=\"T_8a9ee95a_0c9e_11eb_8060_525400567ed2row13_col15\" class=\"data row13 col15\" >0.566734</td>\n",
        "                        <td id=\"T_8a9ee95a_0c9e_11eb_8060_525400567ed2row13_col16\" class=\"data row13 col16\" >0.726139</td>\n",
        "            </tr>\n",
        "            <tr>\n",
        "                        <th id=\"T_8a9ee95a_0c9e_11eb_8060_525400567ed2level0_row14\" class=\"row_heading level0 row14\" >Testing_policy</th>\n",
        "                        <td id=\"T_8a9ee95a_0c9e_11eb_8060_525400567ed2row14_col0\" class=\"data row14 col0\" >-0.365782</td>\n",
        "                        <td id=\"T_8a9ee95a_0c9e_11eb_8060_525400567ed2row14_col1\" class=\"data row14 col1\" >-0.241917</td>\n",
        "                        <td id=\"T_8a9ee95a_0c9e_11eb_8060_525400567ed2row14_col2\" class=\"data row14 col2\" >-0.249339</td>\n",
        "                        <td id=\"T_8a9ee95a_0c9e_11eb_8060_525400567ed2row14_col3\" class=\"data row14 col3\" >-0.458923</td>\n",
        "                        <td id=\"T_8a9ee95a_0c9e_11eb_8060_525400567ed2row14_col4\" class=\"data row14 col4\" >-0.017797</td>\n",
        "                        <td id=\"T_8a9ee95a_0c9e_11eb_8060_525400567ed2row14_col5\" class=\"data row14 col5\" >0.427935</td>\n",
        "                        <td id=\"T_8a9ee95a_0c9e_11eb_8060_525400567ed2row14_col6\" class=\"data row14 col6\" >0.462388</td>\n",
        "                        <td id=\"T_8a9ee95a_0c9e_11eb_8060_525400567ed2row14_col7\" class=\"data row14 col7\" >0.321481</td>\n",
        "                        <td id=\"T_8a9ee95a_0c9e_11eb_8060_525400567ed2row14_col8\" class=\"data row14 col8\" >0.232122</td>\n",
        "                        <td id=\"T_8a9ee95a_0c9e_11eb_8060_525400567ed2row14_col9\" class=\"data row14 col9\" >-0.003028</td>\n",
        "                        <td id=\"T_8a9ee95a_0c9e_11eb_8060_525400567ed2row14_col10\" class=\"data row14 col10\" >0.279448</td>\n",
        "                        <td id=\"T_8a9ee95a_0c9e_11eb_8060_525400567ed2row14_col11\" class=\"data row14 col11\" >0.271452</td>\n",
        "                        <td id=\"T_8a9ee95a_0c9e_11eb_8060_525400567ed2row14_col12\" class=\"data row14 col12\" >0.117119</td>\n",
        "                        <td id=\"T_8a9ee95a_0c9e_11eb_8060_525400567ed2row14_col13\" class=\"data row14 col13\" >0.549747</td>\n",
        "                        <td id=\"T_8a9ee95a_0c9e_11eb_8060_525400567ed2row14_col14\" class=\"data row14 col14\" >1.000000</td>\n",
        "                        <td id=\"T_8a9ee95a_0c9e_11eb_8060_525400567ed2row14_col15\" class=\"data row14 col15\" >0.596407</td>\n",
        "                        <td id=\"T_8a9ee95a_0c9e_11eb_8060_525400567ed2row14_col16\" class=\"data row14 col16\" >0.290843</td>\n",
        "            </tr>\n",
        "            <tr>\n",
        "                        <th id=\"T_8a9ee95a_0c9e_11eb_8060_525400567ed2level0_row15\" class=\"row_heading level0 row15\" >Contact_tracing</th>\n",
        "                        <td id=\"T_8a9ee95a_0c9e_11eb_8060_525400567ed2row15_col0\" class=\"data row15 col0\" >-0.263106</td>\n",
        "                        <td id=\"T_8a9ee95a_0c9e_11eb_8060_525400567ed2row15_col1\" class=\"data row15 col1\" >0.044290</td>\n",
        "                        <td id=\"T_8a9ee95a_0c9e_11eb_8060_525400567ed2row15_col2\" class=\"data row15 col2\" >-0.065833</td>\n",
        "                        <td id=\"T_8a9ee95a_0c9e_11eb_8060_525400567ed2row15_col3\" class=\"data row15 col3\" >-0.326444</td>\n",
        "                        <td id=\"T_8a9ee95a_0c9e_11eb_8060_525400567ed2row15_col4\" class=\"data row15 col4\" >0.028565</td>\n",
        "                        <td id=\"T_8a9ee95a_0c9e_11eb_8060_525400567ed2row15_col5\" class=\"data row15 col5\" >0.190113</td>\n",
        "                        <td id=\"T_8a9ee95a_0c9e_11eb_8060_525400567ed2row15_col6\" class=\"data row15 col6\" >0.371362</td>\n",
        "                        <td id=\"T_8a9ee95a_0c9e_11eb_8060_525400567ed2row15_col7\" class=\"data row15 col7\" >0.229177</td>\n",
        "                        <td id=\"T_8a9ee95a_0c9e_11eb_8060_525400567ed2row15_col8\" class=\"data row15 col8\" >0.102757</td>\n",
        "                        <td id=\"T_8a9ee95a_0c9e_11eb_8060_525400567ed2row15_col9\" class=\"data row15 col9\" >-0.151453</td>\n",
        "                        <td id=\"T_8a9ee95a_0c9e_11eb_8060_525400567ed2row15_col10\" class=\"data row15 col10\" >0.292070</td>\n",
        "                        <td id=\"T_8a9ee95a_0c9e_11eb_8060_525400567ed2row15_col11\" class=\"data row15 col11\" >0.038632</td>\n",
        "                        <td id=\"T_8a9ee95a_0c9e_11eb_8060_525400567ed2row15_col12\" class=\"data row15 col12\" >0.185163</td>\n",
        "                        <td id=\"T_8a9ee95a_0c9e_11eb_8060_525400567ed2row15_col13\" class=\"data row15 col13\" >0.566734</td>\n",
        "                        <td id=\"T_8a9ee95a_0c9e_11eb_8060_525400567ed2row15_col14\" class=\"data row15 col14\" >0.596407</td>\n",
        "                        <td id=\"T_8a9ee95a_0c9e_11eb_8060_525400567ed2row15_col15\" class=\"data row15 col15\" >1.000000</td>\n",
        "                        <td id=\"T_8a9ee95a_0c9e_11eb_8060_525400567ed2row15_col16\" class=\"data row15 col16\" >0.273205</td>\n",
        "            </tr>\n",
        "            <tr>\n",
        "                        <th id=\"T_8a9ee95a_0c9e_11eb_8060_525400567ed2level0_row16\" class=\"row_heading level0 row16\" >Stringency_index</th>\n",
        "                        <td id=\"T_8a9ee95a_0c9e_11eb_8060_525400567ed2row16_col0\" class=\"data row16 col0\" >-0.182348</td>\n",
        "                        <td id=\"T_8a9ee95a_0c9e_11eb_8060_525400567ed2row16_col1\" class=\"data row16 col1\" >-0.055860</td>\n",
        "                        <td id=\"T_8a9ee95a_0c9e_11eb_8060_525400567ed2row16_col2\" class=\"data row16 col2\" >-0.061480</td>\n",
        "                        <td id=\"T_8a9ee95a_0c9e_11eb_8060_525400567ed2row16_col3\" class=\"data row16 col3\" >-0.055553</td>\n",
        "                        <td id=\"T_8a9ee95a_0c9e_11eb_8060_525400567ed2row16_col4\" class=\"data row16 col4\" >0.276642</td>\n",
        "                        <td id=\"T_8a9ee95a_0c9e_11eb_8060_525400567ed2row16_col5\" class=\"data row16 col5\" >0.831945</td>\n",
        "                        <td id=\"T_8a9ee95a_0c9e_11eb_8060_525400567ed2row16_col6\" class=\"data row16 col6\" >0.815563</td>\n",
        "                        <td id=\"T_8a9ee95a_0c9e_11eb_8060_525400567ed2row16_col7\" class=\"data row16 col7\" >0.833409</td>\n",
        "                        <td id=\"T_8a9ee95a_0c9e_11eb_8060_525400567ed2row16_col8\" class=\"data row16 col8\" >0.871235</td>\n",
        "                        <td id=\"T_8a9ee95a_0c9e_11eb_8060_525400567ed2row16_col9\" class=\"data row16 col9\" >0.780870</td>\n",
        "                        <td id=\"T_8a9ee95a_0c9e_11eb_8060_525400567ed2row16_col10\" class=\"data row16 col10\" >0.780390</td>\n",
        "                        <td id=\"T_8a9ee95a_0c9e_11eb_8060_525400567ed2row16_col11\" class=\"data row16 col11\" >0.672544</td>\n",
        "                        <td id=\"T_8a9ee95a_0c9e_11eb_8060_525400567ed2row16_col12\" class=\"data row16 col12\" >0.719979</td>\n",
        "                        <td id=\"T_8a9ee95a_0c9e_11eb_8060_525400567ed2row16_col13\" class=\"data row16 col13\" >0.726139</td>\n",
        "                        <td id=\"T_8a9ee95a_0c9e_11eb_8060_525400567ed2row16_col14\" class=\"data row16 col14\" >0.290843</td>\n",
        "                        <td id=\"T_8a9ee95a_0c9e_11eb_8060_525400567ed2row16_col15\" class=\"data row16 col15\" >0.273205</td>\n",
        "                        <td id=\"T_8a9ee95a_0c9e_11eb_8060_525400567ed2row16_col16\" class=\"data row16 col16\" >1.000000</td>\n",
        "            </tr>\n",
        "    </tbody></table>"
       ],
       "output_type": "pyout",
       "prompt_number": 21,
       "text": [
        "<pandas.io.formats.style.Styler at 0x7f87fe08f460>"
       ]
      }
     ],
     "prompt_number": 21
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "# Scatter plot of Stringency index and Rt\n",
      "df = track_df.copy()\n",
      "sns.scatterplot(data=df, x=\"Stringency_index\", y=\"Rt\", hue=\"Country\", legend=\"brief\", marker=\"+\")\n",
      "bbox_to_anchor=(1.02, 0)\n",
      "bbox_loc=\"lower left\"\n",
      "plt.legend(bbox_to_anchor=bbox_to_anchor, loc=bbox_loc, borderaxespad=0)\n",
      "plt.title(\"Relationship of Stringency index and reproduction number\")\n",
      "plt.ylabel(\"Reproduction number\")\n",
      "plt.xlabel(\"Stringency index\")\n",
      "plt.show()"
     ],
     "language": "python",
     "metadata": {},
     "outputs": [
      {
       "output_type": "display_data",
       "png": "\n",
       "text": [
        "<Figure size 432x288 with 1 Axes>"
       ]
      }
     ],
     "prompt_number": 22
    }
   ],
   "metadata": {}
  }
 ]
}
