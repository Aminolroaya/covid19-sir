{
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3.8.2 64-bit ('.venv': venv)",
   "name": "python_defaultSpec_1597669925034"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.8.2-final"
  },
  "name": ""
 },
 "nbformat": 3,
 "nbformat_minor": 0,
 "worksheets": [
  {
   "cells": [
    {
     "cell_type": "markdown",
     "metadata": {},
     "source": [
      "# Usage (details: policy measures)\n",
      "Here, we will analyse the relationship of policy measures and parameter values of SIR-derived ODE models. Policy measures are tracked by [Oxford Covid-19 Government Response Tracker (OxCGRT)](https://github.com/OxCGRT/covid-policy-tracker)."
     ]
    },
    {
     "cell_type": "heading",
     "level": 2,
     "metadata": {},
     "source": [
      "Preparation"
     ]
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "# Standard users\n",
      "# !pip install covsirphy\n",
      "# Developers (Note: this notebook is in example directory)\n",
      "import os\n",
      "os.chdir(\"../\")"
     ],
     "language": "python",
     "metadata": {},
     "outputs": [],
     "prompt_number": 1
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "from pprint import pprint"
     ],
     "language": "python",
     "metadata": {},
     "outputs": [],
     "prompt_number": 2
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "import covsirphy as cs\n",
      "cs.__version__"
     ],
     "language": "python",
     "metadata": {},
     "outputs": [
      {
       "output_type": "pyout",
       "prompt_number": 3,
       "text": [
        "'2.8.3'"
       ]
      }
     ],
     "prompt_number": 3
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "# Standard users and developers\n",
      "data_loader = cs.DataLoader(\"input\")\n",
      "# The number of cases (JHU style)\n",
      "jhu_data = data_loader.jhu(verbose=False)\n",
      "# Population in each country\n",
      "population_data = data_loader.population(verbose=False)\n",
      "# Government Response Tracker (OxCGRT)\n",
      "oxcgrt_data = data_loader.oxcgrt(verbose=False)\n",
      "# Description/citation\n",
      "print(oxcgrt_data.citation)"
     ],
     "language": "python",
     "metadata": {
      "tags": []
     },
     "outputs": [
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "(Secondary source) Guidotti, E., Ardia, D., (2020), \"COVID-19 Data Hub\", Journal of Open Source Software 5(51):2376, doi: 10.21105/joss.02376.\n",
        "We can get Citation list of primary sources with DataLoader(...).covid19dh_citation"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      }
     ],
     "prompt_number": 4
    },
    {
     "cell_type": "markdown",
     "metadata": {},
     "source": [
      "## Class for policy measure analysis\n",
      "We will `PolicyMeasures` class to find relationship of policy measures and parameter values of SIR-derived ODE models."
     ]
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "# Create analyser with tau value 360 [min] (can be changed)\n",
      "analyser = cs.PolicyMeasures(jhu_data, population_data, oxcgrt_data, tau=360)\n",
      "# The number of registerd countries\n",
      "len(analyser.countries)"
     ],
     "language": "python",
     "metadata": {
      "tags": []
     },
     "outputs": [
      {
       "output_type": "pyout",
       "prompt_number": 5,
       "text": [
        "184"
       ]
      }
     ],
     "prompt_number": 5
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "# We can get Scenario instance for detailed scenario analysis\n",
      "type(analyser.scenario(\"Japan\"))"
     ],
     "language": "python",
     "metadata": {},
     "outputs": [
      {
       "output_type": "pyout",
       "prompt_number": 6,
       "text": [
        "covsirphy.analysis.scenario.Scenario"
       ]
      }
     ],
     "prompt_number": 6
    },
    {
     "cell_type": "markdown",
     "metadata": {},
     "source": [
      "## Set phases with S-R trend analysis\n",
      "We will perform S-R trend analysis to set phases in all countries. Countries which do not have **12th phases** will be un-registered for the next analysis. This number will be adjusted for your analysis."
     ]
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "# Show the number of phases of all countries\n",
      "analyser.trend()\n",
      "pprint(analyser.phase_len(), compact=True)"
     ],
     "language": "python",
     "metadata": {},
     "outputs": [
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "{"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "4"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ": "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "['Tanzania', 'Fiji', 'Hungary']"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        " "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "5"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ": "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "["
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Antigua and Barbuda'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Brunei'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Belize'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Myanmar'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Dominica'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        "     "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Georgia'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Papua New Guinea'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Seychelles'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Grenada'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Tunisia'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        "     "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Jordan'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Uganda'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "]"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        " "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "6"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ": "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "["
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Slovakia'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Trinidad and Tobago'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Andorra'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Equatorial Guinea'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        "     "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Czech Republic'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Libya'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Ireland'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Montenegro'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Yemen'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Jamaica'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        "     "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Mauritius'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Guyana'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Guinea-Bissau'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "]"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        " "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "7"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ": "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "["
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Namibia'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Gambia'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Spain'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Comoros'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Colombia'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Australia'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        "     "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Saint Vincent and the Grenadines'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'South Sudan'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Kazakhstan'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        "     "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Kyrgyzstan'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Monaco'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'New Zealand'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Cambodia'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Vietnam'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Nepal'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        "     "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'San Marino'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Sao Tome and Principe'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Malawi'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Lesotho'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Rwanda'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        "     "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Central African Republic'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Burundi'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Botswana'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Afghanistan'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        "     "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Netherlands'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Lebanon'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Bahamas'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Paraguay'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "]"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        " "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "8"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ": "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "["
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Slovenia'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Barbados'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Mozambique'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Norway'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Sudan'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Zimbabwe'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        "     "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Madagascar'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Argentina'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Maldives'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Croatia'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Philippines'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Benin'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        "     "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Syria'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Liechtenstein'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Bhutan'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Cyprus'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Chad'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Palestine'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        "     "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Costa Rica'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Niger'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Denmark'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Ethiopia'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Zambia'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Kenya'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Israel'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        "     "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Saint Lucia'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Guatemala'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Greece'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Suriname'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Mongolia'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Iceland'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        "     "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Thailand'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Angola'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Malta'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Nicaragua'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Austria'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Eritrea'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "]"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        " "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "9"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ": "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "["
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Korea, South'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Pakistan'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'South Africa'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Congo'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Taiwan'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Gabon'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        "     "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Sri Lanka'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Venezuela'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Djibouti'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Lithuania'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Morocco'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Serbia'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        "     "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Bermuda'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'India'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Sierra Leone'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Ghana'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Uruguay'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Cameroon'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        "     "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Japan'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Haiti'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'China'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Kosovo'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Finland'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Ecuador'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Qatar'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        "     "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Mauritania'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Ukraine'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Tajikistan'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Luxembourg'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "]"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        " "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "10"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ": "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "["
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Cape Verde'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Indonesia'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Singapore'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Egypt'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Saudi Arabia'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        "      "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Germany'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Burkina Faso'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Cuba'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Switzerland'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        "      "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Bosnia and Herzegovina'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Senegal'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Poland'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Azerbaijan'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Somalia'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        "      "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Mali'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Romania'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'El Salvador'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Swaziland'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Uzbekistan'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Canada'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        "      "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Oman'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Iraq'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Estonia'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Albania'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Chile'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Belarus'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "]"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        " "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "11"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ": "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "["
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Mexico'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Guinea'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Portugal'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Moldova'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Armenia'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Peru'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Togo'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        "      "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Dominican Republic'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Liberia'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Bulgaria'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Macedonia'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Belgium'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        "      "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Algeria'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Kuwait'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Honduras'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Panama'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Bangladesh'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Nigeria'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        "      "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Malaysia'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "]"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        " "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "12"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ": "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "["
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'United Arab Emirates'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Iran'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Italy'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Bolivia'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'United States'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        "      "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Brazil'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Latvia'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'France'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Bahrain'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Turkey'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "]"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        " "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "13"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ": "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "['Russia']"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "}"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      }
     ],
     "prompt_number": 7
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "# Set phases with S-R trend analysis\n",
      "analyser.trend(min_len=12)\n",
      "# The number of countries\n",
      "len(analyser.countries)"
     ],
     "language": "python",
     "metadata": {},
     "outputs": [
      {
       "output_type": "pyout",
       "prompt_number": 8,
       "text": [
        "11"
       ]
      }
     ],
     "prompt_number": 8
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "phase_len_dict = analyser.phase_len()\n",
      "pprint(phase_len_dict, compact=True)"
     ],
     "language": "python",
     "metadata": {
      "tags": []
     },
     "outputs": [
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "{"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "12"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ": "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "["
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'United Arab Emirates'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Iran'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Italy'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Bolivia'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'United States'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        "      "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Brazil'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Latvia'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'France'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Bahrain'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Turkey'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "]"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        " "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "13"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ": "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "['Russia']"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "}"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      }
     ],
     "prompt_number": 9
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "# Here, only show the countries which have the most phases\n",
      "countries_show = max(phase_len_dict.items(), key=lambda x: x[0])[1]\n",
      "# Show summary\n",
      "analyser.summary(countries=countries_show)"
     ],
     "language": "python",
     "metadata": {
      "tags": []
     },
     "outputs": [
      {
       "html": [
        "<div>\n",
        "<style scoped>\n",
        "    .dataframe tbody tr th:only-of-type {\n",
        "        vertical-align: middle;\n",
        "    }\n",
        "\n",
        "    .dataframe tbody tr th {\n",
        "        vertical-align: top;\n",
        "    }\n",
        "\n",
        "    .dataframe thead th {\n",
        "        text-align: right;\n",
        "    }\n",
        "</style>\n",
        "<table border=\"1\" class=\"dataframe\">\n",
        "  <thead>\n",
        "    <tr style=\"text-align: right;\">\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th>Type</th>\n",
        "      <th>Start</th>\n",
        "      <th>End</th>\n",
        "      <th>Population</th>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>Country</th>\n",
        "      <th>Phase</th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "    </tr>\n",
        "  </thead>\n",
        "  <tbody>\n",
        "    <tr>\n",
        "      <th rowspan=\"13\" valign=\"top\">Russia</th>\n",
        "      <th>0th</th>\n",
        "      <td>Past</td>\n",
        "      <td>12Feb2020</td>\n",
        "      <td>06May2020</td>\n",
        "      <td>330457362</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>1st</th>\n",
        "      <td>Past</td>\n",
        "      <td>07May2020</td>\n",
        "      <td>16May2020</td>\n",
        "      <td>330457362</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>2nd</th>\n",
        "      <td>Past</td>\n",
        "      <td>17May2020</td>\n",
        "      <td>27May2020</td>\n",
        "      <td>330457362</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>3rd</th>\n",
        "      <td>Past</td>\n",
        "      <td>28May2020</td>\n",
        "      <td>06Jun2020</td>\n",
        "      <td>330457362</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>4th</th>\n",
        "      <td>Past</td>\n",
        "      <td>07Jun2020</td>\n",
        "      <td>16Jun2020</td>\n",
        "      <td>330457362</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>5th</th>\n",
        "      <td>Past</td>\n",
        "      <td>17Jun2020</td>\n",
        "      <td>27Jun2020</td>\n",
        "      <td>330457362</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>6th</th>\n",
        "      <td>Past</td>\n",
        "      <td>28Jun2020</td>\n",
        "      <td>10Jul2020</td>\n",
        "      <td>330457362</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>7th</th>\n",
        "      <td>Past</td>\n",
        "      <td>11Jul2020</td>\n",
        "      <td>24Jul2020</td>\n",
        "      <td>330457362</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>8th</th>\n",
        "      <td>Past</td>\n",
        "      <td>25Jul2020</td>\n",
        "      <td>07Aug2020</td>\n",
        "      <td>330457362</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>9th</th>\n",
        "      <td>Past</td>\n",
        "      <td>08Aug2020</td>\n",
        "      <td>25Aug2020</td>\n",
        "      <td>330457362</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>10th</th>\n",
        "      <td>Past</td>\n",
        "      <td>26Aug2020</td>\n",
        "      <td>11Sep2020</td>\n",
        "      <td>330457362</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>11th</th>\n",
        "      <td>Past</td>\n",
        "      <td>12Sep2020</td>\n",
        "      <td>26Sep2020</td>\n",
        "      <td>330457362</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>12th</th>\n",
        "      <td>Past</td>\n",
        "      <td>27Sep2020</td>\n",
        "      <td>09Oct2020</td>\n",
        "      <td>330457362</td>\n",
        "    </tr>\n",
        "  </tbody>\n",
        "</table>\n",
        "</div>"
       ],
       "output_type": "pyout",
       "prompt_number": 10,
       "text": [
        "               Type      Start        End  Population\n",
        "Country Phase                                        \n",
        "Russia  0th    Past  12Feb2020  06May2020   330457362\n",
        "        1st    Past  07May2020  16May2020   330457362\n",
        "        2nd    Past  17May2020  27May2020   330457362\n",
        "        3rd    Past  28May2020  06Jun2020   330457362\n",
        "        4th    Past  07Jun2020  16Jun2020   330457362\n",
        "        5th    Past  17Jun2020  27Jun2020   330457362\n",
        "        6th    Past  28Jun2020  10Jul2020   330457362\n",
        "        7th    Past  11Jul2020  24Jul2020   330457362\n",
        "        8th    Past  25Jul2020  07Aug2020   330457362\n",
        "        9th    Past  08Aug2020  25Aug2020   330457362\n",
        "        10th   Past  26Aug2020  11Sep2020   330457362\n",
        "        11th   Past  12Sep2020  26Sep2020   330457362\n",
        "        12th   Past  27Sep2020  09Oct2020   330457362"
       ]
      }
     ],
     "prompt_number": 10
    },
    {
     "cell_type": "markdown",
     "metadata": {},
     "source": [
      "## Parameter estimation\n",
      "we will estimate the parameter values with SIR-derived ODE models in each country."
     ]
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "# Parameter estimation with SIR-F model\n",
      "analyser.estimate(cs.SIRF)"
     ],
     "language": "python",
     "metadata": {
      "tags": []
     },
     "outputs": [
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n",
        "<SIR-F model: parameter estimation>"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "Running optimization with 4 CPUs..."
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tITA, 10th phase (18Sep2020 - 29Sep2020): finished  147 trials in 0 min  5 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tBOL,  8th phase (26Aug2020 - 02Sep2020): finished  298 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tBRA,  2nd phase (15Jun2020 - 26Jun2020): finished  540 trials in 0 min 20 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tUSA,  4th phase (08Jul2020 - 17Jul2020): finished  456 trials in 0 min 15 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tTUR,  4th phase (23May2020 - 12Jun2020): finished 1419 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tIRN,  8th phase (02Aug2020 - 18Aug2020): finished 1406 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tUSA,  0th phase (09Feb2020 - 03May2020): finished 1422 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tFRA,  9th phase (09Sep2020 - 17Sep2020): finished  280 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tTUR,  6th phase (28Jun2020 - 15Jul2020): finished  533 trials in 0 min 20 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tUSA,  5th phase (18Jul2020 - 27Jul2020): finished  391 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tBOL,  9th phase (03Sep2020 - 10Sep2020): finished  568 trials in 0 min 15 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tBHR, 10th phase (16Sep2020 - 25Sep2020): finished 1594 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tITA,  3rd phase (09Apr2020 - 18Apr2020): finished  395 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tUSA,  7th phase (08Aug2020 - 19Aug2020): finished  569 trials in 0 min 15 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tUSA, 10th phase (17Sep2020 - 27Sep2020): finished  724 trials in 0 min 20 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tLVA,  8th phase (07Aug2020 - 28Aug2020): finished 1820 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tUSA,  6th phase (28Jul2020 - 07Aug2020): finished  429 trials in 0 min 15 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tITA,  2nd phase (29Mar2020 - 08Apr2020): finished 1489 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tLVA,  3rd phase (30Apr2020 - 07May2020): finished 1620 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tBHR,  2nd phase (02Jun2020 - 13Jun2020): finished 1336 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tBOL,  5th phase (24Jul2020 - 31Jul2020): finished  580 trials in 0 min 20 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tITA,  6th phase (12May2020 - 27May2020): finished  372 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tBHR,  7th phase (06Aug2020 - 21Aug2020): finished 1313 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tITA, 11th phase (30Sep2020 - 09Oct2020): finished  150 trials in 0 min  5 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tFRA,  8th phase (26Aug2020 - 08Sep2020): finished  590 trials in 0 min 25 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tBRA,  1st phase (28May2020 - 14Jun2020): finished 1312 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tARE,  1st phase (29Apr2020 - 14May2020): finished 1366 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tRUS,  4th phase (07Jun2020 - 16Jun2020): finished 1400 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tFRA,  1st phase (25Mar2020 - 04Apr2020): finished 1391 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tARE,  5th phase (21Jun2020 - 04Jul2020): finished  307 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tBHR, 11th phase (26Sep2020 - 09Oct2020): finished  286 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tARE,  2nd phase (15May2020 - 24May2020): finished 1372 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tITA,  0th phase (24Feb2020 - 20Mar2020): finished 1313 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tIRN,  1st phase (30Mar2020 - 18Apr2020): finished 1397 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tTUR, 10th phase (07Sep2020 - 21Sep2020): finished  195 trials in 0 min  5 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tTUR,  1st phase (17Apr2020 - 29Apr2020): finished 1534 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tITA,  9th phase (29Aug2020 - 17Sep2020): finished  202 trials in 0 min  5 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tFRA,  5th phase (29May2020 - 08Jul2020): finished 1593 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tFRA,  2nd phase (05Apr2020 - 20Apr2020): finished 1611 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tIRN,  2nd phase (19Apr2020 - 14May2020): finished  525 trials in 0 min 15 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tARE,  6th phase (05Jul2020 - 22Jul2020): finished  200 trials in 0 min  5 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tTUR,  8th phase (05Aug2020 - 22Aug2020): finished  381 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tLVA,  5th phase (16May2020 - 30May2020): finished 1710 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tRUS, 12th phase (27Sep2020 - 09Oct2020): finished 1697 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tTUR,  0th phase (24Mar2020 - 16Apr2020): finished 1688 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tBRA,  7th phase (11Aug2020 - 19Aug2020): finished 1702 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tLVA, 10th phase (11Sep2020 - 24Sep2020): finished  969 trials in 0 min 25 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tBRA,  3rd phase (27Jun2020 - 08Jul2020): finished 1699 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tBRA, 11th phase (24Sep2020 - 09Oct2020): finished  208 trials in 0 min  5 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tIRN,  9th phase (19Aug2020 - 08Sep2020): finished  205 trials in 0 min  5 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tIRN,  3rd phase (15May2020 - 31May2020): finished  188 trials in 0 min  5 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tBRA,  6th phase (31Jul2020 - 10Aug2020): finished  996 trials in 0 min 30 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tBOL,  3rd phase (06Jul2020 - 15Jul2020): finished 1697 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tBOL, 10th phase (11Sep2020 - 21Sep2020): finished  385 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tIRN,  5th phase (17Jun2020 - 02Jul2020): finished 1699 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tTUR,  5th phase (13Jun2020 - 27Jun2020): finished 1703 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tRUS,  5th phase (17Jun2020 - 27Jun2020): finished 1681 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tBHR,  1st phase (06May2020 - 01Jun2020): finished 1671 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tLVA,  7th phase (09Jul2020 - 06Aug2020): finished 1916 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tIRN,  6th phase (03Jul2020 - 18Jul2020): finished  204 trials in 0 min  5 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tBHR,  8th phase (22Aug2020 - 05Sep2020): finished 1697 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tITA,  7th phase (28May2020 - 22Jul2020): finished 1217 trials in 0 min 45 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tARE,  9th phase (10Sep2020 - 21Sep2020): finished 1515 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tIRN, 11th phase (25Sep2020 - 09Oct2020): finished  235 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tBOL,  4th phase (16Jul2020 - 23Jul2020): finished  223 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tUSA,  9th phase (03Sep2020 - 16Sep2020): finished  909 trials in 0 min 45 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tLVA,  9th phase (29Aug2020 - 10Sep2020): finished 1175 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tFRA,  7th phase (06Aug2020 - 25Aug2020): finished  804 trials in 0 min 40 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tBRA, 10th phase (11Sep2020 - 23Sep2020): finished  119 trials in 0 min  5 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tBRA,  0th phase (16Mar2020 - 27May2020): finished 1041 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tBOL,  0th phase (01Apr2020 - 13Jun2020): finished 1122 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tBRA,  8th phase (20Aug2020 - 29Aug2020): finished 1194 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tIRN,  7th phase (19Jul2020 - 01Aug2020): finished  392 trials in 0 min 15 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tUSA,  8th phase (20Aug2020 - 02Sep2020): finished  165 trials in 0 min  5 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tFRA, 10th phase (18Sep2020 - 30Sep2020): finished 1107 trials in 0 min 50 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tARE,  8th phase (22Aug2020 - 09Sep2020): finished 1272 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tBHR,  5th phase (07Jul2020 - 18Jul2020): finished 1206 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tUSA,  1st phase (04May2020 - 03Jun2020): finished 1206 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tRUS,  2nd phase (17May2020 - 27May2020): finished 1204 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tBOL,  6th phase (01Aug2020 - 10Aug2020): finished  217 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tITA,  1st phase (21Mar2020 - 28Mar2020): finished 1152 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tBOL, 11th phase (22Sep2020 - 09Oct2020): finished  126 trials in 0 min  5 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tTUR,  9th phase (23Aug2020 - 06Sep2020): finished  356 trials in 0 min 15 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tTUR,  3rd phase (09May2020 - 22May2020): finished 1135 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tRUS,  6th phase (28Jun2020 - 10Jul2020): finished 1093 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tRUS,  3rd phase (28May2020 - 06Jun2020): finished 1110 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tFRA,  4th phase (05May2020 - 28May2020): finished 1081 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tBHR,  9th phase (06Sep2020 - 15Sep2020): finished 1100 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tLVA,  6th phase (31May2020 - 08Jul2020): finished 1061 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tIRN,  4th phase (01Jun2020 - 16Jun2020): finished 1048 trials in 1 min  1 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tUSA,  2nd phase (04Jun2020 - 24Jun2020): finished 1095 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tARE,  7th phase (23Jul2020 - 21Aug2020): finished 1104 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tARE,  4th phase (06Jun2020 - 20Jun2020): finished  981 trials in 0 min 50 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tARE, 10th phase (22Sep2020 - 30Sep2020): finished 1154 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tTUR,  7th phase (16Jul2020 - 04Aug2020): finished  149 trials in 0 min  5 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tRUS,  7th phase (11Jul2020 - 24Jul2020): finished 1202 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tRUS,  0th phase (12Feb2020 - 06May2020): finished 1204 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tFRA,  3rd phase (21Apr2020 - 04May2020): finished 1176 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tBOL,  1st phase (14Jun2020 - 25Jun2020): finished 1202 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tIRN, 10th phase (09Sep2020 - 24Sep2020): finished  138 trials in 0 min  5 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tLVA,  2nd phase (19Apr2020 - 29Apr2020): finished 1218 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tFRA,  6th phase (09Jul2020 - 05Aug2020): finished 1197 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tUSA, 11th phase (28Sep2020 - 09Oct2020): finished 1226 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tRUS,  9th phase (08Aug2020 - 25Aug2020): finished 1253 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tBRA,  5th phase (21Jul2020 - 30Jul2020): finished 1268 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tUSA,  3rd phase (25Jun2020 - 07Jul2020): finished 1273 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tARE, 11th phase (01Oct2020 - 09Oct2020): finished 1259 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tITA,  4th phase (19Apr2020 - 30Apr2020): finished  130 trials in 0 min  5 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tRUS,  1st phase (07May2020 - 16May2020): finished 1246 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tITA,  8th phase (23Jul2020 - 28Aug2020): finished 1262 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tBHR,  4th phase (26Jun2020 - 06Jul2020): finished 1285 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tBRA,  4th phase (09Jul2020 - 20Jul2020): finished  394 trials in 0 min 15 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tIRN,  0th phase (26Feb2020 - 29Mar2020): finished 1261 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tARE,  3rd phase (25May2020 - 05Jun2020): finished 1264 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tTUR,  2nd phase (30Apr2020 - 08May2020): finished 1110 trials in 0 min 55 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tBOL,  7th phase (11Aug2020 - 25Aug2020): finished 1204 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tRUS, 10th phase (26Aug2020 - 11Sep2020): finished 1213 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tFRA,  0th phase (12Feb2020 - 24Mar2020): finished 1069 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tITA,  5th phase (01May2020 - 11May2020): finished  448 trials in 0 min 15 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tRUS, 11th phase (12Sep2020 - 26Sep2020): finished 1349 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tBHR,  6th phase (19Jul2020 - 05Aug2020): finished  297 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tRUS,  8th phase (25Jul2020 - 07Aug2020): finished 1370 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tLVA,  1st phase (08Apr2020 - 18Apr2020): finished 1555 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tARE,  0th phase (12Feb2020 - 28Apr2020): finished 1594 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tBRA,  9th phase (30Aug2020 - 10Sep2020): finished 1692 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tBHR,  0th phase (06Mar2020 - 05May2020): finished 1670 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tBOL,  2nd phase (26Jun2020 - 05Jul2020): finished  397 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tLVA,  4th phase (08May2020 - 15May2020): finished 1794 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tLVA,  0th phase (10Mar2020 - 07Apr2020): finished 2066 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "Completed optimization. Total: 25 min 44 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      }
     ],
     "prompt_number": 11
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "# Show summary\n",
      "analyser.summary(countries=countries_show)"
     ],
     "language": "python",
     "metadata": {},
     "outputs": [
      {
       "html": [
        "<div>\n",
        "<style scoped>\n",
        "    .dataframe tbody tr th:only-of-type {\n",
        "        vertical-align: middle;\n",
        "    }\n",
        "\n",
        "    .dataframe tbody tr th {\n",
        "        vertical-align: top;\n",
        "    }\n",
        "\n",
        "    .dataframe thead th {\n",
        "        text-align: right;\n",
        "    }\n",
        "</style>\n",
        "<table border=\"1\" class=\"dataframe\">\n",
        "  <thead>\n",
        "    <tr style=\"text-align: right;\">\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th>Type</th>\n",
        "      <th>Start</th>\n",
        "      <th>End</th>\n",
        "      <th>Population</th>\n",
        "      <th>ODE</th>\n",
        "      <th>Rt</th>\n",
        "      <th>theta</th>\n",
        "      <th>kappa</th>\n",
        "      <th>rho</th>\n",
        "      <th>sigma</th>\n",
        "      <th>tau</th>\n",
        "      <th>1/gamma [day]</th>\n",
        "      <th>1/beta [day]</th>\n",
        "      <th>1/alpha2 [day]</th>\n",
        "      <th>alpha1 [-]</th>\n",
        "      <th>RMSLE</th>\n",
        "      <th>Trials</th>\n",
        "      <th>Runtime</th>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>Country</th>\n",
        "      <th>Phase</th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "    </tr>\n",
        "  </thead>\n",
        "  <tbody>\n",
        "    <tr>\n",
        "      <th rowspan=\"13\" valign=\"top\">Russia</th>\n",
        "      <th>0th</th>\n",
        "      <td>Past</td>\n",
        "      <td>12Feb2020</td>\n",
        "      <td>06May2020</td>\n",
        "      <td>330457362</td>\n",
        "      <td>SIR-F</td>\n",
        "      <td>0.02</td>\n",
        "      <td>0.602763</td>\n",
        "      <td>0.544883</td>\n",
        "      <td>0.034081</td>\n",
        "      <td>0.002299</td>\n",
        "      <td>360</td>\n",
        "      <td>108</td>\n",
        "      <td>7</td>\n",
        "      <td>0</td>\n",
        "      <td>0.603</td>\n",
        "      <td>18.966727</td>\n",
        "      <td>1204</td>\n",
        "      <td>1 min  0 sec</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>1st</th>\n",
        "      <td>Past</td>\n",
        "      <td>07May2020</td>\n",
        "      <td>16May2020</td>\n",
        "      <td>330457362</td>\n",
        "      <td>SIR-F</td>\n",
        "      <td>2.51</td>\n",
        "      <td>0.000729</td>\n",
        "      <td>0.000120</td>\n",
        "      <td>0.012958</td>\n",
        "      <td>0.005045</td>\n",
        "      <td>360</td>\n",
        "      <td>49</td>\n",
        "      <td>19</td>\n",
        "      <td>2088</td>\n",
        "      <td>0.001</td>\n",
        "      <td>0.074230</td>\n",
        "      <td>1246</td>\n",
        "      <td>1 min  0 sec</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>2nd</th>\n",
        "      <td>Past</td>\n",
        "      <td>17May2020</td>\n",
        "      <td>27May2020</td>\n",
        "      <td>330457362</td>\n",
        "      <td>SIR-F</td>\n",
        "      <td>1.15</td>\n",
        "      <td>0.000245</td>\n",
        "      <td>0.000113</td>\n",
        "      <td>0.006831</td>\n",
        "      <td>0.005828</td>\n",
        "      <td>360</td>\n",
        "      <td>42</td>\n",
        "      <td>36</td>\n",
        "      <td>2207</td>\n",
        "      <td>0.000</td>\n",
        "      <td>0.108726</td>\n",
        "      <td>1204</td>\n",
        "      <td>1 min  0 sec</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>3rd</th>\n",
        "      <td>Past</td>\n",
        "      <td>28May2020</td>\n",
        "      <td>06Jun2020</td>\n",
        "      <td>330457362</td>\n",
        "      <td>SIR-F</td>\n",
        "      <td>1.10</td>\n",
        "      <td>0.000358</td>\n",
        "      <td>0.000113</td>\n",
        "      <td>0.005270</td>\n",
        "      <td>0.004694</td>\n",
        "      <td>360</td>\n",
        "      <td>53</td>\n",
        "      <td>47</td>\n",
        "      <td>2207</td>\n",
        "      <td>0.000</td>\n",
        "      <td>0.073532</td>\n",
        "      <td>1110</td>\n",
        "      <td>1 min  0 sec</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>4th</th>\n",
        "      <td>Past</td>\n",
        "      <td>07Jun2020</td>\n",
        "      <td>16Jun2020</td>\n",
        "      <td>330457362</td>\n",
        "      <td>SIR-F</td>\n",
        "      <td>1.21</td>\n",
        "      <td>0.000829</td>\n",
        "      <td>0.000085</td>\n",
        "      <td>0.004244</td>\n",
        "      <td>0.003406</td>\n",
        "      <td>360</td>\n",
        "      <td>73</td>\n",
        "      <td>58</td>\n",
        "      <td>2957</td>\n",
        "      <td>0.001</td>\n",
        "      <td>0.056625</td>\n",
        "      <td>1400</td>\n",
        "      <td>1 min  0 sec</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>5th</th>\n",
        "      <td>Past</td>\n",
        "      <td>17Jun2020</td>\n",
        "      <td>27Jun2020</td>\n",
        "      <td>330457362</td>\n",
        "      <td>SIR-F</td>\n",
        "      <td>0.80</td>\n",
        "      <td>0.000222</td>\n",
        "      <td>0.000064</td>\n",
        "      <td>0.003279</td>\n",
        "      <td>0.004046</td>\n",
        "      <td>360</td>\n",
        "      <td>61</td>\n",
        "      <td>76</td>\n",
        "      <td>3932</td>\n",
        "      <td>0.000</td>\n",
        "      <td>0.070096</td>\n",
        "      <td>1681</td>\n",
        "      <td>1 min  0 sec</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>6th</th>\n",
        "      <td>Past</td>\n",
        "      <td>28Jun2020</td>\n",
        "      <td>10Jul2020</td>\n",
        "      <td>330457362</td>\n",
        "      <td>SIR-F</td>\n",
        "      <td>0.94</td>\n",
        "      <td>0.001636</td>\n",
        "      <td>0.000069</td>\n",
        "      <td>0.002482</td>\n",
        "      <td>0.002564</td>\n",
        "      <td>360</td>\n",
        "      <td>97</td>\n",
        "      <td>100</td>\n",
        "      <td>3612</td>\n",
        "      <td>0.002</td>\n",
        "      <td>0.061708</td>\n",
        "      <td>1093</td>\n",
        "      <td>1 min  0 sec</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>7th</th>\n",
        "      <td>Past</td>\n",
        "      <td>11Jul2020</td>\n",
        "      <td>24Jul2020</td>\n",
        "      <td>330457362</td>\n",
        "      <td>SIR-F</td>\n",
        "      <td>0.85</td>\n",
        "      <td>0.000914</td>\n",
        "      <td>0.000021</td>\n",
        "      <td>0.001965</td>\n",
        "      <td>0.002290</td>\n",
        "      <td>360</td>\n",
        "      <td>109</td>\n",
        "      <td>127</td>\n",
        "      <td>11746</td>\n",
        "      <td>0.001</td>\n",
        "      <td>0.071869</td>\n",
        "      <td>1202</td>\n",
        "      <td>1 min  0 sec</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>8th</th>\n",
        "      <td>Past</td>\n",
        "      <td>25Jul2020</td>\n",
        "      <td>07Aug2020</td>\n",
        "      <td>330457362</td>\n",
        "      <td>SIR-F</td>\n",
        "      <td>0.78</td>\n",
        "      <td>0.020568</td>\n",
        "      <td>0.000004</td>\n",
        "      <td>0.001600</td>\n",
        "      <td>0.002013</td>\n",
        "      <td>360</td>\n",
        "      <td>124</td>\n",
        "      <td>156</td>\n",
        "      <td>68346</td>\n",
        "      <td>0.021</td>\n",
        "      <td>0.052216</td>\n",
        "      <td>1370</td>\n",
        "      <td>1 min  0 sec</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>9th</th>\n",
        "      <td>Past</td>\n",
        "      <td>08Aug2020</td>\n",
        "      <td>25Aug2020</td>\n",
        "      <td>330457362</td>\n",
        "      <td>SIR-F</td>\n",
        "      <td>0.82</td>\n",
        "      <td>0.020274</td>\n",
        "      <td>0.000002</td>\n",
        "      <td>0.001313</td>\n",
        "      <td>0.001564</td>\n",
        "      <td>360</td>\n",
        "      <td>159</td>\n",
        "      <td>190</td>\n",
        "      <td>132403</td>\n",
        "      <td>0.020</td>\n",
        "      <td>0.060466</td>\n",
        "      <td>1253</td>\n",
        "      <td>1 min  0 sec</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>10th</th>\n",
        "      <td>Past</td>\n",
        "      <td>26Aug2020</td>\n",
        "      <td>11Sep2020</td>\n",
        "      <td>330457362</td>\n",
        "      <td>SIR-F</td>\n",
        "      <td>0.89</td>\n",
        "      <td>0.000892</td>\n",
        "      <td>0.000021</td>\n",
        "      <td>0.001249</td>\n",
        "      <td>0.001387</td>\n",
        "      <td>360</td>\n",
        "      <td>180</td>\n",
        "      <td>200</td>\n",
        "      <td>11760</td>\n",
        "      <td>0.001</td>\n",
        "      <td>0.048160</td>\n",
        "      <td>1213</td>\n",
        "      <td>1 min  0 sec</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>11th</th>\n",
        "      <td>Past</td>\n",
        "      <td>12Sep2020</td>\n",
        "      <td>26Sep2020</td>\n",
        "      <td>330457362</td>\n",
        "      <td>SIR-F</td>\n",
        "      <td>1.02</td>\n",
        "      <td>0.023654</td>\n",
        "      <td>0.000002</td>\n",
        "      <td>0.001334</td>\n",
        "      <td>0.001274</td>\n",
        "      <td>360</td>\n",
        "      <td>196</td>\n",
        "      <td>187</td>\n",
        "      <td>103403</td>\n",
        "      <td>0.024</td>\n",
        "      <td>0.038707</td>\n",
        "      <td>1349</td>\n",
        "      <td>1 min  0 sec</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>12th</th>\n",
        "      <td>Past</td>\n",
        "      <td>27Sep2020</td>\n",
        "      <td>09Oct2020</td>\n",
        "      <td>330457362</td>\n",
        "      <td>SIR-F</td>\n",
        "      <td>1.98</td>\n",
        "      <td>0.002496</td>\n",
        "      <td>0.000024</td>\n",
        "      <td>0.002017</td>\n",
        "      <td>0.000990</td>\n",
        "      <td>360</td>\n",
        "      <td>252</td>\n",
        "      <td>123</td>\n",
        "      <td>10518</td>\n",
        "      <td>0.002</td>\n",
        "      <td>0.018029</td>\n",
        "      <td>1697</td>\n",
        "      <td>1 min  0 sec</td>\n",
        "    </tr>\n",
        "  </tbody>\n",
        "</table>\n",
        "</div>"
       ],
       "output_type": "pyout",
       "prompt_number": 12,
       "text": [
        "               Type      Start        End  Population    ODE    Rt     theta  \\\n",
        "Country Phase                                                                  \n",
        "Russia  0th    Past  12Feb2020  06May2020   330457362  SIR-F  0.02  0.602763   \n",
        "        1st    Past  07May2020  16May2020   330457362  SIR-F  2.51  0.000729   \n",
        "        2nd    Past  17May2020  27May2020   330457362  SIR-F  1.15  0.000245   \n",
        "        3rd    Past  28May2020  06Jun2020   330457362  SIR-F  1.10  0.000358   \n",
        "        4th    Past  07Jun2020  16Jun2020   330457362  SIR-F  1.21  0.000829   \n",
        "        5th    Past  17Jun2020  27Jun2020   330457362  SIR-F  0.80  0.000222   \n",
        "        6th    Past  28Jun2020  10Jul2020   330457362  SIR-F  0.94  0.001636   \n",
        "        7th    Past  11Jul2020  24Jul2020   330457362  SIR-F  0.85  0.000914   \n",
        "        8th    Past  25Jul2020  07Aug2020   330457362  SIR-F  0.78  0.020568   \n",
        "        9th    Past  08Aug2020  25Aug2020   330457362  SIR-F  0.82  0.020274   \n",
        "        10th   Past  26Aug2020  11Sep2020   330457362  SIR-F  0.89  0.000892   \n",
        "        11th   Past  12Sep2020  26Sep2020   330457362  SIR-F  1.02  0.023654   \n",
        "        12th   Past  27Sep2020  09Oct2020   330457362  SIR-F  1.98  0.002496   \n",
        "\n",
        "                  kappa       rho     sigma  tau  1/gamma [day]  1/beta [day]  \\\n",
        "Country Phase                                                                   \n",
        "Russia  0th    0.544883  0.034081  0.002299  360            108             7   \n",
        "        1st    0.000120  0.012958  0.005045  360             49            19   \n",
        "        2nd    0.000113  0.006831  0.005828  360             42            36   \n",
        "        3rd    0.000113  0.005270  0.004694  360             53            47   \n",
        "        4th    0.000085  0.004244  0.003406  360             73            58   \n",
        "        5th    0.000064  0.003279  0.004046  360             61            76   \n",
        "        6th    0.000069  0.002482  0.002564  360             97           100   \n",
        "        7th    0.000021  0.001965  0.002290  360            109           127   \n",
        "        8th    0.000004  0.001600  0.002013  360            124           156   \n",
        "        9th    0.000002  0.001313  0.001564  360            159           190   \n",
        "        10th   0.000021  0.001249  0.001387  360            180           200   \n",
        "        11th   0.000002  0.001334  0.001274  360            196           187   \n",
        "        12th   0.000024  0.002017  0.000990  360            252           123   \n",
        "\n",
        "               1/alpha2 [day]  alpha1 [-]      RMSLE  Trials       Runtime  \n",
        "Country Phase                                                               \n",
        "Russia  0th                 0       0.603  18.966727    1204  1 min  0 sec  \n",
        "        1st              2088       0.001   0.074230    1246  1 min  0 sec  \n",
        "        2nd              2207       0.000   0.108726    1204  1 min  0 sec  \n",
        "        3rd              2207       0.000   0.073532    1110  1 min  0 sec  \n",
        "        4th              2957       0.001   0.056625    1400  1 min  0 sec  \n",
        "        5th              3932       0.000   0.070096    1681  1 min  0 sec  \n",
        "        6th              3612       0.002   0.061708    1093  1 min  0 sec  \n",
        "        7th             11746       0.001   0.071869    1202  1 min  0 sec  \n",
        "        8th             68346       0.021   0.052216    1370  1 min  0 sec  \n",
        "        9th            132403       0.020   0.060466    1253  1 min  0 sec  \n",
        "        10th            11760       0.001   0.048160    1213  1 min  0 sec  \n",
        "        11th           103403       0.024   0.038707    1349  1 min  0 sec  \n",
        "        12th            10518       0.002   0.018029    1697  1 min  0 sec  "
       ]
      }
     ],
     "prompt_number": 12
    },
    {
     "cell_type": "markdown",
     "metadata": {},
     "source": [
      "## Compare the history of parameters\n",
      "Here, compare the history of parameter values if countries."
     ]
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "# All parameter/day parameter/Rt/OxCGRT\n",
      "analyser.track().head()"
     ],
     "language": "python",
     "metadata": {},
     "outputs": [
      {
       "html": [
        "<div>\n",
        "<style scoped>\n",
        "    .dataframe tbody tr th:only-of-type {\n",
        "        vertical-align: middle;\n",
        "    }\n",
        "\n",
        "    .dataframe tbody tr th {\n",
        "        vertical-align: top;\n",
        "    }\n",
        "\n",
        "    .dataframe thead th {\n",
        "        text-align: right;\n",
        "    }\n",
        "</style>\n",
        "<table border=\"1\" class=\"dataframe\">\n",
        "  <thead>\n",
        "    <tr style=\"text-align: right;\">\n",
        "      <th></th>\n",
        "      <th>Date</th>\n",
        "      <th>Country</th>\n",
        "      <th>theta</th>\n",
        "      <th>kappa</th>\n",
        "      <th>rho</th>\n",
        "      <th>sigma</th>\n",
        "      <th>alpha1 [-]</th>\n",
        "      <th>1/alpha2 [day]</th>\n",
        "      <th>1/beta [day]</th>\n",
        "      <th>1/gamma [day]</th>\n",
        "      <th>...</th>\n",
        "      <th>Cancel_events</th>\n",
        "      <th>Gatherings_restrictions</th>\n",
        "      <th>Transport_closing</th>\n",
        "      <th>Stay_home_restrictions</th>\n",
        "      <th>Internal_movement_restrictions</th>\n",
        "      <th>International_movement_restrictions</th>\n",
        "      <th>Information_campaigns</th>\n",
        "      <th>Testing_policy</th>\n",
        "      <th>Contact_tracing</th>\n",
        "      <th>Stringency_index</th>\n",
        "    </tr>\n",
        "  </thead>\n",
        "  <tbody>\n",
        "    <tr>\n",
        "      <th>0</th>\n",
        "      <td>2020-02-12</td>\n",
        "      <td>United Arab Emirates</td>\n",
        "      <td>0.644684</td>\n",
        "      <td>0.000385394</td>\n",
        "      <td>0.000425041</td>\n",
        "      <td>0.00401893</td>\n",
        "      <td>0.645</td>\n",
        "      <td>648</td>\n",
        "      <td>588</td>\n",
        "      <td>62</td>\n",
        "      <td>...</td>\n",
        "      <td>0</td>\n",
        "      <td>0</td>\n",
        "      <td>0</td>\n",
        "      <td>0</td>\n",
        "      <td>0</td>\n",
        "      <td>1</td>\n",
        "      <td>0</td>\n",
        "      <td>0</td>\n",
        "      <td>2</td>\n",
        "      <td>2.78</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>1</th>\n",
        "      <td>2020-02-13</td>\n",
        "      <td>United Arab Emirates</td>\n",
        "      <td>0.644684</td>\n",
        "      <td>0.000385394</td>\n",
        "      <td>0.000425041</td>\n",
        "      <td>0.00401893</td>\n",
        "      <td>0.645</td>\n",
        "      <td>648</td>\n",
        "      <td>588</td>\n",
        "      <td>62</td>\n",
        "      <td>...</td>\n",
        "      <td>0</td>\n",
        "      <td>0</td>\n",
        "      <td>0</td>\n",
        "      <td>0</td>\n",
        "      <td>0</td>\n",
        "      <td>1</td>\n",
        "      <td>0</td>\n",
        "      <td>0</td>\n",
        "      <td>2</td>\n",
        "      <td>2.78</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>2</th>\n",
        "      <td>2020-02-14</td>\n",
        "      <td>United Arab Emirates</td>\n",
        "      <td>0.644684</td>\n",
        "      <td>0.000385394</td>\n",
        "      <td>0.000425041</td>\n",
        "      <td>0.00401893</td>\n",
        "      <td>0.645</td>\n",
        "      <td>648</td>\n",
        "      <td>588</td>\n",
        "      <td>62</td>\n",
        "      <td>...</td>\n",
        "      <td>0</td>\n",
        "      <td>0</td>\n",
        "      <td>0</td>\n",
        "      <td>0</td>\n",
        "      <td>0</td>\n",
        "      <td>1</td>\n",
        "      <td>0</td>\n",
        "      <td>0</td>\n",
        "      <td>2</td>\n",
        "      <td>2.78</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>3</th>\n",
        "      <td>2020-02-15</td>\n",
        "      <td>United Arab Emirates</td>\n",
        "      <td>0.644684</td>\n",
        "      <td>0.000385394</td>\n",
        "      <td>0.000425041</td>\n",
        "      <td>0.00401893</td>\n",
        "      <td>0.645</td>\n",
        "      <td>648</td>\n",
        "      <td>588</td>\n",
        "      <td>62</td>\n",
        "      <td>...</td>\n",
        "      <td>0</td>\n",
        "      <td>0</td>\n",
        "      <td>0</td>\n",
        "      <td>0</td>\n",
        "      <td>0</td>\n",
        "      <td>1</td>\n",
        "      <td>0</td>\n",
        "      <td>0</td>\n",
        "      <td>2</td>\n",
        "      <td>2.78</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>4</th>\n",
        "      <td>2020-02-16</td>\n",
        "      <td>United Arab Emirates</td>\n",
        "      <td>0.644684</td>\n",
        "      <td>0.000385394</td>\n",
        "      <td>0.000425041</td>\n",
        "      <td>0.00401893</td>\n",
        "      <td>0.645</td>\n",
        "      <td>648</td>\n",
        "      <td>588</td>\n",
        "      <td>62</td>\n",
        "      <td>...</td>\n",
        "      <td>0</td>\n",
        "      <td>0</td>\n",
        "      <td>0</td>\n",
        "      <td>0</td>\n",
        "      <td>0</td>\n",
        "      <td>1</td>\n",
        "      <td>0</td>\n",
        "      <td>0</td>\n",
        "      <td>2</td>\n",
        "      <td>2.78</td>\n",
        "    </tr>\n",
        "  </tbody>\n",
        "</table>\n",
        "<p>5 rows \u00d7 23 columns</p>\n",
        "</div>"
       ],
       "output_type": "pyout",
       "prompt_number": 13,
       "text": [
        "        Date               Country     theta        kappa          rho  \\\n",
        "0 2020-02-12  United Arab Emirates  0.644684  0.000385394  0.000425041   \n",
        "1 2020-02-13  United Arab Emirates  0.644684  0.000385394  0.000425041   \n",
        "2 2020-02-14  United Arab Emirates  0.644684  0.000385394  0.000425041   \n",
        "3 2020-02-15  United Arab Emirates  0.644684  0.000385394  0.000425041   \n",
        "4 2020-02-16  United Arab Emirates  0.644684  0.000385394  0.000425041   \n",
        "\n",
        "        sigma alpha1 [-] 1/alpha2 [day] 1/beta [day] 1/gamma [day]  ...  \\\n",
        "0  0.00401893      0.645            648          588            62  ...   \n",
        "1  0.00401893      0.645            648          588            62  ...   \n",
        "2  0.00401893      0.645            648          588            62  ...   \n",
        "3  0.00401893      0.645            648          588            62  ...   \n",
        "4  0.00401893      0.645            648          588            62  ...   \n",
        "\n",
        "  Cancel_events  Gatherings_restrictions  Transport_closing  \\\n",
        "0             0                        0                  0   \n",
        "1             0                        0                  0   \n",
        "2             0                        0                  0   \n",
        "3             0                        0                  0   \n",
        "4             0                        0                  0   \n",
        "\n",
        "   Stay_home_restrictions  Internal_movement_restrictions  \\\n",
        "0                       0                               0   \n",
        "1                       0                               0   \n",
        "2                       0                               0   \n",
        "3                       0                               0   \n",
        "4                       0                               0   \n",
        "\n",
        "   International_movement_restrictions  Information_campaigns  Testing_policy  \\\n",
        "0                                    1                      0               0   \n",
        "1                                    1                      0               0   \n",
        "2                                    1                      0               0   \n",
        "3                                    1                      0               0   \n",
        "4                                    1                      0               0   \n",
        "\n",
        "   Contact_tracing  Stringency_index  \n",
        "0                2              2.78  \n",
        "1                2              2.78  \n",
        "2                2              2.78  \n",
        "3                2              2.78  \n",
        "4                2              2.78  \n",
        "\n",
        "[5 rows x 23 columns]"
       ]
      }
     ],
     "prompt_number": 13
    },
    {
     "cell_type": "heading",
     "level": 3,
     "metadata": {},
     "source": [
      "$Rt$: Reprodcution number $\\mathrm{[-]}$"
     ]
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "analyser.param_history(\"Rt\", roll_window=None).tail()"
     ],
     "language": "python",
     "metadata": {},
     "outputs": [
      {
       "output_type": "display_data",
       "png": "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\n",
       "text": [
        "<Figure size 648x432 with 1 Axes>"
       ]
      },
      {
       "html": [
        "<div>\n",
        "<style scoped>\n",
        "    .dataframe tbody tr th:only-of-type {\n",
        "        vertical-align: middle;\n",
        "    }\n",
        "\n",
        "    .dataframe tbody tr th {\n",
        "        vertical-align: top;\n",
        "    }\n",
        "\n",
        "    .dataframe thead th {\n",
        "        text-align: right;\n",
        "    }\n",
        "</style>\n",
        "<table border=\"1\" class=\"dataframe\">\n",
        "  <thead>\n",
        "    <tr style=\"text-align: right;\">\n",
        "      <th>Country</th>\n",
        "      <th>Bahrain</th>\n",
        "      <th>Bolivia</th>\n",
        "      <th>Brazil</th>\n",
        "      <th>France</th>\n",
        "      <th>Iran</th>\n",
        "      <th>Italy</th>\n",
        "      <th>Latvia</th>\n",
        "      <th>Russia</th>\n",
        "      <th>Turkey</th>\n",
        "      <th>United Arab Emirates</th>\n",
        "      <th>United States</th>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>Date</th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "    </tr>\n",
        "  </thead>\n",
        "  <tbody>\n",
        "    <tr>\n",
        "      <th>2020-10-05</th>\n",
        "      <td>0.83</td>\n",
        "      <td>0.69</td>\n",
        "      <td>0.85</td>\n",
        "      <td>22.97</td>\n",
        "      <td>1.5</td>\n",
        "      <td>2.24</td>\n",
        "      <td>127.42</td>\n",
        "      <td>1.98</td>\n",
        "      <td>1.33</td>\n",
        "      <td>0.97</td>\n",
        "      <td>2.59</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>2020-10-06</th>\n",
        "      <td>0.83</td>\n",
        "      <td>0.69</td>\n",
        "      <td>0.85</td>\n",
        "      <td>22.97</td>\n",
        "      <td>1.5</td>\n",
        "      <td>2.24</td>\n",
        "      <td>127.42</td>\n",
        "      <td>1.98</td>\n",
        "      <td>1.33</td>\n",
        "      <td>0.97</td>\n",
        "      <td>2.59</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>2020-10-07</th>\n",
        "      <td>0.83</td>\n",
        "      <td>0.69</td>\n",
        "      <td>0.85</td>\n",
        "      <td>22.97</td>\n",
        "      <td>1.5</td>\n",
        "      <td>2.24</td>\n",
        "      <td>127.42</td>\n",
        "      <td>1.98</td>\n",
        "      <td>1.33</td>\n",
        "      <td>0.97</td>\n",
        "      <td>2.59</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>2020-10-08</th>\n",
        "      <td>0.83</td>\n",
        "      <td>0.69</td>\n",
        "      <td>0.85</td>\n",
        "      <td>22.97</td>\n",
        "      <td>1.5</td>\n",
        "      <td>2.24</td>\n",
        "      <td>127.42</td>\n",
        "      <td>1.98</td>\n",
        "      <td>1.33</td>\n",
        "      <td>0.97</td>\n",
        "      <td>2.59</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>2020-10-09</th>\n",
        "      <td>0.83</td>\n",
        "      <td>0.69</td>\n",
        "      <td>0.85</td>\n",
        "      <td>22.97</td>\n",
        "      <td>1.5</td>\n",
        "      <td>2.24</td>\n",
        "      <td>127.42</td>\n",
        "      <td>1.98</td>\n",
        "      <td>1.33</td>\n",
        "      <td>0.97</td>\n",
        "      <td>2.59</td>\n",
        "    </tr>\n",
        "  </tbody>\n",
        "</table>\n",
        "</div>"
       ],
       "output_type": "pyout",
       "prompt_number": 14,
       "text": [
        "Country     Bahrain  Bolivia  Brazil  France  Iran  Italy  Latvia  Russia  \\\n",
        "Date                                                                        \n",
        "2020-10-05     0.83     0.69    0.85   22.97   1.5   2.24  127.42    1.98   \n",
        "2020-10-06     0.83     0.69    0.85   22.97   1.5   2.24  127.42    1.98   \n",
        "2020-10-07     0.83     0.69    0.85   22.97   1.5   2.24  127.42    1.98   \n",
        "2020-10-08     0.83     0.69    0.85   22.97   1.5   2.24  127.42    1.98   \n",
        "2020-10-09     0.83     0.69    0.85   22.97   1.5   2.24  127.42    1.98   \n",
        "\n",
        "Country     Turkey  United Arab Emirates  United States  \n",
        "Date                                                     \n",
        "2020-10-05    1.33                  0.97           2.59  \n",
        "2020-10-06    1.33                  0.97           2.59  \n",
        "2020-10-07    1.33                  0.97           2.59  \n",
        "2020-10-08    1.33                  0.97           2.59  \n",
        "2020-10-09    1.33                  0.97           2.59  "
       ]
      }
     ],
     "prompt_number": 14
    },
    {
     "cell_type": "heading",
     "level": 3,
     "metadata": {},
     "source": [
      "$\\rho$: Effective contact rate $\\mathrm{[-]}$"
     ]
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "analyser.param_history(\"rho\", roll_window=None).tail()"
     ],
     "language": "python",
     "metadata": {},
     "outputs": [
      {
       "output_type": "display_data",
       "png": "\n",
       "text": [
        "<Figure size 648x432 with 1 Axes>"
       ]
      },
      {
       "html": [
        "<div>\n",
        "<style scoped>\n",
        "    .dataframe tbody tr th:only-of-type {\n",
        "        vertical-align: middle;\n",
        "    }\n",
        "\n",
        "    .dataframe tbody tr th {\n",
        "        vertical-align: top;\n",
        "    }\n",
        "\n",
        "    .dataframe thead th {\n",
        "        text-align: right;\n",
        "    }\n",
        "</style>\n",
        "<table border=\"1\" class=\"dataframe\">\n",
        "  <thead>\n",
        "    <tr style=\"text-align: right;\">\n",
        "      <th>Country</th>\n",
        "      <th>Bahrain</th>\n",
        "      <th>Bolivia</th>\n",
        "      <th>Brazil</th>\n",
        "      <th>France</th>\n",
        "      <th>Iran</th>\n",
        "      <th>Italy</th>\n",
        "      <th>Latvia</th>\n",
        "      <th>Russia</th>\n",
        "      <th>Turkey</th>\n",
        "      <th>United Arab Emirates</th>\n",
        "      <th>United States</th>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>Date</th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "    </tr>\n",
        "  </thead>\n",
        "  <tbody>\n",
        "    <tr>\n",
        "      <th>2020-10-05</th>\n",
        "      <td>0.024511</td>\n",
        "      <td>0.00315</td>\n",
        "      <td>0.013508</td>\n",
        "      <td>0.008041</td>\n",
        "      <td>0.018017</td>\n",
        "      <td>0.012238</td>\n",
        "      <td>0.001847</td>\n",
        "      <td>0.002017</td>\n",
        "      <td>0.016526</td>\n",
        "      <td>0.028388</td>\n",
        "      <td>0.002796</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>2020-10-06</th>\n",
        "      <td>0.024511</td>\n",
        "      <td>0.00315</td>\n",
        "      <td>0.013508</td>\n",
        "      <td>0.008041</td>\n",
        "      <td>0.018017</td>\n",
        "      <td>0.012238</td>\n",
        "      <td>0.001847</td>\n",
        "      <td>0.002017</td>\n",
        "      <td>0.016526</td>\n",
        "      <td>0.028388</td>\n",
        "      <td>0.002796</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>2020-10-07</th>\n",
        "      <td>0.024511</td>\n",
        "      <td>0.00315</td>\n",
        "      <td>0.013508</td>\n",
        "      <td>0.008041</td>\n",
        "      <td>0.018017</td>\n",
        "      <td>0.012238</td>\n",
        "      <td>0.001847</td>\n",
        "      <td>0.002017</td>\n",
        "      <td>0.016526</td>\n",
        "      <td>0.028388</td>\n",
        "      <td>0.002796</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>2020-10-08</th>\n",
        "      <td>0.024511</td>\n",
        "      <td>0.00315</td>\n",
        "      <td>0.013508</td>\n",
        "      <td>0.008041</td>\n",
        "      <td>0.018017</td>\n",
        "      <td>0.012238</td>\n",
        "      <td>0.001847</td>\n",
        "      <td>0.002017</td>\n",
        "      <td>0.016526</td>\n",
        "      <td>0.028388</td>\n",
        "      <td>0.002796</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>2020-10-09</th>\n",
        "      <td>0.024511</td>\n",
        "      <td>0.00315</td>\n",
        "      <td>0.013508</td>\n",
        "      <td>0.008041</td>\n",
        "      <td>0.018017</td>\n",
        "      <td>0.012238</td>\n",
        "      <td>0.001847</td>\n",
        "      <td>0.002017</td>\n",
        "      <td>0.016526</td>\n",
        "      <td>0.028388</td>\n",
        "      <td>0.002796</td>\n",
        "    </tr>\n",
        "  </tbody>\n",
        "</table>\n",
        "</div>"
       ],
       "output_type": "pyout",
       "prompt_number": 15,
       "text": [
        "Country      Bahrain  Bolivia    Brazil    France      Iran     Italy  \\\n",
        "Date                                                                    \n",
        "2020-10-05  0.024511  0.00315  0.013508  0.008041  0.018017  0.012238   \n",
        "2020-10-06  0.024511  0.00315  0.013508  0.008041  0.018017  0.012238   \n",
        "2020-10-07  0.024511  0.00315  0.013508  0.008041  0.018017  0.012238   \n",
        "2020-10-08  0.024511  0.00315  0.013508  0.008041  0.018017  0.012238   \n",
        "2020-10-09  0.024511  0.00315  0.013508  0.008041  0.018017  0.012238   \n",
        "\n",
        "Country       Latvia    Russia    Turkey  United Arab Emirates  United States  \n",
        "Date                                                                           \n",
        "2020-10-05  0.001847  0.002017  0.016526              0.028388       0.002796  \n",
        "2020-10-06  0.001847  0.002017  0.016526              0.028388       0.002796  \n",
        "2020-10-07  0.001847  0.002017  0.016526              0.028388       0.002796  \n",
        "2020-10-08  0.001847  0.002017  0.016526              0.028388       0.002796  \n",
        "2020-10-09  0.001847  0.002017  0.016526              0.028388       0.002796  "
       ]
      }
     ],
     "prompt_number": 15
    },
    {
     "cell_type": "heading",
     "level": 3,
     "metadata": {},
     "source": [
      "$\\sigma$: Recovery rate $\\mathrm{[-]}$"
     ]
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "analyser.param_history(\"sigma\", roll_window=None).tail()"
     ],
     "language": "python",
     "metadata": {},
     "outputs": [
      {
       "output_type": "display_data",
       "png": "\n",
       "text": [
        "<Figure size 648x432 with 1 Axes>"
       ]
      },
      {
       "html": [
        "<div>\n",
        "<style scoped>\n",
        "    .dataframe tbody tr th:only-of-type {\n",
        "        vertical-align: middle;\n",
        "    }\n",
        "\n",
        "    .dataframe tbody tr th {\n",
        "        vertical-align: top;\n",
        "    }\n",
        "\n",
        "    .dataframe thead th {\n",
        "        text-align: right;\n",
        "    }\n",
        "</style>\n",
        "<table border=\"1\" class=\"dataframe\">\n",
        "  <thead>\n",
        "    <tr style=\"text-align: right;\">\n",
        "      <th>Country</th>\n",
        "      <th>Bahrain</th>\n",
        "      <th>Bolivia</th>\n",
        "      <th>Brazil</th>\n",
        "      <th>France</th>\n",
        "      <th>Iran</th>\n",
        "      <th>Italy</th>\n",
        "      <th>Latvia</th>\n",
        "      <th>Russia</th>\n",
        "      <th>Turkey</th>\n",
        "      <th>United Arab Emirates</th>\n",
        "      <th>United States</th>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>Date</th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "    </tr>\n",
        "  </thead>\n",
        "  <tbody>\n",
        "    <tr>\n",
        "      <th>2020-10-05</th>\n",
        "      <td>0.029273</td>\n",
        "      <td>0.004226</td>\n",
        "      <td>0.015546</td>\n",
        "      <td>0.000309</td>\n",
        "      <td>0.011193</td>\n",
        "      <td>0.00522</td>\n",
        "      <td>0.0</td>\n",
        "      <td>0.00099</td>\n",
        "      <td>0.01181</td>\n",
        "      <td>0.029174</td>\n",
        "      <td>0.001038</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>2020-10-06</th>\n",
        "      <td>0.029273</td>\n",
        "      <td>0.004226</td>\n",
        "      <td>0.015546</td>\n",
        "      <td>0.000309</td>\n",
        "      <td>0.011193</td>\n",
        "      <td>0.00522</td>\n",
        "      <td>0.0</td>\n",
        "      <td>0.00099</td>\n",
        "      <td>0.01181</td>\n",
        "      <td>0.029174</td>\n",
        "      <td>0.001038</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>2020-10-07</th>\n",
        "      <td>0.029273</td>\n",
        "      <td>0.004226</td>\n",
        "      <td>0.015546</td>\n",
        "      <td>0.000309</td>\n",
        "      <td>0.011193</td>\n",
        "      <td>0.00522</td>\n",
        "      <td>0.0</td>\n",
        "      <td>0.00099</td>\n",
        "      <td>0.01181</td>\n",
        "      <td>0.029174</td>\n",
        "      <td>0.001038</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>2020-10-08</th>\n",
        "      <td>0.029273</td>\n",
        "      <td>0.004226</td>\n",
        "      <td>0.015546</td>\n",
        "      <td>0.000309</td>\n",
        "      <td>0.011193</td>\n",
        "      <td>0.00522</td>\n",
        "      <td>0.0</td>\n",
        "      <td>0.00099</td>\n",
        "      <td>0.01181</td>\n",
        "      <td>0.029174</td>\n",
        "      <td>0.001038</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>2020-10-09</th>\n",
        "      <td>0.029273</td>\n",
        "      <td>0.004226</td>\n",
        "      <td>0.015546</td>\n",
        "      <td>0.000309</td>\n",
        "      <td>0.011193</td>\n",
        "      <td>0.00522</td>\n",
        "      <td>0.0</td>\n",
        "      <td>0.00099</td>\n",
        "      <td>0.01181</td>\n",
        "      <td>0.029174</td>\n",
        "      <td>0.001038</td>\n",
        "    </tr>\n",
        "  </tbody>\n",
        "</table>\n",
        "</div>"
       ],
       "output_type": "pyout",
       "prompt_number": 16,
       "text": [
        "Country      Bahrain   Bolivia    Brazil    France      Iran    Italy  Latvia  \\\n",
        "Date                                                                            \n",
        "2020-10-05  0.029273  0.004226  0.015546  0.000309  0.011193  0.00522     0.0   \n",
        "2020-10-06  0.029273  0.004226  0.015546  0.000309  0.011193  0.00522     0.0   \n",
        "2020-10-07  0.029273  0.004226  0.015546  0.000309  0.011193  0.00522     0.0   \n",
        "2020-10-08  0.029273  0.004226  0.015546  0.000309  0.011193  0.00522     0.0   \n",
        "2020-10-09  0.029273  0.004226  0.015546  0.000309  0.011193  0.00522     0.0   \n",
        "\n",
        "Country      Russia   Turkey  United Arab Emirates  United States  \n",
        "Date                                                               \n",
        "2020-10-05  0.00099  0.01181              0.029174       0.001038  \n",
        "2020-10-06  0.00099  0.01181              0.029174       0.001038  \n",
        "2020-10-07  0.00099  0.01181              0.029174       0.001038  \n",
        "2020-10-08  0.00099  0.01181              0.029174       0.001038  \n",
        "2020-10-09  0.00099  0.01181              0.029174       0.001038  "
       ]
      }
     ],
     "prompt_number": 16
    },
    {
     "cell_type": "heading",
     "level": 3,
     "metadata": {},
     "source": [
      "$\\kappa$: Mortality rate of infected cases $\\mathrm{[-]}$"
     ]
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "analyser.param_history(\"kappa\", roll_window=None).tail()"
     ],
     "language": "python",
     "metadata": {},
     "outputs": [
      {
       "output_type": "display_data",
       "png": "\n",
       "text": [
        "<Figure size 648x432 with 1 Axes>"
       ]
      },
      {
       "html": [
        "<div>\n",
        "<style scoped>\n",
        "    .dataframe tbody tr th:only-of-type {\n",
        "        vertical-align: middle;\n",
        "    }\n",
        "\n",
        "    .dataframe tbody tr th {\n",
        "        vertical-align: top;\n",
        "    }\n",
        "\n",
        "    .dataframe thead th {\n",
        "        text-align: right;\n",
        "    }\n",
        "</style>\n",
        "<table border=\"1\" class=\"dataframe\">\n",
        "  <thead>\n",
        "    <tr style=\"text-align: right;\">\n",
        "      <th>Country</th>\n",
        "      <th>Bahrain</th>\n",
        "      <th>Bolivia</th>\n",
        "      <th>Brazil</th>\n",
        "      <th>France</th>\n",
        "      <th>Iran</th>\n",
        "      <th>Italy</th>\n",
        "      <th>Latvia</th>\n",
        "      <th>Russia</th>\n",
        "      <th>Turkey</th>\n",
        "      <th>United Arab Emirates</th>\n",
        "      <th>United States</th>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>Date</th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "    </tr>\n",
        "  </thead>\n",
        "  <tbody>\n",
        "    <tr>\n",
        "      <th>2020-10-05</th>\n",
        "      <td>0.000071</td>\n",
        "      <td>0.000054</td>\n",
        "      <td>0.000002</td>\n",
        "      <td>0.000041</td>\n",
        "      <td>0.000299</td>\n",
        "      <td>0.000109</td>\n",
        "      <td>0.000014</td>\n",
        "      <td>0.000024</td>\n",
        "      <td>0.000516</td>\n",
        "      <td>0.00006</td>\n",
        "      <td>0.000041</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>2020-10-06</th>\n",
        "      <td>0.000071</td>\n",
        "      <td>0.000054</td>\n",
        "      <td>0.000002</td>\n",
        "      <td>0.000041</td>\n",
        "      <td>0.000299</td>\n",
        "      <td>0.000109</td>\n",
        "      <td>0.000014</td>\n",
        "      <td>0.000024</td>\n",
        "      <td>0.000516</td>\n",
        "      <td>0.00006</td>\n",
        "      <td>0.000041</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>2020-10-07</th>\n",
        "      <td>0.000071</td>\n",
        "      <td>0.000054</td>\n",
        "      <td>0.000002</td>\n",
        "      <td>0.000041</td>\n",
        "      <td>0.000299</td>\n",
        "      <td>0.000109</td>\n",
        "      <td>0.000014</td>\n",
        "      <td>0.000024</td>\n",
        "      <td>0.000516</td>\n",
        "      <td>0.00006</td>\n",
        "      <td>0.000041</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>2020-10-08</th>\n",
        "      <td>0.000071</td>\n",
        "      <td>0.000054</td>\n",
        "      <td>0.000002</td>\n",
        "      <td>0.000041</td>\n",
        "      <td>0.000299</td>\n",
        "      <td>0.000109</td>\n",
        "      <td>0.000014</td>\n",
        "      <td>0.000024</td>\n",
        "      <td>0.000516</td>\n",
        "      <td>0.00006</td>\n",
        "      <td>0.000041</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>2020-10-09</th>\n",
        "      <td>0.000071</td>\n",
        "      <td>0.000054</td>\n",
        "      <td>0.000002</td>\n",
        "      <td>0.000041</td>\n",
        "      <td>0.000299</td>\n",
        "      <td>0.000109</td>\n",
        "      <td>0.000014</td>\n",
        "      <td>0.000024</td>\n",
        "      <td>0.000516</td>\n",
        "      <td>0.00006</td>\n",
        "      <td>0.000041</td>\n",
        "    </tr>\n",
        "  </tbody>\n",
        "</table>\n",
        "</div>"
       ],
       "output_type": "pyout",
       "prompt_number": 17,
       "text": [
        "Country      Bahrain   Bolivia    Brazil    France      Iran     Italy  \\\n",
        "Date                                                                     \n",
        "2020-10-05  0.000071  0.000054  0.000002  0.000041  0.000299  0.000109   \n",
        "2020-10-06  0.000071  0.000054  0.000002  0.000041  0.000299  0.000109   \n",
        "2020-10-07  0.000071  0.000054  0.000002  0.000041  0.000299  0.000109   \n",
        "2020-10-08  0.000071  0.000054  0.000002  0.000041  0.000299  0.000109   \n",
        "2020-10-09  0.000071  0.000054  0.000002  0.000041  0.000299  0.000109   \n",
        "\n",
        "Country       Latvia    Russia    Turkey  United Arab Emirates  United States  \n",
        "Date                                                                           \n",
        "2020-10-05  0.000014  0.000024  0.000516               0.00006       0.000041  \n",
        "2020-10-06  0.000014  0.000024  0.000516               0.00006       0.000041  \n",
        "2020-10-07  0.000014  0.000024  0.000516               0.00006       0.000041  \n",
        "2020-10-08  0.000014  0.000024  0.000516               0.00006       0.000041  \n",
        "2020-10-09  0.000014  0.000024  0.000516               0.00006       0.000041  "
       ]
      }
     ],
     "prompt_number": 17
    },
    {
     "cell_type": "heading",
     "level": 3,
     "metadata": {},
     "source": [
      "$\\theta$: Mortality rate of S$^\\ast$ cases $\\mathrm{[-]}$"
     ]
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "analyser.param_history(\"theta\", roll_window=None).tail()"
     ],
     "language": "python",
     "metadata": {},
     "outputs": [
      {
       "output_type": "display_data",
       "png": "\n",
       "text": [
        "<Figure size 648x432 with 1 Axes>"
       ]
      },
      {
       "html": [
        "<div>\n",
        "<style scoped>\n",
        "    .dataframe tbody tr th:only-of-type {\n",
        "        vertical-align: middle;\n",
        "    }\n",
        "\n",
        "    .dataframe tbody tr th {\n",
        "        vertical-align: top;\n",
        "    }\n",
        "\n",
        "    .dataframe thead th {\n",
        "        text-align: right;\n",
        "    }\n",
        "</style>\n",
        "<table border=\"1\" class=\"dataframe\">\n",
        "  <thead>\n",
        "    <tr style=\"text-align: right;\">\n",
        "      <th>Country</th>\n",
        "      <th>Bahrain</th>\n",
        "      <th>Bolivia</th>\n",
        "      <th>Brazil</th>\n",
        "      <th>France</th>\n",
        "      <th>Iran</th>\n",
        "      <th>Italy</th>\n",
        "      <th>Latvia</th>\n",
        "      <th>Russia</th>\n",
        "      <th>Turkey</th>\n",
        "      <th>United Arab Emirates</th>\n",
        "      <th>United States</th>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>Date</th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "    </tr>\n",
        "  </thead>\n",
        "  <tbody>\n",
        "    <tr>\n",
        "      <th>2020-10-05</th>\n",
        "      <td>0.000897</td>\n",
        "      <td>0.058713</td>\n",
        "      <td>0.020656</td>\n",
        "      <td>0.000019</td>\n",
        "      <td>0.040947</td>\n",
        "      <td>0.024589</td>\n",
        "      <td>0.000234</td>\n",
        "      <td>0.002496</td>\n",
        "      <td>0.004787</td>\n",
        "      <td>0.000158</td>\n",
        "      <td>0.000019</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>2020-10-06</th>\n",
        "      <td>0.000897</td>\n",
        "      <td>0.058713</td>\n",
        "      <td>0.020656</td>\n",
        "      <td>0.000019</td>\n",
        "      <td>0.040947</td>\n",
        "      <td>0.024589</td>\n",
        "      <td>0.000234</td>\n",
        "      <td>0.002496</td>\n",
        "      <td>0.004787</td>\n",
        "      <td>0.000158</td>\n",
        "      <td>0.000019</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>2020-10-07</th>\n",
        "      <td>0.000897</td>\n",
        "      <td>0.058713</td>\n",
        "      <td>0.020656</td>\n",
        "      <td>0.000019</td>\n",
        "      <td>0.040947</td>\n",
        "      <td>0.024589</td>\n",
        "      <td>0.000234</td>\n",
        "      <td>0.002496</td>\n",
        "      <td>0.004787</td>\n",
        "      <td>0.000158</td>\n",
        "      <td>0.000019</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>2020-10-08</th>\n",
        "      <td>0.000897</td>\n",
        "      <td>0.058713</td>\n",
        "      <td>0.020656</td>\n",
        "      <td>0.000019</td>\n",
        "      <td>0.040947</td>\n",
        "      <td>0.024589</td>\n",
        "      <td>0.000234</td>\n",
        "      <td>0.002496</td>\n",
        "      <td>0.004787</td>\n",
        "      <td>0.000158</td>\n",
        "      <td>0.000019</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>2020-10-09</th>\n",
        "      <td>0.000897</td>\n",
        "      <td>0.058713</td>\n",
        "      <td>0.020656</td>\n",
        "      <td>0.000019</td>\n",
        "      <td>0.040947</td>\n",
        "      <td>0.024589</td>\n",
        "      <td>0.000234</td>\n",
        "      <td>0.002496</td>\n",
        "      <td>0.004787</td>\n",
        "      <td>0.000158</td>\n",
        "      <td>0.000019</td>\n",
        "    </tr>\n",
        "  </tbody>\n",
        "</table>\n",
        "</div>"
       ],
       "output_type": "pyout",
       "prompt_number": 18,
       "text": [
        "Country      Bahrain   Bolivia    Brazil    France      Iran     Italy  \\\n",
        "Date                                                                     \n",
        "2020-10-05  0.000897  0.058713  0.020656  0.000019  0.040947  0.024589   \n",
        "2020-10-06  0.000897  0.058713  0.020656  0.000019  0.040947  0.024589   \n",
        "2020-10-07  0.000897  0.058713  0.020656  0.000019  0.040947  0.024589   \n",
        "2020-10-08  0.000897  0.058713  0.020656  0.000019  0.040947  0.024589   \n",
        "2020-10-09  0.000897  0.058713  0.020656  0.000019  0.040947  0.024589   \n",
        "\n",
        "Country       Latvia    Russia    Turkey  United Arab Emirates  United States  \n",
        "Date                                                                           \n",
        "2020-10-05  0.000234  0.002496  0.004787              0.000158       0.000019  \n",
        "2020-10-06  0.000234  0.002496  0.004787              0.000158       0.000019  \n",
        "2020-10-07  0.000234  0.002496  0.004787              0.000158       0.000019  \n",
        "2020-10-08  0.000234  0.002496  0.004787              0.000158       0.000019  \n",
        "2020-10-09  0.000234  0.002496  0.004787              0.000158       0.000019  "
       ]
      }
     ],
     "prompt_number": 18
    },
    {
     "cell_type": "markdown",
     "metadata": {},
     "source": [
      "## (Experimental): Relationship of OxCGRT index and parameter values\n",
      "Government responses will impact on parameter values of ODE models about 14 days later. Here, we will investigate on the relationship of [stringency index (from OxCGRT)](https://github.com/OxCGRT/covid-policy-tracker/blob/master/documentation/index_methodology.md) and reproduction number/model parameters.\n"
     ]
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "%matplotlib inline\n",
      "from matplotlib import pyplot as plt\n",
      "import seaborn as sns\n",
      "import pandas as pd"
     ],
     "language": "python",
     "metadata": {},
     "outputs": [],
     "prompt_number": 19
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "df = analyser.track()\n",
      "param_cols = [\"Rt\", *cs.SIRF.PARAMETERS]\n",
      "oxcgrt_cols = oxcgrt_data.OXCGRT_VARS[:]\n",
      "cols = param_cols + oxcgrt_cols\n",
      "delay = 14\n",
      "\n",
      "for col in param_cols:\n",
      "    df[col] = pd.to_numeric(df[col], errors=\"coerce\")\n",
      "    df[col] = df.groupby(\"Country\")[col].shift(0 - delay)\n",
      "\n",
      "df = df.dropna(how=\"any\")\n",
      "df = df.loc[:, [\"Date\", \"Country\", *cols]]\n",
      "track_df = df.copy()\n",
      "track_df.info()"
     ],
     "language": "python",
     "metadata": {},
     "outputs": [
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "<class 'pandas.core.frame.DataFrame'>\n",
        "Int64Index: 72509 entries, 0 to 72648\n",
        "Data columns (total 19 columns):\n",
        " #   Column                               Non-Null Count  Dtype         \n",
        "---  ------                               --------------  -----         \n",
        " 0   Date                                 72509 non-null  datetime64[ns]\n",
        " 1   Country                              72509 non-null  object        \n",
        " 2   Rt                                   72509 non-null  float64       \n",
        " 3   theta                                72509 non-null  float64       \n",
        " 4   kappa                                72509 non-null  float64       \n",
        " 5   rho                                  72509 non-null  float64       \n",
        " 6   sigma                                72509 non-null  float64       \n",
        " 7   School_closing                       72509 non-null  int64         \n",
        " 8   Workplace_closing                    72509 non-null  int64         \n",
        " 9   Cancel_events                        72509 non-null  int64         \n",
        " 10  Gatherings_restrictions              72509 non-null  int64         \n",
        " 11  Transport_closing                    72509 non-null  int64         \n",
        " 12  Stay_home_restrictions               72509 non-null  int64         \n",
        " 13  Internal_movement_restrictions       72509 non-null  int64         \n",
        " 14  International_movement_restrictions  72509 non-null  int64         \n",
        " 15  Information_campaigns                72509 non-null  int64         \n",
        " 16  Testing_policy                       72509 non-null  int64         \n",
        " 17  Contact_tracing                      72509 non-null  int64         \n",
        " 18  Stringency_index                     72509 non-null  float64       \n",
        "dtypes: datetime64[ns](1), float64(6), int64(11), object(1)\n",
        "memory usage: 11.1+ MB\n"
       ]
      }
     ],
     "prompt_number": 20
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "# Correlation\n",
      "df = track_df.copy()\n",
      "df.corr().style.background_gradient(axis=None)"
     ],
     "language": "python",
     "metadata": {},
     "outputs": [
      {
       "html": [
        "<style  type=\"text/css\" >\n",
        "#T_442487e6_0a46_11eb_be7c_525400578834row0_col0,#T_442487e6_0a46_11eb_be7c_525400578834row1_col1,#T_442487e6_0a46_11eb_be7c_525400578834row2_col2,#T_442487e6_0a46_11eb_be7c_525400578834row3_col3,#T_442487e6_0a46_11eb_be7c_525400578834row4_col4,#T_442487e6_0a46_11eb_be7c_525400578834row5_col5,#T_442487e6_0a46_11eb_be7c_525400578834row6_col6,#T_442487e6_0a46_11eb_be7c_525400578834row7_col7,#T_442487e6_0a46_11eb_be7c_525400578834row8_col8,#T_442487e6_0a46_11eb_be7c_525400578834row9_col9,#T_442487e6_0a46_11eb_be7c_525400578834row10_col10,#T_442487e6_0a46_11eb_be7c_525400578834row11_col11,#T_442487e6_0a46_11eb_be7c_525400578834row12_col12,#T_442487e6_0a46_11eb_be7c_525400578834row13_col13,#T_442487e6_0a46_11eb_be7c_525400578834row14_col14,#T_442487e6_0a46_11eb_be7c_525400578834row15_col15,#T_442487e6_0a46_11eb_be7c_525400578834row16_col16{\n",
        "            background-color:  #023858;\n",
        "            color:  #f1f1f1;\n",
        "        }#T_442487e6_0a46_11eb_be7c_525400578834row0_col1,#T_442487e6_0a46_11eb_be7c_525400578834row1_col0,#T_442487e6_0a46_11eb_be7c_525400578834row1_col6,#T_442487e6_0a46_11eb_be7c_525400578834row6_col1{\n",
        "            background-color:  #dddbec;\n",
        "            color:  #000000;\n",
        "        }#T_442487e6_0a46_11eb_be7c_525400578834row0_col2,#T_442487e6_0a46_11eb_be7c_525400578834row2_col0{\n",
        "            background-color:  #dad9ea;\n",
        "            color:  #000000;\n",
        "        }#T_442487e6_0a46_11eb_be7c_525400578834row0_col3,#T_442487e6_0a46_11eb_be7c_525400578834row3_col0{\n",
        "            background-color:  #b4c4df;\n",
        "            color:  #000000;\n",
        "        }#T_442487e6_0a46_11eb_be7c_525400578834row0_col4,#T_442487e6_0a46_11eb_be7c_525400578834row4_col0{\n",
        "            background-color:  #f0eaf4;\n",
        "            color:  #000000;\n",
        "        }#T_442487e6_0a46_11eb_be7c_525400578834row0_col5,#T_442487e6_0a46_11eb_be7c_525400578834row5_col0{\n",
        "            background-color:  #e6e2ef;\n",
        "            color:  #000000;\n",
        "        }#T_442487e6_0a46_11eb_be7c_525400578834row0_col6,#T_442487e6_0a46_11eb_be7c_525400578834row6_col0{\n",
        "            background-color:  #d6d6e9;\n",
        "            color:  #000000;\n",
        "        }#T_442487e6_0a46_11eb_be7c_525400578834row0_col7,#T_442487e6_0a46_11eb_be7c_525400578834row0_col9,#T_442487e6_0a46_11eb_be7c_525400578834row7_col0,#T_442487e6_0a46_11eb_be7c_525400578834row9_col0{\n",
        "            background-color:  #d5d5e8;\n",
        "            color:  #000000;\n",
        "        }#T_442487e6_0a46_11eb_be7c_525400578834row0_col8,#T_442487e6_0a46_11eb_be7c_525400578834row0_col16,#T_442487e6_0a46_11eb_be7c_525400578834row8_col0,#T_442487e6_0a46_11eb_be7c_525400578834row16_col0{\n",
        "            background-color:  #d9d8ea;\n",
        "            color:  #000000;\n",
        "        }#T_442487e6_0a46_11eb_be7c_525400578834row0_col10,#T_442487e6_0a46_11eb_be7c_525400578834row10_col0{\n",
        "            background-color:  #e0deed;\n",
        "            color:  #000000;\n",
        "        }#T_442487e6_0a46_11eb_be7c_525400578834row0_col11,#T_442487e6_0a46_11eb_be7c_525400578834row11_col0{\n",
        "            background-color:  #f5eff6;\n",
        "            color:  #000000;\n",
        "        }#T_442487e6_0a46_11eb_be7c_525400578834row0_col12,#T_442487e6_0a46_11eb_be7c_525400578834row0_col13,#T_442487e6_0a46_11eb_be7c_525400578834row3_col9,#T_442487e6_0a46_11eb_be7c_525400578834row9_col3,#T_442487e6_0a46_11eb_be7c_525400578834row12_col0,#T_442487e6_0a46_11eb_be7c_525400578834row13_col0{\n",
        "            background-color:  #c6cce3;\n",
        "            color:  #000000;\n",
        "        }#T_442487e6_0a46_11eb_be7c_525400578834row0_col14,#T_442487e6_0a46_11eb_be7c_525400578834row14_col0{\n",
        "            background-color:  #ebe6f2;\n",
        "            color:  #000000;\n",
        "        }#T_442487e6_0a46_11eb_be7c_525400578834row0_col15,#T_442487e6_0a46_11eb_be7c_525400578834row3_col6,#T_442487e6_0a46_11eb_be7c_525400578834row6_col3,#T_442487e6_0a46_11eb_be7c_525400578834row15_col0{\n",
        "            background-color:  #dfddec;\n",
        "            color:  #000000;\n",
        "        }#T_442487e6_0a46_11eb_be7c_525400578834row1_col2,#T_442487e6_0a46_11eb_be7c_525400578834row2_col1{\n",
        "            background-color:  #034165;\n",
        "            color:  #f1f1f1;\n",
        "        }#T_442487e6_0a46_11eb_be7c_525400578834row1_col3,#T_442487e6_0a46_11eb_be7c_525400578834row3_col1,#T_442487e6_0a46_11eb_be7c_525400578834row10_col11,#T_442487e6_0a46_11eb_be7c_525400578834row11_col10{\n",
        "            background-color:  #05659f;\n",
        "            color:  #f1f1f1;\n",
        "        }#T_442487e6_0a46_11eb_be7c_525400578834row1_col4,#T_442487e6_0a46_11eb_be7c_525400578834row4_col1{\n",
        "            background-color:  #b1c2de;\n",
        "            color:  #000000;\n",
        "        }#T_442487e6_0a46_11eb_be7c_525400578834row1_col5,#T_442487e6_0a46_11eb_be7c_525400578834row2_col5,#T_442487e6_0a46_11eb_be7c_525400578834row5_col1,#T_442487e6_0a46_11eb_be7c_525400578834row5_col2{\n",
        "            background-color:  #dcdaeb;\n",
        "            color:  #000000;\n",
        "        }#T_442487e6_0a46_11eb_be7c_525400578834row1_col7,#T_442487e6_0a46_11eb_be7c_525400578834row2_col7,#T_442487e6_0a46_11eb_be7c_525400578834row3_col5,#T_442487e6_0a46_11eb_be7c_525400578834row5_col3,#T_442487e6_0a46_11eb_be7c_525400578834row7_col1,#T_442487e6_0a46_11eb_be7c_525400578834row7_col2{\n",
        "            background-color:  #d8d7e9;\n",
        "            color:  #000000;\n",
        "        }#T_442487e6_0a46_11eb_be7c_525400578834row1_col8,#T_442487e6_0a46_11eb_be7c_525400578834row1_col9,#T_442487e6_0a46_11eb_be7c_525400578834row2_col8,#T_442487e6_0a46_11eb_be7c_525400578834row8_col1,#T_442487e6_0a46_11eb_be7c_525400578834row8_col2,#T_442487e6_0a46_11eb_be7c_525400578834row9_col1{\n",
        "            background-color:  #d1d2e6;\n",
        "            color:  #000000;\n",
        "        }#T_442487e6_0a46_11eb_be7c_525400578834row1_col10,#T_442487e6_0a46_11eb_be7c_525400578834row8_col14,#T_442487e6_0a46_11eb_be7c_525400578834row10_col1,#T_442487e6_0a46_11eb_be7c_525400578834row14_col8{\n",
        "            background-color:  #83afd3;\n",
        "            color:  #000000;\n",
        "        }#T_442487e6_0a46_11eb_be7c_525400578834row1_col11,#T_442487e6_0a46_11eb_be7c_525400578834row2_col11,#T_442487e6_0a46_11eb_be7c_525400578834row11_col1,#T_442487e6_0a46_11eb_be7c_525400578834row11_col2{\n",
        "            background-color:  #91b5d6;\n",
        "            color:  #000000;\n",
        "        }#T_442487e6_0a46_11eb_be7c_525400578834row1_col12,#T_442487e6_0a46_11eb_be7c_525400578834row12_col1{\n",
        "            background-color:  #99b8d8;\n",
        "            color:  #000000;\n",
        "        }#T_442487e6_0a46_11eb_be7c_525400578834row1_col13,#T_442487e6_0a46_11eb_be7c_525400578834row13_col1{\n",
        "            background-color:  #fbf3f9;\n",
        "            color:  #000000;\n",
        "        }#T_442487e6_0a46_11eb_be7c_525400578834row1_col14,#T_442487e6_0a46_11eb_be7c_525400578834row14_col1{\n",
        "            background-color:  #f1ebf4;\n",
        "            color:  #000000;\n",
        "        }#T_442487e6_0a46_11eb_be7c_525400578834row1_col15,#T_442487e6_0a46_11eb_be7c_525400578834row15_col1{\n",
        "            background-color:  #d4d4e8;\n",
        "            color:  #000000;\n",
        "        }#T_442487e6_0a46_11eb_be7c_525400578834row1_col16,#T_442487e6_0a46_11eb_be7c_525400578834row2_col15,#T_442487e6_0a46_11eb_be7c_525400578834row2_col16,#T_442487e6_0a46_11eb_be7c_525400578834row15_col2,#T_442487e6_0a46_11eb_be7c_525400578834row16_col1,#T_442487e6_0a46_11eb_be7c_525400578834row16_col2{\n",
        "            background-color:  #c8cde4;\n",
        "            color:  #000000;\n",
        "        }#T_442487e6_0a46_11eb_be7c_525400578834row2_col3,#T_442487e6_0a46_11eb_be7c_525400578834row3_col2{\n",
        "            background-color:  #0567a1;\n",
        "            color:  #f1f1f1;\n",
        "        }#T_442487e6_0a46_11eb_be7c_525400578834row2_col4,#T_442487e6_0a46_11eb_be7c_525400578834row4_col2{\n",
        "            background-color:  #bbc7e0;\n",
        "            color:  #000000;\n",
        "        }#T_442487e6_0a46_11eb_be7c_525400578834row2_col6,#T_442487e6_0a46_11eb_be7c_525400578834row6_col2{\n",
        "            background-color:  #dbdaeb;\n",
        "            color:  #000000;\n",
        "        }#T_442487e6_0a46_11eb_be7c_525400578834row2_col9,#T_442487e6_0a46_11eb_be7c_525400578834row9_col2{\n",
        "            background-color:  #d2d2e7;\n",
        "            color:  #000000;\n",
        "        }#T_442487e6_0a46_11eb_be7c_525400578834row2_col10,#T_442487e6_0a46_11eb_be7c_525400578834row7_col15,#T_442487e6_0a46_11eb_be7c_525400578834row10_col2,#T_442487e6_0a46_11eb_be7c_525400578834row10_col15,#T_442487e6_0a46_11eb_be7c_525400578834row15_col7,#T_442487e6_0a46_11eb_be7c_525400578834row15_col10{\n",
        "            background-color:  #7dacd1;\n",
        "            color:  #000000;\n",
        "        }#T_442487e6_0a46_11eb_be7c_525400578834row2_col12,#T_442487e6_0a46_11eb_be7c_525400578834row3_col10,#T_442487e6_0a46_11eb_be7c_525400578834row10_col3,#T_442487e6_0a46_11eb_be7c_525400578834row12_col2{\n",
        "            background-color:  #8bb2d4;\n",
        "            color:  #000000;\n",
        "        }#T_442487e6_0a46_11eb_be7c_525400578834row2_col13,#T_442487e6_0a46_11eb_be7c_525400578834row13_col2{\n",
        "            background-color:  #f8f1f8;\n",
        "            color:  #000000;\n",
        "        }#T_442487e6_0a46_11eb_be7c_525400578834row2_col14,#T_442487e6_0a46_11eb_be7c_525400578834row14_col2{\n",
        "            background-color:  #e5e1ef;\n",
        "            color:  #000000;\n",
        "        }#T_442487e6_0a46_11eb_be7c_525400578834row3_col4,#T_442487e6_0a46_11eb_be7c_525400578834row4_col3{\n",
        "            background-color:  #9cb9d9;\n",
        "            color:  #000000;\n",
        "        }#T_442487e6_0a46_11eb_be7c_525400578834row3_col7,#T_442487e6_0a46_11eb_be7c_525400578834row7_col3{\n",
        "            background-color:  #cdd0e5;\n",
        "            color:  #000000;\n",
        "        }#T_442487e6_0a46_11eb_be7c_525400578834row3_col8,#T_442487e6_0a46_11eb_be7c_525400578834row8_col3{\n",
        "            background-color:  #c1cae2;\n",
        "            color:  #000000;\n",
        "        }#T_442487e6_0a46_11eb_be7c_525400578834row3_col11,#T_442487e6_0a46_11eb_be7c_525400578834row11_col3{\n",
        "            background-color:  #8cb3d5;\n",
        "            color:  #000000;\n",
        "        }#T_442487e6_0a46_11eb_be7c_525400578834row3_col12,#T_442487e6_0a46_11eb_be7c_525400578834row12_col3{\n",
        "            background-color:  #9fbad9;\n",
        "            color:  #000000;\n",
        "        }#T_442487e6_0a46_11eb_be7c_525400578834row3_col13,#T_442487e6_0a46_11eb_be7c_525400578834row3_col14,#T_442487e6_0a46_11eb_be7c_525400578834row13_col3,#T_442487e6_0a46_11eb_be7c_525400578834row14_col3{\n",
        "            background-color:  #fff7fb;\n",
        "            color:  #000000;\n",
        "        }#T_442487e6_0a46_11eb_be7c_525400578834row3_col15,#T_442487e6_0a46_11eb_be7c_525400578834row15_col3{\n",
        "            background-color:  #efe9f3;\n",
        "            color:  #000000;\n",
        "        }#T_442487e6_0a46_11eb_be7c_525400578834row3_col16,#T_442487e6_0a46_11eb_be7c_525400578834row16_col3{\n",
        "            background-color:  #c4cbe3;\n",
        "            color:  #000000;\n",
        "        }#T_442487e6_0a46_11eb_be7c_525400578834row4_col5,#T_442487e6_0a46_11eb_be7c_525400578834row5_col4,#T_442487e6_0a46_11eb_be7c_525400578834row14_col16,#T_442487e6_0a46_11eb_be7c_525400578834row15_col16,#T_442487e6_0a46_11eb_be7c_525400578834row16_col14,#T_442487e6_0a46_11eb_be7c_525400578834row16_col15{\n",
        "            background-color:  #76aad0;\n",
        "            color:  #000000;\n",
        "        }#T_442487e6_0a46_11eb_be7c_525400578834row4_col6,#T_442487e6_0a46_11eb_be7c_525400578834row6_col4{\n",
        "            background-color:  #afc1dd;\n",
        "            color:  #000000;\n",
        "        }#T_442487e6_0a46_11eb_be7c_525400578834row4_col7,#T_442487e6_0a46_11eb_be7c_525400578834row7_col4{\n",
        "            background-color:  #73a9cf;\n",
        "            color:  #000000;\n",
        "        }#T_442487e6_0a46_11eb_be7c_525400578834row4_col8,#T_442487e6_0a46_11eb_be7c_525400578834row8_col4{\n",
        "            background-color:  #a2bcda;\n",
        "            color:  #000000;\n",
        "        }#T_442487e6_0a46_11eb_be7c_525400578834row4_col9,#T_442487e6_0a46_11eb_be7c_525400578834row9_col4{\n",
        "            background-color:  #93b5d6;\n",
        "            color:  #000000;\n",
        "        }#T_442487e6_0a46_11eb_be7c_525400578834row4_col10,#T_442487e6_0a46_11eb_be7c_525400578834row10_col4{\n",
        "            background-color:  #8eb3d5;\n",
        "            color:  #000000;\n",
        "        }#T_442487e6_0a46_11eb_be7c_525400578834row4_col11,#T_442487e6_0a46_11eb_be7c_525400578834row10_col14,#T_442487e6_0a46_11eb_be7c_525400578834row11_col4,#T_442487e6_0a46_11eb_be7c_525400578834row11_col14,#T_442487e6_0a46_11eb_be7c_525400578834row14_col10,#T_442487e6_0a46_11eb_be7c_525400578834row14_col11{\n",
        "            background-color:  #79abd0;\n",
        "            color:  #000000;\n",
        "        }#T_442487e6_0a46_11eb_be7c_525400578834row4_col12,#T_442487e6_0a46_11eb_be7c_525400578834row12_col4{\n",
        "            background-color:  #a8bedc;\n",
        "            color:  #000000;\n",
        "        }#T_442487e6_0a46_11eb_be7c_525400578834row4_col13,#T_442487e6_0a46_11eb_be7c_525400578834row13_col4{\n",
        "            background-color:  #bcc7e1;\n",
        "            color:  #000000;\n",
        "        }#T_442487e6_0a46_11eb_be7c_525400578834row4_col14,#T_442487e6_0a46_11eb_be7c_525400578834row14_col4{\n",
        "            background-color:  #cacee5;\n",
        "            color:  #000000;\n",
        "        }#T_442487e6_0a46_11eb_be7c_525400578834row4_col15,#T_442487e6_0a46_11eb_be7c_525400578834row15_col4{\n",
        "            background-color:  #abbfdc;\n",
        "            color:  #000000;\n",
        "        }#T_442487e6_0a46_11eb_be7c_525400578834row4_col16,#T_442487e6_0a46_11eb_be7c_525400578834row16_col4{\n",
        "            background-color:  #80aed2;\n",
        "            color:  #000000;\n",
        "        }#T_442487e6_0a46_11eb_be7c_525400578834row5_col6,#T_442487e6_0a46_11eb_be7c_525400578834row6_col5{\n",
        "            background-color:  #0569a4;\n",
        "            color:  #f1f1f1;\n",
        "        }#T_442487e6_0a46_11eb_be7c_525400578834row5_col7,#T_442487e6_0a46_11eb_be7c_525400578834row7_col5{\n",
        "            background-color:  #0566a0;\n",
        "            color:  #f1f1f1;\n",
        "        }#T_442487e6_0a46_11eb_be7c_525400578834row5_col8,#T_442487e6_0a46_11eb_be7c_525400578834row8_col5{\n",
        "            background-color:  #1077b4;\n",
        "            color:  #f1f1f1;\n",
        "        }#T_442487e6_0a46_11eb_be7c_525400578834row5_col9,#T_442487e6_0a46_11eb_be7c_525400578834row9_col5,#T_442487e6_0a46_11eb_be7c_525400578834row13_col14,#T_442487e6_0a46_11eb_be7c_525400578834row14_col13{\n",
        "            background-color:  #2182b9;\n",
        "            color:  #000000;\n",
        "        }#T_442487e6_0a46_11eb_be7c_525400578834row5_col10,#T_442487e6_0a46_11eb_be7c_525400578834row8_col12,#T_442487e6_0a46_11eb_be7c_525400578834row10_col5,#T_442487e6_0a46_11eb_be7c_525400578834row12_col8{\n",
        "            background-color:  #1278b4;\n",
        "            color:  #f1f1f1;\n",
        "        }#T_442487e6_0a46_11eb_be7c_525400578834row5_col11,#T_442487e6_0a46_11eb_be7c_525400578834row11_col5{\n",
        "            background-color:  #2786bb;\n",
        "            color:  #000000;\n",
        "        }#T_442487e6_0a46_11eb_be7c_525400578834row5_col12,#T_442487e6_0a46_11eb_be7c_525400578834row6_col14,#T_442487e6_0a46_11eb_be7c_525400578834row12_col5,#T_442487e6_0a46_11eb_be7c_525400578834row14_col6{\n",
        "            background-color:  #3f93c2;\n",
        "            color:  #000000;\n",
        "        }#T_442487e6_0a46_11eb_be7c_525400578834row5_col13,#T_442487e6_0a46_11eb_be7c_525400578834row13_col5{\n",
        "            background-color:  #0872b1;\n",
        "            color:  #f1f1f1;\n",
        "        }#T_442487e6_0a46_11eb_be7c_525400578834row5_col14,#T_442487e6_0a46_11eb_be7c_525400578834row14_col5{\n",
        "            background-color:  #4c99c5;\n",
        "            color:  #000000;\n",
        "        }#T_442487e6_0a46_11eb_be7c_525400578834row5_col15,#T_442487e6_0a46_11eb_be7c_525400578834row15_col5{\n",
        "            background-color:  #89b1d4;\n",
        "            color:  #000000;\n",
        "        }#T_442487e6_0a46_11eb_be7c_525400578834row5_col16,#T_442487e6_0a46_11eb_be7c_525400578834row16_col5{\n",
        "            background-color:  #045b8f;\n",
        "            color:  #f1f1f1;\n",
        "        }#T_442487e6_0a46_11eb_be7c_525400578834row6_col7,#T_442487e6_0a46_11eb_be7c_525400578834row7_col6{\n",
        "            background-color:  #0d75b3;\n",
        "            color:  #f1f1f1;\n",
        "        }#T_442487e6_0a46_11eb_be7c_525400578834row6_col8,#T_442487e6_0a46_11eb_be7c_525400578834row6_col10,#T_442487e6_0a46_11eb_be7c_525400578834row8_col6,#T_442487e6_0a46_11eb_be7c_525400578834row10_col6{\n",
        "            background-color:  #0f76b3;\n",
        "            color:  #f1f1f1;\n",
        "        }#T_442487e6_0a46_11eb_be7c_525400578834row6_col9,#T_442487e6_0a46_11eb_be7c_525400578834row9_col6{\n",
        "            background-color:  #2a88bc;\n",
        "            color:  #000000;\n",
        "        }#T_442487e6_0a46_11eb_be7c_525400578834row6_col11,#T_442487e6_0a46_11eb_be7c_525400578834row11_col6{\n",
        "            background-color:  #4897c4;\n",
        "            color:  #000000;\n",
        "        }#T_442487e6_0a46_11eb_be7c_525400578834row6_col12,#T_442487e6_0a46_11eb_be7c_525400578834row12_col6{\n",
        "            background-color:  #4496c3;\n",
        "            color:  #000000;\n",
        "        }#T_442487e6_0a46_11eb_be7c_525400578834row6_col13,#T_442487e6_0a46_11eb_be7c_525400578834row13_col6{\n",
        "            background-color:  #045e94;\n",
        "            color:  #f1f1f1;\n",
        "        }#T_442487e6_0a46_11eb_be7c_525400578834row6_col15,#T_442487e6_0a46_11eb_be7c_525400578834row15_col6{\n",
        "            background-color:  #5a9ec9;\n",
        "            color:  #000000;\n",
        "        }#T_442487e6_0a46_11eb_be7c_525400578834row6_col16,#T_442487e6_0a46_11eb_be7c_525400578834row7_col16,#T_442487e6_0a46_11eb_be7c_525400578834row16_col6,#T_442487e6_0a46_11eb_be7c_525400578834row16_col7{\n",
        "            background-color:  #045a8d;\n",
        "            color:  #f1f1f1;\n",
        "        }#T_442487e6_0a46_11eb_be7c_525400578834row7_col8,#T_442487e6_0a46_11eb_be7c_525400578834row8_col7{\n",
        "            background-color:  #056ead;\n",
        "            color:  #f1f1f1;\n",
        "        }#T_442487e6_0a46_11eb_be7c_525400578834row7_col9,#T_442487e6_0a46_11eb_be7c_525400578834row9_col7{\n",
        "            background-color:  #167bb6;\n",
        "            color:  #000000;\n",
        "        }#T_442487e6_0a46_11eb_be7c_525400578834row7_col10,#T_442487e6_0a46_11eb_be7c_525400578834row10_col7{\n",
        "            background-color:  #2987bc;\n",
        "            color:  #000000;\n",
        "        }#T_442487e6_0a46_11eb_be7c_525400578834row7_col11,#T_442487e6_0a46_11eb_be7c_525400578834row11_col7{\n",
        "            background-color:  #1b7eb7;\n",
        "            color:  #000000;\n",
        "        }#T_442487e6_0a46_11eb_be7c_525400578834row7_col12,#T_442487e6_0a46_11eb_be7c_525400578834row11_col16,#T_442487e6_0a46_11eb_be7c_525400578834row12_col7,#T_442487e6_0a46_11eb_be7c_525400578834row16_col11{\n",
        "            background-color:  #056caa;\n",
        "            color:  #f1f1f1;\n",
        "        }#T_442487e6_0a46_11eb_be7c_525400578834row7_col13,#T_442487e6_0a46_11eb_be7c_525400578834row8_col10,#T_442487e6_0a46_11eb_be7c_525400578834row10_col8,#T_442487e6_0a46_11eb_be7c_525400578834row13_col7{\n",
        "            background-color:  #0771b1;\n",
        "            color:  #f1f1f1;\n",
        "        }#T_442487e6_0a46_11eb_be7c_525400578834row7_col14,#T_442487e6_0a46_11eb_be7c_525400578834row14_col7{\n",
        "            background-color:  #6fa7ce;\n",
        "            color:  #000000;\n",
        "        }#T_442487e6_0a46_11eb_be7c_525400578834row8_col9,#T_442487e6_0a46_11eb_be7c_525400578834row9_col8,#T_442487e6_0a46_11eb_be7c_525400578834row10_col16,#T_442487e6_0a46_11eb_be7c_525400578834row16_col10{\n",
        "            background-color:  #046096;\n",
        "            color:  #f1f1f1;\n",
        "        }#T_442487e6_0a46_11eb_be7c_525400578834row8_col11,#T_442487e6_0a46_11eb_be7c_525400578834row11_col8{\n",
        "            background-color:  #056aa6;\n",
        "            color:  #f1f1f1;\n",
        "        }#T_442487e6_0a46_11eb_be7c_525400578834row8_col13,#T_442487e6_0a46_11eb_be7c_525400578834row13_col8{\n",
        "            background-color:  #2081b9;\n",
        "            color:  #000000;\n",
        "        }#T_442487e6_0a46_11eb_be7c_525400578834row8_col15,#T_442487e6_0a46_11eb_be7c_525400578834row15_col8{\n",
        "            background-color:  #a9bfdc;\n",
        "            color:  #000000;\n",
        "        }#T_442487e6_0a46_11eb_be7c_525400578834row8_col16,#T_442487e6_0a46_11eb_be7c_525400578834row16_col8{\n",
        "            background-color:  #045382;\n",
        "            color:  #f1f1f1;\n",
        "        }#T_442487e6_0a46_11eb_be7c_525400578834row9_col10,#T_442487e6_0a46_11eb_be7c_525400578834row10_col9{\n",
        "            background-color:  #187cb6;\n",
        "            color:  #000000;\n",
        "        }#T_442487e6_0a46_11eb_be7c_525400578834row9_col11,#T_442487e6_0a46_11eb_be7c_525400578834row11_col9{\n",
        "            background-color:  #0a73b2;\n",
        "            color:  #f1f1f1;\n",
        "        }#T_442487e6_0a46_11eb_be7c_525400578834row9_col12,#T_442487e6_0a46_11eb_be7c_525400578834row12_col9{\n",
        "            background-color:  #157ab5;\n",
        "            color:  #000000;\n",
        "        }#T_442487e6_0a46_11eb_be7c_525400578834row9_col13,#T_442487e6_0a46_11eb_be7c_525400578834row13_col9{\n",
        "            background-color:  #65a3cb;\n",
        "            color:  #000000;\n",
        "        }#T_442487e6_0a46_11eb_be7c_525400578834row9_col14,#T_442487e6_0a46_11eb_be7c_525400578834row14_col9{\n",
        "            background-color:  #bdc8e1;\n",
        "            color:  #000000;\n",
        "        }#T_442487e6_0a46_11eb_be7c_525400578834row9_col15,#T_442487e6_0a46_11eb_be7c_525400578834row15_col9{\n",
        "            background-color:  #e0dded;\n",
        "            color:  #000000;\n",
        "        }#T_442487e6_0a46_11eb_be7c_525400578834row9_col16,#T_442487e6_0a46_11eb_be7c_525400578834row16_col9{\n",
        "            background-color:  #046299;\n",
        "            color:  #f1f1f1;\n",
        "        }#T_442487e6_0a46_11eb_be7c_525400578834row10_col12,#T_442487e6_0a46_11eb_be7c_525400578834row12_col10{\n",
        "            background-color:  #328dbf;\n",
        "            color:  #000000;\n",
        "        }#T_442487e6_0a46_11eb_be7c_525400578834row10_col13,#T_442487e6_0a46_11eb_be7c_525400578834row13_col10{\n",
        "            background-color:  #5c9fc9;\n",
        "            color:  #000000;\n",
        "        }#T_442487e6_0a46_11eb_be7c_525400578834row11_col12,#T_442487e6_0a46_11eb_be7c_525400578834row12_col11{\n",
        "            background-color:  #4a98c5;\n",
        "            color:  #000000;\n",
        "        }#T_442487e6_0a46_11eb_be7c_525400578834row11_col13,#T_442487e6_0a46_11eb_be7c_525400578834row13_col11{\n",
        "            background-color:  #8fb4d6;\n",
        "            color:  #000000;\n",
        "        }#T_442487e6_0a46_11eb_be7c_525400578834row11_col15,#T_442487e6_0a46_11eb_be7c_525400578834row15_col11{\n",
        "            background-color:  #b9c6e0;\n",
        "            color:  #000000;\n",
        "        }#T_442487e6_0a46_11eb_be7c_525400578834row12_col13,#T_442487e6_0a46_11eb_be7c_525400578834row13_col12{\n",
        "            background-color:  #4094c3;\n",
        "            color:  #000000;\n",
        "        }#T_442487e6_0a46_11eb_be7c_525400578834row12_col14,#T_442487e6_0a46_11eb_be7c_525400578834row14_col12{\n",
        "            background-color:  #a4bcda;\n",
        "            color:  #000000;\n",
        "        }#T_442487e6_0a46_11eb_be7c_525400578834row12_col15,#T_442487e6_0a46_11eb_be7c_525400578834row15_col12{\n",
        "            background-color:  #97b7d7;\n",
        "            color:  #000000;\n",
        "        }#T_442487e6_0a46_11eb_be7c_525400578834row12_col16,#T_442487e6_0a46_11eb_be7c_525400578834row16_col12{\n",
        "            background-color:  #0569a5;\n",
        "            color:  #f1f1f1;\n",
        "        }#T_442487e6_0a46_11eb_be7c_525400578834row13_col15,#T_442487e6_0a46_11eb_be7c_525400578834row14_col15,#T_442487e6_0a46_11eb_be7c_525400578834row15_col13,#T_442487e6_0a46_11eb_be7c_525400578834row15_col14{\n",
        "            background-color:  #197db7;\n",
        "            color:  #000000;\n",
        "        }#T_442487e6_0a46_11eb_be7c_525400578834row13_col16,#T_442487e6_0a46_11eb_be7c_525400578834row16_col13{\n",
        "            background-color:  #0567a2;\n",
        "            color:  #f1f1f1;\n",
        "        }</style><table id=\"T_442487e6_0a46_11eb_be7c_525400578834\" ><thead>    <tr>        <th class=\"blank level0\" ></th>        <th class=\"col_heading level0 col0\" >Rt</th>        <th class=\"col_heading level0 col1\" >theta</th>        <th class=\"col_heading level0 col2\" >kappa</th>        <th class=\"col_heading level0 col3\" >rho</th>        <th class=\"col_heading level0 col4\" >sigma</th>        <th class=\"col_heading level0 col5\" >School_closing</th>        <th class=\"col_heading level0 col6\" >Workplace_closing</th>        <th class=\"col_heading level0 col7\" >Cancel_events</th>        <th class=\"col_heading level0 col8\" >Gatherings_restrictions</th>        <th class=\"col_heading level0 col9\" >Transport_closing</th>        <th class=\"col_heading level0 col10\" >Stay_home_restrictions</th>        <th class=\"col_heading level0 col11\" >Internal_movement_restrictions</th>        <th class=\"col_heading level0 col12\" >International_movement_restrictions</th>        <th class=\"col_heading level0 col13\" >Information_campaigns</th>        <th class=\"col_heading level0 col14\" >Testing_policy</th>        <th class=\"col_heading level0 col15\" >Contact_tracing</th>        <th class=\"col_heading level0 col16\" >Stringency_index</th>    </tr></thead><tbody>\n",
        "                <tr>\n",
        "                        <th id=\"T_442487e6_0a46_11eb_be7c_525400578834level0_row0\" class=\"row_heading level0 row0\" >Rt</th>\n",
        "                        <td id=\"T_442487e6_0a46_11eb_be7c_525400578834row0_col0\" class=\"data row0 col0\" >1.000000</td>\n",
        "                        <td id=\"T_442487e6_0a46_11eb_be7c_525400578834row0_col1\" class=\"data row0 col1\" >-0.140828</td>\n",
        "                        <td id=\"T_442487e6_0a46_11eb_be7c_525400578834row0_col2\" class=\"data row0 col2\" >-0.127568</td>\n",
        "                        <td id=\"T_442487e6_0a46_11eb_be7c_525400578834row0_col3\" class=\"data row0 col3\" >0.057534</td>\n",
        "                        <td id=\"T_442487e6_0a46_11eb_be7c_525400578834row0_col4\" class=\"data row0 col4\" >-0.267172</td>\n",
        "                        <td id=\"T_442487e6_0a46_11eb_be7c_525400578834row0_col5\" class=\"data row0 col5\" >-0.198132</td>\n",
        "                        <td id=\"T_442487e6_0a46_11eb_be7c_525400578834row0_col6\" class=\"data row0 col6\" >-0.096744</td>\n",
        "                        <td id=\"T_442487e6_0a46_11eb_be7c_525400578834row0_col7\" class=\"data row0 col7\" >-0.093285</td>\n",
        "                        <td id=\"T_442487e6_0a46_11eb_be7c_525400578834row0_col8\" class=\"data row0 col8\" >-0.118616</td>\n",
        "                        <td id=\"T_442487e6_0a46_11eb_be7c_525400578834row0_col9\" class=\"data row0 col9\" >-0.093756</td>\n",
        "                        <td id=\"T_442487e6_0a46_11eb_be7c_525400578834row0_col10\" class=\"data row0 col10\" >-0.163237</td>\n",
        "                        <td id=\"T_442487e6_0a46_11eb_be7c_525400578834row0_col11\" class=\"data row0 col11\" >-0.322555</td>\n",
        "                        <td id=\"T_442487e6_0a46_11eb_be7c_525400578834row0_col12\" class=\"data row0 col12\" >-0.021713</td>\n",
        "                        <td id=\"T_442487e6_0a46_11eb_be7c_525400578834row0_col13\" class=\"data row0 col13\" >-0.021522</td>\n",
        "                        <td id=\"T_442487e6_0a46_11eb_be7c_525400578834row0_col14\" class=\"data row0 col14\" >-0.231760</td>\n",
        "                        <td id=\"T_442487e6_0a46_11eb_be7c_525400578834row0_col15\" class=\"data row0 col15\" >-0.153800</td>\n",
        "                        <td id=\"T_442487e6_0a46_11eb_be7c_525400578834row0_col16\" class=\"data row0 col16\" >-0.122535</td>\n",
        "            </tr>\n",
        "            <tr>\n",
        "                        <th id=\"T_442487e6_0a46_11eb_be7c_525400578834level0_row1\" class=\"row_heading level0 row1\" >theta</th>\n",
        "                        <td id=\"T_442487e6_0a46_11eb_be7c_525400578834row1_col0\" class=\"data row1 col0\" >-0.140828</td>\n",
        "                        <td id=\"T_442487e6_0a46_11eb_be7c_525400578834row1_col1\" class=\"data row1 col1\" >1.000000</td>\n",
        "                        <td id=\"T_442487e6_0a46_11eb_be7c_525400578834row1_col2\" class=\"data row1 col2\" >0.953499</td>\n",
        "                        <td id=\"T_442487e6_0a46_11eb_be7c_525400578834row1_col3\" class=\"data row1 col3\" >0.730260</td>\n",
        "                        <td id=\"T_442487e6_0a46_11eb_be7c_525400578834row1_col4\" class=\"data row1 col4\" >0.070528</td>\n",
        "                        <td id=\"T_442487e6_0a46_11eb_be7c_525400578834row1_col5\" class=\"data row1 col5\" >-0.135695</td>\n",
        "                        <td id=\"T_442487e6_0a46_11eb_be7c_525400578834row1_col6\" class=\"data row1 col6\" >-0.143812</td>\n",
        "                        <td id=\"T_442487e6_0a46_11eb_be7c_525400578834row1_col7\" class=\"data row1 col7\" >-0.111723</td>\n",
        "                        <td id=\"T_442487e6_0a46_11eb_be7c_525400578834row1_col8\" class=\"data row1 col8\" >-0.065626</td>\n",
        "                        <td id=\"T_442487e6_0a46_11eb_be7c_525400578834row1_col9\" class=\"data row1 col9\" >-0.064352</td>\n",
        "                        <td id=\"T_442487e6_0a46_11eb_be7c_525400578834row1_col10\" class=\"data row1 col10\" >0.241989</td>\n",
        "                        <td id=\"T_442487e6_0a46_11eb_be7c_525400578834row1_col11\" class=\"data row1 col11\" >0.191877</td>\n",
        "                        <td id=\"T_442487e6_0a46_11eb_be7c_525400578834row1_col12\" class=\"data row1 col12\" >0.163534</td>\n",
        "                        <td id=\"T_442487e6_0a46_11eb_be7c_525400578834row1_col13\" class=\"data row1 col13\" >-0.372517</td>\n",
        "                        <td id=\"T_442487e6_0a46_11eb_be7c_525400578834row1_col14\" class=\"data row1 col14\" >-0.277900</td>\n",
        "                        <td id=\"T_442487e6_0a46_11eb_be7c_525400578834row1_col15\" class=\"data row1 col15\" >-0.088606</td>\n",
        "                        <td id=\"T_442487e6_0a46_11eb_be7c_525400578834row1_col16\" class=\"data row1 col16\" >-0.025115</td>\n",
        "            </tr>\n",
        "            <tr>\n",
        "                        <th id=\"T_442487e6_0a46_11eb_be7c_525400578834level0_row2\" class=\"row_heading level0 row2\" >kappa</th>\n",
        "                        <td id=\"T_442487e6_0a46_11eb_be7c_525400578834row2_col0\" class=\"data row2 col0\" >-0.127568</td>\n",
        "                        <td id=\"T_442487e6_0a46_11eb_be7c_525400578834row2_col1\" class=\"data row2 col1\" >0.953499</td>\n",
        "                        <td id=\"T_442487e6_0a46_11eb_be7c_525400578834row2_col2\" class=\"data row2 col2\" >1.000000</td>\n",
        "                        <td id=\"T_442487e6_0a46_11eb_be7c_525400578834row2_col3\" class=\"data row2 col3\" >0.718998</td>\n",
        "                        <td id=\"T_442487e6_0a46_11eb_be7c_525400578834row2_col4\" class=\"data row2 col4\" >0.030660</td>\n",
        "                        <td id=\"T_442487e6_0a46_11eb_be7c_525400578834row2_col5\" class=\"data row2 col5\" >-0.135227</td>\n",
        "                        <td id=\"T_442487e6_0a46_11eb_be7c_525400578834row2_col6\" class=\"data row2 col6\" >-0.129493</td>\n",
        "                        <td id=\"T_442487e6_0a46_11eb_be7c_525400578834row2_col7\" class=\"data row2 col7\" >-0.108864</td>\n",
        "                        <td id=\"T_442487e6_0a46_11eb_be7c_525400578834row2_col8\" class=\"data row2 col8\" >-0.065279</td>\n",
        "                        <td id=\"T_442487e6_0a46_11eb_be7c_525400578834row2_col9\" class=\"data row2 col9\" >-0.070153</td>\n",
        "                        <td id=\"T_442487e6_0a46_11eb_be7c_525400578834row2_col10\" class=\"data row2 col10\" >0.262206</td>\n",
        "                        <td id=\"T_442487e6_0a46_11eb_be7c_525400578834row2_col11\" class=\"data row2 col11\" >0.192239</td>\n",
        "                        <td id=\"T_442487e6_0a46_11eb_be7c_525400578834row2_col12\" class=\"data row2 col12\" >0.211126</td>\n",
        "                        <td id=\"T_442487e6_0a46_11eb_be7c_525400578834row2_col13\" class=\"data row2 col13\" >-0.347005</td>\n",
        "                        <td id=\"T_442487e6_0a46_11eb_be7c_525400578834row2_col14\" class=\"data row2 col14\" >-0.192992</td>\n",
        "                        <td id=\"T_442487e6_0a46_11eb_be7c_525400578834row2_col15\" class=\"data row2 col15\" >-0.027604</td>\n",
        "                        <td id=\"T_442487e6_0a46_11eb_be7c_525400578834row2_col16\" class=\"data row2 col16\" >-0.025875</td>\n",
        "            </tr>\n",
        "            <tr>\n",
        "                        <th id=\"T_442487e6_0a46_11eb_be7c_525400578834level0_row3\" class=\"row_heading level0 row3\" >rho</th>\n",
        "                        <td id=\"T_442487e6_0a46_11eb_be7c_525400578834row3_col0\" class=\"data row3 col0\" >0.057534</td>\n",
        "                        <td id=\"T_442487e6_0a46_11eb_be7c_525400578834row3_col1\" class=\"data row3 col1\" >0.730260</td>\n",
        "                        <td id=\"T_442487e6_0a46_11eb_be7c_525400578834row3_col2\" class=\"data row3 col2\" >0.718998</td>\n",
        "                        <td id=\"T_442487e6_0a46_11eb_be7c_525400578834row3_col3\" class=\"data row3 col3\" >1.000000</td>\n",
        "                        <td id=\"T_442487e6_0a46_11eb_be7c_525400578834row3_col4\" class=\"data row3 col4\" >0.152813</td>\n",
        "                        <td id=\"T_442487e6_0a46_11eb_be7c_525400578834row3_col5\" class=\"data row3 col5\" >-0.108434</td>\n",
        "                        <td id=\"T_442487e6_0a46_11eb_be7c_525400578834row3_col6\" class=\"data row3 col6\" >-0.155220</td>\n",
        "                        <td id=\"T_442487e6_0a46_11eb_be7c_525400578834row3_col7\" class=\"data row3 col7\" >-0.048864</td>\n",
        "                        <td id=\"T_442487e6_0a46_11eb_be7c_525400578834row3_col8\" class=\"data row3 col8\" >-0.000272</td>\n",
        "                        <td id=\"T_442487e6_0a46_11eb_be7c_525400578834row3_col9\" class=\"data row3 col9\" >-0.022447</td>\n",
        "                        <td id=\"T_442487e6_0a46_11eb_be7c_525400578834row3_col10\" class=\"data row3 col10\" >0.210896</td>\n",
        "                        <td id=\"T_442487e6_0a46_11eb_be7c_525400578834row3_col11\" class=\"data row3 col11\" >0.208447</td>\n",
        "                        <td id=\"T_442487e6_0a46_11eb_be7c_525400578834row3_col12\" class=\"data row3 col12\" >0.140039</td>\n",
        "                        <td id=\"T_442487e6_0a46_11eb_be7c_525400578834row3_col13\" class=\"data row3 col13\" >-0.416198</td>\n",
        "                        <td id=\"T_442487e6_0a46_11eb_be7c_525400578834row3_col14\" class=\"data row3 col14\" >-0.411802</td>\n",
        "                        <td id=\"T_442487e6_0a46_11eb_be7c_525400578834row3_col15\" class=\"data row3 col15\" >-0.262203</td>\n",
        "                        <td id=\"T_442487e6_0a46_11eb_be7c_525400578834row3_col16\" class=\"data row3 col16\" >-0.009171</td>\n",
        "            </tr>\n",
        "            <tr>\n",
        "                        <th id=\"T_442487e6_0a46_11eb_be7c_525400578834level0_row4\" class=\"row_heading level0 row4\" >sigma</th>\n",
        "                        <td id=\"T_442487e6_0a46_11eb_be7c_525400578834row4_col0\" class=\"data row4 col0\" >-0.267172</td>\n",
        "                        <td id=\"T_442487e6_0a46_11eb_be7c_525400578834row4_col1\" class=\"data row4 col1\" >0.070528</td>\n",
        "                        <td id=\"T_442487e6_0a46_11eb_be7c_525400578834row4_col2\" class=\"data row4 col2\" >0.030660</td>\n",
        "                        <td id=\"T_442487e6_0a46_11eb_be7c_525400578834row4_col3\" class=\"data row4 col3\" >0.152813</td>\n",
        "                        <td id=\"T_442487e6_0a46_11eb_be7c_525400578834row4_col4\" class=\"data row4 col4\" >1.000000</td>\n",
        "                        <td id=\"T_442487e6_0a46_11eb_be7c_525400578834row4_col5\" class=\"data row4 col5\" >0.284395</td>\n",
        "                        <td id=\"T_442487e6_0a46_11eb_be7c_525400578834row4_col6\" class=\"data row4 col6\" >0.076971</td>\n",
        "                        <td id=\"T_442487e6_0a46_11eb_be7c_525400578834row4_col7\" class=\"data row4 col7\" >0.292849</td>\n",
        "                        <td id=\"T_442487e6_0a46_11eb_be7c_525400578834row4_col8\" class=\"data row4 col8\" >0.128395</td>\n",
        "                        <td id=\"T_442487e6_0a46_11eb_be7c_525400578834row4_col9\" class=\"data row4 col9\" >0.182805</td>\n",
        "                        <td id=\"T_442487e6_0a46_11eb_be7c_525400578834row4_col10\" class=\"data row4 col10\" >0.203053</td>\n",
        "                        <td id=\"T_442487e6_0a46_11eb_be7c_525400578834row4_col11\" class=\"data row4 col11\" >0.274126</td>\n",
        "                        <td id=\"T_442487e6_0a46_11eb_be7c_525400578834row4_col12\" class=\"data row4 col12\" >0.107805</td>\n",
        "                        <td id=\"T_442487e6_0a46_11eb_be7c_525400578834row4_col13\" class=\"data row4 col13\" >0.021572</td>\n",
        "                        <td id=\"T_442487e6_0a46_11eb_be7c_525400578834row4_col14\" class=\"data row4 col14\" >-0.036265</td>\n",
        "                        <td id=\"T_442487e6_0a46_11eb_be7c_525400578834row4_col15\" class=\"data row4 col15\" >0.093286</td>\n",
        "                        <td id=\"T_442487e6_0a46_11eb_be7c_525400578834row4_col16\" class=\"data row4 col16\" >0.249526</td>\n",
        "            </tr>\n",
        "            <tr>\n",
        "                        <th id=\"T_442487e6_0a46_11eb_be7c_525400578834level0_row5\" class=\"row_heading level0 row5\" >School_closing</th>\n",
        "                        <td id=\"T_442487e6_0a46_11eb_be7c_525400578834row5_col0\" class=\"data row5 col0\" >-0.198132</td>\n",
        "                        <td id=\"T_442487e6_0a46_11eb_be7c_525400578834row5_col1\" class=\"data row5 col1\" >-0.135695</td>\n",
        "                        <td id=\"T_442487e6_0a46_11eb_be7c_525400578834row5_col2\" class=\"data row5 col2\" >-0.135227</td>\n",
        "                        <td id=\"T_442487e6_0a46_11eb_be7c_525400578834row5_col3\" class=\"data row5 col3\" >-0.108434</td>\n",
        "                        <td id=\"T_442487e6_0a46_11eb_be7c_525400578834row5_col4\" class=\"data row5 col4\" >0.284395</td>\n",
        "                        <td id=\"T_442487e6_0a46_11eb_be7c_525400578834row5_col5\" class=\"data row5 col5\" >1.000000</td>\n",
        "                        <td id=\"T_442487e6_0a46_11eb_be7c_525400578834row5_col6\" class=\"data row5 col6\" >0.706349</td>\n",
        "                        <td id=\"T_442487e6_0a46_11eb_be7c_525400578834row5_col7\" class=\"data row5 col7\" >0.724347</td>\n",
        "                        <td id=\"T_442487e6_0a46_11eb_be7c_525400578834row5_col8\" class=\"data row5 col8\" >0.605681</td>\n",
        "                        <td id=\"T_442487e6_0a46_11eb_be7c_525400578834row5_col9\" class=\"data row5 col9\" >0.542925</td>\n",
        "                        <td id=\"T_442487e6_0a46_11eb_be7c_525400578834row5_col10\" class=\"data row5 col10\" >0.597895</td>\n",
        "                        <td id=\"T_442487e6_0a46_11eb_be7c_525400578834row5_col11\" class=\"data row5 col11\" >0.521426</td>\n",
        "                        <td id=\"T_442487e6_0a46_11eb_be7c_525400578834row5_col12\" class=\"data row5 col12\" >0.444279</td>\n",
        "                        <td id=\"T_442487e6_0a46_11eb_be7c_525400578834row5_col13\" class=\"data row5 col13\" >0.631301</td>\n",
        "                        <td id=\"T_442487e6_0a46_11eb_be7c_525400578834row5_col14\" class=\"data row5 col14\" >0.404373</td>\n",
        "                        <td id=\"T_442487e6_0a46_11eb_be7c_525400578834row5_col15\" class=\"data row5 col15\" >0.216094</td>\n",
        "                        <td id=\"T_442487e6_0a46_11eb_be7c_525400578834row5_col16\" class=\"data row5 col16\" >0.808448</td>\n",
        "            </tr>\n",
        "            <tr>\n",
        "                        <th id=\"T_442487e6_0a46_11eb_be7c_525400578834level0_row6\" class=\"row_heading level0 row6\" >Workplace_closing</th>\n",
        "                        <td id=\"T_442487e6_0a46_11eb_be7c_525400578834row6_col0\" class=\"data row6 col0\" >-0.096744</td>\n",
        "                        <td id=\"T_442487e6_0a46_11eb_be7c_525400578834row6_col1\" class=\"data row6 col1\" >-0.143812</td>\n",
        "                        <td id=\"T_442487e6_0a46_11eb_be7c_525400578834row6_col2\" class=\"data row6 col2\" >-0.129493</td>\n",
        "                        <td id=\"T_442487e6_0a46_11eb_be7c_525400578834row6_col3\" class=\"data row6 col3\" >-0.155220</td>\n",
        "                        <td id=\"T_442487e6_0a46_11eb_be7c_525400578834row6_col4\" class=\"data row6 col4\" >0.076971</td>\n",
        "                        <td id=\"T_442487e6_0a46_11eb_be7c_525400578834row6_col5\" class=\"data row6 col5\" >0.706349</td>\n",
        "                        <td id=\"T_442487e6_0a46_11eb_be7c_525400578834row6_col6\" class=\"data row6 col6\" >1.000000</td>\n",
        "                        <td id=\"T_442487e6_0a46_11eb_be7c_525400578834row6_col7\" class=\"data row6 col7\" >0.614629</td>\n",
        "                        <td id=\"T_442487e6_0a46_11eb_be7c_525400578834row6_col8\" class=\"data row6 col8\" >0.609970</td>\n",
        "                        <td id=\"T_442487e6_0a46_11eb_be7c_525400578834row6_col9\" class=\"data row6 col9\" >0.508536</td>\n",
        "                        <td id=\"T_442487e6_0a46_11eb_be7c_525400578834row6_col10\" class=\"data row6 col10\" >0.608314</td>\n",
        "                        <td id=\"T_442487e6_0a46_11eb_be7c_525400578834row6_col11\" class=\"data row6 col11\" >0.417334</td>\n",
        "                        <td id=\"T_442487e6_0a46_11eb_be7c_525400578834row6_col12\" class=\"data row6 col12\" >0.427902</td>\n",
        "                        <td id=\"T_442487e6_0a46_11eb_be7c_525400578834row6_col13\" class=\"data row6 col13\" >0.784704</td>\n",
        "                        <td id=\"T_442487e6_0a46_11eb_be7c_525400578834row6_col14\" class=\"data row6 col14\" >0.441439</td>\n",
        "                        <td id=\"T_442487e6_0a46_11eb_be7c_525400578834row6_col15\" class=\"data row6 col15\" >0.367750</td>\n",
        "                        <td id=\"T_442487e6_0a46_11eb_be7c_525400578834row6_col16\" class=\"data row6 col16\" >0.817783</td>\n",
        "            </tr>\n",
        "            <tr>\n",
        "                        <th id=\"T_442487e6_0a46_11eb_be7c_525400578834level0_row7\" class=\"row_heading level0 row7\" >Cancel_events</th>\n",
        "                        <td id=\"T_442487e6_0a46_11eb_be7c_525400578834row7_col0\" class=\"data row7 col0\" >-0.093285</td>\n",
        "                        <td id=\"T_442487e6_0a46_11eb_be7c_525400578834row7_col1\" class=\"data row7 col1\" >-0.111723</td>\n",
        "                        <td id=\"T_442487e6_0a46_11eb_be7c_525400578834row7_col2\" class=\"data row7 col2\" >-0.108864</td>\n",
        "                        <td id=\"T_442487e6_0a46_11eb_be7c_525400578834row7_col3\" class=\"data row7 col3\" >-0.048864</td>\n",
        "                        <td id=\"T_442487e6_0a46_11eb_be7c_525400578834row7_col4\" class=\"data row7 col4\" >0.292849</td>\n",
        "                        <td id=\"T_442487e6_0a46_11eb_be7c_525400578834row7_col5\" class=\"data row7 col5\" >0.724347</td>\n",
        "                        <td id=\"T_442487e6_0a46_11eb_be7c_525400578834row7_col6\" class=\"data row7 col6\" >0.614629</td>\n",
        "                        <td id=\"T_442487e6_0a46_11eb_be7c_525400578834row7_col7\" class=\"data row7 col7\" >1.000000</td>\n",
        "                        <td id=\"T_442487e6_0a46_11eb_be7c_525400578834row7_col8\" class=\"data row7 col8\" >0.661950</td>\n",
        "                        <td id=\"T_442487e6_0a46_11eb_be7c_525400578834row7_col9\" class=\"data row7 col9\" >0.580118</td>\n",
        "                        <td id=\"T_442487e6_0a46_11eb_be7c_525400578834row7_col10\" class=\"data row7 col10\" >0.517276</td>\n",
        "                        <td id=\"T_442487e6_0a46_11eb_be7c_525400578834row7_col11\" class=\"data row7 col11\" >0.567568</td>\n",
        "                        <td id=\"T_442487e6_0a46_11eb_be7c_525400578834row7_col12\" class=\"data row7 col12\" >0.674156</td>\n",
        "                        <td id=\"T_442487e6_0a46_11eb_be7c_525400578834row7_col13\" class=\"data row7 col13\" >0.639993</td>\n",
        "                        <td id=\"T_442487e6_0a46_11eb_be7c_525400578834row7_col14\" class=\"data row7 col14\" >0.305885</td>\n",
        "                        <td id=\"T_442487e6_0a46_11eb_be7c_525400578834row7_col15\" class=\"data row7 col15\" >0.260773</td>\n",
        "                        <td id=\"T_442487e6_0a46_11eb_be7c_525400578834row7_col16\" class=\"data row7 col16\" >0.817806</td>\n",
        "            </tr>\n",
        "            <tr>\n",
        "                        <th id=\"T_442487e6_0a46_11eb_be7c_525400578834level0_row8\" class=\"row_heading level0 row8\" >Gatherings_restrictions</th>\n",
        "                        <td id=\"T_442487e6_0a46_11eb_be7c_525400578834row8_col0\" class=\"data row8 col0\" >-0.118616</td>\n",
        "                        <td id=\"T_442487e6_0a46_11eb_be7c_525400578834row8_col1\" class=\"data row8 col1\" >-0.065626</td>\n",
        "                        <td id=\"T_442487e6_0a46_11eb_be7c_525400578834row8_col2\" class=\"data row8 col2\" >-0.065279</td>\n",
        "                        <td id=\"T_442487e6_0a46_11eb_be7c_525400578834row8_col3\" class=\"data row8 col3\" >-0.000272</td>\n",
        "                        <td id=\"T_442487e6_0a46_11eb_be7c_525400578834row8_col4\" class=\"data row8 col4\" >0.128395</td>\n",
        "                        <td id=\"T_442487e6_0a46_11eb_be7c_525400578834row8_col5\" class=\"data row8 col5\" >0.605681</td>\n",
        "                        <td id=\"T_442487e6_0a46_11eb_be7c_525400578834row8_col6\" class=\"data row8 col6\" >0.609970</td>\n",
        "                        <td id=\"T_442487e6_0a46_11eb_be7c_525400578834row8_col7\" class=\"data row8 col7\" >0.661950</td>\n",
        "                        <td id=\"T_442487e6_0a46_11eb_be7c_525400578834row8_col8\" class=\"data row8 col8\" >1.000000</td>\n",
        "                        <td id=\"T_442487e6_0a46_11eb_be7c_525400578834row8_col9\" class=\"data row8 col9\" >0.777762</td>\n",
        "                        <td id=\"T_442487e6_0a46_11eb_be7c_525400578834row8_col10\" class=\"data row8 col10\" >0.639610</td>\n",
        "                        <td id=\"T_442487e6_0a46_11eb_be7c_525400578834row8_col11\" class=\"data row8 col11\" >0.691250</td>\n",
        "                        <td id=\"T_442487e6_0a46_11eb_be7c_525400578834row8_col12\" class=\"data row8 col12\" >0.600253</td>\n",
        "                        <td id=\"T_442487e6_0a46_11eb_be7c_525400578834row8_col13\" class=\"data row8 col13\" >0.551401</td>\n",
        "                        <td id=\"T_442487e6_0a46_11eb_be7c_525400578834row8_col14\" class=\"data row8 col14\" >0.237912</td>\n",
        "                        <td id=\"T_442487e6_0a46_11eb_be7c_525400578834row8_col15\" class=\"data row8 col15\" >0.098735</td>\n",
        "                        <td id=\"T_442487e6_0a46_11eb_be7c_525400578834row8_col16\" class=\"data row8 col16\" >0.859330</td>\n",
        "            </tr>\n",
        "            <tr>\n",
        "                        <th id=\"T_442487e6_0a46_11eb_be7c_525400578834level0_row9\" class=\"row_heading level0 row9\" >Transport_closing</th>\n",
        "                        <td id=\"T_442487e6_0a46_11eb_be7c_525400578834row9_col0\" class=\"data row9 col0\" >-0.093756</td>\n",
        "                        <td id=\"T_442487e6_0a46_11eb_be7c_525400578834row9_col1\" class=\"data row9 col1\" >-0.064352</td>\n",
        "                        <td id=\"T_442487e6_0a46_11eb_be7c_525400578834row9_col2\" class=\"data row9 col2\" >-0.070153</td>\n",
        "                        <td id=\"T_442487e6_0a46_11eb_be7c_525400578834row9_col3\" class=\"data row9 col3\" >-0.022447</td>\n",
        "                        <td id=\"T_442487e6_0a46_11eb_be7c_525400578834row9_col4\" class=\"data row9 col4\" >0.182805</td>\n",
        "                        <td id=\"T_442487e6_0a46_11eb_be7c_525400578834row9_col5\" class=\"data row9 col5\" >0.542925</td>\n",
        "                        <td id=\"T_442487e6_0a46_11eb_be7c_525400578834row9_col6\" class=\"data row9 col6\" >0.508536</td>\n",
        "                        <td id=\"T_442487e6_0a46_11eb_be7c_525400578834row9_col7\" class=\"data row9 col7\" >0.580118</td>\n",
        "                        <td id=\"T_442487e6_0a46_11eb_be7c_525400578834row9_col8\" class=\"data row9 col8\" >0.777762</td>\n",
        "                        <td id=\"T_442487e6_0a46_11eb_be7c_525400578834row9_col9\" class=\"data row9 col9\" >1.000000</td>\n",
        "                        <td id=\"T_442487e6_0a46_11eb_be7c_525400578834row9_col10\" class=\"data row9 col10\" >0.576455</td>\n",
        "                        <td id=\"T_442487e6_0a46_11eb_be7c_525400578834row9_col11\" class=\"data row9 col11\" >0.627540</td>\n",
        "                        <td id=\"T_442487e6_0a46_11eb_be7c_525400578834row9_col12\" class=\"data row9 col12\" >0.590584</td>\n",
        "                        <td id=\"T_442487e6_0a46_11eb_be7c_525400578834row9_col13\" class=\"data row9 col13\" >0.331153</td>\n",
        "                        <td id=\"T_442487e6_0a46_11eb_be7c_525400578834row9_col14\" class=\"data row9 col14\" >0.020147</td>\n",
        "                        <td id=\"T_442487e6_0a46_11eb_be7c_525400578834row9_col15\" class=\"data row9 col15\" >-0.160562</td>\n",
        "                        <td id=\"T_442487e6_0a46_11eb_be7c_525400578834row9_col16\" class=\"data row9 col16\" >0.760093</td>\n",
        "            </tr>\n",
        "            <tr>\n",
        "                        <th id=\"T_442487e6_0a46_11eb_be7c_525400578834level0_row10\" class=\"row_heading level0 row10\" >Stay_home_restrictions</th>\n",
        "                        <td id=\"T_442487e6_0a46_11eb_be7c_525400578834row10_col0\" class=\"data row10 col0\" >-0.163237</td>\n",
        "                        <td id=\"T_442487e6_0a46_11eb_be7c_525400578834row10_col1\" class=\"data row10 col1\" >0.241989</td>\n",
        "                        <td id=\"T_442487e6_0a46_11eb_be7c_525400578834row10_col2\" class=\"data row10 col2\" >0.262206</td>\n",
        "                        <td id=\"T_442487e6_0a46_11eb_be7c_525400578834row10_col3\" class=\"data row10 col3\" >0.210896</td>\n",
        "                        <td id=\"T_442487e6_0a46_11eb_be7c_525400578834row10_col4\" class=\"data row10 col4\" >0.203053</td>\n",
        "                        <td id=\"T_442487e6_0a46_11eb_be7c_525400578834row10_col5\" class=\"data row10 col5\" >0.597895</td>\n",
        "                        <td id=\"T_442487e6_0a46_11eb_be7c_525400578834row10_col6\" class=\"data row10 col6\" >0.608314</td>\n",
        "                        <td id=\"T_442487e6_0a46_11eb_be7c_525400578834row10_col7\" class=\"data row10 col7\" >0.517276</td>\n",
        "                        <td id=\"T_442487e6_0a46_11eb_be7c_525400578834row10_col8\" class=\"data row10 col8\" >0.639610</td>\n",
        "                        <td id=\"T_442487e6_0a46_11eb_be7c_525400578834row10_col9\" class=\"data row10 col9\" >0.576455</td>\n",
        "                        <td id=\"T_442487e6_0a46_11eb_be7c_525400578834row10_col10\" class=\"data row10 col10\" >1.000000</td>\n",
        "                        <td id=\"T_442487e6_0a46_11eb_be7c_525400578834row10_col11\" class=\"data row10 col11\" >0.730377</td>\n",
        "                        <td id=\"T_442487e6_0a46_11eb_be7c_525400578834row10_col12\" class=\"data row10 col12\" >0.484993</td>\n",
        "                        <td id=\"T_442487e6_0a46_11eb_be7c_525400578834row10_col13\" class=\"data row10 col13\" >0.362807</td>\n",
        "                        <td id=\"T_442487e6_0a46_11eb_be7c_525400578834row10_col14\" class=\"data row10 col14\" >0.274259</td>\n",
        "                        <td id=\"T_442487e6_0a46_11eb_be7c_525400578834row10_col15\" class=\"data row10 col15\" >0.260467</td>\n",
        "                        <td id=\"T_442487e6_0a46_11eb_be7c_525400578834row10_col16\" class=\"data row10 col16\" >0.773221</td>\n",
        "            </tr>\n",
        "            <tr>\n",
        "                        <th id=\"T_442487e6_0a46_11eb_be7c_525400578834level0_row11\" class=\"row_heading level0 row11\" >Internal_movement_restrictions</th>\n",
        "                        <td id=\"T_442487e6_0a46_11eb_be7c_525400578834row11_col0\" class=\"data row11 col0\" >-0.322555</td>\n",
        "                        <td id=\"T_442487e6_0a46_11eb_be7c_525400578834row11_col1\" class=\"data row11 col1\" >0.191877</td>\n",
        "                        <td id=\"T_442487e6_0a46_11eb_be7c_525400578834row11_col2\" class=\"data row11 col2\" >0.192239</td>\n",
        "                        <td id=\"T_442487e6_0a46_11eb_be7c_525400578834row11_col3\" class=\"data row11 col3\" >0.208447</td>\n",
        "                        <td id=\"T_442487e6_0a46_11eb_be7c_525400578834row11_col4\" class=\"data row11 col4\" >0.274126</td>\n",
        "                        <td id=\"T_442487e6_0a46_11eb_be7c_525400578834row11_col5\" class=\"data row11 col5\" >0.521426</td>\n",
        "                        <td id=\"T_442487e6_0a46_11eb_be7c_525400578834row11_col6\" class=\"data row11 col6\" >0.417334</td>\n",
        "                        <td id=\"T_442487e6_0a46_11eb_be7c_525400578834row11_col7\" class=\"data row11 col7\" >0.567568</td>\n",
        "                        <td id=\"T_442487e6_0a46_11eb_be7c_525400578834row11_col8\" class=\"data row11 col8\" >0.691250</td>\n",
        "                        <td id=\"T_442487e6_0a46_11eb_be7c_525400578834row11_col9\" class=\"data row11 col9\" >0.627540</td>\n",
        "                        <td id=\"T_442487e6_0a46_11eb_be7c_525400578834row11_col10\" class=\"data row11 col10\" >0.730377</td>\n",
        "                        <td id=\"T_442487e6_0a46_11eb_be7c_525400578834row11_col11\" class=\"data row11 col11\" >1.000000</td>\n",
        "                        <td id=\"T_442487e6_0a46_11eb_be7c_525400578834row11_col12\" class=\"data row11 col12\" >0.411509</td>\n",
        "                        <td id=\"T_442487e6_0a46_11eb_be7c_525400578834row11_col13\" class=\"data row11 col13\" >0.193041</td>\n",
        "                        <td id=\"T_442487e6_0a46_11eb_be7c_525400578834row11_col14\" class=\"data row11 col14\" >0.274491</td>\n",
        "                        <td id=\"T_442487e6_0a46_11eb_be7c_525400578834row11_col15\" class=\"data row11 col15\" >0.036297</td>\n",
        "                        <td id=\"T_442487e6_0a46_11eb_be7c_525400578834row11_col16\" class=\"data row11 col16\" >0.674935</td>\n",
        "            </tr>\n",
        "            <tr>\n",
        "                        <th id=\"T_442487e6_0a46_11eb_be7c_525400578834level0_row12\" class=\"row_heading level0 row12\" >International_movement_restrictions</th>\n",
        "                        <td id=\"T_442487e6_0a46_11eb_be7c_525400578834row12_col0\" class=\"data row12 col0\" >-0.021713</td>\n",
        "                        <td id=\"T_442487e6_0a46_11eb_be7c_525400578834row12_col1\" class=\"data row12 col1\" >0.163534</td>\n",
        "                        <td id=\"T_442487e6_0a46_11eb_be7c_525400578834row12_col2\" class=\"data row12 col2\" >0.211126</td>\n",
        "                        <td id=\"T_442487e6_0a46_11eb_be7c_525400578834row12_col3\" class=\"data row12 col3\" >0.140039</td>\n",
        "                        <td id=\"T_442487e6_0a46_11eb_be7c_525400578834row12_col4\" class=\"data row12 col4\" >0.107805</td>\n",
        "                        <td id=\"T_442487e6_0a46_11eb_be7c_525400578834row12_col5\" class=\"data row12 col5\" >0.444279</td>\n",
        "                        <td id=\"T_442487e6_0a46_11eb_be7c_525400578834row12_col6\" class=\"data row12 col6\" >0.427902</td>\n",
        "                        <td id=\"T_442487e6_0a46_11eb_be7c_525400578834row12_col7\" class=\"data row12 col7\" >0.674156</td>\n",
        "                        <td id=\"T_442487e6_0a46_11eb_be7c_525400578834row12_col8\" class=\"data row12 col8\" >0.600253</td>\n",
        "                        <td id=\"T_442487e6_0a46_11eb_be7c_525400578834row12_col9\" class=\"data row12 col9\" >0.590584</td>\n",
        "                        <td id=\"T_442487e6_0a46_11eb_be7c_525400578834row12_col10\" class=\"data row12 col10\" >0.484993</td>\n",
        "                        <td id=\"T_442487e6_0a46_11eb_be7c_525400578834row12_col11\" class=\"data row12 col11\" >0.411509</td>\n",
        "                        <td id=\"T_442487e6_0a46_11eb_be7c_525400578834row12_col12\" class=\"data row12 col12\" >1.000000</td>\n",
        "                        <td id=\"T_442487e6_0a46_11eb_be7c_525400578834row12_col13\" class=\"data row12 col13\" >0.437970</td>\n",
        "                        <td id=\"T_442487e6_0a46_11eb_be7c_525400578834row12_col14\" class=\"data row12 col14\" >0.124677</td>\n",
        "                        <td id=\"T_442487e6_0a46_11eb_be7c_525400578834row12_col15\" class=\"data row12 col15\" >0.169585</td>\n",
        "                        <td id=\"T_442487e6_0a46_11eb_be7c_525400578834row12_col16\" class=\"data row12 col16\" >0.697293</td>\n",
        "            </tr>\n",
        "            <tr>\n",
        "                        <th id=\"T_442487e6_0a46_11eb_be7c_525400578834level0_row13\" class=\"row_heading level0 row13\" >Information_campaigns</th>\n",
        "                        <td id=\"T_442487e6_0a46_11eb_be7c_525400578834row13_col0\" class=\"data row13 col0\" >-0.021522</td>\n",
        "                        <td id=\"T_442487e6_0a46_11eb_be7c_525400578834row13_col1\" class=\"data row13 col1\" >-0.372517</td>\n",
        "                        <td id=\"T_442487e6_0a46_11eb_be7c_525400578834row13_col2\" class=\"data row13 col2\" >-0.347005</td>\n",
        "                        <td id=\"T_442487e6_0a46_11eb_be7c_525400578834row13_col3\" class=\"data row13 col3\" >-0.416198</td>\n",
        "                        <td id=\"T_442487e6_0a46_11eb_be7c_525400578834row13_col4\" class=\"data row13 col4\" >0.021572</td>\n",
        "                        <td id=\"T_442487e6_0a46_11eb_be7c_525400578834row13_col5\" class=\"data row13 col5\" >0.631301</td>\n",
        "                        <td id=\"T_442487e6_0a46_11eb_be7c_525400578834row13_col6\" class=\"data row13 col6\" >0.784704</td>\n",
        "                        <td id=\"T_442487e6_0a46_11eb_be7c_525400578834row13_col7\" class=\"data row13 col7\" >0.639993</td>\n",
        "                        <td id=\"T_442487e6_0a46_11eb_be7c_525400578834row13_col8\" class=\"data row13 col8\" >0.551401</td>\n",
        "                        <td id=\"T_442487e6_0a46_11eb_be7c_525400578834row13_col9\" class=\"data row13 col9\" >0.331153</td>\n",
        "                        <td id=\"T_442487e6_0a46_11eb_be7c_525400578834row13_col10\" class=\"data row13 col10\" >0.362807</td>\n",
        "                        <td id=\"T_442487e6_0a46_11eb_be7c_525400578834row13_col11\" class=\"data row13 col11\" >0.193041</td>\n",
        "                        <td id=\"T_442487e6_0a46_11eb_be7c_525400578834row13_col12\" class=\"data row13 col12\" >0.437970</td>\n",
        "                        <td id=\"T_442487e6_0a46_11eb_be7c_525400578834row13_col13\" class=\"data row13 col13\" >1.000000</td>\n",
        "                        <td id=\"T_442487e6_0a46_11eb_be7c_525400578834row13_col14\" class=\"data row13 col14\" >0.541855</td>\n",
        "                        <td id=\"T_442487e6_0a46_11eb_be7c_525400578834row13_col15\" class=\"data row13 col15\" >0.569202</td>\n",
        "                        <td id=\"T_442487e6_0a46_11eb_be7c_525400578834row13_col16\" class=\"data row13 col16\" >0.716887</td>\n",
        "            </tr>\n",
        "            <tr>\n",
        "                        <th id=\"T_442487e6_0a46_11eb_be7c_525400578834level0_row14\" class=\"row_heading level0 row14\" >Testing_policy</th>\n",
        "                        <td id=\"T_442487e6_0a46_11eb_be7c_525400578834row14_col0\" class=\"data row14 col0\" >-0.231760</td>\n",
        "                        <td id=\"T_442487e6_0a46_11eb_be7c_525400578834row14_col1\" class=\"data row14 col1\" >-0.277900</td>\n",
        "                        <td id=\"T_442487e6_0a46_11eb_be7c_525400578834row14_col2\" class=\"data row14 col2\" >-0.192992</td>\n",
        "                        <td id=\"T_442487e6_0a46_11eb_be7c_525400578834row14_col3\" class=\"data row14 col3\" >-0.411802</td>\n",
        "                        <td id=\"T_442487e6_0a46_11eb_be7c_525400578834row14_col4\" class=\"data row14 col4\" >-0.036265</td>\n",
        "                        <td id=\"T_442487e6_0a46_11eb_be7c_525400578834row14_col5\" class=\"data row14 col5\" >0.404373</td>\n",
        "                        <td id=\"T_442487e6_0a46_11eb_be7c_525400578834row14_col6\" class=\"data row14 col6\" >0.441439</td>\n",
        "                        <td id=\"T_442487e6_0a46_11eb_be7c_525400578834row14_col7\" class=\"data row14 col7\" >0.305885</td>\n",
        "                        <td id=\"T_442487e6_0a46_11eb_be7c_525400578834row14_col8\" class=\"data row14 col8\" >0.237912</td>\n",
        "                        <td id=\"T_442487e6_0a46_11eb_be7c_525400578834row14_col9\" class=\"data row14 col9\" >0.020147</td>\n",
        "                        <td id=\"T_442487e6_0a46_11eb_be7c_525400578834row14_col10\" class=\"data row14 col10\" >0.274259</td>\n",
        "                        <td id=\"T_442487e6_0a46_11eb_be7c_525400578834row14_col11\" class=\"data row14 col11\" >0.274491</td>\n",
        "                        <td id=\"T_442487e6_0a46_11eb_be7c_525400578834row14_col12\" class=\"data row14 col12\" >0.124677</td>\n",
        "                        <td id=\"T_442487e6_0a46_11eb_be7c_525400578834row14_col13\" class=\"data row14 col13\" >0.541855</td>\n",
        "                        <td id=\"T_442487e6_0a46_11eb_be7c_525400578834row14_col14\" class=\"data row14 col14\" >1.000000</td>\n",
        "                        <td id=\"T_442487e6_0a46_11eb_be7c_525400578834row14_col15\" class=\"data row14 col15\" >0.568973</td>\n",
        "                        <td id=\"T_442487e6_0a46_11eb_be7c_525400578834row14_col16\" class=\"data row14 col16\" >0.285877</td>\n",
        "            </tr>\n",
        "            <tr>\n",
        "                        <th id=\"T_442487e6_0a46_11eb_be7c_525400578834level0_row15\" class=\"row_heading level0 row15\" >Contact_tracing</th>\n",
        "                        <td id=\"T_442487e6_0a46_11eb_be7c_525400578834row15_col0\" class=\"data row15 col0\" >-0.153800</td>\n",
        "                        <td id=\"T_442487e6_0a46_11eb_be7c_525400578834row15_col1\" class=\"data row15 col1\" >-0.088606</td>\n",
        "                        <td id=\"T_442487e6_0a46_11eb_be7c_525400578834row15_col2\" class=\"data row15 col2\" >-0.027604</td>\n",
        "                        <td id=\"T_442487e6_0a46_11eb_be7c_525400578834row15_col3\" class=\"data row15 col3\" >-0.262203</td>\n",
        "                        <td id=\"T_442487e6_0a46_11eb_be7c_525400578834row15_col4\" class=\"data row15 col4\" >0.093286</td>\n",
        "                        <td id=\"T_442487e6_0a46_11eb_be7c_525400578834row15_col5\" class=\"data row15 col5\" >0.216094</td>\n",
        "                        <td id=\"T_442487e6_0a46_11eb_be7c_525400578834row15_col6\" class=\"data row15 col6\" >0.367750</td>\n",
        "                        <td id=\"T_442487e6_0a46_11eb_be7c_525400578834row15_col7\" class=\"data row15 col7\" >0.260773</td>\n",
        "                        <td id=\"T_442487e6_0a46_11eb_be7c_525400578834row15_col8\" class=\"data row15 col8\" >0.098735</td>\n",
        "                        <td id=\"T_442487e6_0a46_11eb_be7c_525400578834row15_col9\" class=\"data row15 col9\" >-0.160562</td>\n",
        "                        <td id=\"T_442487e6_0a46_11eb_be7c_525400578834row15_col10\" class=\"data row15 col10\" >0.260467</td>\n",
        "                        <td id=\"T_442487e6_0a46_11eb_be7c_525400578834row15_col11\" class=\"data row15 col11\" >0.036297</td>\n",
        "                        <td id=\"T_442487e6_0a46_11eb_be7c_525400578834row15_col12\" class=\"data row15 col12\" >0.169585</td>\n",
        "                        <td id=\"T_442487e6_0a46_11eb_be7c_525400578834row15_col13\" class=\"data row15 col13\" >0.569202</td>\n",
        "                        <td id=\"T_442487e6_0a46_11eb_be7c_525400578834row15_col14\" class=\"data row15 col14\" >0.568973</td>\n",
        "                        <td id=\"T_442487e6_0a46_11eb_be7c_525400578834row15_col15\" class=\"data row15 col15\" >1.000000</td>\n",
        "                        <td id=\"T_442487e6_0a46_11eb_be7c_525400578834row15_col16\" class=\"data row15 col16\" >0.283299</td>\n",
        "            </tr>\n",
        "            <tr>\n",
        "                        <th id=\"T_442487e6_0a46_11eb_be7c_525400578834level0_row16\" class=\"row_heading level0 row16\" >Stringency_index</th>\n",
        "                        <td id=\"T_442487e6_0a46_11eb_be7c_525400578834row16_col0\" class=\"data row16 col0\" >-0.122535</td>\n",
        "                        <td id=\"T_442487e6_0a46_11eb_be7c_525400578834row16_col1\" class=\"data row16 col1\" >-0.025115</td>\n",
        "                        <td id=\"T_442487e6_0a46_11eb_be7c_525400578834row16_col2\" class=\"data row16 col2\" >-0.025875</td>\n",
        "                        <td id=\"T_442487e6_0a46_11eb_be7c_525400578834row16_col3\" class=\"data row16 col3\" >-0.009171</td>\n",
        "                        <td id=\"T_442487e6_0a46_11eb_be7c_525400578834row16_col4\" class=\"data row16 col4\" >0.249526</td>\n",
        "                        <td id=\"T_442487e6_0a46_11eb_be7c_525400578834row16_col5\" class=\"data row16 col5\" >0.808448</td>\n",
        "                        <td id=\"T_442487e6_0a46_11eb_be7c_525400578834row16_col6\" class=\"data row16 col6\" >0.817783</td>\n",
        "                        <td id=\"T_442487e6_0a46_11eb_be7c_525400578834row16_col7\" class=\"data row16 col7\" >0.817806</td>\n",
        "                        <td id=\"T_442487e6_0a46_11eb_be7c_525400578834row16_col8\" class=\"data row16 col8\" >0.859330</td>\n",
        "                        <td id=\"T_442487e6_0a46_11eb_be7c_525400578834row16_col9\" class=\"data row16 col9\" >0.760093</td>\n",
        "                        <td id=\"T_442487e6_0a46_11eb_be7c_525400578834row16_col10\" class=\"data row16 col10\" >0.773221</td>\n",
        "                        <td id=\"T_442487e6_0a46_11eb_be7c_525400578834row16_col11\" class=\"data row16 col11\" >0.674935</td>\n",
        "                        <td id=\"T_442487e6_0a46_11eb_be7c_525400578834row16_col12\" class=\"data row16 col12\" >0.697293</td>\n",
        "                        <td id=\"T_442487e6_0a46_11eb_be7c_525400578834row16_col13\" class=\"data row16 col13\" >0.716887</td>\n",
        "                        <td id=\"T_442487e6_0a46_11eb_be7c_525400578834row16_col14\" class=\"data row16 col14\" >0.285877</td>\n",
        "                        <td id=\"T_442487e6_0a46_11eb_be7c_525400578834row16_col15\" class=\"data row16 col15\" >0.283299</td>\n",
        "                        <td id=\"T_442487e6_0a46_11eb_be7c_525400578834row16_col16\" class=\"data row16 col16\" >1.000000</td>\n",
        "            </tr>\n",
        "    </tbody></table>"
       ],
       "output_type": "pyout",
       "prompt_number": 21,
       "text": [
        "<pandas.io.formats.style.Styler at 0x7f594e4bf100>"
       ]
      }
     ],
     "prompt_number": 21
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "# Scatter plot of Stringency index and Rt\n",
      "df = track_df.copy()\n",
      "sns.scatterplot(data=df, x=\"Stringency_index\", y=\"Rt\", hue=\"Country\", legend=\"brief\", marker=\"+\")\n",
      "bbox_to_anchor=(1.02, 0)\n",
      "bbox_loc=\"lower left\"\n",
      "plt.legend(bbox_to_anchor=bbox_to_anchor, loc=bbox_loc, borderaxespad=0)\n",
      "plt.title(\"Relationship of Stringency index and reproduction number\")\n",
      "plt.ylabel(\"Reproduction number\")\n",
      "plt.xlabel(\"Stringency index\")\n",
      "plt.show()"
     ],
     "language": "python",
     "metadata": {},
     "outputs": [
      {
       "output_type": "display_data",
       "png": "\n",
       "text": [
        "<Figure size 432x288 with 1 Axes>"
       ]
      }
     ],
     "prompt_number": 22
    }
   ],
   "metadata": {}
  }
 ]
}
