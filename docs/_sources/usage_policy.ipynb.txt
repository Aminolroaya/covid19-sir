{
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3.8.2 64-bit ('.venv': venv)",
   "name": "python_defaultSpec_1597669925034"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.8.2-final"
  },
  "name": ""
 },
 "nbformat": 3,
 "nbformat_minor": 0,
 "worksheets": [
  {
   "cells": [
    {
     "cell_type": "markdown",
     "metadata": {},
     "source": [
      "# Usage (details: policy measures)\n",
      "Here, we will analyse the relationship of policy measures and parameter values of SIR-derived ODE models. Policy measures are tracked by [Oxford Covid-19 Government Response Tracker (OxCGRT)](https://github.com/OxCGRT/covid-policy-tracker)."
     ]
    },
    {
     "cell_type": "heading",
     "level": 2,
     "metadata": {},
     "source": [
      "Preparation"
     ]
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "# Standard users\n",
      "# !pip install covsirphy\n",
      "# Developers (Note: this notebook is in example directory)\n",
      "import os\n",
      "os.chdir(\"../\")"
     ],
     "language": "python",
     "metadata": {},
     "outputs": [],
     "prompt_number": 1
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "from pprint import pprint"
     ],
     "language": "python",
     "metadata": {},
     "outputs": [],
     "prompt_number": 2
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "import covsirphy as cs\n",
      "cs.__version__"
     ],
     "language": "python",
     "metadata": {},
     "outputs": [
      {
       "output_type": "pyout",
       "prompt_number": 3,
       "text": [
        "'2.10.0-eta.new.269.319.fix.307.309.refactor.291'"
       ]
      }
     ],
     "prompt_number": 3
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "# Standard users and developers\n",
      "data_loader = cs.DataLoader(\"input\")\n",
      "# The number of cases (JHU style)\n",
      "jhu_data = data_loader.jhu(verbose=False)\n",
      "# Population in each country\n",
      "population_data = data_loader.population(verbose=False)\n",
      "# Government Response Tracker (OxCGRT)\n",
      "oxcgrt_data = data_loader.oxcgrt(verbose=False)\n",
      "# Description/citation\n",
      "print(oxcgrt_data.citation)"
     ],
     "language": "python",
     "metadata": {
      "tags": []
     },
     "outputs": [
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "(Secondary source) Guidotti, E., Ardia, D., (2020), \"COVID-19 Data Hub\", Journal of Open Source Software 5(51):2376, doi: 10.21105/joss.02376.\n"
       ]
      }
     ],
     "prompt_number": 4
    },
    {
     "cell_type": "markdown",
     "metadata": {},
     "source": [
      "## Class for policy measure analysis\n",
      "We will `PolicyMeasures` class to find relationship of policy measures and parameter values of SIR-derived ODE models."
     ]
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "# Create analyser with tau value 360 [min] (can be changed)\n",
      "analyser = cs.PolicyMeasures(jhu_data, population_data, oxcgrt_data, tau=360)\n",
      "# The number of registerd countries\n",
      "len(analyser.countries)"
     ],
     "language": "python",
     "metadata": {
      "tags": []
     },
     "outputs": [
      {
       "output_type": "pyout",
       "prompt_number": 5,
       "text": [
        "184"
       ]
      }
     ],
     "prompt_number": 5
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "# We can get Scenario instance for detailed scenario analysis\n",
      "type(analyser.scenario(\"Japan\"))"
     ],
     "language": "python",
     "metadata": {},
     "outputs": [
      {
       "output_type": "pyout",
       "prompt_number": 6,
       "text": [
        "covsirphy.analysis.scenario.Scenario"
       ]
      }
     ],
     "prompt_number": 6
    },
    {
     "cell_type": "markdown",
     "metadata": {},
     "source": [
      "## Set phases with S-R trend analysis\n",
      "We will perform S-R trend analysis to set phases in all countries. Countries which do not have **14th phases** will be un-registered for the next analysis. This number will be adjusted for your analysis."
     ]
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "# Show the number of phases of all countries\n",
      "analyser.trend()\n",
      "pprint(analyser.phase_len(), compact=True)"
     ],
     "language": "python",
     "metadata": {},
     "outputs": [
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "{4: ['Fiji'],\n",
        " 5: ['Dominica', 'Liechtenstein', 'Tunisia'],\n",
        " 6: ['Saint Vincent and the Grenadines', 'Brunei', 'Poland', 'Slovenia',\n",
        "     'Slovakia', 'Sri Lanka', 'Georgia', 'Tanzania'],\n",
        " 7: ['Seychelles', 'Luxembourg', 'Ireland', 'Grenada', 'Antigua and Barbuda',\n",
        "     'Saint Lucia', 'Monaco', 'Andorra', 'Croatia', 'Papua New Guinea',\n",
        "     'Austria', 'Hungary', 'Lithuania', 'Switzerland', 'Jordan'],\n",
        " 8: ['Central African Republic', 'Nicaragua', 'Iceland', 'Portugal',\n",
        "     'Sao Tome and Principe', 'Kazakhstan', 'Angola', 'Botswana', 'Cyprus',\n",
        "     'Myanmar', 'Malawi', 'Madagascar', 'Malaysia', 'Cambodia', 'Nepal',\n",
        "     'Czech Republic'],\n",
        " 9: ['Burkina Faso', 'Tajikistan', 'Djibouti', 'Eritrea', 'Jamaica',\n",
        "     'Guinea-Bissau', 'Romania', 'Rwanda', 'Cameroon', 'South Sudan', 'Israel',\n",
        "     'Comoros', 'Malta', 'Bermuda', 'Yemen', 'Mongolia', 'Zimbabwe', 'Gambia'],\n",
        " 10: ['Bahamas', 'Denmark', 'Montenegro', 'Italy', 'Libya', 'Ghana',\n",
        "      'Trinidad and Tobago', 'New Zealand', 'Mauritania', 'Bulgaria', 'Belgium',\n",
        "      'Bhutan', 'Estonia', 'Ukraine', 'Lebanon', 'Lesotho', 'Chile', 'Zambia',\n",
        "      'Australia', 'Spain', 'Namibia', 'Barbados', 'Ecuador', 'Greece',\n",
        "      'Belize', 'Burundi', 'Senegal', 'Uganda', 'Uruguay'],\n",
        " 11: ['Guatemala', 'Korea, South', 'Saudi Arabia', 'Guyana', 'Niger',\n",
        "      'Afghanistan', 'Paraguay', 'South Africa', 'Brazil', 'Cuba',\n",
        "      'Philippines', 'Morocco', 'Kyrgyzstan', 'Vietnam', 'Costa Rica',\n",
        "      'Armenia', 'Serbia', 'Sierra Leone', 'Chad', 'Suriname', 'Moldova',\n",
        "      'Benin', 'Kenya', 'North Macedonia', 'Mauritius', 'Venezuela', 'Sudan',\n",
        "      'China', 'Thailand', 'Cape Verde', 'Mozambique', 'Indonesia', 'Mali'],\n",
        " 12: ['Singapore', 'Equatorial Guinea', 'Ethiopia', 'Algeria', 'Bahrain',\n",
        "      'Bosnia and Herzegovina', 'Taiwan', 'Nigeria', 'Peru', 'Argentina',\n",
        "      'Colombia', 'Iraq', 'Togo', 'Panama', 'Liberia', 'Maldives', 'Finland',\n",
        "      'Oman', 'Congo', 'Guinea', 'Germany', 'Gabon', 'El Salvador', 'India',\n",
        "      'Azerbaijan', 'United Arab Emirates', 'Uzbekistan', 'Mexico',\n",
        "      'Bangladesh', 'Palestine', 'Qatar', 'Albania', 'France', 'Syria'],\n",
        " 13: ['Japan', 'Iran', 'Kosovo', 'Norway', 'Swaziland', 'Dominican Republic',\n",
        "      'Canada', 'Turkey', 'Pakistan', 'Bolivia', 'Kuwait', 'Haiti',\n",
        "      'San Marino', 'United States'],\n",
        " 14: ['Honduras', 'Russia', 'Somalia', 'Latvia'],\n",
        " 15: ['Egypt', 'Belarus']}\n"
       ]
      }
     ],
     "prompt_number": 7
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "# Set phases with S-R trend analysis\n",
      "analyser.trend(min_len=14)\n",
      "# The number of countries\n",
      "len(analyser.countries)"
     ],
     "language": "python",
     "metadata": {},
     "outputs": [
      {
       "output_type": "pyout",
       "prompt_number": 8,
       "text": [
        "6"
       ]
      }
     ],
     "prompt_number": 8
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "phase_len_dict = analyser.phase_len()\n",
      "pprint(phase_len_dict, compact=True)"
     ],
     "language": "python",
     "metadata": {
      "tags": []
     },
     "outputs": [
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "{14: ['Honduras', 'Russia', 'Somalia', 'Latvia'], 15: ['Egypt', 'Belarus']}\n"
       ]
      }
     ],
     "prompt_number": 9
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "# Here, only show the countries which have the most phases\n",
      "countries_show = max(phase_len_dict.items(), key=lambda x: x[0])[1]\n",
      "# Show summary\n",
      "analyser.summary(countries=countries_show)"
     ],
     "language": "python",
     "metadata": {
      "tags": []
     },
     "outputs": [
      {
       "html": [
        "<div>\n",
        "<style scoped>\n",
        "    .dataframe tbody tr th:only-of-type {\n",
        "        vertical-align: middle;\n",
        "    }\n",
        "\n",
        "    .dataframe tbody tr th {\n",
        "        vertical-align: top;\n",
        "    }\n",
        "\n",
        "    .dataframe thead th {\n",
        "        text-align: right;\n",
        "    }\n",
        "</style>\n",
        "<table border=\"1\" class=\"dataframe\">\n",
        "  <thead>\n",
        "    <tr style=\"text-align: right;\">\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th>Type</th>\n",
        "      <th>Start</th>\n",
        "      <th>End</th>\n",
        "      <th>Population</th>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>Country</th>\n",
        "      <th>Phase</th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "    </tr>\n",
        "  </thead>\n",
        "  <tbody>\n",
        "    <tr>\n",
        "      <th rowspan=\"15\" valign=\"top\">Egypt</th>\n",
        "      <th>0th</th>\n",
        "      <td>Past</td>\n",
        "      <td>28Feb2020</td>\n",
        "      <td>02May2020</td>\n",
        "      <td>98423595</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>1st</th>\n",
        "      <td>Past</td>\n",
        "      <td>03May2020</td>\n",
        "      <td>17May2020</td>\n",
        "      <td>98423595</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>2nd</th>\n",
        "      <td>Past</td>\n",
        "      <td>18May2020</td>\n",
        "      <td>28May2020</td>\n",
        "      <td>98423595</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>3rd</th>\n",
        "      <td>Past</td>\n",
        "      <td>29May2020</td>\n",
        "      <td>03Jun2020</td>\n",
        "      <td>98423595</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>4th</th>\n",
        "      <td>Past</td>\n",
        "      <td>04Jun2020</td>\n",
        "      <td>13Jun2020</td>\n",
        "      <td>98423595</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>5th</th>\n",
        "      <td>Past</td>\n",
        "      <td>14Jun2020</td>\n",
        "      <td>22Jun2020</td>\n",
        "      <td>98423595</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>6th</th>\n",
        "      <td>Past</td>\n",
        "      <td>23Jun2020</td>\n",
        "      <td>02Jul2020</td>\n",
        "      <td>98423595</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>7th</th>\n",
        "      <td>Past</td>\n",
        "      <td>03Jul2020</td>\n",
        "      <td>13Jul2020</td>\n",
        "      <td>98423595</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>8th</th>\n",
        "      <td>Past</td>\n",
        "      <td>14Jul2020</td>\n",
        "      <td>20Jul2020</td>\n",
        "      <td>98423595</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>9th</th>\n",
        "      <td>Past</td>\n",
        "      <td>21Jul2020</td>\n",
        "      <td>27Jul2020</td>\n",
        "      <td>98423595</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>10th</th>\n",
        "      <td>Past</td>\n",
        "      <td>28Jul2020</td>\n",
        "      <td>10Aug2020</td>\n",
        "      <td>98423595</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>11th</th>\n",
        "      <td>Past</td>\n",
        "      <td>11Aug2020</td>\n",
        "      <td>27Aug2020</td>\n",
        "      <td>98423595</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>12th</th>\n",
        "      <td>Past</td>\n",
        "      <td>28Aug2020</td>\n",
        "      <td>12Sep2020</td>\n",
        "      <td>98423595</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>13th</th>\n",
        "      <td>Past</td>\n",
        "      <td>13Sep2020</td>\n",
        "      <td>10Oct2020</td>\n",
        "      <td>98423595</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>14th</th>\n",
        "      <td>Past</td>\n",
        "      <td>11Oct2020</td>\n",
        "      <td>10Nov2020</td>\n",
        "      <td>98423595</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th rowspan=\"15\" valign=\"top\">Belarus</th>\n",
        "      <th>0th</th>\n",
        "      <td>Past</td>\n",
        "      <td>09Mar2020</td>\n",
        "      <td>26Apr2020</td>\n",
        "      <td>9483499</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>1st</th>\n",
        "      <td>Past</td>\n",
        "      <td>27Apr2020</td>\n",
        "      <td>08May2020</td>\n",
        "      <td>9483499</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>2nd</th>\n",
        "      <td>Past</td>\n",
        "      <td>09May2020</td>\n",
        "      <td>15May2020</td>\n",
        "      <td>9483499</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>3rd</th>\n",
        "      <td>Past</td>\n",
        "      <td>16May2020</td>\n",
        "      <td>23May2020</td>\n",
        "      <td>9483499</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>4th</th>\n",
        "      <td>Past</td>\n",
        "      <td>24May2020</td>\n",
        "      <td>30May2020</td>\n",
        "      <td>9483499</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>5th</th>\n",
        "      <td>Past</td>\n",
        "      <td>31May2020</td>\n",
        "      <td>07Jun2020</td>\n",
        "      <td>9483499</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>6th</th>\n",
        "      <td>Past</td>\n",
        "      <td>08Jun2020</td>\n",
        "      <td>14Jun2020</td>\n",
        "      <td>9483499</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>7th</th>\n",
        "      <td>Past</td>\n",
        "      <td>15Jun2020</td>\n",
        "      <td>23Jun2020</td>\n",
        "      <td>9483499</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>8th</th>\n",
        "      <td>Past</td>\n",
        "      <td>24Jun2020</td>\n",
        "      <td>11Jul2020</td>\n",
        "      <td>9483499</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>9th</th>\n",
        "      <td>Past</td>\n",
        "      <td>12Jul2020</td>\n",
        "      <td>21Aug2020</td>\n",
        "      <td>9483499</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>10th</th>\n",
        "      <td>Past</td>\n",
        "      <td>22Aug2020</td>\n",
        "      <td>24Sep2020</td>\n",
        "      <td>9483499</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>11th</th>\n",
        "      <td>Past</td>\n",
        "      <td>25Sep2020</td>\n",
        "      <td>13Oct2020</td>\n",
        "      <td>9483499</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>12th</th>\n",
        "      <td>Past</td>\n",
        "      <td>14Oct2020</td>\n",
        "      <td>24Oct2020</td>\n",
        "      <td>9483499</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>13th</th>\n",
        "      <td>Past</td>\n",
        "      <td>25Oct2020</td>\n",
        "      <td>31Oct2020</td>\n",
        "      <td>9483499</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>14th</th>\n",
        "      <td>Past</td>\n",
        "      <td>01Nov2020</td>\n",
        "      <td>10Nov2020</td>\n",
        "      <td>9483499</td>\n",
        "    </tr>\n",
        "  </tbody>\n",
        "</table>\n",
        "</div>"
       ],
       "output_type": "pyout",
       "prompt_number": 10,
       "text": [
        "               Type      Start        End  Population\n",
        "Country Phase                                        \n",
        "Egypt   0th    Past  28Feb2020  02May2020    98423595\n",
        "        1st    Past  03May2020  17May2020    98423595\n",
        "        2nd    Past  18May2020  28May2020    98423595\n",
        "        3rd    Past  29May2020  03Jun2020    98423595\n",
        "        4th    Past  04Jun2020  13Jun2020    98423595\n",
        "        5th    Past  14Jun2020  22Jun2020    98423595\n",
        "        6th    Past  23Jun2020  02Jul2020    98423595\n",
        "        7th    Past  03Jul2020  13Jul2020    98423595\n",
        "        8th    Past  14Jul2020  20Jul2020    98423595\n",
        "        9th    Past  21Jul2020  27Jul2020    98423595\n",
        "        10th   Past  28Jul2020  10Aug2020    98423595\n",
        "        11th   Past  11Aug2020  27Aug2020    98423595\n",
        "        12th   Past  28Aug2020  12Sep2020    98423595\n",
        "        13th   Past  13Sep2020  10Oct2020    98423595\n",
        "        14th   Past  11Oct2020  10Nov2020    98423595\n",
        "Belarus 0th    Past  09Mar2020  26Apr2020     9483499\n",
        "        1st    Past  27Apr2020  08May2020     9483499\n",
        "        2nd    Past  09May2020  15May2020     9483499\n",
        "        3rd    Past  16May2020  23May2020     9483499\n",
        "        4th    Past  24May2020  30May2020     9483499\n",
        "        5th    Past  31May2020  07Jun2020     9483499\n",
        "        6th    Past  08Jun2020  14Jun2020     9483499\n",
        "        7th    Past  15Jun2020  23Jun2020     9483499\n",
        "        8th    Past  24Jun2020  11Jul2020     9483499\n",
        "        9th    Past  12Jul2020  21Aug2020     9483499\n",
        "        10th   Past  22Aug2020  24Sep2020     9483499\n",
        "        11th   Past  25Sep2020  13Oct2020     9483499\n",
        "        12th   Past  14Oct2020  24Oct2020     9483499\n",
        "        13th   Past  25Oct2020  31Oct2020     9483499\n",
        "        14th   Past  01Nov2020  10Nov2020     9483499"
       ]
      }
     ],
     "prompt_number": 10
    },
    {
     "cell_type": "markdown",
     "metadata": {},
     "source": [
      "## Parameter estimation\n",
      "we will estimate the parameter values with SIR-derived ODE models in each country."
     ]
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "# Parameter estimation with SIR-F model\n",
      "analyser.estimate(cs.SIRF)"
     ],
     "language": "python",
     "metadata": {
      "tags": []
     },
     "outputs": [
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n",
        "<SIR-F model: parameter estimation>\n",
        "Running optimization with 4 CPUs...\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tEGY,  8th phase (14Jul2020 - 20Jul2020): finished  243 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tHND,  3rd phase (14Jul2020 - 23Jul2020): finished  242 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tHND,  8th phase (12Sep2020 - 20Sep2020): finished  323 trials in 0 min 15 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tSOM,  0th phase (31Mar2020 - 03May2020): finished 1179 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tRUS,  1st phase (05May2020 - 16May2020): finished 1194 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tBLR,  5th phase (31May2020 - 07Jun2020): finished 1185 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tEGY,  3rd phase (29May2020 - 03Jun2020): finished  246 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tHND, 10th phase (30Sep2020 - 08Oct2020): finished  239 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tHND,  4th phase (24Jul2020 - 04Aug2020): finished 1211 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tEGY,  9th phase (21Jul2020 - 27Jul2020): finished  126 trials in 0 min  5 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tHND, 11th phase (09Oct2020 - 17Oct2020): finished  645 trials in 0 min 30 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tEGY, 10th phase (28Jul2020 - 10Aug2020): finished  232 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tSOM,  3rd phase (22May2020 - 30May2020): finished 1188 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tSOM,  7th phase (24Jun2020 - 04Jul2020): finished 1179 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tLVA,  8th phase (06Aug2020 - 27Aug2020): finished 1190 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tHND, 13th phase (27Oct2020 - 10Nov2020): finished  626 trials in 0 min 35 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tLVA, 11th phase (29Sep2020 - 22Oct2020): finished 1160 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tBLR,  8th phase (24Jun2020 - 11Jul2020): finished 1051 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tLVA,  5th phase (16May2020 - 28May2020): finished 1296 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tHND,  5th phase (05Aug2020 - 20Aug2020): finished 1182 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tRUS,  6th phase (18Jul2020 - 06Aug2020): finished 1186 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tRUS,  4th phase (14Jun2020 - 29Jun2020): finished 1197 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tEGY,  4th phase (04Jun2020 - 13Jun2020): finished  540 trials in 0 min 25 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tLVA,  0th phase (10Mar2020 - 05Apr2020): finished 1310 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tEGY,  0th phase (28Feb2020 - 02May2020): finished 1184 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tLVA,  9th phase (28Aug2020 - 19Sep2020): finished 1307 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tRUS, 10th phase (05Oct2020 - 16Oct2020): finished 1195 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tBLR,  4th phase (24May2020 - 30May2020): finished  665 trials in 0 min 30 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tRUS,  2nd phase (17May2020 - 30May2020): finished 1200 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tBLR, 10th phase (22Aug2020 - 24Sep2020): finished 1192 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tLVA,  3rd phase (28Apr2020 - 06May2020): finished 1276 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tRUS,  0th phase (12Feb2020 - 04May2020): finished 1108 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tRUS,  8th phase (29Aug2020 - 18Sep2020): finished 1119 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tHND,  9th phase (21Sep2020 - 29Sep2020): finished 1037 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tBLR, 14th phase (01Nov2020 - 10Nov2020): finished  857 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tEGY,  2nd phase (18May2020 - 28May2020): finished  866 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tSOM,  9th phase (21Jul2020 - 24Aug2020): finished  840 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tEGY, 11th phase (11Aug2020 - 27Aug2020): finished  152 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tEGY,  7th phase (03Jul2020 - 13Jul2020): finished  241 trials in 0 min 15 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tBLR,  3rd phase (16May2020 - 23May2020): finished  867 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tRUS,  5th phase (30Jun2020 - 17Jul2020): finished  890 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tHND,  0th phase (28Mar2020 - 13Jun2020): finished  837 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tRUS, 13th phase (02Nov2020 - 10Nov2020): finished  873 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tEGY, 14th phase (11Oct2020 - 10Nov2020): finished  884 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tEGY, 12th phase (28Aug2020 - 12Sep2020): finished  421 trials in 0 min 25 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tRUS, 12th phase (25Oct2020 - 01Nov2020): finished  701 trials in 0 min 45 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tSOM, 11th phase (19Sep2020 - 30Sep2020): finished 1074 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tRUS,  7th phase (07Aug2020 - 28Aug2020): finished  816 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tBLR,  6th phase (08Jun2020 - 14Jun2020): finished  653 trials in 0 min 50 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tBLR, 11th phase (25Sep2020 - 13Oct2020): finished  695 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tBLR, 12th phase (14Oct2020 - 24Oct2020): finished  721 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tLVA, 10th phase (20Sep2020 - 28Sep2020): finished  819 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tLVA,  1st phase (06Apr2020 - 20Apr2020): finished  813 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tSOM,  6th phase (17Jun2020 - 23Jun2020): finished  813 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tEGY, 13th phase (13Sep2020 - 10Oct2020): finished  559 trials in 0 min 45 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tEGY,  1st phase (03May2020 - 17May2020): finished  731 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tRUS,  3rd phase (31May2020 - 13Jun2020): finished  715 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tHND,  7th phase (30Aug2020 - 11Sep2020): finished  692 trials in 1 min  1 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tLVA, 12th phase (23Oct2020 - 01Nov2020): finished  827 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tSOM, 13th phase (29Oct2020 - 10Nov2020): finished  953 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tEGY,  6th phase (23Jun2020 - 02Jul2020): finished  208 trials in 0 min 15 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tSOM, 10th phase (25Aug2020 - 18Sep2020): finished  857 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tLVA,  4th phase (07May2020 - 15May2020): finished  861 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tRUS,  9th phase (19Sep2020 - 04Oct2020): finished  749 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tBLR,  2nd phase (09May2020 - 15May2020): finished  697 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tSOM,  4th phase (31May2020 - 09Jun2020): finished  702 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tSOM,  8th phase (05Jul2020 - 20Jul2020): finished  661 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tBLR,  1st phase (27Apr2020 - 08May2020): finished  659 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tBLR,  7th phase (15Jun2020 - 23Jun2020): finished  644 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tLVA,  2nd phase (21Apr2020 - 27Apr2020): finished  706 trials in 1 min  1 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tSOM,  5th phase (10Jun2020 - 16Jun2020): finished  600 trials in 0 min 55 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tHND, 12th phase (18Oct2020 - 26Oct2020): finished  645 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tLVA,  6th phase (29May2020 - 09Jul2020): finished  671 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tRUS, 11th phase (17Oct2020 - 24Oct2020): finished  690 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tHND,  1st phase (14Jun2020 - 30Jun2020): finished  707 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tEGY,  5th phase (14Jun2020 - 22Jun2020): finished  273 trials in 0 min 20 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tSOM, 12th phase (01Oct2020 - 28Oct2020): finished  902 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tSOM,  2nd phase (14May2020 - 21May2020): finished  550 trials in 0 min 40 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tHND,  6th phase (21Aug2020 - 29Aug2020): finished  970 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tHND,  2nd phase (01Jul2020 - 13Jul2020): finished  346 trials in 0 min 15 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tLVA,  7th phase (10Jul2020 - 05Aug2020): finished 1220 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tBLR,  9th phase (12Jul2020 - 21Aug2020): finished  799 trials in 0 min 45 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tBLR,  0th phase (09Mar2020 - 26Apr2020): finished 1048 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tBLR, 13th phase (25Oct2020 - 31Oct2020): finished  153 trials in 0 min  5 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tSOM,  1st phase (04May2020 - 13May2020): finished 1246 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "Completed optimization. Total: 20 min  0 sec\n"
       ]
      }
     ],
     "prompt_number": 11
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "# Show summary\n",
      "analyser.summary(countries=countries_show)"
     ],
     "language": "python",
     "metadata": {},
     "outputs": [
      {
       "html": [
        "<div>\n",
        "<style scoped>\n",
        "    .dataframe tbody tr th:only-of-type {\n",
        "        vertical-align: middle;\n",
        "    }\n",
        "\n",
        "    .dataframe tbody tr th {\n",
        "        vertical-align: top;\n",
        "    }\n",
        "\n",
        "    .dataframe thead th {\n",
        "        text-align: right;\n",
        "    }\n",
        "</style>\n",
        "<table border=\"1\" class=\"dataframe\">\n",
        "  <thead>\n",
        "    <tr style=\"text-align: right;\">\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th>Type</th>\n",
        "      <th>Start</th>\n",
        "      <th>End</th>\n",
        "      <th>Population</th>\n",
        "      <th>ODE</th>\n",
        "      <th>Rt</th>\n",
        "      <th>theta</th>\n",
        "      <th>kappa</th>\n",
        "      <th>rho</th>\n",
        "      <th>sigma</th>\n",
        "      <th>tau</th>\n",
        "      <th>1/gamma [day]</th>\n",
        "      <th>1/beta [day]</th>\n",
        "      <th>1/alpha2 [day]</th>\n",
        "      <th>alpha1 [-]</th>\n",
        "      <th>RMSLE</th>\n",
        "      <th>Trials</th>\n",
        "      <th>Runtime</th>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>Country</th>\n",
        "      <th>Phase</th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "    </tr>\n",
        "  </thead>\n",
        "  <tbody>\n",
        "    <tr>\n",
        "      <th rowspan=\"15\" valign=\"top\">Egypt</th>\n",
        "      <th>0th</th>\n",
        "      <td>Past</td>\n",
        "      <td>28Feb2020</td>\n",
        "      <td>02May2020</td>\n",
        "      <td>98423595</td>\n",
        "      <td>SIR-F</td>\n",
        "      <td>0.02</td>\n",
        "      <td>0.602763</td>\n",
        "      <td>0.544883</td>\n",
        "      <td>0.025094</td>\n",
        "      <td>0.004698</td>\n",
        "      <td>360</td>\n",
        "      <td>53</td>\n",
        "      <td>9</td>\n",
        "      <td>0</td>\n",
        "      <td>0.603</td>\n",
        "      <td>4.946721</td>\n",
        "      <td>1184</td>\n",
        "      <td>1 min  0 sec</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>1st</th>\n",
        "      <td>Past</td>\n",
        "      <td>03May2020</td>\n",
        "      <td>17May2020</td>\n",
        "      <td>98423595</td>\n",
        "      <td>SIR-F</td>\n",
        "      <td>3.99</td>\n",
        "      <td>0.030470</td>\n",
        "      <td>0.000060</td>\n",
        "      <td>0.016453</td>\n",
        "      <td>0.003939</td>\n",
        "      <td>360</td>\n",
        "      <td>63</td>\n",
        "      <td>15</td>\n",
        "      <td>4182</td>\n",
        "      <td>0.030</td>\n",
        "      <td>0.031269</td>\n",
        "      <td>731</td>\n",
        "      <td>1 min  0 sec</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>2nd</th>\n",
        "      <td>Past</td>\n",
        "      <td>18May2020</td>\n",
        "      <td>28May2020</td>\n",
        "      <td>98423595</td>\n",
        "      <td>SIR-F</td>\n",
        "      <td>3.17</td>\n",
        "      <td>0.018727</td>\n",
        "      <td>0.000117</td>\n",
        "      <td>0.017891</td>\n",
        "      <td>0.005419</td>\n",
        "      <td>360</td>\n",
        "      <td>46</td>\n",
        "      <td>13</td>\n",
        "      <td>2142</td>\n",
        "      <td>0.019</td>\n",
        "      <td>0.026867</td>\n",
        "      <td>866</td>\n",
        "      <td>1 min  0 sec</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>3rd</th>\n",
        "      <td>Past</td>\n",
        "      <td>29May2020</td>\n",
        "      <td>03Jun2020</td>\n",
        "      <td>98423595</td>\n",
        "      <td>SIR-F</td>\n",
        "      <td>3.39</td>\n",
        "      <td>0.020125</td>\n",
        "      <td>0.000237</td>\n",
        "      <td>0.018544</td>\n",
        "      <td>0.005127</td>\n",
        "      <td>360</td>\n",
        "      <td>48</td>\n",
        "      <td>13</td>\n",
        "      <td>1053</td>\n",
        "      <td>0.020</td>\n",
        "      <td>0.016808</td>\n",
        "      <td>246</td>\n",
        "      <td>0 min 10 sec</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>4th</th>\n",
        "      <td>Past</td>\n",
        "      <td>04Jun2020</td>\n",
        "      <td>13Jun2020</td>\n",
        "      <td>98423595</td>\n",
        "      <td>SIR-F</td>\n",
        "      <td>3.23</td>\n",
        "      <td>0.000667</td>\n",
        "      <td>0.000361</td>\n",
        "      <td>0.014031</td>\n",
        "      <td>0.003974</td>\n",
        "      <td>360</td>\n",
        "      <td>62</td>\n",
        "      <td>17</td>\n",
        "      <td>691</td>\n",
        "      <td>0.001</td>\n",
        "      <td>0.013725</td>\n",
        "      <td>540</td>\n",
        "      <td>0 min 25 sec</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>5th</th>\n",
        "      <td>Past</td>\n",
        "      <td>14Jun2020</td>\n",
        "      <td>22Jun2020</td>\n",
        "      <td>98423595</td>\n",
        "      <td>SIR-F</td>\n",
        "      <td>3.21</td>\n",
        "      <td>0.001549</td>\n",
        "      <td>0.000596</td>\n",
        "      <td>0.011384</td>\n",
        "      <td>0.002944</td>\n",
        "      <td>360</td>\n",
        "      <td>84</td>\n",
        "      <td>21</td>\n",
        "      <td>419</td>\n",
        "      <td>0.002</td>\n",
        "      <td>0.009424</td>\n",
        "      <td>273</td>\n",
        "      <td>0 min 20 sec</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>6th</th>\n",
        "      <td>Past</td>\n",
        "      <td>23Jun2020</td>\n",
        "      <td>02Jul2020</td>\n",
        "      <td>98423595</td>\n",
        "      <td>SIR-F</td>\n",
        "      <td>2.74</td>\n",
        "      <td>0.002521</td>\n",
        "      <td>0.000463</td>\n",
        "      <td>0.007701</td>\n",
        "      <td>0.002341</td>\n",
        "      <td>360</td>\n",
        "      <td>106</td>\n",
        "      <td>32</td>\n",
        "      <td>540</td>\n",
        "      <td>0.003</td>\n",
        "      <td>0.008497</td>\n",
        "      <td>208</td>\n",
        "      <td>0 min 15 sec</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>7th</th>\n",
        "      <td>Past</td>\n",
        "      <td>03Jul2020</td>\n",
        "      <td>13Jul2020</td>\n",
        "      <td>98423595</td>\n",
        "      <td>SIR-F</td>\n",
        "      <td>1.67</td>\n",
        "      <td>0.032406</td>\n",
        "      <td>0.000191</td>\n",
        "      <td>0.004623</td>\n",
        "      <td>0.002491</td>\n",
        "      <td>360</td>\n",
        "      <td>100</td>\n",
        "      <td>54</td>\n",
        "      <td>1308</td>\n",
        "      <td>0.032</td>\n",
        "      <td>0.008270</td>\n",
        "      <td>241</td>\n",
        "      <td>0 min 15 sec</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>8th</th>\n",
        "      <td>Past</td>\n",
        "      <td>14Jul2020</td>\n",
        "      <td>20Jul2020</td>\n",
        "      <td>98423595</td>\n",
        "      <td>SIR-F</td>\n",
        "      <td>1.23</td>\n",
        "      <td>0.047186</td>\n",
        "      <td>0.000079</td>\n",
        "      <td>0.003469</td>\n",
        "      <td>0.002604</td>\n",
        "      <td>360</td>\n",
        "      <td>95</td>\n",
        "      <td>72</td>\n",
        "      <td>3152</td>\n",
        "      <td>0.047</td>\n",
        "      <td>0.003296</td>\n",
        "      <td>243</td>\n",
        "      <td>0 min 10 sec</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>9th</th>\n",
        "      <td>Past</td>\n",
        "      <td>21Jul2020</td>\n",
        "      <td>27Jul2020</td>\n",
        "      <td>98423595</td>\n",
        "      <td>SIR-F</td>\n",
        "      <td>0.59</td>\n",
        "      <td>0.041839</td>\n",
        "      <td>0.000054</td>\n",
        "      <td>0.002627</td>\n",
        "      <td>0.004240</td>\n",
        "      <td>360</td>\n",
        "      <td>58</td>\n",
        "      <td>95</td>\n",
        "      <td>4601</td>\n",
        "      <td>0.042</td>\n",
        "      <td>0.006469</td>\n",
        "      <td>126</td>\n",
        "      <td>0 min  5 sec</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>10th</th>\n",
        "      <td>Past</td>\n",
        "      <td>28Jul2020</td>\n",
        "      <td>10Aug2020</td>\n",
        "      <td>98423595</td>\n",
        "      <td>SIR-F</td>\n",
        "      <td>0.15</td>\n",
        "      <td>0.092194</td>\n",
        "      <td>0.000014</td>\n",
        "      <td>0.001191</td>\n",
        "      <td>0.007297</td>\n",
        "      <td>360</td>\n",
        "      <td>34</td>\n",
        "      <td>209</td>\n",
        "      <td>17653</td>\n",
        "      <td>0.092</td>\n",
        "      <td>0.015096</td>\n",
        "      <td>232</td>\n",
        "      <td>0 min 10 sec</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>11th</th>\n",
        "      <td>Past</td>\n",
        "      <td>11Aug2020</td>\n",
        "      <td>27Aug2020</td>\n",
        "      <td>98423595</td>\n",
        "      <td>SIR-F</td>\n",
        "      <td>0.17</td>\n",
        "      <td>0.028695</td>\n",
        "      <td>0.000067</td>\n",
        "      <td>0.001344</td>\n",
        "      <td>0.007490</td>\n",
        "      <td>360</td>\n",
        "      <td>33</td>\n",
        "      <td>186</td>\n",
        "      <td>3715</td>\n",
        "      <td>0.029</td>\n",
        "      <td>0.010952</td>\n",
        "      <td>152</td>\n",
        "      <td>0 min 10 sec</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>12th</th>\n",
        "      <td>Past</td>\n",
        "      <td>28Aug2020</td>\n",
        "      <td>12Sep2020</td>\n",
        "      <td>98423595</td>\n",
        "      <td>SIR-F</td>\n",
        "      <td>0.16</td>\n",
        "      <td>0.051711</td>\n",
        "      <td>0.000084</td>\n",
        "      <td>0.002303</td>\n",
        "      <td>0.013496</td>\n",
        "      <td>360</td>\n",
        "      <td>18</td>\n",
        "      <td>108</td>\n",
        "      <td>2969</td>\n",
        "      <td>0.052</td>\n",
        "      <td>0.039183</td>\n",
        "      <td>421</td>\n",
        "      <td>0 min 25 sec</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>13th</th>\n",
        "      <td>Past</td>\n",
        "      <td>13Sep2020</td>\n",
        "      <td>10Oct2020</td>\n",
        "      <td>98423595</td>\n",
        "      <td>SIR-F</td>\n",
        "      <td>0.24</td>\n",
        "      <td>0.001738</td>\n",
        "      <td>0.000890</td>\n",
        "      <td>0.010755</td>\n",
        "      <td>0.043107</td>\n",
        "      <td>360</td>\n",
        "      <td>5</td>\n",
        "      <td>23</td>\n",
        "      <td>280</td>\n",
        "      <td>0.002</td>\n",
        "      <td>0.260883</td>\n",
        "      <td>559</td>\n",
        "      <td>0 min 45 sec</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>14th</th>\n",
        "      <td>Past</td>\n",
        "      <td>11Oct2020</td>\n",
        "      <td>10Nov2020</td>\n",
        "      <td>98423595</td>\n",
        "      <td>SIR-F</td>\n",
        "      <td>1.66</td>\n",
        "      <td>0.045658</td>\n",
        "      <td>0.001126</td>\n",
        "      <td>0.028156</td>\n",
        "      <td>0.015099</td>\n",
        "      <td>360</td>\n",
        "      <td>16</td>\n",
        "      <td>8</td>\n",
        "      <td>222</td>\n",
        "      <td>0.046</td>\n",
        "      <td>0.015072</td>\n",
        "      <td>884</td>\n",
        "      <td>1 min  0 sec</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th rowspan=\"15\" valign=\"top\">Belarus</th>\n",
        "      <th>0th</th>\n",
        "      <td>Past</td>\n",
        "      <td>09Mar2020</td>\n",
        "      <td>26Apr2020</td>\n",
        "      <td>9483499</td>\n",
        "      <td>SIR-F</td>\n",
        "      <td>7.42</td>\n",
        "      <td>0.001534</td>\n",
        "      <td>0.000480</td>\n",
        "      <td>0.048009</td>\n",
        "      <td>0.005978</td>\n",
        "      <td>360</td>\n",
        "      <td>41</td>\n",
        "      <td>5</td>\n",
        "      <td>520</td>\n",
        "      <td>0.002</td>\n",
        "      <td>0.451650</td>\n",
        "      <td>1048</td>\n",
        "      <td>1 min  0 sec</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>1st</th>\n",
        "      <td>Past</td>\n",
        "      <td>27Apr2020</td>\n",
        "      <td>08May2020</td>\n",
        "      <td>9483499</td>\n",
        "      <td>SIR-F</td>\n",
        "      <td>2.19</td>\n",
        "      <td>0.000290</td>\n",
        "      <td>0.000087</td>\n",
        "      <td>0.016646</td>\n",
        "      <td>0.007498</td>\n",
        "      <td>360</td>\n",
        "      <td>33</td>\n",
        "      <td>15</td>\n",
        "      <td>2878</td>\n",
        "      <td>0.000</td>\n",
        "      <td>0.082165</td>\n",
        "      <td>659</td>\n",
        "      <td>1 min  0 sec</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>2nd</th>\n",
        "      <td>Past</td>\n",
        "      <td>09May2020</td>\n",
        "      <td>15May2020</td>\n",
        "      <td>9483499</td>\n",
        "      <td>SIR-F</td>\n",
        "      <td>2.15</td>\n",
        "      <td>0.004998</td>\n",
        "      <td>0.000002</td>\n",
        "      <td>0.013226</td>\n",
        "      <td>0.006130</td>\n",
        "      <td>360</td>\n",
        "      <td>40</td>\n",
        "      <td>18</td>\n",
        "      <td>132858</td>\n",
        "      <td>0.005</td>\n",
        "      <td>0.018855</td>\n",
        "      <td>697</td>\n",
        "      <td>1 min  0 sec</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>3rd</th>\n",
        "      <td>Past</td>\n",
        "      <td>16May2020</td>\n",
        "      <td>23May2020</td>\n",
        "      <td>9483499</td>\n",
        "      <td>SIR-F</td>\n",
        "      <td>1.41</td>\n",
        "      <td>0.000165</td>\n",
        "      <td>0.000060</td>\n",
        "      <td>0.011220</td>\n",
        "      <td>0.007915</td>\n",
        "      <td>360</td>\n",
        "      <td>31</td>\n",
        "      <td>22</td>\n",
        "      <td>4194</td>\n",
        "      <td>0.000</td>\n",
        "      <td>0.031281</td>\n",
        "      <td>867</td>\n",
        "      <td>1 min  0 sec</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>4th</th>\n",
        "      <td>Past</td>\n",
        "      <td>24May2020</td>\n",
        "      <td>30May2020</td>\n",
        "      <td>9483499</td>\n",
        "      <td>SIR-F</td>\n",
        "      <td>1.31</td>\n",
        "      <td>0.000228</td>\n",
        "      <td>0.000060</td>\n",
        "      <td>0.009844</td>\n",
        "      <td>0.007476</td>\n",
        "      <td>360</td>\n",
        "      <td>33</td>\n",
        "      <td>25</td>\n",
        "      <td>4196</td>\n",
        "      <td>0.000</td>\n",
        "      <td>0.014018</td>\n",
        "      <td>665</td>\n",
        "      <td>0 min 30 sec</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>5th</th>\n",
        "      <td>Past</td>\n",
        "      <td>31May2020</td>\n",
        "      <td>07Jun2020</td>\n",
        "      <td>9483499</td>\n",
        "      <td>SIR-F</td>\n",
        "      <td>1.05</td>\n",
        "      <td>0.000227</td>\n",
        "      <td>0.000060</td>\n",
        "      <td>0.008763</td>\n",
        "      <td>0.008280</td>\n",
        "      <td>360</td>\n",
        "      <td>30</td>\n",
        "      <td>28</td>\n",
        "      <td>4197</td>\n",
        "      <td>0.000</td>\n",
        "      <td>0.023778</td>\n",
        "      <td>1185</td>\n",
        "      <td>1 min  0 sec</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>6th</th>\n",
        "      <td>Past</td>\n",
        "      <td>08Jun2020</td>\n",
        "      <td>14Jun2020</td>\n",
        "      <td>9483499</td>\n",
        "      <td>SIR-F</td>\n",
        "      <td>0.70</td>\n",
        "      <td>0.000240</td>\n",
        "      <td>0.000060</td>\n",
        "      <td>0.007654</td>\n",
        "      <td>0.010920</td>\n",
        "      <td>360</td>\n",
        "      <td>22</td>\n",
        "      <td>32</td>\n",
        "      <td>4194</td>\n",
        "      <td>0.000</td>\n",
        "      <td>0.012804</td>\n",
        "      <td>653</td>\n",
        "      <td>0 min 50 sec</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>7th</th>\n",
        "      <td>Past</td>\n",
        "      <td>15Jun2020</td>\n",
        "      <td>23Jun2020</td>\n",
        "      <td>9483499</td>\n",
        "      <td>SIR-F</td>\n",
        "      <td>0.55</td>\n",
        "      <td>0.000397</td>\n",
        "      <td>0.000076</td>\n",
        "      <td>0.007244</td>\n",
        "      <td>0.013183</td>\n",
        "      <td>360</td>\n",
        "      <td>18</td>\n",
        "      <td>34</td>\n",
        "      <td>3296</td>\n",
        "      <td>0.000</td>\n",
        "      <td>0.015358</td>\n",
        "      <td>644</td>\n",
        "      <td>1 min  0 sec</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>8th</th>\n",
        "      <td>Past</td>\n",
        "      <td>24Jun2020</td>\n",
        "      <td>11Jul2020</td>\n",
        "      <td>9483499</td>\n",
        "      <td>SIR-F</td>\n",
        "      <td>0.35</td>\n",
        "      <td>0.000262</td>\n",
        "      <td>0.000076</td>\n",
        "      <td>0.005371</td>\n",
        "      <td>0.015419</td>\n",
        "      <td>360</td>\n",
        "      <td>16</td>\n",
        "      <td>46</td>\n",
        "      <td>3297</td>\n",
        "      <td>0.000</td>\n",
        "      <td>0.022880</td>\n",
        "      <td>1051</td>\n",
        "      <td>1 min  0 sec</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>9th</th>\n",
        "      <td>Past</td>\n",
        "      <td>12Jul2020</td>\n",
        "      <td>21Aug2020</td>\n",
        "      <td>9483499</td>\n",
        "      <td>SIR-F</td>\n",
        "      <td>0.42</td>\n",
        "      <td>0.017719</td>\n",
        "      <td>0.000090</td>\n",
        "      <td>0.007512</td>\n",
        "      <td>0.017428</td>\n",
        "      <td>360</td>\n",
        "      <td>14</td>\n",
        "      <td>33</td>\n",
        "      <td>2777</td>\n",
        "      <td>0.018</td>\n",
        "      <td>0.100268</td>\n",
        "      <td>799</td>\n",
        "      <td>0 min 45 sec</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>10th</th>\n",
        "      <td>Past</td>\n",
        "      <td>22Aug2020</td>\n",
        "      <td>24Sep2020</td>\n",
        "      <td>9483499</td>\n",
        "      <td>SIR-F</td>\n",
        "      <td>0.98</td>\n",
        "      <td>0.000260</td>\n",
        "      <td>0.001268</td>\n",
        "      <td>0.045952</td>\n",
        "      <td>0.045608</td>\n",
        "      <td>360</td>\n",
        "      <td>5</td>\n",
        "      <td>5</td>\n",
        "      <td>197</td>\n",
        "      <td>0.000</td>\n",
        "      <td>0.381773</td>\n",
        "      <td>1192</td>\n",
        "      <td>1 min  0 sec</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>11th</th>\n",
        "      <td>Past</td>\n",
        "      <td>25Sep2020</td>\n",
        "      <td>13Oct2020</td>\n",
        "      <td>9483499</td>\n",
        "      <td>SIR-F</td>\n",
        "      <td>2.19</td>\n",
        "      <td>0.003352</td>\n",
        "      <td>0.000327</td>\n",
        "      <td>0.028277</td>\n",
        "      <td>0.012563</td>\n",
        "      <td>360</td>\n",
        "      <td>19</td>\n",
        "      <td>8</td>\n",
        "      <td>765</td>\n",
        "      <td>0.003</td>\n",
        "      <td>0.044531</td>\n",
        "      <td>695</td>\n",
        "      <td>1 min  0 sec</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>12th</th>\n",
        "      <td>Past</td>\n",
        "      <td>14Oct2020</td>\n",
        "      <td>24Oct2020</td>\n",
        "      <td>9483499</td>\n",
        "      <td>SIR-F</td>\n",
        "      <td>1.66</td>\n",
        "      <td>0.000590</td>\n",
        "      <td>0.000114</td>\n",
        "      <td>0.024111</td>\n",
        "      <td>0.014399</td>\n",
        "      <td>360</td>\n",
        "      <td>17</td>\n",
        "      <td>10</td>\n",
        "      <td>2199</td>\n",
        "      <td>0.001</td>\n",
        "      <td>0.010776</td>\n",
        "      <td>721</td>\n",
        "      <td>1 min  0 sec</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>13th</th>\n",
        "      <td>Past</td>\n",
        "      <td>25Oct2020</td>\n",
        "      <td>31Oct2020</td>\n",
        "      <td>9483499</td>\n",
        "      <td>SIR-F</td>\n",
        "      <td>1.72</td>\n",
        "      <td>0.001418</td>\n",
        "      <td>0.000054</td>\n",
        "      <td>0.024113</td>\n",
        "      <td>0.013963</td>\n",
        "      <td>360</td>\n",
        "      <td>17</td>\n",
        "      <td>10</td>\n",
        "      <td>4601</td>\n",
        "      <td>0.001</td>\n",
        "      <td>0.005596</td>\n",
        "      <td>153</td>\n",
        "      <td>0 min  5 sec</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>14th</th>\n",
        "      <td>Past</td>\n",
        "      <td>01Nov2020</td>\n",
        "      <td>10Nov2020</td>\n",
        "      <td>9483499</td>\n",
        "      <td>SIR-F</td>\n",
        "      <td>2.02</td>\n",
        "      <td>0.000250</td>\n",
        "      <td>0.000076</td>\n",
        "      <td>0.018697</td>\n",
        "      <td>0.009179</td>\n",
        "      <td>360</td>\n",
        "      <td>27</td>\n",
        "      <td>13</td>\n",
        "      <td>3295</td>\n",
        "      <td>0.000</td>\n",
        "      <td>0.013453</td>\n",
        "      <td>857</td>\n",
        "      <td>1 min  0 sec</td>\n",
        "    </tr>\n",
        "  </tbody>\n",
        "</table>\n",
        "</div>"
       ],
       "output_type": "pyout",
       "prompt_number": 12,
       "text": [
        "               Type      Start        End  Population    ODE    Rt     theta  \\\n",
        "Country Phase                                                                  \n",
        "Egypt   0th    Past  28Feb2020  02May2020    98423595  SIR-F  0.02  0.602763   \n",
        "        1st    Past  03May2020  17May2020    98423595  SIR-F  3.99  0.030470   \n",
        "        2nd    Past  18May2020  28May2020    98423595  SIR-F  3.17  0.018727   \n",
        "        3rd    Past  29May2020  03Jun2020    98423595  SIR-F  3.39  0.020125   \n",
        "        4th    Past  04Jun2020  13Jun2020    98423595  SIR-F  3.23  0.000667   \n",
        "        5th    Past  14Jun2020  22Jun2020    98423595  SIR-F  3.21  0.001549   \n",
        "        6th    Past  23Jun2020  02Jul2020    98423595  SIR-F  2.74  0.002521   \n",
        "        7th    Past  03Jul2020  13Jul2020    98423595  SIR-F  1.67  0.032406   \n",
        "        8th    Past  14Jul2020  20Jul2020    98423595  SIR-F  1.23  0.047186   \n",
        "        9th    Past  21Jul2020  27Jul2020    98423595  SIR-F  0.59  0.041839   \n",
        "        10th   Past  28Jul2020  10Aug2020    98423595  SIR-F  0.15  0.092194   \n",
        "        11th   Past  11Aug2020  27Aug2020    98423595  SIR-F  0.17  0.028695   \n",
        "        12th   Past  28Aug2020  12Sep2020    98423595  SIR-F  0.16  0.051711   \n",
        "        13th   Past  13Sep2020  10Oct2020    98423595  SIR-F  0.24  0.001738   \n",
        "        14th   Past  11Oct2020  10Nov2020    98423595  SIR-F  1.66  0.045658   \n",
        "Belarus 0th    Past  09Mar2020  26Apr2020     9483499  SIR-F  7.42  0.001534   \n",
        "        1st    Past  27Apr2020  08May2020     9483499  SIR-F  2.19  0.000290   \n",
        "        2nd    Past  09May2020  15May2020     9483499  SIR-F  2.15  0.004998   \n",
        "        3rd    Past  16May2020  23May2020     9483499  SIR-F  1.41  0.000165   \n",
        "        4th    Past  24May2020  30May2020     9483499  SIR-F  1.31  0.000228   \n",
        "        5th    Past  31May2020  07Jun2020     9483499  SIR-F  1.05  0.000227   \n",
        "        6th    Past  08Jun2020  14Jun2020     9483499  SIR-F  0.70  0.000240   \n",
        "        7th    Past  15Jun2020  23Jun2020     9483499  SIR-F  0.55  0.000397   \n",
        "        8th    Past  24Jun2020  11Jul2020     9483499  SIR-F  0.35  0.000262   \n",
        "        9th    Past  12Jul2020  21Aug2020     9483499  SIR-F  0.42  0.017719   \n",
        "        10th   Past  22Aug2020  24Sep2020     9483499  SIR-F  0.98  0.000260   \n",
        "        11th   Past  25Sep2020  13Oct2020     9483499  SIR-F  2.19  0.003352   \n",
        "        12th   Past  14Oct2020  24Oct2020     9483499  SIR-F  1.66  0.000590   \n",
        "        13th   Past  25Oct2020  31Oct2020     9483499  SIR-F  1.72  0.001418   \n",
        "        14th   Past  01Nov2020  10Nov2020     9483499  SIR-F  2.02  0.000250   \n",
        "\n",
        "                  kappa       rho     sigma  tau  1/gamma [day]  1/beta [day]  \\\n",
        "Country Phase                                                                   \n",
        "Egypt   0th    0.544883  0.025094  0.004698  360             53             9   \n",
        "        1st    0.000060  0.016453  0.003939  360             63            15   \n",
        "        2nd    0.000117  0.017891  0.005419  360             46            13   \n",
        "        3rd    0.000237  0.018544  0.005127  360             48            13   \n",
        "        4th    0.000361  0.014031  0.003974  360             62            17   \n",
        "        5th    0.000596  0.011384  0.002944  360             84            21   \n",
        "        6th    0.000463  0.007701  0.002341  360            106            32   \n",
        "        7th    0.000191  0.004623  0.002491  360            100            54   \n",
        "        8th    0.000079  0.003469  0.002604  360             95            72   \n",
        "        9th    0.000054  0.002627  0.004240  360             58            95   \n",
        "        10th   0.000014  0.001191  0.007297  360             34           209   \n",
        "        11th   0.000067  0.001344  0.007490  360             33           186   \n",
        "        12th   0.000084  0.002303  0.013496  360             18           108   \n",
        "        13th   0.000890  0.010755  0.043107  360              5            23   \n",
        "        14th   0.001126  0.028156  0.015099  360             16             8   \n",
        "Belarus 0th    0.000480  0.048009  0.005978  360             41             5   \n",
        "        1st    0.000087  0.016646  0.007498  360             33            15   \n",
        "        2nd    0.000002  0.013226  0.006130  360             40            18   \n",
        "        3rd    0.000060  0.011220  0.007915  360             31            22   \n",
        "        4th    0.000060  0.009844  0.007476  360             33            25   \n",
        "        5th    0.000060  0.008763  0.008280  360             30            28   \n",
        "        6th    0.000060  0.007654  0.010920  360             22            32   \n",
        "        7th    0.000076  0.007244  0.013183  360             18            34   \n",
        "        8th    0.000076  0.005371  0.015419  360             16            46   \n",
        "        9th    0.000090  0.007512  0.017428  360             14            33   \n",
        "        10th   0.001268  0.045952  0.045608  360              5             5   \n",
        "        11th   0.000327  0.028277  0.012563  360             19             8   \n",
        "        12th   0.000114  0.024111  0.014399  360             17            10   \n",
        "        13th   0.000054  0.024113  0.013963  360             17            10   \n",
        "        14th   0.000076  0.018697  0.009179  360             27            13   \n",
        "\n",
        "               1/alpha2 [day]  alpha1 [-]     RMSLE  Trials       Runtime  \n",
        "Country Phase                                                              \n",
        "Egypt   0th                 0       0.603  4.946721    1184  1 min  0 sec  \n",
        "        1st              4182       0.030  0.031269     731  1 min  0 sec  \n",
        "        2nd              2142       0.019  0.026867     866  1 min  0 sec  \n",
        "        3rd              1053       0.020  0.016808     246  0 min 10 sec  \n",
        "        4th               691       0.001  0.013725     540  0 min 25 sec  \n",
        "        5th               419       0.002  0.009424     273  0 min 20 sec  \n",
        "        6th               540       0.003  0.008497     208  0 min 15 sec  \n",
        "        7th              1308       0.032  0.008270     241  0 min 15 sec  \n",
        "        8th              3152       0.047  0.003296     243  0 min 10 sec  \n",
        "        9th              4601       0.042  0.006469     126  0 min  5 sec  \n",
        "        10th            17653       0.092  0.015096     232  0 min 10 sec  \n",
        "        11th             3715       0.029  0.010952     152  0 min 10 sec  \n",
        "        12th             2969       0.052  0.039183     421  0 min 25 sec  \n",
        "        13th              280       0.002  0.260883     559  0 min 45 sec  \n",
        "        14th              222       0.046  0.015072     884  1 min  0 sec  \n",
        "Belarus 0th               520       0.002  0.451650    1048  1 min  0 sec  \n",
        "        1st              2878       0.000  0.082165     659  1 min  0 sec  \n",
        "        2nd            132858       0.005  0.018855     697  1 min  0 sec  \n",
        "        3rd              4194       0.000  0.031281     867  1 min  0 sec  \n",
        "        4th              4196       0.000  0.014018     665  0 min 30 sec  \n",
        "        5th              4197       0.000  0.023778    1185  1 min  0 sec  \n",
        "        6th              4194       0.000  0.012804     653  0 min 50 sec  \n",
        "        7th              3296       0.000  0.015358     644  1 min  0 sec  \n",
        "        8th              3297       0.000  0.022880    1051  1 min  0 sec  \n",
        "        9th              2777       0.018  0.100268     799  0 min 45 sec  \n",
        "        10th              197       0.000  0.381773    1192  1 min  0 sec  \n",
        "        11th              765       0.003  0.044531     695  1 min  0 sec  \n",
        "        12th             2199       0.001  0.010776     721  1 min  0 sec  \n",
        "        13th             4601       0.001  0.005596     153  0 min  5 sec  \n",
        "        14th             3295       0.000  0.013453     857  1 min  0 sec  "
       ]
      }
     ],
     "prompt_number": 12
    },
    {
     "cell_type": "markdown",
     "metadata": {},
     "source": [
      "## Compare the history of parameters\n",
      "Here, compare the history of parameter values if countries."
     ]
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "# All parameter/day parameter/Rt/OxCGRT\n",
      "analyser.track().head()"
     ],
     "language": "python",
     "metadata": {},
     "outputs": [
      {
       "html": [
        "<div>\n",
        "<style scoped>\n",
        "    .dataframe tbody tr th:only-of-type {\n",
        "        vertical-align: middle;\n",
        "    }\n",
        "\n",
        "    .dataframe tbody tr th {\n",
        "        vertical-align: top;\n",
        "    }\n",
        "\n",
        "    .dataframe thead th {\n",
        "        text-align: right;\n",
        "    }\n",
        "</style>\n",
        "<table border=\"1\" class=\"dataframe\">\n",
        "  <thead>\n",
        "    <tr style=\"text-align: right;\">\n",
        "      <th></th>\n",
        "      <th>Date</th>\n",
        "      <th>Country</th>\n",
        "      <th>theta</th>\n",
        "      <th>kappa</th>\n",
        "      <th>rho</th>\n",
        "      <th>sigma</th>\n",
        "      <th>alpha1 [-]</th>\n",
        "      <th>1/alpha2 [day]</th>\n",
        "      <th>1/beta [day]</th>\n",
        "      <th>1/gamma [day]</th>\n",
        "      <th>...</th>\n",
        "      <th>Cancel_events</th>\n",
        "      <th>Gatherings_restrictions</th>\n",
        "      <th>Transport_closing</th>\n",
        "      <th>Stay_home_restrictions</th>\n",
        "      <th>Internal_movement_restrictions</th>\n",
        "      <th>International_movement_restrictions</th>\n",
        "      <th>Information_campaigns</th>\n",
        "      <th>Testing_policy</th>\n",
        "      <th>Contact_tracing</th>\n",
        "      <th>Stringency_index</th>\n",
        "    </tr>\n",
        "  </thead>\n",
        "  <tbody>\n",
        "    <tr>\n",
        "      <th>0</th>\n",
        "      <td>2020-03-28</td>\n",
        "      <td>Honduras</td>\n",
        "      <td>0.0342444</td>\n",
        "      <td>0.000928753</td>\n",
        "      <td>0.0179105</td>\n",
        "      <td>0.00154605</td>\n",
        "      <td>0.034</td>\n",
        "      <td>269</td>\n",
        "      <td>13</td>\n",
        "      <td>161</td>\n",
        "      <td>...</td>\n",
        "      <td>2</td>\n",
        "      <td>4</td>\n",
        "      <td>2</td>\n",
        "      <td>3</td>\n",
        "      <td>2</td>\n",
        "      <td>4</td>\n",
        "      <td>2</td>\n",
        "      <td>1</td>\n",
        "      <td>1</td>\n",
        "      <td>100.0</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>1</th>\n",
        "      <td>2020-03-29</td>\n",
        "      <td>Honduras</td>\n",
        "      <td>0.0342444</td>\n",
        "      <td>0.000928753</td>\n",
        "      <td>0.0179105</td>\n",
        "      <td>0.00154605</td>\n",
        "      <td>0.034</td>\n",
        "      <td>269</td>\n",
        "      <td>13</td>\n",
        "      <td>161</td>\n",
        "      <td>...</td>\n",
        "      <td>2</td>\n",
        "      <td>4</td>\n",
        "      <td>2</td>\n",
        "      <td>3</td>\n",
        "      <td>2</td>\n",
        "      <td>4</td>\n",
        "      <td>2</td>\n",
        "      <td>1</td>\n",
        "      <td>1</td>\n",
        "      <td>100.0</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>2</th>\n",
        "      <td>2020-03-30</td>\n",
        "      <td>Honduras</td>\n",
        "      <td>0.0342444</td>\n",
        "      <td>0.000928753</td>\n",
        "      <td>0.0179105</td>\n",
        "      <td>0.00154605</td>\n",
        "      <td>0.034</td>\n",
        "      <td>269</td>\n",
        "      <td>13</td>\n",
        "      <td>161</td>\n",
        "      <td>...</td>\n",
        "      <td>2</td>\n",
        "      <td>4</td>\n",
        "      <td>2</td>\n",
        "      <td>3</td>\n",
        "      <td>2</td>\n",
        "      <td>4</td>\n",
        "      <td>2</td>\n",
        "      <td>1</td>\n",
        "      <td>1</td>\n",
        "      <td>100.0</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>3</th>\n",
        "      <td>2020-03-31</td>\n",
        "      <td>Honduras</td>\n",
        "      <td>0.0342444</td>\n",
        "      <td>0.000928753</td>\n",
        "      <td>0.0179105</td>\n",
        "      <td>0.00154605</td>\n",
        "      <td>0.034</td>\n",
        "      <td>269</td>\n",
        "      <td>13</td>\n",
        "      <td>161</td>\n",
        "      <td>...</td>\n",
        "      <td>2</td>\n",
        "      <td>4</td>\n",
        "      <td>2</td>\n",
        "      <td>3</td>\n",
        "      <td>2</td>\n",
        "      <td>4</td>\n",
        "      <td>2</td>\n",
        "      <td>1</td>\n",
        "      <td>1</td>\n",
        "      <td>100.0</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>4</th>\n",
        "      <td>2020-04-01</td>\n",
        "      <td>Honduras</td>\n",
        "      <td>0.0342444</td>\n",
        "      <td>0.000928753</td>\n",
        "      <td>0.0179105</td>\n",
        "      <td>0.00154605</td>\n",
        "      <td>0.034</td>\n",
        "      <td>269</td>\n",
        "      <td>13</td>\n",
        "      <td>161</td>\n",
        "      <td>...</td>\n",
        "      <td>2</td>\n",
        "      <td>4</td>\n",
        "      <td>2</td>\n",
        "      <td>3</td>\n",
        "      <td>2</td>\n",
        "      <td>4</td>\n",
        "      <td>2</td>\n",
        "      <td>1</td>\n",
        "      <td>1</td>\n",
        "      <td>100.0</td>\n",
        "    </tr>\n",
        "  </tbody>\n",
        "</table>\n",
        "<p>5 rows \u00d7 23 columns</p>\n",
        "</div>"
       ],
       "output_type": "pyout",
       "prompt_number": 13,
       "text": [
        "        Date   Country      theta        kappa        rho       sigma  \\\n",
        "0 2020-03-28  Honduras  0.0342444  0.000928753  0.0179105  0.00154605   \n",
        "1 2020-03-29  Honduras  0.0342444  0.000928753  0.0179105  0.00154605   \n",
        "2 2020-03-30  Honduras  0.0342444  0.000928753  0.0179105  0.00154605   \n",
        "3 2020-03-31  Honduras  0.0342444  0.000928753  0.0179105  0.00154605   \n",
        "4 2020-04-01  Honduras  0.0342444  0.000928753  0.0179105  0.00154605   \n",
        "\n",
        "  alpha1 [-] 1/alpha2 [day] 1/beta [day] 1/gamma [day]  ... Cancel_events  \\\n",
        "0      0.034            269           13           161  ...             2   \n",
        "1      0.034            269           13           161  ...             2   \n",
        "2      0.034            269           13           161  ...             2   \n",
        "3      0.034            269           13           161  ...             2   \n",
        "4      0.034            269           13           161  ...             2   \n",
        "\n",
        "   Gatherings_restrictions  Transport_closing  Stay_home_restrictions  \\\n",
        "0                        4                  2                       3   \n",
        "1                        4                  2                       3   \n",
        "2                        4                  2                       3   \n",
        "3                        4                  2                       3   \n",
        "4                        4                  2                       3   \n",
        "\n",
        "   Internal_movement_restrictions  International_movement_restrictions  \\\n",
        "0                               2                                    4   \n",
        "1                               2                                    4   \n",
        "2                               2                                    4   \n",
        "3                               2                                    4   \n",
        "4                               2                                    4   \n",
        "\n",
        "   Information_campaigns  Testing_policy  Contact_tracing  Stringency_index  \n",
        "0                      2               1                1             100.0  \n",
        "1                      2               1                1             100.0  \n",
        "2                      2               1                1             100.0  \n",
        "3                      2               1                1             100.0  \n",
        "4                      2               1                1             100.0  \n",
        "\n",
        "[5 rows x 23 columns]"
       ]
      }
     ],
     "prompt_number": 13
    },
    {
     "cell_type": "heading",
     "level": 3,
     "metadata": {},
     "source": [
      "$Rt$: Reprodcution number $\\mathrm{[-]}$"
     ]
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "analyser.history(\"Rt\", roll_window=None).tail()"
     ],
     "language": "python",
     "metadata": {},
     "outputs": [
      {
       "output_type": "display_data",
       "png": "\n",
       "text": [
        "<Figure size 648x432 with 1 Axes>"
       ]
      },
      {
       "html": [
        "<div>\n",
        "<style scoped>\n",
        "    .dataframe tbody tr th:only-of-type {\n",
        "        vertical-align: middle;\n",
        "    }\n",
        "\n",
        "    .dataframe tbody tr th {\n",
        "        vertical-align: top;\n",
        "    }\n",
        "\n",
        "    .dataframe thead th {\n",
        "        text-align: right;\n",
        "    }\n",
        "</style>\n",
        "<table border=\"1\" class=\"dataframe\">\n",
        "  <thead>\n",
        "    <tr style=\"text-align: right;\">\n",
        "      <th>Country</th>\n",
        "      <th>Belarus</th>\n",
        "      <th>Egypt</th>\n",
        "      <th>Honduras</th>\n",
        "      <th>Latvia</th>\n",
        "      <th>Russia</th>\n",
        "      <th>Somalia</th>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>Date</th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "    </tr>\n",
        "  </thead>\n",
        "  <tbody>\n",
        "    <tr>\n",
        "      <th>2020-11-06</th>\n",
        "      <td>2.02</td>\n",
        "      <td>1.66</td>\n",
        "      <td>1.26</td>\n",
        "      <td>77.58</td>\n",
        "      <td>1.38</td>\n",
        "      <td>0.0</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>2020-11-07</th>\n",
        "      <td>2.02</td>\n",
        "      <td>1.66</td>\n",
        "      <td>1.26</td>\n",
        "      <td>77.58</td>\n",
        "      <td>1.38</td>\n",
        "      <td>0.0</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>2020-11-08</th>\n",
        "      <td>2.02</td>\n",
        "      <td>1.66</td>\n",
        "      <td>1.26</td>\n",
        "      <td>77.58</td>\n",
        "      <td>1.38</td>\n",
        "      <td>0.0</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>2020-11-09</th>\n",
        "      <td>2.02</td>\n",
        "      <td>1.66</td>\n",
        "      <td>1.26</td>\n",
        "      <td>77.58</td>\n",
        "      <td>1.38</td>\n",
        "      <td>0.0</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>2020-11-10</th>\n",
        "      <td>2.02</td>\n",
        "      <td>1.66</td>\n",
        "      <td>1.26</td>\n",
        "      <td>77.58</td>\n",
        "      <td>1.38</td>\n",
        "      <td>0.0</td>\n",
        "    </tr>\n",
        "  </tbody>\n",
        "</table>\n",
        "</div>"
       ],
       "output_type": "pyout",
       "prompt_number": 14,
       "text": [
        "Country     Belarus  Egypt  Honduras  Latvia  Russia  Somalia\n",
        "Date                                                         \n",
        "2020-11-06     2.02   1.66      1.26   77.58    1.38      0.0\n",
        "2020-11-07     2.02   1.66      1.26   77.58    1.38      0.0\n",
        "2020-11-08     2.02   1.66      1.26   77.58    1.38      0.0\n",
        "2020-11-09     2.02   1.66      1.26   77.58    1.38      0.0\n",
        "2020-11-10     2.02   1.66      1.26   77.58    1.38      0.0"
       ]
      }
     ],
     "prompt_number": 14
    },
    {
     "cell_type": "heading",
     "level": 3,
     "metadata": {},
     "source": [
      "$\\rho$: Effective contact rate $\\mathrm{[-]}$"
     ]
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "analyser.history(\"rho\", roll_window=None).tail()"
     ],
     "language": "python",
     "metadata": {},
     "outputs": [
      {
       "output_type": "display_data",
       "png": "\n",
       "text": [
        "<Figure size 648x432 with 1 Axes>"
       ]
      },
      {
       "html": [
        "<div>\n",
        "<style scoped>\n",
        "    .dataframe tbody tr th:only-of-type {\n",
        "        vertical-align: middle;\n",
        "    }\n",
        "\n",
        "    .dataframe tbody tr th {\n",
        "        vertical-align: top;\n",
        "    }\n",
        "\n",
        "    .dataframe thead th {\n",
        "        text-align: right;\n",
        "    }\n",
        "</style>\n",
        "<table border=\"1\" class=\"dataframe\">\n",
        "  <thead>\n",
        "    <tr style=\"text-align: right;\">\n",
        "      <th>Country</th>\n",
        "      <th>Belarus</th>\n",
        "      <th>Egypt</th>\n",
        "      <th>Honduras</th>\n",
        "      <th>Latvia</th>\n",
        "      <th>Russia</th>\n",
        "      <th>Somalia</th>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>Date</th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "    </tr>\n",
        "  </thead>\n",
        "  <tbody>\n",
        "    <tr>\n",
        "      <th>2020-11-06</th>\n",
        "      <td>0.018697</td>\n",
        "      <td>0.028156</td>\n",
        "      <td>0.001558</td>\n",
        "      <td>0.010323</td>\n",
        "      <td>0.003651</td>\n",
        "      <td>0.0</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>2020-11-07</th>\n",
        "      <td>0.018697</td>\n",
        "      <td>0.028156</td>\n",
        "      <td>0.001558</td>\n",
        "      <td>0.010323</td>\n",
        "      <td>0.003651</td>\n",
        "      <td>0.0</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>2020-11-08</th>\n",
        "      <td>0.018697</td>\n",
        "      <td>0.028156</td>\n",
        "      <td>0.001558</td>\n",
        "      <td>0.010323</td>\n",
        "      <td>0.003651</td>\n",
        "      <td>0.0</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>2020-11-09</th>\n",
        "      <td>0.018697</td>\n",
        "      <td>0.028156</td>\n",
        "      <td>0.001558</td>\n",
        "      <td>0.010323</td>\n",
        "      <td>0.003651</td>\n",
        "      <td>0.0</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>2020-11-10</th>\n",
        "      <td>0.018697</td>\n",
        "      <td>0.028156</td>\n",
        "      <td>0.001558</td>\n",
        "      <td>0.010323</td>\n",
        "      <td>0.003651</td>\n",
        "      <td>0.0</td>\n",
        "    </tr>\n",
        "  </tbody>\n",
        "</table>\n",
        "</div>"
       ],
       "output_type": "pyout",
       "prompt_number": 15,
       "text": [
        "Country      Belarus     Egypt  Honduras    Latvia    Russia  Somalia\n",
        "Date                                                                 \n",
        "2020-11-06  0.018697  0.028156  0.001558  0.010323  0.003651      0.0\n",
        "2020-11-07  0.018697  0.028156  0.001558  0.010323  0.003651      0.0\n",
        "2020-11-08  0.018697  0.028156  0.001558  0.010323  0.003651      0.0\n",
        "2020-11-09  0.018697  0.028156  0.001558  0.010323  0.003651      0.0\n",
        "2020-11-10  0.018697  0.028156  0.001558  0.010323  0.003651      0.0"
       ]
      }
     ],
     "prompt_number": 15
    },
    {
     "cell_type": "heading",
     "level": 3,
     "metadata": {},
     "source": [
      "$\\sigma$: Recovery rate $\\mathrm{[-]}$"
     ]
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "analyser.history(\"sigma\", roll_window=None).tail()"
     ],
     "language": "python",
     "metadata": {},
     "outputs": [
      {
       "output_type": "display_data",
       "png": "\n",
       "text": [
        "<Figure size 648x432 with 1 Axes>"
       ]
      },
      {
       "html": [
        "<div>\n",
        "<style scoped>\n",
        "    .dataframe tbody tr th:only-of-type {\n",
        "        vertical-align: middle;\n",
        "    }\n",
        "\n",
        "    .dataframe tbody tr th {\n",
        "        vertical-align: top;\n",
        "    }\n",
        "\n",
        "    .dataframe thead th {\n",
        "        text-align: right;\n",
        "    }\n",
        "</style>\n",
        "<table border=\"1\" class=\"dataframe\">\n",
        "  <thead>\n",
        "    <tr style=\"text-align: right;\">\n",
        "      <th>Country</th>\n",
        "      <th>Belarus</th>\n",
        "      <th>Egypt</th>\n",
        "      <th>Honduras</th>\n",
        "      <th>Latvia</th>\n",
        "      <th>Russia</th>\n",
        "      <th>Somalia</th>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>Date</th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "    </tr>\n",
        "  </thead>\n",
        "  <tbody>\n",
        "    <tr>\n",
        "      <th>2020-11-06</th>\n",
        "      <td>0.009179</td>\n",
        "      <td>0.015099</td>\n",
        "      <td>0.00119</td>\n",
        "      <td>0.0</td>\n",
        "      <td>0.002601</td>\n",
        "      <td>0.0</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>2020-11-07</th>\n",
        "      <td>0.009179</td>\n",
        "      <td>0.015099</td>\n",
        "      <td>0.00119</td>\n",
        "      <td>0.0</td>\n",
        "      <td>0.002601</td>\n",
        "      <td>0.0</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>2020-11-08</th>\n",
        "      <td>0.009179</td>\n",
        "      <td>0.015099</td>\n",
        "      <td>0.00119</td>\n",
        "      <td>0.0</td>\n",
        "      <td>0.002601</td>\n",
        "      <td>0.0</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>2020-11-09</th>\n",
        "      <td>0.009179</td>\n",
        "      <td>0.015099</td>\n",
        "      <td>0.00119</td>\n",
        "      <td>0.0</td>\n",
        "      <td>0.002601</td>\n",
        "      <td>0.0</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>2020-11-10</th>\n",
        "      <td>0.009179</td>\n",
        "      <td>0.015099</td>\n",
        "      <td>0.00119</td>\n",
        "      <td>0.0</td>\n",
        "      <td>0.002601</td>\n",
        "      <td>0.0</td>\n",
        "    </tr>\n",
        "  </tbody>\n",
        "</table>\n",
        "</div>"
       ],
       "output_type": "pyout",
       "prompt_number": 16,
       "text": [
        "Country      Belarus     Egypt  Honduras  Latvia    Russia  Somalia\n",
        "Date                                                               \n",
        "2020-11-06  0.009179  0.015099   0.00119     0.0  0.002601      0.0\n",
        "2020-11-07  0.009179  0.015099   0.00119     0.0  0.002601      0.0\n",
        "2020-11-08  0.009179  0.015099   0.00119     0.0  0.002601      0.0\n",
        "2020-11-09  0.009179  0.015099   0.00119     0.0  0.002601      0.0\n",
        "2020-11-10  0.009179  0.015099   0.00119     0.0  0.002601      0.0"
       ]
      }
     ],
     "prompt_number": 16
    },
    {
     "cell_type": "heading",
     "level": 3,
     "metadata": {},
     "source": [
      "$\\kappa$: Mortality rate of infected cases $\\mathrm{[-]}$"
     ]
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "analyser.history(\"kappa\", roll_window=None).tail()"
     ],
     "language": "python",
     "metadata": {},
     "outputs": [
      {
       "output_type": "display_data",
       "png": "\n",
       "text": [
        "<Figure size 648x432 with 1 Axes>"
       ]
      },
      {
       "html": [
        "<div>\n",
        "<style scoped>\n",
        "    .dataframe tbody tr th:only-of-type {\n",
        "        vertical-align: middle;\n",
        "    }\n",
        "\n",
        "    .dataframe tbody tr th {\n",
        "        vertical-align: top;\n",
        "    }\n",
        "\n",
        "    .dataframe thead th {\n",
        "        text-align: right;\n",
        "    }\n",
        "</style>\n",
        "<table border=\"1\" class=\"dataframe\">\n",
        "  <thead>\n",
        "    <tr style=\"text-align: right;\">\n",
        "      <th>Country</th>\n",
        "      <th>Belarus</th>\n",
        "      <th>Egypt</th>\n",
        "      <th>Honduras</th>\n",
        "      <th>Latvia</th>\n",
        "      <th>Russia</th>\n",
        "      <th>Somalia</th>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>Date</th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "    </tr>\n",
        "  </thead>\n",
        "  <tbody>\n",
        "    <tr>\n",
        "      <th>2020-11-06</th>\n",
        "      <td>0.000076</td>\n",
        "      <td>0.001126</td>\n",
        "      <td>0.000019</td>\n",
        "      <td>0.000133</td>\n",
        "      <td>0.000002</td>\n",
        "      <td>0.000007</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>2020-11-07</th>\n",
        "      <td>0.000076</td>\n",
        "      <td>0.001126</td>\n",
        "      <td>0.000019</td>\n",
        "      <td>0.000133</td>\n",
        "      <td>0.000002</td>\n",
        "      <td>0.000007</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>2020-11-08</th>\n",
        "      <td>0.000076</td>\n",
        "      <td>0.001126</td>\n",
        "      <td>0.000019</td>\n",
        "      <td>0.000133</td>\n",
        "      <td>0.000002</td>\n",
        "      <td>0.000007</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>2020-11-09</th>\n",
        "      <td>0.000076</td>\n",
        "      <td>0.001126</td>\n",
        "      <td>0.000019</td>\n",
        "      <td>0.000133</td>\n",
        "      <td>0.000002</td>\n",
        "      <td>0.000007</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>2020-11-10</th>\n",
        "      <td>0.000076</td>\n",
        "      <td>0.001126</td>\n",
        "      <td>0.000019</td>\n",
        "      <td>0.000133</td>\n",
        "      <td>0.000002</td>\n",
        "      <td>0.000007</td>\n",
        "    </tr>\n",
        "  </tbody>\n",
        "</table>\n",
        "</div>"
       ],
       "output_type": "pyout",
       "prompt_number": 17,
       "text": [
        "Country      Belarus     Egypt  Honduras    Latvia    Russia   Somalia\n",
        "Date                                                                  \n",
        "2020-11-06  0.000076  0.001126  0.000019  0.000133  0.000002  0.000007\n",
        "2020-11-07  0.000076  0.001126  0.000019  0.000133  0.000002  0.000007\n",
        "2020-11-08  0.000076  0.001126  0.000019  0.000133  0.000002  0.000007\n",
        "2020-11-09  0.000076  0.001126  0.000019  0.000133  0.000002  0.000007\n",
        "2020-11-10  0.000076  0.001126  0.000019  0.000133  0.000002  0.000007"
       ]
      }
     ],
     "prompt_number": 17
    },
    {
     "cell_type": "heading",
     "level": 3,
     "metadata": {},
     "source": [
      "$\\theta$: Mortality rate of S$^\\ast$ cases $\\mathrm{[-]}$"
     ]
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "analyser.history(\"theta\", roll_window=None).tail()"
     ],
     "language": "python",
     "metadata": {},
     "outputs": [
      {
       "output_type": "display_data",
       "png": "\n",
       "text": [
        "<Figure size 648x432 with 1 Axes>"
       ]
      },
      {
       "html": [
        "<div>\n",
        "<style scoped>\n",
        "    .dataframe tbody tr th:only-of-type {\n",
        "        vertical-align: middle;\n",
        "    }\n",
        "\n",
        "    .dataframe tbody tr th {\n",
        "        vertical-align: top;\n",
        "    }\n",
        "\n",
        "    .dataframe thead th {\n",
        "        text-align: right;\n",
        "    }\n",
        "</style>\n",
        "<table border=\"1\" class=\"dataframe\">\n",
        "  <thead>\n",
        "    <tr style=\"text-align: right;\">\n",
        "      <th>Country</th>\n",
        "      <th>Belarus</th>\n",
        "      <th>Egypt</th>\n",
        "      <th>Honduras</th>\n",
        "      <th>Latvia</th>\n",
        "      <th>Russia</th>\n",
        "      <th>Somalia</th>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>Date</th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "    </tr>\n",
        "  </thead>\n",
        "  <tbody>\n",
        "    <tr>\n",
        "      <th>2020-11-06</th>\n",
        "      <td>0.00025</td>\n",
        "      <td>0.045658</td>\n",
        "      <td>0.021263</td>\n",
        "      <td>0.000191</td>\n",
        "      <td>0.013512</td>\n",
        "      <td>0.489268</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>2020-11-07</th>\n",
        "      <td>0.00025</td>\n",
        "      <td>0.045658</td>\n",
        "      <td>0.021263</td>\n",
        "      <td>0.000191</td>\n",
        "      <td>0.013512</td>\n",
        "      <td>0.489268</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>2020-11-08</th>\n",
        "      <td>0.00025</td>\n",
        "      <td>0.045658</td>\n",
        "      <td>0.021263</td>\n",
        "      <td>0.000191</td>\n",
        "      <td>0.013512</td>\n",
        "      <td>0.489268</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>2020-11-09</th>\n",
        "      <td>0.00025</td>\n",
        "      <td>0.045658</td>\n",
        "      <td>0.021263</td>\n",
        "      <td>0.000191</td>\n",
        "      <td>0.013512</td>\n",
        "      <td>0.489268</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>2020-11-10</th>\n",
        "      <td>0.00025</td>\n",
        "      <td>0.045658</td>\n",
        "      <td>0.021263</td>\n",
        "      <td>0.000191</td>\n",
        "      <td>0.013512</td>\n",
        "      <td>0.489268</td>\n",
        "    </tr>\n",
        "  </tbody>\n",
        "</table>\n",
        "</div>"
       ],
       "output_type": "pyout",
       "prompt_number": 18,
       "text": [
        "Country     Belarus     Egypt  Honduras    Latvia    Russia   Somalia\n",
        "Date                                                                 \n",
        "2020-11-06  0.00025  0.045658  0.021263  0.000191  0.013512  0.489268\n",
        "2020-11-07  0.00025  0.045658  0.021263  0.000191  0.013512  0.489268\n",
        "2020-11-08  0.00025  0.045658  0.021263  0.000191  0.013512  0.489268\n",
        "2020-11-09  0.00025  0.045658  0.021263  0.000191  0.013512  0.489268\n",
        "2020-11-10  0.00025  0.045658  0.021263  0.000191  0.013512  0.489268"
       ]
      }
     ],
     "prompt_number": 18
    },
    {
     "cell_type": "markdown",
     "metadata": {},
     "source": [
      "## (Experimental): Relationship of OxCGRT index and parameter values\n",
      "Government responses will impact on parameter values of ODE models about 14 days later. Here, we will investigate on the relationship of [stringency index (from OxCGRT)](https://github.com/OxCGRT/covid-policy-tracker/blob/master/documentation/index_methodology.md) and reproduction number/model parameters.\n"
     ]
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "%matplotlib inline\n",
      "from matplotlib import pyplot as plt\n",
      "import seaborn as sns\n",
      "import pandas as pd"
     ],
     "language": "python",
     "metadata": {},
     "outputs": [],
     "prompt_number": 19
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "df = analyser.track()\n",
      "param_cols = [\"Rt\", *cs.SIRF.PARAMETERS]\n",
      "oxcgrt_cols = oxcgrt_data.OXCGRT_VARS[:]\n",
      "cols = param_cols + oxcgrt_cols\n",
      "delay = 14\n",
      "\n",
      "for col in param_cols:\n",
      "    df[col] = pd.to_numeric(df[col], errors=\"coerce\")\n",
      "    df[col] = df.groupby(\"Country\")[col].shift(0 - delay)\n",
      "\n",
      "df = df.dropna(how=\"any\")\n",
      "df = df.loc[:, [\"Date\", \"Country\", *cols]]\n",
      "track_df = df.copy()\n",
      "track_df.info()"
     ],
     "language": "python",
     "metadata": {},
     "outputs": [
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "<class 'pandas.core.frame.DataFrame'>\n",
        "Int64Index: 53871 entries, 0 to 53940\n",
        "Data columns (total 19 columns):\n",
        " #   Column                               Non-Null Count  Dtype         \n",
        "---  ------                               --------------  -----         \n",
        " 0   Date                                 53871 non-null  datetime64[ns]\n",
        " 1   Country                              53871 non-null  object        \n",
        " 2   Rt                                   53871 non-null  float64       \n",
        " 3   theta                                53871 non-null  float64       \n",
        " 4   kappa                                53871 non-null  float64       \n",
        " 5   rho                                  53871 non-null  float64       \n",
        " 6   sigma                                53871 non-null  float64       \n",
        " 7   School_closing                       53871 non-null  int64         \n",
        " 8   Workplace_closing                    53871 non-null  int64         \n",
        " 9   Cancel_events                        53871 non-null  int64         \n",
        " 10  Gatherings_restrictions              53871 non-null  int64         \n",
        " 11  Transport_closing                    53871 non-null  int64         \n",
        " 12  Stay_home_restrictions               53871 non-null  int64         \n",
        " 13  Internal_movement_restrictions       53871 non-null  int64         \n",
        " 14  International_movement_restrictions  53871 non-null  int64         \n",
        " 15  Information_campaigns                53871 non-null  int64         \n",
        " 16  Testing_policy                       53871 non-null  int64         \n",
        " 17  Contact_tracing                      53871 non-null  int64         \n",
        " 18  Stringency_index                     53871 non-null  float64       \n",
        "dtypes: datetime64[ns](1), float64(6), int64(11), object(1)\n",
        "memory usage: 8.2+ MB\n"
       ]
      }
     ],
     "prompt_number": 20
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "# Correlation\n",
      "df = track_df.copy()\n",
      "df.corr().style.background_gradient(axis=None)"
     ],
     "language": "python",
     "metadata": {},
     "outputs": [
      {
       "html": [
        "<style  type=\"text/css\" >\n",
        "#T_d100af02_2371_11eb_ace0_525400b23b75row0_col0,#T_d100af02_2371_11eb_ace0_525400b23b75row1_col1,#T_d100af02_2371_11eb_ace0_525400b23b75row2_col2,#T_d100af02_2371_11eb_ace0_525400b23b75row3_col3,#T_d100af02_2371_11eb_ace0_525400b23b75row4_col4,#T_d100af02_2371_11eb_ace0_525400b23b75row5_col5,#T_d100af02_2371_11eb_ace0_525400b23b75row6_col6,#T_d100af02_2371_11eb_ace0_525400b23b75row7_col7,#T_d100af02_2371_11eb_ace0_525400b23b75row8_col8,#T_d100af02_2371_11eb_ace0_525400b23b75row9_col9,#T_d100af02_2371_11eb_ace0_525400b23b75row10_col10,#T_d100af02_2371_11eb_ace0_525400b23b75row11_col11,#T_d100af02_2371_11eb_ace0_525400b23b75row12_col12,#T_d100af02_2371_11eb_ace0_525400b23b75row13_col13,#T_d100af02_2371_11eb_ace0_525400b23b75row14_col14,#T_d100af02_2371_11eb_ace0_525400b23b75row15_col15,#T_d100af02_2371_11eb_ace0_525400b23b75row16_col16{\n",
        "            background-color:  #023858;\n",
        "            color:  #f1f1f1;\n",
        "        }#T_d100af02_2371_11eb_ace0_525400b23b75row0_col1,#T_d100af02_2371_11eb_ace0_525400b23b75row1_col0,#T_d100af02_2371_11eb_ace0_525400b23b75row3_col10,#T_d100af02_2371_11eb_ace0_525400b23b75row10_col3{\n",
        "            background-color:  #dcdaeb;\n",
        "            color:  #000000;\n",
        "        }#T_d100af02_2371_11eb_ace0_525400b23b75row0_col2,#T_d100af02_2371_11eb_ace0_525400b23b75row2_col0{\n",
        "            background-color:  #d6d6e9;\n",
        "            color:  #000000;\n",
        "        }#T_d100af02_2371_11eb_ace0_525400b23b75row0_col3,#T_d100af02_2371_11eb_ace0_525400b23b75row3_col0{\n",
        "            background-color:  #3d93c2;\n",
        "            color:  #000000;\n",
        "        }#T_d100af02_2371_11eb_ace0_525400b23b75row0_col4,#T_d100af02_2371_11eb_ace0_525400b23b75row0_col16,#T_d100af02_2371_11eb_ace0_525400b23b75row4_col0,#T_d100af02_2371_11eb_ace0_525400b23b75row16_col0{\n",
        "            background-color:  #e4e1ef;\n",
        "            color:  #000000;\n",
        "        }#T_d100af02_2371_11eb_ace0_525400b23b75row0_col5,#T_d100af02_2371_11eb_ace0_525400b23b75row0_col6,#T_d100af02_2371_11eb_ace0_525400b23b75row3_col6,#T_d100af02_2371_11eb_ace0_525400b23b75row5_col0,#T_d100af02_2371_11eb_ace0_525400b23b75row6_col0,#T_d100af02_2371_11eb_ace0_525400b23b75row6_col3{\n",
        "            background-color:  #f2ecf5;\n",
        "            color:  #000000;\n",
        "        }#T_d100af02_2371_11eb_ace0_525400b23b75row0_col7,#T_d100af02_2371_11eb_ace0_525400b23b75row7_col0{\n",
        "            background-color:  #d2d3e7;\n",
        "            color:  #000000;\n",
        "        }#T_d100af02_2371_11eb_ace0_525400b23b75row0_col8,#T_d100af02_2371_11eb_ace0_525400b23b75row1_col6,#T_d100af02_2371_11eb_ace0_525400b23b75row2_col6,#T_d100af02_2371_11eb_ace0_525400b23b75row6_col1,#T_d100af02_2371_11eb_ace0_525400b23b75row6_col2,#T_d100af02_2371_11eb_ace0_525400b23b75row8_col0{\n",
        "            background-color:  #dbdaeb;\n",
        "            color:  #000000;\n",
        "        }#T_d100af02_2371_11eb_ace0_525400b23b75row0_col9,#T_d100af02_2371_11eb_ace0_525400b23b75row9_col0{\n",
        "            background-color:  #9cb9d9;\n",
        "            color:  #000000;\n",
        "        }#T_d100af02_2371_11eb_ace0_525400b23b75row0_col10,#T_d100af02_2371_11eb_ace0_525400b23b75row10_col0{\n",
        "            background-color:  #eee8f3;\n",
        "            color:  #000000;\n",
        "        }#T_d100af02_2371_11eb_ace0_525400b23b75row0_col11,#T_d100af02_2371_11eb_ace0_525400b23b75row1_col15,#T_d100af02_2371_11eb_ace0_525400b23b75row11_col0,#T_d100af02_2371_11eb_ace0_525400b23b75row15_col1{\n",
        "            background-color:  #b9c6e0;\n",
        "            color:  #000000;\n",
        "        }#T_d100af02_2371_11eb_ace0_525400b23b75row0_col12,#T_d100af02_2371_11eb_ace0_525400b23b75row12_col0{\n",
        "            background-color:  #d2d2e7;\n",
        "            color:  #000000;\n",
        "        }#T_d100af02_2371_11eb_ace0_525400b23b75row0_col13,#T_d100af02_2371_11eb_ace0_525400b23b75row3_col7,#T_d100af02_2371_11eb_ace0_525400b23b75row7_col3,#T_d100af02_2371_11eb_ace0_525400b23b75row13_col0{\n",
        "            background-color:  #cacee5;\n",
        "            color:  #000000;\n",
        "        }#T_d100af02_2371_11eb_ace0_525400b23b75row0_col14,#T_d100af02_2371_11eb_ace0_525400b23b75row14_col0{\n",
        "            background-color:  #e7e3f0;\n",
        "            color:  #000000;\n",
        "        }#T_d100af02_2371_11eb_ace0_525400b23b75row0_col15,#T_d100af02_2371_11eb_ace0_525400b23b75row1_col9,#T_d100af02_2371_11eb_ace0_525400b23b75row2_col13,#T_d100af02_2371_11eb_ace0_525400b23b75row9_col1,#T_d100af02_2371_11eb_ace0_525400b23b75row13_col2,#T_d100af02_2371_11eb_ace0_525400b23b75row15_col0{\n",
        "            background-color:  #f8f1f8;\n",
        "            color:  #000000;\n",
        "        }#T_d100af02_2371_11eb_ace0_525400b23b75row1_col2,#T_d100af02_2371_11eb_ace0_525400b23b75row2_col1{\n",
        "            background-color:  #023b5d;\n",
        "            color:  #f1f1f1;\n",
        "        }#T_d100af02_2371_11eb_ace0_525400b23b75row1_col3,#T_d100af02_2371_11eb_ace0_525400b23b75row3_col1,#T_d100af02_2371_11eb_ace0_525400b23b75row6_col15,#T_d100af02_2371_11eb_ace0_525400b23b75row15_col6{\n",
        "            background-color:  #0569a4;\n",
        "            color:  #f1f1f1;\n",
        "        }#T_d100af02_2371_11eb_ace0_525400b23b75row1_col4,#T_d100af02_2371_11eb_ace0_525400b23b75row4_col1{\n",
        "            background-color:  #86b0d3;\n",
        "            color:  #000000;\n",
        "        }#T_d100af02_2371_11eb_ace0_525400b23b75row1_col5,#T_d100af02_2371_11eb_ace0_525400b23b75row5_col1{\n",
        "            background-color:  #d8d7e9;\n",
        "            color:  #000000;\n",
        "        }#T_d100af02_2371_11eb_ace0_525400b23b75row1_col7,#T_d100af02_2371_11eb_ace0_525400b23b75row7_col1{\n",
        "            background-color:  #d4d4e8;\n",
        "            color:  #000000;\n",
        "        }#T_d100af02_2371_11eb_ace0_525400b23b75row1_col8,#T_d100af02_2371_11eb_ace0_525400b23b75row8_col1{\n",
        "            background-color:  #e3e0ee;\n",
        "            color:  #000000;\n",
        "        }#T_d100af02_2371_11eb_ace0_525400b23b75row1_col10,#T_d100af02_2371_11eb_ace0_525400b23b75row10_col1{\n",
        "            background-color:  #c6cce3;\n",
        "            color:  #000000;\n",
        "        }#T_d100af02_2371_11eb_ace0_525400b23b75row1_col11,#T_d100af02_2371_11eb_ace0_525400b23b75row3_col11,#T_d100af02_2371_11eb_ace0_525400b23b75row11_col1,#T_d100af02_2371_11eb_ace0_525400b23b75row11_col3{\n",
        "            background-color:  #a9bfdc;\n",
        "            color:  #000000;\n",
        "        }#T_d100af02_2371_11eb_ace0_525400b23b75row1_col12,#T_d100af02_2371_11eb_ace0_525400b23b75row2_col4,#T_d100af02_2371_11eb_ace0_525400b23b75row4_col2,#T_d100af02_2371_11eb_ace0_525400b23b75row4_col14,#T_d100af02_2371_11eb_ace0_525400b23b75row12_col1,#T_d100af02_2371_11eb_ace0_525400b23b75row14_col4{\n",
        "            background-color:  #7eadd1;\n",
        "            color:  #000000;\n",
        "        }#T_d100af02_2371_11eb_ace0_525400b23b75row1_col13,#T_d100af02_2371_11eb_ace0_525400b23b75row13_col1{\n",
        "            background-color:  #f6eff7;\n",
        "            color:  #000000;\n",
        "        }#T_d100af02_2371_11eb_ace0_525400b23b75row1_col14,#T_d100af02_2371_11eb_ace0_525400b23b75row14_col1{\n",
        "            background-color:  #d5d5e8;\n",
        "            color:  #000000;\n",
        "        }#T_d100af02_2371_11eb_ace0_525400b23b75row1_col16,#T_d100af02_2371_11eb_ace0_525400b23b75row5_col11,#T_d100af02_2371_11eb_ace0_525400b23b75row9_col14,#T_d100af02_2371_11eb_ace0_525400b23b75row11_col5,#T_d100af02_2371_11eb_ace0_525400b23b75row14_col9,#T_d100af02_2371_11eb_ace0_525400b23b75row16_col1{\n",
        "            background-color:  #a4bcda;\n",
        "            color:  #000000;\n",
        "        }#T_d100af02_2371_11eb_ace0_525400b23b75row2_col3,#T_d100af02_2371_11eb_ace0_525400b23b75row3_col2{\n",
        "            background-color:  #046198;\n",
        "            color:  #f1f1f1;\n",
        "        }#T_d100af02_2371_11eb_ace0_525400b23b75row2_col5,#T_d100af02_2371_11eb_ace0_525400b23b75row5_col2{\n",
        "            background-color:  #d9d8ea;\n",
        "            color:  #000000;\n",
        "        }#T_d100af02_2371_11eb_ace0_525400b23b75row2_col7,#T_d100af02_2371_11eb_ace0_525400b23b75row7_col2,#T_d100af02_2371_11eb_ace0_525400b23b75row9_col10,#T_d100af02_2371_11eb_ace0_525400b23b75row10_col9{\n",
        "            background-color:  #ced0e6;\n",
        "            color:  #000000;\n",
        "        }#T_d100af02_2371_11eb_ace0_525400b23b75row2_col8,#T_d100af02_2371_11eb_ace0_525400b23b75row8_col2{\n",
        "            background-color:  #e0dded;\n",
        "            color:  #000000;\n",
        "        }#T_d100af02_2371_11eb_ace0_525400b23b75row2_col9,#T_d100af02_2371_11eb_ace0_525400b23b75row9_col2{\n",
        "            background-color:  #fbf4f9;\n",
        "            color:  #000000;\n",
        "        }#T_d100af02_2371_11eb_ace0_525400b23b75row2_col10,#T_d100af02_2371_11eb_ace0_525400b23b75row10_col2,#T_d100af02_2371_11eb_ace0_525400b23b75row12_col14,#T_d100af02_2371_11eb_ace0_525400b23b75row14_col12{\n",
        "            background-color:  #c2cbe2;\n",
        "            color:  #000000;\n",
        "        }#T_d100af02_2371_11eb_ace0_525400b23b75row2_col11,#T_d100af02_2371_11eb_ace0_525400b23b75row11_col2,#T_d100af02_2371_11eb_ace0_525400b23b75row11_col12,#T_d100af02_2371_11eb_ace0_525400b23b75row12_col11{\n",
        "            background-color:  #acc0dd;\n",
        "            color:  #000000;\n",
        "        }#T_d100af02_2371_11eb_ace0_525400b23b75row2_col12,#T_d100af02_2371_11eb_ace0_525400b23b75row12_col2{\n",
        "            background-color:  #6fa7ce;\n",
        "            color:  #000000;\n",
        "        }#T_d100af02_2371_11eb_ace0_525400b23b75row2_col14,#T_d100af02_2371_11eb_ace0_525400b23b75row14_col2{\n",
        "            background-color:  #dad9ea;\n",
        "            color:  #000000;\n",
        "        }#T_d100af02_2371_11eb_ace0_525400b23b75row2_col15,#T_d100af02_2371_11eb_ace0_525400b23b75row15_col2{\n",
        "            background-color:  #c4cbe3;\n",
        "            color:  #000000;\n",
        "        }#T_d100af02_2371_11eb_ace0_525400b23b75row2_col16,#T_d100af02_2371_11eb_ace0_525400b23b75row16_col2{\n",
        "            background-color:  #a2bcda;\n",
        "            color:  #000000;\n",
        "        }#T_d100af02_2371_11eb_ace0_525400b23b75row3_col4,#T_d100af02_2371_11eb_ace0_525400b23b75row4_col3,#T_d100af02_2371_11eb_ace0_525400b23b75row9_col11,#T_d100af02_2371_11eb_ace0_525400b23b75row11_col9{\n",
        "            background-color:  #84b0d3;\n",
        "            color:  #000000;\n",
        "        }#T_d100af02_2371_11eb_ace0_525400b23b75row3_col5,#T_d100af02_2371_11eb_ace0_525400b23b75row5_col3{\n",
        "            background-color:  #ede8f3;\n",
        "            color:  #000000;\n",
        "        }#T_d100af02_2371_11eb_ace0_525400b23b75row3_col8,#T_d100af02_2371_11eb_ace0_525400b23b75row8_col3,#T_d100af02_2371_11eb_ace0_525400b23b75row9_col16,#T_d100af02_2371_11eb_ace0_525400b23b75row16_col9{\n",
        "            background-color:  #dedcec;\n",
        "            color:  #000000;\n",
        "        }#T_d100af02_2371_11eb_ace0_525400b23b75row3_col9,#T_d100af02_2371_11eb_ace0_525400b23b75row9_col3{\n",
        "            background-color:  #fef6fa;\n",
        "            color:  #000000;\n",
        "        }#T_d100af02_2371_11eb_ace0_525400b23b75row3_col12,#T_d100af02_2371_11eb_ace0_525400b23b75row4_col5,#T_d100af02_2371_11eb_ace0_525400b23b75row5_col4,#T_d100af02_2371_11eb_ace0_525400b23b75row12_col3{\n",
        "            background-color:  #7bacd1;\n",
        "            color:  #000000;\n",
        "        }#T_d100af02_2371_11eb_ace0_525400b23b75row3_col13,#T_d100af02_2371_11eb_ace0_525400b23b75row13_col3{\n",
        "            background-color:  #fff7fb;\n",
        "            color:  #000000;\n",
        "        }#T_d100af02_2371_11eb_ace0_525400b23b75row3_col14,#T_d100af02_2371_11eb_ace0_525400b23b75row14_col3{\n",
        "            background-color:  #f9f2f8;\n",
        "            color:  #000000;\n",
        "        }#T_d100af02_2371_11eb_ace0_525400b23b75row3_col15,#T_d100af02_2371_11eb_ace0_525400b23b75row15_col3{\n",
        "            background-color:  #f3edf5;\n",
        "            color:  #000000;\n",
        "        }#T_d100af02_2371_11eb_ace0_525400b23b75row3_col16,#T_d100af02_2371_11eb_ace0_525400b23b75row16_col3{\n",
        "            background-color:  #b5c4df;\n",
        "            color:  #000000;\n",
        "        }#T_d100af02_2371_11eb_ace0_525400b23b75row4_col6,#T_d100af02_2371_11eb_ace0_525400b23b75row6_col4{\n",
        "            background-color:  #81aed2;\n",
        "            color:  #000000;\n",
        "        }#T_d100af02_2371_11eb_ace0_525400b23b75row4_col7,#T_d100af02_2371_11eb_ace0_525400b23b75row4_col16,#T_d100af02_2371_11eb_ace0_525400b23b75row7_col4,#T_d100af02_2371_11eb_ace0_525400b23b75row16_col4{\n",
        "            background-color:  #71a8ce;\n",
        "            color:  #000000;\n",
        "        }#T_d100af02_2371_11eb_ace0_525400b23b75row4_col8,#T_d100af02_2371_11eb_ace0_525400b23b75row8_col4{\n",
        "            background-color:  #88b1d4;\n",
        "            color:  #000000;\n",
        "        }#T_d100af02_2371_11eb_ace0_525400b23b75row4_col9,#T_d100af02_2371_11eb_ace0_525400b23b75row9_col4{\n",
        "            background-color:  #f4eef6;\n",
        "            color:  #000000;\n",
        "        }#T_d100af02_2371_11eb_ace0_525400b23b75row4_col10,#T_d100af02_2371_11eb_ace0_525400b23b75row10_col4{\n",
        "            background-color:  #63a2cb;\n",
        "            color:  #000000;\n",
        "        }#T_d100af02_2371_11eb_ace0_525400b23b75row4_col11,#T_d100af02_2371_11eb_ace0_525400b23b75row11_col4{\n",
        "            background-color:  #79abd0;\n",
        "            color:  #000000;\n",
        "        }#T_d100af02_2371_11eb_ace0_525400b23b75row4_col12,#T_d100af02_2371_11eb_ace0_525400b23b75row12_col4,#T_d100af02_2371_11eb_ace0_525400b23b75row12_col13,#T_d100af02_2371_11eb_ace0_525400b23b75row13_col12{\n",
        "            background-color:  #75a9cf;\n",
        "            color:  #000000;\n",
        "        }#T_d100af02_2371_11eb_ace0_525400b23b75row4_col13,#T_d100af02_2371_11eb_ace0_525400b23b75row7_col9,#T_d100af02_2371_11eb_ace0_525400b23b75row9_col7,#T_d100af02_2371_11eb_ace0_525400b23b75row13_col4{\n",
        "            background-color:  #c5cce3;\n",
        "            color:  #000000;\n",
        "        }#T_d100af02_2371_11eb_ace0_525400b23b75row4_col15,#T_d100af02_2371_11eb_ace0_525400b23b75row15_col4{\n",
        "            background-color:  #76aad0;\n",
        "            color:  #000000;\n",
        "        }#T_d100af02_2371_11eb_ace0_525400b23b75row5_col6,#T_d100af02_2371_11eb_ace0_525400b23b75row6_col5{\n",
        "            background-color:  #034267;\n",
        "            color:  #f1f1f1;\n",
        "        }#T_d100af02_2371_11eb_ace0_525400b23b75row5_col7,#T_d100af02_2371_11eb_ace0_525400b23b75row7_col5{\n",
        "            background-color:  #045585;\n",
        "            color:  #f1f1f1;\n",
        "        }#T_d100af02_2371_11eb_ace0_525400b23b75row5_col8,#T_d100af02_2371_11eb_ace0_525400b23b75row8_col5{\n",
        "            background-color:  #045c90;\n",
        "            color:  #f1f1f1;\n",
        "        }#T_d100af02_2371_11eb_ace0_525400b23b75row5_col9,#T_d100af02_2371_11eb_ace0_525400b23b75row9_col5{\n",
        "            background-color:  #b8c6e0;\n",
        "            color:  #000000;\n",
        "        }#T_d100af02_2371_11eb_ace0_525400b23b75row5_col10,#T_d100af02_2371_11eb_ace0_525400b23b75row10_col5{\n",
        "            background-color:  #034871;\n",
        "            color:  #f1f1f1;\n",
        "        }#T_d100af02_2371_11eb_ace0_525400b23b75row5_col12,#T_d100af02_2371_11eb_ace0_525400b23b75row12_col5{\n",
        "            background-color:  #3790c0;\n",
        "            color:  #000000;\n",
        "        }#T_d100af02_2371_11eb_ace0_525400b23b75row5_col13,#T_d100af02_2371_11eb_ace0_525400b23b75row13_col5{\n",
        "            background-color:  #0566a0;\n",
        "            color:  #f1f1f1;\n",
        "        }#T_d100af02_2371_11eb_ace0_525400b23b75row5_col14,#T_d100af02_2371_11eb_ace0_525400b23b75row14_col5{\n",
        "            background-color:  #2383ba;\n",
        "            color:  #000000;\n",
        "        }#T_d100af02_2371_11eb_ace0_525400b23b75row5_col15,#T_d100af02_2371_11eb_ace0_525400b23b75row7_col12,#T_d100af02_2371_11eb_ace0_525400b23b75row12_col7,#T_d100af02_2371_11eb_ace0_525400b23b75row15_col5{\n",
        "            background-color:  #056fae;\n",
        "            color:  #f1f1f1;\n",
        "        }#T_d100af02_2371_11eb_ace0_525400b23b75row5_col16,#T_d100af02_2371_11eb_ace0_525400b23b75row16_col5{\n",
        "            background-color:  #046097;\n",
        "            color:  #f1f1f1;\n",
        "        }#T_d100af02_2371_11eb_ace0_525400b23b75row6_col7,#T_d100af02_2371_11eb_ace0_525400b23b75row7_col6{\n",
        "            background-color:  #04588a;\n",
        "            color:  #f1f1f1;\n",
        "        }#T_d100af02_2371_11eb_ace0_525400b23b75row6_col8,#T_d100af02_2371_11eb_ace0_525400b23b75row8_col6{\n",
        "            background-color:  #045b8f;\n",
        "            color:  #f1f1f1;\n",
        "        }#T_d100af02_2371_11eb_ace0_525400b23b75row6_col9,#T_d100af02_2371_11eb_ace0_525400b23b75row9_col6{\n",
        "            background-color:  #adc1dd;\n",
        "            color:  #000000;\n",
        "        }#T_d100af02_2371_11eb_ace0_525400b23b75row6_col10,#T_d100af02_2371_11eb_ace0_525400b23b75row10_col6{\n",
        "            background-color:  #034973;\n",
        "            color:  #f1f1f1;\n",
        "        }#T_d100af02_2371_11eb_ace0_525400b23b75row6_col11,#T_d100af02_2371_11eb_ace0_525400b23b75row11_col6{\n",
        "            background-color:  #b0c2de;\n",
        "            color:  #000000;\n",
        "        }#T_d100af02_2371_11eb_ace0_525400b23b75row6_col12,#T_d100af02_2371_11eb_ace0_525400b23b75row12_col6{\n",
        "            background-color:  #4697c4;\n",
        "            color:  #000000;\n",
        "        }#T_d100af02_2371_11eb_ace0_525400b23b75row6_col13,#T_d100af02_2371_11eb_ace0_525400b23b75row13_col6{\n",
        "            background-color:  #04639b;\n",
        "            color:  #f1f1f1;\n",
        "        }#T_d100af02_2371_11eb_ace0_525400b23b75row6_col14,#T_d100af02_2371_11eb_ace0_525400b23b75row14_col6{\n",
        "            background-color:  #0f76b3;\n",
        "            color:  #f1f1f1;\n",
        "        }#T_d100af02_2371_11eb_ace0_525400b23b75row6_col16,#T_d100af02_2371_11eb_ace0_525400b23b75row12_col16,#T_d100af02_2371_11eb_ace0_525400b23b75row16_col6,#T_d100af02_2371_11eb_ace0_525400b23b75row16_col12{\n",
        "            background-color:  #04649d;\n",
        "            color:  #f1f1f1;\n",
        "        }#T_d100af02_2371_11eb_ace0_525400b23b75row7_col8,#T_d100af02_2371_11eb_ace0_525400b23b75row8_col7{\n",
        "            background-color:  #045e94;\n",
        "            color:  #f1f1f1;\n",
        "        }#T_d100af02_2371_11eb_ace0_525400b23b75row7_col10,#T_d100af02_2371_11eb_ace0_525400b23b75row10_col7{\n",
        "            background-color:  #045687;\n",
        "            color:  #f1f1f1;\n",
        "        }#T_d100af02_2371_11eb_ace0_525400b23b75row7_col11,#T_d100af02_2371_11eb_ace0_525400b23b75row11_col7{\n",
        "            background-color:  #9ab8d8;\n",
        "            color:  #000000;\n",
        "        }#T_d100af02_2371_11eb_ace0_525400b23b75row7_col13,#T_d100af02_2371_11eb_ace0_525400b23b75row13_col7{\n",
        "            background-color:  #056dab;\n",
        "            color:  #f1f1f1;\n",
        "        }#T_d100af02_2371_11eb_ace0_525400b23b75row7_col14,#T_d100af02_2371_11eb_ace0_525400b23b75row14_col7{\n",
        "            background-color:  #65a3cb;\n",
        "            color:  #000000;\n",
        "        }#T_d100af02_2371_11eb_ace0_525400b23b75row7_col15,#T_d100af02_2371_11eb_ace0_525400b23b75row9_col13,#T_d100af02_2371_11eb_ace0_525400b23b75row13_col9,#T_d100af02_2371_11eb_ace0_525400b23b75row15_col7{\n",
        "            background-color:  #4094c3;\n",
        "            color:  #000000;\n",
        "        }#T_d100af02_2371_11eb_ace0_525400b23b75row7_col16,#T_d100af02_2371_11eb_ace0_525400b23b75row16_col7{\n",
        "            background-color:  #045d92;\n",
        "            color:  #f1f1f1;\n",
        "        }#T_d100af02_2371_11eb_ace0_525400b23b75row8_col9,#T_d100af02_2371_11eb_ace0_525400b23b75row9_col8{\n",
        "            background-color:  #b7c5df;\n",
        "            color:  #000000;\n",
        "        }#T_d100af02_2371_11eb_ace0_525400b23b75row8_col10,#T_d100af02_2371_11eb_ace0_525400b23b75row10_col8{\n",
        "            background-color:  #045e93;\n",
        "            color:  #f1f1f1;\n",
        "        }#T_d100af02_2371_11eb_ace0_525400b23b75row8_col11,#T_d100af02_2371_11eb_ace0_525400b23b75row11_col8,#T_d100af02_2371_11eb_ace0_525400b23b75row12_col15,#T_d100af02_2371_11eb_ace0_525400b23b75row15_col12{\n",
        "            background-color:  #abbfdc;\n",
        "            color:  #000000;\n",
        "        }#T_d100af02_2371_11eb_ace0_525400b23b75row8_col12,#T_d100af02_2371_11eb_ace0_525400b23b75row12_col8{\n",
        "            background-color:  #2182b9;\n",
        "            color:  #000000;\n",
        "        }#T_d100af02_2371_11eb_ace0_525400b23b75row8_col13,#T_d100af02_2371_11eb_ace0_525400b23b75row13_col8{\n",
        "            background-color:  #1278b4;\n",
        "            color:  #f1f1f1;\n",
        "        }#T_d100af02_2371_11eb_ace0_525400b23b75row8_col14,#T_d100af02_2371_11eb_ace0_525400b23b75row14_col8{\n",
        "            background-color:  #6ba5cd;\n",
        "            color:  #000000;\n",
        "        }#T_d100af02_2371_11eb_ace0_525400b23b75row8_col15,#T_d100af02_2371_11eb_ace0_525400b23b75row15_col8{\n",
        "            background-color:  #62a2cb;\n",
        "            color:  #000000;\n",
        "        }#T_d100af02_2371_11eb_ace0_525400b23b75row8_col16,#T_d100af02_2371_11eb_ace0_525400b23b75row16_col8{\n",
        "            background-color:  #056aa6;\n",
        "            color:  #f1f1f1;\n",
        "        }#T_d100af02_2371_11eb_ace0_525400b23b75row9_col12,#T_d100af02_2371_11eb_ace0_525400b23b75row12_col9{\n",
        "            background-color:  #ede7f2;\n",
        "            color:  #000000;\n",
        "        }#T_d100af02_2371_11eb_ace0_525400b23b75row9_col15,#T_d100af02_2371_11eb_ace0_525400b23b75row11_col13,#T_d100af02_2371_11eb_ace0_525400b23b75row13_col11,#T_d100af02_2371_11eb_ace0_525400b23b75row15_col9{\n",
        "            background-color:  #a8bedc;\n",
        "            color:  #000000;\n",
        "        }#T_d100af02_2371_11eb_ace0_525400b23b75row10_col11,#T_d100af02_2371_11eb_ace0_525400b23b75row11_col10,#T_d100af02_2371_11eb_ace0_525400b23b75row11_col16,#T_d100af02_2371_11eb_ace0_525400b23b75row16_col11{\n",
        "            background-color:  #8bb2d4;\n",
        "            color:  #000000;\n",
        "        }#T_d100af02_2371_11eb_ace0_525400b23b75row10_col12,#T_d100af02_2371_11eb_ace0_525400b23b75row12_col10,#T_d100af02_2371_11eb_ace0_525400b23b75row15_col16,#T_d100af02_2371_11eb_ace0_525400b23b75row16_col15{\n",
        "            background-color:  #3991c1;\n",
        "            color:  #000000;\n",
        "        }#T_d100af02_2371_11eb_ace0_525400b23b75row10_col13,#T_d100af02_2371_11eb_ace0_525400b23b75row13_col10,#T_d100af02_2371_11eb_ace0_525400b23b75row13_col16,#T_d100af02_2371_11eb_ace0_525400b23b75row16_col13{\n",
        "            background-color:  #0872b1;\n",
        "            color:  #f1f1f1;\n",
        "        }#T_d100af02_2371_11eb_ace0_525400b23b75row10_col14,#T_d100af02_2371_11eb_ace0_525400b23b75row14_col10{\n",
        "            background-color:  #197db7;\n",
        "            color:  #000000;\n",
        "        }#T_d100af02_2371_11eb_ace0_525400b23b75row10_col15,#T_d100af02_2371_11eb_ace0_525400b23b75row15_col10{\n",
        "            background-color:  #0a73b2;\n",
        "            color:  #f1f1f1;\n",
        "        }#T_d100af02_2371_11eb_ace0_525400b23b75row10_col16,#T_d100af02_2371_11eb_ace0_525400b23b75row16_col10{\n",
        "            background-color:  #0567a2;\n",
        "            color:  #f1f1f1;\n",
        "        }#T_d100af02_2371_11eb_ace0_525400b23b75row11_col14,#T_d100af02_2371_11eb_ace0_525400b23b75row14_col11{\n",
        "            background-color:  #bcc7e1;\n",
        "            color:  #000000;\n",
        "        }#T_d100af02_2371_11eb_ace0_525400b23b75row11_col15,#T_d100af02_2371_11eb_ace0_525400b23b75row15_col11{\n",
        "            background-color:  #afc1dd;\n",
        "            color:  #000000;\n",
        "        }#T_d100af02_2371_11eb_ace0_525400b23b75row13_col14,#T_d100af02_2371_11eb_ace0_525400b23b75row14_col13{\n",
        "            background-color:  #2f8bbe;\n",
        "            color:  #000000;\n",
        "        }#T_d100af02_2371_11eb_ace0_525400b23b75row13_col15,#T_d100af02_2371_11eb_ace0_525400b23b75row15_col13{\n",
        "            background-color:  #167bb6;\n",
        "            color:  #000000;\n",
        "        }#T_d100af02_2371_11eb_ace0_525400b23b75row14_col15,#T_d100af02_2371_11eb_ace0_525400b23b75row15_col14{\n",
        "            background-color:  #046299;\n",
        "            color:  #f1f1f1;\n",
        "        }#T_d100af02_2371_11eb_ace0_525400b23b75row14_col16,#T_d100af02_2371_11eb_ace0_525400b23b75row16_col14{\n",
        "            background-color:  #8cb3d5;\n",
        "            color:  #000000;\n",
        "        }</style><table id=\"T_d100af02_2371_11eb_ace0_525400b23b75\" ><thead>    <tr>        <th class=\"blank level0\" ></th>        <th class=\"col_heading level0 col0\" >Rt</th>        <th class=\"col_heading level0 col1\" >theta</th>        <th class=\"col_heading level0 col2\" >kappa</th>        <th class=\"col_heading level0 col3\" >rho</th>        <th class=\"col_heading level0 col4\" >sigma</th>        <th class=\"col_heading level0 col5\" >School_closing</th>        <th class=\"col_heading level0 col6\" >Workplace_closing</th>        <th class=\"col_heading level0 col7\" >Cancel_events</th>        <th class=\"col_heading level0 col8\" >Gatherings_restrictions</th>        <th class=\"col_heading level0 col9\" >Transport_closing</th>        <th class=\"col_heading level0 col10\" >Stay_home_restrictions</th>        <th class=\"col_heading level0 col11\" >Internal_movement_restrictions</th>        <th class=\"col_heading level0 col12\" >International_movement_restrictions</th>        <th class=\"col_heading level0 col13\" >Information_campaigns</th>        <th class=\"col_heading level0 col14\" >Testing_policy</th>        <th class=\"col_heading level0 col15\" >Contact_tracing</th>        <th class=\"col_heading level0 col16\" >Stringency_index</th>    </tr></thead><tbody>\n",
        "                <tr>\n",
        "                        <th id=\"T_d100af02_2371_11eb_ace0_525400b23b75level0_row0\" class=\"row_heading level0 row0\" >Rt</th>\n",
        "                        <td id=\"T_d100af02_2371_11eb_ace0_525400b23b75row0_col0\" class=\"data row0 col0\" >1.000000</td>\n",
        "                        <td id=\"T_d100af02_2371_11eb_ace0_525400b23b75row0_col1\" class=\"data row0 col1\" >-0.247082</td>\n",
        "                        <td id=\"T_d100af02_2371_11eb_ace0_525400b23b75row0_col2\" class=\"data row0 col2\" >-0.204303</td>\n",
        "                        <td id=\"T_d100af02_2371_11eb_ace0_525400b23b75row0_col3\" class=\"data row0 col3\" >0.398347</td>\n",
        "                        <td id=\"T_d100af02_2371_11eb_ace0_525400b23b75row0_col4\" class=\"data row0 col4\" >-0.302335</td>\n",
        "                        <td id=\"T_d100af02_2371_11eb_ace0_525400b23b75row0_col5\" class=\"data row0 col5\" >-0.420675</td>\n",
        "                        <td id=\"T_d100af02_2371_11eb_ace0_525400b23b75row0_col6\" class=\"data row0 col6\" >-0.423953</td>\n",
        "                        <td id=\"T_d100af02_2371_11eb_ace0_525400b23b75row0_col7\" class=\"data row0 col7\" >-0.182290</td>\n",
        "                        <td id=\"T_d100af02_2371_11eb_ace0_525400b23b75row0_col8\" class=\"data row0 col8\" >-0.239740</td>\n",
        "                        <td id=\"T_d100af02_2371_11eb_ace0_525400b23b75row0_col9\" class=\"data row0 col9\" >0.066570</td>\n",
        "                        <td id=\"T_d100af02_2371_11eb_ace0_525400b23b75row0_col10\" class=\"data row0 col10\" >-0.372901</td>\n",
        "                        <td id=\"T_d100af02_2371_11eb_ace0_525400b23b75row0_col11\" class=\"data row0 col11\" >-0.056188</td>\n",
        "                        <td id=\"T_d100af02_2371_11eb_ace0_525400b23b75row0_col12\" class=\"data row0 col12\" >-0.175368</td>\n",
        "                        <td id=\"T_d100af02_2371_11eb_ace0_525400b23b75row0_col13\" class=\"data row0 col13\" >-0.140128</td>\n",
        "                        <td id=\"T_d100af02_2371_11eb_ace0_525400b23b75row0_col14\" class=\"data row0 col14\" >-0.327900</td>\n",
        "                        <td id=\"T_d100af02_2371_11eb_ace0_525400b23b75row0_col15\" class=\"data row0 col15\" >-0.478393</td>\n",
        "                        <td id=\"T_d100af02_2371_11eb_ace0_525400b23b75row0_col16\" class=\"data row0 col16\" >-0.302717</td>\n",
        "            </tr>\n",
        "            <tr>\n",
        "                        <th id=\"T_d100af02_2371_11eb_ace0_525400b23b75level0_row1\" class=\"row_heading level0 row1\" >theta</th>\n",
        "                        <td id=\"T_d100af02_2371_11eb_ace0_525400b23b75row1_col0\" class=\"data row1 col0\" >-0.247082</td>\n",
        "                        <td id=\"T_d100af02_2371_11eb_ace0_525400b23b75row1_col1\" class=\"data row1 col1\" >1.000000</td>\n",
        "                        <td id=\"T_d100af02_2371_11eb_ace0_525400b23b75row1_col2\" class=\"data row1 col2\" >0.977340</td>\n",
        "                        <td id=\"T_d100af02_2371_11eb_ace0_525400b23b75row1_col3\" class=\"data row1 col3\" >0.678360</td>\n",
        "                        <td id=\"T_d100af02_2371_11eb_ace0_525400b23b75row1_col4\" class=\"data row1 col4\" >0.153534</td>\n",
        "                        <td id=\"T_d100af02_2371_11eb_ace0_525400b23b75row1_col5\" class=\"data row1 col5\" >-0.213654</td>\n",
        "                        <td id=\"T_d100af02_2371_11eb_ace0_525400b23b75row1_col6\" class=\"data row1 col6\" >-0.240148</td>\n",
        "                        <td id=\"T_d100af02_2371_11eb_ace0_525400b23b75row1_col7\" class=\"data row1 col7\" >-0.192974</td>\n",
        "                        <td id=\"T_d100af02_2371_11eb_ace0_525400b23b75row1_col8\" class=\"data row1 col8\" >-0.292812</td>\n",
        "                        <td id=\"T_d100af02_2371_11eb_ace0_525400b23b75row1_col9\" class=\"data row1 col9\" >-0.479318</td>\n",
        "                        <td id=\"T_d100af02_2371_11eb_ace0_525400b23b75row1_col10\" class=\"data row1 col10\" >-0.116181</td>\n",
        "                        <td id=\"T_d100af02_2371_11eb_ace0_525400b23b75row1_col11\" class=\"data row1 col11\" >0.017158</td>\n",
        "                        <td id=\"T_d100af02_2371_11eb_ace0_525400b23b75row1_col12\" class=\"data row1 col12\" >0.184967</td>\n",
        "                        <td id=\"T_d100af02_2371_11eb_ace0_525400b23b75row1_col13\" class=\"data row1 col13\" >-0.459918</td>\n",
        "                        <td id=\"T_d100af02_2371_11eb_ace0_525400b23b75row1_col14\" class=\"data row1 col14\" >-0.198424</td>\n",
        "                        <td id=\"T_d100af02_2371_11eb_ace0_525400b23b75row1_col15\" class=\"data row1 col15\" >-0.060817</td>\n",
        "                        <td id=\"T_d100af02_2371_11eb_ace0_525400b23b75row1_col16\" class=\"data row1 col16\" >0.038725</td>\n",
        "            </tr>\n",
        "            <tr>\n",
        "                        <th id=\"T_d100af02_2371_11eb_ace0_525400b23b75level0_row2\" class=\"row_heading level0 row2\" >kappa</th>\n",
        "                        <td id=\"T_d100af02_2371_11eb_ace0_525400b23b75row2_col0\" class=\"data row2 col0\" >-0.204303</td>\n",
        "                        <td id=\"T_d100af02_2371_11eb_ace0_525400b23b75row2_col1\" class=\"data row2 col1\" >0.977340</td>\n",
        "                        <td id=\"T_d100af02_2371_11eb_ace0_525400b23b75row2_col2\" class=\"data row2 col2\" >1.000000</td>\n",
        "                        <td id=\"T_d100af02_2371_11eb_ace0_525400b23b75row2_col3\" class=\"data row2 col3\" >0.744635</td>\n",
        "                        <td id=\"T_d100af02_2371_11eb_ace0_525400b23b75row2_col4\" class=\"data row2 col4\" >0.184113</td>\n",
        "                        <td id=\"T_d100af02_2371_11eb_ace0_525400b23b75row2_col5\" class=\"data row2 col5\" >-0.219555</td>\n",
        "                        <td id=\"T_d100af02_2371_11eb_ace0_525400b23b75row2_col6\" class=\"data row2 col6\" >-0.242233</td>\n",
        "                        <td id=\"T_d100af02_2371_11eb_ace0_525400b23b75row2_col7\" class=\"data row2 col7\" >-0.156034</td>\n",
        "                        <td id=\"T_d100af02_2371_11eb_ace0_525400b23b75row2_col8\" class=\"data row2 col8\" >-0.270324</td>\n",
        "                        <td id=\"T_d100af02_2371_11eb_ace0_525400b23b75row2_col9\" class=\"data row2 col9\" >-0.515037</td>\n",
        "                        <td id=\"T_d100af02_2371_11eb_ace0_525400b23b75row2_col10\" class=\"data row2 col10\" >-0.102874</td>\n",
        "                        <td id=\"T_d100af02_2371_11eb_ace0_525400b23b75row2_col11\" class=\"data row2 col11\" >-0.000130</td>\n",
        "                        <td id=\"T_d100af02_2371_11eb_ace0_525400b23b75row2_col12\" class=\"data row2 col12\" >0.236886</td>\n",
        "                        <td id=\"T_d100af02_2371_11eb_ace0_525400b23b75row2_col13\" class=\"data row2 col13\" >-0.482204</td>\n",
        "                        <td id=\"T_d100af02_2371_11eb_ace0_525400b23b75row2_col14\" class=\"data row2 col14\" >-0.235522</td>\n",
        "                        <td id=\"T_d100af02_2371_11eb_ace0_525400b23b75row2_col15\" class=\"data row2 col15\" >-0.109792</td>\n",
        "                        <td id=\"T_d100af02_2371_11eb_ace0_525400b23b75row2_col16\" class=\"data row2 col16\" >0.047191</td>\n",
        "            </tr>\n",
        "            <tr>\n",
        "                        <th id=\"T_d100af02_2371_11eb_ace0_525400b23b75level0_row3\" class=\"row_heading level0 row3\" >rho</th>\n",
        "                        <td id=\"T_d100af02_2371_11eb_ace0_525400b23b75row3_col0\" class=\"data row3 col0\" >0.398347</td>\n",
        "                        <td id=\"T_d100af02_2371_11eb_ace0_525400b23b75row3_col1\" class=\"data row3 col1\" >0.678360</td>\n",
        "                        <td id=\"T_d100af02_2371_11eb_ace0_525400b23b75row3_col2\" class=\"data row3 col2\" >0.744635</td>\n",
        "                        <td id=\"T_d100af02_2371_11eb_ace0_525400b23b75row3_col3\" class=\"data row3 col3\" >1.000000</td>\n",
        "                        <td id=\"T_d100af02_2371_11eb_ace0_525400b23b75row3_col4\" class=\"data row3 col4\" >0.158530</td>\n",
        "                        <td id=\"T_d100af02_2371_11eb_ace0_525400b23b75row3_col5\" class=\"data row3 col5\" >-0.366248</td>\n",
        "                        <td id=\"T_d100af02_2371_11eb_ace0_525400b23b75row3_col6\" class=\"data row3 col6\" >-0.417196</td>\n",
        "                        <td id=\"T_d100af02_2371_11eb_ace0_525400b23b75row3_col7\" class=\"data row3 col7\" >-0.138481</td>\n",
        "                        <td id=\"T_d100af02_2371_11eb_ace0_525400b23b75row3_col8\" class=\"data row3 col8\" >-0.257977</td>\n",
        "                        <td id=\"T_d100af02_2371_11eb_ace0_525400b23b75row3_col9\" class=\"data row3 col9\" >-0.537034</td>\n",
        "                        <td id=\"T_d100af02_2371_11eb_ace0_525400b23b75row3_col10\" class=\"data row3 col10\" >-0.243783</td>\n",
        "                        <td id=\"T_d100af02_2371_11eb_ace0_525400b23b75row3_col11\" class=\"data row3 col11\" >0.014222</td>\n",
        "                        <td id=\"T_d100af02_2371_11eb_ace0_525400b23b75row3_col12\" class=\"data row3 col12\" >0.198271</td>\n",
        "                        <td id=\"T_d100af02_2371_11eb_ace0_525400b23b75row3_col13\" class=\"data row3 col13\" >-0.552939</td>\n",
        "                        <td id=\"T_d100af02_2371_11eb_ace0_525400b23b75row3_col14\" class=\"data row3 col14\" >-0.489596</td>\n",
        "                        <td id=\"T_d100af02_2371_11eb_ace0_525400b23b75row3_col15\" class=\"data row3 col15\" >-0.428699</td>\n",
        "                        <td id=\"T_d100af02_2371_11eb_ace0_525400b23b75row3_col16\" class=\"data row3 col16\" >-0.038220</td>\n",
        "            </tr>\n",
        "            <tr>\n",
        "                        <th id=\"T_d100af02_2371_11eb_ace0_525400b23b75level0_row4\" class=\"row_heading level0 row4\" >sigma</th>\n",
        "                        <td id=\"T_d100af02_2371_11eb_ace0_525400b23b75row4_col0\" class=\"data row4 col0\" >-0.302335</td>\n",
        "                        <td id=\"T_d100af02_2371_11eb_ace0_525400b23b75row4_col1\" class=\"data row4 col1\" >0.153534</td>\n",
        "                        <td id=\"T_d100af02_2371_11eb_ace0_525400b23b75row4_col2\" class=\"data row4 col2\" >0.184113</td>\n",
        "                        <td id=\"T_d100af02_2371_11eb_ace0_525400b23b75row4_col3\" class=\"data row4 col3\" >0.158530</td>\n",
        "                        <td id=\"T_d100af02_2371_11eb_ace0_525400b23b75row4_col4\" class=\"data row4 col4\" >1.000000</td>\n",
        "                        <td id=\"T_d100af02_2371_11eb_ace0_525400b23b75row4_col5\" class=\"data row4 col5\" >0.195391</td>\n",
        "                        <td id=\"T_d100af02_2371_11eb_ace0_525400b23b75row4_col6\" class=\"data row4 col6\" >0.171134</td>\n",
        "                        <td id=\"T_d100af02_2371_11eb_ace0_525400b23b75row4_col7\" class=\"data row4 col7\" >0.234372</td>\n",
        "                        <td id=\"T_d100af02_2371_11eb_ace0_525400b23b75row4_col8\" class=\"data row4 col8\" >0.146051</td>\n",
        "                        <td id=\"T_d100af02_2371_11eb_ace0_525400b23b75row4_col9\" class=\"data row4 col9\" >-0.443598</td>\n",
        "                        <td id=\"T_d100af02_2371_11eb_ace0_525400b23b75row4_col10\" class=\"data row4 col10\" >0.272706</td>\n",
        "                        <td id=\"T_d100af02_2371_11eb_ace0_525400b23b75row4_col11\" class=\"data row4 col11\" >0.201478</td>\n",
        "                        <td id=\"T_d100af02_2371_11eb_ace0_525400b23b75row4_col12\" class=\"data row4 col12\" >0.218059</td>\n",
        "                        <td id=\"T_d100af02_2371_11eb_ace0_525400b23b75row4_col13\" class=\"data row4 col13\" >-0.111751</td>\n",
        "                        <td id=\"T_d100af02_2371_11eb_ace0_525400b23b75row4_col14\" class=\"data row4 col14\" >0.183599</td>\n",
        "                        <td id=\"T_d100af02_2371_11eb_ace0_525400b23b75row4_col15\" class=\"data row4 col15\" >0.217064</td>\n",
        "                        <td id=\"T_d100af02_2371_11eb_ace0_525400b23b75row4_col16\" class=\"data row4 col16\" >0.231023</td>\n",
        "            </tr>\n",
        "            <tr>\n",
        "                        <th id=\"T_d100af02_2371_11eb_ace0_525400b23b75level0_row5\" class=\"row_heading level0 row5\" >School_closing</th>\n",
        "                        <td id=\"T_d100af02_2371_11eb_ace0_525400b23b75row5_col0\" class=\"data row5 col0\" >-0.420675</td>\n",
        "                        <td id=\"T_d100af02_2371_11eb_ace0_525400b23b75row5_col1\" class=\"data row5 col1\" >-0.213654</td>\n",
        "                        <td id=\"T_d100af02_2371_11eb_ace0_525400b23b75row5_col2\" class=\"data row5 col2\" >-0.219555</td>\n",
        "                        <td id=\"T_d100af02_2371_11eb_ace0_525400b23b75row5_col3\" class=\"data row5 col3\" >-0.366248</td>\n",
        "                        <td id=\"T_d100af02_2371_11eb_ace0_525400b23b75row5_col4\" class=\"data row5 col4\" >0.195391</td>\n",
        "                        <td id=\"T_d100af02_2371_11eb_ace0_525400b23b75row5_col5\" class=\"data row5 col5\" >1.000000</td>\n",
        "                        <td id=\"T_d100af02_2371_11eb_ace0_525400b23b75row5_col6\" class=\"data row5 col6\" >0.945339</td>\n",
        "                        <td id=\"T_d100af02_2371_11eb_ace0_525400b23b75row5_col7\" class=\"data row5 col7\" >0.833099</td>\n",
        "                        <td id=\"T_d100af02_2371_11eb_ace0_525400b23b75row5_col8\" class=\"data row5 col8\" >0.787154</td>\n",
        "                        <td id=\"T_d100af02_2371_11eb_ace0_525400b23b75row5_col9\" class=\"data row5 col9\" >-0.054450</td>\n",
        "                        <td id=\"T_d100af02_2371_11eb_ace0_525400b23b75row5_col10\" class=\"data row5 col10\" >0.904302</td>\n",
        "                        <td id=\"T_d100af02_2371_11eb_ace0_525400b23b75row5_col11\" class=\"data row5 col11\" >0.039243</td>\n",
        "                        <td id=\"T_d100af02_2371_11eb_ace0_525400b23b75row5_col12\" class=\"data row5 col12\" >0.416609</td>\n",
        "                        <td id=\"T_d100af02_2371_11eb_ace0_525400b23b75row5_col13\" class=\"data row5 col13\" >0.696911</td>\n",
        "                        <td id=\"T_d100af02_2371_11eb_ace0_525400b23b75row5_col14\" class=\"data row5 col14\" >0.496456</td>\n",
        "                        <td id=\"T_d100af02_2371_11eb_ace0_525400b23b75row5_col15\" class=\"data row5 col15\" >0.622606</td>\n",
        "                        <td id=\"T_d100af02_2371_11eb_ace0_525400b23b75row5_col16\" class=\"data row5 col16\" >0.749849</td>\n",
        "            </tr>\n",
        "            <tr>\n",
        "                        <th id=\"T_d100af02_2371_11eb_ace0_525400b23b75level0_row6\" class=\"row_heading level0 row6\" >Workplace_closing</th>\n",
        "                        <td id=\"T_d100af02_2371_11eb_ace0_525400b23b75row6_col0\" class=\"data row6 col0\" >-0.423953</td>\n",
        "                        <td id=\"T_d100af02_2371_11eb_ace0_525400b23b75row6_col1\" class=\"data row6 col1\" >-0.240148</td>\n",
        "                        <td id=\"T_d100af02_2371_11eb_ace0_525400b23b75row6_col2\" class=\"data row6 col2\" >-0.242233</td>\n",
        "                        <td id=\"T_d100af02_2371_11eb_ace0_525400b23b75row6_col3\" class=\"data row6 col3\" >-0.417196</td>\n",
        "                        <td id=\"T_d100af02_2371_11eb_ace0_525400b23b75row6_col4\" class=\"data row6 col4\" >0.171134</td>\n",
        "                        <td id=\"T_d100af02_2371_11eb_ace0_525400b23b75row6_col5\" class=\"data row6 col5\" >0.945339</td>\n",
        "                        <td id=\"T_d100af02_2371_11eb_ace0_525400b23b75row6_col6\" class=\"data row6 col6\" >1.000000</td>\n",
        "                        <td id=\"T_d100af02_2371_11eb_ace0_525400b23b75row6_col7\" class=\"data row6 col7\" >0.813635</td>\n",
        "                        <td id=\"T_d100af02_2371_11eb_ace0_525400b23b75row6_col8\" class=\"data row6 col8\" >0.793624</td>\n",
        "                        <td id=\"T_d100af02_2371_11eb_ace0_525400b23b75row6_col9\" class=\"data row6 col9\" >-0.006272</td>\n",
        "                        <td id=\"T_d100af02_2371_11eb_ace0_525400b23b75row6_col10\" class=\"data row6 col10\" >0.902502</td>\n",
        "                        <td id=\"T_d100af02_2371_11eb_ace0_525400b23b75row6_col11\" class=\"data row6 col11\" >-0.017412</td>\n",
        "                        <td id=\"T_d100af02_2371_11eb_ace0_525400b23b75row6_col12\" class=\"data row6 col12\" >0.366081</td>\n",
        "                        <td id=\"T_d100af02_2371_11eb_ace0_525400b23b75row6_col13\" class=\"data row6 col13\" >0.721130</td>\n",
        "                        <td id=\"T_d100af02_2371_11eb_ace0_525400b23b75row6_col14\" class=\"data row6 col14\" >0.570806</td>\n",
        "                        <td id=\"T_d100af02_2371_11eb_ace0_525400b23b75row6_col15\" class=\"data row6 col15\" >0.676253</td>\n",
        "                        <td id=\"T_d100af02_2371_11eb_ace0_525400b23b75row6_col16\" class=\"data row6 col16\" >0.718272</td>\n",
        "            </tr>\n",
        "            <tr>\n",
        "                        <th id=\"T_d100af02_2371_11eb_ace0_525400b23b75level0_row7\" class=\"row_heading level0 row7\" >Cancel_events</th>\n",
        "                        <td id=\"T_d100af02_2371_11eb_ace0_525400b23b75row7_col0\" class=\"data row7 col0\" >-0.182290</td>\n",
        "                        <td id=\"T_d100af02_2371_11eb_ace0_525400b23b75row7_col1\" class=\"data row7 col1\" >-0.192974</td>\n",
        "                        <td id=\"T_d100af02_2371_11eb_ace0_525400b23b75row7_col2\" class=\"data row7 col2\" >-0.156034</td>\n",
        "                        <td id=\"T_d100af02_2371_11eb_ace0_525400b23b75row7_col3\" class=\"data row7 col3\" >-0.138481</td>\n",
        "                        <td id=\"T_d100af02_2371_11eb_ace0_525400b23b75row7_col4\" class=\"data row7 col4\" >0.234372</td>\n",
        "                        <td id=\"T_d100af02_2371_11eb_ace0_525400b23b75row7_col5\" class=\"data row7 col5\" >0.833099</td>\n",
        "                        <td id=\"T_d100af02_2371_11eb_ace0_525400b23b75row7_col6\" class=\"data row7 col6\" >0.813635</td>\n",
        "                        <td id=\"T_d100af02_2371_11eb_ace0_525400b23b75row7_col7\" class=\"data row7 col7\" >1.000000</td>\n",
        "                        <td id=\"T_d100af02_2371_11eb_ace0_525400b23b75row7_col8\" class=\"data row7 col8\" >0.763743</td>\n",
        "                        <td id=\"T_d100af02_2371_11eb_ace0_525400b23b75row7_col9\" class=\"data row7 col9\" >-0.112412</td>\n",
        "                        <td id=\"T_d100af02_2371_11eb_ace0_525400b23b75row7_col10\" class=\"data row7 col10\" >0.829022</td>\n",
        "                        <td id=\"T_d100af02_2371_11eb_ace0_525400b23b75row7_col11\" class=\"data row7 col11\" >0.072303</td>\n",
        "                        <td id=\"T_d100af02_2371_11eb_ace0_525400b23b75row7_col12\" class=\"data row7 col12\" >0.621820</td>\n",
        "                        <td id=\"T_d100af02_2371_11eb_ace0_525400b23b75row7_col13\" class=\"data row7 col13\" >0.636524</td>\n",
        "                        <td id=\"T_d100af02_2371_11eb_ace0_525400b23b75row7_col14\" class=\"data row7 col14\" >0.266964</td>\n",
        "                        <td id=\"T_d100af02_2371_11eb_ace0_525400b23b75row7_col15\" class=\"data row7 col15\" >0.384061</td>\n",
        "                        <td id=\"T_d100af02_2371_11eb_ace0_525400b23b75row7_col16\" class=\"data row7 col16\" >0.780371</td>\n",
        "            </tr>\n",
        "            <tr>\n",
        "                        <th id=\"T_d100af02_2371_11eb_ace0_525400b23b75level0_row8\" class=\"row_heading level0 row8\" >Gatherings_restrictions</th>\n",
        "                        <td id=\"T_d100af02_2371_11eb_ace0_525400b23b75row8_col0\" class=\"data row8 col0\" >-0.239740</td>\n",
        "                        <td id=\"T_d100af02_2371_11eb_ace0_525400b23b75row8_col1\" class=\"data row8 col1\" >-0.292812</td>\n",
        "                        <td id=\"T_d100af02_2371_11eb_ace0_525400b23b75row8_col2\" class=\"data row8 col2\" >-0.270324</td>\n",
        "                        <td id=\"T_d100af02_2371_11eb_ace0_525400b23b75row8_col3\" class=\"data row8 col3\" >-0.257977</td>\n",
        "                        <td id=\"T_d100af02_2371_11eb_ace0_525400b23b75row8_col4\" class=\"data row8 col4\" >0.146051</td>\n",
        "                        <td id=\"T_d100af02_2371_11eb_ace0_525400b23b75row8_col5\" class=\"data row8 col5\" >0.787154</td>\n",
        "                        <td id=\"T_d100af02_2371_11eb_ace0_525400b23b75row8_col6\" class=\"data row8 col6\" >0.793624</td>\n",
        "                        <td id=\"T_d100af02_2371_11eb_ace0_525400b23b75row8_col7\" class=\"data row8 col7\" >0.763743</td>\n",
        "                        <td id=\"T_d100af02_2371_11eb_ace0_525400b23b75row8_col8\" class=\"data row8 col8\" >1.000000</td>\n",
        "                        <td id=\"T_d100af02_2371_11eb_ace0_525400b23b75row8_col9\" class=\"data row8 col9\" >-0.045948</td>\n",
        "                        <td id=\"T_d100af02_2371_11eb_ace0_525400b23b75row8_col10\" class=\"data row8 col10\" >0.774747</td>\n",
        "                        <td id=\"T_d100af02_2371_11eb_ace0_525400b23b75row8_col11\" class=\"data row8 col11\" >0.008361</td>\n",
        "                        <td id=\"T_d100af02_2371_11eb_ace0_525400b23b75row8_col12\" class=\"data row8 col12\" >0.500202</td>\n",
        "                        <td id=\"T_d100af02_2371_11eb_ace0_525400b23b75row8_col13\" class=\"data row8 col13\" >0.560686</td>\n",
        "                        <td id=\"T_d100af02_2371_11eb_ace0_525400b23b75row8_col14\" class=\"data row8 col14\" >0.252385</td>\n",
        "                        <td id=\"T_d100af02_2371_11eb_ace0_525400b23b75row8_col15\" class=\"data row8 col15\" >0.282761</td>\n",
        "                        <td id=\"T_d100af02_2371_11eb_ace0_525400b23b75row8_col16\" class=\"data row8 col16\" >0.660434</td>\n",
        "            </tr>\n",
        "            <tr>\n",
        "                        <th id=\"T_d100af02_2371_11eb_ace0_525400b23b75level0_row9\" class=\"row_heading level0 row9\" >Transport_closing</th>\n",
        "                        <td id=\"T_d100af02_2371_11eb_ace0_525400b23b75row9_col0\" class=\"data row9 col0\" >0.066570</td>\n",
        "                        <td id=\"T_d100af02_2371_11eb_ace0_525400b23b75row9_col1\" class=\"data row9 col1\" >-0.479318</td>\n",
        "                        <td id=\"T_d100af02_2371_11eb_ace0_525400b23b75row9_col2\" class=\"data row9 col2\" >-0.515037</td>\n",
        "                        <td id=\"T_d100af02_2371_11eb_ace0_525400b23b75row9_col3\" class=\"data row9 col3\" >-0.537034</td>\n",
        "                        <td id=\"T_d100af02_2371_11eb_ace0_525400b23b75row9_col4\" class=\"data row9 col4\" >-0.443598</td>\n",
        "                        <td id=\"T_d100af02_2371_11eb_ace0_525400b23b75row9_col5\" class=\"data row9 col5\" >-0.054450</td>\n",
        "                        <td id=\"T_d100af02_2371_11eb_ace0_525400b23b75row9_col6\" class=\"data row9 col6\" >-0.006272</td>\n",
        "                        <td id=\"T_d100af02_2371_11eb_ace0_525400b23b75row9_col7\" class=\"data row9 col7\" >-0.112412</td>\n",
        "                        <td id=\"T_d100af02_2371_11eb_ace0_525400b23b75row9_col8\" class=\"data row9 col8\" >-0.045948</td>\n",
        "                        <td id=\"T_d100af02_2371_11eb_ace0_525400b23b75row9_col9\" class=\"data row9 col9\" >1.000000</td>\n",
        "                        <td id=\"T_d100af02_2371_11eb_ace0_525400b23b75row9_col10\" class=\"data row9 col10\" >-0.157551</td>\n",
        "                        <td id=\"T_d100af02_2371_11eb_ace0_525400b23b75row9_col11\" class=\"data row9 col11\" >0.157906</td>\n",
        "                        <td id=\"T_d100af02_2371_11eb_ace0_525400b23b75row9_col12\" class=\"data row9 col12\" >-0.363395</td>\n",
        "                        <td id=\"T_d100af02_2371_11eb_ace0_525400b23b75row9_col13\" class=\"data row9 col13\" >0.385994</td>\n",
        "                        <td id=\"T_d100af02_2371_11eb_ace0_525400b23b75row9_col14\" class=\"data row9 col14\" >0.037476</td>\n",
        "                        <td id=\"T_d100af02_2371_11eb_ace0_525400b23b75row9_col15\" class=\"data row9 col15\" >0.023055</td>\n",
        "                        <td id=\"T_d100af02_2371_11eb_ace0_525400b23b75row9_col16\" class=\"data row9 col16\" >-0.258212</td>\n",
        "            </tr>\n",
        "            <tr>\n",
        "                        <th id=\"T_d100af02_2371_11eb_ace0_525400b23b75level0_row10\" class=\"row_heading level0 row10\" >Stay_home_restrictions</th>\n",
        "                        <td id=\"T_d100af02_2371_11eb_ace0_525400b23b75row10_col0\" class=\"data row10 col0\" >-0.372901</td>\n",
        "                        <td id=\"T_d100af02_2371_11eb_ace0_525400b23b75row10_col1\" class=\"data row10 col1\" >-0.116181</td>\n",
        "                        <td id=\"T_d100af02_2371_11eb_ace0_525400b23b75row10_col2\" class=\"data row10 col2\" >-0.102874</td>\n",
        "                        <td id=\"T_d100af02_2371_11eb_ace0_525400b23b75row10_col3\" class=\"data row10 col3\" >-0.243783</td>\n",
        "                        <td id=\"T_d100af02_2371_11eb_ace0_525400b23b75row10_col4\" class=\"data row10 col4\" >0.272706</td>\n",
        "                        <td id=\"T_d100af02_2371_11eb_ace0_525400b23b75row10_col5\" class=\"data row10 col5\" >0.904302</td>\n",
        "                        <td id=\"T_d100af02_2371_11eb_ace0_525400b23b75row10_col6\" class=\"data row10 col6\" >0.902502</td>\n",
        "                        <td id=\"T_d100af02_2371_11eb_ace0_525400b23b75row10_col7\" class=\"data row10 col7\" >0.829022</td>\n",
        "                        <td id=\"T_d100af02_2371_11eb_ace0_525400b23b75row10_col8\" class=\"data row10 col8\" >0.774747</td>\n",
        "                        <td id=\"T_d100af02_2371_11eb_ace0_525400b23b75row10_col9\" class=\"data row10 col9\" >-0.157551</td>\n",
        "                        <td id=\"T_d100af02_2371_11eb_ace0_525400b23b75row10_col10\" class=\"data row10 col10\" >1.000000</td>\n",
        "                        <td id=\"T_d100af02_2371_11eb_ace0_525400b23b75row10_col11\" class=\"data row10 col11\" >0.136698</td>\n",
        "                        <td id=\"T_d100af02_2371_11eb_ace0_525400b23b75row10_col12\" class=\"data row10 col12\" >0.409199</td>\n",
        "                        <td id=\"T_d100af02_2371_11eb_ace0_525400b23b75row10_col13\" class=\"data row10 col13\" >0.599320</td>\n",
        "                        <td id=\"T_d100af02_2371_11eb_ace0_525400b23b75row10_col14\" class=\"data row10 col14\" >0.531161</td>\n",
        "                        <td id=\"T_d100af02_2371_11eb_ace0_525400b23b75row10_col15\" class=\"data row10 col15\" >0.590149</td>\n",
        "                        <td id=\"T_d100af02_2371_11eb_ace0_525400b23b75row10_col16\" class=\"data row10 col16\" >0.686641</td>\n",
        "            </tr>\n",
        "            <tr>\n",
        "                        <th id=\"T_d100af02_2371_11eb_ace0_525400b23b75level0_row11\" class=\"row_heading level0 row11\" >Internal_movement_restrictions</th>\n",
        "                        <td id=\"T_d100af02_2371_11eb_ace0_525400b23b75row11_col0\" class=\"data row11 col0\" >-0.056188</td>\n",
        "                        <td id=\"T_d100af02_2371_11eb_ace0_525400b23b75row11_col1\" class=\"data row11 col1\" >0.017158</td>\n",
        "                        <td id=\"T_d100af02_2371_11eb_ace0_525400b23b75row11_col2\" class=\"data row11 col2\" >-0.000130</td>\n",
        "                        <td id=\"T_d100af02_2371_11eb_ace0_525400b23b75row11_col3\" class=\"data row11 col3\" >0.014222</td>\n",
        "                        <td id=\"T_d100af02_2371_11eb_ace0_525400b23b75row11_col4\" class=\"data row11 col4\" >0.201478</td>\n",
        "                        <td id=\"T_d100af02_2371_11eb_ace0_525400b23b75row11_col5\" class=\"data row11 col5\" >0.039243</td>\n",
        "                        <td id=\"T_d100af02_2371_11eb_ace0_525400b23b75row11_col6\" class=\"data row11 col6\" >-0.017412</td>\n",
        "                        <td id=\"T_d100af02_2371_11eb_ace0_525400b23b75row11_col7\" class=\"data row11 col7\" >0.072303</td>\n",
        "                        <td id=\"T_d100af02_2371_11eb_ace0_525400b23b75row11_col8\" class=\"data row11 col8\" >0.008361</td>\n",
        "                        <td id=\"T_d100af02_2371_11eb_ace0_525400b23b75row11_col9\" class=\"data row11 col9\" >0.157906</td>\n",
        "                        <td id=\"T_d100af02_2371_11eb_ace0_525400b23b75row11_col10\" class=\"data row11 col10\" >0.136698</td>\n",
        "                        <td id=\"T_d100af02_2371_11eb_ace0_525400b23b75row11_col11\" class=\"data row11 col11\" >1.000000</td>\n",
        "                        <td id=\"T_d100af02_2371_11eb_ace0_525400b23b75row11_col12\" class=\"data row11 col12\" >-0.000899</td>\n",
        "                        <td id=\"T_d100af02_2371_11eb_ace0_525400b23b75row11_col13\" class=\"data row11 col13\" >0.021745</td>\n",
        "                        <td id=\"T_d100af02_2371_11eb_ace0_525400b23b75row11_col14\" class=\"data row11 col14\" >-0.068251</td>\n",
        "                        <td id=\"T_d100af02_2371_11eb_ace0_525400b23b75row11_col15\" class=\"data row11 col15\" >-0.008154</td>\n",
        "                        <td id=\"T_d100af02_2371_11eb_ace0_525400b23b75row11_col16\" class=\"data row11 col16\" >0.137160</td>\n",
        "            </tr>\n",
        "            <tr>\n",
        "                        <th id=\"T_d100af02_2371_11eb_ace0_525400b23b75level0_row12\" class=\"row_heading level0 row12\" >International_movement_restrictions</th>\n",
        "                        <td id=\"T_d100af02_2371_11eb_ace0_525400b23b75row12_col0\" class=\"data row12 col0\" >-0.175368</td>\n",
        "                        <td id=\"T_d100af02_2371_11eb_ace0_525400b23b75row12_col1\" class=\"data row12 col1\" >0.184967</td>\n",
        "                        <td id=\"T_d100af02_2371_11eb_ace0_525400b23b75row12_col2\" class=\"data row12 col2\" >0.236886</td>\n",
        "                        <td id=\"T_d100af02_2371_11eb_ace0_525400b23b75row12_col3\" class=\"data row12 col3\" >0.198271</td>\n",
        "                        <td id=\"T_d100af02_2371_11eb_ace0_525400b23b75row12_col4\" class=\"data row12 col4\" >0.218059</td>\n",
        "                        <td id=\"T_d100af02_2371_11eb_ace0_525400b23b75row12_col5\" class=\"data row12 col5\" >0.416609</td>\n",
        "                        <td id=\"T_d100af02_2371_11eb_ace0_525400b23b75row12_col6\" class=\"data row12 col6\" >0.366081</td>\n",
        "                        <td id=\"T_d100af02_2371_11eb_ace0_525400b23b75row12_col7\" class=\"data row12 col7\" >0.621820</td>\n",
        "                        <td id=\"T_d100af02_2371_11eb_ace0_525400b23b75row12_col8\" class=\"data row12 col8\" >0.500202</td>\n",
        "                        <td id=\"T_d100af02_2371_11eb_ace0_525400b23b75row12_col9\" class=\"data row12 col9\" >-0.363395</td>\n",
        "                        <td id=\"T_d100af02_2371_11eb_ace0_525400b23b75row12_col10\" class=\"data row12 col10\" >0.409199</td>\n",
        "                        <td id=\"T_d100af02_2371_11eb_ace0_525400b23b75row12_col11\" class=\"data row12 col11\" >-0.000899</td>\n",
        "                        <td id=\"T_d100af02_2371_11eb_ace0_525400b23b75row12_col12\" class=\"data row12 col12\" >1.000000</td>\n",
        "                        <td id=\"T_d100af02_2371_11eb_ace0_525400b23b75row12_col13\" class=\"data row12 col13\" >0.218740</td>\n",
        "                        <td id=\"T_d100af02_2371_11eb_ace0_525400b23b75row12_col14\" class=\"data row12 col14\" >-0.104027</td>\n",
        "                        <td id=\"T_d100af02_2371_11eb_ace0_525400b23b75row12_col15\" class=\"data row12 col15\" >0.008964</td>\n",
        "                        <td id=\"T_d100af02_2371_11eb_ace0_525400b23b75row12_col16\" class=\"data row12 col16\" >0.719901</td>\n",
        "            </tr>\n",
        "            <tr>\n",
        "                        <th id=\"T_d100af02_2371_11eb_ace0_525400b23b75level0_row13\" class=\"row_heading level0 row13\" >Information_campaigns</th>\n",
        "                        <td id=\"T_d100af02_2371_11eb_ace0_525400b23b75row13_col0\" class=\"data row13 col0\" >-0.140128</td>\n",
        "                        <td id=\"T_d100af02_2371_11eb_ace0_525400b23b75row13_col1\" class=\"data row13 col1\" >-0.459918</td>\n",
        "                        <td id=\"T_d100af02_2371_11eb_ace0_525400b23b75row13_col2\" class=\"data row13 col2\" >-0.482204</td>\n",
        "                        <td id=\"T_d100af02_2371_11eb_ace0_525400b23b75row13_col3\" class=\"data row13 col3\" >-0.552939</td>\n",
        "                        <td id=\"T_d100af02_2371_11eb_ace0_525400b23b75row13_col4\" class=\"data row13 col4\" >-0.111751</td>\n",
        "                        <td id=\"T_d100af02_2371_11eb_ace0_525400b23b75row13_col5\" class=\"data row13 col5\" >0.696911</td>\n",
        "                        <td id=\"T_d100af02_2371_11eb_ace0_525400b23b75row13_col6\" class=\"data row13 col6\" >0.721130</td>\n",
        "                        <td id=\"T_d100af02_2371_11eb_ace0_525400b23b75row13_col7\" class=\"data row13 col7\" >0.636524</td>\n",
        "                        <td id=\"T_d100af02_2371_11eb_ace0_525400b23b75row13_col8\" class=\"data row13 col8\" >0.560686</td>\n",
        "                        <td id=\"T_d100af02_2371_11eb_ace0_525400b23b75row13_col9\" class=\"data row13 col9\" >0.385994</td>\n",
        "                        <td id=\"T_d100af02_2371_11eb_ace0_525400b23b75row13_col10\" class=\"data row13 col10\" >0.599320</td>\n",
        "                        <td id=\"T_d100af02_2371_11eb_ace0_525400b23b75row13_col11\" class=\"data row13 col11\" >0.021745</td>\n",
        "                        <td id=\"T_d100af02_2371_11eb_ace0_525400b23b75row13_col12\" class=\"data row13 col12\" >0.218740</td>\n",
        "                        <td id=\"T_d100af02_2371_11eb_ace0_525400b23b75row13_col13\" class=\"data row13 col13\" >1.000000</td>\n",
        "                        <td id=\"T_d100af02_2371_11eb_ace0_525400b23b75row13_col14\" class=\"data row13 col14\" >0.442951</td>\n",
        "                        <td id=\"T_d100af02_2371_11eb_ace0_525400b23b75row13_col15\" class=\"data row13 col15\" >0.541567</td>\n",
        "                        <td id=\"T_d100af02_2371_11eb_ace0_525400b23b75row13_col16\" class=\"data row13 col16\" >0.595185</td>\n",
        "            </tr>\n",
        "            <tr>\n",
        "                        <th id=\"T_d100af02_2371_11eb_ace0_525400b23b75level0_row14\" class=\"row_heading level0 row14\" >Testing_policy</th>\n",
        "                        <td id=\"T_d100af02_2371_11eb_ace0_525400b23b75row14_col0\" class=\"data row14 col0\" >-0.327900</td>\n",
        "                        <td id=\"T_d100af02_2371_11eb_ace0_525400b23b75row14_col1\" class=\"data row14 col1\" >-0.198424</td>\n",
        "                        <td id=\"T_d100af02_2371_11eb_ace0_525400b23b75row14_col2\" class=\"data row14 col2\" >-0.235522</td>\n",
        "                        <td id=\"T_d100af02_2371_11eb_ace0_525400b23b75row14_col3\" class=\"data row14 col3\" >-0.489596</td>\n",
        "                        <td id=\"T_d100af02_2371_11eb_ace0_525400b23b75row14_col4\" class=\"data row14 col4\" >0.183599</td>\n",
        "                        <td id=\"T_d100af02_2371_11eb_ace0_525400b23b75row14_col5\" class=\"data row14 col5\" >0.496456</td>\n",
        "                        <td id=\"T_d100af02_2371_11eb_ace0_525400b23b75row14_col6\" class=\"data row14 col6\" >0.570806</td>\n",
        "                        <td id=\"T_d100af02_2371_11eb_ace0_525400b23b75row14_col7\" class=\"data row14 col7\" >0.266964</td>\n",
        "                        <td id=\"T_d100af02_2371_11eb_ace0_525400b23b75row14_col8\" class=\"data row14 col8\" >0.252385</td>\n",
        "                        <td id=\"T_d100af02_2371_11eb_ace0_525400b23b75row14_col9\" class=\"data row14 col9\" >0.037476</td>\n",
        "                        <td id=\"T_d100af02_2371_11eb_ace0_525400b23b75row14_col10\" class=\"data row14 col10\" >0.531161</td>\n",
        "                        <td id=\"T_d100af02_2371_11eb_ace0_525400b23b75row14_col11\" class=\"data row14 col11\" >-0.068251</td>\n",
        "                        <td id=\"T_d100af02_2371_11eb_ace0_525400b23b75row14_col12\" class=\"data row14 col12\" >-0.104027</td>\n",
        "                        <td id=\"T_d100af02_2371_11eb_ace0_525400b23b75row14_col13\" class=\"data row14 col13\" >0.442951</td>\n",
        "                        <td id=\"T_d100af02_2371_11eb_ace0_525400b23b75row14_col14\" class=\"data row14 col14\" >1.000000</td>\n",
        "                        <td id=\"T_d100af02_2371_11eb_ace0_525400b23b75row14_col15\" class=\"data row14 col15\" >0.738382</td>\n",
        "                        <td id=\"T_d100af02_2371_11eb_ace0_525400b23b75row14_col16\" class=\"data row14 col16\" >0.128912</td>\n",
        "            </tr>\n",
        "            <tr>\n",
        "                        <th id=\"T_d100af02_2371_11eb_ace0_525400b23b75level0_row15\" class=\"row_heading level0 row15\" >Contact_tracing</th>\n",
        "                        <td id=\"T_d100af02_2371_11eb_ace0_525400b23b75row15_col0\" class=\"data row15 col0\" >-0.478393</td>\n",
        "                        <td id=\"T_d100af02_2371_11eb_ace0_525400b23b75row15_col1\" class=\"data row15 col1\" >-0.060817</td>\n",
        "                        <td id=\"T_d100af02_2371_11eb_ace0_525400b23b75row15_col2\" class=\"data row15 col2\" >-0.109792</td>\n",
        "                        <td id=\"T_d100af02_2371_11eb_ace0_525400b23b75row15_col3\" class=\"data row15 col3\" >-0.428699</td>\n",
        "                        <td id=\"T_d100af02_2371_11eb_ace0_525400b23b75row15_col4\" class=\"data row15 col4\" >0.217064</td>\n",
        "                        <td id=\"T_d100af02_2371_11eb_ace0_525400b23b75row15_col5\" class=\"data row15 col5\" >0.622606</td>\n",
        "                        <td id=\"T_d100af02_2371_11eb_ace0_525400b23b75row15_col6\" class=\"data row15 col6\" >0.676253</td>\n",
        "                        <td id=\"T_d100af02_2371_11eb_ace0_525400b23b75row15_col7\" class=\"data row15 col7\" >0.384061</td>\n",
        "                        <td id=\"T_d100af02_2371_11eb_ace0_525400b23b75row15_col8\" class=\"data row15 col8\" >0.282761</td>\n",
        "                        <td id=\"T_d100af02_2371_11eb_ace0_525400b23b75row15_col9\" class=\"data row15 col9\" >0.023055</td>\n",
        "                        <td id=\"T_d100af02_2371_11eb_ace0_525400b23b75row15_col10\" class=\"data row15 col10\" >0.590149</td>\n",
        "                        <td id=\"T_d100af02_2371_11eb_ace0_525400b23b75row15_col11\" class=\"data row15 col11\" >-0.008154</td>\n",
        "                        <td id=\"T_d100af02_2371_11eb_ace0_525400b23b75row15_col12\" class=\"data row15 col12\" >0.008964</td>\n",
        "                        <td id=\"T_d100af02_2371_11eb_ace0_525400b23b75row15_col13\" class=\"data row15 col13\" >0.541567</td>\n",
        "                        <td id=\"T_d100af02_2371_11eb_ace0_525400b23b75row15_col14\" class=\"data row15 col14\" >0.738382</td>\n",
        "                        <td id=\"T_d100af02_2371_11eb_ace0_525400b23b75row15_col15\" class=\"data row15 col15\" >1.000000</td>\n",
        "                        <td id=\"T_d100af02_2371_11eb_ace0_525400b23b75row15_col16\" class=\"data row15 col16\" >0.410912</td>\n",
        "            </tr>\n",
        "            <tr>\n",
        "                        <th id=\"T_d100af02_2371_11eb_ace0_525400b23b75level0_row16\" class=\"row_heading level0 row16\" >Stringency_index</th>\n",
        "                        <td id=\"T_d100af02_2371_11eb_ace0_525400b23b75row16_col0\" class=\"data row16 col0\" >-0.302717</td>\n",
        "                        <td id=\"T_d100af02_2371_11eb_ace0_525400b23b75row16_col1\" class=\"data row16 col1\" >0.038725</td>\n",
        "                        <td id=\"T_d100af02_2371_11eb_ace0_525400b23b75row16_col2\" class=\"data row16 col2\" >0.047191</td>\n",
        "                        <td id=\"T_d100af02_2371_11eb_ace0_525400b23b75row16_col3\" class=\"data row16 col3\" >-0.038220</td>\n",
        "                        <td id=\"T_d100af02_2371_11eb_ace0_525400b23b75row16_col4\" class=\"data row16 col4\" >0.231023</td>\n",
        "                        <td id=\"T_d100af02_2371_11eb_ace0_525400b23b75row16_col5\" class=\"data row16 col5\" >0.749849</td>\n",
        "                        <td id=\"T_d100af02_2371_11eb_ace0_525400b23b75row16_col6\" class=\"data row16 col6\" >0.718272</td>\n",
        "                        <td id=\"T_d100af02_2371_11eb_ace0_525400b23b75row16_col7\" class=\"data row16 col7\" >0.780371</td>\n",
        "                        <td id=\"T_d100af02_2371_11eb_ace0_525400b23b75row16_col8\" class=\"data row16 col8\" >0.660434</td>\n",
        "                        <td id=\"T_d100af02_2371_11eb_ace0_525400b23b75row16_col9\" class=\"data row16 col9\" >-0.258212</td>\n",
        "                        <td id=\"T_d100af02_2371_11eb_ace0_525400b23b75row16_col10\" class=\"data row16 col10\" >0.686641</td>\n",
        "                        <td id=\"T_d100af02_2371_11eb_ace0_525400b23b75row16_col11\" class=\"data row16 col11\" >0.137160</td>\n",
        "                        <td id=\"T_d100af02_2371_11eb_ace0_525400b23b75row16_col12\" class=\"data row16 col12\" >0.719901</td>\n",
        "                        <td id=\"T_d100af02_2371_11eb_ace0_525400b23b75row16_col13\" class=\"data row16 col13\" >0.595185</td>\n",
        "                        <td id=\"T_d100af02_2371_11eb_ace0_525400b23b75row16_col14\" class=\"data row16 col14\" >0.128912</td>\n",
        "                        <td id=\"T_d100af02_2371_11eb_ace0_525400b23b75row16_col15\" class=\"data row16 col15\" >0.410912</td>\n",
        "                        <td id=\"T_d100af02_2371_11eb_ace0_525400b23b75row16_col16\" class=\"data row16 col16\" >1.000000</td>\n",
        "            </tr>\n",
        "    </tbody></table>"
       ],
       "output_type": "pyout",
       "prompt_number": 21,
       "text": [
        "<pandas.io.formats.style.Styler at 0x7fe38a3dee20>"
       ]
      }
     ],
     "prompt_number": 21
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "# Scatter plot of Stringency index and Rt\n",
      "df = track_df.copy()\n",
      "sns.scatterplot(data=df, x=\"Stringency_index\", y=\"Rt\", hue=\"Country\", legend=\"brief\", marker=\"+\")\n",
      "bbox_to_anchor=(1.02, 0)\n",
      "bbox_loc=\"lower left\"\n",
      "plt.legend(bbox_to_anchor=bbox_to_anchor, loc=bbox_loc, borderaxespad=0)\n",
      "plt.title(\"Relationship of Stringency index and reproduction number\")\n",
      "plt.ylabel(\"Reproduction number\")\n",
      "plt.xlabel(\"Stringency index\")\n",
      "plt.show()"
     ],
     "language": "python",
     "metadata": {},
     "outputs": [
      {
       "output_type": "display_data",
       "png": "\n",
       "text": [
        "<Figure size 432x288 with 1 Axes>"
       ]
      }
     ],
     "prompt_number": 22
    }
   ],
   "metadata": {}
  }
 ]
}
