{
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3.8.2 64-bit ('.venv': venv)",
   "name": "python_defaultSpec_1597669925034"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.8.2-final"
  },
  "name": ""
 },
 "nbformat": 3,
 "nbformat_minor": 0,
 "worksheets": [
  {
   "cells": [
    {
     "cell_type": "markdown",
     "metadata": {},
     "source": [
      "# Usage (details: policy measures)\n",
      "Here, we will analyse the relationship of policy measures and parameter values of SIR-derived ODE models. Policy measures are tracked by [Oxford Covid-19 Government Response Tracker (OxCGRT)](https://github.com/OxCGRT/covid-policy-tracker)."
     ]
    },
    {
     "cell_type": "heading",
     "level": 2,
     "metadata": {},
     "source": [
      "Preparation"
     ]
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "# Standard users\n",
      "# !pip install covsirphy\n",
      "# Developers (Note: this notebook is in example directory)\n",
      "import os\n",
      "os.chdir(\"../\")"
     ],
     "language": "python",
     "metadata": {},
     "outputs": [],
     "prompt_number": 1
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "from pprint import pprint"
     ],
     "language": "python",
     "metadata": {},
     "outputs": [],
     "prompt_number": 2
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "import covsirphy as cs\n",
      "cs.__version__"
     ],
     "language": "python",
     "metadata": {},
     "outputs": [
      {
       "output_type": "pyout",
       "prompt_number": 3,
       "text": [
        "'2.8.1'"
       ]
      }
     ],
     "prompt_number": 3
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "# Standard users and developers\n",
      "data_loader = cs.DataLoader(\"input\")\n",
      "# The number of cases (JHU style)\n",
      "jhu_data = data_loader.jhu(verbose=False)\n",
      "# Population in each country\n",
      "population_data = data_loader.population(verbose=False)\n",
      "# Government Response Tracker (OxCGRT)\n",
      "oxcgrt_data = data_loader.oxcgrt(verbose=False)\n",
      "# Description/citation\n",
      "print(oxcgrt_data.citation)"
     ],
     "language": "python",
     "metadata": {
      "tags": []
     },
     "outputs": [
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "(Secondary source) Guidotti, E., Ardia, D., (2020), \"COVID-19 Data Hub\", Journal of Open Source Software 5(51):2376, doi: 10.21105/joss.02376.\n",
        "We can get Citation list of primary sources with DataLoader(...).covid19dh_citation"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      }
     ],
     "prompt_number": 4
    },
    {
     "cell_type": "markdown",
     "metadata": {},
     "source": [
      "## Class for policy measure analysis\n",
      "We will `PolicyMeasures` class to find relationship of policy measures and parameter values of SIR-derived ODE models."
     ]
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "# Create analyser with tau value 360 [min] (can be changed)\n",
      "analyser = cs.PolicyMeasures(jhu_data, population_data, oxcgrt_data, tau=360)\n",
      "# The number of registerd countries\n",
      "len(analyser.countries)"
     ],
     "language": "python",
     "metadata": {
      "tags": []
     },
     "outputs": [
      {
       "output_type": "pyout",
       "prompt_number": 5,
       "text": [
        "184"
       ]
      }
     ],
     "prompt_number": 5
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "# We can get Scenario instance for detailed scenario analysis\n",
      "type(analyser.scenario(\"Japan\"))"
     ],
     "language": "python",
     "metadata": {},
     "outputs": [
      {
       "output_type": "pyout",
       "prompt_number": 6,
       "text": [
        "covsirphy.analysis.scenario.Scenario"
       ]
      }
     ],
     "prompt_number": 6
    },
    {
     "cell_type": "markdown",
     "metadata": {},
     "source": [
      "## Set phases with S-R trend analysis\n",
      "We will perform S-R trend analysis to set phases in all countries. Countries which do not have **9th phases** will be un-registered for the next analysis. This number will be adjusted for your analysis."
     ]
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "# Show the number of phases of all countries\n",
      "analyser.trend()\n",
      "pprint(analyser.phase_len(), compact=True)"
     ],
     "language": "python",
     "metadata": {},
     "outputs": [
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "{"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "2"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ": "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "['Belize', 'Dominica']"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        " "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "3"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ": "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "["
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Bahamas'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Antigua and Barbuda'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Namibia'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Mauritius'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Norway'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        "     "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Tanzania'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Papua New Guinea'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Brunei'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "]"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        " "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "4"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ": "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "["
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Zimbabwe'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Comoros'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Guyana'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Malta'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Vietnam'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Seychelles'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Fiji'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        "     "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Sao Tome and Principe'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Saint Lucia'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Venezuela'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Lebanon'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Zambia'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        "     "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Angola'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Morocco'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Grenada'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'South Sudan'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Gambia'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Eritrea'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        "     "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Paraguay'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Lesotho'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Kyrgyzstan'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "]"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        " "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "5"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ": "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "["
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Equatorial Guinea'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Israel'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Chad'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Kazakhstan'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Ireland'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        "     "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Central African Republic'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Libya'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Slovakia'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Madagascar'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        "     "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Saint Vincent and the Grenadines'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Yemen'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Iceland'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Bhutan'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        "     "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Montenegro'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Croatia'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'New Zealand'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Philippines'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Ethiopia'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        "     "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Guatemala'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'San Marino'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Palestine'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Thailand'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Spain'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Malawi'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        "     "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Liechtenstein'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "]"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        " "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "6"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ": "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "["
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Sri Lanka'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Cyprus'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Mongolia'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Bermuda'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Congo'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Luxembourg'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        "     "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Uzbekistan'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'India'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Andorra'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Swaziland'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Slovenia'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Tajikistan'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        "     "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Suriname'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Colombia'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Kosovo'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Botswana'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Niger'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Australia'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        "     "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'El Salvador'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Kenya'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Syria'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Rwanda'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Netherlands'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Maldives'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        "     "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Qatar'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Japan'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Nicaragua'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Greece'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Afghanistan'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Cameroon'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        "     "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Barbados'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Guinea-Bissau'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Benin'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Taiwan'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Cambodia'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Costa Rica'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        "     "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Mozambique'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Somalia'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "]"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        " "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "7"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ": "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "["
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Egypt'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Finland'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Nepal'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Mauritania'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Iraq'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Cape Verde'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Germany'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        "     "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Gabon'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Burundi'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Oman'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Serbia'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Pakistan'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Macedonia'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Togo'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        "     "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Bosnia and Herzegovina'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Ghana'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Armenia'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Uganda'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Latvia'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Haiti'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        "     "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Canada'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Ecuador'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Monaco'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Mali'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Jordan'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'China'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Djibouti'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        "     "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Panama'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Uruguay'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Tunisia'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Argentina'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Cuba'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'South Africa'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        "     "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Sudan'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "]"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        " "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "8"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ": "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "["
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Burkina Faso'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Algeria'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Bulgaria'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Austria'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Belgium'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Peru'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        "     "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Azerbaijan'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Albania'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Lithuania'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Malaysia'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Jamaica'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        "     "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Saudi Arabia'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Switzerland'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Estonia'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Honduras'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Hungary'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Bolivia'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        "     "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Korea, South'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Dominican Republic'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Belarus'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Denmark'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Sierra Leone'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        "     "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Indonesia'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Liberia'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Chile'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Singapore'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "]"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        " "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "9"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ": "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "["
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Nigeria'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Bahrain'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Kuwait'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Guinea'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Mexico'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Georgia'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Ukraine'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        "     "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Czech Republic'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Moldova'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'United States'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Myanmar'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Brazil'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        "     "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'France'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Turkey'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Portugal'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Romania'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Italy'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "]"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        " "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "10"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ": "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "['Bangladesh', 'Senegal', 'Iran', 'United Arab Emirates', 'Poland']"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        " "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "11"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ": "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "['Russia']"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "}"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      }
     ],
     "prompt_number": 7
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "# Set phases with S-R trend analysis\n",
      "analyser.trend(min_len=9)\n",
      "# The number of countries\n",
      "len(analyser.countries)"
     ],
     "language": "python",
     "metadata": {},
     "outputs": [
      {
       "output_type": "pyout",
       "prompt_number": 8,
       "text": [
        "23"
       ]
      }
     ],
     "prompt_number": 8
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "phase_len_dict = analyser.phase_len()\n",
      "pprint(phase_len_dict, compact=True)"
     ],
     "language": "python",
     "metadata": {
      "tags": []
     },
     "outputs": [
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "{"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "9"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ": "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "["
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Nigeria'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Bahrain'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Kuwait'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Guinea'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Mexico'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Georgia'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Ukraine'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        "     "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Czech Republic'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Moldova'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'United States'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Myanmar'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Brazil'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        "     "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'France'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Turkey'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Portugal'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Romania'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Italy'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "]"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        " "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "10"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ": "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "['Bangladesh', 'Senegal', 'Iran', 'United Arab Emirates', 'Poland']"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        " "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "11"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ": "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "['Russia']"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "}"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      }
     ],
     "prompt_number": 9
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "# Here, only show the countries which have the most phases\n",
      "countries_show = max(phase_len_dict.items(), key=lambda x: x[0])[1]\n",
      "# Show summary\n",
      "analyser.summary(countries=countries_show)"
     ],
     "language": "python",
     "metadata": {
      "tags": []
     },
     "outputs": [
      {
       "html": [
        "<div>\n",
        "<style scoped>\n",
        "    .dataframe tbody tr th:only-of-type {\n",
        "        vertical-align: middle;\n",
        "    }\n",
        "\n",
        "    .dataframe tbody tr th {\n",
        "        vertical-align: top;\n",
        "    }\n",
        "\n",
        "    .dataframe thead th {\n",
        "        text-align: right;\n",
        "    }\n",
        "</style>\n",
        "<table border=\"1\" class=\"dataframe\">\n",
        "  <thead>\n",
        "    <tr style=\"text-align: right;\">\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th>Type</th>\n",
        "      <th>Start</th>\n",
        "      <th>End</th>\n",
        "      <th>Population</th>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>Country</th>\n",
        "      <th>Phase</th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "    </tr>\n",
        "  </thead>\n",
        "  <tbody>\n",
        "    <tr>\n",
        "      <th rowspan=\"11\" valign=\"top\">Russia</th>\n",
        "      <th>1st</th>\n",
        "      <td>Past</td>\n",
        "      <td>08May2020</td>\n",
        "      <td>16May2020</td>\n",
        "      <td>330457362</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>2nd</th>\n",
        "      <td>Past</td>\n",
        "      <td>17May2020</td>\n",
        "      <td>26May2020</td>\n",
        "      <td>330457362</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>3rd</th>\n",
        "      <td>Past</td>\n",
        "      <td>27May2020</td>\n",
        "      <td>03Jun2020</td>\n",
        "      <td>330457362</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>4th</th>\n",
        "      <td>Past</td>\n",
        "      <td>04Jun2020</td>\n",
        "      <td>11Jun2020</td>\n",
        "      <td>330457362</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>5th</th>\n",
        "      <td>Past</td>\n",
        "      <td>12Jun2020</td>\n",
        "      <td>20Jun2020</td>\n",
        "      <td>330457362</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>6th</th>\n",
        "      <td>Past</td>\n",
        "      <td>21Jun2020</td>\n",
        "      <td>30Jun2020</td>\n",
        "      <td>330457362</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>7th</th>\n",
        "      <td>Past</td>\n",
        "      <td>01Jul2020</td>\n",
        "      <td>11Jul2020</td>\n",
        "      <td>330457362</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>8th</th>\n",
        "      <td>Past</td>\n",
        "      <td>12Jul2020</td>\n",
        "      <td>21Jul2020</td>\n",
        "      <td>330457362</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>9th</th>\n",
        "      <td>Past</td>\n",
        "      <td>22Jul2020</td>\n",
        "      <td>02Aug2020</td>\n",
        "      <td>330457362</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>10th</th>\n",
        "      <td>Past</td>\n",
        "      <td>03Aug2020</td>\n",
        "      <td>15Aug2020</td>\n",
        "      <td>330457362</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>11th</th>\n",
        "      <td>Past</td>\n",
        "      <td>16Aug2020</td>\n",
        "      <td>01Sep2020</td>\n",
        "      <td>330457362</td>\n",
        "    </tr>\n",
        "  </tbody>\n",
        "</table>\n",
        "</div>"
       ],
       "output_type": "pyout",
       "prompt_number": 10,
       "text": [
        "               Type      Start        End  Population\n",
        "Country Phase                                        \n",
        "Russia  1st    Past  08May2020  16May2020   330457362\n",
        "        2nd    Past  17May2020  26May2020   330457362\n",
        "        3rd    Past  27May2020  03Jun2020   330457362\n",
        "        4th    Past  04Jun2020  11Jun2020   330457362\n",
        "        5th    Past  12Jun2020  20Jun2020   330457362\n",
        "        6th    Past  21Jun2020  30Jun2020   330457362\n",
        "        7th    Past  01Jul2020  11Jul2020   330457362\n",
        "        8th    Past  12Jul2020  21Jul2020   330457362\n",
        "        9th    Past  22Jul2020  02Aug2020   330457362\n",
        "        10th   Past  03Aug2020  15Aug2020   330457362\n",
        "        11th   Past  16Aug2020  01Sep2020   330457362"
       ]
      }
     ],
     "prompt_number": 10
    },
    {
     "cell_type": "markdown",
     "metadata": {},
     "source": [
      "## Parameter estimation\n",
      "we will estimate the parameter values with SIR-derived ODE models in each country."
     ]
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "# Parameter estimation with SIR-F model\n",
      "analyser.estimate(cs.SIRF)"
     ],
     "language": "python",
     "metadata": {
      "tags": []
     },
     "outputs": [
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n",
        "<SIR-F model: parameter estimation>"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "Running optimization with 4 CPUs..."
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tTUR,  7th phase (16Jul2020 - 02Aug2020): finished  151 trials in 0 min  5 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tPOL,  8th phase (06Aug2020 - 14Aug2020): finished  298 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tMMR,  2nd phase (07May2020 - 25May2020): finished  701 trials in 0 min 25 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tBRA,  4th phase (03Jul2020 - 11Jul2020): finished  170 trials in 0 min  5 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tGEO,  2nd phase (25Apr2020 - 14May2020): finished 1401 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tUKR,  2nd phase (29May2020 - 14Jun2020): finished 1425 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tIRN,  3rd phase (11May2020 - 30May2020): finished 1430 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tPOL,  6th phase (15Jul2020 - 26Jul2020): finished  178 trials in 0 min  5 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tBRA,  5th phase (12Jul2020 - 20Jul2020): finished  501 trials in 0 min 15 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tGIN,  7th phase (23Jul2020 - 05Aug2020): finished 1443 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tBHR,  7th phase (26Jul2020 - 06Aug2020): finished  186 trials in 0 min  5 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tROU,  1st phase (22Apr2020 - 10May2020): finished 1446 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tRUS,  1st phase (08May2020 - 16May2020): finished 1480 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tMMR,  7th phase (10Jul2020 - 10Aug2020): finished 1469 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tMMR,  6th phase (01Jul2020 - 09Jul2020): finished  227 trials in 0 min  5 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tBGD,  5th phase (07Jul2020 - 14Jul2020): finished 1616 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tBHR,  4th phase (22Jun2020 - 07Jul2020): finished 1584 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tPRT,  2nd phase (18May2020 - 01Jun2020): finished 1568 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tBGD,  1st phase (28May2020 - 12Jun2020): finished 1561 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tUSA,  7th phase (24Jul2020 - 08Aug2020): finished  322 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tROU,  7th phase (01Aug2020 - 14Aug2020): finished  737 trials in 0 min 25 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tARE, 10th phase (15Aug2020 - 01Sep2020): finished 1482 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tMEX,  1st phase (21May2020 - 06Jun2020): finished  722 trials in 0 min 25 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tIRN,  6th phase (27Jun2020 - 08Jul2020): finished  170 trials in 0 min  5 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tFRA,  8th phase (22Jul2020 - 11Aug2020): finished  335 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tROU,  6th phase (24Jul2020 - 31Jul2020): finished  590 trials in 0 min 20 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tUKR,  7th phase (31Jul2020 - 07Aug2020): finished  316 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tROU,  3rd phase (11Jun2020 - 29Jun2020): finished 1468 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tBHR,  3rd phase (12Jun2020 - 21Jun2020): finished 1506 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tITA,  3rd phase (12Apr2020 - 21Apr2020): finished 1153 trials in 0 min 45 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tGIN,  4th phase (10Jun2020 - 19Jun2020): finished 1484 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tUKR,  8th phase (08Aug2020 - 15Aug2020): finished  304 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tITA,  7th phase (22May2020 - 13Jun2020): finished  569 trials in 0 min 20 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tSEN,  4th phase (10Jun2020 - 20Jun2020): finished 1426 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tCZE,  1st phase (08Apr2020 - 20Apr2020): finished 1411 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tIRN,  8th phase (21Jul2020 - 02Aug2020): finished  164 trials in 0 min  5 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tNGA,  3rd phase (20Jun2020 - 28Jun2020): finished 1434 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tCZE,  3rd phase (20May2020 - 25Jun2020): finished 1380 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tPRT,  3rd phase (02Jun2020 - 13Jun2020): finished  448 trials in 0 min 15 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tTUR,  8th phase (03Aug2020 - 17Aug2020): finished  342 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tGEO,  5th phase (12Jun2020 - 05Jul2020): finished 1430 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tFRA,  9th phase (12Aug2020 - 01Sep2020): finished 1173 trials in 0 min 45 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tBGD, 10th phase (23Aug2020 - 01Sep2020): finished  326 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tFRA,  1st phase (25Mar2020 - 02Apr2020): finished 1466 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tPRT,  4th phase (14Jun2020 - 25Jun2020): finished  369 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tARE,  1st phase (27Apr2020 - 12May2020): finished 1510 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tCZE,  6th phase (29Jul2020 - 05Aug2020): finished 1578 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tNGA,  1st phase (24May2020 - 08Jun2020): finished  837 trials in 0 min 25 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tFRA,  2nd phase (03Apr2020 - 12Apr2020): finished 1633 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tGEO,  8th phase (06Aug2020 - 17Aug2020): finished 1681 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tUSA,  6th phase (16Jul2020 - 23Jul2020): finished  188 trials in 0 min  5 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tROU,  5th phase (15Jul2020 - 23Jul2020): finished 1651 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tBHR,  8th phase (07Aug2020 - 18Aug2020): finished 1687 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tPOL,  2nd phase (13May2020 - 28May2020): finished  368 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tKWT,  3rd phase (11Jun2020 - 23Jun2020): finished  685 trials in 0 min 20 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tFRA,  3rd phase (13Apr2020 - 24Apr2020): finished 1533 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tTUR,  6th phase (28Jun2020 - 15Jul2020): finished  542 trials in 0 min 20 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tPRT,  6th phase (07Jul2020 - 16Jul2020): finished  310 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tIRN,  5th phase (14Jun2020 - 26Jun2020): finished 1141 trials in 0 min 45 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tNGA,  4th phase (29Jun2020 - 12Jul2020): finished 1489 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tARE,  5th phase (12Jun2020 - 23Jun2020): finished  958 trials in 0 min 35 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tKWT,  5th phase (05Jul2020 - 15Jul2020): finished 1552 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tMMR,  8th phase (11Aug2020 - 19Aug2020): finished 1632 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tBHR,  5th phase (08Jul2020 - 15Jul2020): finished 1630 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tBRA,  3rd phase (25Jun2020 - 02Jul2020): finished 1679 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tGEO,  1st phase (12Apr2020 - 24Apr2020): finished 1728 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tPOL,  9th phase (15Aug2020 - 22Aug2020): finished  368 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tFRA,  4th phase (25Apr2020 - 05May2020): finished 1668 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tBRA,  6th phase (21Jul2020 - 28Jul2020): finished 1707 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tBGD,  8th phase (05Aug2020 - 13Aug2020): finished  217 trials in 0 min  5 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tRUS, 11th phase (16Aug2020 - 01Sep2020): finished 1708 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tTUR,  3rd phase (15May2020 - 27May2020): finished  226 trials in 0 min  5 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tUKR,  4th phase (26Jun2020 - 10Jul2020): finished 1734 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tUSA,  2nd phase (14May2020 - 05Jun2020): finished 1752 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tMEX,  3rd phase (19Jun2020 - 30Jun2020): finished 1846 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tUSA,  1st phase (21Apr2020 - 13May2020): finished 1847 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tUSA,  4th phase (25Jun2020 - 07Jul2020): finished 1998 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tNGA,  9th phase (18Aug2020 - 01Sep2020): finished 1998 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tTUR,  1st phase (18Apr2020 - 29Apr2020): finished 2003 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tITA,  8th phase (14Jun2020 - 30Jul2020): finished  455 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tCZE,  4th phase (26Jun2020 - 18Jul2020): finished 1993 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tBHR,  9th phase (19Aug2020 - 01Sep2020): finished  254 trials in 0 min  5 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tARE,  8th phase (12Jul2020 - 25Jul2020): finished 1018 trials in 0 min 25 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tBGD,  6th phase (15Jul2020 - 24Jul2020): finished  166 trials in 0 min  5 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tSEN,  9th phase (10Aug2020 - 19Aug2020): finished 1230 trials in 0 min 35 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tRUS,  9th phase (22Jul2020 - 02Aug2020): finished 1855 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tFRA,  7th phase (27Jun2020 - 21Jul2020): finished  339 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tBHR,  1st phase (06May2020 - 30May2020): finished 1666 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tBGD,  2nd phase (13Jun2020 - 20Jun2020): finished 1651 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tRUS,  4th phase (04Jun2020 - 11Jun2020): finished 1685 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tCZE,  5th phase (19Jul2020 - 28Jul2020): finished 1667 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tBRA,  8th phase (12Aug2020 - 19Aug2020): finished 1708 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tMMR,  1st phase (29Apr2020 - 06May2020): finished  436 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tKWT,  2nd phase (25May2020 - 10Jun2020): finished 1683 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tRUS,  2nd phase (17May2020 - 26May2020): finished 1723 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tITA,  1st phase (23Mar2020 - 31Mar2020): finished 1744 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tBRA,  2nd phase (12Jun2020 - 24Jun2020): finished  364 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tPRT,  5th phase (26Jun2020 - 06Jul2020): finished  371 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tBGD,  4th phase (29Jun2020 - 06Jul2020): finished  701 trials in 0 min 20 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tSEN,  8th phase (29Jul2020 - 09Aug2020): finished 1689 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tUKR,  6th phase (23Jul2020 - 30Jul2020): finished  184 trials in 0 min  5 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tCZE,  7th phase (06Aug2020 - 13Aug2020): finished 1678 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tIRN,  7th phase (09Jul2020 - 20Jul2020): finished  216 trials in 0 min  5 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tROU,  2nd phase (11May2020 - 10Jun2020): finished  672 trials in 0 min 20 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tPRT,  8th phase (31Jul2020 - 16Aug2020): finished  564 trials in 0 min 15 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tGIN,  8th phase (06Aug2020 - 16Aug2020): finished 1671 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tMEX,  4th phase (01Jul2020 - 08Jul2020): finished  219 trials in 0 min  5 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tMEX,  5th phase (09Jul2020 - 16Jul2020): finished 1700 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tBRA,  1st phase (28May2020 - 11Jun2020): finished 1657 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tPRT,  1st phase (04May2020 - 17May2020): finished 1653 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tPOL,  3rd phase (29May2020 - 12Jun2020): finished 1693 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tSEN,  6th phase (03Jul2020 - 16Jul2020): finished 1659 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tKWT,  1st phase (12May2020 - 24May2020): finished 1672 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tRUS, 10th phase (03Aug2020 - 15Aug2020): finished 1654 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tUKR,  1st phase (07May2020 - 28May2020): finished 1621 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tKWT,  8th phase (09Aug2020 - 19Aug2020): finished 1642 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tGEO,  6th phase (06Jul2020 - 20Jul2020): finished  397 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tKWT,  7th phase (28Jul2020 - 08Aug2020): finished 1672 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tMMR,  4th phase (09Jun2020 - 16Jun2020): finished 1707 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tSEN,  3rd phase (30May2020 - 09Jun2020): finished 1643 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tRUS,  6th phase (21Jun2020 - 30Jun2020): finished 1618 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tMMR,  5th phase (17Jun2020 - 30Jun2020): finished 1644 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tNGA,  7th phase (30Jul2020 - 08Aug2020): finished 1610 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tUKR,  3rd phase (15Jun2020 - 25Jun2020): finished 1663 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tIRN,  4th phase (31May2020 - 13Jun2020): finished 1840 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tUSA,  8th phase (09Aug2020 - 18Aug2020): finished  676 trials in 0 min 15 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tBGD,  9th phase (14Aug2020 - 22Aug2020): finished  254 trials in 0 min  5 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tGIN,  2nd phase (13May2020 - 25May2020): finished 1936 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tRUS,  8th phase (12Jul2020 - 21Jul2020): finished 1986 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tPRT,  7th phase (17Jul2020 - 30Jul2020): finished  679 trials in 0 min 15 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tPOL,  1st phase (24Apr2020 - 12May2020): finished 1996 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tGIN,  5th phase (20Jun2020 - 08Jul2020): finished  253 trials in 0 min  5 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tMEX,  9th phase (21Aug2020 - 01Sep2020): finished 2005 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tGIN,  3rd phase (26May2020 - 09Jun2020): finished 1990 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tMEX,  7th phase (29Jul2020 - 12Aug2020): finished 1981 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tMEX,  6th phase (17Jul2020 - 28Jul2020): finished 1995 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tBGD,  7th phase (25Jul2020 - 04Aug2020): finished  255 trials in 0 min  5 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tMDA,  3rd phase (16Jun2020 - 25Jun2020): finished  478 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tKWT,  6th phase (16Jul2020 - 27Jul2020): finished  251 trials in 0 min  5 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tTUR,  2nd phase (30Apr2020 - 14May2020): finished 1015 trials in 0 min 25 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tMDA,  4th phase (26Jun2020 - 08Jul2020): finished 1999 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tGEO,  7th phase (21Jul2020 - 05Aug2020): finished 1997 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tFRA,  6th phase (28May2020 - 26Jun2020): finished 1977 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tGIN,  1st phase (02May2020 - 12May2020): finished 1993 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tARE,  9th phase (26Jul2020 - 14Aug2020): finished  642 trials in 0 min 15 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tKWT,  9th phase (20Aug2020 - 01Sep2020): finished 1992 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tSEN,  2nd phase (15May2020 - 29May2020): finished 1999 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tRUS,  5th phase (12Jun2020 - 20Jun2020): finished 2011 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tIRN,  2nd phase (17Apr2020 - 10May2020): finished  249 trials in 0 min  5 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tIRN,  1st phase (29Mar2020 - 16Apr2020): finished 1995 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tITA,  5th phase (02May2020 - 10May2020): finished  476 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tNGA,  5th phase (13Jul2020 - 20Jul2020): finished  480 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tMEX,  8th phase (13Aug2020 - 20Aug2020): finished 2017 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tUKR,  5th phase (11Jul2020 - 22Jul2020): finished  678 trials in 0 min 15 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tSEN,  5th phase (21Jun2020 - 02Jul2020): finished 1034 trials in 0 min 25 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tARE,  3rd phase (26May2020 - 03Jun2020): finished 1042 trials in 0 min 25 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tITA,  4th phase (22Apr2020 - 01May2020): finished  257 trials in 0 min  5 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tPOL,  7th phase (27Jul2020 - 05Aug2020): finished  481 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tPOL,  5th phase (30Jun2020 - 14Jul2020): finished  254 trials in 0 min  5 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tITA,  2nd phase (01Apr2020 - 11Apr2020): finished 1030 trials in 0 min 25 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tFRA,  5th phase (06May2020 - 27May2020): finished  468 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tBGD,  3rd phase (21Jun2020 - 28Jun2020): finished 1174 trials in 0 min 30 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tSEN,  1st phase (03May2020 - 14May2020): finished  476 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tARE,  7th phase (04Jul2020 - 11Jul2020): finished 2008 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tITA,  9th phase (31Jul2020 - 01Sep2020): finished 1982 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tBRA,  7th phase (29Jul2020 - 11Aug2020): finished  858 trials in 0 min 20 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tITA,  6th phase (11May2020 - 21May2020): finished  474 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tUSA,  3rd phase (06Jun2020 - 24Jun2020): finished 2002 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tRUS,  7th phase (01Jul2020 - 11Jul2020): finished 2016 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tCZE,  2nd phase (21Apr2020 - 19May2020): finished  666 trials in 0 min 15 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tNGA,  2nd phase (09Jun2020 - 19Jun2020): finished  477 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tGIN,  6th phase (09Jul2020 - 22Jul2020): finished 2014 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tMDA,  2nd phase (02Jun2020 - 15Jun2020): finished 1497 trials in 0 min 40 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tGIN,  9th phase (17Aug2020 - 01Sep2020): finished 1996 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tRUS,  3rd phase (27May2020 - 03Jun2020): finished 2012 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tKWT,  4th phase (24Jun2020 - 04Jul2020): finished 2000 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tBHR,  2nd phase (31May2020 - 11Jun2020): finished 2008 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tNGA,  6th phase (21Jul2020 - 29Jul2020): finished 1215 trials in 0 min 30 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tPOL,  4th phase (13Jun2020 - 29Jun2020): finished 2040 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tTUR,  4th phase (28May2020 - 14Jun2020): finished  867 trials in 0 min 20 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tBHR,  6th phase (16Jul2020 - 25Jul2020): finished  259 trials in 0 min  5 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tMDA,  1st phase (11May2020 - 01Jun2020): finished 2036 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tMEX,  2nd phase (07Jun2020 - 18Jun2020): finished 1776 trials in 0 min 50 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tARE,  6th phase (24Jun2020 - 03Jul2020): finished  480 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tNGA,  8th phase (09Aug2020 - 17Aug2020): finished 2046 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tTUR,  5th phase (15Jun2020 - 27Jun2020): finished 2032 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tGEO,  4th phase (30May2020 - 11Jun2020): finished 2073 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tMMR,  3rd phase (26May2020 - 08Jun2020): finished 2068 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "Completed optimization. Total: 32 min 47 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      }
     ],
     "prompt_number": 11
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "# Show summary\n",
      "analyser.summary(countries=countries_show)"
     ],
     "language": "python",
     "metadata": {},
     "outputs": [
      {
       "html": [
        "<div>\n",
        "<style scoped>\n",
        "    .dataframe tbody tr th:only-of-type {\n",
        "        vertical-align: middle;\n",
        "    }\n",
        "\n",
        "    .dataframe tbody tr th {\n",
        "        vertical-align: top;\n",
        "    }\n",
        "\n",
        "    .dataframe thead th {\n",
        "        text-align: right;\n",
        "    }\n",
        "</style>\n",
        "<table border=\"1\" class=\"dataframe\">\n",
        "  <thead>\n",
        "    <tr style=\"text-align: right;\">\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th>Type</th>\n",
        "      <th>Start</th>\n",
        "      <th>End</th>\n",
        "      <th>Population</th>\n",
        "      <th>ODE</th>\n",
        "      <th>Rt</th>\n",
        "      <th>theta</th>\n",
        "      <th>kappa</th>\n",
        "      <th>rho</th>\n",
        "      <th>sigma</th>\n",
        "      <th>tau</th>\n",
        "      <th>1/alpha2 [day]</th>\n",
        "      <th>1/gamma [day]</th>\n",
        "      <th>alpha1 [-]</th>\n",
        "      <th>1/beta [day]</th>\n",
        "      <th>RMSLE</th>\n",
        "      <th>Trials</th>\n",
        "      <th>Runtime</th>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>Country</th>\n",
        "      <th>Phase</th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "    </tr>\n",
        "  </thead>\n",
        "  <tbody>\n",
        "    <tr>\n",
        "      <th rowspan=\"11\" valign=\"top\">Russia</th>\n",
        "      <th>1st</th>\n",
        "      <td>Past</td>\n",
        "      <td>08May2020</td>\n",
        "      <td>16May2020</td>\n",
        "      <td>330457362</td>\n",
        "      <td>SIR-F</td>\n",
        "      <td>2.42</td>\n",
        "      <td>0.001806</td>\n",
        "      <td>0.000093</td>\n",
        "      <td>0.012973</td>\n",
        "      <td>0.005252</td>\n",
        "      <td>360</td>\n",
        "      <td>2675</td>\n",
        "      <td>47</td>\n",
        "      <td>0.002</td>\n",
        "      <td>19</td>\n",
        "      <td>0.059236</td>\n",
        "      <td>1480</td>\n",
        "      <td>1 min  0 sec</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>2nd</th>\n",
        "      <td>Past</td>\n",
        "      <td>17May2020</td>\n",
        "      <td>26May2020</td>\n",
        "      <td>330457362</td>\n",
        "      <td>SIR-F</td>\n",
        "      <td>1.56</td>\n",
        "      <td>0.000494</td>\n",
        "      <td>0.000106</td>\n",
        "      <td>0.006988</td>\n",
        "      <td>0.004364</td>\n",
        "      <td>360</td>\n",
        "      <td>2365</td>\n",
        "      <td>57</td>\n",
        "      <td>0.000</td>\n",
        "      <td>35</td>\n",
        "      <td>0.086689</td>\n",
        "      <td>1723</td>\n",
        "      <td>1 min  0 sec</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>3rd</th>\n",
        "      <td>Past</td>\n",
        "      <td>27May2020</td>\n",
        "      <td>03Jun2020</td>\n",
        "      <td>330457362</td>\n",
        "      <td>SIR-F</td>\n",
        "      <td>1.02</td>\n",
        "      <td>0.000972</td>\n",
        "      <td>0.000117</td>\n",
        "      <td>0.005440</td>\n",
        "      <td>0.005215</td>\n",
        "      <td>360</td>\n",
        "      <td>2144</td>\n",
        "      <td>47</td>\n",
        "      <td>0.001</td>\n",
        "      <td>45</td>\n",
        "      <td>0.056952</td>\n",
        "      <td>2012</td>\n",
        "      <td>1 min  0 sec</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>4th</th>\n",
        "      <td>Past</td>\n",
        "      <td>04Jun2020</td>\n",
        "      <td>11Jun2020</td>\n",
        "      <td>330457362</td>\n",
        "      <td>SIR-F</td>\n",
        "      <td>1.15</td>\n",
        "      <td>0.000826</td>\n",
        "      <td>0.000085</td>\n",
        "      <td>0.004684</td>\n",
        "      <td>0.003978</td>\n",
        "      <td>360</td>\n",
        "      <td>2957</td>\n",
        "      <td>62</td>\n",
        "      <td>0.001</td>\n",
        "      <td>53</td>\n",
        "      <td>0.043278</td>\n",
        "      <td>1685</td>\n",
        "      <td>1 min  0 sec</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>5th</th>\n",
        "      <td>Past</td>\n",
        "      <td>12Jun2020</td>\n",
        "      <td>20Jun2020</td>\n",
        "      <td>330457362</td>\n",
        "      <td>SIR-F</td>\n",
        "      <td>0.84</td>\n",
        "      <td>0.019946</td>\n",
        "      <td>0.000002</td>\n",
        "      <td>0.003653</td>\n",
        "      <td>0.004279</td>\n",
        "      <td>360</td>\n",
        "      <td>102952</td>\n",
        "      <td>58</td>\n",
        "      <td>0.020</td>\n",
        "      <td>68</td>\n",
        "      <td>0.058954</td>\n",
        "      <td>2011</td>\n",
        "      <td>1 min  0 sec</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>6th</th>\n",
        "      <td>Past</td>\n",
        "      <td>21Jun2020</td>\n",
        "      <td>30Jun2020</td>\n",
        "      <td>330457362</td>\n",
        "      <td>SIR-F</td>\n",
        "      <td>0.90</td>\n",
        "      <td>0.021825</td>\n",
        "      <td>0.000002</td>\n",
        "      <td>0.002769</td>\n",
        "      <td>0.003016</td>\n",
        "      <td>360</td>\n",
        "      <td>132403</td>\n",
        "      <td>82</td>\n",
        "      <td>0.022</td>\n",
        "      <td>90</td>\n",
        "      <td>0.049641</td>\n",
        "      <td>1618</td>\n",
        "      <td>1 min  0 sec</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>7th</th>\n",
        "      <td>Past</td>\n",
        "      <td>01Jul2020</td>\n",
        "      <td>11Jul2020</td>\n",
        "      <td>330457362</td>\n",
        "      <td>SIR-F</td>\n",
        "      <td>0.84</td>\n",
        "      <td>0.000225</td>\n",
        "      <td>0.000064</td>\n",
        "      <td>0.002338</td>\n",
        "      <td>0.002736</td>\n",
        "      <td>360</td>\n",
        "      <td>3932</td>\n",
        "      <td>91</td>\n",
        "      <td>0.000</td>\n",
        "      <td>106</td>\n",
        "      <td>0.049666</td>\n",
        "      <td>2016</td>\n",
        "      <td>1 min  0 sec</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>8th</th>\n",
        "      <td>Past</td>\n",
        "      <td>12Jul2020</td>\n",
        "      <td>21Jul2020</td>\n",
        "      <td>330457362</td>\n",
        "      <td>SIR-F</td>\n",
        "      <td>0.74</td>\n",
        "      <td>0.000360</td>\n",
        "      <td>0.000050</td>\n",
        "      <td>0.002011</td>\n",
        "      <td>0.002680</td>\n",
        "      <td>360</td>\n",
        "      <td>4980</td>\n",
        "      <td>93</td>\n",
        "      <td>0.000</td>\n",
        "      <td>124</td>\n",
        "      <td>0.042008</td>\n",
        "      <td>1986</td>\n",
        "      <td>1 min  0 sec</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>9th</th>\n",
        "      <td>Past</td>\n",
        "      <td>22Jul2020</td>\n",
        "      <td>02Aug2020</td>\n",
        "      <td>330457362</td>\n",
        "      <td>SIR-F</td>\n",
        "      <td>0.63</td>\n",
        "      <td>0.000019</td>\n",
        "      <td>0.000041</td>\n",
        "      <td>0.001652</td>\n",
        "      <td>0.002576</td>\n",
        "      <td>360</td>\n",
        "      <td>6137</td>\n",
        "      <td>97</td>\n",
        "      <td>0.000</td>\n",
        "      <td>151</td>\n",
        "      <td>0.053475</td>\n",
        "      <td>1855</td>\n",
        "      <td>1 min  0 sec</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>10th</th>\n",
        "      <td>Past</td>\n",
        "      <td>03Aug2020</td>\n",
        "      <td>15Aug2020</td>\n",
        "      <td>330457362</td>\n",
        "      <td>SIR-F</td>\n",
        "      <td>0.80</td>\n",
        "      <td>0.021298</td>\n",
        "      <td>0.000006</td>\n",
        "      <td>0.001463</td>\n",
        "      <td>0.001775</td>\n",
        "      <td>360</td>\n",
        "      <td>40976</td>\n",
        "      <td>140</td>\n",
        "      <td>0.021</td>\n",
        "      <td>170</td>\n",
        "      <td>0.040601</td>\n",
        "      <td>1654</td>\n",
        "      <td>1 min  0 sec</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>11th</th>\n",
        "      <td>Past</td>\n",
        "      <td>16Aug2020</td>\n",
        "      <td>01Sep2020</td>\n",
        "      <td>330457362</td>\n",
        "      <td>SIR-F</td>\n",
        "      <td>1.37</td>\n",
        "      <td>0.016835</td>\n",
        "      <td>0.000010</td>\n",
        "      <td>0.001269</td>\n",
        "      <td>0.000901</td>\n",
        "      <td>360</td>\n",
        "      <td>25372</td>\n",
        "      <td>277</td>\n",
        "      <td>0.017</td>\n",
        "      <td>197</td>\n",
        "      <td>0.023200</td>\n",
        "      <td>1708</td>\n",
        "      <td>1 min  0 sec</td>\n",
        "    </tr>\n",
        "  </tbody>\n",
        "</table>\n",
        "</div>"
       ],
       "output_type": "pyout",
       "prompt_number": 12,
       "text": [
        "               Type      Start        End  Population    ODE    Rt     theta  \\\n",
        "Country Phase                                                                  \n",
        "Russia  1st    Past  08May2020  16May2020   330457362  SIR-F  2.42  0.001806   \n",
        "        2nd    Past  17May2020  26May2020   330457362  SIR-F  1.56  0.000494   \n",
        "        3rd    Past  27May2020  03Jun2020   330457362  SIR-F  1.02  0.000972   \n",
        "        4th    Past  04Jun2020  11Jun2020   330457362  SIR-F  1.15  0.000826   \n",
        "        5th    Past  12Jun2020  20Jun2020   330457362  SIR-F  0.84  0.019946   \n",
        "        6th    Past  21Jun2020  30Jun2020   330457362  SIR-F  0.90  0.021825   \n",
        "        7th    Past  01Jul2020  11Jul2020   330457362  SIR-F  0.84  0.000225   \n",
        "        8th    Past  12Jul2020  21Jul2020   330457362  SIR-F  0.74  0.000360   \n",
        "        9th    Past  22Jul2020  02Aug2020   330457362  SIR-F  0.63  0.000019   \n",
        "        10th   Past  03Aug2020  15Aug2020   330457362  SIR-F  0.80  0.021298   \n",
        "        11th   Past  16Aug2020  01Sep2020   330457362  SIR-F  1.37  0.016835   \n",
        "\n",
        "                  kappa       rho     sigma  tau  1/alpha2 [day]  \\\n",
        "Country Phase                                                      \n",
        "Russia  1st    0.000093  0.012973  0.005252  360            2675   \n",
        "        2nd    0.000106  0.006988  0.004364  360            2365   \n",
        "        3rd    0.000117  0.005440  0.005215  360            2144   \n",
        "        4th    0.000085  0.004684  0.003978  360            2957   \n",
        "        5th    0.000002  0.003653  0.004279  360          102952   \n",
        "        6th    0.000002  0.002769  0.003016  360          132403   \n",
        "        7th    0.000064  0.002338  0.002736  360            3932   \n",
        "        8th    0.000050  0.002011  0.002680  360            4980   \n",
        "        9th    0.000041  0.001652  0.002576  360            6137   \n",
        "        10th   0.000006  0.001463  0.001775  360           40976   \n",
        "        11th   0.000010  0.001269  0.000901  360           25372   \n",
        "\n",
        "               1/gamma [day]  alpha1 [-]  1/beta [day]     RMSLE  Trials  \\\n",
        "Country Phase                                                              \n",
        "Russia  1st               47       0.002            19  0.059236    1480   \n",
        "        2nd               57       0.000            35  0.086689    1723   \n",
        "        3rd               47       0.001            45  0.056952    2012   \n",
        "        4th               62       0.001            53  0.043278    1685   \n",
        "        5th               58       0.020            68  0.058954    2011   \n",
        "        6th               82       0.022            90  0.049641    1618   \n",
        "        7th               91       0.000           106  0.049666    2016   \n",
        "        8th               93       0.000           124  0.042008    1986   \n",
        "        9th               97       0.000           151  0.053475    1855   \n",
        "        10th             140       0.021           170  0.040601    1654   \n",
        "        11th             277       0.017           197  0.023200    1708   \n",
        "\n",
        "                    Runtime  \n",
        "Country Phase                \n",
        "Russia  1st    1 min  0 sec  \n",
        "        2nd    1 min  0 sec  \n",
        "        3rd    1 min  0 sec  \n",
        "        4th    1 min  0 sec  \n",
        "        5th    1 min  0 sec  \n",
        "        6th    1 min  0 sec  \n",
        "        7th    1 min  0 sec  \n",
        "        8th    1 min  0 sec  \n",
        "        9th    1 min  0 sec  \n",
        "        10th   1 min  0 sec  \n",
        "        11th   1 min  0 sec  "
       ]
      }
     ],
     "prompt_number": 12
    },
    {
     "cell_type": "markdown",
     "metadata": {},
     "source": [
      "## Compare the history of parameters\n",
      "Here, compare the history of parameter values if countries."
     ]
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "# All parameter/day parameter/Rt/OxCGRT\n",
      "analyser.track().head()"
     ],
     "language": "python",
     "metadata": {},
     "outputs": [
      {
       "html": [
        "<div>\n",
        "<style scoped>\n",
        "    .dataframe tbody tr th:only-of-type {\n",
        "        vertical-align: middle;\n",
        "    }\n",
        "\n",
        "    .dataframe tbody tr th {\n",
        "        vertical-align: top;\n",
        "    }\n",
        "\n",
        "    .dataframe thead th {\n",
        "        text-align: right;\n",
        "    }\n",
        "</style>\n",
        "<table border=\"1\" class=\"dataframe\">\n",
        "  <thead>\n",
        "    <tr style=\"text-align: right;\">\n",
        "      <th></th>\n",
        "      <th>Date</th>\n",
        "      <th>Country</th>\n",
        "      <th>theta</th>\n",
        "      <th>kappa</th>\n",
        "      <th>rho</th>\n",
        "      <th>sigma</th>\n",
        "      <th>alpha1 [-]</th>\n",
        "      <th>1/alpha2 [day]</th>\n",
        "      <th>1/beta [day]</th>\n",
        "      <th>1/gamma [day]</th>\n",
        "      <th>...</th>\n",
        "      <th>Cancel_events</th>\n",
        "      <th>Gatherings_restrictions</th>\n",
        "      <th>Transport_closing</th>\n",
        "      <th>Stay_home_restrictions</th>\n",
        "      <th>Internal_movement_restrictions</th>\n",
        "      <th>International_movement_restrictions</th>\n",
        "      <th>Information_campaigns</th>\n",
        "      <th>Testing_policy</th>\n",
        "      <th>Contact_tracing</th>\n",
        "      <th>Stringency_index</th>\n",
        "    </tr>\n",
        "  </thead>\n",
        "  <tbody>\n",
        "    <tr>\n",
        "      <th>0</th>\n",
        "      <td>2020-05-24</td>\n",
        "      <td>Nigeria</td>\n",
        "      <td>0.0180915</td>\n",
        "      <td>0.000116646</td>\n",
        "      <td>0.012023</td>\n",
        "      <td>0.00434688</td>\n",
        "      <td>0.018</td>\n",
        "      <td>2143</td>\n",
        "      <td>20</td>\n",
        "      <td>57</td>\n",
        "      <td>...</td>\n",
        "      <td>2</td>\n",
        "      <td>3</td>\n",
        "      <td>1</td>\n",
        "      <td>1</td>\n",
        "      <td>2</td>\n",
        "      <td>4</td>\n",
        "      <td>2</td>\n",
        "      <td>1</td>\n",
        "      <td>2</td>\n",
        "      <td>80.56</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>1</th>\n",
        "      <td>2020-05-25</td>\n",
        "      <td>Nigeria</td>\n",
        "      <td>0.0180915</td>\n",
        "      <td>0.000116646</td>\n",
        "      <td>0.012023</td>\n",
        "      <td>0.00434688</td>\n",
        "      <td>0.018</td>\n",
        "      <td>2143</td>\n",
        "      <td>20</td>\n",
        "      <td>57</td>\n",
        "      <td>...</td>\n",
        "      <td>2</td>\n",
        "      <td>3</td>\n",
        "      <td>1</td>\n",
        "      <td>1</td>\n",
        "      <td>2</td>\n",
        "      <td>4</td>\n",
        "      <td>2</td>\n",
        "      <td>1</td>\n",
        "      <td>2</td>\n",
        "      <td>80.56</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>2</th>\n",
        "      <td>2020-05-26</td>\n",
        "      <td>Nigeria</td>\n",
        "      <td>0.0180915</td>\n",
        "      <td>0.000116646</td>\n",
        "      <td>0.012023</td>\n",
        "      <td>0.00434688</td>\n",
        "      <td>0.018</td>\n",
        "      <td>2143</td>\n",
        "      <td>20</td>\n",
        "      <td>57</td>\n",
        "      <td>...</td>\n",
        "      <td>2</td>\n",
        "      <td>3</td>\n",
        "      <td>1</td>\n",
        "      <td>1</td>\n",
        "      <td>2</td>\n",
        "      <td>4</td>\n",
        "      <td>2</td>\n",
        "      <td>1</td>\n",
        "      <td>2</td>\n",
        "      <td>80.56</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>3</th>\n",
        "      <td>2020-05-27</td>\n",
        "      <td>Nigeria</td>\n",
        "      <td>0.0180915</td>\n",
        "      <td>0.000116646</td>\n",
        "      <td>0.012023</td>\n",
        "      <td>0.00434688</td>\n",
        "      <td>0.018</td>\n",
        "      <td>2143</td>\n",
        "      <td>20</td>\n",
        "      <td>57</td>\n",
        "      <td>...</td>\n",
        "      <td>2</td>\n",
        "      <td>3</td>\n",
        "      <td>1</td>\n",
        "      <td>1</td>\n",
        "      <td>2</td>\n",
        "      <td>4</td>\n",
        "      <td>2</td>\n",
        "      <td>1</td>\n",
        "      <td>2</td>\n",
        "      <td>80.56</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>4</th>\n",
        "      <td>2020-05-28</td>\n",
        "      <td>Nigeria</td>\n",
        "      <td>0.0180915</td>\n",
        "      <td>0.000116646</td>\n",
        "      <td>0.012023</td>\n",
        "      <td>0.00434688</td>\n",
        "      <td>0.018</td>\n",
        "      <td>2143</td>\n",
        "      <td>20</td>\n",
        "      <td>57</td>\n",
        "      <td>...</td>\n",
        "      <td>2</td>\n",
        "      <td>3</td>\n",
        "      <td>1</td>\n",
        "      <td>1</td>\n",
        "      <td>2</td>\n",
        "      <td>4</td>\n",
        "      <td>2</td>\n",
        "      <td>1</td>\n",
        "      <td>2</td>\n",
        "      <td>80.56</td>\n",
        "    </tr>\n",
        "  </tbody>\n",
        "</table>\n",
        "<p>5 rows \u00d7 23 columns</p>\n",
        "</div>"
       ],
       "output_type": "pyout",
       "prompt_number": 13,
       "text": [
        "        Date  Country      theta        kappa       rho       sigma  \\\n",
        "0 2020-05-24  Nigeria  0.0180915  0.000116646  0.012023  0.00434688   \n",
        "1 2020-05-25  Nigeria  0.0180915  0.000116646  0.012023  0.00434688   \n",
        "2 2020-05-26  Nigeria  0.0180915  0.000116646  0.012023  0.00434688   \n",
        "3 2020-05-27  Nigeria  0.0180915  0.000116646  0.012023  0.00434688   \n",
        "4 2020-05-28  Nigeria  0.0180915  0.000116646  0.012023  0.00434688   \n",
        "\n",
        "  alpha1 [-] 1/alpha2 [day] 1/beta [day] 1/gamma [day]  ... Cancel_events  \\\n",
        "0      0.018           2143           20            57  ...             2   \n",
        "1      0.018           2143           20            57  ...             2   \n",
        "2      0.018           2143           20            57  ...             2   \n",
        "3      0.018           2143           20            57  ...             2   \n",
        "4      0.018           2143           20            57  ...             2   \n",
        "\n",
        "   Gatherings_restrictions  Transport_closing  Stay_home_restrictions  \\\n",
        "0                        3                  1                       1   \n",
        "1                        3                  1                       1   \n",
        "2                        3                  1                       1   \n",
        "3                        3                  1                       1   \n",
        "4                        3                  1                       1   \n",
        "\n",
        "   Internal_movement_restrictions  International_movement_restrictions  \\\n",
        "0                               2                                    4   \n",
        "1                               2                                    4   \n",
        "2                               2                                    4   \n",
        "3                               2                                    4   \n",
        "4                               2                                    4   \n",
        "\n",
        "   Information_campaigns  Testing_policy  Contact_tracing  Stringency_index  \n",
        "0                      2               1                2             80.56  \n",
        "1                      2               1                2             80.56  \n",
        "2                      2               1                2             80.56  \n",
        "3                      2               1                2             80.56  \n",
        "4                      2               1                2             80.56  \n",
        "\n",
        "[5 rows x 23 columns]"
       ]
      }
     ],
     "prompt_number": 13
    },
    {
     "cell_type": "heading",
     "level": 3,
     "metadata": {},
     "source": [
      "$Rt$: Reprodcution number $\\mathrm{[-]}$"
     ]
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "analyser.param_history(\"Rt\", roll_window=None).tail()"
     ],
     "language": "python",
     "metadata": {},
     "outputs": [
      {
       "output_type": "display_data",
       "png": "\n",
       "text": [
        "<Figure size 648x432 with 1 Axes>"
       ]
      },
      {
       "html": [
        "<div>\n",
        "<style scoped>\n",
        "    .dataframe tbody tr th:only-of-type {\n",
        "        vertical-align: middle;\n",
        "    }\n",
        "\n",
        "    .dataframe tbody tr th {\n",
        "        vertical-align: top;\n",
        "    }\n",
        "\n",
        "    .dataframe thead th {\n",
        "        text-align: right;\n",
        "    }\n",
        "</style>\n",
        "<table border=\"1\" class=\"dataframe\">\n",
        "  <thead>\n",
        "    <tr style=\"text-align: right;\">\n",
        "      <th>Country</th>\n",
        "      <th>Bahrain</th>\n",
        "      <th>Bangladesh</th>\n",
        "      <th>Brazil</th>\n",
        "      <th>Czech Republic</th>\n",
        "      <th>France</th>\n",
        "      <th>Georgia</th>\n",
        "      <th>Guinea</th>\n",
        "      <th>Iran</th>\n",
        "      <th>Italy</th>\n",
        "      <th>Kuwait</th>\n",
        "      <th>...</th>\n",
        "      <th>Nigeria</th>\n",
        "      <th>Poland</th>\n",
        "      <th>Portugal</th>\n",
        "      <th>Romania</th>\n",
        "      <th>Russia</th>\n",
        "      <th>Senegal</th>\n",
        "      <th>Turkey</th>\n",
        "      <th>Ukraine</th>\n",
        "      <th>United Arab Emirates</th>\n",
        "      <th>United States</th>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>Date</th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "    </tr>\n",
        "  </thead>\n",
        "  <tbody>\n",
        "    <tr>\n",
        "      <th>2020-08-28</th>\n",
        "      <td>0.89</td>\n",
        "      <td>0.69</td>\n",
        "      <td>0.99</td>\n",
        "      <td>1.2</td>\n",
        "      <td>17.5</td>\n",
        "      <td>1.11</td>\n",
        "      <td>0.78</td>\n",
        "      <td>1.08</td>\n",
        "      <td>1.85</td>\n",
        "      <td>1.0</td>\n",
        "      <td>...</td>\n",
        "      <td>0.85</td>\n",
        "      <td>1.63</td>\n",
        "      <td>0.71</td>\n",
        "      <td>3.36</td>\n",
        "      <td>1.37</td>\n",
        "      <td>2.42</td>\n",
        "      <td>1.15</td>\n",
        "      <td>2.54</td>\n",
        "      <td>2.54</td>\n",
        "      <td>2.0</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>2020-08-29</th>\n",
        "      <td>0.89</td>\n",
        "      <td>0.69</td>\n",
        "      <td>0.99</td>\n",
        "      <td>1.2</td>\n",
        "      <td>17.5</td>\n",
        "      <td>1.11</td>\n",
        "      <td>0.78</td>\n",
        "      <td>1.08</td>\n",
        "      <td>1.85</td>\n",
        "      <td>1.0</td>\n",
        "      <td>...</td>\n",
        "      <td>0.85</td>\n",
        "      <td>1.63</td>\n",
        "      <td>0.71</td>\n",
        "      <td>3.36</td>\n",
        "      <td>1.37</td>\n",
        "      <td>2.42</td>\n",
        "      <td>1.15</td>\n",
        "      <td>2.54</td>\n",
        "      <td>2.54</td>\n",
        "      <td>2.0</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>2020-08-30</th>\n",
        "      <td>0.89</td>\n",
        "      <td>0.69</td>\n",
        "      <td>0.99</td>\n",
        "      <td>1.2</td>\n",
        "      <td>17.5</td>\n",
        "      <td>1.11</td>\n",
        "      <td>0.78</td>\n",
        "      <td>1.08</td>\n",
        "      <td>1.85</td>\n",
        "      <td>1.0</td>\n",
        "      <td>...</td>\n",
        "      <td>0.85</td>\n",
        "      <td>1.63</td>\n",
        "      <td>0.71</td>\n",
        "      <td>3.36</td>\n",
        "      <td>1.37</td>\n",
        "      <td>2.42</td>\n",
        "      <td>1.15</td>\n",
        "      <td>2.54</td>\n",
        "      <td>2.54</td>\n",
        "      <td>2.0</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>2020-08-31</th>\n",
        "      <td>0.89</td>\n",
        "      <td>0.69</td>\n",
        "      <td>0.99</td>\n",
        "      <td>1.2</td>\n",
        "      <td>17.5</td>\n",
        "      <td>1.11</td>\n",
        "      <td>0.78</td>\n",
        "      <td>1.08</td>\n",
        "      <td>1.85</td>\n",
        "      <td>1.0</td>\n",
        "      <td>...</td>\n",
        "      <td>0.85</td>\n",
        "      <td>1.63</td>\n",
        "      <td>0.71</td>\n",
        "      <td>3.36</td>\n",
        "      <td>1.37</td>\n",
        "      <td>2.42</td>\n",
        "      <td>1.15</td>\n",
        "      <td>2.54</td>\n",
        "      <td>2.54</td>\n",
        "      <td>2.0</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>2020-09-01</th>\n",
        "      <td>0.89</td>\n",
        "      <td>0.69</td>\n",
        "      <td>0.99</td>\n",
        "      <td>1.2</td>\n",
        "      <td>17.5</td>\n",
        "      <td>1.11</td>\n",
        "      <td>0.78</td>\n",
        "      <td>1.08</td>\n",
        "      <td>1.85</td>\n",
        "      <td>1.0</td>\n",
        "      <td>...</td>\n",
        "      <td>0.85</td>\n",
        "      <td>1.63</td>\n",
        "      <td>0.71</td>\n",
        "      <td>3.36</td>\n",
        "      <td>1.37</td>\n",
        "      <td>2.42</td>\n",
        "      <td>1.15</td>\n",
        "      <td>2.54</td>\n",
        "      <td>2.54</td>\n",
        "      <td>2.0</td>\n",
        "    </tr>\n",
        "  </tbody>\n",
        "</table>\n",
        "<p>5 rows \u00d7 23 columns</p>\n",
        "</div>"
       ],
       "output_type": "pyout",
       "prompt_number": 14,
       "text": [
        "Country     Bahrain  Bangladesh  Brazil  Czech Republic  France  Georgia  \\\n",
        "Date                                                                       \n",
        "2020-08-28     0.89        0.69    0.99             1.2    17.5     1.11   \n",
        "2020-08-29     0.89        0.69    0.99             1.2    17.5     1.11   \n",
        "2020-08-30     0.89        0.69    0.99             1.2    17.5     1.11   \n",
        "2020-08-31     0.89        0.69    0.99             1.2    17.5     1.11   \n",
        "2020-09-01     0.89        0.69    0.99             1.2    17.5     1.11   \n",
        "\n",
        "Country     Guinea  Iran  Italy  Kuwait  ...  Nigeria  Poland  Portugal  \\\n",
        "Date                                     ...                              \n",
        "2020-08-28    0.78  1.08   1.85     1.0  ...     0.85    1.63      0.71   \n",
        "2020-08-29    0.78  1.08   1.85     1.0  ...     0.85    1.63      0.71   \n",
        "2020-08-30    0.78  1.08   1.85     1.0  ...     0.85    1.63      0.71   \n",
        "2020-08-31    0.78  1.08   1.85     1.0  ...     0.85    1.63      0.71   \n",
        "2020-09-01    0.78  1.08   1.85     1.0  ...     0.85    1.63      0.71   \n",
        "\n",
        "Country     Romania  Russia  Senegal  Turkey  Ukraine  United Arab Emirates  \\\n",
        "Date                                                                          \n",
        "2020-08-28     3.36    1.37     2.42    1.15     2.54                  2.54   \n",
        "2020-08-29     3.36    1.37     2.42    1.15     2.54                  2.54   \n",
        "2020-08-30     3.36    1.37     2.42    1.15     2.54                  2.54   \n",
        "2020-08-31     3.36    1.37     2.42    1.15     2.54                  2.54   \n",
        "2020-09-01     3.36    1.37     2.42    1.15     2.54                  2.54   \n",
        "\n",
        "Country     United States  \n",
        "Date                       \n",
        "2020-08-28            2.0  \n",
        "2020-08-29            2.0  \n",
        "2020-08-30            2.0  \n",
        "2020-08-31            2.0  \n",
        "2020-09-01            2.0  \n",
        "\n",
        "[5 rows x 23 columns]"
       ]
      }
     ],
     "prompt_number": 14
    },
    {
     "cell_type": "heading",
     "level": 3,
     "metadata": {},
     "source": [
      "$\\rho$: Effective contact rate $\\mathrm{[-]}$"
     ]
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "analyser.param_history(\"rho\", roll_window=None).tail()"
     ],
     "language": "python",
     "metadata": {},
     "outputs": [
      {
       "output_type": "display_data",
       "png": "\n",
       "text": [
        "<Figure size 648x432 with 1 Axes>"
       ]
      },
      {
       "html": [
        "<div>\n",
        "<style scoped>\n",
        "    .dataframe tbody tr th:only-of-type {\n",
        "        vertical-align: middle;\n",
        "    }\n",
        "\n",
        "    .dataframe tbody tr th {\n",
        "        vertical-align: top;\n",
        "    }\n",
        "\n",
        "    .dataframe thead th {\n",
        "        text-align: right;\n",
        "    }\n",
        "</style>\n",
        "<table border=\"1\" class=\"dataframe\">\n",
        "  <thead>\n",
        "    <tr style=\"text-align: right;\">\n",
        "      <th>Country</th>\n",
        "      <th>Bahrain</th>\n",
        "      <th>Bangladesh</th>\n",
        "      <th>Brazil</th>\n",
        "      <th>Czech Republic</th>\n",
        "      <th>France</th>\n",
        "      <th>Georgia</th>\n",
        "      <th>Guinea</th>\n",
        "      <th>Iran</th>\n",
        "      <th>Italy</th>\n",
        "      <th>Kuwait</th>\n",
        "      <th>...</th>\n",
        "      <th>Nigeria</th>\n",
        "      <th>Poland</th>\n",
        "      <th>Portugal</th>\n",
        "      <th>Romania</th>\n",
        "      <th>Russia</th>\n",
        "      <th>Senegal</th>\n",
        "      <th>Turkey</th>\n",
        "      <th>Ukraine</th>\n",
        "      <th>United Arab Emirates</th>\n",
        "      <th>United States</th>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>Date</th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "    </tr>\n",
        "  </thead>\n",
        "  <tbody>\n",
        "    <tr>\n",
        "      <th>2020-08-28</th>\n",
        "      <td>0.028413</td>\n",
        "      <td>0.005361</td>\n",
        "      <td>0.017548</td>\n",
        "      <td>0.012306</td>\n",
        "      <td>0.007642</td>\n",
        "      <td>0.010667</td>\n",
        "      <td>0.011281</td>\n",
        "      <td>0.027955</td>\n",
        "      <td>0.008119</td>\n",
        "      <td>0.018608</td>\n",
        "      <td>...</td>\n",
        "      <td>0.004848</td>\n",
        "      <td>0.011428</td>\n",
        "      <td>0.00289</td>\n",
        "      <td>0.011234</td>\n",
        "      <td>0.001269</td>\n",
        "      <td>0.007478</td>\n",
        "      <td>0.026082</td>\n",
        "      <td>0.010486</td>\n",
        "      <td>0.011482</td>\n",
        "      <td>0.003625</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>2020-08-29</th>\n",
        "      <td>0.028413</td>\n",
        "      <td>0.005361</td>\n",
        "      <td>0.017548</td>\n",
        "      <td>0.012306</td>\n",
        "      <td>0.007642</td>\n",
        "      <td>0.010667</td>\n",
        "      <td>0.011281</td>\n",
        "      <td>0.027955</td>\n",
        "      <td>0.008119</td>\n",
        "      <td>0.018608</td>\n",
        "      <td>...</td>\n",
        "      <td>0.004848</td>\n",
        "      <td>0.011428</td>\n",
        "      <td>0.00289</td>\n",
        "      <td>0.011234</td>\n",
        "      <td>0.001269</td>\n",
        "      <td>0.007478</td>\n",
        "      <td>0.026082</td>\n",
        "      <td>0.010486</td>\n",
        "      <td>0.011482</td>\n",
        "      <td>0.003625</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>2020-08-30</th>\n",
        "      <td>0.028413</td>\n",
        "      <td>0.005361</td>\n",
        "      <td>0.017548</td>\n",
        "      <td>0.012306</td>\n",
        "      <td>0.007642</td>\n",
        "      <td>0.010667</td>\n",
        "      <td>0.011281</td>\n",
        "      <td>0.027955</td>\n",
        "      <td>0.008119</td>\n",
        "      <td>0.018608</td>\n",
        "      <td>...</td>\n",
        "      <td>0.004848</td>\n",
        "      <td>0.011428</td>\n",
        "      <td>0.00289</td>\n",
        "      <td>0.011234</td>\n",
        "      <td>0.001269</td>\n",
        "      <td>0.007478</td>\n",
        "      <td>0.026082</td>\n",
        "      <td>0.010486</td>\n",
        "      <td>0.011482</td>\n",
        "      <td>0.003625</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>2020-08-31</th>\n",
        "      <td>0.028413</td>\n",
        "      <td>0.005361</td>\n",
        "      <td>0.017548</td>\n",
        "      <td>0.012306</td>\n",
        "      <td>0.007642</td>\n",
        "      <td>0.010667</td>\n",
        "      <td>0.011281</td>\n",
        "      <td>0.027955</td>\n",
        "      <td>0.008119</td>\n",
        "      <td>0.018608</td>\n",
        "      <td>...</td>\n",
        "      <td>0.004848</td>\n",
        "      <td>0.011428</td>\n",
        "      <td>0.00289</td>\n",
        "      <td>0.011234</td>\n",
        "      <td>0.001269</td>\n",
        "      <td>0.007478</td>\n",
        "      <td>0.026082</td>\n",
        "      <td>0.010486</td>\n",
        "      <td>0.011482</td>\n",
        "      <td>0.003625</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>2020-09-01</th>\n",
        "      <td>0.028413</td>\n",
        "      <td>0.005361</td>\n",
        "      <td>0.017548</td>\n",
        "      <td>0.012306</td>\n",
        "      <td>0.007642</td>\n",
        "      <td>0.010667</td>\n",
        "      <td>0.011281</td>\n",
        "      <td>0.027955</td>\n",
        "      <td>0.008119</td>\n",
        "      <td>0.018608</td>\n",
        "      <td>...</td>\n",
        "      <td>0.004848</td>\n",
        "      <td>0.011428</td>\n",
        "      <td>0.00289</td>\n",
        "      <td>0.011234</td>\n",
        "      <td>0.001269</td>\n",
        "      <td>0.007478</td>\n",
        "      <td>0.026082</td>\n",
        "      <td>0.010486</td>\n",
        "      <td>0.011482</td>\n",
        "      <td>0.003625</td>\n",
        "    </tr>\n",
        "  </tbody>\n",
        "</table>\n",
        "<p>5 rows \u00d7 23 columns</p>\n",
        "</div>"
       ],
       "output_type": "pyout",
       "prompt_number": 15,
       "text": [
        "Country      Bahrain  Bangladesh    Brazil  Czech Republic    France  \\\n",
        "Date                                                                   \n",
        "2020-08-28  0.028413    0.005361  0.017548        0.012306  0.007642   \n",
        "2020-08-29  0.028413    0.005361  0.017548        0.012306  0.007642   \n",
        "2020-08-30  0.028413    0.005361  0.017548        0.012306  0.007642   \n",
        "2020-08-31  0.028413    0.005361  0.017548        0.012306  0.007642   \n",
        "2020-09-01  0.028413    0.005361  0.017548        0.012306  0.007642   \n",
        "\n",
        "Country      Georgia    Guinea      Iran     Italy    Kuwait  ...   Nigeria  \\\n",
        "Date                                                          ...             \n",
        "2020-08-28  0.010667  0.011281  0.027955  0.008119  0.018608  ...  0.004848   \n",
        "2020-08-29  0.010667  0.011281  0.027955  0.008119  0.018608  ...  0.004848   \n",
        "2020-08-30  0.010667  0.011281  0.027955  0.008119  0.018608  ...  0.004848   \n",
        "2020-08-31  0.010667  0.011281  0.027955  0.008119  0.018608  ...  0.004848   \n",
        "2020-09-01  0.010667  0.011281  0.027955  0.008119  0.018608  ...  0.004848   \n",
        "\n",
        "Country       Poland  Portugal   Romania    Russia   Senegal    Turkey  \\\n",
        "Date                                                                     \n",
        "2020-08-28  0.011428   0.00289  0.011234  0.001269  0.007478  0.026082   \n",
        "2020-08-29  0.011428   0.00289  0.011234  0.001269  0.007478  0.026082   \n",
        "2020-08-30  0.011428   0.00289  0.011234  0.001269  0.007478  0.026082   \n",
        "2020-08-31  0.011428   0.00289  0.011234  0.001269  0.007478  0.026082   \n",
        "2020-09-01  0.011428   0.00289  0.011234  0.001269  0.007478  0.026082   \n",
        "\n",
        "Country      Ukraine  United Arab Emirates  United States  \n",
        "Date                                                       \n",
        "2020-08-28  0.010486              0.011482       0.003625  \n",
        "2020-08-29  0.010486              0.011482       0.003625  \n",
        "2020-08-30  0.010486              0.011482       0.003625  \n",
        "2020-08-31  0.010486              0.011482       0.003625  \n",
        "2020-09-01  0.010486              0.011482       0.003625  \n",
        "\n",
        "[5 rows x 23 columns]"
       ]
      }
     ],
     "prompt_number": 15
    },
    {
     "cell_type": "heading",
     "level": 3,
     "metadata": {},
     "source": [
      "$\\sigma$: Recovery rate $\\mathrm{[-]}$"
     ]
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "analyser.param_history(\"sigma\", roll_window=None).tail()"
     ],
     "language": "python",
     "metadata": {},
     "outputs": [
      {
       "output_type": "display_data",
       "png": "\n",
       "text": [
        "<Figure size 648x432 with 1 Axes>"
       ]
      },
      {
       "html": [
        "<div>\n",
        "<style scoped>\n",
        "    .dataframe tbody tr th:only-of-type {\n",
        "        vertical-align: middle;\n",
        "    }\n",
        "\n",
        "    .dataframe tbody tr th {\n",
        "        vertical-align: top;\n",
        "    }\n",
        "\n",
        "    .dataframe thead th {\n",
        "        text-align: right;\n",
        "    }\n",
        "</style>\n",
        "<table border=\"1\" class=\"dataframe\">\n",
        "  <thead>\n",
        "    <tr style=\"text-align: right;\">\n",
        "      <th>Country</th>\n",
        "      <th>Bahrain</th>\n",
        "      <th>Bangladesh</th>\n",
        "      <th>Brazil</th>\n",
        "      <th>Czech Republic</th>\n",
        "      <th>France</th>\n",
        "      <th>Georgia</th>\n",
        "      <th>Guinea</th>\n",
        "      <th>Iran</th>\n",
        "      <th>Italy</th>\n",
        "      <th>Kuwait</th>\n",
        "      <th>...</th>\n",
        "      <th>Nigeria</th>\n",
        "      <th>Poland</th>\n",
        "      <th>Portugal</th>\n",
        "      <th>Romania</th>\n",
        "      <th>Russia</th>\n",
        "      <th>Senegal</th>\n",
        "      <th>Turkey</th>\n",
        "      <th>Ukraine</th>\n",
        "      <th>United Arab Emirates</th>\n",
        "      <th>United States</th>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>Date</th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "    </tr>\n",
        "  </thead>\n",
        "  <tbody>\n",
        "    <tr>\n",
        "      <th>2020-08-28</th>\n",
        "      <td>0.031897</td>\n",
        "      <td>0.007647</td>\n",
        "      <td>0.017357</td>\n",
        "      <td>0.010196</td>\n",
        "      <td>0.000405</td>\n",
        "      <td>0.009589</td>\n",
        "      <td>0.014275</td>\n",
        "      <td>0.023241</td>\n",
        "      <td>0.004164</td>\n",
        "      <td>0.018623</td>\n",
        "      <td>...</td>\n",
        "      <td>0.005637</td>\n",
        "      <td>0.006834</td>\n",
        "      <td>0.004039</td>\n",
        "      <td>0.003102</td>\n",
        "      <td>0.000901</td>\n",
        "      <td>0.002928</td>\n",
        "      <td>0.022314</td>\n",
        "      <td>0.003968</td>\n",
        "      <td>0.004491</td>\n",
        "      <td>0.001733</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>2020-08-29</th>\n",
        "      <td>0.031897</td>\n",
        "      <td>0.007647</td>\n",
        "      <td>0.017357</td>\n",
        "      <td>0.010196</td>\n",
        "      <td>0.000405</td>\n",
        "      <td>0.009589</td>\n",
        "      <td>0.014275</td>\n",
        "      <td>0.023241</td>\n",
        "      <td>0.004164</td>\n",
        "      <td>0.018623</td>\n",
        "      <td>...</td>\n",
        "      <td>0.005637</td>\n",
        "      <td>0.006834</td>\n",
        "      <td>0.004039</td>\n",
        "      <td>0.003102</td>\n",
        "      <td>0.000901</td>\n",
        "      <td>0.002928</td>\n",
        "      <td>0.022314</td>\n",
        "      <td>0.003968</td>\n",
        "      <td>0.004491</td>\n",
        "      <td>0.001733</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>2020-08-30</th>\n",
        "      <td>0.031897</td>\n",
        "      <td>0.007647</td>\n",
        "      <td>0.017357</td>\n",
        "      <td>0.010196</td>\n",
        "      <td>0.000405</td>\n",
        "      <td>0.009589</td>\n",
        "      <td>0.014275</td>\n",
        "      <td>0.023241</td>\n",
        "      <td>0.004164</td>\n",
        "      <td>0.018623</td>\n",
        "      <td>...</td>\n",
        "      <td>0.005637</td>\n",
        "      <td>0.006834</td>\n",
        "      <td>0.004039</td>\n",
        "      <td>0.003102</td>\n",
        "      <td>0.000901</td>\n",
        "      <td>0.002928</td>\n",
        "      <td>0.022314</td>\n",
        "      <td>0.003968</td>\n",
        "      <td>0.004491</td>\n",
        "      <td>0.001733</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>2020-08-31</th>\n",
        "      <td>0.031897</td>\n",
        "      <td>0.007647</td>\n",
        "      <td>0.017357</td>\n",
        "      <td>0.010196</td>\n",
        "      <td>0.000405</td>\n",
        "      <td>0.009589</td>\n",
        "      <td>0.014275</td>\n",
        "      <td>0.023241</td>\n",
        "      <td>0.004164</td>\n",
        "      <td>0.018623</td>\n",
        "      <td>...</td>\n",
        "      <td>0.005637</td>\n",
        "      <td>0.006834</td>\n",
        "      <td>0.004039</td>\n",
        "      <td>0.003102</td>\n",
        "      <td>0.000901</td>\n",
        "      <td>0.002928</td>\n",
        "      <td>0.022314</td>\n",
        "      <td>0.003968</td>\n",
        "      <td>0.004491</td>\n",
        "      <td>0.001733</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>2020-09-01</th>\n",
        "      <td>0.031897</td>\n",
        "      <td>0.007647</td>\n",
        "      <td>0.017357</td>\n",
        "      <td>0.010196</td>\n",
        "      <td>0.000405</td>\n",
        "      <td>0.009589</td>\n",
        "      <td>0.014275</td>\n",
        "      <td>0.023241</td>\n",
        "      <td>0.004164</td>\n",
        "      <td>0.018623</td>\n",
        "      <td>...</td>\n",
        "      <td>0.005637</td>\n",
        "      <td>0.006834</td>\n",
        "      <td>0.004039</td>\n",
        "      <td>0.003102</td>\n",
        "      <td>0.000901</td>\n",
        "      <td>0.002928</td>\n",
        "      <td>0.022314</td>\n",
        "      <td>0.003968</td>\n",
        "      <td>0.004491</td>\n",
        "      <td>0.001733</td>\n",
        "    </tr>\n",
        "  </tbody>\n",
        "</table>\n",
        "<p>5 rows \u00d7 23 columns</p>\n",
        "</div>"
       ],
       "output_type": "pyout",
       "prompt_number": 16,
       "text": [
        "Country      Bahrain  Bangladesh    Brazil  Czech Republic    France  \\\n",
        "Date                                                                   \n",
        "2020-08-28  0.031897    0.007647  0.017357        0.010196  0.000405   \n",
        "2020-08-29  0.031897    0.007647  0.017357        0.010196  0.000405   \n",
        "2020-08-30  0.031897    0.007647  0.017357        0.010196  0.000405   \n",
        "2020-08-31  0.031897    0.007647  0.017357        0.010196  0.000405   \n",
        "2020-09-01  0.031897    0.007647  0.017357        0.010196  0.000405   \n",
        "\n",
        "Country      Georgia    Guinea      Iran     Italy    Kuwait  ...   Nigeria  \\\n",
        "Date                                                          ...             \n",
        "2020-08-28  0.009589  0.014275  0.023241  0.004164  0.018623  ...  0.005637   \n",
        "2020-08-29  0.009589  0.014275  0.023241  0.004164  0.018623  ...  0.005637   \n",
        "2020-08-30  0.009589  0.014275  0.023241  0.004164  0.018623  ...  0.005637   \n",
        "2020-08-31  0.009589  0.014275  0.023241  0.004164  0.018623  ...  0.005637   \n",
        "2020-09-01  0.009589  0.014275  0.023241  0.004164  0.018623  ...  0.005637   \n",
        "\n",
        "Country       Poland  Portugal   Romania    Russia   Senegal    Turkey  \\\n",
        "Date                                                                     \n",
        "2020-08-28  0.006834  0.004039  0.003102  0.000901  0.002928  0.022314   \n",
        "2020-08-29  0.006834  0.004039  0.003102  0.000901  0.002928  0.022314   \n",
        "2020-08-30  0.006834  0.004039  0.003102  0.000901  0.002928  0.022314   \n",
        "2020-08-31  0.006834  0.004039  0.003102  0.000901  0.002928  0.022314   \n",
        "2020-09-01  0.006834  0.004039  0.003102  0.000901  0.002928  0.022314   \n",
        "\n",
        "Country      Ukraine  United Arab Emirates  United States  \n",
        "Date                                                       \n",
        "2020-08-28  0.003968              0.004491       0.001733  \n",
        "2020-08-29  0.003968              0.004491       0.001733  \n",
        "2020-08-30  0.003968              0.004491       0.001733  \n",
        "2020-08-31  0.003968              0.004491       0.001733  \n",
        "2020-09-01  0.003968              0.004491       0.001733  \n",
        "\n",
        "[5 rows x 23 columns]"
       ]
      }
     ],
     "prompt_number": 16
    },
    {
     "cell_type": "heading",
     "level": 3,
     "metadata": {},
     "source": [
      "$\\kappa$: Mortality rate of infected cases $\\mathrm{[-]}$"
     ]
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "analyser.param_history(\"kappa\", roll_window=None).tail()"
     ],
     "language": "python",
     "metadata": {},
     "outputs": [
      {
       "output_type": "display_data",
       "png": "\n",
       "text": [
        "<Figure size 648x432 with 1 Axes>"
       ]
      },
      {
       "html": [
        "<div>\n",
        "<style scoped>\n",
        "    .dataframe tbody tr th:only-of-type {\n",
        "        vertical-align: middle;\n",
        "    }\n",
        "\n",
        "    .dataframe tbody tr th {\n",
        "        vertical-align: top;\n",
        "    }\n",
        "\n",
        "    .dataframe thead th {\n",
        "        text-align: right;\n",
        "    }\n",
        "</style>\n",
        "<table border=\"1\" class=\"dataframe\">\n",
        "  <thead>\n",
        "    <tr style=\"text-align: right;\">\n",
        "      <th>Country</th>\n",
        "      <th>Bahrain</th>\n",
        "      <th>Bangladesh</th>\n",
        "      <th>Brazil</th>\n",
        "      <th>Czech Republic</th>\n",
        "      <th>France</th>\n",
        "      <th>Georgia</th>\n",
        "      <th>Guinea</th>\n",
        "      <th>Iran</th>\n",
        "      <th>Italy</th>\n",
        "      <th>Kuwait</th>\n",
        "      <th>...</th>\n",
        "      <th>Nigeria</th>\n",
        "      <th>Poland</th>\n",
        "      <th>Portugal</th>\n",
        "      <th>Romania</th>\n",
        "      <th>Russia</th>\n",
        "      <th>Senegal</th>\n",
        "      <th>Turkey</th>\n",
        "      <th>Ukraine</th>\n",
        "      <th>United Arab Emirates</th>\n",
        "      <th>United States</th>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>Date</th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "    </tr>\n",
        "  </thead>\n",
        "  <tbody>\n",
        "    <tr>\n",
        "      <th>2020-08-28</th>\n",
        "      <td>0.000071</td>\n",
        "      <td>0.000014</td>\n",
        "      <td>0.000108</td>\n",
        "      <td>0.000024</td>\n",
        "      <td>0.000031</td>\n",
        "      <td>0.000002</td>\n",
        "      <td>0.000164</td>\n",
        "      <td>0.002519</td>\n",
        "      <td>0.000216</td>\n",
        "      <td>0.000064</td>\n",
        "      <td>...</td>\n",
        "      <td>0.000057</td>\n",
        "      <td>0.000168</td>\n",
        "      <td>0.000037</td>\n",
        "      <td>0.000181</td>\n",
        "      <td>0.00001</td>\n",
        "      <td>0.000156</td>\n",
        "      <td>0.00007</td>\n",
        "      <td>0.000162</td>\n",
        "      <td>0.000024</td>\n",
        "      <td>0.000071</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>2020-08-29</th>\n",
        "      <td>0.000071</td>\n",
        "      <td>0.000014</td>\n",
        "      <td>0.000108</td>\n",
        "      <td>0.000024</td>\n",
        "      <td>0.000031</td>\n",
        "      <td>0.000002</td>\n",
        "      <td>0.000164</td>\n",
        "      <td>0.002519</td>\n",
        "      <td>0.000216</td>\n",
        "      <td>0.000064</td>\n",
        "      <td>...</td>\n",
        "      <td>0.000057</td>\n",
        "      <td>0.000168</td>\n",
        "      <td>0.000037</td>\n",
        "      <td>0.000181</td>\n",
        "      <td>0.00001</td>\n",
        "      <td>0.000156</td>\n",
        "      <td>0.00007</td>\n",
        "      <td>0.000162</td>\n",
        "      <td>0.000024</td>\n",
        "      <td>0.000071</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>2020-08-30</th>\n",
        "      <td>0.000071</td>\n",
        "      <td>0.000014</td>\n",
        "      <td>0.000108</td>\n",
        "      <td>0.000024</td>\n",
        "      <td>0.000031</td>\n",
        "      <td>0.000002</td>\n",
        "      <td>0.000164</td>\n",
        "      <td>0.002519</td>\n",
        "      <td>0.000216</td>\n",
        "      <td>0.000064</td>\n",
        "      <td>...</td>\n",
        "      <td>0.000057</td>\n",
        "      <td>0.000168</td>\n",
        "      <td>0.000037</td>\n",
        "      <td>0.000181</td>\n",
        "      <td>0.00001</td>\n",
        "      <td>0.000156</td>\n",
        "      <td>0.00007</td>\n",
        "      <td>0.000162</td>\n",
        "      <td>0.000024</td>\n",
        "      <td>0.000071</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>2020-08-31</th>\n",
        "      <td>0.000071</td>\n",
        "      <td>0.000014</td>\n",
        "      <td>0.000108</td>\n",
        "      <td>0.000024</td>\n",
        "      <td>0.000031</td>\n",
        "      <td>0.000002</td>\n",
        "      <td>0.000164</td>\n",
        "      <td>0.002519</td>\n",
        "      <td>0.000216</td>\n",
        "      <td>0.000064</td>\n",
        "      <td>...</td>\n",
        "      <td>0.000057</td>\n",
        "      <td>0.000168</td>\n",
        "      <td>0.000037</td>\n",
        "      <td>0.000181</td>\n",
        "      <td>0.00001</td>\n",
        "      <td>0.000156</td>\n",
        "      <td>0.00007</td>\n",
        "      <td>0.000162</td>\n",
        "      <td>0.000024</td>\n",
        "      <td>0.000071</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>2020-09-01</th>\n",
        "      <td>0.000071</td>\n",
        "      <td>0.000014</td>\n",
        "      <td>0.000108</td>\n",
        "      <td>0.000024</td>\n",
        "      <td>0.000031</td>\n",
        "      <td>0.000002</td>\n",
        "      <td>0.000164</td>\n",
        "      <td>0.002519</td>\n",
        "      <td>0.000216</td>\n",
        "      <td>0.000064</td>\n",
        "      <td>...</td>\n",
        "      <td>0.000057</td>\n",
        "      <td>0.000168</td>\n",
        "      <td>0.000037</td>\n",
        "      <td>0.000181</td>\n",
        "      <td>0.00001</td>\n",
        "      <td>0.000156</td>\n",
        "      <td>0.00007</td>\n",
        "      <td>0.000162</td>\n",
        "      <td>0.000024</td>\n",
        "      <td>0.000071</td>\n",
        "    </tr>\n",
        "  </tbody>\n",
        "</table>\n",
        "<p>5 rows \u00d7 23 columns</p>\n",
        "</div>"
       ],
       "output_type": "pyout",
       "prompt_number": 17,
       "text": [
        "Country      Bahrain  Bangladesh    Brazil  Czech Republic    France  \\\n",
        "Date                                                                   \n",
        "2020-08-28  0.000071    0.000014  0.000108        0.000024  0.000031   \n",
        "2020-08-29  0.000071    0.000014  0.000108        0.000024  0.000031   \n",
        "2020-08-30  0.000071    0.000014  0.000108        0.000024  0.000031   \n",
        "2020-08-31  0.000071    0.000014  0.000108        0.000024  0.000031   \n",
        "2020-09-01  0.000071    0.000014  0.000108        0.000024  0.000031   \n",
        "\n",
        "Country      Georgia    Guinea      Iran     Italy    Kuwait  ...   Nigeria  \\\n",
        "Date                                                          ...             \n",
        "2020-08-28  0.000002  0.000164  0.002519  0.000216  0.000064  ...  0.000057   \n",
        "2020-08-29  0.000002  0.000164  0.002519  0.000216  0.000064  ...  0.000057   \n",
        "2020-08-30  0.000002  0.000164  0.002519  0.000216  0.000064  ...  0.000057   \n",
        "2020-08-31  0.000002  0.000164  0.002519  0.000216  0.000064  ...  0.000057   \n",
        "2020-09-01  0.000002  0.000164  0.002519  0.000216  0.000064  ...  0.000057   \n",
        "\n",
        "Country       Poland  Portugal   Romania   Russia   Senegal   Turkey  \\\n",
        "Date                                                                   \n",
        "2020-08-28  0.000168  0.000037  0.000181  0.00001  0.000156  0.00007   \n",
        "2020-08-29  0.000168  0.000037  0.000181  0.00001  0.000156  0.00007   \n",
        "2020-08-30  0.000168  0.000037  0.000181  0.00001  0.000156  0.00007   \n",
        "2020-08-31  0.000168  0.000037  0.000181  0.00001  0.000156  0.00007   \n",
        "2020-09-01  0.000168  0.000037  0.000181  0.00001  0.000156  0.00007   \n",
        "\n",
        "Country      Ukraine  United Arab Emirates  United States  \n",
        "Date                                                       \n",
        "2020-08-28  0.000162              0.000024       0.000071  \n",
        "2020-08-29  0.000162              0.000024       0.000071  \n",
        "2020-08-30  0.000162              0.000024       0.000071  \n",
        "2020-08-31  0.000162              0.000024       0.000071  \n",
        "2020-09-01  0.000162              0.000024       0.000071  \n",
        "\n",
        "[5 rows x 23 columns]"
       ]
      }
     ],
     "prompt_number": 17
    },
    {
     "cell_type": "heading",
     "level": 3,
     "metadata": {},
     "source": [
      "$\\theta$: Mortality rate of S$^\\ast$ cases $\\mathrm{[-]}$"
     ]
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "analyser.param_history(\"theta\", roll_window=None).tail()"
     ],
     "language": "python",
     "metadata": {},
     "outputs": [
      {
       "output_type": "display_data",
       "png": "\n",
       "text": [
        "<Figure size 648x432 with 1 Axes>"
       ]
      },
      {
       "html": [
        "<div>\n",
        "<style scoped>\n",
        "    .dataframe tbody tr th:only-of-type {\n",
        "        vertical-align: middle;\n",
        "    }\n",
        "\n",
        "    .dataframe tbody tr th {\n",
        "        vertical-align: top;\n",
        "    }\n",
        "\n",
        "    .dataframe thead th {\n",
        "        text-align: right;\n",
        "    }\n",
        "</style>\n",
        "<table border=\"1\" class=\"dataframe\">\n",
        "  <thead>\n",
        "    <tr style=\"text-align: right;\">\n",
        "      <th>Country</th>\n",
        "      <th>Bahrain</th>\n",
        "      <th>Bangladesh</th>\n",
        "      <th>Brazil</th>\n",
        "      <th>Czech Republic</th>\n",
        "      <th>France</th>\n",
        "      <th>Georgia</th>\n",
        "      <th>Guinea</th>\n",
        "      <th>Iran</th>\n",
        "      <th>Italy</th>\n",
        "      <th>Kuwait</th>\n",
        "      <th>...</th>\n",
        "      <th>Nigeria</th>\n",
        "      <th>Poland</th>\n",
        "      <th>Portugal</th>\n",
        "      <th>Romania</th>\n",
        "      <th>Russia</th>\n",
        "      <th>Senegal</th>\n",
        "      <th>Turkey</th>\n",
        "      <th>Ukraine</th>\n",
        "      <th>United Arab Emirates</th>\n",
        "      <th>United States</th>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>Date</th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "    </tr>\n",
        "  </thead>\n",
        "  <tbody>\n",
        "    <tr>\n",
        "      <th>2020-08-28</th>\n",
        "      <td>0.00089</td>\n",
        "      <td>0.01593</td>\n",
        "      <td>0.019092</td>\n",
        "      <td>0.000659</td>\n",
        "      <td>0.000938</td>\n",
        "      <td>0.000099</td>\n",
        "      <td>0.000172</td>\n",
        "      <td>0.000404</td>\n",
        "      <td>0.000289</td>\n",
        "      <td>0.00022</td>\n",
        "      <td>...</td>\n",
        "      <td>0.000164</td>\n",
        "      <td>0.000131</td>\n",
        "      <td>0.001099</td>\n",
        "      <td>0.017721</td>\n",
        "      <td>0.016835</td>\n",
        "      <td>0.000897</td>\n",
        "      <td>0.015449</td>\n",
        "      <td>0.00119</td>\n",
        "      <td>0.000656</td>\n",
        "      <td>0.005725</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>2020-08-29</th>\n",
        "      <td>0.00089</td>\n",
        "      <td>0.01593</td>\n",
        "      <td>0.019092</td>\n",
        "      <td>0.000659</td>\n",
        "      <td>0.000938</td>\n",
        "      <td>0.000099</td>\n",
        "      <td>0.000172</td>\n",
        "      <td>0.000404</td>\n",
        "      <td>0.000289</td>\n",
        "      <td>0.00022</td>\n",
        "      <td>...</td>\n",
        "      <td>0.000164</td>\n",
        "      <td>0.000131</td>\n",
        "      <td>0.001099</td>\n",
        "      <td>0.017721</td>\n",
        "      <td>0.016835</td>\n",
        "      <td>0.000897</td>\n",
        "      <td>0.015449</td>\n",
        "      <td>0.00119</td>\n",
        "      <td>0.000656</td>\n",
        "      <td>0.005725</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>2020-08-30</th>\n",
        "      <td>0.00089</td>\n",
        "      <td>0.01593</td>\n",
        "      <td>0.019092</td>\n",
        "      <td>0.000659</td>\n",
        "      <td>0.000938</td>\n",
        "      <td>0.000099</td>\n",
        "      <td>0.000172</td>\n",
        "      <td>0.000404</td>\n",
        "      <td>0.000289</td>\n",
        "      <td>0.00022</td>\n",
        "      <td>...</td>\n",
        "      <td>0.000164</td>\n",
        "      <td>0.000131</td>\n",
        "      <td>0.001099</td>\n",
        "      <td>0.017721</td>\n",
        "      <td>0.016835</td>\n",
        "      <td>0.000897</td>\n",
        "      <td>0.015449</td>\n",
        "      <td>0.00119</td>\n",
        "      <td>0.000656</td>\n",
        "      <td>0.005725</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>2020-08-31</th>\n",
        "      <td>0.00089</td>\n",
        "      <td>0.01593</td>\n",
        "      <td>0.019092</td>\n",
        "      <td>0.000659</td>\n",
        "      <td>0.000938</td>\n",
        "      <td>0.000099</td>\n",
        "      <td>0.000172</td>\n",
        "      <td>0.000404</td>\n",
        "      <td>0.000289</td>\n",
        "      <td>0.00022</td>\n",
        "      <td>...</td>\n",
        "      <td>0.000164</td>\n",
        "      <td>0.000131</td>\n",
        "      <td>0.001099</td>\n",
        "      <td>0.017721</td>\n",
        "      <td>0.016835</td>\n",
        "      <td>0.000897</td>\n",
        "      <td>0.015449</td>\n",
        "      <td>0.00119</td>\n",
        "      <td>0.000656</td>\n",
        "      <td>0.005725</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>2020-09-01</th>\n",
        "      <td>0.00089</td>\n",
        "      <td>0.01593</td>\n",
        "      <td>0.019092</td>\n",
        "      <td>0.000659</td>\n",
        "      <td>0.000938</td>\n",
        "      <td>0.000099</td>\n",
        "      <td>0.000172</td>\n",
        "      <td>0.000404</td>\n",
        "      <td>0.000289</td>\n",
        "      <td>0.00022</td>\n",
        "      <td>...</td>\n",
        "      <td>0.000164</td>\n",
        "      <td>0.000131</td>\n",
        "      <td>0.001099</td>\n",
        "      <td>0.017721</td>\n",
        "      <td>0.016835</td>\n",
        "      <td>0.000897</td>\n",
        "      <td>0.015449</td>\n",
        "      <td>0.00119</td>\n",
        "      <td>0.000656</td>\n",
        "      <td>0.005725</td>\n",
        "    </tr>\n",
        "  </tbody>\n",
        "</table>\n",
        "<p>5 rows \u00d7 23 columns</p>\n",
        "</div>"
       ],
       "output_type": "pyout",
       "prompt_number": 18,
       "text": [
        "Country     Bahrain  Bangladesh    Brazil  Czech Republic    France   Georgia  \\\n",
        "Date                                                                            \n",
        "2020-08-28  0.00089     0.01593  0.019092        0.000659  0.000938  0.000099   \n",
        "2020-08-29  0.00089     0.01593  0.019092        0.000659  0.000938  0.000099   \n",
        "2020-08-30  0.00089     0.01593  0.019092        0.000659  0.000938  0.000099   \n",
        "2020-08-31  0.00089     0.01593  0.019092        0.000659  0.000938  0.000099   \n",
        "2020-09-01  0.00089     0.01593  0.019092        0.000659  0.000938  0.000099   \n",
        "\n",
        "Country       Guinea      Iran     Italy   Kuwait  ...   Nigeria    Poland  \\\n",
        "Date                                               ...                       \n",
        "2020-08-28  0.000172  0.000404  0.000289  0.00022  ...  0.000164  0.000131   \n",
        "2020-08-29  0.000172  0.000404  0.000289  0.00022  ...  0.000164  0.000131   \n",
        "2020-08-30  0.000172  0.000404  0.000289  0.00022  ...  0.000164  0.000131   \n",
        "2020-08-31  0.000172  0.000404  0.000289  0.00022  ...  0.000164  0.000131   \n",
        "2020-09-01  0.000172  0.000404  0.000289  0.00022  ...  0.000164  0.000131   \n",
        "\n",
        "Country     Portugal   Romania    Russia   Senegal    Turkey  Ukraine  \\\n",
        "Date                                                                    \n",
        "2020-08-28  0.001099  0.017721  0.016835  0.000897  0.015449  0.00119   \n",
        "2020-08-29  0.001099  0.017721  0.016835  0.000897  0.015449  0.00119   \n",
        "2020-08-30  0.001099  0.017721  0.016835  0.000897  0.015449  0.00119   \n",
        "2020-08-31  0.001099  0.017721  0.016835  0.000897  0.015449  0.00119   \n",
        "2020-09-01  0.001099  0.017721  0.016835  0.000897  0.015449  0.00119   \n",
        "\n",
        "Country     United Arab Emirates  United States  \n",
        "Date                                             \n",
        "2020-08-28              0.000656       0.005725  \n",
        "2020-08-29              0.000656       0.005725  \n",
        "2020-08-30              0.000656       0.005725  \n",
        "2020-08-31              0.000656       0.005725  \n",
        "2020-09-01              0.000656       0.005725  \n",
        "\n",
        "[5 rows x 23 columns]"
       ]
      }
     ],
     "prompt_number": 18
    },
    {
     "cell_type": "markdown",
     "metadata": {},
     "source": [
      "## (Experimental): Relationship of OxCGRT index and parameter values\n",
      "Government responses will impact on parameter values of ODE models about 14 days later. Here, we will investigate on the relationship of [stringency index (from OxCGRT)](https://github.com/OxCGRT/covid-policy-tracker/blob/master/documentation/index_methodology.md) and reproduction number/model parameters.\n"
     ]
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "%matplotlib inline\n",
      "from matplotlib import pyplot as plt\n",
      "import seaborn as sns\n",
      "import pandas as pd"
     ],
     "language": "python",
     "metadata": {},
     "outputs": [],
     "prompt_number": 19
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "df = analyser.track()\n",
      "param_cols = [\"Rt\", *cs.SIRF.PARAMETERS]\n",
      "oxcgrt_cols = oxcgrt_data.OXCGRT_VARS[:]\n",
      "cols = param_cols + oxcgrt_cols\n",
      "delay = 14\n",
      "\n",
      "for col in param_cols:\n",
      "    df[col] = pd.to_numeric(df[col], errors=\"coerce\")\n",
      "    df[col] = df.groupby(\"Country\")[col].shift(0 - delay)\n",
      "\n",
      "df = df.dropna(how=\"any\")\n",
      "df = df.loc[:, [\"Date\", \"Country\", *cols]]\n",
      "track_df = df.copy()\n",
      "track_df.info()"
     ],
     "language": "python",
     "metadata": {},
     "outputs": [
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "<class 'pandas.core.frame.DataFrame'>\n",
        "Int64Index: 29378 entries, 0 to 29685\n",
        "Data columns (total 19 columns):\n",
        " #   Column                               Non-Null Count  Dtype         \n",
        "---  ------                               --------------  -----         \n",
        " 0   Date                                 29378 non-null  datetime64[ns]\n",
        " 1   Country                              29378 non-null  object        \n",
        " 2   Rt                                   29378 non-null  float64       \n",
        " 3   theta                                29378 non-null  float64       \n",
        " 4   kappa                                29378 non-null  float64       \n",
        " 5   rho                                  29378 non-null  float64       \n",
        " 6   sigma                                29378 non-null  float64       \n",
        " 7   School_closing                       29378 non-null  int64         \n",
        " 8   Workplace_closing                    29378 non-null  int64         \n",
        " 9   Cancel_events                        29378 non-null  int64         \n",
        " 10  Gatherings_restrictions              29378 non-null  int64         \n",
        " 11  Transport_closing                    29378 non-null  int64         \n",
        " 12  Stay_home_restrictions               29378 non-null  int64         \n",
        " 13  Internal_movement_restrictions       29378 non-null  int64         \n",
        " 14  International_movement_restrictions  29378 non-null  int64         \n",
        " 15  Information_campaigns                29378 non-null  int64         \n",
        " 16  Testing_policy                       29378 non-null  int64         \n",
        " 17  Contact_tracing                      29378 non-null  int64         \n",
        " 18  Stringency_index                     29378 non-null  float64       \n",
        "dtypes: datetime64[ns](1), float64(6), int64(11), object(1)\n",
        "memory usage: 4.5+ MB\n"
       ]
      }
     ],
     "prompt_number": 20
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "# Correlation\n",
      "df = track_df.copy()\n",
      "df.corr().style.background_gradient(axis=None)"
     ],
     "language": "python",
     "metadata": {},
     "outputs": [
      {
       "html": [
        "<style  type=\"text/css\" >\n",
        "#T_63a298c2_ec70_11ea_a161_525400daab6erow0_col0,#T_63a298c2_ec70_11ea_a161_525400daab6erow1_col1,#T_63a298c2_ec70_11ea_a161_525400daab6erow2_col2,#T_63a298c2_ec70_11ea_a161_525400daab6erow3_col3,#T_63a298c2_ec70_11ea_a161_525400daab6erow4_col4,#T_63a298c2_ec70_11ea_a161_525400daab6erow5_col5,#T_63a298c2_ec70_11ea_a161_525400daab6erow6_col6,#T_63a298c2_ec70_11ea_a161_525400daab6erow7_col7,#T_63a298c2_ec70_11ea_a161_525400daab6erow8_col8,#T_63a298c2_ec70_11ea_a161_525400daab6erow9_col9,#T_63a298c2_ec70_11ea_a161_525400daab6erow10_col10,#T_63a298c2_ec70_11ea_a161_525400daab6erow11_col11,#T_63a298c2_ec70_11ea_a161_525400daab6erow12_col12,#T_63a298c2_ec70_11ea_a161_525400daab6erow13_col13,#T_63a298c2_ec70_11ea_a161_525400daab6erow14_col14,#T_63a298c2_ec70_11ea_a161_525400daab6erow15_col15,#T_63a298c2_ec70_11ea_a161_525400daab6erow16_col16{\n",
        "            background-color:  #023858;\n",
        "            color:  #f1f1f1;\n",
        "        }#T_63a298c2_ec70_11ea_a161_525400daab6erow0_col1,#T_63a298c2_ec70_11ea_a161_525400daab6erow0_col16,#T_63a298c2_ec70_11ea_a161_525400daab6erow1_col0,#T_63a298c2_ec70_11ea_a161_525400daab6erow4_col10,#T_63a298c2_ec70_11ea_a161_525400daab6erow10_col4,#T_63a298c2_ec70_11ea_a161_525400daab6erow16_col0{\n",
        "            background-color:  #d1d2e6;\n",
        "            color:  #000000;\n",
        "        }#T_63a298c2_ec70_11ea_a161_525400daab6erow0_col2,#T_63a298c2_ec70_11ea_a161_525400daab6erow2_col0{\n",
        "            background-color:  #bbc7e0;\n",
        "            color:  #000000;\n",
        "        }#T_63a298c2_ec70_11ea_a161_525400daab6erow0_col3,#T_63a298c2_ec70_11ea_a161_525400daab6erow0_col8,#T_63a298c2_ec70_11ea_a161_525400daab6erow3_col0,#T_63a298c2_ec70_11ea_a161_525400daab6erow8_col0{\n",
        "            background-color:  #86b0d3;\n",
        "            color:  #000000;\n",
        "        }#T_63a298c2_ec70_11ea_a161_525400daab6erow0_col4,#T_63a298c2_ec70_11ea_a161_525400daab6erow4_col0{\n",
        "            background-color:  #e2dfee;\n",
        "            color:  #000000;\n",
        "        }#T_63a298c2_ec70_11ea_a161_525400daab6erow0_col5,#T_63a298c2_ec70_11ea_a161_525400daab6erow5_col0{\n",
        "            background-color:  #e9e5f1;\n",
        "            color:  #000000;\n",
        "        }#T_63a298c2_ec70_11ea_a161_525400daab6erow0_col6,#T_63a298c2_ec70_11ea_a161_525400daab6erow1_col15,#T_63a298c2_ec70_11ea_a161_525400daab6erow6_col0,#T_63a298c2_ec70_11ea_a161_525400daab6erow15_col1{\n",
        "            background-color:  #c4cbe3;\n",
        "            color:  #000000;\n",
        "        }#T_63a298c2_ec70_11ea_a161_525400daab6erow0_col7,#T_63a298c2_ec70_11ea_a161_525400daab6erow2_col7,#T_63a298c2_ec70_11ea_a161_525400daab6erow2_col9,#T_63a298c2_ec70_11ea_a161_525400daab6erow7_col0,#T_63a298c2_ec70_11ea_a161_525400daab6erow7_col2,#T_63a298c2_ec70_11ea_a161_525400daab6erow9_col2,#T_63a298c2_ec70_11ea_a161_525400daab6erow10_col13,#T_63a298c2_ec70_11ea_a161_525400daab6erow13_col10{\n",
        "            background-color:  #a5bddb;\n",
        "            color:  #000000;\n",
        "        }#T_63a298c2_ec70_11ea_a161_525400daab6erow0_col9,#T_63a298c2_ec70_11ea_a161_525400daab6erow0_col14,#T_63a298c2_ec70_11ea_a161_525400daab6erow9_col0,#T_63a298c2_ec70_11ea_a161_525400daab6erow14_col0{\n",
        "            background-color:  #ced0e6;\n",
        "            color:  #000000;\n",
        "        }#T_63a298c2_ec70_11ea_a161_525400daab6erow0_col10,#T_63a298c2_ec70_11ea_a161_525400daab6erow5_col13,#T_63a298c2_ec70_11ea_a161_525400daab6erow10_col0,#T_63a298c2_ec70_11ea_a161_525400daab6erow13_col5{\n",
        "            background-color:  #b9c6e0;\n",
        "            color:  #000000;\n",
        "        }#T_63a298c2_ec70_11ea_a161_525400daab6erow0_col11,#T_63a298c2_ec70_11ea_a161_525400daab6erow6_col13,#T_63a298c2_ec70_11ea_a161_525400daab6erow11_col0,#T_63a298c2_ec70_11ea_a161_525400daab6erow13_col6,#T_63a298c2_ec70_11ea_a161_525400daab6erow13_col16,#T_63a298c2_ec70_11ea_a161_525400daab6erow16_col13{\n",
        "            background-color:  #b1c2de;\n",
        "            color:  #000000;\n",
        "        }#T_63a298c2_ec70_11ea_a161_525400daab6erow0_col12,#T_63a298c2_ec70_11ea_a161_525400daab6erow12_col0{\n",
        "            background-color:  #faf2f8;\n",
        "            color:  #000000;\n",
        "        }#T_63a298c2_ec70_11ea_a161_525400daab6erow0_col13,#T_63a298c2_ec70_11ea_a161_525400daab6erow1_col13,#T_63a298c2_ec70_11ea_a161_525400daab6erow3_col9,#T_63a298c2_ec70_11ea_a161_525400daab6erow9_col3,#T_63a298c2_ec70_11ea_a161_525400daab6erow13_col0,#T_63a298c2_ec70_11ea_a161_525400daab6erow13_col1{\n",
        "            background-color:  #acc0dd;\n",
        "            color:  #000000;\n",
        "        }#T_63a298c2_ec70_11ea_a161_525400daab6erow0_col15,#T_63a298c2_ec70_11ea_a161_525400daab6erow4_col7,#T_63a298c2_ec70_11ea_a161_525400daab6erow7_col4,#T_63a298c2_ec70_11ea_a161_525400daab6erow15_col0{\n",
        "            background-color:  #d4d4e8;\n",
        "            color:  #000000;\n",
        "        }#T_63a298c2_ec70_11ea_a161_525400daab6erow1_col2,#T_63a298c2_ec70_11ea_a161_525400daab6erow2_col1{\n",
        "            background-color:  #7bacd1;\n",
        "            color:  #000000;\n",
        "        }#T_63a298c2_ec70_11ea_a161_525400daab6erow1_col3,#T_63a298c2_ec70_11ea_a161_525400daab6erow3_col1,#T_63a298c2_ec70_11ea_a161_525400daab6erow7_col12,#T_63a298c2_ec70_11ea_a161_525400daab6erow8_col13,#T_63a298c2_ec70_11ea_a161_525400daab6erow12_col7,#T_63a298c2_ec70_11ea_a161_525400daab6erow13_col8,#T_63a298c2_ec70_11ea_a161_525400daab6erow13_col15,#T_63a298c2_ec70_11ea_a161_525400daab6erow14_col16,#T_63a298c2_ec70_11ea_a161_525400daab6erow15_col13,#T_63a298c2_ec70_11ea_a161_525400daab6erow16_col14{\n",
        "            background-color:  #a2bcda;\n",
        "            color:  #000000;\n",
        "        }#T_63a298c2_ec70_11ea_a161_525400daab6erow1_col4,#T_63a298c2_ec70_11ea_a161_525400daab6erow4_col1{\n",
        "            background-color:  #8fb4d6;\n",
        "            color:  #000000;\n",
        "        }#T_63a298c2_ec70_11ea_a161_525400daab6erow1_col5,#T_63a298c2_ec70_11ea_a161_525400daab6erow4_col15,#T_63a298c2_ec70_11ea_a161_525400daab6erow5_col1,#T_63a298c2_ec70_11ea_a161_525400daab6erow15_col4{\n",
        "            background-color:  #91b5d6;\n",
        "            color:  #000000;\n",
        "        }#T_63a298c2_ec70_11ea_a161_525400daab6erow1_col6,#T_63a298c2_ec70_11ea_a161_525400daab6erow6_col1{\n",
        "            background-color:  #65a3cb;\n",
        "            color:  #000000;\n",
        "        }#T_63a298c2_ec70_11ea_a161_525400daab6erow1_col7,#T_63a298c2_ec70_11ea_a161_525400daab6erow3_col6,#T_63a298c2_ec70_11ea_a161_525400daab6erow3_col16,#T_63a298c2_ec70_11ea_a161_525400daab6erow6_col3,#T_63a298c2_ec70_11ea_a161_525400daab6erow7_col1,#T_63a298c2_ec70_11ea_a161_525400daab6erow16_col3{\n",
        "            background-color:  #96b6d7;\n",
        "            color:  #000000;\n",
        "        }#T_63a298c2_ec70_11ea_a161_525400daab6erow1_col8,#T_63a298c2_ec70_11ea_a161_525400daab6erow8_col1{\n",
        "            background-color:  #b3c3de;\n",
        "            color:  #000000;\n",
        "        }#T_63a298c2_ec70_11ea_a161_525400daab6erow1_col9,#T_63a298c2_ec70_11ea_a161_525400daab6erow9_col1{\n",
        "            background-color:  #abbfdc;\n",
        "            color:  #000000;\n",
        "        }#T_63a298c2_ec70_11ea_a161_525400daab6erow1_col10,#T_63a298c2_ec70_11ea_a161_525400daab6erow4_col12,#T_63a298c2_ec70_11ea_a161_525400daab6erow10_col1,#T_63a298c2_ec70_11ea_a161_525400daab6erow12_col4{\n",
        "            background-color:  #afc1dd;\n",
        "            color:  #000000;\n",
        "        }#T_63a298c2_ec70_11ea_a161_525400daab6erow1_col11,#T_63a298c2_ec70_11ea_a161_525400daab6erow2_col10,#T_63a298c2_ec70_11ea_a161_525400daab6erow10_col2,#T_63a298c2_ec70_11ea_a161_525400daab6erow11_col1,#T_63a298c2_ec70_11ea_a161_525400daab6erow12_col15,#T_63a298c2_ec70_11ea_a161_525400daab6erow15_col12{\n",
        "            background-color:  #a8bedc;\n",
        "            color:  #000000;\n",
        "        }#T_63a298c2_ec70_11ea_a161_525400daab6erow1_col12,#T_63a298c2_ec70_11ea_a161_525400daab6erow12_col1{\n",
        "            background-color:  #c6cce3;\n",
        "            color:  #000000;\n",
        "        }#T_63a298c2_ec70_11ea_a161_525400daab6erow1_col14,#T_63a298c2_ec70_11ea_a161_525400daab6erow14_col1{\n",
        "            background-color:  #fff7fb;\n",
        "            color:  #000000;\n",
        "        }#T_63a298c2_ec70_11ea_a161_525400daab6erow1_col16,#T_63a298c2_ec70_11ea_a161_525400daab6erow16_col1{\n",
        "            background-color:  #5ea0ca;\n",
        "            color:  #000000;\n",
        "        }#T_63a298c2_ec70_11ea_a161_525400daab6erow2_col3,#T_63a298c2_ec70_11ea_a161_525400daab6erow3_col2{\n",
        "            background-color:  #2a88bc;\n",
        "            color:  #000000;\n",
        "        }#T_63a298c2_ec70_11ea_a161_525400daab6erow2_col4,#T_63a298c2_ec70_11ea_a161_525400daab6erow4_col2,#T_63a298c2_ec70_11ea_a161_525400daab6erow7_col11,#T_63a298c2_ec70_11ea_a161_525400daab6erow11_col7{\n",
        "            background-color:  #4c99c5;\n",
        "            color:  #000000;\n",
        "        }#T_63a298c2_ec70_11ea_a161_525400daab6erow2_col5,#T_63a298c2_ec70_11ea_a161_525400daab6erow5_col2{\n",
        "            background-color:  #6da6cd;\n",
        "            color:  #000000;\n",
        "        }#T_63a298c2_ec70_11ea_a161_525400daab6erow2_col6,#T_63a298c2_ec70_11ea_a161_525400daab6erow6_col2{\n",
        "            background-color:  #60a1ca;\n",
        "            color:  #000000;\n",
        "        }#T_63a298c2_ec70_11ea_a161_525400daab6erow2_col8,#T_63a298c2_ec70_11ea_a161_525400daab6erow2_col13,#T_63a298c2_ec70_11ea_a161_525400daab6erow8_col2,#T_63a298c2_ec70_11ea_a161_525400daab6erow13_col2{\n",
        "            background-color:  #cdd0e5;\n",
        "            color:  #000000;\n",
        "        }#T_63a298c2_ec70_11ea_a161_525400daab6erow2_col11,#T_63a298c2_ec70_11ea_a161_525400daab6erow11_col2{\n",
        "            background-color:  #b5c4df;\n",
        "            color:  #000000;\n",
        "        }#T_63a298c2_ec70_11ea_a161_525400daab6erow2_col12,#T_63a298c2_ec70_11ea_a161_525400daab6erow4_col6,#T_63a298c2_ec70_11ea_a161_525400daab6erow6_col4,#T_63a298c2_ec70_11ea_a161_525400daab6erow12_col2{\n",
        "            background-color:  #c5cce3;\n",
        "            color:  #000000;\n",
        "        }#T_63a298c2_ec70_11ea_a161_525400daab6erow2_col14,#T_63a298c2_ec70_11ea_a161_525400daab6erow14_col2{\n",
        "            background-color:  #f2ecf5;\n",
        "            color:  #000000;\n",
        "        }#T_63a298c2_ec70_11ea_a161_525400daab6erow2_col15,#T_63a298c2_ec70_11ea_a161_525400daab6erow15_col2{\n",
        "            background-color:  #d8d7e9;\n",
        "            color:  #000000;\n",
        "        }#T_63a298c2_ec70_11ea_a161_525400daab6erow2_col16,#T_63a298c2_ec70_11ea_a161_525400daab6erow16_col2{\n",
        "            background-color:  #7dacd1;\n",
        "            color:  #000000;\n",
        "        }#T_63a298c2_ec70_11ea_a161_525400daab6erow3_col4,#T_63a298c2_ec70_11ea_a161_525400daab6erow4_col3,#T_63a298c2_ec70_11ea_a161_525400daab6erow9_col10,#T_63a298c2_ec70_11ea_a161_525400daab6erow10_col9{\n",
        "            background-color:  #056fae;\n",
        "            color:  #f1f1f1;\n",
        "        }#T_63a298c2_ec70_11ea_a161_525400daab6erow3_col5,#T_63a298c2_ec70_11ea_a161_525400daab6erow5_col3{\n",
        "            background-color:  #83afd3;\n",
        "            color:  #000000;\n",
        "        }#T_63a298c2_ec70_11ea_a161_525400daab6erow3_col7,#T_63a298c2_ec70_11ea_a161_525400daab6erow7_col3,#T_63a298c2_ec70_11ea_a161_525400daab6erow7_col15,#T_63a298c2_ec70_11ea_a161_525400daab6erow15_col7{\n",
        "            background-color:  #d3d4e7;\n",
        "            color:  #000000;\n",
        "        }#T_63a298c2_ec70_11ea_a161_525400daab6erow3_col8,#T_63a298c2_ec70_11ea_a161_525400daab6erow8_col3{\n",
        "            background-color:  #d2d3e7;\n",
        "            color:  #000000;\n",
        "        }#T_63a298c2_ec70_11ea_a161_525400daab6erow3_col10,#T_63a298c2_ec70_11ea_a161_525400daab6erow10_col3{\n",
        "            background-color:  #a7bddb;\n",
        "            color:  #000000;\n",
        "        }#T_63a298c2_ec70_11ea_a161_525400daab6erow3_col11,#T_63a298c2_ec70_11ea_a161_525400daab6erow11_col3,#T_63a298c2_ec70_11ea_a161_525400daab6erow11_col13,#T_63a298c2_ec70_11ea_a161_525400daab6erow13_col11{\n",
        "            background-color:  #b8c6e0;\n",
        "            color:  #000000;\n",
        "        }#T_63a298c2_ec70_11ea_a161_525400daab6erow3_col12,#T_63a298c2_ec70_11ea_a161_525400daab6erow12_col3{\n",
        "            background-color:  #b0c2de;\n",
        "            color:  #000000;\n",
        "        }#T_63a298c2_ec70_11ea_a161_525400daab6erow3_col13,#T_63a298c2_ec70_11ea_a161_525400daab6erow13_col3{\n",
        "            background-color:  #cacee5;\n",
        "            color:  #000000;\n",
        "        }#T_63a298c2_ec70_11ea_a161_525400daab6erow3_col14,#T_63a298c2_ec70_11ea_a161_525400daab6erow14_col3{\n",
        "            background-color:  #eee8f3;\n",
        "            color:  #000000;\n",
        "        }#T_63a298c2_ec70_11ea_a161_525400daab6erow3_col15,#T_63a298c2_ec70_11ea_a161_525400daab6erow4_col9,#T_63a298c2_ec70_11ea_a161_525400daab6erow9_col4,#T_63a298c2_ec70_11ea_a161_525400daab6erow15_col3{\n",
        "            background-color:  #d6d6e9;\n",
        "            color:  #000000;\n",
        "        }#T_63a298c2_ec70_11ea_a161_525400daab6erow4_col5,#T_63a298c2_ec70_11ea_a161_525400daab6erow5_col4{\n",
        "            background-color:  #81aed2;\n",
        "            color:  #000000;\n",
        "        }#T_63a298c2_ec70_11ea_a161_525400daab6erow4_col8,#T_63a298c2_ec70_11ea_a161_525400daab6erow8_col4{\n",
        "            background-color:  #fdf5fa;\n",
        "            color:  #000000;\n",
        "        }#T_63a298c2_ec70_11ea_a161_525400daab6erow4_col11,#T_63a298c2_ec70_11ea_a161_525400daab6erow11_col4{\n",
        "            background-color:  #e8e4f0;\n",
        "            color:  #000000;\n",
        "        }#T_63a298c2_ec70_11ea_a161_525400daab6erow4_col13,#T_63a298c2_ec70_11ea_a161_525400daab6erow13_col4{\n",
        "            background-color:  #d2d2e7;\n",
        "            color:  #000000;\n",
        "        }#T_63a298c2_ec70_11ea_a161_525400daab6erow4_col14,#T_63a298c2_ec70_11ea_a161_525400daab6erow14_col4{\n",
        "            background-color:  #f1ebf4;\n",
        "            color:  #000000;\n",
        "        }#T_63a298c2_ec70_11ea_a161_525400daab6erow4_col16,#T_63a298c2_ec70_11ea_a161_525400daab6erow16_col4{\n",
        "            background-color:  #c1cae2;\n",
        "            color:  #000000;\n",
        "        }#T_63a298c2_ec70_11ea_a161_525400daab6erow5_col6,#T_63a298c2_ec70_11ea_a161_525400daab6erow6_col5,#T_63a298c2_ec70_11ea_a161_525400daab6erow8_col10,#T_63a298c2_ec70_11ea_a161_525400daab6erow10_col8{\n",
        "            background-color:  #0d75b3;\n",
        "            color:  #f1f1f1;\n",
        "        }#T_63a298c2_ec70_11ea_a161_525400daab6erow5_col7,#T_63a298c2_ec70_11ea_a161_525400daab6erow7_col5{\n",
        "            background-color:  #549cc7;\n",
        "            color:  #000000;\n",
        "        }#T_63a298c2_ec70_11ea_a161_525400daab6erow5_col8,#T_63a298c2_ec70_11ea_a161_525400daab6erow8_col5{\n",
        "            background-color:  #9ab8d8;\n",
        "            color:  #000000;\n",
        "        }#T_63a298c2_ec70_11ea_a161_525400daab6erow5_col9,#T_63a298c2_ec70_11ea_a161_525400daab6erow9_col5,#T_63a298c2_ec70_11ea_a161_525400daab6erow11_col14,#T_63a298c2_ec70_11ea_a161_525400daab6erow14_col11{\n",
        "            background-color:  #3d93c2;\n",
        "            color:  #000000;\n",
        "        }#T_63a298c2_ec70_11ea_a161_525400daab6erow5_col10,#T_63a298c2_ec70_11ea_a161_525400daab6erow10_col5{\n",
        "            background-color:  #529bc7;\n",
        "            color:  #000000;\n",
        "        }#T_63a298c2_ec70_11ea_a161_525400daab6erow5_col11,#T_63a298c2_ec70_11ea_a161_525400daab6erow8_col12,#T_63a298c2_ec70_11ea_a161_525400daab6erow11_col5,#T_63a298c2_ec70_11ea_a161_525400daab6erow12_col8{\n",
        "            background-color:  #73a9cf;\n",
        "            color:  #000000;\n",
        "        }#T_63a298c2_ec70_11ea_a161_525400daab6erow5_col12,#T_63a298c2_ec70_11ea_a161_525400daab6erow12_col5{\n",
        "            background-color:  #308cbe;\n",
        "            color:  #000000;\n",
        "        }#T_63a298c2_ec70_11ea_a161_525400daab6erow5_col14,#T_63a298c2_ec70_11ea_a161_525400daab6erow14_col5{\n",
        "            background-color:  #94b6d7;\n",
        "            color:  #000000;\n",
        "        }#T_63a298c2_ec70_11ea_a161_525400daab6erow5_col15,#T_63a298c2_ec70_11ea_a161_525400daab6erow15_col5{\n",
        "            background-color:  #f8f1f8;\n",
        "            color:  #000000;\n",
        "        }#T_63a298c2_ec70_11ea_a161_525400daab6erow5_col16,#T_63a298c2_ec70_11ea_a161_525400daab6erow16_col5{\n",
        "            background-color:  #0872b1;\n",
        "            color:  #f1f1f1;\n",
        "        }#T_63a298c2_ec70_11ea_a161_525400daab6erow6_col7,#T_63a298c2_ec70_11ea_a161_525400daab6erow7_col6,#T_63a298c2_ec70_11ea_a161_525400daab6erow10_col12,#T_63a298c2_ec70_11ea_a161_525400daab6erow12_col10{\n",
        "            background-color:  #3790c0;\n",
        "            color:  #000000;\n",
        "        }#T_63a298c2_ec70_11ea_a161_525400daab6erow6_col8,#T_63a298c2_ec70_11ea_a161_525400daab6erow8_col6{\n",
        "            background-color:  #3f93c2;\n",
        "            color:  #000000;\n",
        "        }#T_63a298c2_ec70_11ea_a161_525400daab6erow6_col9,#T_63a298c2_ec70_11ea_a161_525400daab6erow9_col6{\n",
        "            background-color:  #1379b5;\n",
        "            color:  #f1f1f1;\n",
        "        }#T_63a298c2_ec70_11ea_a161_525400daab6erow6_col10,#T_63a298c2_ec70_11ea_a161_525400daab6erow7_col8,#T_63a298c2_ec70_11ea_a161_525400daab6erow8_col7,#T_63a298c2_ec70_11ea_a161_525400daab6erow10_col6{\n",
        "            background-color:  #167bb6;\n",
        "            color:  #000000;\n",
        "        }#T_63a298c2_ec70_11ea_a161_525400daab6erow6_col11,#T_63a298c2_ec70_11ea_a161_525400daab6erow11_col6{\n",
        "            background-color:  #2d8abd;\n",
        "            color:  #000000;\n",
        "        }#T_63a298c2_ec70_11ea_a161_525400daab6erow6_col12,#T_63a298c2_ec70_11ea_a161_525400daab6erow12_col6{\n",
        "            background-color:  #67a4cc;\n",
        "            color:  #000000;\n",
        "        }#T_63a298c2_ec70_11ea_a161_525400daab6erow6_col14,#T_63a298c2_ec70_11ea_a161_525400daab6erow14_col6,#T_63a298c2_ec70_11ea_a161_525400daab6erow14_col15,#T_63a298c2_ec70_11ea_a161_525400daab6erow15_col14{\n",
        "            background-color:  #adc1dd;\n",
        "            color:  #000000;\n",
        "        }#T_63a298c2_ec70_11ea_a161_525400daab6erow6_col15,#T_63a298c2_ec70_11ea_a161_525400daab6erow15_col6{\n",
        "            background-color:  #fbf3f9;\n",
        "            color:  #000000;\n",
        "        }#T_63a298c2_ec70_11ea_a161_525400daab6erow6_col16,#T_63a298c2_ec70_11ea_a161_525400daab6erow16_col6{\n",
        "            background-color:  #045f95;\n",
        "            color:  #f1f1f1;\n",
        "        }#T_63a298c2_ec70_11ea_a161_525400daab6erow7_col9,#T_63a298c2_ec70_11ea_a161_525400daab6erow9_col7{\n",
        "            background-color:  #4a98c5;\n",
        "            color:  #000000;\n",
        "        }#T_63a298c2_ec70_11ea_a161_525400daab6erow7_col10,#T_63a298c2_ec70_11ea_a161_525400daab6erow10_col7{\n",
        "            background-color:  #2685bb;\n",
        "            color:  #000000;\n",
        "        }#T_63a298c2_ec70_11ea_a161_525400daab6erow7_col13,#T_63a298c2_ec70_11ea_a161_525400daab6erow13_col7{\n",
        "            background-color:  #b4c4df;\n",
        "            color:  #000000;\n",
        "        }#T_63a298c2_ec70_11ea_a161_525400daab6erow7_col14,#T_63a298c2_ec70_11ea_a161_525400daab6erow14_col7{\n",
        "            background-color:  #7eadd1;\n",
        "            color:  #000000;\n",
        "        }#T_63a298c2_ec70_11ea_a161_525400daab6erow7_col16,#T_63a298c2_ec70_11ea_a161_525400daab6erow16_col7{\n",
        "            background-color:  #1077b4;\n",
        "            color:  #f1f1f1;\n",
        "        }#T_63a298c2_ec70_11ea_a161_525400daab6erow8_col9,#T_63a298c2_ec70_11ea_a161_525400daab6erow9_col8{\n",
        "            background-color:  #0771b1;\n",
        "            color:  #f1f1f1;\n",
        "        }#T_63a298c2_ec70_11ea_a161_525400daab6erow8_col11,#T_63a298c2_ec70_11ea_a161_525400daab6erow11_col8{\n",
        "            background-color:  #0570b0;\n",
        "            color:  #f1f1f1;\n",
        "        }#T_63a298c2_ec70_11ea_a161_525400daab6erow8_col14,#T_63a298c2_ec70_11ea_a161_525400daab6erow11_col12,#T_63a298c2_ec70_11ea_a161_525400daab6erow12_col11,#T_63a298c2_ec70_11ea_a161_525400daab6erow14_col8{\n",
        "            background-color:  #4496c3;\n",
        "            color:  #000000;\n",
        "        }#T_63a298c2_ec70_11ea_a161_525400daab6erow8_col15,#T_63a298c2_ec70_11ea_a161_525400daab6erow15_col8{\n",
        "            background-color:  #e1dfed;\n",
        "            color:  #000000;\n",
        "        }#T_63a298c2_ec70_11ea_a161_525400daab6erow8_col16,#T_63a298c2_ec70_11ea_a161_525400daab6erow16_col8{\n",
        "            background-color:  #056faf;\n",
        "            color:  #f1f1f1;\n",
        "        }#T_63a298c2_ec70_11ea_a161_525400daab6erow9_col11,#T_63a298c2_ec70_11ea_a161_525400daab6erow11_col9{\n",
        "            background-color:  #04588a;\n",
        "            color:  #f1f1f1;\n",
        "        }#T_63a298c2_ec70_11ea_a161_525400daab6erow9_col12,#T_63a298c2_ec70_11ea_a161_525400daab6erow12_col9{\n",
        "            background-color:  #328dbf;\n",
        "            color:  #000000;\n",
        "        }#T_63a298c2_ec70_11ea_a161_525400daab6erow9_col13,#T_63a298c2_ec70_11ea_a161_525400daab6erow13_col9{\n",
        "            background-color:  #c8cde4;\n",
        "            color:  #000000;\n",
        "        }#T_63a298c2_ec70_11ea_a161_525400daab6erow9_col14,#T_63a298c2_ec70_11ea_a161_525400daab6erow10_col14,#T_63a298c2_ec70_11ea_a161_525400daab6erow12_col14,#T_63a298c2_ec70_11ea_a161_525400daab6erow14_col9,#T_63a298c2_ec70_11ea_a161_525400daab6erow14_col10,#T_63a298c2_ec70_11ea_a161_525400daab6erow14_col12{\n",
        "            background-color:  #509ac6;\n",
        "            color:  #000000;\n",
        "        }#T_63a298c2_ec70_11ea_a161_525400daab6erow9_col15,#T_63a298c2_ec70_11ea_a161_525400daab6erow15_col9{\n",
        "            background-color:  #ebe6f2;\n",
        "            color:  #000000;\n",
        "        }#T_63a298c2_ec70_11ea_a161_525400daab6erow9_col16,#T_63a298c2_ec70_11ea_a161_525400daab6erow16_col9{\n",
        "            background-color:  #045d92;\n",
        "            color:  #f1f1f1;\n",
        "        }#T_63a298c2_ec70_11ea_a161_525400daab6erow10_col11,#T_63a298c2_ec70_11ea_a161_525400daab6erow11_col10{\n",
        "            background-color:  #056caa;\n",
        "            color:  #f1f1f1;\n",
        "        }#T_63a298c2_ec70_11ea_a161_525400daab6erow10_col15,#T_63a298c2_ec70_11ea_a161_525400daab6erow15_col10{\n",
        "            background-color:  #c0c9e2;\n",
        "            color:  #000000;\n",
        "        }#T_63a298c2_ec70_11ea_a161_525400daab6erow10_col16,#T_63a298c2_ec70_11ea_a161_525400daab6erow16_col10{\n",
        "            background-color:  #046096;\n",
        "            color:  #f1f1f1;\n",
        "        }#T_63a298c2_ec70_11ea_a161_525400daab6erow11_col15,#T_63a298c2_ec70_11ea_a161_525400daab6erow15_col11{\n",
        "            background-color:  #ece7f2;\n",
        "            color:  #000000;\n",
        "        }#T_63a298c2_ec70_11ea_a161_525400daab6erow11_col16,#T_63a298c2_ec70_11ea_a161_525400daab6erow16_col11{\n",
        "            background-color:  #0569a4;\n",
        "            color:  #f1f1f1;\n",
        "        }#T_63a298c2_ec70_11ea_a161_525400daab6erow12_col13,#T_63a298c2_ec70_11ea_a161_525400daab6erow13_col12{\n",
        "            background-color:  #a4bcda;\n",
        "            color:  #000000;\n",
        "        }#T_63a298c2_ec70_11ea_a161_525400daab6erow12_col16,#T_63a298c2_ec70_11ea_a161_525400daab6erow16_col12{\n",
        "            background-color:  #1b7eb7;\n",
        "            color:  #000000;\n",
        "        }#T_63a298c2_ec70_11ea_a161_525400daab6erow13_col14,#T_63a298c2_ec70_11ea_a161_525400daab6erow14_col13{\n",
        "            background-color:  #8eb3d5;\n",
        "            color:  #000000;\n",
        "        }#T_63a298c2_ec70_11ea_a161_525400daab6erow15_col16,#T_63a298c2_ec70_11ea_a161_525400daab6erow16_col15{\n",
        "            background-color:  #e4e1ef;\n",
        "            color:  #000000;\n",
        "        }</style><table id=\"T_63a298c2_ec70_11ea_a161_525400daab6e\" ><thead>    <tr>        <th class=\"blank level0\" ></th>        <th class=\"col_heading level0 col0\" >Rt</th>        <th class=\"col_heading level0 col1\" >theta</th>        <th class=\"col_heading level0 col2\" >kappa</th>        <th class=\"col_heading level0 col3\" >rho</th>        <th class=\"col_heading level0 col4\" >sigma</th>        <th class=\"col_heading level0 col5\" >School_closing</th>        <th class=\"col_heading level0 col6\" >Workplace_closing</th>        <th class=\"col_heading level0 col7\" >Cancel_events</th>        <th class=\"col_heading level0 col8\" >Gatherings_restrictions</th>        <th class=\"col_heading level0 col9\" >Transport_closing</th>        <th class=\"col_heading level0 col10\" >Stay_home_restrictions</th>        <th class=\"col_heading level0 col11\" >Internal_movement_restrictions</th>        <th class=\"col_heading level0 col12\" >International_movement_restrictions</th>        <th class=\"col_heading level0 col13\" >Information_campaigns</th>        <th class=\"col_heading level0 col14\" >Testing_policy</th>        <th class=\"col_heading level0 col15\" >Contact_tracing</th>        <th class=\"col_heading level0 col16\" >Stringency_index</th>    </tr></thead><tbody>\n",
        "                <tr>\n",
        "                        <th id=\"T_63a298c2_ec70_11ea_a161_525400daab6elevel0_row0\" class=\"row_heading level0 row0\" >Rt</th>\n",
        "                        <td id=\"T_63a298c2_ec70_11ea_a161_525400daab6erow0_col0\" class=\"data row0 col0\" >1.000000</td>\n",
        "                        <td id=\"T_63a298c2_ec70_11ea_a161_525400daab6erow0_col1\" class=\"data row0 col1\" >-0.146275</td>\n",
        "                        <td id=\"T_63a298c2_ec70_11ea_a161_525400daab6erow0_col2\" class=\"data row0 col2\" >-0.043382</td>\n",
        "                        <td id=\"T_63a298c2_ec70_11ea_a161_525400daab6erow0_col3\" class=\"data row0 col3\" >0.168864</td>\n",
        "                        <td id=\"T_63a298c2_ec70_11ea_a161_525400daab6erow0_col4\" class=\"data row0 col4\" >-0.263545</td>\n",
        "                        <td id=\"T_63a298c2_ec70_11ea_a161_525400daab6erow0_col5\" class=\"data row0 col5\" >-0.313683</td>\n",
        "                        <td id=\"T_63a298c2_ec70_11ea_a161_525400daab6erow0_col6\" class=\"data row0 col6\" >-0.083184</td>\n",
        "                        <td id=\"T_63a298c2_ec70_11ea_a161_525400daab6erow0_col7\" class=\"data row0 col7\" >0.050205</td>\n",
        "                        <td id=\"T_63a298c2_ec70_11ea_a161_525400daab6erow0_col8\" class=\"data row0 col8\" >0.167886</td>\n",
        "                        <td id=\"T_63a298c2_ec70_11ea_a161_525400daab6erow0_col9\" class=\"data row0 col9\" >-0.130683</td>\n",
        "                        <td id=\"T_63a298c2_ec70_11ea_a161_525400daab6erow0_col10\" class=\"data row0 col10\" >-0.039211</td>\n",
        "                        <td id=\"T_63a298c2_ec70_11ea_a161_525400daab6erow0_col11\" class=\"data row0 col11\" >-0.004223</td>\n",
        "                        <td id=\"T_63a298c2_ec70_11ea_a161_525400daab6erow0_col12\" class=\"data row0 col12\" >-0.466091</td>\n",
        "                        <td id=\"T_63a298c2_ec70_11ea_a161_525400daab6erow0_col13\" class=\"data row0 col13\" >0.019502</td>\n",
        "                        <td id=\"T_63a298c2_ec70_11ea_a161_525400daab6erow0_col14\" class=\"data row0 col14\" >-0.135125</td>\n",
        "                        <td id=\"T_63a298c2_ec70_11ea_a161_525400daab6erow0_col15\" class=\"data row0 col15\" >-0.165938</td>\n",
        "                        <td id=\"T_63a298c2_ec70_11ea_a161_525400daab6erow0_col16\" class=\"data row0 col16\" >-0.142078</td>\n",
        "            </tr>\n",
        "            <tr>\n",
        "                        <th id=\"T_63a298c2_ec70_11ea_a161_525400daab6elevel0_row1\" class=\"row_heading level0 row1\" >theta</th>\n",
        "                        <td id=\"T_63a298c2_ec70_11ea_a161_525400daab6erow1_col0\" class=\"data row1 col0\" >-0.146275</td>\n",
        "                        <td id=\"T_63a298c2_ec70_11ea_a161_525400daab6erow1_col1\" class=\"data row1 col1\" >1.000000</td>\n",
        "                        <td id=\"T_63a298c2_ec70_11ea_a161_525400daab6erow1_col2\" class=\"data row1 col2\" >0.209993</td>\n",
        "                        <td id=\"T_63a298c2_ec70_11ea_a161_525400daab6erow1_col3\" class=\"data row1 col3\" >0.061648</td>\n",
        "                        <td id=\"T_63a298c2_ec70_11ea_a161_525400daab6erow1_col4\" class=\"data row1 col4\" >0.134518</td>\n",
        "                        <td id=\"T_63a298c2_ec70_11ea_a161_525400daab6erow1_col5\" class=\"data row1 col5\" >0.131218</td>\n",
        "                        <td id=\"T_63a298c2_ec70_11ea_a161_525400daab6erow1_col6\" class=\"data row1 col6\" >0.286004</td>\n",
        "                        <td id=\"T_63a298c2_ec70_11ea_a161_525400daab6erow1_col7\" class=\"data row1 col7\" >0.113160</td>\n",
        "                        <td id=\"T_63a298c2_ec70_11ea_a161_525400daab6erow1_col8\" class=\"data row1 col8\" >-0.010018</td>\n",
        "                        <td id=\"T_63a298c2_ec70_11ea_a161_525400daab6erow1_col9\" class=\"data row1 col9\" >0.029849</td>\n",
        "                        <td id=\"T_63a298c2_ec70_11ea_a161_525400daab6erow1_col10\" class=\"data row1 col10\" >0.011270</td>\n",
        "                        <td id=\"T_63a298c2_ec70_11ea_a161_525400daab6erow1_col11\" class=\"data row1 col11\" >0.042395</td>\n",
        "                        <td id=\"T_63a298c2_ec70_11ea_a161_525400daab6erow1_col12\" class=\"data row1 col12\" >-0.099671</td>\n",
        "                        <td id=\"T_63a298c2_ec70_11ea_a161_525400daab6erow1_col13\" class=\"data row1 col13\" >0.019139</td>\n",
        "                        <td id=\"T_63a298c2_ec70_11ea_a161_525400daab6erow1_col14\" class=\"data row1 col14\" >-0.522553</td>\n",
        "                        <td id=\"T_63a298c2_ec70_11ea_a161_525400daab6erow1_col15\" class=\"data row1 col15\" >-0.083191</td>\n",
        "                        <td id=\"T_63a298c2_ec70_11ea_a161_525400daab6erow1_col16\" class=\"data row1 col16\" >0.307318</td>\n",
        "            </tr>\n",
        "            <tr>\n",
        "                        <th id=\"T_63a298c2_ec70_11ea_a161_525400daab6elevel0_row2\" class=\"row_heading level0 row2\" >kappa</th>\n",
        "                        <td id=\"T_63a298c2_ec70_11ea_a161_525400daab6erow2_col0\" class=\"data row2 col0\" >-0.043382</td>\n",
        "                        <td id=\"T_63a298c2_ec70_11ea_a161_525400daab6erow2_col1\" class=\"data row2 col1\" >0.209993</td>\n",
        "                        <td id=\"T_63a298c2_ec70_11ea_a161_525400daab6erow2_col2\" class=\"data row2 col2\" >1.000000</td>\n",
        "                        <td id=\"T_63a298c2_ec70_11ea_a161_525400daab6erow2_col3\" class=\"data row2 col3\" >0.476128</td>\n",
        "                        <td id=\"T_63a298c2_ec70_11ea_a161_525400daab6erow2_col4\" class=\"data row2 col4\" >0.358859</td>\n",
        "                        <td id=\"T_63a298c2_ec70_11ea_a161_525400daab6erow2_col5\" class=\"data row2 col5\" >0.256853</td>\n",
        "                        <td id=\"T_63a298c2_ec70_11ea_a161_525400daab6erow2_col6\" class=\"data row2 col6\" >0.303031</td>\n",
        "                        <td id=\"T_63a298c2_ec70_11ea_a161_525400daab6erow2_col7\" class=\"data row2 col7\" >0.053044</td>\n",
        "                        <td id=\"T_63a298c2_ec70_11ea_a161_525400daab6erow2_col8\" class=\"data row2 col8\" >-0.127567</td>\n",
        "                        <td id=\"T_63a298c2_ec70_11ea_a161_525400daab6erow2_col9\" class=\"data row2 col9\" >0.049082</td>\n",
        "                        <td id=\"T_63a298c2_ec70_11ea_a161_525400daab6erow2_col10\" class=\"data row2 col10\" >0.036562</td>\n",
        "                        <td id=\"T_63a298c2_ec70_11ea_a161_525400daab6erow2_col11\" class=\"data row2 col11\" >-0.021196</td>\n",
        "                        <td id=\"T_63a298c2_ec70_11ea_a161_525400daab6erow2_col12\" class=\"data row2 col12\" >-0.092083</td>\n",
        "                        <td id=\"T_63a298c2_ec70_11ea_a161_525400daab6erow2_col13\" class=\"data row2 col13\" >-0.129193</td>\n",
        "                        <td id=\"T_63a298c2_ec70_11ea_a161_525400daab6erow2_col14\" class=\"data row2 col14\" >-0.390986</td>\n",
        "                        <td id=\"T_63a298c2_ec70_11ea_a161_525400daab6erow2_col15\" class=\"data row2 col15\" >-0.191566</td>\n",
        "                        <td id=\"T_63a298c2_ec70_11ea_a161_525400daab6erow2_col16\" class=\"data row2 col16\" >0.203821</td>\n",
        "            </tr>\n",
        "            <tr>\n",
        "                        <th id=\"T_63a298c2_ec70_11ea_a161_525400daab6elevel0_row3\" class=\"row_heading level0 row3\" >rho</th>\n",
        "                        <td id=\"T_63a298c2_ec70_11ea_a161_525400daab6erow3_col0\" class=\"data row3 col0\" >0.168864</td>\n",
        "                        <td id=\"T_63a298c2_ec70_11ea_a161_525400daab6erow3_col1\" class=\"data row3 col1\" >0.061648</td>\n",
        "                        <td id=\"T_63a298c2_ec70_11ea_a161_525400daab6erow3_col2\" class=\"data row3 col2\" >0.476128</td>\n",
        "                        <td id=\"T_63a298c2_ec70_11ea_a161_525400daab6erow3_col3\" class=\"data row3 col3\" >1.000000</td>\n",
        "                        <td id=\"T_63a298c2_ec70_11ea_a161_525400daab6erow3_col4\" class=\"data row3 col4\" >0.625596</td>\n",
        "                        <td id=\"T_63a298c2_ec70_11ea_a161_525400daab6erow3_col5\" class=\"data row3 col5\" >0.181511</td>\n",
        "                        <td id=\"T_63a298c2_ec70_11ea_a161_525400daab6erow3_col6\" class=\"data row3 col6\" >0.113236</td>\n",
        "                        <td id=\"T_63a298c2_ec70_11ea_a161_525400daab6erow3_col7\" class=\"data row3 col7\" >-0.163209</td>\n",
        "                        <td id=\"T_63a298c2_ec70_11ea_a161_525400daab6erow3_col8\" class=\"data row3 col8\" >-0.154605</td>\n",
        "                        <td id=\"T_63a298c2_ec70_11ea_a161_525400daab6erow3_col9\" class=\"data row3 col9\" >0.019542</td>\n",
        "                        <td id=\"T_63a298c2_ec70_11ea_a161_525400daab6erow3_col10\" class=\"data row3 col10\" >0.042639</td>\n",
        "                        <td id=\"T_63a298c2_ec70_11ea_a161_525400daab6erow3_col11\" class=\"data row3 col11\" >-0.029615</td>\n",
        "                        <td id=\"T_63a298c2_ec70_11ea_a161_525400daab6erow3_col12\" class=\"data row3 col12\" >0.003579</td>\n",
        "                        <td id=\"T_63a298c2_ec70_11ea_a161_525400daab6erow3_col13\" class=\"data row3 col13\" >-0.117747</td>\n",
        "                        <td id=\"T_63a298c2_ec70_11ea_a161_525400daab6erow3_col14\" class=\"data row3 col14\" >-0.345493</td>\n",
        "                        <td id=\"T_63a298c2_ec70_11ea_a161_525400daab6erow3_col15\" class=\"data row3 col15\" >-0.178661</td>\n",
        "                        <td id=\"T_63a298c2_ec70_11ea_a161_525400daab6erow3_col16\" class=\"data row3 col16\" >0.109712</td>\n",
        "            </tr>\n",
        "            <tr>\n",
        "                        <th id=\"T_63a298c2_ec70_11ea_a161_525400daab6elevel0_row4\" class=\"row_heading level0 row4\" >sigma</th>\n",
        "                        <td id=\"T_63a298c2_ec70_11ea_a161_525400daab6erow4_col0\" class=\"data row4 col0\" >-0.263545</td>\n",
        "                        <td id=\"T_63a298c2_ec70_11ea_a161_525400daab6erow4_col1\" class=\"data row4 col1\" >0.134518</td>\n",
        "                        <td id=\"T_63a298c2_ec70_11ea_a161_525400daab6erow4_col2\" class=\"data row4 col2\" >0.358859</td>\n",
        "                        <td id=\"T_63a298c2_ec70_11ea_a161_525400daab6erow4_col3\" class=\"data row4 col3\" >0.625596</td>\n",
        "                        <td id=\"T_63a298c2_ec70_11ea_a161_525400daab6erow4_col4\" class=\"data row4 col4\" >1.000000</td>\n",
        "                        <td id=\"T_63a298c2_ec70_11ea_a161_525400daab6erow4_col5\" class=\"data row4 col5\" >0.188063</td>\n",
        "                        <td id=\"T_63a298c2_ec70_11ea_a161_525400daab6erow4_col6\" class=\"data row4 col6\" >-0.091426</td>\n",
        "                        <td id=\"T_63a298c2_ec70_11ea_a161_525400daab6erow4_col7\" class=\"data row4 col7\" >-0.168430</td>\n",
        "                        <td id=\"T_63a298c2_ec70_11ea_a161_525400daab6erow4_col8\" class=\"data row4 col8\" >-0.493011</td>\n",
        "                        <td id=\"T_63a298c2_ec70_11ea_a161_525400daab6erow4_col9\" class=\"data row4 col9\" >-0.180559</td>\n",
        "                        <td id=\"T_63a298c2_ec70_11ea_a161_525400daab6erow4_col10\" class=\"data row4 col10\" >-0.144189</td>\n",
        "                        <td id=\"T_63a298c2_ec70_11ea_a161_525400daab6erow4_col11\" class=\"data row4 col11\" >-0.304887</td>\n",
        "                        <td id=\"T_63a298c2_ec70_11ea_a161_525400daab6erow4_col12\" class=\"data row4 col12\" >0.008156</td>\n",
        "                        <td id=\"T_63a298c2_ec70_11ea_a161_525400daab6erow4_col13\" class=\"data row4 col13\" >-0.150827</td>\n",
        "                        <td id=\"T_63a298c2_ec70_11ea_a161_525400daab6erow4_col14\" class=\"data row4 col14\" >-0.375804</td>\n",
        "                        <td id=\"T_63a298c2_ec70_11ea_a161_525400daab6erow4_col15\" class=\"data row4 col15\" >0.126915</td>\n",
        "                        <td id=\"T_63a298c2_ec70_11ea_a161_525400daab6erow4_col16\" class=\"data row4 col16\" >-0.073629</td>\n",
        "            </tr>\n",
        "            <tr>\n",
        "                        <th id=\"T_63a298c2_ec70_11ea_a161_525400daab6elevel0_row5\" class=\"row_heading level0 row5\" >School_closing</th>\n",
        "                        <td id=\"T_63a298c2_ec70_11ea_a161_525400daab6erow5_col0\" class=\"data row5 col0\" >-0.313683</td>\n",
        "                        <td id=\"T_63a298c2_ec70_11ea_a161_525400daab6erow5_col1\" class=\"data row5 col1\" >0.131218</td>\n",
        "                        <td id=\"T_63a298c2_ec70_11ea_a161_525400daab6erow5_col2\" class=\"data row5 col2\" >0.256853</td>\n",
        "                        <td id=\"T_63a298c2_ec70_11ea_a161_525400daab6erow5_col3\" class=\"data row5 col3\" >0.181511</td>\n",
        "                        <td id=\"T_63a298c2_ec70_11ea_a161_525400daab6erow5_col4\" class=\"data row5 col4\" >0.188063</td>\n",
        "                        <td id=\"T_63a298c2_ec70_11ea_a161_525400daab6erow5_col5\" class=\"data row5 col5\" >1.000000</td>\n",
        "                        <td id=\"T_63a298c2_ec70_11ea_a161_525400daab6erow5_col6\" class=\"data row5 col6\" >0.587931</td>\n",
        "                        <td id=\"T_63a298c2_ec70_11ea_a161_525400daab6erow5_col7\" class=\"data row5 col7\" >0.333966</td>\n",
        "                        <td id=\"T_63a298c2_ec70_11ea_a161_525400daab6erow5_col8\" class=\"data row5 col8\" >0.093565</td>\n",
        "                        <td id=\"T_63a298c2_ec70_11ea_a161_525400daab6erow5_col9\" class=\"data row5 col9\" >0.407468</td>\n",
        "                        <td id=\"T_63a298c2_ec70_11ea_a161_525400daab6erow5_col10\" class=\"data row5 col10\" >0.344905</td>\n",
        "                        <td id=\"T_63a298c2_ec70_11ea_a161_525400daab6erow5_col11\" class=\"data row5 col11\" >0.240616</td>\n",
        "                        <td id=\"T_63a298c2_ec70_11ea_a161_525400daab6erow5_col12\" class=\"data row5 col12\" >0.450952</td>\n",
        "                        <td id=\"T_63a298c2_ec70_11ea_a161_525400daab6erow5_col13\" class=\"data row5 col13\" >-0.039603</td>\n",
        "                        <td id=\"T_63a298c2_ec70_11ea_a161_525400daab6erow5_col14\" class=\"data row5 col14\" >0.114168</td>\n",
        "                        <td id=\"T_63a298c2_ec70_11ea_a161_525400daab6erow5_col15\" class=\"data row5 col15\" >-0.445617</td>\n",
        "                        <td id=\"T_63a298c2_ec70_11ea_a161_525400daab6erow5_col16\" class=\"data row5 col16\" >0.603185</td>\n",
        "            </tr>\n",
        "            <tr>\n",
        "                        <th id=\"T_63a298c2_ec70_11ea_a161_525400daab6elevel0_row6\" class=\"row_heading level0 row6\" >Workplace_closing</th>\n",
        "                        <td id=\"T_63a298c2_ec70_11ea_a161_525400daab6erow6_col0\" class=\"data row6 col0\" >-0.083184</td>\n",
        "                        <td id=\"T_63a298c2_ec70_11ea_a161_525400daab6erow6_col1\" class=\"data row6 col1\" >0.286004</td>\n",
        "                        <td id=\"T_63a298c2_ec70_11ea_a161_525400daab6erow6_col2\" class=\"data row6 col2\" >0.303031</td>\n",
        "                        <td id=\"T_63a298c2_ec70_11ea_a161_525400daab6erow6_col3\" class=\"data row6 col3\" >0.113236</td>\n",
        "                        <td id=\"T_63a298c2_ec70_11ea_a161_525400daab6erow6_col4\" class=\"data row6 col4\" >-0.091426</td>\n",
        "                        <td id=\"T_63a298c2_ec70_11ea_a161_525400daab6erow6_col5\" class=\"data row6 col5\" >0.587931</td>\n",
        "                        <td id=\"T_63a298c2_ec70_11ea_a161_525400daab6erow6_col6\" class=\"data row6 col6\" >1.000000</td>\n",
        "                        <td id=\"T_63a298c2_ec70_11ea_a161_525400daab6erow6_col7\" class=\"data row6 col7\" >0.427158</td>\n",
        "                        <td id=\"T_63a298c2_ec70_11ea_a161_525400daab6erow6_col8\" class=\"data row6 col8\" >0.400422</td>\n",
        "                        <td id=\"T_63a298c2_ec70_11ea_a161_525400daab6erow6_col9\" class=\"data row6 col9\" >0.562754</td>\n",
        "                        <td id=\"T_63a298c2_ec70_11ea_a161_525400daab6erow6_col10\" class=\"data row6 col10\" >0.552633</td>\n",
        "                        <td id=\"T_63a298c2_ec70_11ea_a161_525400daab6erow6_col11\" class=\"data row6 col11\" >0.462871</td>\n",
        "                        <td id=\"T_63a298c2_ec70_11ea_a161_525400daab6erow6_col12\" class=\"data row6 col12\" >0.275900</td>\n",
        "                        <td id=\"T_63a298c2_ec70_11ea_a161_525400daab6erow6_col13\" class=\"data row6 col13\" >-0.003066</td>\n",
        "                        <td id=\"T_63a298c2_ec70_11ea_a161_525400daab6erow6_col14\" class=\"data row6 col14\" >0.013434</td>\n",
        "                        <td id=\"T_63a298c2_ec70_11ea_a161_525400daab6erow6_col15\" class=\"data row6 col15\" >-0.475904</td>\n",
        "                        <td id=\"T_63a298c2_ec70_11ea_a161_525400daab6erow6_col16\" class=\"data row6 col16\" >0.767685</td>\n",
        "            </tr>\n",
        "            <tr>\n",
        "                        <th id=\"T_63a298c2_ec70_11ea_a161_525400daab6elevel0_row7\" class=\"row_heading level0 row7\" >Cancel_events</th>\n",
        "                        <td id=\"T_63a298c2_ec70_11ea_a161_525400daab6erow7_col0\" class=\"data row7 col0\" >0.050205</td>\n",
        "                        <td id=\"T_63a298c2_ec70_11ea_a161_525400daab6erow7_col1\" class=\"data row7 col1\" >0.113160</td>\n",
        "                        <td id=\"T_63a298c2_ec70_11ea_a161_525400daab6erow7_col2\" class=\"data row7 col2\" >0.053044</td>\n",
        "                        <td id=\"T_63a298c2_ec70_11ea_a161_525400daab6erow7_col3\" class=\"data row7 col3\" >-0.163209</td>\n",
        "                        <td id=\"T_63a298c2_ec70_11ea_a161_525400daab6erow7_col4\" class=\"data row7 col4\" >-0.168430</td>\n",
        "                        <td id=\"T_63a298c2_ec70_11ea_a161_525400daab6erow7_col5\" class=\"data row7 col5\" >0.333966</td>\n",
        "                        <td id=\"T_63a298c2_ec70_11ea_a161_525400daab6erow7_col6\" class=\"data row7 col6\" >0.427158</td>\n",
        "                        <td id=\"T_63a298c2_ec70_11ea_a161_525400daab6erow7_col7\" class=\"data row7 col7\" >1.000000</td>\n",
        "                        <td id=\"T_63a298c2_ec70_11ea_a161_525400daab6erow7_col8\" class=\"data row7 col8\" >0.550238</td>\n",
        "                        <td id=\"T_63a298c2_ec70_11ea_a161_525400daab6erow7_col9\" class=\"data row7 col9\" >0.366955</td>\n",
        "                        <td id=\"T_63a298c2_ec70_11ea_a161_525400daab6erow7_col10\" class=\"data row7 col10\" >0.491891</td>\n",
        "                        <td id=\"T_63a298c2_ec70_11ea_a161_525400daab6erow7_col11\" class=\"data row7 col11\" >0.358332</td>\n",
        "                        <td id=\"T_63a298c2_ec70_11ea_a161_525400daab6erow7_col12\" class=\"data row7 col12\" >0.060734</td>\n",
        "                        <td id=\"T_63a298c2_ec70_11ea_a161_525400daab6erow7_col13\" class=\"data row7 col13\" >-0.015888</td>\n",
        "                        <td id=\"T_63a298c2_ec70_11ea_a161_525400daab6erow7_col14\" class=\"data row7 col14\" >0.199629</td>\n",
        "                        <td id=\"T_63a298c2_ec70_11ea_a161_525400daab6erow7_col15\" class=\"data row7 col15\" >-0.164806</td>\n",
        "                        <td id=\"T_63a298c2_ec70_11ea_a161_525400daab6erow7_col16\" class=\"data row7 col16\" >0.573914</td>\n",
        "            </tr>\n",
        "            <tr>\n",
        "                        <th id=\"T_63a298c2_ec70_11ea_a161_525400daab6elevel0_row8\" class=\"row_heading level0 row8\" >Gatherings_restrictions</th>\n",
        "                        <td id=\"T_63a298c2_ec70_11ea_a161_525400daab6erow8_col0\" class=\"data row8 col0\" >0.167886</td>\n",
        "                        <td id=\"T_63a298c2_ec70_11ea_a161_525400daab6erow8_col1\" class=\"data row8 col1\" >-0.010018</td>\n",
        "                        <td id=\"T_63a298c2_ec70_11ea_a161_525400daab6erow8_col2\" class=\"data row8 col2\" >-0.127567</td>\n",
        "                        <td id=\"T_63a298c2_ec70_11ea_a161_525400daab6erow8_col3\" class=\"data row8 col3\" >-0.154605</td>\n",
        "                        <td id=\"T_63a298c2_ec70_11ea_a161_525400daab6erow8_col4\" class=\"data row8 col4\" >-0.493011</td>\n",
        "                        <td id=\"T_63a298c2_ec70_11ea_a161_525400daab6erow8_col5\" class=\"data row8 col5\" >0.093565</td>\n",
        "                        <td id=\"T_63a298c2_ec70_11ea_a161_525400daab6erow8_col6\" class=\"data row8 col6\" >0.400422</td>\n",
        "                        <td id=\"T_63a298c2_ec70_11ea_a161_525400daab6erow8_col7\" class=\"data row8 col7\" >0.550238</td>\n",
        "                        <td id=\"T_63a298c2_ec70_11ea_a161_525400daab6erow8_col8\" class=\"data row8 col8\" >1.000000</td>\n",
        "                        <td id=\"T_63a298c2_ec70_11ea_a161_525400daab6erow8_col9\" class=\"data row8 col9\" >0.612805</td>\n",
        "                        <td id=\"T_63a298c2_ec70_11ea_a161_525400daab6erow8_col10\" class=\"data row8 col10\" >0.588724</td>\n",
        "                        <td id=\"T_63a298c2_ec70_11ea_a161_525400daab6erow8_col11\" class=\"data row8 col11\" >0.617111</td>\n",
        "                        <td id=\"T_63a298c2_ec70_11ea_a161_525400daab6erow8_col12\" class=\"data row8 col12\" >0.240287</td>\n",
        "                        <td id=\"T_63a298c2_ec70_11ea_a161_525400daab6erow8_col13\" class=\"data row8 col13\" >0.065200</td>\n",
        "                        <td id=\"T_63a298c2_ec70_11ea_a161_525400daab6erow8_col14\" class=\"data row8 col14\" >0.387143</td>\n",
        "                        <td id=\"T_63a298c2_ec70_11ea_a161_525400daab6erow8_col15\" class=\"data row8 col15\" >-0.260132</td>\n",
        "                        <td id=\"T_63a298c2_ec70_11ea_a161_525400daab6erow8_col16\" class=\"data row8 col16\" >0.619622</td>\n",
        "            </tr>\n",
        "            <tr>\n",
        "                        <th id=\"T_63a298c2_ec70_11ea_a161_525400daab6elevel0_row9\" class=\"row_heading level0 row9\" >Transport_closing</th>\n",
        "                        <td id=\"T_63a298c2_ec70_11ea_a161_525400daab6erow9_col0\" class=\"data row9 col0\" >-0.130683</td>\n",
        "                        <td id=\"T_63a298c2_ec70_11ea_a161_525400daab6erow9_col1\" class=\"data row9 col1\" >0.029849</td>\n",
        "                        <td id=\"T_63a298c2_ec70_11ea_a161_525400daab6erow9_col2\" class=\"data row9 col2\" >0.049082</td>\n",
        "                        <td id=\"T_63a298c2_ec70_11ea_a161_525400daab6erow9_col3\" class=\"data row9 col3\" >0.019542</td>\n",
        "                        <td id=\"T_63a298c2_ec70_11ea_a161_525400daab6erow9_col4\" class=\"data row9 col4\" >-0.180559</td>\n",
        "                        <td id=\"T_63a298c2_ec70_11ea_a161_525400daab6erow9_col5\" class=\"data row9 col5\" >0.407468</td>\n",
        "                        <td id=\"T_63a298c2_ec70_11ea_a161_525400daab6erow9_col6\" class=\"data row9 col6\" >0.562754</td>\n",
        "                        <td id=\"T_63a298c2_ec70_11ea_a161_525400daab6erow9_col7\" class=\"data row9 col7\" >0.366955</td>\n",
        "                        <td id=\"T_63a298c2_ec70_11ea_a161_525400daab6erow9_col8\" class=\"data row9 col8\" >0.612805</td>\n",
        "                        <td id=\"T_63a298c2_ec70_11ea_a161_525400daab6erow9_col9\" class=\"data row9 col9\" >1.000000</td>\n",
        "                        <td id=\"T_63a298c2_ec70_11ea_a161_525400daab6erow9_col10\" class=\"data row9 col10\" >0.629653</td>\n",
        "                        <td id=\"T_63a298c2_ec70_11ea_a161_525400daab6erow9_col11\" class=\"data row9 col11\" >0.815924</td>\n",
        "                        <td id=\"T_63a298c2_ec70_11ea_a161_525400daab6erow9_col12\" class=\"data row9 col12\" >0.443328</td>\n",
        "                        <td id=\"T_63a298c2_ec70_11ea_a161_525400daab6erow9_col13\" class=\"data row9 col13\" >-0.103259</td>\n",
        "                        <td id=\"T_63a298c2_ec70_11ea_a161_525400daab6erow9_col14\" class=\"data row9 col14\" >0.351111</td>\n",
        "                        <td id=\"T_63a298c2_ec70_11ea_a161_525400daab6erow9_col15\" class=\"data row9 col15\" >-0.320744</td>\n",
        "                        <td id=\"T_63a298c2_ec70_11ea_a161_525400daab6erow9_col16\" class=\"data row9 col16\" >0.780144</td>\n",
        "            </tr>\n",
        "            <tr>\n",
        "                        <th id=\"T_63a298c2_ec70_11ea_a161_525400daab6elevel0_row10\" class=\"row_heading level0 row10\" >Stay_home_restrictions</th>\n",
        "                        <td id=\"T_63a298c2_ec70_11ea_a161_525400daab6erow10_col0\" class=\"data row10 col0\" >-0.039211</td>\n",
        "                        <td id=\"T_63a298c2_ec70_11ea_a161_525400daab6erow10_col1\" class=\"data row10 col1\" >0.011270</td>\n",
        "                        <td id=\"T_63a298c2_ec70_11ea_a161_525400daab6erow10_col2\" class=\"data row10 col2\" >0.036562</td>\n",
        "                        <td id=\"T_63a298c2_ec70_11ea_a161_525400daab6erow10_col3\" class=\"data row10 col3\" >0.042639</td>\n",
        "                        <td id=\"T_63a298c2_ec70_11ea_a161_525400daab6erow10_col4\" class=\"data row10 col4\" >-0.144189</td>\n",
        "                        <td id=\"T_63a298c2_ec70_11ea_a161_525400daab6erow10_col5\" class=\"data row10 col5\" >0.344905</td>\n",
        "                        <td id=\"T_63a298c2_ec70_11ea_a161_525400daab6erow10_col6\" class=\"data row10 col6\" >0.552633</td>\n",
        "                        <td id=\"T_63a298c2_ec70_11ea_a161_525400daab6erow10_col7\" class=\"data row10 col7\" >0.491891</td>\n",
        "                        <td id=\"T_63a298c2_ec70_11ea_a161_525400daab6erow10_col8\" class=\"data row10 col8\" >0.588724</td>\n",
        "                        <td id=\"T_63a298c2_ec70_11ea_a161_525400daab6erow10_col9\" class=\"data row10 col9\" >0.629653</td>\n",
        "                        <td id=\"T_63a298c2_ec70_11ea_a161_525400daab6erow10_col10\" class=\"data row10 col10\" >1.000000</td>\n",
        "                        <td id=\"T_63a298c2_ec70_11ea_a161_525400daab6erow10_col11\" class=\"data row10 col11\" >0.649477</td>\n",
        "                        <td id=\"T_63a298c2_ec70_11ea_a161_525400daab6erow10_col12\" class=\"data row10 col12\" >0.428719</td>\n",
        "                        <td id=\"T_63a298c2_ec70_11ea_a161_525400daab6erow10_col13\" class=\"data row10 col13\" >0.050396</td>\n",
        "                        <td id=\"T_63a298c2_ec70_11ea_a161_525400daab6erow10_col14\" class=\"data row10 col14\" >0.351043</td>\n",
        "                        <td id=\"T_63a298c2_ec70_11ea_a161_525400daab6erow10_col15\" class=\"data row10 col15\" >-0.067471</td>\n",
        "                        <td id=\"T_63a298c2_ec70_11ea_a161_525400daab6erow10_col16\" class=\"data row10 col16\" >0.761553</td>\n",
        "            </tr>\n",
        "            <tr>\n",
        "                        <th id=\"T_63a298c2_ec70_11ea_a161_525400daab6elevel0_row11\" class=\"row_heading level0 row11\" >Internal_movement_restrictions</th>\n",
        "                        <td id=\"T_63a298c2_ec70_11ea_a161_525400daab6erow11_col0\" class=\"data row11 col0\" >-0.004223</td>\n",
        "                        <td id=\"T_63a298c2_ec70_11ea_a161_525400daab6erow11_col1\" class=\"data row11 col1\" >0.042395</td>\n",
        "                        <td id=\"T_63a298c2_ec70_11ea_a161_525400daab6erow11_col2\" class=\"data row11 col2\" >-0.021196</td>\n",
        "                        <td id=\"T_63a298c2_ec70_11ea_a161_525400daab6erow11_col3\" class=\"data row11 col3\" >-0.029615</td>\n",
        "                        <td id=\"T_63a298c2_ec70_11ea_a161_525400daab6erow11_col4\" class=\"data row11 col4\" >-0.304887</td>\n",
        "                        <td id=\"T_63a298c2_ec70_11ea_a161_525400daab6erow11_col5\" class=\"data row11 col5\" >0.240616</td>\n",
        "                        <td id=\"T_63a298c2_ec70_11ea_a161_525400daab6erow11_col6\" class=\"data row11 col6\" >0.462871</td>\n",
        "                        <td id=\"T_63a298c2_ec70_11ea_a161_525400daab6erow11_col7\" class=\"data row11 col7\" >0.358332</td>\n",
        "                        <td id=\"T_63a298c2_ec70_11ea_a161_525400daab6erow11_col8\" class=\"data row11 col8\" >0.617111</td>\n",
        "                        <td id=\"T_63a298c2_ec70_11ea_a161_525400daab6erow11_col9\" class=\"data row11 col9\" >0.815924</td>\n",
        "                        <td id=\"T_63a298c2_ec70_11ea_a161_525400daab6erow11_col10\" class=\"data row11 col10\" >0.649477</td>\n",
        "                        <td id=\"T_63a298c2_ec70_11ea_a161_525400daab6erow11_col11\" class=\"data row11 col11\" >1.000000</td>\n",
        "                        <td id=\"T_63a298c2_ec70_11ea_a161_525400daab6erow11_col12\" class=\"data row11 col12\" >0.384429</td>\n",
        "                        <td id=\"T_63a298c2_ec70_11ea_a161_525400daab6erow11_col13\" class=\"data row11 col13\" >-0.032100</td>\n",
        "                        <td id=\"T_63a298c2_ec70_11ea_a161_525400daab6erow11_col14\" class=\"data row11 col14\" >0.408301</td>\n",
        "                        <td id=\"T_63a298c2_ec70_11ea_a161_525400daab6erow11_col15\" class=\"data row11 col15\" >-0.331907</td>\n",
        "                        <td id=\"T_63a298c2_ec70_11ea_a161_525400daab6erow11_col16\" class=\"data row11 col16\" >0.681468</td>\n",
        "            </tr>\n",
        "            <tr>\n",
        "                        <th id=\"T_63a298c2_ec70_11ea_a161_525400daab6elevel0_row12\" class=\"row_heading level0 row12\" >International_movement_restrictions</th>\n",
        "                        <td id=\"T_63a298c2_ec70_11ea_a161_525400daab6erow12_col0\" class=\"data row12 col0\" >-0.466091</td>\n",
        "                        <td id=\"T_63a298c2_ec70_11ea_a161_525400daab6erow12_col1\" class=\"data row12 col1\" >-0.099671</td>\n",
        "                        <td id=\"T_63a298c2_ec70_11ea_a161_525400daab6erow12_col2\" class=\"data row12 col2\" >-0.092083</td>\n",
        "                        <td id=\"T_63a298c2_ec70_11ea_a161_525400daab6erow12_col3\" class=\"data row12 col3\" >0.003579</td>\n",
        "                        <td id=\"T_63a298c2_ec70_11ea_a161_525400daab6erow12_col4\" class=\"data row12 col4\" >0.008156</td>\n",
        "                        <td id=\"T_63a298c2_ec70_11ea_a161_525400daab6erow12_col5\" class=\"data row12 col5\" >0.450952</td>\n",
        "                        <td id=\"T_63a298c2_ec70_11ea_a161_525400daab6erow12_col6\" class=\"data row12 col6\" >0.275900</td>\n",
        "                        <td id=\"T_63a298c2_ec70_11ea_a161_525400daab6erow12_col7\" class=\"data row12 col7\" >0.060734</td>\n",
        "                        <td id=\"T_63a298c2_ec70_11ea_a161_525400daab6erow12_col8\" class=\"data row12 col8\" >0.240287</td>\n",
        "                        <td id=\"T_63a298c2_ec70_11ea_a161_525400daab6erow12_col9\" class=\"data row12 col9\" >0.443328</td>\n",
        "                        <td id=\"T_63a298c2_ec70_11ea_a161_525400daab6erow12_col10\" class=\"data row12 col10\" >0.428719</td>\n",
        "                        <td id=\"T_63a298c2_ec70_11ea_a161_525400daab6erow12_col11\" class=\"data row12 col11\" >0.384429</td>\n",
        "                        <td id=\"T_63a298c2_ec70_11ea_a161_525400daab6erow12_col12\" class=\"data row12 col12\" >1.000000</td>\n",
        "                        <td id=\"T_63a298c2_ec70_11ea_a161_525400daab6erow12_col13\" class=\"data row12 col13\" >0.059029</td>\n",
        "                        <td id=\"T_63a298c2_ec70_11ea_a161_525400daab6erow12_col14\" class=\"data row12 col14\" >0.349783</td>\n",
        "                        <td id=\"T_63a298c2_ec70_11ea_a161_525400daab6erow12_col15\" class=\"data row12 col15\" >0.038320</td>\n",
        "                        <td id=\"T_63a298c2_ec70_11ea_a161_525400daab6erow12_col16\" class=\"data row12 col16\" >0.532702</td>\n",
        "            </tr>\n",
        "            <tr>\n",
        "                        <th id=\"T_63a298c2_ec70_11ea_a161_525400daab6elevel0_row13\" class=\"row_heading level0 row13\" >Information_campaigns</th>\n",
        "                        <td id=\"T_63a298c2_ec70_11ea_a161_525400daab6erow13_col0\" class=\"data row13 col0\" >0.019502</td>\n",
        "                        <td id=\"T_63a298c2_ec70_11ea_a161_525400daab6erow13_col1\" class=\"data row13 col1\" >0.019139</td>\n",
        "                        <td id=\"T_63a298c2_ec70_11ea_a161_525400daab6erow13_col2\" class=\"data row13 col2\" >-0.129193</td>\n",
        "                        <td id=\"T_63a298c2_ec70_11ea_a161_525400daab6erow13_col3\" class=\"data row13 col3\" >-0.117747</td>\n",
        "                        <td id=\"T_63a298c2_ec70_11ea_a161_525400daab6erow13_col4\" class=\"data row13 col4\" >-0.150827</td>\n",
        "                        <td id=\"T_63a298c2_ec70_11ea_a161_525400daab6erow13_col5\" class=\"data row13 col5\" >-0.039603</td>\n",
        "                        <td id=\"T_63a298c2_ec70_11ea_a161_525400daab6erow13_col6\" class=\"data row13 col6\" >-0.003066</td>\n",
        "                        <td id=\"T_63a298c2_ec70_11ea_a161_525400daab6erow13_col7\" class=\"data row13 col7\" >-0.015888</td>\n",
        "                        <td id=\"T_63a298c2_ec70_11ea_a161_525400daab6erow13_col8\" class=\"data row13 col8\" >0.065200</td>\n",
        "                        <td id=\"T_63a298c2_ec70_11ea_a161_525400daab6erow13_col9\" class=\"data row13 col9\" >-0.103259</td>\n",
        "                        <td id=\"T_63a298c2_ec70_11ea_a161_525400daab6erow13_col10\" class=\"data row13 col10\" >0.050396</td>\n",
        "                        <td id=\"T_63a298c2_ec70_11ea_a161_525400daab6erow13_col11\" class=\"data row13 col11\" >-0.032100</td>\n",
        "                        <td id=\"T_63a298c2_ec70_11ea_a161_525400daab6erow13_col12\" class=\"data row13 col12\" >0.059029</td>\n",
        "                        <td id=\"T_63a298c2_ec70_11ea_a161_525400daab6erow13_col13\" class=\"data row13 col13\" >1.000000</td>\n",
        "                        <td id=\"T_63a298c2_ec70_11ea_a161_525400daab6erow13_col14\" class=\"data row13 col14\" >0.138255</td>\n",
        "                        <td id=\"T_63a298c2_ec70_11ea_a161_525400daab6erow13_col15\" class=\"data row13 col15\" >0.062931</td>\n",
        "                        <td id=\"T_63a298c2_ec70_11ea_a161_525400daab6erow13_col16\" class=\"data row13 col16\" >-0.004623</td>\n",
        "            </tr>\n",
        "            <tr>\n",
        "                        <th id=\"T_63a298c2_ec70_11ea_a161_525400daab6elevel0_row14\" class=\"row_heading level0 row14\" >Testing_policy</th>\n",
        "                        <td id=\"T_63a298c2_ec70_11ea_a161_525400daab6erow14_col0\" class=\"data row14 col0\" >-0.135125</td>\n",
        "                        <td id=\"T_63a298c2_ec70_11ea_a161_525400daab6erow14_col1\" class=\"data row14 col1\" >-0.522553</td>\n",
        "                        <td id=\"T_63a298c2_ec70_11ea_a161_525400daab6erow14_col2\" class=\"data row14 col2\" >-0.390986</td>\n",
        "                        <td id=\"T_63a298c2_ec70_11ea_a161_525400daab6erow14_col3\" class=\"data row14 col3\" >-0.345493</td>\n",
        "                        <td id=\"T_63a298c2_ec70_11ea_a161_525400daab6erow14_col4\" class=\"data row14 col4\" >-0.375804</td>\n",
        "                        <td id=\"T_63a298c2_ec70_11ea_a161_525400daab6erow14_col5\" class=\"data row14 col5\" >0.114168</td>\n",
        "                        <td id=\"T_63a298c2_ec70_11ea_a161_525400daab6erow14_col6\" class=\"data row14 col6\" >0.013434</td>\n",
        "                        <td id=\"T_63a298c2_ec70_11ea_a161_525400daab6erow14_col7\" class=\"data row14 col7\" >0.199629</td>\n",
        "                        <td id=\"T_63a298c2_ec70_11ea_a161_525400daab6erow14_col8\" class=\"data row14 col8\" >0.387143</td>\n",
        "                        <td id=\"T_63a298c2_ec70_11ea_a161_525400daab6erow14_col9\" class=\"data row14 col9\" >0.351111</td>\n",
        "                        <td id=\"T_63a298c2_ec70_11ea_a161_525400daab6erow14_col10\" class=\"data row14 col10\" >0.351043</td>\n",
        "                        <td id=\"T_63a298c2_ec70_11ea_a161_525400daab6erow14_col11\" class=\"data row14 col11\" >0.408301</td>\n",
        "                        <td id=\"T_63a298c2_ec70_11ea_a161_525400daab6erow14_col12\" class=\"data row14 col12\" >0.349783</td>\n",
        "                        <td id=\"T_63a298c2_ec70_11ea_a161_525400daab6erow14_col13\" class=\"data row14 col13\" >0.138255</td>\n",
        "                        <td id=\"T_63a298c2_ec70_11ea_a161_525400daab6erow14_col14\" class=\"data row14 col14\" >1.000000</td>\n",
        "                        <td id=\"T_63a298c2_ec70_11ea_a161_525400daab6erow14_col15\" class=\"data row14 col15\" >0.014387</td>\n",
        "                        <td id=\"T_63a298c2_ec70_11ea_a161_525400daab6erow14_col16\" class=\"data row14 col16\" >0.066029</td>\n",
        "            </tr>\n",
        "            <tr>\n",
        "                        <th id=\"T_63a298c2_ec70_11ea_a161_525400daab6elevel0_row15\" class=\"row_heading level0 row15\" >Contact_tracing</th>\n",
        "                        <td id=\"T_63a298c2_ec70_11ea_a161_525400daab6erow15_col0\" class=\"data row15 col0\" >-0.165938</td>\n",
        "                        <td id=\"T_63a298c2_ec70_11ea_a161_525400daab6erow15_col1\" class=\"data row15 col1\" >-0.083191</td>\n",
        "                        <td id=\"T_63a298c2_ec70_11ea_a161_525400daab6erow15_col2\" class=\"data row15 col2\" >-0.191566</td>\n",
        "                        <td id=\"T_63a298c2_ec70_11ea_a161_525400daab6erow15_col3\" class=\"data row15 col3\" >-0.178661</td>\n",
        "                        <td id=\"T_63a298c2_ec70_11ea_a161_525400daab6erow15_col4\" class=\"data row15 col4\" >0.126915</td>\n",
        "                        <td id=\"T_63a298c2_ec70_11ea_a161_525400daab6erow15_col5\" class=\"data row15 col5\" >-0.445617</td>\n",
        "                        <td id=\"T_63a298c2_ec70_11ea_a161_525400daab6erow15_col6\" class=\"data row15 col6\" >-0.475904</td>\n",
        "                        <td id=\"T_63a298c2_ec70_11ea_a161_525400daab6erow15_col7\" class=\"data row15 col7\" >-0.164806</td>\n",
        "                        <td id=\"T_63a298c2_ec70_11ea_a161_525400daab6erow15_col8\" class=\"data row15 col8\" >-0.260132</td>\n",
        "                        <td id=\"T_63a298c2_ec70_11ea_a161_525400daab6erow15_col9\" class=\"data row15 col9\" >-0.320744</td>\n",
        "                        <td id=\"T_63a298c2_ec70_11ea_a161_525400daab6erow15_col10\" class=\"data row15 col10\" >-0.067471</td>\n",
        "                        <td id=\"T_63a298c2_ec70_11ea_a161_525400daab6erow15_col11\" class=\"data row15 col11\" >-0.331907</td>\n",
        "                        <td id=\"T_63a298c2_ec70_11ea_a161_525400daab6erow15_col12\" class=\"data row15 col12\" >0.038320</td>\n",
        "                        <td id=\"T_63a298c2_ec70_11ea_a161_525400daab6erow15_col13\" class=\"data row15 col13\" >0.062931</td>\n",
        "                        <td id=\"T_63a298c2_ec70_11ea_a161_525400daab6erow15_col14\" class=\"data row15 col14\" >0.014387</td>\n",
        "                        <td id=\"T_63a298c2_ec70_11ea_a161_525400daab6erow15_col15\" class=\"data row15 col15\" >1.000000</td>\n",
        "                        <td id=\"T_63a298c2_ec70_11ea_a161_525400daab6erow15_col16\" class=\"data row15 col16\" >-0.272987</td>\n",
        "            </tr>\n",
        "            <tr>\n",
        "                        <th id=\"T_63a298c2_ec70_11ea_a161_525400daab6elevel0_row16\" class=\"row_heading level0 row16\" >Stringency_index</th>\n",
        "                        <td id=\"T_63a298c2_ec70_11ea_a161_525400daab6erow16_col0\" class=\"data row16 col0\" >-0.142078</td>\n",
        "                        <td id=\"T_63a298c2_ec70_11ea_a161_525400daab6erow16_col1\" class=\"data row16 col1\" >0.307318</td>\n",
        "                        <td id=\"T_63a298c2_ec70_11ea_a161_525400daab6erow16_col2\" class=\"data row16 col2\" >0.203821</td>\n",
        "                        <td id=\"T_63a298c2_ec70_11ea_a161_525400daab6erow16_col3\" class=\"data row16 col3\" >0.109712</td>\n",
        "                        <td id=\"T_63a298c2_ec70_11ea_a161_525400daab6erow16_col4\" class=\"data row16 col4\" >-0.073629</td>\n",
        "                        <td id=\"T_63a298c2_ec70_11ea_a161_525400daab6erow16_col5\" class=\"data row16 col5\" >0.603185</td>\n",
        "                        <td id=\"T_63a298c2_ec70_11ea_a161_525400daab6erow16_col6\" class=\"data row16 col6\" >0.767685</td>\n",
        "                        <td id=\"T_63a298c2_ec70_11ea_a161_525400daab6erow16_col7\" class=\"data row16 col7\" >0.573914</td>\n",
        "                        <td id=\"T_63a298c2_ec70_11ea_a161_525400daab6erow16_col8\" class=\"data row16 col8\" >0.619622</td>\n",
        "                        <td id=\"T_63a298c2_ec70_11ea_a161_525400daab6erow16_col9\" class=\"data row16 col9\" >0.780144</td>\n",
        "                        <td id=\"T_63a298c2_ec70_11ea_a161_525400daab6erow16_col10\" class=\"data row16 col10\" >0.761553</td>\n",
        "                        <td id=\"T_63a298c2_ec70_11ea_a161_525400daab6erow16_col11\" class=\"data row16 col11\" >0.681468</td>\n",
        "                        <td id=\"T_63a298c2_ec70_11ea_a161_525400daab6erow16_col12\" class=\"data row16 col12\" >0.532702</td>\n",
        "                        <td id=\"T_63a298c2_ec70_11ea_a161_525400daab6erow16_col13\" class=\"data row16 col13\" >-0.004623</td>\n",
        "                        <td id=\"T_63a298c2_ec70_11ea_a161_525400daab6erow16_col14\" class=\"data row16 col14\" >0.066029</td>\n",
        "                        <td id=\"T_63a298c2_ec70_11ea_a161_525400daab6erow16_col15\" class=\"data row16 col15\" >-0.272987</td>\n",
        "                        <td id=\"T_63a298c2_ec70_11ea_a161_525400daab6erow16_col16\" class=\"data row16 col16\" >1.000000</td>\n",
        "            </tr>\n",
        "    </tbody></table>"
       ],
       "output_type": "pyout",
       "prompt_number": 21,
       "text": [
        "<pandas.io.formats.style.Styler at 0x7f00174bebb0>"
       ]
      }
     ],
     "prompt_number": 21
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "# Scatter plot of Stringency index and Rt\n",
      "df = track_df.copy()\n",
      "sns.scatterplot(data=df, x=\"Stringency_index\", y=\"Rt\", hue=\"Country\", legend=\"brief\", marker=\"+\")\n",
      "bbox_to_anchor=(1.02, 0)\n",
      "bbox_loc=\"lower left\"\n",
      "plt.legend(bbox_to_anchor=bbox_to_anchor, loc=bbox_loc, borderaxespad=0)\n",
      "plt.title(\"Relationship of Stringency index and reproduction number\")\n",
      "plt.ylabel(\"Reproduction number\")\n",
      "plt.xlabel(\"Stringency index\")\n",
      "plt.show()"
     ],
     "language": "python",
     "metadata": {},
     "outputs": [
      {
       "output_type": "display_data",
       "png": "\n",
       "text": [
        "<Figure size 432x288 with 1 Axes>"
       ]
      }
     ],
     "prompt_number": 22
    }
   ],
   "metadata": {}
  }
 ]
}
