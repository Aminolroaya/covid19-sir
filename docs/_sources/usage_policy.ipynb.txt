{
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3.8.2 64-bit ('.venv': venv)",
   "name": "python_defaultSpec_1597669925034"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.8.2-final"
  },
  "name": ""
 },
 "nbformat": 3,
 "nbformat_minor": 0,
 "worksheets": [
  {
   "cells": [
    {
     "cell_type": "markdown",
     "metadata": {},
     "source": [
      "# Usage (details: policy measures)\n",
      "Here, we will analyse the relationship of policy measures and parameter values of SIR-derived ODE models. Policy measures are tracked by [Oxford Covid-19 Government Response Tracker (OxCGRT)](https://github.com/OxCGRT/covid-policy-tracker)."
     ]
    },
    {
     "cell_type": "heading",
     "level": 2,
     "metadata": {},
     "source": [
      "Preparation"
     ]
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "# Standard users\n",
      "# !pip install covsirphy\n",
      "# Developers (Note: this notebook is in example directory)\n",
      "import os\n",
      "os.chdir(\"../\")"
     ],
     "language": "python",
     "metadata": {},
     "outputs": [],
     "prompt_number": 1
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "from pprint import pprint"
     ],
     "language": "python",
     "metadata": {},
     "outputs": [],
     "prompt_number": 2
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "import covsirphy as cs\n",
      "cs.__version__"
     ],
     "language": "python",
     "metadata": {},
     "outputs": [
      {
       "output_type": "pyout",
       "prompt_number": 3,
       "text": [
        "'2.8.2'"
       ]
      }
     ],
     "prompt_number": 3
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "# Standard users and developers\n",
      "data_loader = cs.DataLoader(\"input\")\n",
      "# The number of cases (JHU style)\n",
      "jhu_data = data_loader.jhu(verbose=False)\n",
      "# Population in each country\n",
      "population_data = data_loader.population(verbose=False)\n",
      "# Government Response Tracker (OxCGRT)\n",
      "oxcgrt_data = data_loader.oxcgrt(verbose=False)\n",
      "# Description/citation\n",
      "print(oxcgrt_data.citation)"
     ],
     "language": "python",
     "metadata": {
      "tags": []
     },
     "outputs": [
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "(Secondary source) Guidotti, E., Ardia, D., (2020), \"COVID-19 Data Hub\", Journal of Open Source Software 5(51):2376, doi: 10.21105/joss.02376.\n",
        "We can get Citation list of primary sources with DataLoader(...).covid19dh_citation"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      }
     ],
     "prompt_number": 4
    },
    {
     "cell_type": "markdown",
     "metadata": {},
     "source": [
      "## Class for policy measure analysis\n",
      "We will `PolicyMeasures` class to find relationship of policy measures and parameter values of SIR-derived ODE models."
     ]
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "# Create analyser with tau value 360 [min] (can be changed)\n",
      "analyser = cs.PolicyMeasures(jhu_data, population_data, oxcgrt_data, tau=360)\n",
      "# The number of registerd countries\n",
      "len(analyser.countries)"
     ],
     "language": "python",
     "metadata": {
      "tags": []
     },
     "outputs": [
      {
       "output_type": "pyout",
       "prompt_number": 5,
       "text": [
        "184"
       ]
      }
     ],
     "prompt_number": 5
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "# We can get Scenario instance for detailed scenario analysis\n",
      "type(analyser.scenario(\"Japan\"))"
     ],
     "language": "python",
     "metadata": {},
     "outputs": [
      {
       "output_type": "pyout",
       "prompt_number": 6,
       "text": [
        "covsirphy.analysis.scenario.Scenario"
       ]
      }
     ],
     "prompt_number": 6
    },
    {
     "cell_type": "markdown",
     "metadata": {},
     "source": [
      "## Set phases with S-R trend analysis\n",
      "We will perform S-R trend analysis to set phases in all countries. Countries which do not have **9th phases** will be un-registered for the next analysis. This number will be adjusted for your analysis."
     ]
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "# Show the number of phases of all countries\n",
      "analyser.trend()\n",
      "pprint(analyser.phase_len(), compact=True)"
     ],
     "language": "python",
     "metadata": {},
     "outputs": [
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "{"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "3"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ": "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "['Myanmar', 'Tanzania', 'Libya', 'Dominica']"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        " "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "4"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ": "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "['Brunei', 'Papua New Guinea', 'Trinidad and Tobago', 'Belize']"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        " "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "5"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ": "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "["
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Fiji'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Namibia'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Antigua and Barbuda'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Mauritius'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Lebanon'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        "     "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Bahamas'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Uganda'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Grenada'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Tunisia'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "]"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        " "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "6"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ": "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "["
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Jamaica'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Equatorial Guinea'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Mongolia'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Ireland'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Cambodia'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        "     "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Iceland'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Norway'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Seychelles'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Gambia'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Jordan'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Kyrgyzstan'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        "     "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Liechtenstein'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Lesotho'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Guyana'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Vietnam'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Croatia'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Kosovo'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        "     "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Malta'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Philippines'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Sao Tome and Principe'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Netherlands'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Ethiopia'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        "     "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'South Sudan'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Botswana'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Angola'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Central African Republic'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Yemen'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "]"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        " "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "7"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ": "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "["
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'San Marino'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Chad'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Kazakhstan'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Madagascar'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Slovenia'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Syria'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        "     "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Afghanistan'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Greece'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Monaco'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Maldives'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Slovakia'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Palestine'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        "     "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Barbados'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Saint Vincent and the Grenadines'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Mozambique'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Kenya'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        "     "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Australia'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Eritrea'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Venezuela'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Spain'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Zimbabwe'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'New Zealand'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        "     "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Taiwan'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Zambia'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Rwanda'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Paraguay'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Colombia'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Morocco'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Malawi'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        "     "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Guatemala'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Saint Lucia'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Montenegro'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Cyprus'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Bhutan'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "]"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        " "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "8"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ": "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "["
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Oman'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Uzbekistan'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Sri Lanka'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'India'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Congo'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Guinea-Bissau'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        "     "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'South Africa'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Bosnia and Herzegovina'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Israel'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Cameroon'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        "     "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Mauritania'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Nepal'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Thailand'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Somalia'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Iraq'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Cape Verde'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        "     "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Ghana'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Japan'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Suriname'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Costa Rica'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Djibouti'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Argentina'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        "     "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Tajikistan'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Niger'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Albania'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Nicaragua'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Comoros'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "]"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        " "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "9"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ": "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "["
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Pakistan'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Uruguay'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Sudan'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Azerbaijan'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Andorra'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Cuba'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        "     "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'El Salvador'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Sierra Leone'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Bermuda'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Germany'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Belarus'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Burundi'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        "     "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Gabon'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Finland'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Armenia'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Austria'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Haiti'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Korea, South'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        "     "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Ecuador'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Chile'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'China'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Czech Republic'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Qatar'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Canada'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        "     "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Liberia'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Malaysia'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Luxembourg'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Swaziland'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Mali'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "]"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        " "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "10"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ": "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "["
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Denmark'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Togo'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Hungary'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Algeria'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Benin'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Bolivia'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        "      "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Switzerland'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Dominican Republic'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Latvia'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Singapore'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Panama'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        "      "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Honduras'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Indonesia'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Belgium'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Lithuania'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Ukraine'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Bulgaria'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        "      "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Serbia'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Saudi Arabia'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Poland'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Moldova'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Macedonia'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Egypt'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        "      "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Senegal'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "]"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        " "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "11"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ": "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "["
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Nigeria'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Romania'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Italy'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Guinea'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Georgia'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Bahrain'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'France'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        "      "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Bangladesh'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Peru'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Iran'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Burkina Faso'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Mexico'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Brazil'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        "      "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Kuwait'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'United States'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Estonia'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Portugal'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Turkey'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "]"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        " "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "12"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ": "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "['Russia', 'United Arab Emirates']"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "}"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      }
     ],
     "prompt_number": 7
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "# Set phases with S-R trend analysis\n",
      "analyser.trend(min_len=11)\n",
      "# The number of countries\n",
      "len(analyser.countries)"
     ],
     "language": "python",
     "metadata": {},
     "outputs": [
      {
       "output_type": "pyout",
       "prompt_number": 8,
       "text": [
        "20"
       ]
      }
     ],
     "prompt_number": 8
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "phase_len_dict = analyser.phase_len()\n",
      "pprint(phase_len_dict, compact=True)"
     ],
     "language": "python",
     "metadata": {
      "tags": []
     },
     "outputs": [
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "{"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "11"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ": "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "["
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Nigeria'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Romania'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Italy'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Guinea'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Georgia'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Bahrain'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'France'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        "      "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Bangladesh'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Peru'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Iran'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Burkina Faso'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Mexico'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Brazil'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        "      "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Kuwait'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'United States'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Estonia'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Portugal'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Turkey'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "]"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        " "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "12"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ": "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "['Russia', 'United Arab Emirates']"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "}"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      }
     ],
     "prompt_number": 9
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "# Here, only show the countries which have the most phases\n",
      "countries_show = max(phase_len_dict.items(), key=lambda x: x[0])[1]\n",
      "# Show summary\n",
      "analyser.summary(countries=countries_show)"
     ],
     "language": "python",
     "metadata": {
      "tags": []
     },
     "outputs": [
      {
       "html": [
        "<div>\n",
        "<style scoped>\n",
        "    .dataframe tbody tr th:only-of-type {\n",
        "        vertical-align: middle;\n",
        "    }\n",
        "\n",
        "    .dataframe tbody tr th {\n",
        "        vertical-align: top;\n",
        "    }\n",
        "\n",
        "    .dataframe thead th {\n",
        "        text-align: right;\n",
        "    }\n",
        "</style>\n",
        "<table border=\"1\" class=\"dataframe\">\n",
        "  <thead>\n",
        "    <tr style=\"text-align: right;\">\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th>Type</th>\n",
        "      <th>Start</th>\n",
        "      <th>End</th>\n",
        "      <th>Population</th>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>Country</th>\n",
        "      <th>Phase</th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "    </tr>\n",
        "  </thead>\n",
        "  <tbody>\n",
        "    <tr>\n",
        "      <th rowspan=\"12\" valign=\"top\">Russia</th>\n",
        "      <th>0th</th>\n",
        "      <td>Past</td>\n",
        "      <td>12Feb2020</td>\n",
        "      <td>06May2020</td>\n",
        "      <td>330457362</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>1st</th>\n",
        "      <td>Past</td>\n",
        "      <td>07May2020</td>\n",
        "      <td>17May2020</td>\n",
        "      <td>330457362</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>2nd</th>\n",
        "      <td>Past</td>\n",
        "      <td>18May2020</td>\n",
        "      <td>27May2020</td>\n",
        "      <td>330457362</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>3rd</th>\n",
        "      <td>Past</td>\n",
        "      <td>28May2020</td>\n",
        "      <td>05Jun2020</td>\n",
        "      <td>330457362</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>4th</th>\n",
        "      <td>Past</td>\n",
        "      <td>06Jun2020</td>\n",
        "      <td>13Jun2020</td>\n",
        "      <td>330457362</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>5th</th>\n",
        "      <td>Past</td>\n",
        "      <td>14Jun2020</td>\n",
        "      <td>23Jun2020</td>\n",
        "      <td>330457362</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>6th</th>\n",
        "      <td>Past</td>\n",
        "      <td>24Jun2020</td>\n",
        "      <td>04Jul2020</td>\n",
        "      <td>330457362</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>7th</th>\n",
        "      <td>Past</td>\n",
        "      <td>05Jul2020</td>\n",
        "      <td>17Jul2020</td>\n",
        "      <td>330457362</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>8th</th>\n",
        "      <td>Past</td>\n",
        "      <td>18Jul2020</td>\n",
        "      <td>31Jul2020</td>\n",
        "      <td>330457362</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>9th</th>\n",
        "      <td>Past</td>\n",
        "      <td>01Aug2020</td>\n",
        "      <td>14Aug2020</td>\n",
        "      <td>330457362</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>10th</th>\n",
        "      <td>Past</td>\n",
        "      <td>15Aug2020</td>\n",
        "      <td>29Aug2020</td>\n",
        "      <td>330457362</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>11th</th>\n",
        "      <td>Past</td>\n",
        "      <td>30Aug2020</td>\n",
        "      <td>16Sep2020</td>\n",
        "      <td>330457362</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th rowspan=\"12\" valign=\"top\">United Arab Emirates</th>\n",
        "      <th>0th</th>\n",
        "      <td>Past</td>\n",
        "      <td>12Feb2020</td>\n",
        "      <td>25Apr2020</td>\n",
        "      <td>9630959</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>1st</th>\n",
        "      <td>Past</td>\n",
        "      <td>26Apr2020</td>\n",
        "      <td>12May2020</td>\n",
        "      <td>9630959</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>2nd</th>\n",
        "      <td>Past</td>\n",
        "      <td>13May2020</td>\n",
        "      <td>20May2020</td>\n",
        "      <td>9630959</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>3rd</th>\n",
        "      <td>Past</td>\n",
        "      <td>21May2020</td>\n",
        "      <td>28May2020</td>\n",
        "      <td>9630959</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>4th</th>\n",
        "      <td>Past</td>\n",
        "      <td>29May2020</td>\n",
        "      <td>07Jun2020</td>\n",
        "      <td>9630959</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>5th</th>\n",
        "      <td>Past</td>\n",
        "      <td>08Jun2020</td>\n",
        "      <td>19Jun2020</td>\n",
        "      <td>9630959</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>6th</th>\n",
        "      <td>Past</td>\n",
        "      <td>20Jun2020</td>\n",
        "      <td>01Jul2020</td>\n",
        "      <td>9630959</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>7th</th>\n",
        "      <td>Past</td>\n",
        "      <td>02Jul2020</td>\n",
        "      <td>11Jul2020</td>\n",
        "      <td>9630959</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>8th</th>\n",
        "      <td>Past</td>\n",
        "      <td>12Jul2020</td>\n",
        "      <td>27Jul2020</td>\n",
        "      <td>9630959</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>9th</th>\n",
        "      <td>Past</td>\n",
        "      <td>28Jul2020</td>\n",
        "      <td>17Aug2020</td>\n",
        "      <td>9630959</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>10th</th>\n",
        "      <td>Past</td>\n",
        "      <td>18Aug2020</td>\n",
        "      <td>31Aug2020</td>\n",
        "      <td>9630959</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>11th</th>\n",
        "      <td>Past</td>\n",
        "      <td>01Sep2020</td>\n",
        "      <td>16Sep2020</td>\n",
        "      <td>9630959</td>\n",
        "    </tr>\n",
        "  </tbody>\n",
        "</table>\n",
        "</div>"
       ],
       "output_type": "pyout",
       "prompt_number": 10,
       "text": [
        "                            Type      Start        End  Population\n",
        "Country              Phase                                        \n",
        "Russia               0th    Past  12Feb2020  06May2020   330457362\n",
        "                     1st    Past  07May2020  17May2020   330457362\n",
        "                     2nd    Past  18May2020  27May2020   330457362\n",
        "                     3rd    Past  28May2020  05Jun2020   330457362\n",
        "                     4th    Past  06Jun2020  13Jun2020   330457362\n",
        "                     5th    Past  14Jun2020  23Jun2020   330457362\n",
        "                     6th    Past  24Jun2020  04Jul2020   330457362\n",
        "                     7th    Past  05Jul2020  17Jul2020   330457362\n",
        "                     8th    Past  18Jul2020  31Jul2020   330457362\n",
        "                     9th    Past  01Aug2020  14Aug2020   330457362\n",
        "                     10th   Past  15Aug2020  29Aug2020   330457362\n",
        "                     11th   Past  30Aug2020  16Sep2020   330457362\n",
        "United Arab Emirates 0th    Past  12Feb2020  25Apr2020     9630959\n",
        "                     1st    Past  26Apr2020  12May2020     9630959\n",
        "                     2nd    Past  13May2020  20May2020     9630959\n",
        "                     3rd    Past  21May2020  28May2020     9630959\n",
        "                     4th    Past  29May2020  07Jun2020     9630959\n",
        "                     5th    Past  08Jun2020  19Jun2020     9630959\n",
        "                     6th    Past  20Jun2020  01Jul2020     9630959\n",
        "                     7th    Past  02Jul2020  11Jul2020     9630959\n",
        "                     8th    Past  12Jul2020  27Jul2020     9630959\n",
        "                     9th    Past  28Jul2020  17Aug2020     9630959\n",
        "                     10th   Past  18Aug2020  31Aug2020     9630959\n",
        "                     11th   Past  01Sep2020  16Sep2020     9630959"
       ]
      }
     ],
     "prompt_number": 10
    },
    {
     "cell_type": "markdown",
     "metadata": {},
     "source": [
      "## Parameter estimation\n",
      "we will estimate the parameter values with SIR-derived ODE models in each country."
     ]
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "# Parameter estimation with SIR-F model\n",
      "analyser.estimate(cs.SIRF)"
     ],
     "language": "python",
     "metadata": {
      "tags": []
     },
     "outputs": [
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n",
        "<SIR-F model: parameter estimation>"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "Running optimization with 4 CPUs..."
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tBGD,  4th phase (29Jun2020 - 07Jul2020): finished 1158 trials in 0 min 35 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tTUR,  7th phase (14Jul2020 - 02Aug2020): finished  197 trials in 0 min  5 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tPRT,  0th phase (14Mar2020 - 28Apr2020): finished 1628 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tITA,  2nd phase (29Mar2020 - 09Apr2020): finished 1681 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tEST,  4th phase (14May2020 - 24May2020): finished 1631 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tBHR,  8th phase (10Aug2020 - 22Aug2020): finished  162 trials in 0 min  5 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tTUR,  8th phase (03Aug2020 - 18Aug2020): finished 1463 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tNGA,  2nd phase (09Jun2020 - 18Jun2020): finished 1474 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tBRA, 10th phase (03Sep2020 - 16Sep2020): finished 1450 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tBGD,  0th phase (16Mar2020 - 26May2020): finished 1403 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tTUR,  9th phase (19Aug2020 - 02Sep2020): finished  478 trials in 0 min 15 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tARE,  1st phase (26Apr2020 - 12May2020): finished 1486 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tPRT,  3rd phase (02Jun2020 - 13Jun2020): finished 1449 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tBHR,  7th phase (27Jul2020 - 09Aug2020): finished 1458 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tUSA,  8th phase (09Aug2020 - 19Aug2020): finished  529 trials in 0 min 15 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tGIN,  4th phase (08Jun2020 - 19Jun2020): finished 1532 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tRUS,  4th phase (06Jun2020 - 13Jun2020): finished 1582 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tARE,  3rd phase (21May2020 - 28May2020): finished 1786 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tNGA,  4th phase (27Jun2020 - 12Jul2020): finished 1768 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tBFA,  5th phase (21May2020 - 25Jun2020): finished 1712 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tUSA,  9th phase (20Aug2020 - 31Aug2020): finished  850 trials in 0 min 25 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tPRT,  8th phase (07Aug2020 - 24Aug2020): finished 1749 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tARE,  4th phase (29May2020 - 07Jun2020): finished 1000 trials in 0 min 30 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tBGD,  6th phase (18Jul2020 - 28Jul2020): finished  191 trials in 0 min  5 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tFRA,  5th phase (06May2020 - 27May2020): finished  560 trials in 0 min 15 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tITA,  1st phase (21Mar2020 - 28Mar2020): finished 1763 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tEST,  6th phase (05Jun2020 - 29Jul2020): finished 1716 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tFRA,  3rd phase (13Apr2020 - 24Apr2020): finished 1788 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tUSA,  0th phase (09Feb2020 - 18Apr2020): finished 1729 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tGEO,  9th phase (18Aug2020 - 31Aug2020): finished 1784 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tEST,  1st phase (08Apr2020 - 17Apr2020): finished 1777 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tPRT,  6th phase (07Jul2020 - 19Jul2020): finished 1748 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tTUR,  6th phase (27Jun2020 - 13Jul2020): finished  380 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tGEO,  5th phase (12Jun2020 - 05Jul2020): finished 1728 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tFRA,  4th phase (25Apr2020 - 05May2020): finished 1753 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tFRA,  8th phase (27Jul2020 - 16Aug2020): finished  593 trials in 0 min 15 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tROU,  0th phase (04Mar2020 - 24Apr2020): finished 1621 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tBFA,  9th phase (23Aug2020 - 03Sep2020): finished 1848 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tBFA,  8th phase (12Aug2020 - 22Aug2020): finished 1564 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tGEO,  4th phase (30May2020 - 11Jun2020): finished 1348 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tBFA,  7th phase (23Jul2020 - 11Aug2020): finished 1333 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tRUS,  9th phase (01Aug2020 - 14Aug2020): finished 1331 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tGIN,  2nd phase (12May2020 - 22May2020): finished 1352 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tEST,  2nd phase (18Apr2020 - 29Apr2020): finished 1153 trials in 0 min 45 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tTUR,  2nd phase (30Apr2020 - 08May2020): finished 1137 trials in 0 min 45 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tEST,  7th phase (30Jul2020 - 20Aug2020): finished 1396 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tFRA,  1st phase (24Mar2020 - 02Apr2020): finished 1401 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tBHR,  4th phase (22Jun2020 - 06Jul2020): finished 1387 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tROU,  3rd phase (20Jun2020 - 12Jul2020): finished 1388 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tBGD,  2nd phase (12Jun2020 - 19Jun2020): finished 1412 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tBRA,  6th phase (29Jul2020 - 05Aug2020): finished 1243 trials in 0 min 50 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tKWT,  8th phase (09Aug2020 - 20Aug2020): finished 1408 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tUSA,  3rd phase (05Jun2020 - 24Jun2020): finished  571 trials in 0 min 20 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tBRA,  9th phase (25Aug2020 - 02Sep2020): finished  296 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tIRN,  9th phase (13Aug2020 - 27Aug2020): finished  155 trials in 0 min  5 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tITA,  9th phase (31Jul2020 - 28Aug2020): finished 1395 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tBRA,  4th phase (09Jul2020 - 20Jul2020): finished  454 trials in 0 min 15 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tBFA,  3rd phase (20Apr2020 - 04May2020): finished 1375 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tRUS,  6th phase (24Jun2020 - 04Jul2020): finished 1387 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tBHR, 10th phase (06Sep2020 - 16Sep2020): finished 1398 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tARE,  8th phase (12Jul2020 - 27Jul2020): finished  300 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tROU,  8th phase (18Aug2020 - 26Aug2020): finished  442 trials in 0 min 15 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tBGD,  8th phase (11Aug2020 - 22Aug2020): finished  436 trials in 0 min 15 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tPER,  0th phase (16Mar2020 - 09May2020): finished 1263 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tGIN,  0th phase (03Apr2020 - 30Apr2020): finished 1346 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tBHR,  5th phase (07Jul2020 - 15Jul2020): finished 1353 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tMEX,  5th phase (18Jul2020 - 27Jul2020): finished 1362 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tEST, 10th phase (08Sep2020 - 16Sep2020): finished  147 trials in 0 min  5 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tKWT,  5th phase (04Jul2020 - 14Jul2020): finished  279 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tRUS, 11th phase (30Aug2020 - 16Sep2020): finished 1360 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tRUS,  0th phase (12Feb2020 - 06May2020): finished 1408 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tRUS,  8th phase (18Jul2020 - 31Jul2020): finished 1406 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tUSA,  6th phase (16Jul2020 - 23Jul2020): finished  166 trials in 0 min  5 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tFRA, 10th phase (02Sep2020 - 16Sep2020): finished 1418 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tKWT,  9th phase (21Aug2020 - 02Sep2020): finished  576 trials in 0 min 20 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tMEX,  7th phase (05Aug2020 - 13Aug2020): finished 1433 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tNGA,  5th phase (13Jul2020 - 20Jul2020): finished  165 trials in 0 min  5 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tTUR,  3rd phase (09May2020 - 22May2020): finished 1433 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tPER, 10th phase (04Sep2020 - 16Sep2020): finished 1439 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tKWT,  7th phase (27Jul2020 - 08Aug2020): finished 1375 trials in 0 min 55 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tPER,  3rd phase (15Jun2020 - 01Jul2020): finished 1446 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tGIN,  3rd phase (23May2020 - 07Jun2020): finished 1435 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tIRN,  5th phase (16Jun2020 - 30Jun2020): finished 1445 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tMEX,  1st phase (23May2020 - 09Jun2020): finished  163 trials in 0 min  5 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tROU,  1st phase (25Apr2020 - 18May2020): finished 1444 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tGIN,  7th phase (23Jul2020 - 05Aug2020): finished 1451 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tUSA,  7th phase (24Jul2020 - 08Aug2020): finished  313 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tBGD,  7th phase (29Jul2020 - 10Aug2020): finished  584 trials in 0 min 20 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tITA,  0th phase (24Feb2020 - 20Mar2020): finished 1434 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tPER,  6th phase (01Aug2020 - 10Aug2020): finished 1450 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tIRN,  2nd phase (18Apr2020 - 12May2020): finished  463 trials in 0 min 15 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tIRN,  1st phase (30Mar2020 - 17Apr2020): finished 1454 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tBRA,  3rd phase (27Jun2020 - 08Jul2020): finished 1484 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tGEO,  3rd phase (14May2020 - 29May2020): finished 1455 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tITA,  5th phase (01May2020 - 09May2020): finished  565 trials in 0 min 20 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tNGA,  0th phase (18Mar2020 - 20May2020): finished 1409 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tPRT,  4th phase (14Jun2020 - 24Jun2020): finished 1435 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tGEO,  0th phase (16Mar2020 - 11Apr2020): finished 1458 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tROU,  2nd phase (19May2020 - 19Jun2020): finished  460 trials in 0 min 15 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tARE,  6th phase (20Jun2020 - 01Jul2020): finished  743 trials in 0 min 25 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tGEO,  1st phase (12Apr2020 - 28Apr2020): finished 1443 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tPER,  2nd phase (30May2020 - 14Jun2020): finished 1454 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tARE,  9th phase (28Jul2020 - 17Aug2020): finished  582 trials in 0 min 20 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tGEO, 10th phase (01Sep2020 - 16Sep2020): finished 1463 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tKWT,  1st phase (15May2020 - 27May2020): finished 1446 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tTUR,  0th phase (24Mar2020 - 16Apr2020): finished 1460 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tMEX,  8th phase (14Aug2020 - 24Aug2020): finished  169 trials in 0 min  5 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tBGD,  1st phase (27May2020 - 11Jun2020): finished 1469 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tNGA,  8th phase (08Aug2020 - 17Aug2020): finished 1467 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tARE,  0th phase (12Feb2020 - 25Apr2020): finished 1395 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tUSA,  1st phase (19Apr2020 - 11May2020): finished 1448 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tBRA,  7th phase (06Aug2020 - 13Aug2020): finished  454 trials in 0 min 15 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tPER,  1st phase (10May2020 - 29May2020): finished 1456 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tGIN,  5th phase (20Jun2020 - 08Jul2020): finished  454 trials in 0 min 15 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tBHR,  1st phase (07May2020 - 31May2020): finished 1459 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tFRA,  9th phase (17Aug2020 - 01Sep2020): finished  445 trials in 0 min 15 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tEST,  5th phase (25May2020 - 04Jun2020): finished  168 trials in 0 min  5 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tROU,  6th phase (02Aug2020 - 09Aug2020): finished  324 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tBFA,  1st phase (01Apr2020 - 09Apr2020): finished 1444 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tBFA,  0th phase (21Mar2020 - 31Mar2020): finished 1453 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tBHR,  6th phase (16Jul2020 - 26Jul2020): finished 1431 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tGEO,  7th phase (22Jul2020 - 07Aug2020): finished  311 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tIRN,  6th phase (01Jul2020 - 13Jul2020): finished  171 trials in 0 min  5 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tPRT,  9th phase (25Aug2020 - 04Sep2020): finished 1468 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tKWT,  3rd phase (08Jun2020 - 21Jun2020): finished  306 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tITA,  4th phase (20Apr2020 - 30Apr2020): finished 1457 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tITA,  3rd phase (10Apr2020 - 19Apr2020): finished  322 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tBFA,  6th phase (26Jun2020 - 22Jul2020): finished 1457 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tEST,  8th phase (21Aug2020 - 30Aug2020): finished  325 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tBGD,  9th phase (23Aug2020 - 01Sep2020): finished  327 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tIRN,  8th phase (29Jul2020 - 12Aug2020): finished  282 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tRUS,  1st phase (07May2020 - 17May2020): finished 1453 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tRUS,  3rd phase (28May2020 - 05Jun2020): finished 1442 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tFRA,  7th phase (27Jun2020 - 26Jul2020): finished  571 trials in 0 min 20 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tPER,  7th phase (11Aug2020 - 18Aug2020): finished 1480 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tMEX,  2nd phase (10Jun2020 - 23Jun2020): finished  455 trials in 0 min 15 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tIRN,  0th phase (26Feb2020 - 29Mar2020): finished 1475 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tPER,  4th phase (02Jul2020 - 17Jul2020): finished 1464 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tNGA,  3rd phase (19Jun2020 - 26Jun2020): finished 1504 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tEST,  3rd phase (30Apr2020 - 13May2020): finished 1519 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tBGD,  5th phase (08Jul2020 - 17Jul2020): finished 1112 trials in 0 min 40 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tNGA, 10th phase (28Aug2020 - 16Sep2020): finished  571 trials in 0 min 20 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tGIN,  8th phase (06Aug2020 - 16Aug2020): finished 1474 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tIRN,  7th phase (14Jul2020 - 28Jul2020): finished  327 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tITA,  7th phase (22May2020 - 13Jun2020): finished  459 trials in 0 min 15 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tBHR,  0th phase (06Mar2020 - 06May2020): finished 1407 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tRUS,  5th phase (14Jun2020 - 23Jun2020): finished 1458 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tBHR,  3rd phase (12Jun2020 - 21Jun2020): finished 1493 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tFRA,  0th phase (12Feb2020 - 23Mar2020): finished 1446 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tKWT,  4th phase (22Jun2020 - 03Jul2020): finished 1526 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tUSA,  4th phase (25Jun2020 - 06Jul2020): finished 1498 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tTUR,  4th phase (23May2020 - 12Jun2020): finished 1453 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tMEX,  4th phase (07Jul2020 - 17Jul2020): finished 1128 trials in 0 min 45 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tMEX,  9th phase (25Aug2020 - 03Sep2020): finished 1432 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tGEO,  2nd phase (29Apr2020 - 13May2020): finished 1442 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tUSA,  2nd phase (12May2020 - 04Jun2020): finished 1446 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tGEO,  6th phase (06Jul2020 - 21Jul2020): finished 1464 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tITA,  8th phase (14Jun2020 - 30Jul2020): finished  436 trials in 0 min 15 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tRUS,  2nd phase (18May2020 - 27May2020): finished 1466 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tKWT,  0th phase (08Mar2020 - 14May2020): finished 1359 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tROU,  9th phase (27Aug2020 - 04Sep2020): finished  318 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tPRT,  2nd phase (18May2020 - 01Jun2020): finished 1463 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tBHR,  2nd phase (01Jun2020 - 11Jun2020): finished 1451 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tROU, 10th phase (05Sep2020 - 16Sep2020): finished 1467 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tEST,  9th phase (31Aug2020 - 07Sep2020): finished 1450 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tITA,  6th phase (10May2020 - 21May2020): finished  457 trials in 0 min 15 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tBGD,  3rd phase (20Jun2020 - 28Jun2020): finished 1461 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tROU,  4th phase (13Jul2020 - 23Jul2020): finished 1457 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tTUR,  1st phase (17Apr2020 - 29Apr2020): finished 1464 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tRUS, 10th phase (15Aug2020 - 29Aug2020): finished 1439 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tGIN,  1st phase (01May2020 - 11May2020): finished 1442 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tROU,  5th phase (24Jul2020 - 01Aug2020): finished  452 trials in 0 min 15 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tARE,  7th phase (02Jul2020 - 11Jul2020): finished 1423 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tBRA,  2nd phase (15Jun2020 - 26Jun2020): finished  484 trials in 0 min 15 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tGIN,  9th phase (17Aug2020 - 30Aug2020): finished 1427 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tBRA,  1st phase (27May2020 - 14Jun2020): finished 1438 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tROU,  7th phase (10Aug2020 - 17Aug2020): finished 1453 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tKWT,  6th phase (15Jul2020 - 26Jul2020): finished  309 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tGIN,  6th phase (09Jul2020 - 22Jul2020): finished 1439 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tPER,  9th phase (27Aug2020 - 03Sep2020): finished 1424 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tKWT,  2nd phase (28May2020 - 07Jun2020): finished 1406 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tFRA,  2nd phase (03Apr2020 - 12Apr2020): finished 1407 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tMEX,  6th phase (28Jul2020 - 04Aug2020): finished 1397 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tFRA,  6th phase (28May2020 - 26Jun2020): finished 1384 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tPRT,  1st phase (29Apr2020 - 17May2020): finished 1406 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tEST,  0th phase (15Mar2020 - 07Apr2020): finished 1412 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tNGA,  6th phase (21Jul2020 - 28Jul2020): finished  155 trials in 0 min  5 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tBHR,  9th phase (23Aug2020 - 05Sep2020): finished 1407 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tNGA,  7th phase (29Jul2020 - 07Aug2020): finished 1382 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tRUS,  7th phase (05Jul2020 - 17Jul2020): finished 1561 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tBFA,  4th phase (05May2020 - 20May2020): finished 1551 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tNGA,  9th phase (18Aug2020 - 27Aug2020): finished 1592 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tITA, 10th phase (29Aug2020 - 16Sep2020): finished 1829 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tPER,  8th phase (19Aug2020 - 26Aug2020): finished 1843 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tGIN, 10th phase (31Aug2020 - 16Sep2020): finished  448 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tIRN,  4th phase (01Jun2020 - 15Jun2020): finished 1883 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tIRN,  3rd phase (13May2020 - 31May2020): finished  147 trials in 0 min  5 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tMEX,  3rd phase (24Jun2020 - 06Jul2020): finished 1496 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tTUR,  5th phase (13Jun2020 - 26Jun2020): finished 1390 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tNGA,  1st phase (21May2020 - 08Jun2020): finished 1347 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tPRT,  7th phase (20Jul2020 - 06Aug2020): finished 1471 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tARE,  2nd phase (13May2020 - 20May2020): finished 1558 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tMEX,  0th phase (03Mar2020 - 22May2020): finished 1647 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "Completed optimization. Total: 41 min 54 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      }
     ],
     "prompt_number": 11
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "# Show summary\n",
      "analyser.summary(countries=countries_show)"
     ],
     "language": "python",
     "metadata": {},
     "outputs": [
      {
       "html": [
        "<div>\n",
        "<style scoped>\n",
        "    .dataframe tbody tr th:only-of-type {\n",
        "        vertical-align: middle;\n",
        "    }\n",
        "\n",
        "    .dataframe tbody tr th {\n",
        "        vertical-align: top;\n",
        "    }\n",
        "\n",
        "    .dataframe thead th {\n",
        "        text-align: right;\n",
        "    }\n",
        "</style>\n",
        "<table border=\"1\" class=\"dataframe\">\n",
        "  <thead>\n",
        "    <tr style=\"text-align: right;\">\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th>Type</th>\n",
        "      <th>Start</th>\n",
        "      <th>End</th>\n",
        "      <th>Population</th>\n",
        "      <th>ODE</th>\n",
        "      <th>Rt</th>\n",
        "      <th>theta</th>\n",
        "      <th>kappa</th>\n",
        "      <th>rho</th>\n",
        "      <th>sigma</th>\n",
        "      <th>tau</th>\n",
        "      <th>alpha1 [-]</th>\n",
        "      <th>1/beta [day]</th>\n",
        "      <th>1/alpha2 [day]</th>\n",
        "      <th>1/gamma [day]</th>\n",
        "      <th>RMSLE</th>\n",
        "      <th>Trials</th>\n",
        "      <th>Runtime</th>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>Country</th>\n",
        "      <th>Phase</th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "    </tr>\n",
        "  </thead>\n",
        "  <tbody>\n",
        "    <tr>\n",
        "      <th rowspan=\"12\" valign=\"top\">Russia</th>\n",
        "      <th>0th</th>\n",
        "      <td>Past</td>\n",
        "      <td>12Feb2020</td>\n",
        "      <td>06May2020</td>\n",
        "      <td>330457362</td>\n",
        "      <td>SIR-F</td>\n",
        "      <td>0.02</td>\n",
        "      <td>0.602763</td>\n",
        "      <td>0.544883</td>\n",
        "      <td>0.0340813</td>\n",
        "      <td>0.00229851</td>\n",
        "      <td>360</td>\n",
        "      <td>0.603</td>\n",
        "      <td>7</td>\n",
        "      <td>0</td>\n",
        "      <td>108</td>\n",
        "      <td>18.9667</td>\n",
        "      <td>1408</td>\n",
        "      <td>1 min  0 sec</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>1st</th>\n",
        "      <td>Past</td>\n",
        "      <td>07May2020</td>\n",
        "      <td>17May2020</td>\n",
        "      <td>330457362</td>\n",
        "      <td>SIR-F</td>\n",
        "      <td>2.71</td>\n",
        "      <td>0.00180556</td>\n",
        "      <td>9.34529e-05</td>\n",
        "      <td>0.0131219</td>\n",
        "      <td>0.00473774</td>\n",
        "      <td>360</td>\n",
        "      <td>0.002</td>\n",
        "      <td>19</td>\n",
        "      <td>2675</td>\n",
        "      <td>52</td>\n",
        "      <td>0.0789776</td>\n",
        "      <td>1453</td>\n",
        "      <td>1 min  0 sec</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>2nd</th>\n",
        "      <td>Past</td>\n",
        "      <td>18May2020</td>\n",
        "      <td>27May2020</td>\n",
        "      <td>330457362</td>\n",
        "      <td>SIR-F</td>\n",
        "      <td>1.08</td>\n",
        "      <td>0.00066754</td>\n",
        "      <td>0.000111693</td>\n",
        "      <td>0.0067876</td>\n",
        "      <td>0.00616523</td>\n",
        "      <td>360</td>\n",
        "      <td>0.001</td>\n",
        "      <td>36</td>\n",
        "      <td>2238</td>\n",
        "      <td>40</td>\n",
        "      <td>0.0959827</td>\n",
        "      <td>1466</td>\n",
        "      <td>1 min  0 sec</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>3rd</th>\n",
        "      <td>Past</td>\n",
        "      <td>28May2020</td>\n",
        "      <td>05Jun2020</td>\n",
        "      <td>330457362</td>\n",
        "      <td>SIR-F</td>\n",
        "      <td>1.1</td>\n",
        "      <td>0.000596242</td>\n",
        "      <td>0.000113634</td>\n",
        "      <td>0.0051706</td>\n",
        "      <td>0.00457356</td>\n",
        "      <td>360</td>\n",
        "      <td>0.001</td>\n",
        "      <td>48</td>\n",
        "      <td>2200</td>\n",
        "      <td>54</td>\n",
        "      <td>0.0627844</td>\n",
        "      <td>1442</td>\n",
        "      <td>1 min  0 sec</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>4th</th>\n",
        "      <td>Past</td>\n",
        "      <td>06Jun2020</td>\n",
        "      <td>13Jun2020</td>\n",
        "      <td>330457362</td>\n",
        "      <td>SIR-F</td>\n",
        "      <td>1.05</td>\n",
        "      <td>0.000827413</td>\n",
        "      <td>8.45167e-05</td>\n",
        "      <td>0.00442345</td>\n",
        "      <td>0.0041098</td>\n",
        "      <td>360</td>\n",
        "      <td>0.001</td>\n",
        "      <td>56</td>\n",
        "      <td>2957</td>\n",
        "      <td>60</td>\n",
        "      <td>0.0451797</td>\n",
        "      <td>1582</td>\n",
        "      <td>1 min  0 sec</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>5th</th>\n",
        "      <td>Past</td>\n",
        "      <td>14Jun2020</td>\n",
        "      <td>23Jun2020</td>\n",
        "      <td>330457362</td>\n",
        "      <td>SIR-F</td>\n",
        "      <td>0.82</td>\n",
        "      <td>0.000348462</td>\n",
        "      <td>7.90578e-05</td>\n",
        "      <td>0.00346657</td>\n",
        "      <td>0.0041384</td>\n",
        "      <td>360</td>\n",
        "      <td>0</td>\n",
        "      <td>72</td>\n",
        "      <td>3162</td>\n",
        "      <td>60</td>\n",
        "      <td>0.0638472</td>\n",
        "      <td>1458</td>\n",
        "      <td>1 min  0 sec</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>6th</th>\n",
        "      <td>Past</td>\n",
        "      <td>24Jun2020</td>\n",
        "      <td>04Jul2020</td>\n",
        "      <td>330457362</td>\n",
        "      <td>SIR-F</td>\n",
        "      <td>0.94</td>\n",
        "      <td>0.0188683</td>\n",
        "      <td>1.10558e-05</td>\n",
        "      <td>0.00256772</td>\n",
        "      <td>0.00267148</td>\n",
        "      <td>360</td>\n",
        "      <td>0.019</td>\n",
        "      <td>97</td>\n",
        "      <td>22612</td>\n",
        "      <td>93</td>\n",
        "      <td>0.0500926</td>\n",
        "      <td>1387</td>\n",
        "      <td>1 min  0 sec</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>7th</th>\n",
        "      <td>Past</td>\n",
        "      <td>05Jul2020</td>\n",
        "      <td>17Jul2020</td>\n",
        "      <td>330457362</td>\n",
        "      <td>SIR-F</td>\n",
        "      <td>0.72</td>\n",
        "      <td>0.000479549</td>\n",
        "      <td>5.02049e-05</td>\n",
        "      <td>0.00219876</td>\n",
        "      <td>0.0030127</td>\n",
        "      <td>360</td>\n",
        "      <td>0</td>\n",
        "      <td>113</td>\n",
        "      <td>4979</td>\n",
        "      <td>82</td>\n",
        "      <td>0.0718256</td>\n",
        "      <td>1561</td>\n",
        "      <td>1 min  0 sec</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>8th</th>\n",
        "      <td>Past</td>\n",
        "      <td>18Jul2020</td>\n",
        "      <td>31Jul2020</td>\n",
        "      <td>330457362</td>\n",
        "      <td>SIR-F</td>\n",
        "      <td>0.76</td>\n",
        "      <td>3.08038e-05</td>\n",
        "      <td>4.07714e-05</td>\n",
        "      <td>0.00183396</td>\n",
        "      <td>0.00237691</td>\n",
        "      <td>360</td>\n",
        "      <td>0</td>\n",
        "      <td>136</td>\n",
        "      <td>6131</td>\n",
        "      <td>105</td>\n",
        "      <td>0.060525</td>\n",
        "      <td>1406</td>\n",
        "      <td>1 min  0 sec</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>9th</th>\n",
        "      <td>Past</td>\n",
        "      <td>01Aug2020</td>\n",
        "      <td>14Aug2020</td>\n",
        "      <td>330457362</td>\n",
        "      <td>SIR-F</td>\n",
        "      <td>0.76</td>\n",
        "      <td>0.00141602</td>\n",
        "      <td>3.12519e-05</td>\n",
        "      <td>0.00146767</td>\n",
        "      <td>0.00188923</td>\n",
        "      <td>360</td>\n",
        "      <td>0.001</td>\n",
        "      <td>170</td>\n",
        "      <td>7999</td>\n",
        "      <td>132</td>\n",
        "      <td>0.0489869</td>\n",
        "      <td>1331</td>\n",
        "      <td>1 min  0 sec</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>10th</th>\n",
        "      <td>Past</td>\n",
        "      <td>15Aug2020</td>\n",
        "      <td>29Aug2020</td>\n",
        "      <td>330457362</td>\n",
        "      <td>SIR-F</td>\n",
        "      <td>0.75</td>\n",
        "      <td>0.0301676</td>\n",
        "      <td>1.10623e-05</td>\n",
        "      <td>0.00128421</td>\n",
        "      <td>0.00165287</td>\n",
        "      <td>360</td>\n",
        "      <td>0.03</td>\n",
        "      <td>194</td>\n",
        "      <td>22599</td>\n",
        "      <td>151</td>\n",
        "      <td>0.0464107</td>\n",
        "      <td>1439</td>\n",
        "      <td>1 min  0 sec</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>11th</th>\n",
        "      <td>Past</td>\n",
        "      <td>30Aug2020</td>\n",
        "      <td>16Sep2020</td>\n",
        "      <td>330457362</td>\n",
        "      <td>SIR-F</td>\n",
        "      <td>0.98</td>\n",
        "      <td>0.0196291</td>\n",
        "      <td>1.10662e-05</td>\n",
        "      <td>0.00134508</td>\n",
        "      <td>0.00133372</td>\n",
        "      <td>360</td>\n",
        "      <td>0.02</td>\n",
        "      <td>185</td>\n",
        "      <td>22591</td>\n",
        "      <td>187</td>\n",
        "      <td>0.0187865</td>\n",
        "      <td>1360</td>\n",
        "      <td>1 min  0 sec</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th rowspan=\"12\" valign=\"top\">United Arab Emirates</th>\n",
        "      <th>0th</th>\n",
        "      <td>Past</td>\n",
        "      <td>12Feb2020</td>\n",
        "      <td>25Apr2020</td>\n",
        "      <td>9630959</td>\n",
        "      <td>SIR-F</td>\n",
        "      <td>5.7</td>\n",
        "      <td>0.00143517</td>\n",
        "      <td>1.00218e-05</td>\n",
        "      <td>0.0226481</td>\n",
        "      <td>0.003957</td>\n",
        "      <td>360</td>\n",
        "      <td>0.001</td>\n",
        "      <td>11</td>\n",
        "      <td>24945</td>\n",
        "      <td>63</td>\n",
        "      <td>3.59745</td>\n",
        "      <td>1395</td>\n",
        "      <td>1 min  0 sec</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>1st</th>\n",
        "      <td>Past</td>\n",
        "      <td>26Apr2020</td>\n",
        "      <td>12May2020</td>\n",
        "      <td>9630959</td>\n",
        "      <td>SIR-F</td>\n",
        "      <td>3.27</td>\n",
        "      <td>0.00111625</td>\n",
        "      <td>0.000161783</td>\n",
        "      <td>0.0138195</td>\n",
        "      <td>0.00406553</td>\n",
        "      <td>360</td>\n",
        "      <td>0.001</td>\n",
        "      <td>18</td>\n",
        "      <td>1545</td>\n",
        "      <td>61</td>\n",
        "      <td>0.0929266</td>\n",
        "      <td>1486</td>\n",
        "      <td>1 min  0 sec</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>2nd</th>\n",
        "      <td>Past</td>\n",
        "      <td>13May2020</td>\n",
        "      <td>20May2020</td>\n",
        "      <td>9630959</td>\n",
        "      <td>SIR-F</td>\n",
        "      <td>1.29</td>\n",
        "      <td>0.000158845</td>\n",
        "      <td>5.96006e-05</td>\n",
        "      <td>0.0134786</td>\n",
        "      <td>0.0104185</td>\n",
        "      <td>360</td>\n",
        "      <td>0</td>\n",
        "      <td>18</td>\n",
        "      <td>4194</td>\n",
        "      <td>23</td>\n",
        "      <td>0.0367868</td>\n",
        "      <td>1558</td>\n",
        "      <td>1 min  0 sec</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>3rd</th>\n",
        "      <td>Past</td>\n",
        "      <td>21May2020</td>\n",
        "      <td>28May2020</td>\n",
        "      <td>9630959</td>\n",
        "      <td>SIR-F</td>\n",
        "      <td>1.61</td>\n",
        "      <td>0.000148922</td>\n",
        "      <td>5.02104e-05</td>\n",
        "      <td>0.0138476</td>\n",
        "      <td>0.00853231</td>\n",
        "      <td>360</td>\n",
        "      <td>0</td>\n",
        "      <td>18</td>\n",
        "      <td>4979</td>\n",
        "      <td>29</td>\n",
        "      <td>0.0344231</td>\n",
        "      <td>1786</td>\n",
        "      <td>1 min  0 sec</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>4th</th>\n",
        "      <td>Past</td>\n",
        "      <td>29May2020</td>\n",
        "      <td>07Jun2020</td>\n",
        "      <td>9630959</td>\n",
        "      <td>SIR-F</td>\n",
        "      <td>1.29</td>\n",
        "      <td>0.000678986</td>\n",
        "      <td>2.12578e-05</td>\n",
        "      <td>0.00936158</td>\n",
        "      <td>0.00722908</td>\n",
        "      <td>360</td>\n",
        "      <td>0.001</td>\n",
        "      <td>26</td>\n",
        "      <td>11760</td>\n",
        "      <td>34</td>\n",
        "      <td>0.0160363</td>\n",
        "      <td>1000</td>\n",
        "      <td>0 min 30 sec</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>5th</th>\n",
        "      <td>Past</td>\n",
        "      <td>08Jun2020</td>\n",
        "      <td>19Jun2020</td>\n",
        "      <td>9630959</td>\n",
        "      <td>-</td>\n",
        "      <td>-</td>\n",
        "      <td>-</td>\n",
        "      <td>-</td>\n",
        "      <td>-</td>\n",
        "      <td>-</td>\n",
        "      <td>-</td>\n",
        "      <td>-</td>\n",
        "      <td>-</td>\n",
        "      <td>-</td>\n",
        "      <td>-</td>\n",
        "      <td>-</td>\n",
        "      <td>-</td>\n",
        "      <td>-</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>6th</th>\n",
        "      <td>Past</td>\n",
        "      <td>20Jun2020</td>\n",
        "      <td>01Jul2020</td>\n",
        "      <td>9630959</td>\n",
        "      <td>SIR-F</td>\n",
        "      <td>0.67</td>\n",
        "      <td>0.00124423</td>\n",
        "      <td>2.49591e-05</td>\n",
        "      <td>0.00940956</td>\n",
        "      <td>0.0140251</td>\n",
        "      <td>360</td>\n",
        "      <td>0.001</td>\n",
        "      <td>26</td>\n",
        "      <td>10016</td>\n",
        "      <td>17</td>\n",
        "      <td>0.0200244</td>\n",
        "      <td>743</td>\n",
        "      <td>0 min 25 sec</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>7th</th>\n",
        "      <td>Past</td>\n",
        "      <td>02Jul2020</td>\n",
        "      <td>11Jul2020</td>\n",
        "      <td>9630959</td>\n",
        "      <td>SIR-F</td>\n",
        "      <td>0.9</td>\n",
        "      <td>0.000661366</td>\n",
        "      <td>3.69021e-05</td>\n",
        "      <td>0.0148219</td>\n",
        "      <td>0.0164648</td>\n",
        "      <td>360</td>\n",
        "      <td>0.001</td>\n",
        "      <td>16</td>\n",
        "      <td>6774</td>\n",
        "      <td>15</td>\n",
        "      <td>0.0292412</td>\n",
        "      <td>1423</td>\n",
        "      <td>1 min  0 sec</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>8th</th>\n",
        "      <td>Past</td>\n",
        "      <td>12Jul2020</td>\n",
        "      <td>27Jul2020</td>\n",
        "      <td>9630959</td>\n",
        "      <td>SIR-F</td>\n",
        "      <td>0.65</td>\n",
        "      <td>0.00341762</td>\n",
        "      <td>1.85682e-06</td>\n",
        "      <td>0.0101174</td>\n",
        "      <td>0.0155431</td>\n",
        "      <td>360</td>\n",
        "      <td>0.003</td>\n",
        "      <td>24</td>\n",
        "      <td>134638</td>\n",
        "      <td>16</td>\n",
        "      <td>0.0590767</td>\n",
        "      <td>300</td>\n",
        "      <td>0 min 10 sec</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>9th</th>\n",
        "      <td>Past</td>\n",
        "      <td>28Jul2020</td>\n",
        "      <td>17Aug2020</td>\n",
        "      <td>9630959</td>\n",
        "      <td>SIR-F</td>\n",
        "      <td>0.97</td>\n",
        "      <td>0.000669992</td>\n",
        "      <td>3.69059e-05</td>\n",
        "      <td>0.0112536</td>\n",
        "      <td>0.0115785</td>\n",
        "      <td>360</td>\n",
        "      <td>0.001</td>\n",
        "      <td>22</td>\n",
        "      <td>6773</td>\n",
        "      <td>21</td>\n",
        "      <td>0.0576568</td>\n",
        "      <td>582</td>\n",
        "      <td>0 min 20 sec</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>10th</th>\n",
        "      <td>Past</td>\n",
        "      <td>18Aug2020</td>\n",
        "      <td>31Aug2020</td>\n",
        "      <td>9630959</td>\n",
        "      <td>-</td>\n",
        "      <td>-</td>\n",
        "      <td>-</td>\n",
        "      <td>-</td>\n",
        "      <td>-</td>\n",
        "      <td>-</td>\n",
        "      <td>-</td>\n",
        "      <td>-</td>\n",
        "      <td>-</td>\n",
        "      <td>-</td>\n",
        "      <td>-</td>\n",
        "      <td>-</td>\n",
        "      <td>-</td>\n",
        "      <td>-</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>11th</th>\n",
        "      <td>Past</td>\n",
        "      <td>01Sep2020</td>\n",
        "      <td>16Sep2020</td>\n",
        "      <td>9630959</td>\n",
        "      <td>-</td>\n",
        "      <td>-</td>\n",
        "      <td>-</td>\n",
        "      <td>-</td>\n",
        "      <td>-</td>\n",
        "      <td>-</td>\n",
        "      <td>-</td>\n",
        "      <td>-</td>\n",
        "      <td>-</td>\n",
        "      <td>-</td>\n",
        "      <td>-</td>\n",
        "      <td>-</td>\n",
        "      <td>-</td>\n",
        "      <td>-</td>\n",
        "    </tr>\n",
        "  </tbody>\n",
        "</table>\n",
        "</div>"
       ],
       "output_type": "pyout",
       "prompt_number": 12,
       "text": [
        "                            Type      Start        End  Population    ODE  \\\n",
        "Country              Phase                                                  \n",
        "Russia               0th    Past  12Feb2020  06May2020   330457362  SIR-F   \n",
        "                     1st    Past  07May2020  17May2020   330457362  SIR-F   \n",
        "                     2nd    Past  18May2020  27May2020   330457362  SIR-F   \n",
        "                     3rd    Past  28May2020  05Jun2020   330457362  SIR-F   \n",
        "                     4th    Past  06Jun2020  13Jun2020   330457362  SIR-F   \n",
        "                     5th    Past  14Jun2020  23Jun2020   330457362  SIR-F   \n",
        "                     6th    Past  24Jun2020  04Jul2020   330457362  SIR-F   \n",
        "                     7th    Past  05Jul2020  17Jul2020   330457362  SIR-F   \n",
        "                     8th    Past  18Jul2020  31Jul2020   330457362  SIR-F   \n",
        "                     9th    Past  01Aug2020  14Aug2020   330457362  SIR-F   \n",
        "                     10th   Past  15Aug2020  29Aug2020   330457362  SIR-F   \n",
        "                     11th   Past  30Aug2020  16Sep2020   330457362  SIR-F   \n",
        "United Arab Emirates 0th    Past  12Feb2020  25Apr2020     9630959  SIR-F   \n",
        "                     1st    Past  26Apr2020  12May2020     9630959  SIR-F   \n",
        "                     2nd    Past  13May2020  20May2020     9630959  SIR-F   \n",
        "                     3rd    Past  21May2020  28May2020     9630959  SIR-F   \n",
        "                     4th    Past  29May2020  07Jun2020     9630959  SIR-F   \n",
        "                     5th    Past  08Jun2020  19Jun2020     9630959      -   \n",
        "                     6th    Past  20Jun2020  01Jul2020     9630959  SIR-F   \n",
        "                     7th    Past  02Jul2020  11Jul2020     9630959  SIR-F   \n",
        "                     8th    Past  12Jul2020  27Jul2020     9630959  SIR-F   \n",
        "                     9th    Past  28Jul2020  17Aug2020     9630959  SIR-F   \n",
        "                     10th   Past  18Aug2020  31Aug2020     9630959      -   \n",
        "                     11th   Past  01Sep2020  16Sep2020     9630959      -   \n",
        "\n",
        "                              Rt        theta        kappa         rho  \\\n",
        "Country              Phase                                               \n",
        "Russia               0th    0.02     0.602763     0.544883   0.0340813   \n",
        "                     1st    2.71   0.00180556  9.34529e-05   0.0131219   \n",
        "                     2nd    1.08   0.00066754  0.000111693   0.0067876   \n",
        "                     3rd     1.1  0.000596242  0.000113634   0.0051706   \n",
        "                     4th    1.05  0.000827413  8.45167e-05  0.00442345   \n",
        "                     5th    0.82  0.000348462  7.90578e-05  0.00346657   \n",
        "                     6th    0.94    0.0188683  1.10558e-05  0.00256772   \n",
        "                     7th    0.72  0.000479549  5.02049e-05  0.00219876   \n",
        "                     8th    0.76  3.08038e-05  4.07714e-05  0.00183396   \n",
        "                     9th    0.76   0.00141602  3.12519e-05  0.00146767   \n",
        "                     10th   0.75    0.0301676  1.10623e-05  0.00128421   \n",
        "                     11th   0.98    0.0196291  1.10662e-05  0.00134508   \n",
        "United Arab Emirates 0th     5.7   0.00143517  1.00218e-05   0.0226481   \n",
        "                     1st    3.27   0.00111625  0.000161783   0.0138195   \n",
        "                     2nd    1.29  0.000158845  5.96006e-05   0.0134786   \n",
        "                     3rd    1.61  0.000148922  5.02104e-05   0.0138476   \n",
        "                     4th    1.29  0.000678986  2.12578e-05  0.00936158   \n",
        "                     5th       -            -            -           -   \n",
        "                     6th    0.67   0.00124423  2.49591e-05  0.00940956   \n",
        "                     7th     0.9  0.000661366  3.69021e-05   0.0148219   \n",
        "                     8th    0.65   0.00341762  1.85682e-06   0.0101174   \n",
        "                     9th    0.97  0.000669992  3.69059e-05   0.0112536   \n",
        "                     10th      -            -            -           -   \n",
        "                     11th      -            -            -           -   \n",
        "\n",
        "                                 sigma  tau alpha1 [-] 1/beta [day]  \\\n",
        "Country              Phase                                            \n",
        "Russia               0th    0.00229851  360      0.603            7   \n",
        "                     1st    0.00473774  360      0.002           19   \n",
        "                     2nd    0.00616523  360      0.001           36   \n",
        "                     3rd    0.00457356  360      0.001           48   \n",
        "                     4th     0.0041098  360      0.001           56   \n",
        "                     5th     0.0041384  360          0           72   \n",
        "                     6th    0.00267148  360      0.019           97   \n",
        "                     7th     0.0030127  360          0          113   \n",
        "                     8th    0.00237691  360          0          136   \n",
        "                     9th    0.00188923  360      0.001          170   \n",
        "                     10th   0.00165287  360       0.03          194   \n",
        "                     11th   0.00133372  360       0.02          185   \n",
        "United Arab Emirates 0th      0.003957  360      0.001           11   \n",
        "                     1st    0.00406553  360      0.001           18   \n",
        "                     2nd     0.0104185  360          0           18   \n",
        "                     3rd    0.00853231  360          0           18   \n",
        "                     4th    0.00722908  360      0.001           26   \n",
        "                     5th             -    -          -            -   \n",
        "                     6th     0.0140251  360      0.001           26   \n",
        "                     7th     0.0164648  360      0.001           16   \n",
        "                     8th     0.0155431  360      0.003           24   \n",
        "                     9th     0.0115785  360      0.001           22   \n",
        "                     10th            -    -          -            -   \n",
        "                     11th            -    -          -            -   \n",
        "\n",
        "                           1/alpha2 [day] 1/gamma [day]      RMSLE Trials  \\\n",
        "Country              Phase                                                  \n",
        "Russia               0th                0           108    18.9667   1408   \n",
        "                     1st             2675            52  0.0789776   1453   \n",
        "                     2nd             2238            40  0.0959827   1466   \n",
        "                     3rd             2200            54  0.0627844   1442   \n",
        "                     4th             2957            60  0.0451797   1582   \n",
        "                     5th             3162            60  0.0638472   1458   \n",
        "                     6th            22612            93  0.0500926   1387   \n",
        "                     7th             4979            82  0.0718256   1561   \n",
        "                     8th             6131           105   0.060525   1406   \n",
        "                     9th             7999           132  0.0489869   1331   \n",
        "                     10th           22599           151  0.0464107   1439   \n",
        "                     11th           22591           187  0.0187865   1360   \n",
        "United Arab Emirates 0th            24945            63    3.59745   1395   \n",
        "                     1st             1545            61  0.0929266   1486   \n",
        "                     2nd             4194            23  0.0367868   1558   \n",
        "                     3rd             4979            29  0.0344231   1786   \n",
        "                     4th            11760            34  0.0160363   1000   \n",
        "                     5th                -             -          -      -   \n",
        "                     6th            10016            17  0.0200244    743   \n",
        "                     7th             6774            15  0.0292412   1423   \n",
        "                     8th           134638            16  0.0590767    300   \n",
        "                     9th             6773            21  0.0576568    582   \n",
        "                     10th               -             -          -      -   \n",
        "                     11th               -             -          -      -   \n",
        "\n",
        "                                 Runtime  \n",
        "Country              Phase                \n",
        "Russia               0th    1 min  0 sec  \n",
        "                     1st    1 min  0 sec  \n",
        "                     2nd    1 min  0 sec  \n",
        "                     3rd    1 min  0 sec  \n",
        "                     4th    1 min  0 sec  \n",
        "                     5th    1 min  0 sec  \n",
        "                     6th    1 min  0 sec  \n",
        "                     7th    1 min  0 sec  \n",
        "                     8th    1 min  0 sec  \n",
        "                     9th    1 min  0 sec  \n",
        "                     10th   1 min  0 sec  \n",
        "                     11th   1 min  0 sec  \n",
        "United Arab Emirates 0th    1 min  0 sec  \n",
        "                     1st    1 min  0 sec  \n",
        "                     2nd    1 min  0 sec  \n",
        "                     3rd    1 min  0 sec  \n",
        "                     4th    0 min 30 sec  \n",
        "                     5th               -  \n",
        "                     6th    0 min 25 sec  \n",
        "                     7th    1 min  0 sec  \n",
        "                     8th    0 min 10 sec  \n",
        "                     9th    0 min 20 sec  \n",
        "                     10th              -  \n",
        "                     11th              -  "
       ]
      }
     ],
     "prompt_number": 12
    },
    {
     "cell_type": "markdown",
     "metadata": {},
     "source": [
      "## Compare the history of parameters\n",
      "Here, compare the history of parameter values if countries."
     ]
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "# All parameter/day parameter/Rt/OxCGRT\n",
      "analyser.track().head()"
     ],
     "language": "python",
     "metadata": {},
     "outputs": [
      {
       "html": [
        "<div>\n",
        "<style scoped>\n",
        "    .dataframe tbody tr th:only-of-type {\n",
        "        vertical-align: middle;\n",
        "    }\n",
        "\n",
        "    .dataframe tbody tr th {\n",
        "        vertical-align: top;\n",
        "    }\n",
        "\n",
        "    .dataframe thead th {\n",
        "        text-align: right;\n",
        "    }\n",
        "</style>\n",
        "<table border=\"1\" class=\"dataframe\">\n",
        "  <thead>\n",
        "    <tr style=\"text-align: right;\">\n",
        "      <th></th>\n",
        "      <th>Date</th>\n",
        "      <th>Country</th>\n",
        "      <th>theta</th>\n",
        "      <th>kappa</th>\n",
        "      <th>rho</th>\n",
        "      <th>sigma</th>\n",
        "      <th>alpha1 [-]</th>\n",
        "      <th>1/alpha2 [day]</th>\n",
        "      <th>1/beta [day]</th>\n",
        "      <th>1/gamma [day]</th>\n",
        "      <th>...</th>\n",
        "      <th>Cancel_events</th>\n",
        "      <th>Gatherings_restrictions</th>\n",
        "      <th>Transport_closing</th>\n",
        "      <th>Stay_home_restrictions</th>\n",
        "      <th>Internal_movement_restrictions</th>\n",
        "      <th>International_movement_restrictions</th>\n",
        "      <th>Information_campaigns</th>\n",
        "      <th>Testing_policy</th>\n",
        "      <th>Contact_tracing</th>\n",
        "      <th>Stringency_index</th>\n",
        "    </tr>\n",
        "  </thead>\n",
        "  <tbody>\n",
        "    <tr>\n",
        "      <th>0</th>\n",
        "      <td>2020-03-18</td>\n",
        "      <td>Nigeria</td>\n",
        "      <td>0.0212103</td>\n",
        "      <td>0.00125168</td>\n",
        "      <td>0.0338567</td>\n",
        "      <td>0.00502414</td>\n",
        "      <td>0.021</td>\n",
        "      <td>199</td>\n",
        "      <td>7</td>\n",
        "      <td>49</td>\n",
        "      <td>...</td>\n",
        "      <td>1</td>\n",
        "      <td>3</td>\n",
        "      <td>0</td>\n",
        "      <td>0</td>\n",
        "      <td>0</td>\n",
        "      <td>0</td>\n",
        "      <td>2</td>\n",
        "      <td>1</td>\n",
        "      <td>2</td>\n",
        "      <td>25.46</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>1</th>\n",
        "      <td>2020-03-19</td>\n",
        "      <td>Nigeria</td>\n",
        "      <td>0.0212103</td>\n",
        "      <td>0.00125168</td>\n",
        "      <td>0.0338567</td>\n",
        "      <td>0.00502414</td>\n",
        "      <td>0.021</td>\n",
        "      <td>199</td>\n",
        "      <td>7</td>\n",
        "      <td>49</td>\n",
        "      <td>...</td>\n",
        "      <td>1</td>\n",
        "      <td>3</td>\n",
        "      <td>0</td>\n",
        "      <td>0</td>\n",
        "      <td>0</td>\n",
        "      <td>0</td>\n",
        "      <td>2</td>\n",
        "      <td>1</td>\n",
        "      <td>2</td>\n",
        "      <td>25.46</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>2</th>\n",
        "      <td>2020-03-20</td>\n",
        "      <td>Nigeria</td>\n",
        "      <td>0.0212103</td>\n",
        "      <td>0.00125168</td>\n",
        "      <td>0.0338567</td>\n",
        "      <td>0.00502414</td>\n",
        "      <td>0.021</td>\n",
        "      <td>199</td>\n",
        "      <td>7</td>\n",
        "      <td>49</td>\n",
        "      <td>...</td>\n",
        "      <td>2</td>\n",
        "      <td>3</td>\n",
        "      <td>0</td>\n",
        "      <td>0</td>\n",
        "      <td>0</td>\n",
        "      <td>0</td>\n",
        "      <td>2</td>\n",
        "      <td>1</td>\n",
        "      <td>2</td>\n",
        "      <td>33.80</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>3</th>\n",
        "      <td>2020-03-21</td>\n",
        "      <td>Nigeria</td>\n",
        "      <td>0.0212103</td>\n",
        "      <td>0.00125168</td>\n",
        "      <td>0.0338567</td>\n",
        "      <td>0.00502414</td>\n",
        "      <td>0.021</td>\n",
        "      <td>199</td>\n",
        "      <td>7</td>\n",
        "      <td>49</td>\n",
        "      <td>...</td>\n",
        "      <td>2</td>\n",
        "      <td>3</td>\n",
        "      <td>0</td>\n",
        "      <td>0</td>\n",
        "      <td>0</td>\n",
        "      <td>0</td>\n",
        "      <td>2</td>\n",
        "      <td>1</td>\n",
        "      <td>2</td>\n",
        "      <td>33.80</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>4</th>\n",
        "      <td>2020-03-22</td>\n",
        "      <td>Nigeria</td>\n",
        "      <td>0.0212103</td>\n",
        "      <td>0.00125168</td>\n",
        "      <td>0.0338567</td>\n",
        "      <td>0.00502414</td>\n",
        "      <td>0.021</td>\n",
        "      <td>199</td>\n",
        "      <td>7</td>\n",
        "      <td>49</td>\n",
        "      <td>...</td>\n",
        "      <td>2</td>\n",
        "      <td>3</td>\n",
        "      <td>0</td>\n",
        "      <td>0</td>\n",
        "      <td>0</td>\n",
        "      <td>0</td>\n",
        "      <td>2</td>\n",
        "      <td>1</td>\n",
        "      <td>2</td>\n",
        "      <td>33.80</td>\n",
        "    </tr>\n",
        "  </tbody>\n",
        "</table>\n",
        "<p>5 rows \u00d7 23 columns</p>\n",
        "</div>"
       ],
       "output_type": "pyout",
       "prompt_number": 13,
       "text": [
        "        Date  Country      theta       kappa        rho       sigma  \\\n",
        "0 2020-03-18  Nigeria  0.0212103  0.00125168  0.0338567  0.00502414   \n",
        "1 2020-03-19  Nigeria  0.0212103  0.00125168  0.0338567  0.00502414   \n",
        "2 2020-03-20  Nigeria  0.0212103  0.00125168  0.0338567  0.00502414   \n",
        "3 2020-03-21  Nigeria  0.0212103  0.00125168  0.0338567  0.00502414   \n",
        "4 2020-03-22  Nigeria  0.0212103  0.00125168  0.0338567  0.00502414   \n",
        "\n",
        "  alpha1 [-] 1/alpha2 [day] 1/beta [day] 1/gamma [day]  ... Cancel_events  \\\n",
        "0      0.021            199            7            49  ...             1   \n",
        "1      0.021            199            7            49  ...             1   \n",
        "2      0.021            199            7            49  ...             2   \n",
        "3      0.021            199            7            49  ...             2   \n",
        "4      0.021            199            7            49  ...             2   \n",
        "\n",
        "   Gatherings_restrictions  Transport_closing  Stay_home_restrictions  \\\n",
        "0                        3                  0                       0   \n",
        "1                        3                  0                       0   \n",
        "2                        3                  0                       0   \n",
        "3                        3                  0                       0   \n",
        "4                        3                  0                       0   \n",
        "\n",
        "   Internal_movement_restrictions  International_movement_restrictions  \\\n",
        "0                               0                                    0   \n",
        "1                               0                                    0   \n",
        "2                               0                                    0   \n",
        "3                               0                                    0   \n",
        "4                               0                                    0   \n",
        "\n",
        "   Information_campaigns  Testing_policy  Contact_tracing  Stringency_index  \n",
        "0                      2               1                2             25.46  \n",
        "1                      2               1                2             25.46  \n",
        "2                      2               1                2             33.80  \n",
        "3                      2               1                2             33.80  \n",
        "4                      2               1                2             33.80  \n",
        "\n",
        "[5 rows x 23 columns]"
       ]
      }
     ],
     "prompt_number": 13
    },
    {
     "cell_type": "heading",
     "level": 3,
     "metadata": {},
     "source": [
      "$Rt$: Reprodcution number $\\mathrm{[-]}$"
     ]
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "analyser.param_history(\"Rt\", roll_window=None).tail()"
     ],
     "language": "python",
     "metadata": {},
     "outputs": [
      {
       "output_type": "display_data",
       "png": "\n",
       "text": [
        "<Figure size 648x432 with 1 Axes>"
       ]
      },
      {
       "html": [
        "<div>\n",
        "<style scoped>\n",
        "    .dataframe tbody tr th:only-of-type {\n",
        "        vertical-align: middle;\n",
        "    }\n",
        "\n",
        "    .dataframe tbody tr th {\n",
        "        vertical-align: top;\n",
        "    }\n",
        "\n",
        "    .dataframe thead th {\n",
        "        text-align: right;\n",
        "    }\n",
        "</style>\n",
        "<table border=\"1\" class=\"dataframe\">\n",
        "  <thead>\n",
        "    <tr style=\"text-align: right;\">\n",
        "      <th>Country</th>\n",
        "      <th>Bahrain</th>\n",
        "      <th>Bangladesh</th>\n",
        "      <th>Brazil</th>\n",
        "      <th>Burkina Faso</th>\n",
        "      <th>Estonia</th>\n",
        "      <th>France</th>\n",
        "      <th>Georgia</th>\n",
        "      <th>Guinea</th>\n",
        "      <th>Iran</th>\n",
        "      <th>Italy</th>\n",
        "      <th>Kuwait</th>\n",
        "      <th>Mexico</th>\n",
        "      <th>Nigeria</th>\n",
        "      <th>Peru</th>\n",
        "      <th>Portugal</th>\n",
        "      <th>Romania</th>\n",
        "      <th>Russia</th>\n",
        "      <th>Turkey</th>\n",
        "      <th>United Arab Emirates</th>\n",
        "      <th>United States</th>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>Date</th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "    </tr>\n",
        "  </thead>\n",
        "  <tbody>\n",
        "    <tr>\n",
        "      <th>2020-09-12</th>\n",
        "      <td>1.78</td>\n",
        "      <td>0.69</td>\n",
        "      <td>0.91</td>\n",
        "      <td>105.27</td>\n",
        "      <td>1.76</td>\n",
        "      <td>37.49</td>\n",
        "      <td>6.46</td>\n",
        "      <td>0.82</td>\n",
        "      <td>1.2</td>\n",
        "      <td>3.45</td>\n",
        "      <td>1.1</td>\n",
        "      <td>1.07</td>\n",
        "      <td>0.86</td>\n",
        "      <td>0.61</td>\n",
        "      <td>2.29</td>\n",
        "      <td>6.66</td>\n",
        "      <td>0.98</td>\n",
        "      <td>1.51</td>\n",
        "      <td>0.97</td>\n",
        "      <td>2.27</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>2020-09-13</th>\n",
        "      <td>1.78</td>\n",
        "      <td>0.69</td>\n",
        "      <td>0.91</td>\n",
        "      <td>105.27</td>\n",
        "      <td>1.76</td>\n",
        "      <td>37.49</td>\n",
        "      <td>6.46</td>\n",
        "      <td>0.82</td>\n",
        "      <td>1.2</td>\n",
        "      <td>3.45</td>\n",
        "      <td>1.1</td>\n",
        "      <td>1.07</td>\n",
        "      <td>0.86</td>\n",
        "      <td>0.61</td>\n",
        "      <td>2.29</td>\n",
        "      <td>6.66</td>\n",
        "      <td>0.98</td>\n",
        "      <td>1.51</td>\n",
        "      <td>0.97</td>\n",
        "      <td>2.27</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>2020-09-14</th>\n",
        "      <td>1.78</td>\n",
        "      <td>0.69</td>\n",
        "      <td>0.91</td>\n",
        "      <td>105.27</td>\n",
        "      <td>1.76</td>\n",
        "      <td>37.49</td>\n",
        "      <td>6.46</td>\n",
        "      <td>0.82</td>\n",
        "      <td>1.2</td>\n",
        "      <td>3.45</td>\n",
        "      <td>1.1</td>\n",
        "      <td>1.07</td>\n",
        "      <td>0.86</td>\n",
        "      <td>0.61</td>\n",
        "      <td>2.29</td>\n",
        "      <td>6.66</td>\n",
        "      <td>0.98</td>\n",
        "      <td>1.51</td>\n",
        "      <td>0.97</td>\n",
        "      <td>2.27</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>2020-09-15</th>\n",
        "      <td>1.78</td>\n",
        "      <td>0.69</td>\n",
        "      <td>0.91</td>\n",
        "      <td>105.27</td>\n",
        "      <td>1.76</td>\n",
        "      <td>37.49</td>\n",
        "      <td>6.46</td>\n",
        "      <td>0.82</td>\n",
        "      <td>1.2</td>\n",
        "      <td>3.45</td>\n",
        "      <td>1.1</td>\n",
        "      <td>1.07</td>\n",
        "      <td>0.86</td>\n",
        "      <td>0.61</td>\n",
        "      <td>2.29</td>\n",
        "      <td>6.66</td>\n",
        "      <td>0.98</td>\n",
        "      <td>1.51</td>\n",
        "      <td>0.97</td>\n",
        "      <td>2.27</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>2020-09-16</th>\n",
        "      <td>1.78</td>\n",
        "      <td>0.69</td>\n",
        "      <td>0.91</td>\n",
        "      <td>105.27</td>\n",
        "      <td>1.76</td>\n",
        "      <td>37.49</td>\n",
        "      <td>6.46</td>\n",
        "      <td>0.82</td>\n",
        "      <td>1.2</td>\n",
        "      <td>3.45</td>\n",
        "      <td>1.1</td>\n",
        "      <td>1.07</td>\n",
        "      <td>0.86</td>\n",
        "      <td>0.61</td>\n",
        "      <td>2.29</td>\n",
        "      <td>6.66</td>\n",
        "      <td>0.98</td>\n",
        "      <td>1.51</td>\n",
        "      <td>0.97</td>\n",
        "      <td>2.27</td>\n",
        "    </tr>\n",
        "  </tbody>\n",
        "</table>\n",
        "</div>"
       ],
       "output_type": "pyout",
       "prompt_number": 14,
       "text": [
        "Country     Bahrain  Bangladesh  Brazil  Burkina Faso  Estonia  France  \\\n",
        "Date                                                                     \n",
        "2020-09-12     1.78        0.69    0.91        105.27     1.76   37.49   \n",
        "2020-09-13     1.78        0.69    0.91        105.27     1.76   37.49   \n",
        "2020-09-14     1.78        0.69    0.91        105.27     1.76   37.49   \n",
        "2020-09-15     1.78        0.69    0.91        105.27     1.76   37.49   \n",
        "2020-09-16     1.78        0.69    0.91        105.27     1.76   37.49   \n",
        "\n",
        "Country     Georgia  Guinea  Iran  Italy  Kuwait  Mexico  Nigeria  Peru  \\\n",
        "Date                                                                      \n",
        "2020-09-12     6.46    0.82   1.2   3.45     1.1    1.07     0.86  0.61   \n",
        "2020-09-13     6.46    0.82   1.2   3.45     1.1    1.07     0.86  0.61   \n",
        "2020-09-14     6.46    0.82   1.2   3.45     1.1    1.07     0.86  0.61   \n",
        "2020-09-15     6.46    0.82   1.2   3.45     1.1    1.07     0.86  0.61   \n",
        "2020-09-16     6.46    0.82   1.2   3.45     1.1    1.07     0.86  0.61   \n",
        "\n",
        "Country     Portugal  Romania  Russia  Turkey  United Arab Emirates  \\\n",
        "Date                                                                  \n",
        "2020-09-12      2.29     6.66    0.98    1.51                  0.97   \n",
        "2020-09-13      2.29     6.66    0.98    1.51                  0.97   \n",
        "2020-09-14      2.29     6.66    0.98    1.51                  0.97   \n",
        "2020-09-15      2.29     6.66    0.98    1.51                  0.97   \n",
        "2020-09-16      2.29     6.66    0.98    1.51                  0.97   \n",
        "\n",
        "Country     United States  \n",
        "Date                       \n",
        "2020-09-12           2.27  \n",
        "2020-09-13           2.27  \n",
        "2020-09-14           2.27  \n",
        "2020-09-15           2.27  \n",
        "2020-09-16           2.27  "
       ]
      }
     ],
     "prompt_number": 14
    },
    {
     "cell_type": "heading",
     "level": 3,
     "metadata": {},
     "source": [
      "$\\rho$: Effective contact rate $\\mathrm{[-]}$"
     ]
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "analyser.param_history(\"rho\", roll_window=None).tail()"
     ],
     "language": "python",
     "metadata": {},
     "outputs": [
      {
       "output_type": "display_data",
       "png": "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\n",
       "text": [
        "<Figure size 648x432 with 1 Axes>"
       ]
      },
      {
       "html": [
        "<div>\n",
        "<style scoped>\n",
        "    .dataframe tbody tr th:only-of-type {\n",
        "        vertical-align: middle;\n",
        "    }\n",
        "\n",
        "    .dataframe tbody tr th {\n",
        "        vertical-align: top;\n",
        "    }\n",
        "\n",
        "    .dataframe thead th {\n",
        "        text-align: right;\n",
        "    }\n",
        "</style>\n",
        "<table border=\"1\" class=\"dataframe\">\n",
        "  <thead>\n",
        "    <tr style=\"text-align: right;\">\n",
        "      <th>Country</th>\n",
        "      <th>Bahrain</th>\n",
        "      <th>Bangladesh</th>\n",
        "      <th>Brazil</th>\n",
        "      <th>Burkina Faso</th>\n",
        "      <th>Estonia</th>\n",
        "      <th>France</th>\n",
        "      <th>Georgia</th>\n",
        "      <th>Guinea</th>\n",
        "      <th>Iran</th>\n",
        "      <th>Italy</th>\n",
        "      <th>Kuwait</th>\n",
        "      <th>Mexico</th>\n",
        "      <th>Nigeria</th>\n",
        "      <th>Peru</th>\n",
        "      <th>Portugal</th>\n",
        "      <th>Romania</th>\n",
        "      <th>Russia</th>\n",
        "      <th>Turkey</th>\n",
        "      <th>United Arab Emirates</th>\n",
        "      <th>United States</th>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>Date</th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "    </tr>\n",
        "  </thead>\n",
        "  <tbody>\n",
        "    <tr>\n",
        "      <th>2020-09-12</th>\n",
        "      <td>0.030446</td>\n",
        "      <td>0.005284</td>\n",
        "      <td>0.018546</td>\n",
        "      <td>0.002633</td>\n",
        "      <td>0.01626</td>\n",
        "      <td>0.008929</td>\n",
        "      <td>0.032144</td>\n",
        "      <td>0.018395</td>\n",
        "      <td>0.01965</td>\n",
        "      <td>0.011065</td>\n",
        "      <td>0.021367</td>\n",
        "      <td>0.032598</td>\n",
        "      <td>0.003252</td>\n",
        "      <td>0.001735</td>\n",
        "      <td>0.001721</td>\n",
        "      <td>0.004994</td>\n",
        "      <td>0.001345</td>\n",
        "      <td>0.021323</td>\n",
        "      <td>0.011254</td>\n",
        "      <td>0.003234</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>2020-09-13</th>\n",
        "      <td>0.030446</td>\n",
        "      <td>0.005284</td>\n",
        "      <td>0.018546</td>\n",
        "      <td>0.002633</td>\n",
        "      <td>0.01626</td>\n",
        "      <td>0.008929</td>\n",
        "      <td>0.032144</td>\n",
        "      <td>0.018395</td>\n",
        "      <td>0.01965</td>\n",
        "      <td>0.011065</td>\n",
        "      <td>0.021367</td>\n",
        "      <td>0.032598</td>\n",
        "      <td>0.003252</td>\n",
        "      <td>0.001735</td>\n",
        "      <td>0.001721</td>\n",
        "      <td>0.004994</td>\n",
        "      <td>0.001345</td>\n",
        "      <td>0.021323</td>\n",
        "      <td>0.011254</td>\n",
        "      <td>0.003234</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>2020-09-14</th>\n",
        "      <td>0.030446</td>\n",
        "      <td>0.005284</td>\n",
        "      <td>0.018546</td>\n",
        "      <td>0.002633</td>\n",
        "      <td>0.01626</td>\n",
        "      <td>0.008929</td>\n",
        "      <td>0.032144</td>\n",
        "      <td>0.018395</td>\n",
        "      <td>0.01965</td>\n",
        "      <td>0.011065</td>\n",
        "      <td>0.021367</td>\n",
        "      <td>0.032598</td>\n",
        "      <td>0.003252</td>\n",
        "      <td>0.001735</td>\n",
        "      <td>0.001721</td>\n",
        "      <td>0.004994</td>\n",
        "      <td>0.001345</td>\n",
        "      <td>0.021323</td>\n",
        "      <td>0.011254</td>\n",
        "      <td>0.003234</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>2020-09-15</th>\n",
        "      <td>0.030446</td>\n",
        "      <td>0.005284</td>\n",
        "      <td>0.018546</td>\n",
        "      <td>0.002633</td>\n",
        "      <td>0.01626</td>\n",
        "      <td>0.008929</td>\n",
        "      <td>0.032144</td>\n",
        "      <td>0.018395</td>\n",
        "      <td>0.01965</td>\n",
        "      <td>0.011065</td>\n",
        "      <td>0.021367</td>\n",
        "      <td>0.032598</td>\n",
        "      <td>0.003252</td>\n",
        "      <td>0.001735</td>\n",
        "      <td>0.001721</td>\n",
        "      <td>0.004994</td>\n",
        "      <td>0.001345</td>\n",
        "      <td>0.021323</td>\n",
        "      <td>0.011254</td>\n",
        "      <td>0.003234</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>2020-09-16</th>\n",
        "      <td>0.030446</td>\n",
        "      <td>0.005284</td>\n",
        "      <td>0.018546</td>\n",
        "      <td>0.002633</td>\n",
        "      <td>0.01626</td>\n",
        "      <td>0.008929</td>\n",
        "      <td>0.032144</td>\n",
        "      <td>0.018395</td>\n",
        "      <td>0.01965</td>\n",
        "      <td>0.011065</td>\n",
        "      <td>0.021367</td>\n",
        "      <td>0.032598</td>\n",
        "      <td>0.003252</td>\n",
        "      <td>0.001735</td>\n",
        "      <td>0.001721</td>\n",
        "      <td>0.004994</td>\n",
        "      <td>0.001345</td>\n",
        "      <td>0.021323</td>\n",
        "      <td>0.011254</td>\n",
        "      <td>0.003234</td>\n",
        "    </tr>\n",
        "  </tbody>\n",
        "</table>\n",
        "</div>"
       ],
       "output_type": "pyout",
       "prompt_number": 15,
       "text": [
        "Country      Bahrain  Bangladesh    Brazil  Burkina Faso  Estonia    France  \\\n",
        "Date                                                                          \n",
        "2020-09-12  0.030446    0.005284  0.018546      0.002633  0.01626  0.008929   \n",
        "2020-09-13  0.030446    0.005284  0.018546      0.002633  0.01626  0.008929   \n",
        "2020-09-14  0.030446    0.005284  0.018546      0.002633  0.01626  0.008929   \n",
        "2020-09-15  0.030446    0.005284  0.018546      0.002633  0.01626  0.008929   \n",
        "2020-09-16  0.030446    0.005284  0.018546      0.002633  0.01626  0.008929   \n",
        "\n",
        "Country      Georgia    Guinea     Iran     Italy    Kuwait    Mexico  \\\n",
        "Date                                                                    \n",
        "2020-09-12  0.032144  0.018395  0.01965  0.011065  0.021367  0.032598   \n",
        "2020-09-13  0.032144  0.018395  0.01965  0.011065  0.021367  0.032598   \n",
        "2020-09-14  0.032144  0.018395  0.01965  0.011065  0.021367  0.032598   \n",
        "2020-09-15  0.032144  0.018395  0.01965  0.011065  0.021367  0.032598   \n",
        "2020-09-16  0.032144  0.018395  0.01965  0.011065  0.021367  0.032598   \n",
        "\n",
        "Country      Nigeria      Peru  Portugal   Romania    Russia    Turkey  \\\n",
        "Date                                                                     \n",
        "2020-09-12  0.003252  0.001735  0.001721  0.004994  0.001345  0.021323   \n",
        "2020-09-13  0.003252  0.001735  0.001721  0.004994  0.001345  0.021323   \n",
        "2020-09-14  0.003252  0.001735  0.001721  0.004994  0.001345  0.021323   \n",
        "2020-09-15  0.003252  0.001735  0.001721  0.004994  0.001345  0.021323   \n",
        "2020-09-16  0.003252  0.001735  0.001721  0.004994  0.001345  0.021323   \n",
        "\n",
        "Country     United Arab Emirates  United States  \n",
        "Date                                             \n",
        "2020-09-12              0.011254       0.003234  \n",
        "2020-09-13              0.011254       0.003234  \n",
        "2020-09-14              0.011254       0.003234  \n",
        "2020-09-15              0.011254       0.003234  \n",
        "2020-09-16              0.011254       0.003234  "
       ]
      }
     ],
     "prompt_number": 15
    },
    {
     "cell_type": "heading",
     "level": 3,
     "metadata": {},
     "source": [
      "$\\sigma$: Recovery rate $\\mathrm{[-]}$"
     ]
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "analyser.param_history(\"sigma\", roll_window=None).tail()"
     ],
     "language": "python",
     "metadata": {},
     "outputs": [
      {
       "output_type": "display_data",
       "png": "\n",
       "text": [
        "<Figure size 648x432 with 1 Axes>"
       ]
      },
      {
       "html": [
        "<div>\n",
        "<style scoped>\n",
        "    .dataframe tbody tr th:only-of-type {\n",
        "        vertical-align: middle;\n",
        "    }\n",
        "\n",
        "    .dataframe tbody tr th {\n",
        "        vertical-align: top;\n",
        "    }\n",
        "\n",
        "    .dataframe thead th {\n",
        "        text-align: right;\n",
        "    }\n",
        "</style>\n",
        "<table border=\"1\" class=\"dataframe\">\n",
        "  <thead>\n",
        "    <tr style=\"text-align: right;\">\n",
        "      <th>Country</th>\n",
        "      <th>Bahrain</th>\n",
        "      <th>Bangladesh</th>\n",
        "      <th>Brazil</th>\n",
        "      <th>Burkina Faso</th>\n",
        "      <th>Estonia</th>\n",
        "      <th>France</th>\n",
        "      <th>Georgia</th>\n",
        "      <th>Guinea</th>\n",
        "      <th>Iran</th>\n",
        "      <th>Italy</th>\n",
        "      <th>Kuwait</th>\n",
        "      <th>Mexico</th>\n",
        "      <th>Nigeria</th>\n",
        "      <th>Peru</th>\n",
        "      <th>Portugal</th>\n",
        "      <th>Romania</th>\n",
        "      <th>Russia</th>\n",
        "      <th>Turkey</th>\n",
        "      <th>United Arab Emirates</th>\n",
        "      <th>United States</th>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>Date</th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "    </tr>\n",
        "  </thead>\n",
        "  <tbody>\n",
        "    <tr>\n",
        "      <th>2020-09-12</th>\n",
        "      <td>0.017017</td>\n",
        "      <td>0.007557</td>\n",
        "      <td>0.019888</td>\n",
        "      <td>0.0</td>\n",
        "      <td>0.009168</td>\n",
        "      <td>0.000236</td>\n",
        "      <td>0.004927</td>\n",
        "      <td>0.022309</td>\n",
        "      <td>0.015527</td>\n",
        "      <td>0.003121</td>\n",
        "      <td>0.019415</td>\n",
        "      <td>0.027155</td>\n",
        "      <td>0.003693</td>\n",
        "      <td>0.002788</td>\n",
        "      <td>0.000726</td>\n",
        "      <td>0.000645</td>\n",
        "      <td>0.001334</td>\n",
        "      <td>0.013729</td>\n",
        "      <td>0.011579</td>\n",
        "      <td>0.001398</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>2020-09-13</th>\n",
        "      <td>0.017017</td>\n",
        "      <td>0.007557</td>\n",
        "      <td>0.019888</td>\n",
        "      <td>0.0</td>\n",
        "      <td>0.009168</td>\n",
        "      <td>0.000236</td>\n",
        "      <td>0.004927</td>\n",
        "      <td>0.022309</td>\n",
        "      <td>0.015527</td>\n",
        "      <td>0.003121</td>\n",
        "      <td>0.019415</td>\n",
        "      <td>0.027155</td>\n",
        "      <td>0.003693</td>\n",
        "      <td>0.002788</td>\n",
        "      <td>0.000726</td>\n",
        "      <td>0.000645</td>\n",
        "      <td>0.001334</td>\n",
        "      <td>0.013729</td>\n",
        "      <td>0.011579</td>\n",
        "      <td>0.001398</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>2020-09-14</th>\n",
        "      <td>0.017017</td>\n",
        "      <td>0.007557</td>\n",
        "      <td>0.019888</td>\n",
        "      <td>0.0</td>\n",
        "      <td>0.009168</td>\n",
        "      <td>0.000236</td>\n",
        "      <td>0.004927</td>\n",
        "      <td>0.022309</td>\n",
        "      <td>0.015527</td>\n",
        "      <td>0.003121</td>\n",
        "      <td>0.019415</td>\n",
        "      <td>0.027155</td>\n",
        "      <td>0.003693</td>\n",
        "      <td>0.002788</td>\n",
        "      <td>0.000726</td>\n",
        "      <td>0.000645</td>\n",
        "      <td>0.001334</td>\n",
        "      <td>0.013729</td>\n",
        "      <td>0.011579</td>\n",
        "      <td>0.001398</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>2020-09-15</th>\n",
        "      <td>0.017017</td>\n",
        "      <td>0.007557</td>\n",
        "      <td>0.019888</td>\n",
        "      <td>0.0</td>\n",
        "      <td>0.009168</td>\n",
        "      <td>0.000236</td>\n",
        "      <td>0.004927</td>\n",
        "      <td>0.022309</td>\n",
        "      <td>0.015527</td>\n",
        "      <td>0.003121</td>\n",
        "      <td>0.019415</td>\n",
        "      <td>0.027155</td>\n",
        "      <td>0.003693</td>\n",
        "      <td>0.002788</td>\n",
        "      <td>0.000726</td>\n",
        "      <td>0.000645</td>\n",
        "      <td>0.001334</td>\n",
        "      <td>0.013729</td>\n",
        "      <td>0.011579</td>\n",
        "      <td>0.001398</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>2020-09-16</th>\n",
        "      <td>0.017017</td>\n",
        "      <td>0.007557</td>\n",
        "      <td>0.019888</td>\n",
        "      <td>0.0</td>\n",
        "      <td>0.009168</td>\n",
        "      <td>0.000236</td>\n",
        "      <td>0.004927</td>\n",
        "      <td>0.022309</td>\n",
        "      <td>0.015527</td>\n",
        "      <td>0.003121</td>\n",
        "      <td>0.019415</td>\n",
        "      <td>0.027155</td>\n",
        "      <td>0.003693</td>\n",
        "      <td>0.002788</td>\n",
        "      <td>0.000726</td>\n",
        "      <td>0.000645</td>\n",
        "      <td>0.001334</td>\n",
        "      <td>0.013729</td>\n",
        "      <td>0.011579</td>\n",
        "      <td>0.001398</td>\n",
        "    </tr>\n",
        "  </tbody>\n",
        "</table>\n",
        "</div>"
       ],
       "output_type": "pyout",
       "prompt_number": 16,
       "text": [
        "Country      Bahrain  Bangladesh    Brazil  Burkina Faso   Estonia    France  \\\n",
        "Date                                                                           \n",
        "2020-09-12  0.017017    0.007557  0.019888           0.0  0.009168  0.000236   \n",
        "2020-09-13  0.017017    0.007557  0.019888           0.0  0.009168  0.000236   \n",
        "2020-09-14  0.017017    0.007557  0.019888           0.0  0.009168  0.000236   \n",
        "2020-09-15  0.017017    0.007557  0.019888           0.0  0.009168  0.000236   \n",
        "2020-09-16  0.017017    0.007557  0.019888           0.0  0.009168  0.000236   \n",
        "\n",
        "Country      Georgia    Guinea      Iran     Italy    Kuwait    Mexico  \\\n",
        "Date                                                                     \n",
        "2020-09-12  0.004927  0.022309  0.015527  0.003121  0.019415  0.027155   \n",
        "2020-09-13  0.004927  0.022309  0.015527  0.003121  0.019415  0.027155   \n",
        "2020-09-14  0.004927  0.022309  0.015527  0.003121  0.019415  0.027155   \n",
        "2020-09-15  0.004927  0.022309  0.015527  0.003121  0.019415  0.027155   \n",
        "2020-09-16  0.004927  0.022309  0.015527  0.003121  0.019415  0.027155   \n",
        "\n",
        "Country      Nigeria      Peru  Portugal   Romania    Russia    Turkey  \\\n",
        "Date                                                                     \n",
        "2020-09-12  0.003693  0.002788  0.000726  0.000645  0.001334  0.013729   \n",
        "2020-09-13  0.003693  0.002788  0.000726  0.000645  0.001334  0.013729   \n",
        "2020-09-14  0.003693  0.002788  0.000726  0.000645  0.001334  0.013729   \n",
        "2020-09-15  0.003693  0.002788  0.000726  0.000645  0.001334  0.013729   \n",
        "2020-09-16  0.003693  0.002788  0.000726  0.000645  0.001334  0.013729   \n",
        "\n",
        "Country     United Arab Emirates  United States  \n",
        "Date                                             \n",
        "2020-09-12              0.011579       0.001398  \n",
        "2020-09-13              0.011579       0.001398  \n",
        "2020-09-14              0.011579       0.001398  \n",
        "2020-09-15              0.011579       0.001398  \n",
        "2020-09-16              0.011579       0.001398  "
       ]
      }
     ],
     "prompt_number": 16
    },
    {
     "cell_type": "heading",
     "level": 3,
     "metadata": {},
     "source": [
      "$\\kappa$: Mortality rate of infected cases $\\mathrm{[-]}$"
     ]
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "analyser.param_history(\"kappa\", roll_window=None).tail()"
     ],
     "language": "python",
     "metadata": {},
     "outputs": [
      {
       "output_type": "display_data",
       "png": "\n",
       "text": [
        "<Figure size 648x432 with 1 Axes>"
       ]
      },
      {
       "html": [
        "<div>\n",
        "<style scoped>\n",
        "    .dataframe tbody tr th:only-of-type {\n",
        "        vertical-align: middle;\n",
        "    }\n",
        "\n",
        "    .dataframe tbody tr th {\n",
        "        vertical-align: top;\n",
        "    }\n",
        "\n",
        "    .dataframe thead th {\n",
        "        text-align: right;\n",
        "    }\n",
        "</style>\n",
        "<table border=\"1\" class=\"dataframe\">\n",
        "  <thead>\n",
        "    <tr style=\"text-align: right;\">\n",
        "      <th>Country</th>\n",
        "      <th>Bahrain</th>\n",
        "      <th>Bangladesh</th>\n",
        "      <th>Brazil</th>\n",
        "      <th>Burkina Faso</th>\n",
        "      <th>Estonia</th>\n",
        "      <th>France</th>\n",
        "      <th>Georgia</th>\n",
        "      <th>Guinea</th>\n",
        "      <th>Iran</th>\n",
        "      <th>Italy</th>\n",
        "      <th>Kuwait</th>\n",
        "      <th>Mexico</th>\n",
        "      <th>Nigeria</th>\n",
        "      <th>Peru</th>\n",
        "      <th>Portugal</th>\n",
        "      <th>Romania</th>\n",
        "      <th>Russia</th>\n",
        "      <th>Turkey</th>\n",
        "      <th>United Arab Emirates</th>\n",
        "      <th>United States</th>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>Date</th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "    </tr>\n",
        "  </thead>\n",
        "  <tbody>\n",
        "    <tr>\n",
        "      <th>2020-09-12</th>\n",
        "      <td>0.000068</td>\n",
        "      <td>0.000098</td>\n",
        "      <td>0.000026</td>\n",
        "      <td>0.000025</td>\n",
        "      <td>0.000054</td>\n",
        "      <td>0.000002</td>\n",
        "      <td>0.000046</td>\n",
        "      <td>0.000046</td>\n",
        "      <td>0.000149</td>\n",
        "      <td>0.000084</td>\n",
        "      <td>0.000076</td>\n",
        "      <td>0.000266</td>\n",
        "      <td>0.000039</td>\n",
        "      <td>0.000041</td>\n",
        "      <td>0.000025</td>\n",
        "      <td>0.000091</td>\n",
        "      <td>0.000011</td>\n",
        "      <td>0.000361</td>\n",
        "      <td>0.000037</td>\n",
        "      <td>0.000002</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>2020-09-13</th>\n",
        "      <td>0.000068</td>\n",
        "      <td>0.000098</td>\n",
        "      <td>0.000026</td>\n",
        "      <td>0.000025</td>\n",
        "      <td>0.000054</td>\n",
        "      <td>0.000002</td>\n",
        "      <td>0.000046</td>\n",
        "      <td>0.000046</td>\n",
        "      <td>0.000149</td>\n",
        "      <td>0.000084</td>\n",
        "      <td>0.000076</td>\n",
        "      <td>0.000266</td>\n",
        "      <td>0.000039</td>\n",
        "      <td>0.000041</td>\n",
        "      <td>0.000025</td>\n",
        "      <td>0.000091</td>\n",
        "      <td>0.000011</td>\n",
        "      <td>0.000361</td>\n",
        "      <td>0.000037</td>\n",
        "      <td>0.000002</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>2020-09-14</th>\n",
        "      <td>0.000068</td>\n",
        "      <td>0.000098</td>\n",
        "      <td>0.000026</td>\n",
        "      <td>0.000025</td>\n",
        "      <td>0.000054</td>\n",
        "      <td>0.000002</td>\n",
        "      <td>0.000046</td>\n",
        "      <td>0.000046</td>\n",
        "      <td>0.000149</td>\n",
        "      <td>0.000084</td>\n",
        "      <td>0.000076</td>\n",
        "      <td>0.000266</td>\n",
        "      <td>0.000039</td>\n",
        "      <td>0.000041</td>\n",
        "      <td>0.000025</td>\n",
        "      <td>0.000091</td>\n",
        "      <td>0.000011</td>\n",
        "      <td>0.000361</td>\n",
        "      <td>0.000037</td>\n",
        "      <td>0.000002</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>2020-09-15</th>\n",
        "      <td>0.000068</td>\n",
        "      <td>0.000098</td>\n",
        "      <td>0.000026</td>\n",
        "      <td>0.000025</td>\n",
        "      <td>0.000054</td>\n",
        "      <td>0.000002</td>\n",
        "      <td>0.000046</td>\n",
        "      <td>0.000046</td>\n",
        "      <td>0.000149</td>\n",
        "      <td>0.000084</td>\n",
        "      <td>0.000076</td>\n",
        "      <td>0.000266</td>\n",
        "      <td>0.000039</td>\n",
        "      <td>0.000041</td>\n",
        "      <td>0.000025</td>\n",
        "      <td>0.000091</td>\n",
        "      <td>0.000011</td>\n",
        "      <td>0.000361</td>\n",
        "      <td>0.000037</td>\n",
        "      <td>0.000002</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>2020-09-16</th>\n",
        "      <td>0.000068</td>\n",
        "      <td>0.000098</td>\n",
        "      <td>0.000026</td>\n",
        "      <td>0.000025</td>\n",
        "      <td>0.000054</td>\n",
        "      <td>0.000002</td>\n",
        "      <td>0.000046</td>\n",
        "      <td>0.000046</td>\n",
        "      <td>0.000149</td>\n",
        "      <td>0.000084</td>\n",
        "      <td>0.000076</td>\n",
        "      <td>0.000266</td>\n",
        "      <td>0.000039</td>\n",
        "      <td>0.000041</td>\n",
        "      <td>0.000025</td>\n",
        "      <td>0.000091</td>\n",
        "      <td>0.000011</td>\n",
        "      <td>0.000361</td>\n",
        "      <td>0.000037</td>\n",
        "      <td>0.000002</td>\n",
        "    </tr>\n",
        "  </tbody>\n",
        "</table>\n",
        "</div>"
       ],
       "output_type": "pyout",
       "prompt_number": 17,
       "text": [
        "Country      Bahrain  Bangladesh    Brazil  Burkina Faso   Estonia    France  \\\n",
        "Date                                                                           \n",
        "2020-09-12  0.000068    0.000098  0.000026      0.000025  0.000054  0.000002   \n",
        "2020-09-13  0.000068    0.000098  0.000026      0.000025  0.000054  0.000002   \n",
        "2020-09-14  0.000068    0.000098  0.000026      0.000025  0.000054  0.000002   \n",
        "2020-09-15  0.000068    0.000098  0.000026      0.000025  0.000054  0.000002   \n",
        "2020-09-16  0.000068    0.000098  0.000026      0.000025  0.000054  0.000002   \n",
        "\n",
        "Country      Georgia    Guinea      Iran     Italy    Kuwait    Mexico  \\\n",
        "Date                                                                     \n",
        "2020-09-12  0.000046  0.000046  0.000149  0.000084  0.000076  0.000266   \n",
        "2020-09-13  0.000046  0.000046  0.000149  0.000084  0.000076  0.000266   \n",
        "2020-09-14  0.000046  0.000046  0.000149  0.000084  0.000076  0.000266   \n",
        "2020-09-15  0.000046  0.000046  0.000149  0.000084  0.000076  0.000266   \n",
        "2020-09-16  0.000046  0.000046  0.000149  0.000084  0.000076  0.000266   \n",
        "\n",
        "Country      Nigeria      Peru  Portugal   Romania    Russia    Turkey  \\\n",
        "Date                                                                     \n",
        "2020-09-12  0.000039  0.000041  0.000025  0.000091  0.000011  0.000361   \n",
        "2020-09-13  0.000039  0.000041  0.000025  0.000091  0.000011  0.000361   \n",
        "2020-09-14  0.000039  0.000041  0.000025  0.000091  0.000011  0.000361   \n",
        "2020-09-15  0.000039  0.000041  0.000025  0.000091  0.000011  0.000361   \n",
        "2020-09-16  0.000039  0.000041  0.000025  0.000091  0.000011  0.000361   \n",
        "\n",
        "Country     United Arab Emirates  United States  \n",
        "Date                                             \n",
        "2020-09-12              0.000037       0.000002  \n",
        "2020-09-13              0.000037       0.000002  \n",
        "2020-09-14              0.000037       0.000002  \n",
        "2020-09-15              0.000037       0.000002  \n",
        "2020-09-16              0.000037       0.000002  "
       ]
      }
     ],
     "prompt_number": 17
    },
    {
     "cell_type": "heading",
     "level": 3,
     "metadata": {},
     "source": [
      "$\\theta$: Mortality rate of S$^\\ast$ cases $\\mathrm{[-]}$"
     ]
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "analyser.param_history(\"theta\", roll_window=None).tail()"
     ],
     "language": "python",
     "metadata": {},
     "outputs": [
      {
       "output_type": "display_data",
       "png": "\n",
       "text": [
        "<Figure size 648x432 with 1 Axes>"
       ]
      },
      {
       "html": [
        "<div>\n",
        "<style scoped>\n",
        "    .dataframe tbody tr th:only-of-type {\n",
        "        vertical-align: middle;\n",
        "    }\n",
        "\n",
        "    .dataframe tbody tr th {\n",
        "        vertical-align: top;\n",
        "    }\n",
        "\n",
        "    .dataframe thead th {\n",
        "        text-align: right;\n",
        "    }\n",
        "</style>\n",
        "<table border=\"1\" class=\"dataframe\">\n",
        "  <thead>\n",
        "    <tr style=\"text-align: right;\">\n",
        "      <th>Country</th>\n",
        "      <th>Bahrain</th>\n",
        "      <th>Bangladesh</th>\n",
        "      <th>Brazil</th>\n",
        "      <th>Burkina Faso</th>\n",
        "      <th>Estonia</th>\n",
        "      <th>France</th>\n",
        "      <th>Georgia</th>\n",
        "      <th>Guinea</th>\n",
        "      <th>Iran</th>\n",
        "      <th>Italy</th>\n",
        "      <th>Kuwait</th>\n",
        "      <th>Mexico</th>\n",
        "      <th>Nigeria</th>\n",
        "      <th>Peru</th>\n",
        "      <th>Portugal</th>\n",
        "      <th>Romania</th>\n",
        "      <th>Russia</th>\n",
        "      <th>Turkey</th>\n",
        "      <th>United Arab Emirates</th>\n",
        "      <th>United States</th>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>Date</th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "    </tr>\n",
        "  </thead>\n",
        "  <tbody>\n",
        "    <tr>\n",
        "      <th>2020-09-12</th>\n",
        "      <td>0.000806</td>\n",
        "      <td>0.000447</td>\n",
        "      <td>0.018918</td>\n",
        "      <td>0.001272</td>\n",
        "      <td>0.001425</td>\n",
        "      <td>0.000128</td>\n",
        "      <td>0.001255</td>\n",
        "      <td>0.001657</td>\n",
        "      <td>0.045157</td>\n",
        "      <td>0.000673</td>\n",
        "      <td>0.000252</td>\n",
        "      <td>0.09967</td>\n",
        "      <td>0.016362</td>\n",
        "      <td>0.000051</td>\n",
        "      <td>0.001325</td>\n",
        "      <td>0.018927</td>\n",
        "      <td>0.019629</td>\n",
        "      <td>0.000423</td>\n",
        "      <td>0.00067</td>\n",
        "      <td>0.015547</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>2020-09-13</th>\n",
        "      <td>0.000806</td>\n",
        "      <td>0.000447</td>\n",
        "      <td>0.018918</td>\n",
        "      <td>0.001272</td>\n",
        "      <td>0.001425</td>\n",
        "      <td>0.000128</td>\n",
        "      <td>0.001255</td>\n",
        "      <td>0.001657</td>\n",
        "      <td>0.045157</td>\n",
        "      <td>0.000673</td>\n",
        "      <td>0.000252</td>\n",
        "      <td>0.09967</td>\n",
        "      <td>0.016362</td>\n",
        "      <td>0.000051</td>\n",
        "      <td>0.001325</td>\n",
        "      <td>0.018927</td>\n",
        "      <td>0.019629</td>\n",
        "      <td>0.000423</td>\n",
        "      <td>0.00067</td>\n",
        "      <td>0.015547</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>2020-09-14</th>\n",
        "      <td>0.000806</td>\n",
        "      <td>0.000447</td>\n",
        "      <td>0.018918</td>\n",
        "      <td>0.001272</td>\n",
        "      <td>0.001425</td>\n",
        "      <td>0.000128</td>\n",
        "      <td>0.001255</td>\n",
        "      <td>0.001657</td>\n",
        "      <td>0.045157</td>\n",
        "      <td>0.000673</td>\n",
        "      <td>0.000252</td>\n",
        "      <td>0.09967</td>\n",
        "      <td>0.016362</td>\n",
        "      <td>0.000051</td>\n",
        "      <td>0.001325</td>\n",
        "      <td>0.018927</td>\n",
        "      <td>0.019629</td>\n",
        "      <td>0.000423</td>\n",
        "      <td>0.00067</td>\n",
        "      <td>0.015547</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>2020-09-15</th>\n",
        "      <td>0.000806</td>\n",
        "      <td>0.000447</td>\n",
        "      <td>0.018918</td>\n",
        "      <td>0.001272</td>\n",
        "      <td>0.001425</td>\n",
        "      <td>0.000128</td>\n",
        "      <td>0.001255</td>\n",
        "      <td>0.001657</td>\n",
        "      <td>0.045157</td>\n",
        "      <td>0.000673</td>\n",
        "      <td>0.000252</td>\n",
        "      <td>0.09967</td>\n",
        "      <td>0.016362</td>\n",
        "      <td>0.000051</td>\n",
        "      <td>0.001325</td>\n",
        "      <td>0.018927</td>\n",
        "      <td>0.019629</td>\n",
        "      <td>0.000423</td>\n",
        "      <td>0.00067</td>\n",
        "      <td>0.015547</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>2020-09-16</th>\n",
        "      <td>0.000806</td>\n",
        "      <td>0.000447</td>\n",
        "      <td>0.018918</td>\n",
        "      <td>0.001272</td>\n",
        "      <td>0.001425</td>\n",
        "      <td>0.000128</td>\n",
        "      <td>0.001255</td>\n",
        "      <td>0.001657</td>\n",
        "      <td>0.045157</td>\n",
        "      <td>0.000673</td>\n",
        "      <td>0.000252</td>\n",
        "      <td>0.09967</td>\n",
        "      <td>0.016362</td>\n",
        "      <td>0.000051</td>\n",
        "      <td>0.001325</td>\n",
        "      <td>0.018927</td>\n",
        "      <td>0.019629</td>\n",
        "      <td>0.000423</td>\n",
        "      <td>0.00067</td>\n",
        "      <td>0.015547</td>\n",
        "    </tr>\n",
        "  </tbody>\n",
        "</table>\n",
        "</div>"
       ],
       "output_type": "pyout",
       "prompt_number": 18,
       "text": [
        "Country      Bahrain  Bangladesh    Brazil  Burkina Faso   Estonia    France  \\\n",
        "Date                                                                           \n",
        "2020-09-12  0.000806    0.000447  0.018918      0.001272  0.001425  0.000128   \n",
        "2020-09-13  0.000806    0.000447  0.018918      0.001272  0.001425  0.000128   \n",
        "2020-09-14  0.000806    0.000447  0.018918      0.001272  0.001425  0.000128   \n",
        "2020-09-15  0.000806    0.000447  0.018918      0.001272  0.001425  0.000128   \n",
        "2020-09-16  0.000806    0.000447  0.018918      0.001272  0.001425  0.000128   \n",
        "\n",
        "Country      Georgia    Guinea      Iran     Italy    Kuwait   Mexico  \\\n",
        "Date                                                                    \n",
        "2020-09-12  0.001255  0.001657  0.045157  0.000673  0.000252  0.09967   \n",
        "2020-09-13  0.001255  0.001657  0.045157  0.000673  0.000252  0.09967   \n",
        "2020-09-14  0.001255  0.001657  0.045157  0.000673  0.000252  0.09967   \n",
        "2020-09-15  0.001255  0.001657  0.045157  0.000673  0.000252  0.09967   \n",
        "2020-09-16  0.001255  0.001657  0.045157  0.000673  0.000252  0.09967   \n",
        "\n",
        "Country      Nigeria      Peru  Portugal   Romania    Russia    Turkey  \\\n",
        "Date                                                                     \n",
        "2020-09-12  0.016362  0.000051  0.001325  0.018927  0.019629  0.000423   \n",
        "2020-09-13  0.016362  0.000051  0.001325  0.018927  0.019629  0.000423   \n",
        "2020-09-14  0.016362  0.000051  0.001325  0.018927  0.019629  0.000423   \n",
        "2020-09-15  0.016362  0.000051  0.001325  0.018927  0.019629  0.000423   \n",
        "2020-09-16  0.016362  0.000051  0.001325  0.018927  0.019629  0.000423   \n",
        "\n",
        "Country     United Arab Emirates  United States  \n",
        "Date                                             \n",
        "2020-09-12               0.00067       0.015547  \n",
        "2020-09-13               0.00067       0.015547  \n",
        "2020-09-14               0.00067       0.015547  \n",
        "2020-09-15               0.00067       0.015547  \n",
        "2020-09-16               0.00067       0.015547  "
       ]
      }
     ],
     "prompt_number": 18
    },
    {
     "cell_type": "markdown",
     "metadata": {},
     "source": [
      "## (Experimental): Relationship of OxCGRT index and parameter values\n",
      "Government responses will impact on parameter values of ODE models about 14 days later. Here, we will investigate on the relationship of [stringency index (from OxCGRT)](https://github.com/OxCGRT/covid-policy-tracker/blob/master/documentation/index_methodology.md) and reproduction number/model parameters.\n"
     ]
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "%matplotlib inline\n",
      "from matplotlib import pyplot as plt\n",
      "import seaborn as sns\n",
      "import pandas as pd"
     ],
     "language": "python",
     "metadata": {},
     "outputs": [],
     "prompt_number": 19
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "df = analyser.track()\n",
      "param_cols = [\"Rt\", *cs.SIRF.PARAMETERS]\n",
      "oxcgrt_cols = oxcgrt_data.OXCGRT_VARS[:]\n",
      "cols = param_cols + oxcgrt_cols\n",
      "delay = 14\n",
      "\n",
      "for col in param_cols:\n",
      "    df[col] = pd.to_numeric(df[col], errors=\"coerce\")\n",
      "    df[col] = df.groupby(\"Country\")[col].shift(0 - delay)\n",
      "\n",
      "df = df.dropna(how=\"any\")\n",
      "df = df.loc[:, [\"Date\", \"Country\", *cols]]\n",
      "track_df = df.copy()\n",
      "track_df.info()"
     ],
     "language": "python",
     "metadata": {},
     "outputs": [
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "<class 'pandas.core.frame.DataFrame'>\n",
        "Int64Index: 50006 entries, 0 to 50271\n",
        "Data columns (total 19 columns):\n",
        " #   Column                               Non-Null Count  Dtype         \n",
        "---  ------                               --------------  -----         \n",
        " 0   Date                                 50006 non-null  datetime64[ns]\n",
        " 1   Country                              50006 non-null  object        \n",
        " 2   Rt                                   50006 non-null  float64       \n",
        " 3   theta                                50006 non-null  float64       \n",
        " 4   kappa                                50006 non-null  float64       \n",
        " 5   rho                                  50006 non-null  float64       \n",
        " 6   sigma                                50006 non-null  float64       \n",
        " 7   School_closing                       50006 non-null  int64         \n",
        " 8   Workplace_closing                    50006 non-null  int64         \n",
        " 9   Cancel_events                        50006 non-null  int64         \n",
        " 10  Gatherings_restrictions              50006 non-null  int64         \n",
        " 11  Transport_closing                    50006 non-null  int64         \n",
        " 12  Stay_home_restrictions               50006 non-null  int64         \n",
        " 13  Internal_movement_restrictions       50006 non-null  int64         \n",
        " 14  International_movement_restrictions  50006 non-null  int64         \n",
        " 15  Information_campaigns                50006 non-null  int64         \n",
        " 16  Testing_policy                       50006 non-null  int64         \n",
        " 17  Contact_tracing                      50006 non-null  int64         \n",
        " 18  Stringency_index                     50006 non-null  float64       \n",
        "dtypes: datetime64[ns](1), float64(6), int64(11), object(1)\n",
        "memory usage: 7.6+ MB\n"
       ]
      }
     ],
     "prompt_number": 20
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "# Correlation\n",
      "df = track_df.copy()\n",
      "df.corr().style.background_gradient(axis=None)"
     ],
     "language": "python",
     "metadata": {},
     "outputs": [
      {
       "html": [
        "<style  type=\"text/css\" >\n",
        "#T_c098f612_f827_11ea_bf1c_525400f5fad7row0_col0,#T_c098f612_f827_11ea_bf1c_525400f5fad7row1_col1,#T_c098f612_f827_11ea_bf1c_525400f5fad7row2_col2,#T_c098f612_f827_11ea_bf1c_525400f5fad7row3_col3,#T_c098f612_f827_11ea_bf1c_525400f5fad7row4_col4,#T_c098f612_f827_11ea_bf1c_525400f5fad7row5_col5,#T_c098f612_f827_11ea_bf1c_525400f5fad7row6_col6,#T_c098f612_f827_11ea_bf1c_525400f5fad7row7_col7,#T_c098f612_f827_11ea_bf1c_525400f5fad7row8_col8,#T_c098f612_f827_11ea_bf1c_525400f5fad7row9_col9,#T_c098f612_f827_11ea_bf1c_525400f5fad7row10_col10,#T_c098f612_f827_11ea_bf1c_525400f5fad7row11_col11,#T_c098f612_f827_11ea_bf1c_525400f5fad7row12_col12,#T_c098f612_f827_11ea_bf1c_525400f5fad7row13_col13,#T_c098f612_f827_11ea_bf1c_525400f5fad7row14_col14,#T_c098f612_f827_11ea_bf1c_525400f5fad7row15_col15,#T_c098f612_f827_11ea_bf1c_525400f5fad7row16_col16{\n",
        "            background-color:  #023858;\n",
        "            color:  #f1f1f1;\n",
        "        }#T_c098f612_f827_11ea_bf1c_525400f5fad7row0_col1,#T_c098f612_f827_11ea_bf1c_525400f5fad7row1_col0{\n",
        "            background-color:  #ebe6f2;\n",
        "            color:  #000000;\n",
        "        }#T_c098f612_f827_11ea_bf1c_525400f5fad7row0_col2,#T_c098f612_f827_11ea_bf1c_525400f5fad7row2_col0{\n",
        "            background-color:  #e9e5f1;\n",
        "            color:  #000000;\n",
        "        }#T_c098f612_f827_11ea_bf1c_525400f5fad7row0_col3,#T_c098f612_f827_11ea_bf1c_525400f5fad7row3_col0{\n",
        "            background-color:  #93b5d6;\n",
        "            color:  #000000;\n",
        "        }#T_c098f612_f827_11ea_bf1c_525400f5fad7row0_col4,#T_c098f612_f827_11ea_bf1c_525400f5fad7row4_col0{\n",
        "            background-color:  #e4e1ef;\n",
        "            color:  #000000;\n",
        "        }#T_c098f612_f827_11ea_bf1c_525400f5fad7row0_col5,#T_c098f612_f827_11ea_bf1c_525400f5fad7row5_col0{\n",
        "            background-color:  #d1d2e6;\n",
        "            color:  #000000;\n",
        "        }#T_c098f612_f827_11ea_bf1c_525400f5fad7row0_col6,#T_c098f612_f827_11ea_bf1c_525400f5fad7row4_col9,#T_c098f612_f827_11ea_bf1c_525400f5fad7row6_col0,#T_c098f612_f827_11ea_bf1c_525400f5fad7row9_col4{\n",
        "            background-color:  #b8c6e0;\n",
        "            color:  #000000;\n",
        "        }#T_c098f612_f827_11ea_bf1c_525400f5fad7row0_col7,#T_c098f612_f827_11ea_bf1c_525400f5fad7row0_col8,#T_c098f612_f827_11ea_bf1c_525400f5fad7row1_col11,#T_c098f612_f827_11ea_bf1c_525400f5fad7row7_col0,#T_c098f612_f827_11ea_bf1c_525400f5fad7row8_col0,#T_c098f612_f827_11ea_bf1c_525400f5fad7row11_col1{\n",
        "            background-color:  #c9cee4;\n",
        "            color:  #000000;\n",
        "        }#T_c098f612_f827_11ea_bf1c_525400f5fad7row0_col9,#T_c098f612_f827_11ea_bf1c_525400f5fad7row2_col6,#T_c098f612_f827_11ea_bf1c_525400f5fad7row6_col2,#T_c098f612_f827_11ea_bf1c_525400f5fad7row9_col0{\n",
        "            background-color:  #dddbec;\n",
        "            color:  #000000;\n",
        "        }#T_c098f612_f827_11ea_bf1c_525400f5fad7row0_col10,#T_c098f612_f827_11ea_bf1c_525400f5fad7row0_col11,#T_c098f612_f827_11ea_bf1c_525400f5fad7row10_col0,#T_c098f612_f827_11ea_bf1c_525400f5fad7row11_col0{\n",
        "            background-color:  #dfddec;\n",
        "            color:  #000000;\n",
        "        }#T_c098f612_f827_11ea_bf1c_525400f5fad7row0_col12,#T_c098f612_f827_11ea_bf1c_525400f5fad7row12_col0{\n",
        "            background-color:  #eee9f3;\n",
        "            color:  #000000;\n",
        "        }#T_c098f612_f827_11ea_bf1c_525400f5fad7row0_col13,#T_c098f612_f827_11ea_bf1c_525400f5fad7row13_col0{\n",
        "            background-color:  #c6cce3;\n",
        "            color:  #000000;\n",
        "        }#T_c098f612_f827_11ea_bf1c_525400f5fad7row0_col14,#T_c098f612_f827_11ea_bf1c_525400f5fad7row14_col0{\n",
        "            background-color:  #d3d4e7;\n",
        "            color:  #000000;\n",
        "        }#T_c098f612_f827_11ea_bf1c_525400f5fad7row0_col15,#T_c098f612_f827_11ea_bf1c_525400f5fad7row15_col0{\n",
        "            background-color:  #e0dded;\n",
        "            color:  #000000;\n",
        "        }#T_c098f612_f827_11ea_bf1c_525400f5fad7row0_col16,#T_c098f612_f827_11ea_bf1c_525400f5fad7row16_col0{\n",
        "            background-color:  #d4d4e8;\n",
        "            color:  #000000;\n",
        "        }#T_c098f612_f827_11ea_bf1c_525400f5fad7row1_col2,#T_c098f612_f827_11ea_bf1c_525400f5fad7row2_col1{\n",
        "            background-color:  #023e62;\n",
        "            color:  #f1f1f1;\n",
        "        }#T_c098f612_f827_11ea_bf1c_525400f5fad7row1_col3,#T_c098f612_f827_11ea_bf1c_525400f5fad7row3_col1{\n",
        "            background-color:  #056aa6;\n",
        "            color:  #f1f1f1;\n",
        "        }#T_c098f612_f827_11ea_bf1c_525400f5fad7row1_col4,#T_c098f612_f827_11ea_bf1c_525400f5fad7row2_col11,#T_c098f612_f827_11ea_bf1c_525400f5fad7row4_col1,#T_c098f612_f827_11ea_bf1c_525400f5fad7row11_col2{\n",
        "            background-color:  #ced0e6;\n",
        "            color:  #000000;\n",
        "        }#T_c098f612_f827_11ea_bf1c_525400f5fad7row1_col5,#T_c098f612_f827_11ea_bf1c_525400f5fad7row5_col1{\n",
        "            background-color:  #e7e3f0;\n",
        "            color:  #000000;\n",
        "        }#T_c098f612_f827_11ea_bf1c_525400f5fad7row1_col6,#T_c098f612_f827_11ea_bf1c_525400f5fad7row6_col1{\n",
        "            background-color:  #d5d5e8;\n",
        "            color:  #000000;\n",
        "        }#T_c098f612_f827_11ea_bf1c_525400f5fad7row1_col7,#T_c098f612_f827_11ea_bf1c_525400f5fad7row2_col9,#T_c098f612_f827_11ea_bf1c_525400f5fad7row7_col1,#T_c098f612_f827_11ea_bf1c_525400f5fad7row9_col2{\n",
        "            background-color:  #efe9f3;\n",
        "            color:  #000000;\n",
        "        }#T_c098f612_f827_11ea_bf1c_525400f5fad7row1_col8,#T_c098f612_f827_11ea_bf1c_525400f5fad7row2_col8,#T_c098f612_f827_11ea_bf1c_525400f5fad7row3_col9,#T_c098f612_f827_11ea_bf1c_525400f5fad7row8_col1,#T_c098f612_f827_11ea_bf1c_525400f5fad7row8_col2,#T_c098f612_f827_11ea_bf1c_525400f5fad7row9_col3{\n",
        "            background-color:  #f0eaf4;\n",
        "            color:  #000000;\n",
        "        }#T_c098f612_f827_11ea_bf1c_525400f5fad7row1_col9,#T_c098f612_f827_11ea_bf1c_525400f5fad7row9_col1{\n",
        "            background-color:  #eee8f3;\n",
        "            color:  #000000;\n",
        "        }#T_c098f612_f827_11ea_bf1c_525400f5fad7row1_col10,#T_c098f612_f827_11ea_bf1c_525400f5fad7row2_col10,#T_c098f612_f827_11ea_bf1c_525400f5fad7row10_col1,#T_c098f612_f827_11ea_bf1c_525400f5fad7row10_col2{\n",
        "            background-color:  #a2bcda;\n",
        "            color:  #000000;\n",
        "        }#T_c098f612_f827_11ea_bf1c_525400f5fad7row1_col12,#T_c098f612_f827_11ea_bf1c_525400f5fad7row12_col1{\n",
        "            background-color:  #97b7d7;\n",
        "            color:  #000000;\n",
        "        }#T_c098f612_f827_11ea_bf1c_525400f5fad7row1_col13,#T_c098f612_f827_11ea_bf1c_525400f5fad7row3_col7,#T_c098f612_f827_11ea_bf1c_525400f5fad7row7_col3,#T_c098f612_f827_11ea_bf1c_525400f5fad7row13_col1{\n",
        "            background-color:  #f5eef6;\n",
        "            color:  #000000;\n",
        "        }#T_c098f612_f827_11ea_bf1c_525400f5fad7row1_col14,#T_c098f612_f827_11ea_bf1c_525400f5fad7row14_col1{\n",
        "            background-color:  #f3edf5;\n",
        "            color:  #000000;\n",
        "        }#T_c098f612_f827_11ea_bf1c_525400f5fad7row1_col15,#T_c098f612_f827_11ea_bf1c_525400f5fad7row4_col10,#T_c098f612_f827_11ea_bf1c_525400f5fad7row10_col4,#T_c098f612_f827_11ea_bf1c_525400f5fad7row15_col1{\n",
        "            background-color:  #bcc7e1;\n",
        "            color:  #000000;\n",
        "        }#T_c098f612_f827_11ea_bf1c_525400f5fad7row1_col16,#T_c098f612_f827_11ea_bf1c_525400f5fad7row3_col11,#T_c098f612_f827_11ea_bf1c_525400f5fad7row11_col3,#T_c098f612_f827_11ea_bf1c_525400f5fad7row16_col1{\n",
        "            background-color:  #d9d8ea;\n",
        "            color:  #000000;\n",
        "        }#T_c098f612_f827_11ea_bf1c_525400f5fad7row2_col3,#T_c098f612_f827_11ea_bf1c_525400f5fad7row3_col2,#T_c098f612_f827_11ea_bf1c_525400f5fad7row12_col16,#T_c098f612_f827_11ea_bf1c_525400f5fad7row16_col12{\n",
        "            background-color:  #0569a4;\n",
        "            color:  #f1f1f1;\n",
        "        }#T_c098f612_f827_11ea_bf1c_525400f5fad7row2_col4,#T_c098f612_f827_11ea_bf1c_525400f5fad7row4_col2,#T_c098f612_f827_11ea_bf1c_525400f5fad7row4_col8,#T_c098f612_f827_11ea_bf1c_525400f5fad7row8_col4{\n",
        "            background-color:  #d7d6e9;\n",
        "            color:  #000000;\n",
        "        }#T_c098f612_f827_11ea_bf1c_525400f5fad7row2_col5,#T_c098f612_f827_11ea_bf1c_525400f5fad7row2_col14,#T_c098f612_f827_11ea_bf1c_525400f5fad7row5_col2,#T_c098f612_f827_11ea_bf1c_525400f5fad7row14_col2{\n",
        "            background-color:  #ece7f2;\n",
        "            color:  #000000;\n",
        "        }#T_c098f612_f827_11ea_bf1c_525400f5fad7row2_col7,#T_c098f612_f827_11ea_bf1c_525400f5fad7row7_col2{\n",
        "            background-color:  #f1ebf5;\n",
        "            color:  #000000;\n",
        "        }#T_c098f612_f827_11ea_bf1c_525400f5fad7row2_col12,#T_c098f612_f827_11ea_bf1c_525400f5fad7row12_col2{\n",
        "            background-color:  #94b6d7;\n",
        "            color:  #000000;\n",
        "        }#T_c098f612_f827_11ea_bf1c_525400f5fad7row2_col13,#T_c098f612_f827_11ea_bf1c_525400f5fad7row13_col2{\n",
        "            background-color:  #f7f0f7;\n",
        "            color:  #000000;\n",
        "        }#T_c098f612_f827_11ea_bf1c_525400f5fad7row2_col15,#T_c098f612_f827_11ea_bf1c_525400f5fad7row15_col2{\n",
        "            background-color:  #bdc8e1;\n",
        "            color:  #000000;\n",
        "        }#T_c098f612_f827_11ea_bf1c_525400f5fad7row2_col16,#T_c098f612_f827_11ea_bf1c_525400f5fad7row3_col15,#T_c098f612_f827_11ea_bf1c_525400f5fad7row15_col3,#T_c098f612_f827_11ea_bf1c_525400f5fad7row16_col2{\n",
        "            background-color:  #e0deed;\n",
        "            color:  #000000;\n",
        "        }#T_c098f612_f827_11ea_bf1c_525400f5fad7row3_col4,#T_c098f612_f827_11ea_bf1c_525400f5fad7row4_col3,#T_c098f612_f827_11ea_bf1c_525400f5fad7row4_col15,#T_c098f612_f827_11ea_bf1c_525400f5fad7row15_col4{\n",
        "            background-color:  #a9bfdc;\n",
        "            color:  #000000;\n",
        "        }#T_c098f612_f827_11ea_bf1c_525400f5fad7row3_col5,#T_c098f612_f827_11ea_bf1c_525400f5fad7row5_col3{\n",
        "            background-color:  #dcdaeb;\n",
        "            color:  #000000;\n",
        "        }#T_c098f612_f827_11ea_bf1c_525400f5fad7row3_col6,#T_c098f612_f827_11ea_bf1c_525400f5fad7row6_col3{\n",
        "            background-color:  #d0d1e6;\n",
        "            color:  #000000;\n",
        "        }#T_c098f612_f827_11ea_bf1c_525400f5fad7row3_col8,#T_c098f612_f827_11ea_bf1c_525400f5fad7row8_col3{\n",
        "            background-color:  #f2ecf5;\n",
        "            color:  #000000;\n",
        "        }#T_c098f612_f827_11ea_bf1c_525400f5fad7row3_col10,#T_c098f612_f827_11ea_bf1c_525400f5fad7row4_col13,#T_c098f612_f827_11ea_bf1c_525400f5fad7row10_col3,#T_c098f612_f827_11ea_bf1c_525400f5fad7row13_col4{\n",
        "            background-color:  #a7bddb;\n",
        "            color:  #000000;\n",
        "        }#T_c098f612_f827_11ea_bf1c_525400f5fad7row3_col12,#T_c098f612_f827_11ea_bf1c_525400f5fad7row12_col3{\n",
        "            background-color:  #b4c4df;\n",
        "            color:  #000000;\n",
        "        }#T_c098f612_f827_11ea_bf1c_525400f5fad7row3_col13,#T_c098f612_f827_11ea_bf1c_525400f5fad7row13_col3{\n",
        "            background-color:  #f8f1f8;\n",
        "            color:  #000000;\n",
        "        }#T_c098f612_f827_11ea_bf1c_525400f5fad7row3_col14,#T_c098f612_f827_11ea_bf1c_525400f5fad7row14_col3{\n",
        "            background-color:  #fff7fb;\n",
        "            color:  #000000;\n",
        "        }#T_c098f612_f827_11ea_bf1c_525400f5fad7row3_col16,#T_c098f612_f827_11ea_bf1c_525400f5fad7row4_col14,#T_c098f612_f827_11ea_bf1c_525400f5fad7row14_col4,#T_c098f612_f827_11ea_bf1c_525400f5fad7row16_col3{\n",
        "            background-color:  #dbdaeb;\n",
        "            color:  #000000;\n",
        "        }#T_c098f612_f827_11ea_bf1c_525400f5fad7row4_col5,#T_c098f612_f827_11ea_bf1c_525400f5fad7row5_col4{\n",
        "            background-color:  #8eb3d5;\n",
        "            color:  #000000;\n",
        "        }#T_c098f612_f827_11ea_bf1c_525400f5fad7row4_col6,#T_c098f612_f827_11ea_bf1c_525400f5fad7row6_col4{\n",
        "            background-color:  #b9c6e0;\n",
        "            color:  #000000;\n",
        "        }#T_c098f612_f827_11ea_bf1c_525400f5fad7row4_col7,#T_c098f612_f827_11ea_bf1c_525400f5fad7row7_col4{\n",
        "            background-color:  #afc1dd;\n",
        "            color:  #000000;\n",
        "        }#T_c098f612_f827_11ea_bf1c_525400f5fad7row4_col11,#T_c098f612_f827_11ea_bf1c_525400f5fad7row11_col4{\n",
        "            background-color:  #cdd0e5;\n",
        "            color:  #000000;\n",
        "        }#T_c098f612_f827_11ea_bf1c_525400f5fad7row4_col12,#T_c098f612_f827_11ea_bf1c_525400f5fad7row12_col4{\n",
        "            background-color:  #b7c5df;\n",
        "            color:  #000000;\n",
        "        }#T_c098f612_f827_11ea_bf1c_525400f5fad7row4_col16,#T_c098f612_f827_11ea_bf1c_525400f5fad7row16_col4{\n",
        "            background-color:  #a8bedc;\n",
        "            color:  #000000;\n",
        "        }#T_c098f612_f827_11ea_bf1c_525400f5fad7row5_col6,#T_c098f612_f827_11ea_bf1c_525400f5fad7row6_col5,#T_c098f612_f827_11ea_bf1c_525400f5fad7row8_col11,#T_c098f612_f827_11ea_bf1c_525400f5fad7row11_col8{\n",
        "            background-color:  #04649d;\n",
        "            color:  #f1f1f1;\n",
        "        }#T_c098f612_f827_11ea_bf1c_525400f5fad7row5_col7,#T_c098f612_f827_11ea_bf1c_525400f5fad7row7_col5{\n",
        "            background-color:  #04649e;\n",
        "            color:  #f1f1f1;\n",
        "        }#T_c098f612_f827_11ea_bf1c_525400f5fad7row5_col8,#T_c098f612_f827_11ea_bf1c_525400f5fad7row8_col5{\n",
        "            background-color:  #056ead;\n",
        "            color:  #f1f1f1;\n",
        "        }#T_c098f612_f827_11ea_bf1c_525400f5fad7row5_col9,#T_c098f612_f827_11ea_bf1c_525400f5fad7row7_col10,#T_c098f612_f827_11ea_bf1c_525400f5fad7row8_col12,#T_c098f612_f827_11ea_bf1c_525400f5fad7row9_col5,#T_c098f612_f827_11ea_bf1c_525400f5fad7row10_col7,#T_c098f612_f827_11ea_bf1c_525400f5fad7row12_col8,#T_c098f612_f827_11ea_bf1c_525400f5fad7row13_col15,#T_c098f612_f827_11ea_bf1c_525400f5fad7row15_col13{\n",
        "            background-color:  #1e80b8;\n",
        "            color:  #000000;\n",
        "        }#T_c098f612_f827_11ea_bf1c_525400f5fad7row5_col10,#T_c098f612_f827_11ea_bf1c_525400f5fad7row6_col9,#T_c098f612_f827_11ea_bf1c_525400f5fad7row9_col6,#T_c098f612_f827_11ea_bf1c_525400f5fad7row10_col5{\n",
        "            background-color:  #167bb6;\n",
        "            color:  #000000;\n",
        "        }#T_c098f612_f827_11ea_bf1c_525400f5fad7row5_col11,#T_c098f612_f827_11ea_bf1c_525400f5fad7row11_col5{\n",
        "            background-color:  #2383ba;\n",
        "            color:  #000000;\n",
        "        }#T_c098f612_f827_11ea_bf1c_525400f5fad7row5_col12,#T_c098f612_f827_11ea_bf1c_525400f5fad7row11_col13,#T_c098f612_f827_11ea_bf1c_525400f5fad7row12_col5,#T_c098f612_f827_11ea_bf1c_525400f5fad7row13_col11{\n",
        "            background-color:  #157ab5;\n",
        "            color:  #000000;\n",
        "        }#T_c098f612_f827_11ea_bf1c_525400f5fad7row5_col13,#T_c098f612_f827_11ea_bf1c_525400f5fad7row6_col7,#T_c098f612_f827_11ea_bf1c_525400f5fad7row7_col6,#T_c098f612_f827_11ea_bf1c_525400f5fad7row13_col5{\n",
        "            background-color:  #0567a1;\n",
        "            color:  #f1f1f1;\n",
        "        }#T_c098f612_f827_11ea_bf1c_525400f5fad7row5_col14,#T_c098f612_f827_11ea_bf1c_525400f5fad7row12_col13,#T_c098f612_f827_11ea_bf1c_525400f5fad7row13_col12,#T_c098f612_f827_11ea_bf1c_525400f5fad7row14_col5{\n",
        "            background-color:  #4094c3;\n",
        "            color:  #000000;\n",
        "        }#T_c098f612_f827_11ea_bf1c_525400f5fad7row5_col15,#T_c098f612_f827_11ea_bf1c_525400f5fad7row15_col5{\n",
        "            background-color:  #6da6cd;\n",
        "            color:  #000000;\n",
        "        }#T_c098f612_f827_11ea_bf1c_525400f5fad7row5_col16,#T_c098f612_f827_11ea_bf1c_525400f5fad7row16_col5{\n",
        "            background-color:  #04588a;\n",
        "            color:  #f1f1f1;\n",
        "        }#T_c098f612_f827_11ea_bf1c_525400f5fad7row6_col8,#T_c098f612_f827_11ea_bf1c_525400f5fad7row8_col6{\n",
        "            background-color:  #046198;\n",
        "            color:  #f1f1f1;\n",
        "        }#T_c098f612_f827_11ea_bf1c_525400f5fad7row6_col10,#T_c098f612_f827_11ea_bf1c_525400f5fad7row10_col6{\n",
        "            background-color:  #056ba7;\n",
        "            color:  #f1f1f1;\n",
        "        }#T_c098f612_f827_11ea_bf1c_525400f5fad7row6_col11,#T_c098f612_f827_11ea_bf1c_525400f5fad7row11_col6{\n",
        "            background-color:  #056fae;\n",
        "            color:  #f1f1f1;\n",
        "        }#T_c098f612_f827_11ea_bf1c_525400f5fad7row6_col12,#T_c098f612_f827_11ea_bf1c_525400f5fad7row7_col12,#T_c098f612_f827_11ea_bf1c_525400f5fad7row12_col6,#T_c098f612_f827_11ea_bf1c_525400f5fad7row12_col7{\n",
        "            background-color:  #348ebf;\n",
        "            color:  #000000;\n",
        "        }#T_c098f612_f827_11ea_bf1c_525400f5fad7row6_col13,#T_c098f612_f827_11ea_bf1c_525400f5fad7row13_col6{\n",
        "            background-color:  #046097;\n",
        "            color:  #f1f1f1;\n",
        "        }#T_c098f612_f827_11ea_bf1c_525400f5fad7row6_col14,#T_c098f612_f827_11ea_bf1c_525400f5fad7row14_col6{\n",
        "            background-color:  #3790c0;\n",
        "            color:  #000000;\n",
        "        }#T_c098f612_f827_11ea_bf1c_525400f5fad7row6_col15,#T_c098f612_f827_11ea_bf1c_525400f5fad7row15_col6{\n",
        "            background-color:  #6ba5cd;\n",
        "            color:  #000000;\n",
        "        }#T_c098f612_f827_11ea_bf1c_525400f5fad7row6_col16,#T_c098f612_f827_11ea_bf1c_525400f5fad7row8_col16,#T_c098f612_f827_11ea_bf1c_525400f5fad7row16_col6,#T_c098f612_f827_11ea_bf1c_525400f5fad7row16_col8{\n",
        "            background-color:  #045280;\n",
        "            color:  #f1f1f1;\n",
        "        }#T_c098f612_f827_11ea_bf1c_525400f5fad7row7_col8,#T_c098f612_f827_11ea_bf1c_525400f5fad7row8_col7{\n",
        "            background-color:  #045b8e;\n",
        "            color:  #f1f1f1;\n",
        "        }#T_c098f612_f827_11ea_bf1c_525400f5fad7row7_col9,#T_c098f612_f827_11ea_bf1c_525400f5fad7row9_col7{\n",
        "            background-color:  #2c89bd;\n",
        "            color:  #000000;\n",
        "        }#T_c098f612_f827_11ea_bf1c_525400f5fad7row7_col11,#T_c098f612_f827_11ea_bf1c_525400f5fad7row11_col7{\n",
        "            background-color:  #0771b1;\n",
        "            color:  #f1f1f1;\n",
        "        }#T_c098f612_f827_11ea_bf1c_525400f5fad7row7_col13,#T_c098f612_f827_11ea_bf1c_525400f5fad7row13_col7{\n",
        "            background-color:  #034d79;\n",
        "            color:  #f1f1f1;\n",
        "        }#T_c098f612_f827_11ea_bf1c_525400f5fad7row7_col14,#T_c098f612_f827_11ea_bf1c_525400f5fad7row13_col14,#T_c098f612_f827_11ea_bf1c_525400f5fad7row14_col7,#T_c098f612_f827_11ea_bf1c_525400f5fad7row14_col13{\n",
        "            background-color:  #0d75b3;\n",
        "            color:  #f1f1f1;\n",
        "        }#T_c098f612_f827_11ea_bf1c_525400f5fad7row7_col15,#T_c098f612_f827_11ea_bf1c_525400f5fad7row9_col10,#T_c098f612_f827_11ea_bf1c_525400f5fad7row10_col9,#T_c098f612_f827_11ea_bf1c_525400f5fad7row15_col7{\n",
        "            background-color:  #0f76b3;\n",
        "            color:  #f1f1f1;\n",
        "        }#T_c098f612_f827_11ea_bf1c_525400f5fad7row7_col16,#T_c098f612_f827_11ea_bf1c_525400f5fad7row13_col16,#T_c098f612_f827_11ea_bf1c_525400f5fad7row16_col7,#T_c098f612_f827_11ea_bf1c_525400f5fad7row16_col13{\n",
        "            background-color:  #045788;\n",
        "            color:  #f1f1f1;\n",
        "        }#T_c098f612_f827_11ea_bf1c_525400f5fad7row8_col9,#T_c098f612_f827_11ea_bf1c_525400f5fad7row9_col8{\n",
        "            background-color:  #0569a5;\n",
        "            color:  #f1f1f1;\n",
        "        }#T_c098f612_f827_11ea_bf1c_525400f5fad7row8_col10,#T_c098f612_f827_11ea_bf1c_525400f5fad7row10_col8{\n",
        "            background-color:  #056dac;\n",
        "            color:  #f1f1f1;\n",
        "        }#T_c098f612_f827_11ea_bf1c_525400f5fad7row8_col13,#T_c098f612_f827_11ea_bf1c_525400f5fad7row13_col8{\n",
        "            background-color:  #04598c;\n",
        "            color:  #f1f1f1;\n",
        "        }#T_c098f612_f827_11ea_bf1c_525400f5fad7row8_col14,#T_c098f612_f827_11ea_bf1c_525400f5fad7row14_col8{\n",
        "            background-color:  #0570b0;\n",
        "            color:  #f1f1f1;\n",
        "        }#T_c098f612_f827_11ea_bf1c_525400f5fad7row8_col15,#T_c098f612_f827_11ea_bf1c_525400f5fad7row15_col8{\n",
        "            background-color:  #4a98c5;\n",
        "            color:  #000000;\n",
        "        }#T_c098f612_f827_11ea_bf1c_525400f5fad7row9_col11,#T_c098f612_f827_11ea_bf1c_525400f5fad7row11_col9{\n",
        "            background-color:  #056ba9;\n",
        "            color:  #f1f1f1;\n",
        "        }#T_c098f612_f827_11ea_bf1c_525400f5fad7row9_col12,#T_c098f612_f827_11ea_bf1c_525400f5fad7row12_col9{\n",
        "            background-color:  #187cb6;\n",
        "            color:  #000000;\n",
        "        }#T_c098f612_f827_11ea_bf1c_525400f5fad7row9_col13,#T_c098f612_f827_11ea_bf1c_525400f5fad7row13_col9{\n",
        "            background-color:  #2484ba;\n",
        "            color:  #000000;\n",
        "        }#T_c098f612_f827_11ea_bf1c_525400f5fad7row9_col14,#T_c098f612_f827_11ea_bf1c_525400f5fad7row10_col14,#T_c098f612_f827_11ea_bf1c_525400f5fad7row14_col9,#T_c098f612_f827_11ea_bf1c_525400f5fad7row14_col10{\n",
        "            background-color:  #589ec8;\n",
        "            color:  #000000;\n",
        "        }#T_c098f612_f827_11ea_bf1c_525400f5fad7row9_col15,#T_c098f612_f827_11ea_bf1c_525400f5fad7row15_col9{\n",
        "            background-color:  #8fb4d6;\n",
        "            color:  #000000;\n",
        "        }#T_c098f612_f827_11ea_bf1c_525400f5fad7row9_col16,#T_c098f612_f827_11ea_bf1c_525400f5fad7row16_col9{\n",
        "            background-color:  #046299;\n",
        "            color:  #f1f1f1;\n",
        "        }#T_c098f612_f827_11ea_bf1c_525400f5fad7row10_col11,#T_c098f612_f827_11ea_bf1c_525400f5fad7row11_col10{\n",
        "            background-color:  #045f95;\n",
        "            color:  #f1f1f1;\n",
        "        }#T_c098f612_f827_11ea_bf1c_525400f5fad7row10_col12,#T_c098f612_f827_11ea_bf1c_525400f5fad7row12_col10{\n",
        "            background-color:  #056dab;\n",
        "            color:  #f1f1f1;\n",
        "        }#T_c098f612_f827_11ea_bf1c_525400f5fad7row10_col13,#T_c098f612_f827_11ea_bf1c_525400f5fad7row13_col10{\n",
        "            background-color:  #2987bc;\n",
        "            color:  #000000;\n",
        "        }#T_c098f612_f827_11ea_bf1c_525400f5fad7row10_col15,#T_c098f612_f827_11ea_bf1c_525400f5fad7row15_col10{\n",
        "            background-color:  #4295c3;\n",
        "            color:  #000000;\n",
        "        }#T_c098f612_f827_11ea_bf1c_525400f5fad7row10_col16,#T_c098f612_f827_11ea_bf1c_525400f5fad7row16_col10{\n",
        "            background-color:  #045d92;\n",
        "            color:  #f1f1f1;\n",
        "        }#T_c098f612_f827_11ea_bf1c_525400f5fad7row11_col12,#T_c098f612_f827_11ea_bf1c_525400f5fad7row12_col11{\n",
        "            background-color:  #197db7;\n",
        "            color:  #000000;\n",
        "        }#T_c098f612_f827_11ea_bf1c_525400f5fad7row11_col14,#T_c098f612_f827_11ea_bf1c_525400f5fad7row14_col11{\n",
        "            background-color:  #3b92c1;\n",
        "            color:  #000000;\n",
        "        }#T_c098f612_f827_11ea_bf1c_525400f5fad7row11_col15,#T_c098f612_f827_11ea_bf1c_525400f5fad7row12_col15,#T_c098f612_f827_11ea_bf1c_525400f5fad7row15_col11,#T_c098f612_f827_11ea_bf1c_525400f5fad7row15_col12{\n",
        "            background-color:  #4e9ac6;\n",
        "            color:  #000000;\n",
        "        }#T_c098f612_f827_11ea_bf1c_525400f5fad7row11_col16,#T_c098f612_f827_11ea_bf1c_525400f5fad7row16_col11{\n",
        "            background-color:  #046096;\n",
        "            color:  #f1f1f1;\n",
        "        }#T_c098f612_f827_11ea_bf1c_525400f5fad7row12_col14,#T_c098f612_f827_11ea_bf1c_525400f5fad7row14_col12{\n",
        "            background-color:  #569dc8;\n",
        "            color:  #000000;\n",
        "        }#T_c098f612_f827_11ea_bf1c_525400f5fad7row14_col15,#T_c098f612_f827_11ea_bf1c_525400f5fad7row15_col14{\n",
        "            background-color:  #509ac6;\n",
        "            color:  #000000;\n",
        "        }#T_c098f612_f827_11ea_bf1c_525400f5fad7row14_col16,#T_c098f612_f827_11ea_bf1c_525400f5fad7row16_col14{\n",
        "            background-color:  #3991c1;\n",
        "            color:  #000000;\n",
        "        }#T_c098f612_f827_11ea_bf1c_525400f5fad7row15_col16,#T_c098f612_f827_11ea_bf1c_525400f5fad7row16_col15{\n",
        "            background-color:  #328dbf;\n",
        "            color:  #000000;\n",
        "        }</style><table id=\"T_c098f612_f827_11ea_bf1c_525400f5fad7\" ><thead>    <tr>        <th class=\"blank level0\" ></th>        <th class=\"col_heading level0 col0\" >Rt</th>        <th class=\"col_heading level0 col1\" >theta</th>        <th class=\"col_heading level0 col2\" >kappa</th>        <th class=\"col_heading level0 col3\" >rho</th>        <th class=\"col_heading level0 col4\" >sigma</th>        <th class=\"col_heading level0 col5\" >School_closing</th>        <th class=\"col_heading level0 col6\" >Workplace_closing</th>        <th class=\"col_heading level0 col7\" >Cancel_events</th>        <th class=\"col_heading level0 col8\" >Gatherings_restrictions</th>        <th class=\"col_heading level0 col9\" >Transport_closing</th>        <th class=\"col_heading level0 col10\" >Stay_home_restrictions</th>        <th class=\"col_heading level0 col11\" >Internal_movement_restrictions</th>        <th class=\"col_heading level0 col12\" >International_movement_restrictions</th>        <th class=\"col_heading level0 col13\" >Information_campaigns</th>        <th class=\"col_heading level0 col14\" >Testing_policy</th>        <th class=\"col_heading level0 col15\" >Contact_tracing</th>        <th class=\"col_heading level0 col16\" >Stringency_index</th>    </tr></thead><tbody>\n",
        "                <tr>\n",
        "                        <th id=\"T_c098f612_f827_11ea_bf1c_525400f5fad7level0_row0\" class=\"row_heading level0 row0\" >Rt</th>\n",
        "                        <td id=\"T_c098f612_f827_11ea_bf1c_525400f5fad7row0_col0\" class=\"data row0 col0\" >1.000000</td>\n",
        "                        <td id=\"T_c098f612_f827_11ea_bf1c_525400f5fad7row0_col1\" class=\"data row0 col1\" >-0.244558</td>\n",
        "                        <td id=\"T_c098f612_f827_11ea_bf1c_525400f5fad7row0_col2\" class=\"data row0 col2\" >-0.229504</td>\n",
        "                        <td id=\"T_c098f612_f827_11ea_bf1c_525400f5fad7row0_col3\" class=\"data row0 col3\" >0.177156</td>\n",
        "                        <td id=\"T_c098f612_f827_11ea_bf1c_525400f5fad7row0_col4\" class=\"data row0 col4\" >-0.196766</td>\n",
        "                        <td id=\"T_c098f612_f827_11ea_bf1c_525400f5fad7row0_col5\" class=\"data row0 col5\" >-0.075553</td>\n",
        "                        <td id=\"T_c098f612_f827_11ea_bf1c_525400f5fad7row0_col6\" class=\"data row0 col6\" >0.028321</td>\n",
        "                        <td id=\"T_c098f612_f827_11ea_bf1c_525400f5fad7row0_col7\" class=\"data row0 col7\" >-0.041841</td>\n",
        "                        <td id=\"T_c098f612_f827_11ea_bf1c_525400f5fad7row0_col8\" class=\"data row0 col8\" >-0.043993</td>\n",
        "                        <td id=\"T_c098f612_f827_11ea_bf1c_525400f5fad7row0_col9\" class=\"data row0 col9\" >-0.156590</td>\n",
        "                        <td id=\"T_c098f612_f827_11ea_bf1c_525400f5fad7row0_col10\" class=\"data row0 col10\" >-0.163376</td>\n",
        "                        <td id=\"T_c098f612_f827_11ea_bf1c_525400f5fad7row0_col11\" class=\"data row0 col11\" >-0.167412</td>\n",
        "                        <td id=\"T_c098f612_f827_11ea_bf1c_525400f5fad7row0_col12\" class=\"data row0 col12\" >-0.272032</td>\n",
        "                        <td id=\"T_c098f612_f827_11ea_bf1c_525400f5fad7row0_col13\" class=\"data row0 col13\" >-0.031012</td>\n",
        "                        <td id=\"T_c098f612_f827_11ea_bf1c_525400f5fad7row0_col14\" class=\"data row0 col14\" >-0.094835</td>\n",
        "                        <td id=\"T_c098f612_f827_11ea_bf1c_525400f5fad7row0_col15\" class=\"data row0 col15\" >-0.171698</td>\n",
        "                        <td id=\"T_c098f612_f827_11ea_bf1c_525400f5fad7row0_col16\" class=\"data row0 col16\" >-0.100510</td>\n",
        "            </tr>\n",
        "            <tr>\n",
        "                        <th id=\"T_c098f612_f827_11ea_bf1c_525400f5fad7level0_row1\" class=\"row_heading level0 row1\" >theta</th>\n",
        "                        <td id=\"T_c098f612_f827_11ea_bf1c_525400f5fad7row1_col0\" class=\"data row1 col0\" >-0.244558</td>\n",
        "                        <td id=\"T_c098f612_f827_11ea_bf1c_525400f5fad7row1_col1\" class=\"data row1 col1\" >1.000000</td>\n",
        "                        <td id=\"T_c098f612_f827_11ea_bf1c_525400f5fad7row1_col2\" class=\"data row1 col2\" >0.963373</td>\n",
        "                        <td id=\"T_c098f612_f827_11ea_bf1c_525400f5fad7row1_col3\" class=\"data row1 col3\" >0.688192</td>\n",
        "                        <td id=\"T_c098f612_f827_11ea_bf1c_525400f5fad7row1_col4\" class=\"data row1 col4\" >-0.065291</td>\n",
        "                        <td id=\"T_c098f612_f827_11ea_bf1c_525400f5fad7row1_col5\" class=\"data row1 col5\" >-0.218599</td>\n",
        "                        <td id=\"T_c098f612_f827_11ea_bf1c_525400f5fad7row1_col6\" class=\"data row1 col6\" >-0.103865</td>\n",
        "                        <td id=\"T_c098f612_f827_11ea_bf1c_525400f5fad7row1_col7\" class=\"data row1 col7\" >-0.275347</td>\n",
        "                        <td id=\"T_c098f612_f827_11ea_bf1c_525400f5fad7row1_col8\" class=\"data row1 col8\" >-0.285449</td>\n",
        "                        <td id=\"T_c098f612_f827_11ea_bf1c_525400f5fad7row1_col9\" class=\"data row1 col9\" >-0.267602</td>\n",
        "                        <td id=\"T_c098f612_f827_11ea_bf1c_525400f5fad7row1_col10\" class=\"data row1 col10\" >0.122566</td>\n",
        "                        <td id=\"T_c098f612_f827_11ea_bf1c_525400f5fad7row1_col11\" class=\"data row1 col11\" >-0.044043</td>\n",
        "                        <td id=\"T_c098f612_f827_11ea_bf1c_525400f5fad7row1_col12\" class=\"data row1 col12\" >0.157921</td>\n",
        "                        <td id=\"T_c098f612_f827_11ea_bf1c_525400f5fad7row1_col13\" class=\"data row1 col13\" >-0.332461</td>\n",
        "                        <td id=\"T_c098f612_f827_11ea_bf1c_525400f5fad7row1_col14\" class=\"data row1 col14\" >-0.315626</td>\n",
        "                        <td id=\"T_c098f612_f827_11ea_bf1c_525400f5fad7row1_col15\" class=\"data row1 col15\" >0.015380</td>\n",
        "                        <td id=\"T_c098f612_f827_11ea_bf1c_525400f5fad7row1_col16\" class=\"data row1 col16\" >-0.130399</td>\n",
        "            </tr>\n",
        "            <tr>\n",
        "                        <th id=\"T_c098f612_f827_11ea_bf1c_525400f5fad7level0_row2\" class=\"row_heading level0 row2\" >kappa</th>\n",
        "                        <td id=\"T_c098f612_f827_11ea_bf1c_525400f5fad7row2_col0\" class=\"data row2 col0\" >-0.229504</td>\n",
        "                        <td id=\"T_c098f612_f827_11ea_bf1c_525400f5fad7row2_col1\" class=\"data row2 col1\" >0.963373</td>\n",
        "                        <td id=\"T_c098f612_f827_11ea_bf1c_525400f5fad7row2_col2\" class=\"data row2 col2\" >1.000000</td>\n",
        "                        <td id=\"T_c098f612_f827_11ea_bf1c_525400f5fad7row2_col3\" class=\"data row2 col3\" >0.702035</td>\n",
        "                        <td id=\"T_c098f612_f827_11ea_bf1c_525400f5fad7row2_col4\" class=\"data row2 col4\" >-0.112873</td>\n",
        "                        <td id=\"T_c098f612_f827_11ea_bf1c_525400f5fad7row2_col5\" class=\"data row2 col5\" >-0.250307</td>\n",
        "                        <td id=\"T_c098f612_f827_11ea_bf1c_525400f5fad7row2_col6\" class=\"data row2 col6\" >-0.151829</td>\n",
        "                        <td id=\"T_c098f612_f827_11ea_bf1c_525400f5fad7row2_col7\" class=\"data row2 col7\" >-0.300695</td>\n",
        "                        <td id=\"T_c098f612_f827_11ea_bf1c_525400f5fad7row2_col8\" class=\"data row2 col8\" >-0.282911</td>\n",
        "                        <td id=\"T_c098f612_f827_11ea_bf1c_525400f5fad7row2_col9\" class=\"data row2 col9\" >-0.276971</td>\n",
        "                        <td id=\"T_c098f612_f827_11ea_bf1c_525400f5fad7row2_col10\" class=\"data row2 col10\" >0.118422</td>\n",
        "                        <td id=\"T_c098f612_f827_11ea_bf1c_525400f5fad7row2_col11\" class=\"data row2 col11\" >-0.062749</td>\n",
        "                        <td id=\"T_c098f612_f827_11ea_bf1c_525400f5fad7row2_col12\" class=\"data row2 col12\" >0.172234</td>\n",
        "                        <td id=\"T_c098f612_f827_11ea_bf1c_525400f5fad7row2_col13\" class=\"data row2 col13\" >-0.357497</td>\n",
        "                        <td id=\"T_c098f612_f827_11ea_bf1c_525400f5fad7row2_col14\" class=\"data row2 col14\" >-0.246507</td>\n",
        "                        <td id=\"T_c098f612_f827_11ea_bf1c_525400f5fad7row2_col15\" class=\"data row2 col15\" >0.010810</td>\n",
        "                        <td id=\"T_c098f612_f827_11ea_bf1c_525400f5fad7row2_col16\" class=\"data row2 col16\" >-0.177620</td>\n",
        "            </tr>\n",
        "            <tr>\n",
        "                        <th id=\"T_c098f612_f827_11ea_bf1c_525400f5fad7level0_row3\" class=\"row_heading level0 row3\" >rho</th>\n",
        "                        <td id=\"T_c098f612_f827_11ea_bf1c_525400f5fad7row3_col0\" class=\"data row3 col0\" >0.177156</td>\n",
        "                        <td id=\"T_c098f612_f827_11ea_bf1c_525400f5fad7row3_col1\" class=\"data row3 col1\" >0.688192</td>\n",
        "                        <td id=\"T_c098f612_f827_11ea_bf1c_525400f5fad7row3_col2\" class=\"data row3 col2\" >0.702035</td>\n",
        "                        <td id=\"T_c098f612_f827_11ea_bf1c_525400f5fad7row3_col3\" class=\"data row3 col3\" >1.000000</td>\n",
        "                        <td id=\"T_c098f612_f827_11ea_bf1c_525400f5fad7row3_col4\" class=\"data row3 col4\" >0.093148</td>\n",
        "                        <td id=\"T_c098f612_f827_11ea_bf1c_525400f5fad7row3_col5\" class=\"data row3 col5\" >-0.151051</td>\n",
        "                        <td id=\"T_c098f612_f827_11ea_bf1c_525400f5fad7row3_col6\" class=\"data row3 col6\" >-0.067707</td>\n",
        "                        <td id=\"T_c098f612_f827_11ea_bf1c_525400f5fad7row3_col7\" class=\"data row3 col7\" >-0.335274</td>\n",
        "                        <td id=\"T_c098f612_f827_11ea_bf1c_525400f5fad7row3_col8\" class=\"data row3 col8\" >-0.304524</td>\n",
        "                        <td id=\"T_c098f612_f827_11ea_bf1c_525400f5fad7row3_col9\" class=\"data row3 col9\" >-0.285032</td>\n",
        "                        <td id=\"T_c098f612_f827_11ea_bf1c_525400f5fad7row3_col10\" class=\"data row3 col10\" >0.103070</td>\n",
        "                        <td id=\"T_c098f612_f827_11ea_bf1c_525400f5fad7row3_col11\" class=\"data row3 col11\" >-0.131502</td>\n",
        "                        <td id=\"T_c098f612_f827_11ea_bf1c_525400f5fad7row3_col12\" class=\"data row3 col12\" >0.046394</td>\n",
        "                        <td id=\"T_c098f612_f827_11ea_bf1c_525400f5fad7row3_col13\" class=\"data row3 col13\" >-0.363123</td>\n",
        "                        <td id=\"T_c098f612_f827_11ea_bf1c_525400f5fad7row3_col14\" class=\"data row3 col14\" >-0.430651</td>\n",
        "                        <td id=\"T_c098f612_f827_11ea_bf1c_525400f5fad7row3_col15\" class=\"data row3 col15\" >-0.177052</td>\n",
        "                        <td id=\"T_c098f612_f827_11ea_bf1c_525400f5fad7row3_col16\" class=\"data row3 col16\" >-0.143580</td>\n",
        "            </tr>\n",
        "            <tr>\n",
        "                        <th id=\"T_c098f612_f827_11ea_bf1c_525400f5fad7level0_row4\" class=\"row_heading level0 row4\" >sigma</th>\n",
        "                        <td id=\"T_c098f612_f827_11ea_bf1c_525400f5fad7row4_col0\" class=\"data row4 col0\" >-0.196766</td>\n",
        "                        <td id=\"T_c098f612_f827_11ea_bf1c_525400f5fad7row4_col1\" class=\"data row4 col1\" >-0.065291</td>\n",
        "                        <td id=\"T_c098f612_f827_11ea_bf1c_525400f5fad7row4_col2\" class=\"data row4 col2\" >-0.112873</td>\n",
        "                        <td id=\"T_c098f612_f827_11ea_bf1c_525400f5fad7row4_col3\" class=\"data row4 col3\" >0.093148</td>\n",
        "                        <td id=\"T_c098f612_f827_11ea_bf1c_525400f5fad7row4_col4\" class=\"data row4 col4\" >1.000000</td>\n",
        "                        <td id=\"T_c098f612_f827_11ea_bf1c_525400f5fad7row4_col5\" class=\"data row4 col5\" >0.194749</td>\n",
        "                        <td id=\"T_c098f612_f827_11ea_bf1c_525400f5fad7row4_col6\" class=\"data row4 col6\" >0.022994</td>\n",
        "                        <td id=\"T_c098f612_f827_11ea_bf1c_525400f5fad7row4_col7\" class=\"data row4 col7\" >0.068655</td>\n",
        "                        <td id=\"T_c098f612_f827_11ea_bf1c_525400f5fad7row4_col8\" class=\"data row4 col8\" >-0.115906</td>\n",
        "                        <td id=\"T_c098f612_f827_11ea_bf1c_525400f5fad7row4_col9\" class=\"data row4 col9\" >0.029096</td>\n",
        "                        <td id=\"T_c098f612_f827_11ea_bf1c_525400f5fad7row4_col10\" class=\"data row4 col10\" >0.013475</td>\n",
        "                        <td id=\"T_c098f612_f827_11ea_bf1c_525400f5fad7row4_col11\" class=\"data row4 col11\" >-0.059986</td>\n",
        "                        <td id=\"T_c098f612_f827_11ea_bf1c_525400f5fad7row4_col12\" class=\"data row4 col12\" >0.036366</td>\n",
        "                        <td id=\"T_c098f612_f827_11ea_bf1c_525400f5fad7row4_col13\" class=\"data row4 col13\" >0.104489</td>\n",
        "                        <td id=\"T_c098f612_f827_11ea_bf1c_525400f5fad7row4_col14\" class=\"data row4 col14\" >-0.140251</td>\n",
        "                        <td id=\"T_c098f612_f827_11ea_bf1c_525400f5fad7row4_col15\" class=\"data row4 col15\" >0.094446</td>\n",
        "                        <td id=\"T_c098f612_f827_11ea_bf1c_525400f5fad7row4_col16\" class=\"data row4 col16\" >0.095224</td>\n",
        "            </tr>\n",
        "            <tr>\n",
        "                        <th id=\"T_c098f612_f827_11ea_bf1c_525400f5fad7level0_row5\" class=\"row_heading level0 row5\" >School_closing</th>\n",
        "                        <td id=\"T_c098f612_f827_11ea_bf1c_525400f5fad7row5_col0\" class=\"data row5 col0\" >-0.075553</td>\n",
        "                        <td id=\"T_c098f612_f827_11ea_bf1c_525400f5fad7row5_col1\" class=\"data row5 col1\" >-0.218599</td>\n",
        "                        <td id=\"T_c098f612_f827_11ea_bf1c_525400f5fad7row5_col2\" class=\"data row5 col2\" >-0.250307</td>\n",
        "                        <td id=\"T_c098f612_f827_11ea_bf1c_525400f5fad7row5_col3\" class=\"data row5 col3\" >-0.151051</td>\n",
        "                        <td id=\"T_c098f612_f827_11ea_bf1c_525400f5fad7row5_col4\" class=\"data row5 col4\" >0.194749</td>\n",
        "                        <td id=\"T_c098f612_f827_11ea_bf1c_525400f5fad7row5_col5\" class=\"data row5 col5\" >1.000000</td>\n",
        "                        <td id=\"T_c098f612_f827_11ea_bf1c_525400f5fad7row5_col6\" class=\"data row5 col6\" >0.739054</td>\n",
        "                        <td id=\"T_c098f612_f827_11ea_bf1c_525400f5fad7row5_col7\" class=\"data row5 col7\" >0.733578</td>\n",
        "                        <td id=\"T_c098f612_f827_11ea_bf1c_525400f5fad7row5_col8\" class=\"data row5 col8\" >0.658067</td>\n",
        "                        <td id=\"T_c098f612_f827_11ea_bf1c_525400f5fad7row5_col9\" class=\"data row5 col9\" >0.550531</td>\n",
        "                        <td id=\"T_c098f612_f827_11ea_bf1c_525400f5fad7row5_col10\" class=\"data row5 col10\" >0.576042</td>\n",
        "                        <td id=\"T_c098f612_f827_11ea_bf1c_525400f5fad7row5_col11\" class=\"data row5 col11\" >0.530942</td>\n",
        "                        <td id=\"T_c098f612_f827_11ea_bf1c_525400f5fad7row5_col12\" class=\"data row5 col12\" >0.581271</td>\n",
        "                        <td id=\"T_c098f612_f827_11ea_bf1c_525400f5fad7row5_col13\" class=\"data row5 col13\" >0.719081</td>\n",
        "                        <td id=\"T_c098f612_f827_11ea_bf1c_525400f5fad7row5_col14\" class=\"data row5 col14\" >0.435518</td>\n",
        "                        <td id=\"T_c098f612_f827_11ea_bf1c_525400f5fad7row5_col15\" class=\"data row5 col15\" >0.305560</td>\n",
        "                        <td id=\"T_c098f612_f827_11ea_bf1c_525400f5fad7row5_col16\" class=\"data row5 col16\" >0.828259</td>\n",
        "            </tr>\n",
        "            <tr>\n",
        "                        <th id=\"T_c098f612_f827_11ea_bf1c_525400f5fad7level0_row6\" class=\"row_heading level0 row6\" >Workplace_closing</th>\n",
        "                        <td id=\"T_c098f612_f827_11ea_bf1c_525400f5fad7row6_col0\" class=\"data row6 col0\" >0.028321</td>\n",
        "                        <td id=\"T_c098f612_f827_11ea_bf1c_525400f5fad7row6_col1\" class=\"data row6 col1\" >-0.103865</td>\n",
        "                        <td id=\"T_c098f612_f827_11ea_bf1c_525400f5fad7row6_col2\" class=\"data row6 col2\" >-0.151829</td>\n",
        "                        <td id=\"T_c098f612_f827_11ea_bf1c_525400f5fad7row6_col3\" class=\"data row6 col3\" >-0.067707</td>\n",
        "                        <td id=\"T_c098f612_f827_11ea_bf1c_525400f5fad7row6_col4\" class=\"data row6 col4\" >0.022994</td>\n",
        "                        <td id=\"T_c098f612_f827_11ea_bf1c_525400f5fad7row6_col5\" class=\"data row6 col5\" >0.739054</td>\n",
        "                        <td id=\"T_c098f612_f827_11ea_bf1c_525400f5fad7row6_col6\" class=\"data row6 col6\" >1.000000</td>\n",
        "                        <td id=\"T_c098f612_f827_11ea_bf1c_525400f5fad7row6_col7\" class=\"data row6 col7\" >0.719964</td>\n",
        "                        <td id=\"T_c098f612_f827_11ea_bf1c_525400f5fad7row6_col8\" class=\"data row6 col8\" >0.762743</td>\n",
        "                        <td id=\"T_c098f612_f827_11ea_bf1c_525400f5fad7row6_col9\" class=\"data row6 col9\" >0.575735</td>\n",
        "                        <td id=\"T_c098f612_f827_11ea_bf1c_525400f5fad7row6_col10\" class=\"data row6 col10\" >0.686748</td>\n",
        "                        <td id=\"T_c098f612_f827_11ea_bf1c_525400f5fad7row6_col11\" class=\"data row6 col11\" >0.651760</td>\n",
        "                        <td id=\"T_c098f612_f827_11ea_bf1c_525400f5fad7row6_col12\" class=\"data row6 col12\" >0.471098</td>\n",
        "                        <td id=\"T_c098f612_f827_11ea_bf1c_525400f5fad7row6_col13\" class=\"data row6 col13\" >0.769047</td>\n",
        "                        <td id=\"T_c098f612_f827_11ea_bf1c_525400f5fad7row6_col14\" class=\"data row6 col14\" >0.458703</td>\n",
        "                        <td id=\"T_c098f612_f827_11ea_bf1c_525400f5fad7row6_col15\" class=\"data row6 col15\" >0.311184</td>\n",
        "                        <td id=\"T_c098f612_f827_11ea_bf1c_525400f5fad7row6_col16\" class=\"data row6 col16\" >0.863540</td>\n",
        "            </tr>\n",
        "            <tr>\n",
        "                        <th id=\"T_c098f612_f827_11ea_bf1c_525400f5fad7level0_row7\" class=\"row_heading level0 row7\" >Cancel_events</th>\n",
        "                        <td id=\"T_c098f612_f827_11ea_bf1c_525400f5fad7row7_col0\" class=\"data row7 col0\" >-0.041841</td>\n",
        "                        <td id=\"T_c098f612_f827_11ea_bf1c_525400f5fad7row7_col1\" class=\"data row7 col1\" >-0.275347</td>\n",
        "                        <td id=\"T_c098f612_f827_11ea_bf1c_525400f5fad7row7_col2\" class=\"data row7 col2\" >-0.300695</td>\n",
        "                        <td id=\"T_c098f612_f827_11ea_bf1c_525400f5fad7row7_col3\" class=\"data row7 col3\" >-0.335274</td>\n",
        "                        <td id=\"T_c098f612_f827_11ea_bf1c_525400f5fad7row7_col4\" class=\"data row7 col4\" >0.068655</td>\n",
        "                        <td id=\"T_c098f612_f827_11ea_bf1c_525400f5fad7row7_col5\" class=\"data row7 col5\" >0.733578</td>\n",
        "                        <td id=\"T_c098f612_f827_11ea_bf1c_525400f5fad7row7_col6\" class=\"data row7 col6\" >0.719964</td>\n",
        "                        <td id=\"T_c098f612_f827_11ea_bf1c_525400f5fad7row7_col7\" class=\"data row7 col7\" >1.000000</td>\n",
        "                        <td id=\"T_c098f612_f827_11ea_bf1c_525400f5fad7row7_col8\" class=\"data row7 col8\" >0.811798</td>\n",
        "                        <td id=\"T_c098f612_f827_11ea_bf1c_525400f5fad7row7_col9\" class=\"data row7 col9\" >0.498301</td>\n",
        "                        <td id=\"T_c098f612_f827_11ea_bf1c_525400f5fad7row7_col10\" class=\"data row7 col10\" >0.551059</td>\n",
        "                        <td id=\"T_c098f612_f827_11ea_bf1c_525400f5fad7row7_col11\" class=\"data row7 col11\" >0.633208</td>\n",
        "                        <td id=\"T_c098f612_f827_11ea_bf1c_525400f5fad7row7_col12\" class=\"data row7 col12\" >0.472399</td>\n",
        "                        <td id=\"T_c098f612_f827_11ea_bf1c_525400f5fad7row7_col13\" class=\"data row7 col13\" >0.887114</td>\n",
        "                        <td id=\"T_c098f612_f827_11ea_bf1c_525400f5fad7row7_col14\" class=\"data row7 col14\" >0.612428</td>\n",
        "                        <td id=\"T_c098f612_f827_11ea_bf1c_525400f5fad7row7_col15\" class=\"data row7 col15\" >0.603295</td>\n",
        "                        <td id=\"T_c098f612_f827_11ea_bf1c_525400f5fad7row7_col16\" class=\"data row7 col16\" >0.832679</td>\n",
        "            </tr>\n",
        "            <tr>\n",
        "                        <th id=\"T_c098f612_f827_11ea_bf1c_525400f5fad7level0_row8\" class=\"row_heading level0 row8\" >Gatherings_restrictions</th>\n",
        "                        <td id=\"T_c098f612_f827_11ea_bf1c_525400f5fad7row8_col0\" class=\"data row8 col0\" >-0.043993</td>\n",
        "                        <td id=\"T_c098f612_f827_11ea_bf1c_525400f5fad7row8_col1\" class=\"data row8 col1\" >-0.285449</td>\n",
        "                        <td id=\"T_c098f612_f827_11ea_bf1c_525400f5fad7row8_col2\" class=\"data row8 col2\" >-0.282911</td>\n",
        "                        <td id=\"T_c098f612_f827_11ea_bf1c_525400f5fad7row8_col3\" class=\"data row8 col3\" >-0.304524</td>\n",
        "                        <td id=\"T_c098f612_f827_11ea_bf1c_525400f5fad7row8_col4\" class=\"data row8 col4\" >-0.115906</td>\n",
        "                        <td id=\"T_c098f612_f827_11ea_bf1c_525400f5fad7row8_col5\" class=\"data row8 col5\" >0.658067</td>\n",
        "                        <td id=\"T_c098f612_f827_11ea_bf1c_525400f5fad7row8_col6\" class=\"data row8 col6\" >0.762743</td>\n",
        "                        <td id=\"T_c098f612_f827_11ea_bf1c_525400f5fad7row8_col7\" class=\"data row8 col7\" >0.811798</td>\n",
        "                        <td id=\"T_c098f612_f827_11ea_bf1c_525400f5fad7row8_col8\" class=\"data row8 col8\" >1.000000</td>\n",
        "                        <td id=\"T_c098f612_f827_11ea_bf1c_525400f5fad7row8_col9\" class=\"data row8 col9\" >0.695719</td>\n",
        "                        <td id=\"T_c098f612_f827_11ea_bf1c_525400f5fad7row8_col10\" class=\"data row8 col10\" >0.659327</td>\n",
        "                        <td id=\"T_c098f612_f827_11ea_bf1c_525400f5fad7row8_col11\" class=\"data row8 col11\" >0.740300</td>\n",
        "                        <td id=\"T_c098f612_f827_11ea_bf1c_525400f5fad7row8_col12\" class=\"data row8 col12\" >0.548631</td>\n",
        "                        <td id=\"T_c098f612_f827_11ea_bf1c_525400f5fad7row8_col13\" class=\"data row8 col13\" >0.824618</td>\n",
        "                        <td id=\"T_c098f612_f827_11ea_bf1c_525400f5fad7row8_col14\" class=\"data row8 col14\" >0.640860</td>\n",
        "                        <td id=\"T_c098f612_f827_11ea_bf1c_525400f5fad7row8_col15\" class=\"data row8 col15\" >0.402474</td>\n",
        "                        <td id=\"T_c098f612_f827_11ea_bf1c_525400f5fad7row8_col16\" class=\"data row8 col16\" >0.861618</td>\n",
        "            </tr>\n",
        "            <tr>\n",
        "                        <th id=\"T_c098f612_f827_11ea_bf1c_525400f5fad7level0_row9\" class=\"row_heading level0 row9\" >Transport_closing</th>\n",
        "                        <td id=\"T_c098f612_f827_11ea_bf1c_525400f5fad7row9_col0\" class=\"data row9 col0\" >-0.156590</td>\n",
        "                        <td id=\"T_c098f612_f827_11ea_bf1c_525400f5fad7row9_col1\" class=\"data row9 col1\" >-0.267602</td>\n",
        "                        <td id=\"T_c098f612_f827_11ea_bf1c_525400f5fad7row9_col2\" class=\"data row9 col2\" >-0.276971</td>\n",
        "                        <td id=\"T_c098f612_f827_11ea_bf1c_525400f5fad7row9_col3\" class=\"data row9 col3\" >-0.285032</td>\n",
        "                        <td id=\"T_c098f612_f827_11ea_bf1c_525400f5fad7row9_col4\" class=\"data row9 col4\" >0.029096</td>\n",
        "                        <td id=\"T_c098f612_f827_11ea_bf1c_525400f5fad7row9_col5\" class=\"data row9 col5\" >0.550531</td>\n",
        "                        <td id=\"T_c098f612_f827_11ea_bf1c_525400f5fad7row9_col6\" class=\"data row9 col6\" >0.575735</td>\n",
        "                        <td id=\"T_c098f612_f827_11ea_bf1c_525400f5fad7row9_col7\" class=\"data row9 col7\" >0.498301</td>\n",
        "                        <td id=\"T_c098f612_f827_11ea_bf1c_525400f5fad7row9_col8\" class=\"data row9 col8\" >0.695719</td>\n",
        "                        <td id=\"T_c098f612_f827_11ea_bf1c_525400f5fad7row9_col9\" class=\"data row9 col9\" >1.000000</td>\n",
        "                        <td id=\"T_c098f612_f827_11ea_bf1c_525400f5fad7row9_col10\" class=\"data row9 col10\" >0.607876</td>\n",
        "                        <td id=\"T_c098f612_f827_11ea_bf1c_525400f5fad7row9_col11\" class=\"data row9 col11\" >0.678501</td>\n",
        "                        <td id=\"T_c098f612_f827_11ea_bf1c_525400f5fad7row9_col12\" class=\"data row9 col12\" >0.572240</td>\n",
        "                        <td id=\"T_c098f612_f827_11ea_bf1c_525400f5fad7row9_col13\" class=\"data row9 col13\" >0.525732</td>\n",
        "                        <td id=\"T_c098f612_f827_11ea_bf1c_525400f5fad7row9_col14\" class=\"data row9 col14\" >0.363363</td>\n",
        "                        <td id=\"T_c098f612_f827_11ea_bf1c_525400f5fad7row9_col15\" class=\"data row9 col15\" >0.187670</td>\n",
        "                        <td id=\"T_c098f612_f827_11ea_bf1c_525400f5fad7row9_col16\" class=\"data row9 col16\" >0.754797</td>\n",
        "            </tr>\n",
        "            <tr>\n",
        "                        <th id=\"T_c098f612_f827_11ea_bf1c_525400f5fad7level0_row10\" class=\"row_heading level0 row10\" >Stay_home_restrictions</th>\n",
        "                        <td id=\"T_c098f612_f827_11ea_bf1c_525400f5fad7row10_col0\" class=\"data row10 col0\" >-0.163376</td>\n",
        "                        <td id=\"T_c098f612_f827_11ea_bf1c_525400f5fad7row10_col1\" class=\"data row10 col1\" >0.122566</td>\n",
        "                        <td id=\"T_c098f612_f827_11ea_bf1c_525400f5fad7row10_col2\" class=\"data row10 col2\" >0.118422</td>\n",
        "                        <td id=\"T_c098f612_f827_11ea_bf1c_525400f5fad7row10_col3\" class=\"data row10 col3\" >0.103070</td>\n",
        "                        <td id=\"T_c098f612_f827_11ea_bf1c_525400f5fad7row10_col4\" class=\"data row10 col4\" >0.013475</td>\n",
        "                        <td id=\"T_c098f612_f827_11ea_bf1c_525400f5fad7row10_col5\" class=\"data row10 col5\" >0.576042</td>\n",
        "                        <td id=\"T_c098f612_f827_11ea_bf1c_525400f5fad7row10_col6\" class=\"data row10 col6\" >0.686748</td>\n",
        "                        <td id=\"T_c098f612_f827_11ea_bf1c_525400f5fad7row10_col7\" class=\"data row10 col7\" >0.551059</td>\n",
        "                        <td id=\"T_c098f612_f827_11ea_bf1c_525400f5fad7row10_col8\" class=\"data row10 col8\" >0.659327</td>\n",
        "                        <td id=\"T_c098f612_f827_11ea_bf1c_525400f5fad7row10_col9\" class=\"data row10 col9\" >0.607876</td>\n",
        "                        <td id=\"T_c098f612_f827_11ea_bf1c_525400f5fad7row10_col10\" class=\"data row10 col10\" >1.000000</td>\n",
        "                        <td id=\"T_c098f612_f827_11ea_bf1c_525400f5fad7row10_col11\" class=\"data row10 col11\" >0.776787</td>\n",
        "                        <td id=\"T_c098f612_f827_11ea_bf1c_525400f5fad7row10_col12\" class=\"data row10 col12\" >0.667135</td>\n",
        "                        <td id=\"T_c098f612_f827_11ea_bf1c_525400f5fad7row10_col13\" class=\"data row10 col13\" >0.512730</td>\n",
        "                        <td id=\"T_c098f612_f827_11ea_bf1c_525400f5fad7row10_col14\" class=\"data row10 col14\" >0.363983</td>\n",
        "                        <td id=\"T_c098f612_f827_11ea_bf1c_525400f5fad7row10_col15\" class=\"data row10 col15\" >0.428755</td>\n",
        "                        <td id=\"T_c098f612_f827_11ea_bf1c_525400f5fad7row10_col16\" class=\"data row10 col16\" >0.797801</td>\n",
        "            </tr>\n",
        "            <tr>\n",
        "                        <th id=\"T_c098f612_f827_11ea_bf1c_525400f5fad7level0_row11\" class=\"row_heading level0 row11\" >Internal_movement_restrictions</th>\n",
        "                        <td id=\"T_c098f612_f827_11ea_bf1c_525400f5fad7row11_col0\" class=\"data row11 col0\" >-0.167412</td>\n",
        "                        <td id=\"T_c098f612_f827_11ea_bf1c_525400f5fad7row11_col1\" class=\"data row11 col1\" >-0.044043</td>\n",
        "                        <td id=\"T_c098f612_f827_11ea_bf1c_525400f5fad7row11_col2\" class=\"data row11 col2\" >-0.062749</td>\n",
        "                        <td id=\"T_c098f612_f827_11ea_bf1c_525400f5fad7row11_col3\" class=\"data row11 col3\" >-0.131502</td>\n",
        "                        <td id=\"T_c098f612_f827_11ea_bf1c_525400f5fad7row11_col4\" class=\"data row11 col4\" >-0.059986</td>\n",
        "                        <td id=\"T_c098f612_f827_11ea_bf1c_525400f5fad7row11_col5\" class=\"data row11 col5\" >0.530942</td>\n",
        "                        <td id=\"T_c098f612_f827_11ea_bf1c_525400f5fad7row11_col6\" class=\"data row11 col6\" >0.651760</td>\n",
        "                        <td id=\"T_c098f612_f827_11ea_bf1c_525400f5fad7row11_col7\" class=\"data row11 col7\" >0.633208</td>\n",
        "                        <td id=\"T_c098f612_f827_11ea_bf1c_525400f5fad7row11_col8\" class=\"data row11 col8\" >0.740300</td>\n",
        "                        <td id=\"T_c098f612_f827_11ea_bf1c_525400f5fad7row11_col9\" class=\"data row11 col9\" >0.678501</td>\n",
        "                        <td id=\"T_c098f612_f827_11ea_bf1c_525400f5fad7row11_col10\" class=\"data row11 col10\" >0.776787</td>\n",
        "                        <td id=\"T_c098f612_f827_11ea_bf1c_525400f5fad7row11_col11\" class=\"data row11 col11\" >1.000000</td>\n",
        "                        <td id=\"T_c098f612_f827_11ea_bf1c_525400f5fad7row11_col12\" class=\"data row11 col12\" >0.565263</td>\n",
        "                        <td id=\"T_c098f612_f827_11ea_bf1c_525400f5fad7row11_col13\" class=\"data row11 col13\" >0.584037</td>\n",
        "                        <td id=\"T_c098f612_f827_11ea_bf1c_525400f5fad7row11_col14\" class=\"data row11 col14\" >0.451121</td>\n",
        "                        <td id=\"T_c098f612_f827_11ea_bf1c_525400f5fad7row11_col15\" class=\"data row11 col15\" >0.391432</td>\n",
        "                        <td id=\"T_c098f612_f827_11ea_bf1c_525400f5fad7row11_col16\" class=\"data row11 col16\" >0.774870</td>\n",
        "            </tr>\n",
        "            <tr>\n",
        "                        <th id=\"T_c098f612_f827_11ea_bf1c_525400f5fad7level0_row12\" class=\"row_heading level0 row12\" >International_movement_restrictions</th>\n",
        "                        <td id=\"T_c098f612_f827_11ea_bf1c_525400f5fad7row12_col0\" class=\"data row12 col0\" >-0.272032</td>\n",
        "                        <td id=\"T_c098f612_f827_11ea_bf1c_525400f5fad7row12_col1\" class=\"data row12 col1\" >0.157921</td>\n",
        "                        <td id=\"T_c098f612_f827_11ea_bf1c_525400f5fad7row12_col2\" class=\"data row12 col2\" >0.172234</td>\n",
        "                        <td id=\"T_c098f612_f827_11ea_bf1c_525400f5fad7row12_col3\" class=\"data row12 col3\" >0.046394</td>\n",
        "                        <td id=\"T_c098f612_f827_11ea_bf1c_525400f5fad7row12_col4\" class=\"data row12 col4\" >0.036366</td>\n",
        "                        <td id=\"T_c098f612_f827_11ea_bf1c_525400f5fad7row12_col5\" class=\"data row12 col5\" >0.581271</td>\n",
        "                        <td id=\"T_c098f612_f827_11ea_bf1c_525400f5fad7row12_col6\" class=\"data row12 col6\" >0.471098</td>\n",
        "                        <td id=\"T_c098f612_f827_11ea_bf1c_525400f5fad7row12_col7\" class=\"data row12 col7\" >0.472399</td>\n",
        "                        <td id=\"T_c098f612_f827_11ea_bf1c_525400f5fad7row12_col8\" class=\"data row12 col8\" >0.548631</td>\n",
        "                        <td id=\"T_c098f612_f827_11ea_bf1c_525400f5fad7row12_col9\" class=\"data row12 col9\" >0.572240</td>\n",
        "                        <td id=\"T_c098f612_f827_11ea_bf1c_525400f5fad7row12_col10\" class=\"data row12 col10\" >0.667135</td>\n",
        "                        <td id=\"T_c098f612_f827_11ea_bf1c_525400f5fad7row12_col11\" class=\"data row12 col11\" >0.565263</td>\n",
        "                        <td id=\"T_c098f612_f827_11ea_bf1c_525400f5fad7row12_col12\" class=\"data row12 col12\" >1.000000</td>\n",
        "                        <td id=\"T_c098f612_f827_11ea_bf1c_525400f5fad7row12_col13\" class=\"data row12 col13\" >0.432926</td>\n",
        "                        <td id=\"T_c098f612_f827_11ea_bf1c_525400f5fad7row12_col14\" class=\"data row12 col14\" >0.372718</td>\n",
        "                        <td id=\"T_c098f612_f827_11ea_bf1c_525400f5fad7row12_col15\" class=\"data row12 col15\" >0.392550</td>\n",
        "                        <td id=\"T_c098f612_f827_11ea_bf1c_525400f5fad7row12_col16\" class=\"data row12 col16\" >0.701809</td>\n",
        "            </tr>\n",
        "            <tr>\n",
        "                        <th id=\"T_c098f612_f827_11ea_bf1c_525400f5fad7level0_row13\" class=\"row_heading level0 row13\" >Information_campaigns</th>\n",
        "                        <td id=\"T_c098f612_f827_11ea_bf1c_525400f5fad7row13_col0\" class=\"data row13 col0\" >-0.031012</td>\n",
        "                        <td id=\"T_c098f612_f827_11ea_bf1c_525400f5fad7row13_col1\" class=\"data row13 col1\" >-0.332461</td>\n",
        "                        <td id=\"T_c098f612_f827_11ea_bf1c_525400f5fad7row13_col2\" class=\"data row13 col2\" >-0.357497</td>\n",
        "                        <td id=\"T_c098f612_f827_11ea_bf1c_525400f5fad7row13_col3\" class=\"data row13 col3\" >-0.363123</td>\n",
        "                        <td id=\"T_c098f612_f827_11ea_bf1c_525400f5fad7row13_col4\" class=\"data row13 col4\" >0.104489</td>\n",
        "                        <td id=\"T_c098f612_f827_11ea_bf1c_525400f5fad7row13_col5\" class=\"data row13 col5\" >0.719081</td>\n",
        "                        <td id=\"T_c098f612_f827_11ea_bf1c_525400f5fad7row13_col6\" class=\"data row13 col6\" >0.769047</td>\n",
        "                        <td id=\"T_c098f612_f827_11ea_bf1c_525400f5fad7row13_col7\" class=\"data row13 col7\" >0.887114</td>\n",
        "                        <td id=\"T_c098f612_f827_11ea_bf1c_525400f5fad7row13_col8\" class=\"data row13 col8\" >0.824618</td>\n",
        "                        <td id=\"T_c098f612_f827_11ea_bf1c_525400f5fad7row13_col9\" class=\"data row13 col9\" >0.525732</td>\n",
        "                        <td id=\"T_c098f612_f827_11ea_bf1c_525400f5fad7row13_col10\" class=\"data row13 col10\" >0.512730</td>\n",
        "                        <td id=\"T_c098f612_f827_11ea_bf1c_525400f5fad7row13_col11\" class=\"data row13 col11\" >0.584037</td>\n",
        "                        <td id=\"T_c098f612_f827_11ea_bf1c_525400f5fad7row13_col12\" class=\"data row13 col12\" >0.432926</td>\n",
        "                        <td id=\"T_c098f612_f827_11ea_bf1c_525400f5fad7row13_col13\" class=\"data row13 col13\" >1.000000</td>\n",
        "                        <td id=\"T_c098f612_f827_11ea_bf1c_525400f5fad7row13_col14\" class=\"data row13 col14\" >0.612928</td>\n",
        "                        <td id=\"T_c098f612_f827_11ea_bf1c_525400f5fad7row13_col15\" class=\"data row13 col15\" >0.549081</td>\n",
        "                        <td id=\"T_c098f612_f827_11ea_bf1c_525400f5fad7row13_col16\" class=\"data row13 col16\" >0.835988</td>\n",
        "            </tr>\n",
        "            <tr>\n",
        "                        <th id=\"T_c098f612_f827_11ea_bf1c_525400f5fad7level0_row14\" class=\"row_heading level0 row14\" >Testing_policy</th>\n",
        "                        <td id=\"T_c098f612_f827_11ea_bf1c_525400f5fad7row14_col0\" class=\"data row14 col0\" >-0.094835</td>\n",
        "                        <td id=\"T_c098f612_f827_11ea_bf1c_525400f5fad7row14_col1\" class=\"data row14 col1\" >-0.315626</td>\n",
        "                        <td id=\"T_c098f612_f827_11ea_bf1c_525400f5fad7row14_col2\" class=\"data row14 col2\" >-0.246507</td>\n",
        "                        <td id=\"T_c098f612_f827_11ea_bf1c_525400f5fad7row14_col3\" class=\"data row14 col3\" >-0.430651</td>\n",
        "                        <td id=\"T_c098f612_f827_11ea_bf1c_525400f5fad7row14_col4\" class=\"data row14 col4\" >-0.140251</td>\n",
        "                        <td id=\"T_c098f612_f827_11ea_bf1c_525400f5fad7row14_col5\" class=\"data row14 col5\" >0.435518</td>\n",
        "                        <td id=\"T_c098f612_f827_11ea_bf1c_525400f5fad7row14_col6\" class=\"data row14 col6\" >0.458703</td>\n",
        "                        <td id=\"T_c098f612_f827_11ea_bf1c_525400f5fad7row14_col7\" class=\"data row14 col7\" >0.612428</td>\n",
        "                        <td id=\"T_c098f612_f827_11ea_bf1c_525400f5fad7row14_col8\" class=\"data row14 col8\" >0.640860</td>\n",
        "                        <td id=\"T_c098f612_f827_11ea_bf1c_525400f5fad7row14_col9\" class=\"data row14 col9\" >0.363363</td>\n",
        "                        <td id=\"T_c098f612_f827_11ea_bf1c_525400f5fad7row14_col10\" class=\"data row14 col10\" >0.363983</td>\n",
        "                        <td id=\"T_c098f612_f827_11ea_bf1c_525400f5fad7row14_col11\" class=\"data row14 col11\" >0.451121</td>\n",
        "                        <td id=\"T_c098f612_f827_11ea_bf1c_525400f5fad7row14_col12\" class=\"data row14 col12\" >0.372718</td>\n",
        "                        <td id=\"T_c098f612_f827_11ea_bf1c_525400f5fad7row14_col13\" class=\"data row14 col13\" >0.612928</td>\n",
        "                        <td id=\"T_c098f612_f827_11ea_bf1c_525400f5fad7row14_col14\" class=\"data row14 col14\" >1.000000</td>\n",
        "                        <td id=\"T_c098f612_f827_11ea_bf1c_525400f5fad7row14_col15\" class=\"data row14 col15\" >0.387164</td>\n",
        "                        <td id=\"T_c098f612_f827_11ea_bf1c_525400f5fad7row14_col16\" class=\"data row14 col16\" >0.457859</td>\n",
        "            </tr>\n",
        "            <tr>\n",
        "                        <th id=\"T_c098f612_f827_11ea_bf1c_525400f5fad7level0_row15\" class=\"row_heading level0 row15\" >Contact_tracing</th>\n",
        "                        <td id=\"T_c098f612_f827_11ea_bf1c_525400f5fad7row15_col0\" class=\"data row15 col0\" >-0.171698</td>\n",
        "                        <td id=\"T_c098f612_f827_11ea_bf1c_525400f5fad7row15_col1\" class=\"data row15 col1\" >0.015380</td>\n",
        "                        <td id=\"T_c098f612_f827_11ea_bf1c_525400f5fad7row15_col2\" class=\"data row15 col2\" >0.010810</td>\n",
        "                        <td id=\"T_c098f612_f827_11ea_bf1c_525400f5fad7row15_col3\" class=\"data row15 col3\" >-0.177052</td>\n",
        "                        <td id=\"T_c098f612_f827_11ea_bf1c_525400f5fad7row15_col4\" class=\"data row15 col4\" >0.094446</td>\n",
        "                        <td id=\"T_c098f612_f827_11ea_bf1c_525400f5fad7row15_col5\" class=\"data row15 col5\" >0.305560</td>\n",
        "                        <td id=\"T_c098f612_f827_11ea_bf1c_525400f5fad7row15_col6\" class=\"data row15 col6\" >0.311184</td>\n",
        "                        <td id=\"T_c098f612_f827_11ea_bf1c_525400f5fad7row15_col7\" class=\"data row15 col7\" >0.603295</td>\n",
        "                        <td id=\"T_c098f612_f827_11ea_bf1c_525400f5fad7row15_col8\" class=\"data row15 col8\" >0.402474</td>\n",
        "                        <td id=\"T_c098f612_f827_11ea_bf1c_525400f5fad7row15_col9\" class=\"data row15 col9\" >0.187670</td>\n",
        "                        <td id=\"T_c098f612_f827_11ea_bf1c_525400f5fad7row15_col10\" class=\"data row15 col10\" >0.428755</td>\n",
        "                        <td id=\"T_c098f612_f827_11ea_bf1c_525400f5fad7row15_col11\" class=\"data row15 col11\" >0.391432</td>\n",
        "                        <td id=\"T_c098f612_f827_11ea_bf1c_525400f5fad7row15_col12\" class=\"data row15 col12\" >0.392550</td>\n",
        "                        <td id=\"T_c098f612_f827_11ea_bf1c_525400f5fad7row15_col13\" class=\"data row15 col13\" >0.549081</td>\n",
        "                        <td id=\"T_c098f612_f827_11ea_bf1c_525400f5fad7row15_col14\" class=\"data row15 col14\" >0.387164</td>\n",
        "                        <td id=\"T_c098f612_f827_11ea_bf1c_525400f5fad7row15_col15\" class=\"data row15 col15\" >1.000000</td>\n",
        "                        <td id=\"T_c098f612_f827_11ea_bf1c_525400f5fad7row15_col16\" class=\"data row15 col16\" >0.477058</td>\n",
        "            </tr>\n",
        "            <tr>\n",
        "                        <th id=\"T_c098f612_f827_11ea_bf1c_525400f5fad7level0_row16\" class=\"row_heading level0 row16\" >Stringency_index</th>\n",
        "                        <td id=\"T_c098f612_f827_11ea_bf1c_525400f5fad7row16_col0\" class=\"data row16 col0\" >-0.100510</td>\n",
        "                        <td id=\"T_c098f612_f827_11ea_bf1c_525400f5fad7row16_col1\" class=\"data row16 col1\" >-0.130399</td>\n",
        "                        <td id=\"T_c098f612_f827_11ea_bf1c_525400f5fad7row16_col2\" class=\"data row16 col2\" >-0.177620</td>\n",
        "                        <td id=\"T_c098f612_f827_11ea_bf1c_525400f5fad7row16_col3\" class=\"data row16 col3\" >-0.143580</td>\n",
        "                        <td id=\"T_c098f612_f827_11ea_bf1c_525400f5fad7row16_col4\" class=\"data row16 col4\" >0.095224</td>\n",
        "                        <td id=\"T_c098f612_f827_11ea_bf1c_525400f5fad7row16_col5\" class=\"data row16 col5\" >0.828259</td>\n",
        "                        <td id=\"T_c098f612_f827_11ea_bf1c_525400f5fad7row16_col6\" class=\"data row16 col6\" >0.863540</td>\n",
        "                        <td id=\"T_c098f612_f827_11ea_bf1c_525400f5fad7row16_col7\" class=\"data row16 col7\" >0.832679</td>\n",
        "                        <td id=\"T_c098f612_f827_11ea_bf1c_525400f5fad7row16_col8\" class=\"data row16 col8\" >0.861618</td>\n",
        "                        <td id=\"T_c098f612_f827_11ea_bf1c_525400f5fad7row16_col9\" class=\"data row16 col9\" >0.754797</td>\n",
        "                        <td id=\"T_c098f612_f827_11ea_bf1c_525400f5fad7row16_col10\" class=\"data row16 col10\" >0.797801</td>\n",
        "                        <td id=\"T_c098f612_f827_11ea_bf1c_525400f5fad7row16_col11\" class=\"data row16 col11\" >0.774870</td>\n",
        "                        <td id=\"T_c098f612_f827_11ea_bf1c_525400f5fad7row16_col12\" class=\"data row16 col12\" >0.701809</td>\n",
        "                        <td id=\"T_c098f612_f827_11ea_bf1c_525400f5fad7row16_col13\" class=\"data row16 col13\" >0.835988</td>\n",
        "                        <td id=\"T_c098f612_f827_11ea_bf1c_525400f5fad7row16_col14\" class=\"data row16 col14\" >0.457859</td>\n",
        "                        <td id=\"T_c098f612_f827_11ea_bf1c_525400f5fad7row16_col15\" class=\"data row16 col15\" >0.477058</td>\n",
        "                        <td id=\"T_c098f612_f827_11ea_bf1c_525400f5fad7row16_col16\" class=\"data row16 col16\" >1.000000</td>\n",
        "            </tr>\n",
        "    </tbody></table>"
       ],
       "output_type": "pyout",
       "prompt_number": 21,
       "text": [
        "<pandas.io.formats.style.Styler at 0x7fcdcf510df0>"
       ]
      }
     ],
     "prompt_number": 21
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "# Scatter plot of Stringency index and Rt\n",
      "df = track_df.copy()\n",
      "sns.scatterplot(data=df, x=\"Stringency_index\", y=\"Rt\", hue=\"Country\", legend=\"brief\", marker=\"+\")\n",
      "bbox_to_anchor=(1.02, 0)\n",
      "bbox_loc=\"lower left\"\n",
      "plt.legend(bbox_to_anchor=bbox_to_anchor, loc=bbox_loc, borderaxespad=0)\n",
      "plt.title(\"Relationship of Stringency index and reproduction number\")\n",
      "plt.ylabel(\"Reproduction number\")\n",
      "plt.xlabel(\"Stringency index\")\n",
      "plt.show()"
     ],
     "language": "python",
     "metadata": {},
     "outputs": [
      {
       "output_type": "display_data",
       "png": "\n",
       "text": [
        "<Figure size 432x288 with 1 Axes>"
       ]
      }
     ],
     "prompt_number": 22
    }
   ],
   "metadata": {}
  }
 ]
}
