{
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3.8.2 64-bit ('.venv': venv)",
   "name": "python_defaultSpec_1597669925034"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.8.2-final"
  },
  "name": ""
 },
 "nbformat": 3,
 "nbformat_minor": 0,
 "worksheets": [
  {
   "cells": [
    {
     "cell_type": "markdown",
     "metadata": {},
     "source": [
      "# Usage (details: policy measures)\n",
      "Here, we will analyse the relationship of policy measures and parameter values of SIR-derived ODE models. Policy measures are tracked by [Oxford Covid-19 Government Response Tracker (OxCGRT)](https://github.com/OxCGRT/covid-policy-tracker)."
     ]
    },
    {
     "cell_type": "heading",
     "level": 2,
     "metadata": {},
     "source": [
      "Preparation"
     ]
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "# Standard users\n",
      "# !pip install covsirphy\n",
      "# Developers (Note: this notebook is in example directory)\n",
      "import os\n",
      "os.chdir(\"../\")"
     ],
     "language": "python",
     "metadata": {},
     "outputs": [],
     "prompt_number": 1
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "from pprint import pprint"
     ],
     "language": "python",
     "metadata": {},
     "outputs": [],
     "prompt_number": 2
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "import covsirphy as cs\n",
      "cs.__version__"
     ],
     "language": "python",
     "metadata": {},
     "outputs": [
      {
       "output_type": "pyout",
       "prompt_number": 3,
       "text": [
        "'2.8.2'"
       ]
      }
     ],
     "prompt_number": 3
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "# Standard users and developers\n",
      "data_loader = cs.DataLoader(\"input\")\n",
      "# The number of cases (JHU style)\n",
      "jhu_data = data_loader.jhu(verbose=False)\n",
      "# Population in each country\n",
      "population_data = data_loader.population(verbose=False)\n",
      "# Government Response Tracker (OxCGRT)\n",
      "oxcgrt_data = data_loader.oxcgrt(verbose=False)\n",
      "# Description/citation\n",
      "print(oxcgrt_data.citation)"
     ],
     "language": "python",
     "metadata": {
      "tags": []
     },
     "outputs": [
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "(Secondary source) Guidotti, E., Ardia, D., (2020), \"COVID-19 Data Hub\", Journal of Open Source Software 5(51):2376, doi: 10.21105/joss.02376.\n",
        "We can get Citation list of primary sources with DataLoader(...).covid19dh_citation"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      }
     ],
     "prompt_number": 4
    },
    {
     "cell_type": "markdown",
     "metadata": {},
     "source": [
      "## Class for policy measure analysis\n",
      "We will `PolicyMeasures` class to find relationship of policy measures and parameter values of SIR-derived ODE models."
     ]
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "# Create analyser with tau value 360 [min] (can be changed)\n",
      "analyser = cs.PolicyMeasures(jhu_data, population_data, oxcgrt_data, tau=360)\n",
      "# The number of registerd countries\n",
      "len(analyser.countries)"
     ],
     "language": "python",
     "metadata": {
      "tags": []
     },
     "outputs": [
      {
       "output_type": "pyout",
       "prompt_number": 5,
       "text": [
        "184"
       ]
      }
     ],
     "prompt_number": 5
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "# We can get Scenario instance for detailed scenario analysis\n",
      "type(analyser.scenario(\"Japan\"))"
     ],
     "language": "python",
     "metadata": {},
     "outputs": [
      {
       "output_type": "pyout",
       "prompt_number": 6,
       "text": [
        "covsirphy.analysis.scenario.Scenario"
       ]
      }
     ],
     "prompt_number": 6
    },
    {
     "cell_type": "markdown",
     "metadata": {},
     "source": [
      "## Set phases with S-R trend analysis\n",
      "We will perform S-R trend analysis to set phases in all countries. Countries which do not have **9th phases** will be un-registered for the next analysis. This number will be adjusted for your analysis."
     ]
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "# Show the number of phases of all countries\n",
      "analyser.trend()\n",
      "pprint(analyser.phase_len(), compact=True)"
     ],
     "language": "python",
     "metadata": {},
     "outputs": [
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "{"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "3"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ": "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "['Belize', 'Trinidad and Tobago', 'Tanzania', 'Dominica']"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        " "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "4"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ": "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "["
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Seychelles'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Namibia'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Mauritius'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Papua New Guinea'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Brunei'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        "     "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Gambia'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Bahamas'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "]"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        " "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "5"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ": "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "["
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Sao Tome and Principe'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Malta'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Antigua and Barbuda'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Israel'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        "     "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Kyrgyzstan'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Guyana'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Fiji'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Grenada'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Lesotho'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Libya'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "]"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        " "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "6"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ": "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "["
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Norway'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Venezuela'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Iceland'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'San Marino'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Paraguay'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Syria'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        "     "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'South Sudan'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Montenegro'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Kosovo'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Uganda'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Zambia'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Ethiopia'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        "     "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Morocco'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Spain'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Ireland'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Botswana'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Mongolia'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Lebanon'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        "     "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Equatorial Guinea'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Guatemala'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Cambodia'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Liechtenstein'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Jordan'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        "     "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Yemen'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Central African Republic'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Philippines'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'New Zealand'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        "     "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Vietnam'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Saint Vincent and the Grenadines'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "]"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        " "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "7"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ": "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "["
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Rwanda'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Angola'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Benin'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Madagascar'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Saint Lucia'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Kazakhstan'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        "     "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Suriname'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Cyprus'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Eritrea'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Costa Rica'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Netherlands'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Burundi'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        "     "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Zimbabwe'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Malawi'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Australia'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Croatia'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Nicaragua'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Nepal'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        "     "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Mozambique'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Taiwan'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Colombia'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Albania'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Palestine'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Bhutan'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        "     "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Slovakia'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Afghanistan'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Japan'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "]"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        " "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "8"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ": "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "["
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Monaco'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Uzbekistan'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Comoros'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Bermuda'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'South Africa'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Cameroon'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        "     "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Thailand'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Chad'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Mauritania'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Panama'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Djibouti'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Barbados'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Oman'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        "     "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Sudan'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Congo'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Somalia'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Ghana'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Slovenia'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Qatar'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Niger'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        "     "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Greece'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Ecuador'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Finland'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Argentina'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Andorra'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'El Salvador'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        "     "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Haiti'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Tajikistan'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Tunisia'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Kenya'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Swaziland'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Iraq'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        "     "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Bosnia and Herzegovina'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Gabon'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Luxembourg'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'India'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Sri Lanka'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        "     "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'China'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Guinea-Bissau'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Maldives'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "]"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        " "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "9"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ": "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "["
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Honduras'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Liberia'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Jamaica'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Cape Verde'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Canada'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Bulgaria'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        "     "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Romania'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Switzerland'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Cuba'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Egypt'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Chile'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Malaysia'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        "     "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Azerbaijan'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Indonesia'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Macedonia'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Sierra Leone'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Austria'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        "     "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Belarus'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Germany'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Pakistan'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Belgium'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Brazil'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Armenia'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Togo'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        "     "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Nigeria'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Poland'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Ukraine'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Uruguay'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Singapore'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Mali'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "]"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        " "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "10"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ": "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "["
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Senegal'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'United Arab Emirates'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Estonia'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Burkina Faso'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Latvia'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        "      "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Guinea'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Saudi Arabia'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Georgia'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Dominican Republic'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Hungary'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        "      "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Algeria'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Korea, South'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Myanmar'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Peru'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Lithuania'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Bolivia'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        "      "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Turkey'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Czech Republic'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Denmark'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Serbia'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'France'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Portugal'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "]"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        " "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "11"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ": "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "["
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Italy'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Kuwait'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Moldova'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Mexico'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'United States'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Bahrain'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        "      "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Iran'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Bangladesh'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "]"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        " "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "12"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ": "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "['Russia']"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "}"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      }
     ],
     "prompt_number": 7
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "# Set phases with S-R trend analysis\n",
      "analyser.trend(min_len=11)\n",
      "# The number of countries\n",
      "len(analyser.countries)"
     ],
     "language": "python",
     "metadata": {},
     "outputs": [
      {
       "output_type": "pyout",
       "prompt_number": 8,
       "text": [
        "9"
       ]
      }
     ],
     "prompt_number": 8
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "phase_len_dict = analyser.phase_len()\n",
      "pprint(phase_len_dict, compact=True)"
     ],
     "language": "python",
     "metadata": {
      "tags": []
     },
     "outputs": [
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "{"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "11"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ": "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "["
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Italy'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Kuwait'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Moldova'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Mexico'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'United States'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Bahrain'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        "      "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Iran'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Bangladesh'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "]"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        " "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "12"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ": "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "['Russia']"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "}"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      }
     ],
     "prompt_number": 9
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "# Here, only show the countries which have the most phases\n",
      "countries_show = max(phase_len_dict.items(), key=lambda x: x[0])[1]\n",
      "# Show summary\n",
      "analyser.summary(countries=countries_show)"
     ],
     "language": "python",
     "metadata": {
      "tags": []
     },
     "outputs": [
      {
       "html": [
        "<div>\n",
        "<style scoped>\n",
        "    .dataframe tbody tr th:only-of-type {\n",
        "        vertical-align: middle;\n",
        "    }\n",
        "\n",
        "    .dataframe tbody tr th {\n",
        "        vertical-align: top;\n",
        "    }\n",
        "\n",
        "    .dataframe thead th {\n",
        "        text-align: right;\n",
        "    }\n",
        "</style>\n",
        "<table border=\"1\" class=\"dataframe\">\n",
        "  <thead>\n",
        "    <tr style=\"text-align: right;\">\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th>Type</th>\n",
        "      <th>Start</th>\n",
        "      <th>End</th>\n",
        "      <th>Population</th>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>Country</th>\n",
        "      <th>Phase</th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "    </tr>\n",
        "  </thead>\n",
        "  <tbody>\n",
        "    <tr>\n",
        "      <th rowspan=\"12\" valign=\"top\">Russia</th>\n",
        "      <th>0th</th>\n",
        "      <td>Past</td>\n",
        "      <td>12Feb2020</td>\n",
        "      <td>06May2020</td>\n",
        "      <td>330457362</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>1st</th>\n",
        "      <td>Past</td>\n",
        "      <td>07May2020</td>\n",
        "      <td>14May2020</td>\n",
        "      <td>330457362</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>2nd</th>\n",
        "      <td>Past</td>\n",
        "      <td>15May2020</td>\n",
        "      <td>24May2020</td>\n",
        "      <td>330457362</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>3rd</th>\n",
        "      <td>Past</td>\n",
        "      <td>25May2020</td>\n",
        "      <td>01Jun2020</td>\n",
        "      <td>330457362</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>4th</th>\n",
        "      <td>Past</td>\n",
        "      <td>02Jun2020</td>\n",
        "      <td>11Jun2020</td>\n",
        "      <td>330457362</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>5th</th>\n",
        "      <td>Past</td>\n",
        "      <td>12Jun2020</td>\n",
        "      <td>20Jun2020</td>\n",
        "      <td>330457362</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>6th</th>\n",
        "      <td>Past</td>\n",
        "      <td>21Jun2020</td>\n",
        "      <td>30Jun2020</td>\n",
        "      <td>330457362</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>7th</th>\n",
        "      <td>Past</td>\n",
        "      <td>01Jul2020</td>\n",
        "      <td>11Jul2020</td>\n",
        "      <td>330457362</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>8th</th>\n",
        "      <td>Past</td>\n",
        "      <td>12Jul2020</td>\n",
        "      <td>24Jul2020</td>\n",
        "      <td>330457362</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>9th</th>\n",
        "      <td>Past</td>\n",
        "      <td>25Jul2020</td>\n",
        "      <td>07Aug2020</td>\n",
        "      <td>330457362</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>10th</th>\n",
        "      <td>Past</td>\n",
        "      <td>08Aug2020</td>\n",
        "      <td>22Aug2020</td>\n",
        "      <td>330457362</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>11th</th>\n",
        "      <td>Past</td>\n",
        "      <td>23Aug2020</td>\n",
        "      <td>08Sep2020</td>\n",
        "      <td>330457362</td>\n",
        "    </tr>\n",
        "  </tbody>\n",
        "</table>\n",
        "</div>"
       ],
       "output_type": "pyout",
       "prompt_number": 10,
       "text": [
        "               Type      Start        End  Population\n",
        "Country Phase                                        \n",
        "Russia  0th    Past  12Feb2020  06May2020   330457362\n",
        "        1st    Past  07May2020  14May2020   330457362\n",
        "        2nd    Past  15May2020  24May2020   330457362\n",
        "        3rd    Past  25May2020  01Jun2020   330457362\n",
        "        4th    Past  02Jun2020  11Jun2020   330457362\n",
        "        5th    Past  12Jun2020  20Jun2020   330457362\n",
        "        6th    Past  21Jun2020  30Jun2020   330457362\n",
        "        7th    Past  01Jul2020  11Jul2020   330457362\n",
        "        8th    Past  12Jul2020  24Jul2020   330457362\n",
        "        9th    Past  25Jul2020  07Aug2020   330457362\n",
        "        10th   Past  08Aug2020  22Aug2020   330457362\n",
        "        11th   Past  23Aug2020  08Sep2020   330457362"
       ]
      }
     ],
     "prompt_number": 10
    },
    {
     "cell_type": "markdown",
     "metadata": {},
     "source": [
      "## Parameter estimation\n",
      "we will estimate the parameter values with SIR-derived ODE models in each country."
     ]
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "# Parameter estimation with SIR-F model\n",
      "analyser.estimate(cs.SIRF)"
     ],
     "language": "python",
     "metadata": {
      "tags": []
     },
     "outputs": [
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n",
        "<SIR-F model: parameter estimation>"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "Running optimization with 4 CPUs..."
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tKWT,  3rd phase (07Jun2020 - 20Jun2020): finished  327 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tMDA,  5th phase (09Jul2020 - 19Jul2020): finished  329 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tBGD, 10th phase (27Aug2020 - 08Sep2020): finished  500 trials in 0 min 15 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tIRN,  4th phase (01Jun2020 - 14Jun2020): finished  507 trials in 0 min 15 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tMDA,  8th phase (08Aug2020 - 17Aug2020): finished  361 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tIRN,  2nd phase (18Apr2020 - 12May2020): finished  440 trials in 0 min 15 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tMDA,  6th phase (20Jul2020 - 29Jul2020): finished 1517 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tIRN,  8th phase (24Jul2020 - 05Aug2020): finished  157 trials in 0 min  5 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tBGD,  2nd phase (11Jun2020 - 18Jun2020): finished 1504 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tKWT,  9th phase (15Aug2020 - 25Aug2020): finished 1511 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tMEX,  0th phase (03Mar2020 - 20May2020): finished 1453 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tKWT,  6th phase (11Jul2020 - 22Jul2020): finished  495 trials in 0 min 15 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tMEX,  5th phase (09Jul2020 - 16Jul2020): finished 1641 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tRUS,  8th phase (12Jul2020 - 24Jul2020): finished 1645 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tBGD,  9th phase (17Aug2020 - 26Aug2020): finished  390 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tIRN,  9th phase (06Aug2020 - 19Aug2020): finished 1688 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tBHR,  5th phase (29Jun2020 - 07Jul2020): finished 1684 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tMEX,  2nd phase (06Jun2020 - 18Jun2020): finished  230 trials in 0 min  5 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tMDA,  0th phase (17Mar2020 - 11May2020): finished 1658 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tMEX,  3rd phase (19Jun2020 - 29Jun2020): finished 1652 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tBHR,  7th phase (16Jul2020 - 27Jul2020): finished  151 trials in 0 min  5 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tRUS, 10th phase (08Aug2020 - 22Aug2020): finished 1602 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tKWT,  4th phase (21Jun2020 - 30Jun2020): finished 1600 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tBGD,  4th phase (28Jun2020 - 06Jul2020): finished  578 trials in 0 min 20 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tITA,  3rd phase (10Apr2020 - 19Apr2020): finished  386 trials in 0 min 15 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tBGD,  0th phase (16Mar2020 - 25May2020): finished 1323 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tUSA,  3rd phase (06Jun2020 - 24Jun2020): finished 1380 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tUSA,  1st phase (18Apr2020 - 10May2020): finished 1370 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tRUS,  7th phase (01Jul2020 - 11Jul2020): finished 1455 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tITA,  1st phase (21Mar2020 - 29Mar2020): finished 1206 trials in 0 min 45 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tRUS,  3rd phase (25May2020 - 01Jun2020): finished 1477 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tBGD,  3rd phase (19Jun2020 - 27Jun2020): finished 1481 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tBHR,  2nd phase (01Jun2020 - 11Jun2020): finished 1448 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tBGD,  6th phase (16Jul2020 - 26Jul2020): finished  188 trials in 0 min  5 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tITA,  4th phase (20Apr2020 - 30Apr2020): finished 1446 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tMEX, 10th phase (28Aug2020 - 08Sep2020): finished  328 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tBHR,  8th phase (28Jul2020 - 09Aug2020): finished  333 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tIRN,  1st phase (30Mar2020 - 17Apr2020): finished 1446 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tRUS,  2nd phase (15May2020 - 24May2020): finished 1427 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tKWT,  8th phase (04Aug2020 - 14Aug2020): finished  568 trials in 0 min 20 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tMEX,  8th phase (07Aug2020 - 16Aug2020): finished  151 trials in 0 min  5 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tIRN,  6th phase (29Jun2020 - 10Jul2020): finished  155 trials in 0 min  5 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tIRN,  7th phase (11Jul2020 - 23Jul2020): finished  154 trials in 0 min  5 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tMEX,  9th phase (17Aug2020 - 27Aug2020): finished 1389 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tMDA,  2nd phase (02Jun2020 - 14Jun2020): finished 1386 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tITA,  9th phase (07Jul2020 - 11Aug2020): finished  403 trials in 0 min 15 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tIRN,  5th phase (15Jun2020 - 28Jun2020): finished 1366 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tUSA,  6th phase (18Jul2020 - 27Jul2020): finished  412 trials in 0 min 15 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tITA,  6th phase (10May2020 - 19May2020): finished  156 trials in 0 min  5 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tMEX,  4th phase (30Jun2020 - 08Jul2020): finished  161 trials in 0 min  5 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tITA,  5th phase (01May2020 - 09May2020): finished  634 trials in 0 min 25 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tRUS,  9th phase (25Jul2020 - 07Aug2020): finished 1243 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tBHR,  0th phase (06Mar2020 - 05May2020): finished 1189 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tMEX,  1st phase (21May2020 - 05Jun2020): finished 1232 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tKWT,  1st phase (14May2020 - 27May2020): finished 1256 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tUSA,  8th phase (05Aug2020 - 14Aug2020): finished  556 trials in 0 min 20 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tUSA,  4th phase (25Jun2020 - 07Jul2020): finished 1299 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tRUS,  4th phase (02Jun2020 - 11Jun2020): finished 1289 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tUSA,  2nd phase (11May2020 - 05Jun2020): finished 1290 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tBHR,  3rd phase (12Jun2020 - 20Jun2020): finished  157 trials in 0 min  5 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tITA,  2nd phase (30Mar2020 - 09Apr2020): finished 1296 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tITA,  7th phase (20May2020 - 04Jun2020): finished  427 trials in 0 min 15 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tKWT,  5th phase (01Jul2020 - 10Jul2020): finished  461 trials in 0 min 15 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tMDA,  4th phase (26Jun2020 - 08Jul2020): finished 1374 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tUSA,  0th phase (09Feb2020 - 17Apr2020): finished 1298 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tKWT, 10th phase (26Aug2020 - 08Sep2020): finished  946 trials in 0 min 40 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tMDA,  3rd phase (15Jun2020 - 25Jun2020): finished 1373 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tMDA,  9th phase (18Aug2020 - 25Aug2020): finished  685 trials in 0 min 25 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tBHR,  1st phase (06May2020 - 31May2020): finished 1441 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tKWT,  2nd phase (28May2020 - 06Jun2020): finished 1521 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tIRN, 10th phase (20Aug2020 - 08Sep2020): finished  191 trials in 0 min  5 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tMEX,  7th phase (29Jul2020 - 06Aug2020): finished 1630 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tBGD,  5th phase (07Jul2020 - 15Jul2020): finished 1595 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tITA,  8th phase (05Jun2020 - 06Jul2020): finished  351 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tUSA,  5th phase (08Jul2020 - 17Jul2020): finished  338 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tBHR,  6th phase (08Jul2020 - 15Jul2020): finished 1633 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tBGD,  7th phase (27Jul2020 - 06Aug2020): finished  333 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tIRN,  3rd phase (13May2020 - 31May2020): finished  210 trials in 0 min  5 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tBHR, 10th phase (25Aug2020 - 08Sep2020): finished 1591 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tITA, 10th phase (12Aug2020 - 08Sep2020): finished  197 trials in 0 min  5 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tRUS, 11th phase (23Aug2020 - 08Sep2020): finished 1053 trials in 0 min 35 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tKWT,  0th phase (08Mar2020 - 13May2020): finished 1326 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tIRN,  0th phase (26Feb2020 - 29Mar2020): finished 1561 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tMDA,  7th phase (30Jul2020 - 07Aug2020): finished 1577 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tUSA,  7th phase (28Jul2020 - 04Aug2020): finished  299 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tBHR,  4th phase (21Jun2020 - 28Jun2020): finished 1486 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tBHR,  9th phase (10Aug2020 - 24Aug2020): finished  163 trials in 0 min  5 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tBGD,  1st phase (26May2020 - 10Jun2020): finished 1309 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tRUS,  0th phase (12Feb2020 - 06May2020): finished 1328 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tKWT,  7th phase (23Jul2020 - 03Aug2020): finished  164 trials in 0 min  5 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tRUS,  1st phase (07May2020 - 14May2020): finished 1343 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tITA,  0th phase (24Feb2020 - 20Mar2020): finished 1386 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tMEX,  6th phase (17Jul2020 - 28Jul2020): finished 1590 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tMDA,  1st phase (12May2020 - 01Jun2020): finished 1674 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "Completed optimization. Total: 16 min  2 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      }
     ],
     "prompt_number": 11
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "# Show summary\n",
      "analyser.summary(countries=countries_show)"
     ],
     "language": "python",
     "metadata": {},
     "outputs": [
      {
       "html": [
        "<div>\n",
        "<style scoped>\n",
        "    .dataframe tbody tr th:only-of-type {\n",
        "        vertical-align: middle;\n",
        "    }\n",
        "\n",
        "    .dataframe tbody tr th {\n",
        "        vertical-align: top;\n",
        "    }\n",
        "\n",
        "    .dataframe thead th {\n",
        "        text-align: right;\n",
        "    }\n",
        "</style>\n",
        "<table border=\"1\" class=\"dataframe\">\n",
        "  <thead>\n",
        "    <tr style=\"text-align: right;\">\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th>Type</th>\n",
        "      <th>Start</th>\n",
        "      <th>End</th>\n",
        "      <th>Population</th>\n",
        "      <th>ODE</th>\n",
        "      <th>Rt</th>\n",
        "      <th>theta</th>\n",
        "      <th>kappa</th>\n",
        "      <th>rho</th>\n",
        "      <th>sigma</th>\n",
        "      <th>tau</th>\n",
        "      <th>1/beta [day]</th>\n",
        "      <th>alpha1 [-]</th>\n",
        "      <th>1/alpha2 [day]</th>\n",
        "      <th>1/gamma [day]</th>\n",
        "      <th>RMSLE</th>\n",
        "      <th>Trials</th>\n",
        "      <th>Runtime</th>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>Country</th>\n",
        "      <th>Phase</th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "    </tr>\n",
        "  </thead>\n",
        "  <tbody>\n",
        "    <tr>\n",
        "      <th rowspan=\"12\" valign=\"top\">Russia</th>\n",
        "      <th>0th</th>\n",
        "      <td>Past</td>\n",
        "      <td>12Feb2020</td>\n",
        "      <td>06May2020</td>\n",
        "      <td>330457362</td>\n",
        "      <td>SIR-F</td>\n",
        "      <td>0.02</td>\n",
        "      <td>0.602763</td>\n",
        "      <td>0.544883</td>\n",
        "      <td>0.0340813</td>\n",
        "      <td>0.00229851</td>\n",
        "      <td>360</td>\n",
        "      <td>7</td>\n",
        "      <td>0.603</td>\n",
        "      <td>0</td>\n",
        "      <td>108</td>\n",
        "      <td>18.9667</td>\n",
        "      <td>1328</td>\n",
        "      <td>1 min  0 sec</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>1st</th>\n",
        "      <td>Past</td>\n",
        "      <td>07May2020</td>\n",
        "      <td>14May2020</td>\n",
        "      <td>330457362</td>\n",
        "      <td>SIR-F</td>\n",
        "      <td>2.42</td>\n",
        "      <td>0.000667421</td>\n",
        "      <td>0.000111706</td>\n",
        "      <td>0.0131212</td>\n",
        "      <td>0.00530075</td>\n",
        "      <td>360</td>\n",
        "      <td>19</td>\n",
        "      <td>0.001</td>\n",
        "      <td>2238</td>\n",
        "      <td>47</td>\n",
        "      <td>0.058527</td>\n",
        "      <td>1343</td>\n",
        "      <td>1 min  0 sec</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>2nd</th>\n",
        "      <td>Past</td>\n",
        "      <td>15May2020</td>\n",
        "      <td>24May2020</td>\n",
        "      <td>330457362</td>\n",
        "      <td>SIR-F</td>\n",
        "      <td>1.75</td>\n",
        "      <td>0.0009969</td>\n",
        "      <td>9.61926e-05</td>\n",
        "      <td>0.00770897</td>\n",
        "      <td>0.00429682</td>\n",
        "      <td>360</td>\n",
        "      <td>32</td>\n",
        "      <td>0.001</td>\n",
        "      <td>2598</td>\n",
        "      <td>58</td>\n",
        "      <td>0.0792387</td>\n",
        "      <td>1427</td>\n",
        "      <td>1 min  0 sec</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>3rd</th>\n",
        "      <td>Past</td>\n",
        "      <td>25May2020</td>\n",
        "      <td>01Jun2020</td>\n",
        "      <td>330457362</td>\n",
        "      <td>SIR-F</td>\n",
        "      <td>0.96</td>\n",
        "      <td>0.0188817</td>\n",
        "      <td>2.60983e-05</td>\n",
        "      <td>0.00558679</td>\n",
        "      <td>0.00565476</td>\n",
        "      <td>360</td>\n",
        "      <td>44</td>\n",
        "      <td>0.019</td>\n",
        "      <td>9579</td>\n",
        "      <td>44</td>\n",
        "      <td>0.0667626</td>\n",
        "      <td>1477</td>\n",
        "      <td>1 min  0 sec</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>4th</th>\n",
        "      <td>Past</td>\n",
        "      <td>02Jun2020</td>\n",
        "      <td>11Jun2020</td>\n",
        "      <td>330457362</td>\n",
        "      <td>SIR-F</td>\n",
        "      <td>0.97</td>\n",
        "      <td>0.000544411</td>\n",
        "      <td>9.44583e-05</td>\n",
        "      <td>0.00479535</td>\n",
        "      <td>0.00483491</td>\n",
        "      <td>360</td>\n",
        "      <td>52</td>\n",
        "      <td>0.001</td>\n",
        "      <td>2646</td>\n",
        "      <td>51</td>\n",
        "      <td>0.0731581</td>\n",
        "      <td>1289</td>\n",
        "      <td>1 min  0 sec</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>5th</th>\n",
        "      <td>Past</td>\n",
        "      <td>12Jun2020</td>\n",
        "      <td>20Jun2020</td>\n",
        "      <td>330457362</td>\n",
        "      <td>-</td>\n",
        "      <td>-</td>\n",
        "      <td>-</td>\n",
        "      <td>-</td>\n",
        "      <td>-</td>\n",
        "      <td>-</td>\n",
        "      <td>-</td>\n",
        "      <td>-</td>\n",
        "      <td>-</td>\n",
        "      <td>-</td>\n",
        "      <td>-</td>\n",
        "      <td>-</td>\n",
        "      <td>-</td>\n",
        "      <td>-</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>6th</th>\n",
        "      <td>Past</td>\n",
        "      <td>21Jun2020</td>\n",
        "      <td>30Jun2020</td>\n",
        "      <td>330457362</td>\n",
        "      <td>-</td>\n",
        "      <td>-</td>\n",
        "      <td>-</td>\n",
        "      <td>-</td>\n",
        "      <td>-</td>\n",
        "      <td>-</td>\n",
        "      <td>-</td>\n",
        "      <td>-</td>\n",
        "      <td>-</td>\n",
        "      <td>-</td>\n",
        "      <td>-</td>\n",
        "      <td>-</td>\n",
        "      <td>-</td>\n",
        "      <td>-</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>7th</th>\n",
        "      <td>Past</td>\n",
        "      <td>01Jul2020</td>\n",
        "      <td>11Jul2020</td>\n",
        "      <td>330457362</td>\n",
        "      <td>SIR-F</td>\n",
        "      <td>0.82</td>\n",
        "      <td>0.0167158</td>\n",
        "      <td>2.69754e-05</td>\n",
        "      <td>0.00246588</td>\n",
        "      <td>0.0029199</td>\n",
        "      <td>360</td>\n",
        "      <td>101</td>\n",
        "      <td>0.017</td>\n",
        "      <td>9267</td>\n",
        "      <td>85</td>\n",
        "      <td>0.0511025</td>\n",
        "      <td>1455</td>\n",
        "      <td>1 min  0 sec</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>8th</th>\n",
        "      <td>Past</td>\n",
        "      <td>12Jul2020</td>\n",
        "      <td>24Jul2020</td>\n",
        "      <td>330457362</td>\n",
        "      <td>SIR-F</td>\n",
        "      <td>0.72</td>\n",
        "      <td>0.000333538</td>\n",
        "      <td>5.01667e-05</td>\n",
        "      <td>0.00194165</td>\n",
        "      <td>0.00263471</td>\n",
        "      <td>360</td>\n",
        "      <td>128</td>\n",
        "      <td>0</td>\n",
        "      <td>4983</td>\n",
        "      <td>94</td>\n",
        "      <td>0.0625641</td>\n",
        "      <td>1645</td>\n",
        "      <td>1 min  0 sec</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>9th</th>\n",
        "      <td>Past</td>\n",
        "      <td>25Jul2020</td>\n",
        "      <td>07Aug2020</td>\n",
        "      <td>330457362</td>\n",
        "      <td>SIR-F</td>\n",
        "      <td>0.78</td>\n",
        "      <td>0.0205683</td>\n",
        "      <td>3.65782e-06</td>\n",
        "      <td>0.0016005</td>\n",
        "      <td>0.0020129</td>\n",
        "      <td>360</td>\n",
        "      <td>156</td>\n",
        "      <td>0.021</td>\n",
        "      <td>68346</td>\n",
        "      <td>124</td>\n",
        "      <td>0.0522163</td>\n",
        "      <td>1243</td>\n",
        "      <td>1 min  0 sec</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>10th</th>\n",
        "      <td>Past</td>\n",
        "      <td>08Aug2020</td>\n",
        "      <td>22Aug2020</td>\n",
        "      <td>330457362</td>\n",
        "      <td>SIR-F</td>\n",
        "      <td>0.73</td>\n",
        "      <td>0.0132635</td>\n",
        "      <td>1.10732e-05</td>\n",
        "      <td>0.00130062</td>\n",
        "      <td>0.00175305</td>\n",
        "      <td>360</td>\n",
        "      <td>192</td>\n",
        "      <td>0.013</td>\n",
        "      <td>22576</td>\n",
        "      <td>142</td>\n",
        "      <td>0.0507165</td>\n",
        "      <td>1602</td>\n",
        "      <td>1 min  0 sec</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>11th</th>\n",
        "      <td>Past</td>\n",
        "      <td>23Aug2020</td>\n",
        "      <td>08Sep2020</td>\n",
        "      <td>330457362</td>\n",
        "      <td>SIR-F</td>\n",
        "      <td>1.09</td>\n",
        "      <td>0.00155139</td>\n",
        "      <td>2.12602e-05</td>\n",
        "      <td>0.00124933</td>\n",
        "      <td>0.00112794</td>\n",
        "      <td>360</td>\n",
        "      <td>200</td>\n",
        "      <td>0.002</td>\n",
        "      <td>11759</td>\n",
        "      <td>221</td>\n",
        "      <td>0.0104428</td>\n",
        "      <td>1053</td>\n",
        "      <td>0 min 35 sec</td>\n",
        "    </tr>\n",
        "  </tbody>\n",
        "</table>\n",
        "</div>"
       ],
       "output_type": "pyout",
       "prompt_number": 12,
       "text": [
        "               Type      Start        End  Population    ODE    Rt  \\\n",
        "Country Phase                                                        \n",
        "Russia  0th    Past  12Feb2020  06May2020   330457362  SIR-F  0.02   \n",
        "        1st    Past  07May2020  14May2020   330457362  SIR-F  2.42   \n",
        "        2nd    Past  15May2020  24May2020   330457362  SIR-F  1.75   \n",
        "        3rd    Past  25May2020  01Jun2020   330457362  SIR-F  0.96   \n",
        "        4th    Past  02Jun2020  11Jun2020   330457362  SIR-F  0.97   \n",
        "        5th    Past  12Jun2020  20Jun2020   330457362      -     -   \n",
        "        6th    Past  21Jun2020  30Jun2020   330457362      -     -   \n",
        "        7th    Past  01Jul2020  11Jul2020   330457362  SIR-F  0.82   \n",
        "        8th    Past  12Jul2020  24Jul2020   330457362  SIR-F  0.72   \n",
        "        9th    Past  25Jul2020  07Aug2020   330457362  SIR-F  0.78   \n",
        "        10th   Past  08Aug2020  22Aug2020   330457362  SIR-F  0.73   \n",
        "        11th   Past  23Aug2020  08Sep2020   330457362  SIR-F  1.09   \n",
        "\n",
        "                     theta        kappa         rho       sigma  tau  \\\n",
        "Country Phase                                                          \n",
        "Russia  0th       0.602763     0.544883   0.0340813  0.00229851  360   \n",
        "        1st    0.000667421  0.000111706   0.0131212  0.00530075  360   \n",
        "        2nd      0.0009969  9.61926e-05  0.00770897  0.00429682  360   \n",
        "        3rd      0.0188817  2.60983e-05  0.00558679  0.00565476  360   \n",
        "        4th    0.000544411  9.44583e-05  0.00479535  0.00483491  360   \n",
        "        5th              -            -           -           -    -   \n",
        "        6th              -            -           -           -    -   \n",
        "        7th      0.0167158  2.69754e-05  0.00246588   0.0029199  360   \n",
        "        8th    0.000333538  5.01667e-05  0.00194165  0.00263471  360   \n",
        "        9th      0.0205683  3.65782e-06   0.0016005   0.0020129  360   \n",
        "        10th     0.0132635  1.10732e-05  0.00130062  0.00175305  360   \n",
        "        11th    0.00155139  2.12602e-05  0.00124933  0.00112794  360   \n",
        "\n",
        "              1/beta [day] alpha1 [-] 1/alpha2 [day] 1/gamma [day]      RMSLE  \\\n",
        "Country Phase                                                                   \n",
        "Russia  0th              7      0.603              0           108    18.9667   \n",
        "        1st             19      0.001           2238            47   0.058527   \n",
        "        2nd             32      0.001           2598            58  0.0792387   \n",
        "        3rd             44      0.019           9579            44  0.0667626   \n",
        "        4th             52      0.001           2646            51  0.0731581   \n",
        "        5th              -          -              -             -          -   \n",
        "        6th              -          -              -             -          -   \n",
        "        7th            101      0.017           9267            85  0.0511025   \n",
        "        8th            128          0           4983            94  0.0625641   \n",
        "        9th            156      0.021          68346           124  0.0522163   \n",
        "        10th           192      0.013          22576           142  0.0507165   \n",
        "        11th           200      0.002          11759           221  0.0104428   \n",
        "\n",
        "              Trials       Runtime  \n",
        "Country Phase                       \n",
        "Russia  0th     1328  1 min  0 sec  \n",
        "        1st     1343  1 min  0 sec  \n",
        "        2nd     1427  1 min  0 sec  \n",
        "        3rd     1477  1 min  0 sec  \n",
        "        4th     1289  1 min  0 sec  \n",
        "        5th        -             -  \n",
        "        6th        -             -  \n",
        "        7th     1455  1 min  0 sec  \n",
        "        8th     1645  1 min  0 sec  \n",
        "        9th     1243  1 min  0 sec  \n",
        "        10th    1602  1 min  0 sec  \n",
        "        11th    1053  0 min 35 sec  "
       ]
      }
     ],
     "prompt_number": 12
    },
    {
     "cell_type": "markdown",
     "metadata": {},
     "source": [
      "## Compare the history of parameters\n",
      "Here, compare the history of parameter values if countries."
     ]
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "# All parameter/day parameter/Rt/OxCGRT\n",
      "analyser.track().head()"
     ],
     "language": "python",
     "metadata": {},
     "outputs": [
      {
       "html": [
        "<div>\n",
        "<style scoped>\n",
        "    .dataframe tbody tr th:only-of-type {\n",
        "        vertical-align: middle;\n",
        "    }\n",
        "\n",
        "    .dataframe tbody tr th {\n",
        "        vertical-align: top;\n",
        "    }\n",
        "\n",
        "    .dataframe thead th {\n",
        "        text-align: right;\n",
        "    }\n",
        "</style>\n",
        "<table border=\"1\" class=\"dataframe\">\n",
        "  <thead>\n",
        "    <tr style=\"text-align: right;\">\n",
        "      <th></th>\n",
        "      <th>Date</th>\n",
        "      <th>Country</th>\n",
        "      <th>theta</th>\n",
        "      <th>kappa</th>\n",
        "      <th>rho</th>\n",
        "      <th>sigma</th>\n",
        "      <th>alpha1 [-]</th>\n",
        "      <th>1/alpha2 [day]</th>\n",
        "      <th>1/beta [day]</th>\n",
        "      <th>1/gamma [day]</th>\n",
        "      <th>...</th>\n",
        "      <th>Cancel_events</th>\n",
        "      <th>Gatherings_restrictions</th>\n",
        "      <th>Transport_closing</th>\n",
        "      <th>Stay_home_restrictions</th>\n",
        "      <th>Internal_movement_restrictions</th>\n",
        "      <th>International_movement_restrictions</th>\n",
        "      <th>Information_campaigns</th>\n",
        "      <th>Testing_policy</th>\n",
        "      <th>Contact_tracing</th>\n",
        "      <th>Stringency_index</th>\n",
        "    </tr>\n",
        "  </thead>\n",
        "  <tbody>\n",
        "    <tr>\n",
        "      <th>0</th>\n",
        "      <td>2020-02-24</td>\n",
        "      <td>Italy</td>\n",
        "      <td>0.058544</td>\n",
        "      <td>8.65887e-05</td>\n",
        "      <td>0.057012</td>\n",
        "      <td>0.00294682</td>\n",
        "      <td>0.059</td>\n",
        "      <td>2887</td>\n",
        "      <td>4</td>\n",
        "      <td>84</td>\n",
        "      <td>...</td>\n",
        "      <td>2</td>\n",
        "      <td>4</td>\n",
        "      <td>0</td>\n",
        "      <td>2</td>\n",
        "      <td>2</td>\n",
        "      <td>3</td>\n",
        "      <td>2</td>\n",
        "      <td>1</td>\n",
        "      <td>2</td>\n",
        "      <td>69.91</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>1</th>\n",
        "      <td>2020-02-24</td>\n",
        "      <td>Italy</td>\n",
        "      <td>0.058544</td>\n",
        "      <td>8.65887e-05</td>\n",
        "      <td>0.057012</td>\n",
        "      <td>0.00294682</td>\n",
        "      <td>0.059</td>\n",
        "      <td>2887</td>\n",
        "      <td>4</td>\n",
        "      <td>84</td>\n",
        "      <td>...</td>\n",
        "      <td>2</td>\n",
        "      <td>4</td>\n",
        "      <td>0</td>\n",
        "      <td>2</td>\n",
        "      <td>2</td>\n",
        "      <td>3</td>\n",
        "      <td>2</td>\n",
        "      <td>1</td>\n",
        "      <td>2</td>\n",
        "      <td>69.91</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>2</th>\n",
        "      <td>2020-02-24</td>\n",
        "      <td>Italy</td>\n",
        "      <td>0.058544</td>\n",
        "      <td>8.65887e-05</td>\n",
        "      <td>0.057012</td>\n",
        "      <td>0.00294682</td>\n",
        "      <td>0.059</td>\n",
        "      <td>2887</td>\n",
        "      <td>4</td>\n",
        "      <td>84</td>\n",
        "      <td>...</td>\n",
        "      <td>2</td>\n",
        "      <td>4</td>\n",
        "      <td>0</td>\n",
        "      <td>2</td>\n",
        "      <td>2</td>\n",
        "      <td>3</td>\n",
        "      <td>2</td>\n",
        "      <td>1</td>\n",
        "      <td>2</td>\n",
        "      <td>69.91</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>3</th>\n",
        "      <td>2020-02-24</td>\n",
        "      <td>Italy</td>\n",
        "      <td>0.058544</td>\n",
        "      <td>8.65887e-05</td>\n",
        "      <td>0.057012</td>\n",
        "      <td>0.00294682</td>\n",
        "      <td>0.059</td>\n",
        "      <td>2887</td>\n",
        "      <td>4</td>\n",
        "      <td>84</td>\n",
        "      <td>...</td>\n",
        "      <td>2</td>\n",
        "      <td>4</td>\n",
        "      <td>0</td>\n",
        "      <td>2</td>\n",
        "      <td>2</td>\n",
        "      <td>3</td>\n",
        "      <td>2</td>\n",
        "      <td>1</td>\n",
        "      <td>2</td>\n",
        "      <td>69.91</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>4</th>\n",
        "      <td>2020-02-24</td>\n",
        "      <td>Italy</td>\n",
        "      <td>0.058544</td>\n",
        "      <td>8.65887e-05</td>\n",
        "      <td>0.057012</td>\n",
        "      <td>0.00294682</td>\n",
        "      <td>0.059</td>\n",
        "      <td>2887</td>\n",
        "      <td>4</td>\n",
        "      <td>84</td>\n",
        "      <td>...</td>\n",
        "      <td>2</td>\n",
        "      <td>4</td>\n",
        "      <td>0</td>\n",
        "      <td>2</td>\n",
        "      <td>2</td>\n",
        "      <td>3</td>\n",
        "      <td>2</td>\n",
        "      <td>1</td>\n",
        "      <td>2</td>\n",
        "      <td>69.91</td>\n",
        "    </tr>\n",
        "  </tbody>\n",
        "</table>\n",
        "<p>5 rows \u00d7 23 columns</p>\n",
        "</div>"
       ],
       "output_type": "pyout",
       "prompt_number": 13,
       "text": [
        "        Date Country     theta        kappa       rho       sigma alpha1 [-]  \\\n",
        "0 2020-02-24   Italy  0.058544  8.65887e-05  0.057012  0.00294682      0.059   \n",
        "1 2020-02-24   Italy  0.058544  8.65887e-05  0.057012  0.00294682      0.059   \n",
        "2 2020-02-24   Italy  0.058544  8.65887e-05  0.057012  0.00294682      0.059   \n",
        "3 2020-02-24   Italy  0.058544  8.65887e-05  0.057012  0.00294682      0.059   \n",
        "4 2020-02-24   Italy  0.058544  8.65887e-05  0.057012  0.00294682      0.059   \n",
        "\n",
        "  1/alpha2 [day] 1/beta [day] 1/gamma [day]  ... Cancel_events  \\\n",
        "0           2887            4            84  ...             2   \n",
        "1           2887            4            84  ...             2   \n",
        "2           2887            4            84  ...             2   \n",
        "3           2887            4            84  ...             2   \n",
        "4           2887            4            84  ...             2   \n",
        "\n",
        "   Gatherings_restrictions  Transport_closing  Stay_home_restrictions  \\\n",
        "0                        4                  0                       2   \n",
        "1                        4                  0                       2   \n",
        "2                        4                  0                       2   \n",
        "3                        4                  0                       2   \n",
        "4                        4                  0                       2   \n",
        "\n",
        "   Internal_movement_restrictions  International_movement_restrictions  \\\n",
        "0                               2                                    3   \n",
        "1                               2                                    3   \n",
        "2                               2                                    3   \n",
        "3                               2                                    3   \n",
        "4                               2                                    3   \n",
        "\n",
        "   Information_campaigns  Testing_policy  Contact_tracing  Stringency_index  \n",
        "0                      2               1                2             69.91  \n",
        "1                      2               1                2             69.91  \n",
        "2                      2               1                2             69.91  \n",
        "3                      2               1                2             69.91  \n",
        "4                      2               1                2             69.91  \n",
        "\n",
        "[5 rows x 23 columns]"
       ]
      }
     ],
     "prompt_number": 13
    },
    {
     "cell_type": "heading",
     "level": 3,
     "metadata": {},
     "source": [
      "$Rt$: Reprodcution number $\\mathrm{[-]}$"
     ]
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "analyser.param_history(\"Rt\", roll_window=None).tail()"
     ],
     "language": "python",
     "metadata": {},
     "outputs": [
      {
       "output_type": "display_data",
       "png": "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\n",
       "text": [
        "<Figure size 648x432 with 1 Axes>"
       ]
      },
      {
       "html": [
        "<div>\n",
        "<style scoped>\n",
        "    .dataframe tbody tr th:only-of-type {\n",
        "        vertical-align: middle;\n",
        "    }\n",
        "\n",
        "    .dataframe tbody tr th {\n",
        "        vertical-align: top;\n",
        "    }\n",
        "\n",
        "    .dataframe thead th {\n",
        "        text-align: right;\n",
        "    }\n",
        "</style>\n",
        "<table border=\"1\" class=\"dataframe\">\n",
        "  <thead>\n",
        "    <tr style=\"text-align: right;\">\n",
        "      <th>Country</th>\n",
        "      <th>Bahrain</th>\n",
        "      <th>Bangladesh</th>\n",
        "      <th>Iran</th>\n",
        "      <th>Italy</th>\n",
        "      <th>Kuwait</th>\n",
        "      <th>Mexico</th>\n",
        "      <th>Moldova</th>\n",
        "      <th>Russia</th>\n",
        "      <th>United States</th>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>Date</th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "    </tr>\n",
        "  </thead>\n",
        "  <tbody>\n",
        "    <tr>\n",
        "      <th>2020-09-04</th>\n",
        "      <td>1.18</td>\n",
        "      <td>0.7</td>\n",
        "      <td>1.1</td>\n",
        "      <td>3.46</td>\n",
        "      <td>1.14</td>\n",
        "      <td>0.92</td>\n",
        "      <td>2.23</td>\n",
        "      <td>1.09</td>\n",
        "      <td>2.33</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>2020-09-05</th>\n",
        "      <td>1.18</td>\n",
        "      <td>0.7</td>\n",
        "      <td>1.1</td>\n",
        "      <td>3.46</td>\n",
        "      <td>1.14</td>\n",
        "      <td>0.92</td>\n",
        "      <td>2.23</td>\n",
        "      <td>1.09</td>\n",
        "      <td>2.33</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>2020-09-06</th>\n",
        "      <td>1.18</td>\n",
        "      <td>0.7</td>\n",
        "      <td>1.1</td>\n",
        "      <td>3.46</td>\n",
        "      <td>1.14</td>\n",
        "      <td>0.92</td>\n",
        "      <td>2.23</td>\n",
        "      <td>1.09</td>\n",
        "      <td>2.33</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>2020-09-07</th>\n",
        "      <td>1.18</td>\n",
        "      <td>0.7</td>\n",
        "      <td>1.1</td>\n",
        "      <td>3.46</td>\n",
        "      <td>1.14</td>\n",
        "      <td>0.92</td>\n",
        "      <td>2.23</td>\n",
        "      <td>1.09</td>\n",
        "      <td>2.33</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>2020-09-08</th>\n",
        "      <td>1.18</td>\n",
        "      <td>0.7</td>\n",
        "      <td>1.1</td>\n",
        "      <td>3.46</td>\n",
        "      <td>1.14</td>\n",
        "      <td>0.92</td>\n",
        "      <td>2.23</td>\n",
        "      <td>1.09</td>\n",
        "      <td>2.33</td>\n",
        "    </tr>\n",
        "  </tbody>\n",
        "</table>\n",
        "</div>"
       ],
       "output_type": "pyout",
       "prompt_number": 14,
       "text": [
        "Country     Bahrain  Bangladesh  Iran  Italy  Kuwait  Mexico  Moldova  Russia  \\\n",
        "Date                                                                            \n",
        "2020-09-04     1.18         0.7   1.1   3.46    1.14    0.92     2.23    1.09   \n",
        "2020-09-05     1.18         0.7   1.1   3.46    1.14    0.92     2.23    1.09   \n",
        "2020-09-06     1.18         0.7   1.1   3.46    1.14    0.92     2.23    1.09   \n",
        "2020-09-07     1.18         0.7   1.1   3.46    1.14    0.92     2.23    1.09   \n",
        "2020-09-08     1.18         0.7   1.1   3.46    1.14    0.92     2.23    1.09   \n",
        "\n",
        "Country     United States  \n",
        "Date                       \n",
        "2020-09-04           2.33  \n",
        "2020-09-05           2.33  \n",
        "2020-09-06           2.33  \n",
        "2020-09-07           2.33  \n",
        "2020-09-08           2.33  "
       ]
      }
     ],
     "prompt_number": 14
    },
    {
     "cell_type": "heading",
     "level": 3,
     "metadata": {},
     "source": [
      "$\\rho$: Effective contact rate $\\mathrm{[-]}$"
     ]
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "analyser.param_history(\"rho\", roll_window=None).tail()"
     ],
     "language": "python",
     "metadata": {},
     "outputs": [
      {
       "output_type": "display_data",
       "png": "\n",
       "text": [
        "<Figure size 648x432 with 1 Axes>"
       ]
      },
      {
       "html": [
        "<div>\n",
        "<style scoped>\n",
        "    .dataframe tbody tr th:only-of-type {\n",
        "        vertical-align: middle;\n",
        "    }\n",
        "\n",
        "    .dataframe tbody tr th {\n",
        "        vertical-align: top;\n",
        "    }\n",
        "\n",
        "    .dataframe thead th {\n",
        "        text-align: right;\n",
        "    }\n",
        "</style>\n",
        "<table border=\"1\" class=\"dataframe\">\n",
        "  <thead>\n",
        "    <tr style=\"text-align: right;\">\n",
        "      <th>Country</th>\n",
        "      <th>Bahrain</th>\n",
        "      <th>Bangladesh</th>\n",
        "      <th>Iran</th>\n",
        "      <th>Italy</th>\n",
        "      <th>Kuwait</th>\n",
        "      <th>Mexico</th>\n",
        "      <th>Moldova</th>\n",
        "      <th>Russia</th>\n",
        "      <th>United States</th>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>Date</th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "    </tr>\n",
        "  </thead>\n",
        "  <tbody>\n",
        "    <tr>\n",
        "      <th>2020-09-04</th>\n",
        "      <td>0.031587</td>\n",
        "      <td>0.00479</td>\n",
        "      <td>0.017217</td>\n",
        "      <td>0.011611</td>\n",
        "      <td>0.01997</td>\n",
        "      <td>0.026087</td>\n",
        "      <td>0.014642</td>\n",
        "      <td>0.001249</td>\n",
        "      <td>0.004317</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>2020-09-05</th>\n",
        "      <td>0.031587</td>\n",
        "      <td>0.00479</td>\n",
        "      <td>0.017217</td>\n",
        "      <td>0.011611</td>\n",
        "      <td>0.01997</td>\n",
        "      <td>0.026087</td>\n",
        "      <td>0.014642</td>\n",
        "      <td>0.001249</td>\n",
        "      <td>0.004317</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>2020-09-06</th>\n",
        "      <td>0.031587</td>\n",
        "      <td>0.00479</td>\n",
        "      <td>0.017217</td>\n",
        "      <td>0.011611</td>\n",
        "      <td>0.01997</td>\n",
        "      <td>0.026087</td>\n",
        "      <td>0.014642</td>\n",
        "      <td>0.001249</td>\n",
        "      <td>0.004317</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>2020-09-07</th>\n",
        "      <td>0.031587</td>\n",
        "      <td>0.00479</td>\n",
        "      <td>0.017217</td>\n",
        "      <td>0.011611</td>\n",
        "      <td>0.01997</td>\n",
        "      <td>0.026087</td>\n",
        "      <td>0.014642</td>\n",
        "      <td>0.001249</td>\n",
        "      <td>0.004317</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>2020-09-08</th>\n",
        "      <td>0.031587</td>\n",
        "      <td>0.00479</td>\n",
        "      <td>0.017217</td>\n",
        "      <td>0.011611</td>\n",
        "      <td>0.01997</td>\n",
        "      <td>0.026087</td>\n",
        "      <td>0.014642</td>\n",
        "      <td>0.001249</td>\n",
        "      <td>0.004317</td>\n",
        "    </tr>\n",
        "  </tbody>\n",
        "</table>\n",
        "</div>"
       ],
       "output_type": "pyout",
       "prompt_number": 15,
       "text": [
        "Country      Bahrain  Bangladesh      Iran     Italy   Kuwait    Mexico  \\\n",
        "Date                                                                      \n",
        "2020-09-04  0.031587     0.00479  0.017217  0.011611  0.01997  0.026087   \n",
        "2020-09-05  0.031587     0.00479  0.017217  0.011611  0.01997  0.026087   \n",
        "2020-09-06  0.031587     0.00479  0.017217  0.011611  0.01997  0.026087   \n",
        "2020-09-07  0.031587     0.00479  0.017217  0.011611  0.01997  0.026087   \n",
        "2020-09-08  0.031587     0.00479  0.017217  0.011611  0.01997  0.026087   \n",
        "\n",
        "Country      Moldova    Russia  United States  \n",
        "Date                                           \n",
        "2020-09-04  0.014642  0.001249       0.004317  \n",
        "2020-09-05  0.014642  0.001249       0.004317  \n",
        "2020-09-06  0.014642  0.001249       0.004317  \n",
        "2020-09-07  0.014642  0.001249       0.004317  \n",
        "2020-09-08  0.014642  0.001249       0.004317  "
       ]
      }
     ],
     "prompt_number": 15
    },
    {
     "cell_type": "heading",
     "level": 3,
     "metadata": {},
     "source": [
      "$\\sigma$: Recovery rate $\\mathrm{[-]}$"
     ]
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "analyser.param_history(\"sigma\", roll_window=None).tail()"
     ],
     "language": "python",
     "metadata": {},
     "outputs": [
      {
       "output_type": "display_data",
       "png": "\n",
       "text": [
        "<Figure size 648x432 with 1 Axes>"
       ]
      },
      {
       "html": [
        "<div>\n",
        "<style scoped>\n",
        "    .dataframe tbody tr th:only-of-type {\n",
        "        vertical-align: middle;\n",
        "    }\n",
        "\n",
        "    .dataframe tbody tr th {\n",
        "        vertical-align: top;\n",
        "    }\n",
        "\n",
        "    .dataframe thead th {\n",
        "        text-align: right;\n",
        "    }\n",
        "</style>\n",
        "<table border=\"1\" class=\"dataframe\">\n",
        "  <thead>\n",
        "    <tr style=\"text-align: right;\">\n",
        "      <th>Country</th>\n",
        "      <th>Bahrain</th>\n",
        "      <th>Bangladesh</th>\n",
        "      <th>Iran</th>\n",
        "      <th>Italy</th>\n",
        "      <th>Kuwait</th>\n",
        "      <th>Mexico</th>\n",
        "      <th>Moldova</th>\n",
        "      <th>Russia</th>\n",
        "      <th>United States</th>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>Date</th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "    </tr>\n",
        "  </thead>\n",
        "  <tbody>\n",
        "    <tr>\n",
        "      <th>2020-09-04</th>\n",
        "      <td>0.026658</td>\n",
        "      <td>0.006755</td>\n",
        "      <td>0.014802</td>\n",
        "      <td>0.003154</td>\n",
        "      <td>0.017533</td>\n",
        "      <td>0.025347</td>\n",
        "      <td>0.006374</td>\n",
        "      <td>0.001128</td>\n",
        "      <td>0.001779</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>2020-09-05</th>\n",
        "      <td>0.026658</td>\n",
        "      <td>0.006755</td>\n",
        "      <td>0.014802</td>\n",
        "      <td>0.003154</td>\n",
        "      <td>0.017533</td>\n",
        "      <td>0.025347</td>\n",
        "      <td>0.006374</td>\n",
        "      <td>0.001128</td>\n",
        "      <td>0.001779</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>2020-09-06</th>\n",
        "      <td>0.026658</td>\n",
        "      <td>0.006755</td>\n",
        "      <td>0.014802</td>\n",
        "      <td>0.003154</td>\n",
        "      <td>0.017533</td>\n",
        "      <td>0.025347</td>\n",
        "      <td>0.006374</td>\n",
        "      <td>0.001128</td>\n",
        "      <td>0.001779</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>2020-09-07</th>\n",
        "      <td>0.026658</td>\n",
        "      <td>0.006755</td>\n",
        "      <td>0.014802</td>\n",
        "      <td>0.003154</td>\n",
        "      <td>0.017533</td>\n",
        "      <td>0.025347</td>\n",
        "      <td>0.006374</td>\n",
        "      <td>0.001128</td>\n",
        "      <td>0.001779</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>2020-09-08</th>\n",
        "      <td>0.026658</td>\n",
        "      <td>0.006755</td>\n",
        "      <td>0.014802</td>\n",
        "      <td>0.003154</td>\n",
        "      <td>0.017533</td>\n",
        "      <td>0.025347</td>\n",
        "      <td>0.006374</td>\n",
        "      <td>0.001128</td>\n",
        "      <td>0.001779</td>\n",
        "    </tr>\n",
        "  </tbody>\n",
        "</table>\n",
        "</div>"
       ],
       "output_type": "pyout",
       "prompt_number": 16,
       "text": [
        "Country      Bahrain  Bangladesh      Iran     Italy    Kuwait    Mexico  \\\n",
        "Date                                                                       \n",
        "2020-09-04  0.026658    0.006755  0.014802  0.003154  0.017533  0.025347   \n",
        "2020-09-05  0.026658    0.006755  0.014802  0.003154  0.017533  0.025347   \n",
        "2020-09-06  0.026658    0.006755  0.014802  0.003154  0.017533  0.025347   \n",
        "2020-09-07  0.026658    0.006755  0.014802  0.003154  0.017533  0.025347   \n",
        "2020-09-08  0.026658    0.006755  0.014802  0.003154  0.017533  0.025347   \n",
        "\n",
        "Country      Moldova    Russia  United States  \n",
        "Date                                           \n",
        "2020-09-04  0.006374  0.001128       0.001779  \n",
        "2020-09-05  0.006374  0.001128       0.001779  \n",
        "2020-09-06  0.006374  0.001128       0.001779  \n",
        "2020-09-07  0.006374  0.001128       0.001779  \n",
        "2020-09-08  0.006374  0.001128       0.001779  "
       ]
      }
     ],
     "prompt_number": 16
    },
    {
     "cell_type": "heading",
     "level": 3,
     "metadata": {},
     "source": [
      "$\\kappa$: Mortality rate of infected cases $\\mathrm{[-]}$"
     ]
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "analyser.param_history(\"kappa\", roll_window=None).tail()"
     ],
     "language": "python",
     "metadata": {},
     "outputs": [
      {
       "output_type": "display_data",
       "png": "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\n",
       "text": [
        "<Figure size 648x432 with 1 Axes>"
       ]
      },
      {
       "html": [
        "<div>\n",
        "<style scoped>\n",
        "    .dataframe tbody tr th:only-of-type {\n",
        "        vertical-align: middle;\n",
        "    }\n",
        "\n",
        "    .dataframe tbody tr th {\n",
        "        vertical-align: top;\n",
        "    }\n",
        "\n",
        "    .dataframe thead th {\n",
        "        text-align: right;\n",
        "    }\n",
        "</style>\n",
        "<table border=\"1\" class=\"dataframe\">\n",
        "  <thead>\n",
        "    <tr style=\"text-align: right;\">\n",
        "      <th>Country</th>\n",
        "      <th>Bahrain</th>\n",
        "      <th>Bangladesh</th>\n",
        "      <th>Iran</th>\n",
        "      <th>Italy</th>\n",
        "      <th>Kuwait</th>\n",
        "      <th>Mexico</th>\n",
        "      <th>Moldova</th>\n",
        "      <th>Russia</th>\n",
        "      <th>United States</th>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>Date</th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "    </tr>\n",
        "  </thead>\n",
        "  <tbody>\n",
        "    <tr>\n",
        "      <th>2020-09-04</th>\n",
        "      <td>0.000002</td>\n",
        "      <td>0.000076</td>\n",
        "      <td>0.000301</td>\n",
        "      <td>0.000192</td>\n",
        "      <td>0.000024</td>\n",
        "      <td>0.000718</td>\n",
        "      <td>0.000185</td>\n",
        "      <td>0.000021</td>\n",
        "      <td>0.000076</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>2020-09-05</th>\n",
        "      <td>0.000002</td>\n",
        "      <td>0.000076</td>\n",
        "      <td>0.000301</td>\n",
        "      <td>0.000192</td>\n",
        "      <td>0.000024</td>\n",
        "      <td>0.000718</td>\n",
        "      <td>0.000185</td>\n",
        "      <td>0.000021</td>\n",
        "      <td>0.000076</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>2020-09-06</th>\n",
        "      <td>0.000002</td>\n",
        "      <td>0.000076</td>\n",
        "      <td>0.000301</td>\n",
        "      <td>0.000192</td>\n",
        "      <td>0.000024</td>\n",
        "      <td>0.000718</td>\n",
        "      <td>0.000185</td>\n",
        "      <td>0.000021</td>\n",
        "      <td>0.000076</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>2020-09-07</th>\n",
        "      <td>0.000002</td>\n",
        "      <td>0.000076</td>\n",
        "      <td>0.000301</td>\n",
        "      <td>0.000192</td>\n",
        "      <td>0.000024</td>\n",
        "      <td>0.000718</td>\n",
        "      <td>0.000185</td>\n",
        "      <td>0.000021</td>\n",
        "      <td>0.000076</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>2020-09-08</th>\n",
        "      <td>0.000002</td>\n",
        "      <td>0.000076</td>\n",
        "      <td>0.000301</td>\n",
        "      <td>0.000192</td>\n",
        "      <td>0.000024</td>\n",
        "      <td>0.000718</td>\n",
        "      <td>0.000185</td>\n",
        "      <td>0.000021</td>\n",
        "      <td>0.000076</td>\n",
        "    </tr>\n",
        "  </tbody>\n",
        "</table>\n",
        "</div>"
       ],
       "output_type": "pyout",
       "prompt_number": 17,
       "text": [
        "Country      Bahrain  Bangladesh      Iran     Italy    Kuwait    Mexico  \\\n",
        "Date                                                                       \n",
        "2020-09-04  0.000002    0.000076  0.000301  0.000192  0.000024  0.000718   \n",
        "2020-09-05  0.000002    0.000076  0.000301  0.000192  0.000024  0.000718   \n",
        "2020-09-06  0.000002    0.000076  0.000301  0.000192  0.000024  0.000718   \n",
        "2020-09-07  0.000002    0.000076  0.000301  0.000192  0.000024  0.000718   \n",
        "2020-09-08  0.000002    0.000076  0.000301  0.000192  0.000024  0.000718   \n",
        "\n",
        "Country      Moldova    Russia  United States  \n",
        "Date                                           \n",
        "2020-09-04  0.000185  0.000021       0.000076  \n",
        "2020-09-05  0.000185  0.000021       0.000076  \n",
        "2020-09-06  0.000185  0.000021       0.000076  \n",
        "2020-09-07  0.000185  0.000021       0.000076  \n",
        "2020-09-08  0.000185  0.000021       0.000076  "
       ]
      }
     ],
     "prompt_number": 17
    },
    {
     "cell_type": "heading",
     "level": 3,
     "metadata": {},
     "source": [
      "$\\theta$: Mortality rate of S$^\\ast$ cases $\\mathrm{[-]}$"
     ]
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "analyser.param_history(\"theta\", roll_window=None).tail()"
     ],
     "language": "python",
     "metadata": {},
     "outputs": [
      {
       "output_type": "display_data",
       "png": "\n",
       "text": [
        "<Figure size 648x432 with 1 Axes>"
       ]
      },
      {
       "html": [
        "<div>\n",
        "<style scoped>\n",
        "    .dataframe tbody tr th:only-of-type {\n",
        "        vertical-align: middle;\n",
        "    }\n",
        "\n",
        "    .dataframe tbody tr th {\n",
        "        vertical-align: top;\n",
        "    }\n",
        "\n",
        "    .dataframe thead th {\n",
        "        text-align: right;\n",
        "    }\n",
        "</style>\n",
        "<table border=\"1\" class=\"dataframe\">\n",
        "  <thead>\n",
        "    <tr style=\"text-align: right;\">\n",
        "      <th>Country</th>\n",
        "      <th>Bahrain</th>\n",
        "      <th>Bangladesh</th>\n",
        "      <th>Iran</th>\n",
        "      <th>Italy</th>\n",
        "      <th>Kuwait</th>\n",
        "      <th>Mexico</th>\n",
        "      <th>Moldova</th>\n",
        "      <th>Russia</th>\n",
        "      <th>United States</th>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>Date</th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "    </tr>\n",
        "  </thead>\n",
        "  <tbody>\n",
        "    <tr>\n",
        "      <th>2020-09-04</th>\n",
        "      <td>0.001266</td>\n",
        "      <td>0.000409</td>\n",
        "      <td>0.038447</td>\n",
        "      <td>0.001903</td>\n",
        "      <td>0.000663</td>\n",
        "      <td>0.081362</td>\n",
        "      <td>0.00044</td>\n",
        "      <td>0.001551</td>\n",
        "      <td>0.000415</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>2020-09-05</th>\n",
        "      <td>0.001266</td>\n",
        "      <td>0.000409</td>\n",
        "      <td>0.038447</td>\n",
        "      <td>0.001903</td>\n",
        "      <td>0.000663</td>\n",
        "      <td>0.081362</td>\n",
        "      <td>0.00044</td>\n",
        "      <td>0.001551</td>\n",
        "      <td>0.000415</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>2020-09-06</th>\n",
        "      <td>0.001266</td>\n",
        "      <td>0.000409</td>\n",
        "      <td>0.038447</td>\n",
        "      <td>0.001903</td>\n",
        "      <td>0.000663</td>\n",
        "      <td>0.081362</td>\n",
        "      <td>0.00044</td>\n",
        "      <td>0.001551</td>\n",
        "      <td>0.000415</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>2020-09-07</th>\n",
        "      <td>0.001266</td>\n",
        "      <td>0.000409</td>\n",
        "      <td>0.038447</td>\n",
        "      <td>0.001903</td>\n",
        "      <td>0.000663</td>\n",
        "      <td>0.081362</td>\n",
        "      <td>0.00044</td>\n",
        "      <td>0.001551</td>\n",
        "      <td>0.000415</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>2020-09-08</th>\n",
        "      <td>0.001266</td>\n",
        "      <td>0.000409</td>\n",
        "      <td>0.038447</td>\n",
        "      <td>0.001903</td>\n",
        "      <td>0.000663</td>\n",
        "      <td>0.081362</td>\n",
        "      <td>0.00044</td>\n",
        "      <td>0.001551</td>\n",
        "      <td>0.000415</td>\n",
        "    </tr>\n",
        "  </tbody>\n",
        "</table>\n",
        "</div>"
       ],
       "output_type": "pyout",
       "prompt_number": 18,
       "text": [
        "Country      Bahrain  Bangladesh      Iran     Italy    Kuwait    Mexico  \\\n",
        "Date                                                                       \n",
        "2020-09-04  0.001266    0.000409  0.038447  0.001903  0.000663  0.081362   \n",
        "2020-09-05  0.001266    0.000409  0.038447  0.001903  0.000663  0.081362   \n",
        "2020-09-06  0.001266    0.000409  0.038447  0.001903  0.000663  0.081362   \n",
        "2020-09-07  0.001266    0.000409  0.038447  0.001903  0.000663  0.081362   \n",
        "2020-09-08  0.001266    0.000409  0.038447  0.001903  0.000663  0.081362   \n",
        "\n",
        "Country     Moldova    Russia  United States  \n",
        "Date                                          \n",
        "2020-09-04  0.00044  0.001551       0.000415  \n",
        "2020-09-05  0.00044  0.001551       0.000415  \n",
        "2020-09-06  0.00044  0.001551       0.000415  \n",
        "2020-09-07  0.00044  0.001551       0.000415  \n",
        "2020-09-08  0.00044  0.001551       0.000415  "
       ]
      }
     ],
     "prompt_number": 18
    },
    {
     "cell_type": "markdown",
     "metadata": {},
     "source": [
      "## (Experimental): Relationship of OxCGRT index and parameter values\n",
      "Government responses will impact on parameter values of ODE models about 14 days later. Here, we will investigate on the relationship of [stringency index (from OxCGRT)](https://github.com/OxCGRT/covid-policy-tracker/blob/master/documentation/index_methodology.md) and reproduction number/model parameters.\n"
     ]
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "%matplotlib inline\n",
      "from matplotlib import pyplot as plt\n",
      "import seaborn as sns\n",
      "import pandas as pd"
     ],
     "language": "python",
     "metadata": {},
     "outputs": [],
     "prompt_number": 19
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "df = analyser.track()\n",
      "param_cols = [\"Rt\", *cs.SIRF.PARAMETERS]\n",
      "oxcgrt_cols = oxcgrt_data.OXCGRT_VARS[:]\n",
      "cols = param_cols + oxcgrt_cols\n",
      "delay = 14\n",
      "\n",
      "for col in param_cols:\n",
      "    df[col] = pd.to_numeric(df[col], errors=\"coerce\")\n",
      "    df[col] = df.groupby(\"Country\")[col].shift(0 - delay)\n",
      "\n",
      "df = df.dropna(how=\"any\")\n",
      "df = df.loc[:, [\"Date\", \"Country\", *cols]]\n",
      "track_df = df.copy()\n",
      "track_df.info()"
     ],
     "language": "python",
     "metadata": {},
     "outputs": [
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "<class 'pandas.core.frame.DataFrame'>\n",
        "Int64Index: 35542 entries, 0 to 35653\n",
        "Data columns (total 19 columns):\n",
        " #   Column                               Non-Null Count  Dtype         \n",
        "---  ------                               --------------  -----         \n",
        " 0   Date                                 35542 non-null  datetime64[ns]\n",
        " 1   Country                              35542 non-null  object        \n",
        " 2   Rt                                   35542 non-null  float64       \n",
        " 3   theta                                35542 non-null  float64       \n",
        " 4   kappa                                35542 non-null  float64       \n",
        " 5   rho                                  35542 non-null  float64       \n",
        " 6   sigma                                35542 non-null  float64       \n",
        " 7   School_closing                       35542 non-null  int64         \n",
        " 8   Workplace_closing                    35542 non-null  int64         \n",
        " 9   Cancel_events                        35542 non-null  int64         \n",
        " 10  Gatherings_restrictions              35542 non-null  int64         \n",
        " 11  Transport_closing                    35542 non-null  int64         \n",
        " 12  Stay_home_restrictions               35542 non-null  int64         \n",
        " 13  Internal_movement_restrictions       35542 non-null  int64         \n",
        " 14  International_movement_restrictions  35542 non-null  int64         \n",
        " 15  Information_campaigns                35542 non-null  int64         \n",
        " 16  Testing_policy                       35542 non-null  int64         \n",
        " 17  Contact_tracing                      35542 non-null  int64         \n",
        " 18  Stringency_index                     35542 non-null  float64       \n",
        "dtypes: datetime64[ns](1), float64(6), int64(11), object(1)\n",
        "memory usage: 5.4+ MB\n"
       ]
      }
     ],
     "prompt_number": 20
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "# Correlation\n",
      "df = track_df.copy()\n",
      "df.corr().style.background_gradient(axis=None)"
     ],
     "language": "python",
     "metadata": {},
     "outputs": [
      {
       "html": [
        "<style  type=\"text/css\" >\n",
        "#T_6d1bd5f8_f1de_11ea_8b7f_5254001d5caarow0_col0,#T_6d1bd5f8_f1de_11ea_8b7f_5254001d5caarow1_col1,#T_6d1bd5f8_f1de_11ea_8b7f_5254001d5caarow2_col2,#T_6d1bd5f8_f1de_11ea_8b7f_5254001d5caarow3_col3,#T_6d1bd5f8_f1de_11ea_8b7f_5254001d5caarow4_col4,#T_6d1bd5f8_f1de_11ea_8b7f_5254001d5caarow5_col5,#T_6d1bd5f8_f1de_11ea_8b7f_5254001d5caarow6_col6,#T_6d1bd5f8_f1de_11ea_8b7f_5254001d5caarow7_col7,#T_6d1bd5f8_f1de_11ea_8b7f_5254001d5caarow8_col8,#T_6d1bd5f8_f1de_11ea_8b7f_5254001d5caarow9_col9,#T_6d1bd5f8_f1de_11ea_8b7f_5254001d5caarow10_col10,#T_6d1bd5f8_f1de_11ea_8b7f_5254001d5caarow11_col11,#T_6d1bd5f8_f1de_11ea_8b7f_5254001d5caarow12_col12,#T_6d1bd5f8_f1de_11ea_8b7f_5254001d5caarow13_col13,#T_6d1bd5f8_f1de_11ea_8b7f_5254001d5caarow14_col14,#T_6d1bd5f8_f1de_11ea_8b7f_5254001d5caarow15_col15,#T_6d1bd5f8_f1de_11ea_8b7f_5254001d5caarow16_col16{\n",
        "            background-color:  #023858;\n",
        "            color:  #f1f1f1;\n",
        "        }#T_6d1bd5f8_f1de_11ea_8b7f_5254001d5caarow0_col1,#T_6d1bd5f8_f1de_11ea_8b7f_5254001d5caarow1_col0{\n",
        "            background-color:  #f1ebf4;\n",
        "            color:  #000000;\n",
        "        }#T_6d1bd5f8_f1de_11ea_8b7f_5254001d5caarow0_col2,#T_6d1bd5f8_f1de_11ea_8b7f_5254001d5caarow2_col0,#T_6d1bd5f8_f1de_11ea_8b7f_5254001d5caarow3_col13,#T_6d1bd5f8_f1de_11ea_8b7f_5254001d5caarow13_col3{\n",
        "            background-color:  #f2ecf5;\n",
        "            color:  #000000;\n",
        "        }#T_6d1bd5f8_f1de_11ea_8b7f_5254001d5caarow0_col3,#T_6d1bd5f8_f1de_11ea_8b7f_5254001d5caarow3_col0{\n",
        "            background-color:  #8bb2d4;\n",
        "            color:  #000000;\n",
        "        }#T_6d1bd5f8_f1de_11ea_8b7f_5254001d5caarow0_col4,#T_6d1bd5f8_f1de_11ea_8b7f_5254001d5caarow2_col6,#T_6d1bd5f8_f1de_11ea_8b7f_5254001d5caarow4_col0,#T_6d1bd5f8_f1de_11ea_8b7f_5254001d5caarow6_col2{\n",
        "            background-color:  #d7d6e9;\n",
        "            color:  #000000;\n",
        "        }#T_6d1bd5f8_f1de_11ea_8b7f_5254001d5caarow0_col5,#T_6d1bd5f8_f1de_11ea_8b7f_5254001d5caarow5_col0{\n",
        "            background-color:  #abbfdc;\n",
        "            color:  #000000;\n",
        "        }#T_6d1bd5f8_f1de_11ea_8b7f_5254001d5caarow0_col6,#T_6d1bd5f8_f1de_11ea_8b7f_5254001d5caarow1_col15,#T_6d1bd5f8_f1de_11ea_8b7f_5254001d5caarow6_col0,#T_6d1bd5f8_f1de_11ea_8b7f_5254001d5caarow15_col1{\n",
        "            background-color:  #b3c3de;\n",
        "            color:  #000000;\n",
        "        }#T_6d1bd5f8_f1de_11ea_8b7f_5254001d5caarow0_col7,#T_6d1bd5f8_f1de_11ea_8b7f_5254001d5caarow0_col11,#T_6d1bd5f8_f1de_11ea_8b7f_5254001d5caarow7_col0,#T_6d1bd5f8_f1de_11ea_8b7f_5254001d5caarow11_col0{\n",
        "            background-color:  #ced0e6;\n",
        "            color:  #000000;\n",
        "        }#T_6d1bd5f8_f1de_11ea_8b7f_5254001d5caarow0_col8,#T_6d1bd5f8_f1de_11ea_8b7f_5254001d5caarow8_col0{\n",
        "            background-color:  #c4cbe3;\n",
        "            color:  #000000;\n",
        "        }#T_6d1bd5f8_f1de_11ea_8b7f_5254001d5caarow0_col9,#T_6d1bd5f8_f1de_11ea_8b7f_5254001d5caarow2_col11,#T_6d1bd5f8_f1de_11ea_8b7f_5254001d5caarow9_col0,#T_6d1bd5f8_f1de_11ea_8b7f_5254001d5caarow11_col2{\n",
        "            background-color:  #c9cee4;\n",
        "            color:  #000000;\n",
        "        }#T_6d1bd5f8_f1de_11ea_8b7f_5254001d5caarow0_col10,#T_6d1bd5f8_f1de_11ea_8b7f_5254001d5caarow2_col16,#T_6d1bd5f8_f1de_11ea_8b7f_5254001d5caarow10_col0,#T_6d1bd5f8_f1de_11ea_8b7f_5254001d5caarow16_col2{\n",
        "            background-color:  #d9d8ea;\n",
        "            color:  #000000;\n",
        "        }#T_6d1bd5f8_f1de_11ea_8b7f_5254001d5caarow0_col12,#T_6d1bd5f8_f1de_11ea_8b7f_5254001d5caarow12_col0{\n",
        "            background-color:  #f1ebf5;\n",
        "            color:  #000000;\n",
        "        }#T_6d1bd5f8_f1de_11ea_8b7f_5254001d5caarow0_col13,#T_6d1bd5f8_f1de_11ea_8b7f_5254001d5caarow2_col4,#T_6d1bd5f8_f1de_11ea_8b7f_5254001d5caarow3_col11,#T_6d1bd5f8_f1de_11ea_8b7f_5254001d5caarow4_col2,#T_6d1bd5f8_f1de_11ea_8b7f_5254001d5caarow11_col3,#T_6d1bd5f8_f1de_11ea_8b7f_5254001d5caarow13_col0{\n",
        "            background-color:  #d2d2e7;\n",
        "            color:  #000000;\n",
        "        }#T_6d1bd5f8_f1de_11ea_8b7f_5254001d5caarow0_col14,#T_6d1bd5f8_f1de_11ea_8b7f_5254001d5caarow14_col0{\n",
        "            background-color:  #d1d2e6;\n",
        "            color:  #000000;\n",
        "        }#T_6d1bd5f8_f1de_11ea_8b7f_5254001d5caarow0_col15,#T_6d1bd5f8_f1de_11ea_8b7f_5254001d5caarow1_col9,#T_6d1bd5f8_f1de_11ea_8b7f_5254001d5caarow9_col1,#T_6d1bd5f8_f1de_11ea_8b7f_5254001d5caarow15_col0{\n",
        "            background-color:  #eee9f3;\n",
        "            color:  #000000;\n",
        "        }#T_6d1bd5f8_f1de_11ea_8b7f_5254001d5caarow0_col16,#T_6d1bd5f8_f1de_11ea_8b7f_5254001d5caarow16_col0{\n",
        "            background-color:  #d4d4e8;\n",
        "            color:  #000000;\n",
        "        }#T_6d1bd5f8_f1de_11ea_8b7f_5254001d5caarow1_col2,#T_6d1bd5f8_f1de_11ea_8b7f_5254001d5caarow2_col1{\n",
        "            background-color:  #02395a;\n",
        "            color:  #f1f1f1;\n",
        "        }#T_6d1bd5f8_f1de_11ea_8b7f_5254001d5caarow1_col3,#T_6d1bd5f8_f1de_11ea_8b7f_5254001d5caarow3_col1,#T_6d1bd5f8_f1de_11ea_8b7f_5254001d5caarow8_col9,#T_6d1bd5f8_f1de_11ea_8b7f_5254001d5caarow8_col14,#T_6d1bd5f8_f1de_11ea_8b7f_5254001d5caarow9_col8,#T_6d1bd5f8_f1de_11ea_8b7f_5254001d5caarow10_col16,#T_6d1bd5f8_f1de_11ea_8b7f_5254001d5caarow14_col8,#T_6d1bd5f8_f1de_11ea_8b7f_5254001d5caarow16_col10{\n",
        "            background-color:  #045b8e;\n",
        "            color:  #f1f1f1;\n",
        "        }#T_6d1bd5f8_f1de_11ea_8b7f_5254001d5caarow1_col4,#T_6d1bd5f8_f1de_11ea_8b7f_5254001d5caarow4_col1,#T_6d1bd5f8_f1de_11ea_8b7f_5254001d5caarow4_col11,#T_6d1bd5f8_f1de_11ea_8b7f_5254001d5caarow11_col4{\n",
        "            background-color:  #c8cde4;\n",
        "            color:  #000000;\n",
        "        }#T_6d1bd5f8_f1de_11ea_8b7f_5254001d5caarow1_col5,#T_6d1bd5f8_f1de_11ea_8b7f_5254001d5caarow5_col1{\n",
        "            background-color:  #ede7f2;\n",
        "            color:  #000000;\n",
        "        }#T_6d1bd5f8_f1de_11ea_8b7f_5254001d5caarow1_col6,#T_6d1bd5f8_f1de_11ea_8b7f_5254001d5caarow6_col1{\n",
        "            background-color:  #d5d5e8;\n",
        "            color:  #000000;\n",
        "        }#T_6d1bd5f8_f1de_11ea_8b7f_5254001d5caarow1_col7,#T_6d1bd5f8_f1de_11ea_8b7f_5254001d5caarow2_col7,#T_6d1bd5f8_f1de_11ea_8b7f_5254001d5caarow2_col9,#T_6d1bd5f8_f1de_11ea_8b7f_5254001d5caarow7_col1,#T_6d1bd5f8_f1de_11ea_8b7f_5254001d5caarow7_col2,#T_6d1bd5f8_f1de_11ea_8b7f_5254001d5caarow9_col2{\n",
        "            background-color:  #ede8f3;\n",
        "            color:  #000000;\n",
        "        }#T_6d1bd5f8_f1de_11ea_8b7f_5254001d5caarow1_col8,#T_6d1bd5f8_f1de_11ea_8b7f_5254001d5caarow2_col5,#T_6d1bd5f8_f1de_11ea_8b7f_5254001d5caarow3_col7,#T_6d1bd5f8_f1de_11ea_8b7f_5254001d5caarow5_col2,#T_6d1bd5f8_f1de_11ea_8b7f_5254001d5caarow7_col3,#T_6d1bd5f8_f1de_11ea_8b7f_5254001d5caarow8_col1{\n",
        "            background-color:  #eee8f3;\n",
        "            color:  #000000;\n",
        "        }#T_6d1bd5f8_f1de_11ea_8b7f_5254001d5caarow1_col10,#T_6d1bd5f8_f1de_11ea_8b7f_5254001d5caarow10_col1{\n",
        "            background-color:  #9ab8d8;\n",
        "            color:  #000000;\n",
        "        }#T_6d1bd5f8_f1de_11ea_8b7f_5254001d5caarow1_col11,#T_6d1bd5f8_f1de_11ea_8b7f_5254001d5caarow11_col1{\n",
        "            background-color:  #cdd0e5;\n",
        "            color:  #000000;\n",
        "        }#T_6d1bd5f8_f1de_11ea_8b7f_5254001d5caarow1_col12,#T_6d1bd5f8_f1de_11ea_8b7f_5254001d5caarow12_col1{\n",
        "            background-color:  #84b0d3;\n",
        "            color:  #000000;\n",
        "        }#T_6d1bd5f8_f1de_11ea_8b7f_5254001d5caarow1_col13,#T_6d1bd5f8_f1de_11ea_8b7f_5254001d5caarow2_col13,#T_6d1bd5f8_f1de_11ea_8b7f_5254001d5caarow3_col9,#T_6d1bd5f8_f1de_11ea_8b7f_5254001d5caarow9_col3,#T_6d1bd5f8_f1de_11ea_8b7f_5254001d5caarow13_col1,#T_6d1bd5f8_f1de_11ea_8b7f_5254001d5caarow13_col2{\n",
        "            background-color:  #f0eaf4;\n",
        "            color:  #000000;\n",
        "        }#T_6d1bd5f8_f1de_11ea_8b7f_5254001d5caarow1_col14,#T_6d1bd5f8_f1de_11ea_8b7f_5254001d5caarow14_col1{\n",
        "            background-color:  #f8f1f8;\n",
        "            color:  #000000;\n",
        "        }#T_6d1bd5f8_f1de_11ea_8b7f_5254001d5caarow1_col16,#T_6d1bd5f8_f1de_11ea_8b7f_5254001d5caarow3_col16,#T_6d1bd5f8_f1de_11ea_8b7f_5254001d5caarow16_col1,#T_6d1bd5f8_f1de_11ea_8b7f_5254001d5caarow16_col3{\n",
        "            background-color:  #d8d7e9;\n",
        "            color:  #000000;\n",
        "        }#T_6d1bd5f8_f1de_11ea_8b7f_5254001d5caarow2_col3,#T_6d1bd5f8_f1de_11ea_8b7f_5254001d5caarow3_col2,#T_6d1bd5f8_f1de_11ea_8b7f_5254001d5caarow11_col16,#T_6d1bd5f8_f1de_11ea_8b7f_5254001d5caarow16_col11{\n",
        "            background-color:  #045c90;\n",
        "            color:  #f1f1f1;\n",
        "        }#T_6d1bd5f8_f1de_11ea_8b7f_5254001d5caarow2_col8,#T_6d1bd5f8_f1de_11ea_8b7f_5254001d5caarow8_col2{\n",
        "            background-color:  #eae6f1;\n",
        "            color:  #000000;\n",
        "        }#T_6d1bd5f8_f1de_11ea_8b7f_5254001d5caarow2_col10,#T_6d1bd5f8_f1de_11ea_8b7f_5254001d5caarow10_col2{\n",
        "            background-color:  #99b8d8;\n",
        "            color:  #000000;\n",
        "        }#T_6d1bd5f8_f1de_11ea_8b7f_5254001d5caarow2_col12,#T_6d1bd5f8_f1de_11ea_8b7f_5254001d5caarow12_col2{\n",
        "            background-color:  #7bacd1;\n",
        "            color:  #000000;\n",
        "        }#T_6d1bd5f8_f1de_11ea_8b7f_5254001d5caarow2_col14,#T_6d1bd5f8_f1de_11ea_8b7f_5254001d5caarow14_col2{\n",
        "            background-color:  #f5eef6;\n",
        "            color:  #000000;\n",
        "        }#T_6d1bd5f8_f1de_11ea_8b7f_5254001d5caarow2_col15,#T_6d1bd5f8_f1de_11ea_8b7f_5254001d5caarow15_col2{\n",
        "            background-color:  #b5c4df;\n",
        "            color:  #000000;\n",
        "        }#T_6d1bd5f8_f1de_11ea_8b7f_5254001d5caarow3_col4,#T_6d1bd5f8_f1de_11ea_8b7f_5254001d5caarow4_col3{\n",
        "            background-color:  #acc0dd;\n",
        "            color:  #000000;\n",
        "        }#T_6d1bd5f8_f1de_11ea_8b7f_5254001d5caarow3_col5,#T_6d1bd5f8_f1de_11ea_8b7f_5254001d5caarow5_col3{\n",
        "            background-color:  #e1dfed;\n",
        "            color:  #000000;\n",
        "        }#T_6d1bd5f8_f1de_11ea_8b7f_5254001d5caarow3_col6,#T_6d1bd5f8_f1de_11ea_8b7f_5254001d5caarow6_col3{\n",
        "            background-color:  #cccfe5;\n",
        "            color:  #000000;\n",
        "        }#T_6d1bd5f8_f1de_11ea_8b7f_5254001d5caarow3_col8,#T_6d1bd5f8_f1de_11ea_8b7f_5254001d5caarow8_col3{\n",
        "            background-color:  #ece7f2;\n",
        "            color:  #000000;\n",
        "        }#T_6d1bd5f8_f1de_11ea_8b7f_5254001d5caarow3_col10,#T_6d1bd5f8_f1de_11ea_8b7f_5254001d5caarow10_col3{\n",
        "            background-color:  #a5bddb;\n",
        "            color:  #000000;\n",
        "        }#T_6d1bd5f8_f1de_11ea_8b7f_5254001d5caarow3_col12,#T_6d1bd5f8_f1de_11ea_8b7f_5254001d5caarow12_col3{\n",
        "            background-color:  #a1bbda;\n",
        "            color:  #000000;\n",
        "        }#T_6d1bd5f8_f1de_11ea_8b7f_5254001d5caarow3_col14,#T_6d1bd5f8_f1de_11ea_8b7f_5254001d5caarow14_col3{\n",
        "            background-color:  #fff7fb;\n",
        "            color:  #000000;\n",
        "        }#T_6d1bd5f8_f1de_11ea_8b7f_5254001d5caarow3_col15,#T_6d1bd5f8_f1de_11ea_8b7f_5254001d5caarow4_col8,#T_6d1bd5f8_f1de_11ea_8b7f_5254001d5caarow4_col14,#T_6d1bd5f8_f1de_11ea_8b7f_5254001d5caarow8_col4,#T_6d1bd5f8_f1de_11ea_8b7f_5254001d5caarow14_col4,#T_6d1bd5f8_f1de_11ea_8b7f_5254001d5caarow15_col3{\n",
        "            background-color:  #c6cce3;\n",
        "            color:  #000000;\n",
        "        }#T_6d1bd5f8_f1de_11ea_8b7f_5254001d5caarow4_col5,#T_6d1bd5f8_f1de_11ea_8b7f_5254001d5caarow5_col4{\n",
        "            background-color:  #83afd3;\n",
        "            color:  #000000;\n",
        "        }#T_6d1bd5f8_f1de_11ea_8b7f_5254001d5caarow4_col6,#T_6d1bd5f8_f1de_11ea_8b7f_5254001d5caarow6_col4{\n",
        "            background-color:  #a8bedc;\n",
        "            color:  #000000;\n",
        "        }#T_6d1bd5f8_f1de_11ea_8b7f_5254001d5caarow4_col7,#T_6d1bd5f8_f1de_11ea_8b7f_5254001d5caarow7_col4{\n",
        "            background-color:  #93b5d6;\n",
        "            color:  #000000;\n",
        "        }#T_6d1bd5f8_f1de_11ea_8b7f_5254001d5caarow4_col9,#T_6d1bd5f8_f1de_11ea_8b7f_5254001d5caarow4_col10,#T_6d1bd5f8_f1de_11ea_8b7f_5254001d5caarow9_col4,#T_6d1bd5f8_f1de_11ea_8b7f_5254001d5caarow10_col4{\n",
        "            background-color:  #b8c6e0;\n",
        "            color:  #000000;\n",
        "        }#T_6d1bd5f8_f1de_11ea_8b7f_5254001d5caarow4_col12,#T_6d1bd5f8_f1de_11ea_8b7f_5254001d5caarow12_col4{\n",
        "            background-color:  #b9c6e0;\n",
        "            color:  #000000;\n",
        "        }#T_6d1bd5f8_f1de_11ea_8b7f_5254001d5caarow4_col13,#T_6d1bd5f8_f1de_11ea_8b7f_5254001d5caarow13_col4{\n",
        "            background-color:  #8fb4d6;\n",
        "            color:  #000000;\n",
        "        }#T_6d1bd5f8_f1de_11ea_8b7f_5254001d5caarow4_col15,#T_6d1bd5f8_f1de_11ea_8b7f_5254001d5caarow15_col4{\n",
        "            background-color:  #79abd0;\n",
        "            color:  #000000;\n",
        "        }#T_6d1bd5f8_f1de_11ea_8b7f_5254001d5caarow4_col16,#T_6d1bd5f8_f1de_11ea_8b7f_5254001d5caarow16_col4{\n",
        "            background-color:  #97b7d7;\n",
        "            color:  #000000;\n",
        "        }#T_6d1bd5f8_f1de_11ea_8b7f_5254001d5caarow5_col6,#T_6d1bd5f8_f1de_11ea_8b7f_5254001d5caarow6_col5{\n",
        "            background-color:  #045e94;\n",
        "            color:  #f1f1f1;\n",
        "        }#T_6d1bd5f8_f1de_11ea_8b7f_5254001d5caarow5_col7,#T_6d1bd5f8_f1de_11ea_8b7f_5254001d5caarow7_col5{\n",
        "            background-color:  #045585;\n",
        "            color:  #f1f1f1;\n",
        "        }#T_6d1bd5f8_f1de_11ea_8b7f_5254001d5caarow5_col8,#T_6d1bd5f8_f1de_11ea_8b7f_5254001d5caarow8_col5,#T_6d1bd5f8_f1de_11ea_8b7f_5254001d5caarow8_col10,#T_6d1bd5f8_f1de_11ea_8b7f_5254001d5caarow9_col14,#T_6d1bd5f8_f1de_11ea_8b7f_5254001d5caarow10_col8,#T_6d1bd5f8_f1de_11ea_8b7f_5254001d5caarow14_col9{\n",
        "            background-color:  #0566a0;\n",
        "            color:  #f1f1f1;\n",
        "        }#T_6d1bd5f8_f1de_11ea_8b7f_5254001d5caarow5_col9,#T_6d1bd5f8_f1de_11ea_8b7f_5254001d5caarow9_col5{\n",
        "            background-color:  #2182b9;\n",
        "            color:  #000000;\n",
        "        }#T_6d1bd5f8_f1de_11ea_8b7f_5254001d5caarow5_col10,#T_6d1bd5f8_f1de_11ea_8b7f_5254001d5caarow5_col11,#T_6d1bd5f8_f1de_11ea_8b7f_5254001d5caarow10_col5,#T_6d1bd5f8_f1de_11ea_8b7f_5254001d5caarow11_col5{\n",
        "            background-color:  #2786bb;\n",
        "            color:  #000000;\n",
        "        }#T_6d1bd5f8_f1de_11ea_8b7f_5254001d5caarow5_col12,#T_6d1bd5f8_f1de_11ea_8b7f_5254001d5caarow12_col5{\n",
        "            background-color:  #3790c0;\n",
        "            color:  #000000;\n",
        "        }#T_6d1bd5f8_f1de_11ea_8b7f_5254001d5caarow5_col13,#T_6d1bd5f8_f1de_11ea_8b7f_5254001d5caarow6_col13,#T_6d1bd5f8_f1de_11ea_8b7f_5254001d5caarow13_col5,#T_6d1bd5f8_f1de_11ea_8b7f_5254001d5caarow13_col6{\n",
        "            background-color:  #045687;\n",
        "            color:  #f1f1f1;\n",
        "        }#T_6d1bd5f8_f1de_11ea_8b7f_5254001d5caarow5_col14,#T_6d1bd5f8_f1de_11ea_8b7f_5254001d5caarow7_col15,#T_6d1bd5f8_f1de_11ea_8b7f_5254001d5caarow14_col5,#T_6d1bd5f8_f1de_11ea_8b7f_5254001d5caarow15_col7{\n",
        "            background-color:  #056caa;\n",
        "            color:  #f1f1f1;\n",
        "        }#T_6d1bd5f8_f1de_11ea_8b7f_5254001d5caarow5_col15,#T_6d1bd5f8_f1de_11ea_8b7f_5254001d5caarow15_col5{\n",
        "            background-color:  #3991c1;\n",
        "            color:  #000000;\n",
        "        }#T_6d1bd5f8_f1de_11ea_8b7f_5254001d5caarow5_col16,#T_6d1bd5f8_f1de_11ea_8b7f_5254001d5caarow16_col5{\n",
        "            background-color:  #045788;\n",
        "            color:  #f1f1f1;\n",
        "        }#T_6d1bd5f8_f1de_11ea_8b7f_5254001d5caarow6_col7,#T_6d1bd5f8_f1de_11ea_8b7f_5254001d5caarow7_col6,#T_6d1bd5f8_f1de_11ea_8b7f_5254001d5caarow9_col16,#T_6d1bd5f8_f1de_11ea_8b7f_5254001d5caarow16_col9{\n",
        "            background-color:  #046097;\n",
        "            color:  #f1f1f1;\n",
        "        }#T_6d1bd5f8_f1de_11ea_8b7f_5254001d5caarow6_col8,#T_6d1bd5f8_f1de_11ea_8b7f_5254001d5caarow8_col6,#T_6d1bd5f8_f1de_11ea_8b7f_5254001d5caarow8_col11,#T_6d1bd5f8_f1de_11ea_8b7f_5254001d5caarow10_col11,#T_6d1bd5f8_f1de_11ea_8b7f_5254001d5caarow11_col8,#T_6d1bd5f8_f1de_11ea_8b7f_5254001d5caarow11_col10{\n",
        "            background-color:  #045b8f;\n",
        "            color:  #f1f1f1;\n",
        "        }#T_6d1bd5f8_f1de_11ea_8b7f_5254001d5caarow6_col9,#T_6d1bd5f8_f1de_11ea_8b7f_5254001d5caarow7_col11,#T_6d1bd5f8_f1de_11ea_8b7f_5254001d5caarow9_col6,#T_6d1bd5f8_f1de_11ea_8b7f_5254001d5caarow11_col7{\n",
        "            background-color:  #056aa6;\n",
        "            color:  #f1f1f1;\n",
        "        }#T_6d1bd5f8_f1de_11ea_8b7f_5254001d5caarow6_col10,#T_6d1bd5f8_f1de_11ea_8b7f_5254001d5caarow10_col6{\n",
        "            background-color:  #0568a3;\n",
        "            color:  #f1f1f1;\n",
        "        }#T_6d1bd5f8_f1de_11ea_8b7f_5254001d5caarow6_col11,#T_6d1bd5f8_f1de_11ea_8b7f_5254001d5caarow11_col6{\n",
        "            background-color:  #056ba9;\n",
        "            color:  #f1f1f1;\n",
        "        }#T_6d1bd5f8_f1de_11ea_8b7f_5254001d5caarow6_col12,#T_6d1bd5f8_f1de_11ea_8b7f_5254001d5caarow12_col6{\n",
        "            background-color:  #328dbf;\n",
        "            color:  #000000;\n",
        "        }#T_6d1bd5f8_f1de_11ea_8b7f_5254001d5caarow6_col14,#T_6d1bd5f8_f1de_11ea_8b7f_5254001d5caarow10_col12,#T_6d1bd5f8_f1de_11ea_8b7f_5254001d5caarow12_col10,#T_6d1bd5f8_f1de_11ea_8b7f_5254001d5caarow14_col6{\n",
        "            background-color:  #056ead;\n",
        "            color:  #f1f1f1;\n",
        "        }#T_6d1bd5f8_f1de_11ea_8b7f_5254001d5caarow6_col15,#T_6d1bd5f8_f1de_11ea_8b7f_5254001d5caarow15_col6{\n",
        "            background-color:  #3b92c1;\n",
        "            color:  #000000;\n",
        "        }#T_6d1bd5f8_f1de_11ea_8b7f_5254001d5caarow6_col16,#T_6d1bd5f8_f1de_11ea_8b7f_5254001d5caarow7_col13,#T_6d1bd5f8_f1de_11ea_8b7f_5254001d5caarow7_col16,#T_6d1bd5f8_f1de_11ea_8b7f_5254001d5caarow13_col7,#T_6d1bd5f8_f1de_11ea_8b7f_5254001d5caarow16_col6,#T_6d1bd5f8_f1de_11ea_8b7f_5254001d5caarow16_col7{\n",
        "            background-color:  #034b76;\n",
        "            color:  #f1f1f1;\n",
        "        }#T_6d1bd5f8_f1de_11ea_8b7f_5254001d5caarow7_col8,#T_6d1bd5f8_f1de_11ea_8b7f_5254001d5caarow8_col7{\n",
        "            background-color:  #04598c;\n",
        "            color:  #f1f1f1;\n",
        "        }#T_6d1bd5f8_f1de_11ea_8b7f_5254001d5caarow7_col9,#T_6d1bd5f8_f1de_11ea_8b7f_5254001d5caarow9_col7{\n",
        "            background-color:  #1278b4;\n",
        "            color:  #f1f1f1;\n",
        "        }#T_6d1bd5f8_f1de_11ea_8b7f_5254001d5caarow7_col10,#T_6d1bd5f8_f1de_11ea_8b7f_5254001d5caarow10_col7,#T_6d1bd5f8_f1de_11ea_8b7f_5254001d5caarow10_col15,#T_6d1bd5f8_f1de_11ea_8b7f_5254001d5caarow15_col10{\n",
        "            background-color:  #0771b1;\n",
        "            color:  #f1f1f1;\n",
        "        }#T_6d1bd5f8_f1de_11ea_8b7f_5254001d5caarow7_col12,#T_6d1bd5f8_f1de_11ea_8b7f_5254001d5caarow12_col7{\n",
        "            background-color:  #2685bb;\n",
        "            color:  #000000;\n",
        "        }#T_6d1bd5f8_f1de_11ea_8b7f_5254001d5caarow7_col14,#T_6d1bd5f8_f1de_11ea_8b7f_5254001d5caarow14_col7{\n",
        "            background-color:  #04649e;\n",
        "            color:  #f1f1f1;\n",
        "        }#T_6d1bd5f8_f1de_11ea_8b7f_5254001d5caarow8_col12,#T_6d1bd5f8_f1de_11ea_8b7f_5254001d5caarow12_col8{\n",
        "            background-color:  #1077b4;\n",
        "            color:  #f1f1f1;\n",
        "        }#T_6d1bd5f8_f1de_11ea_8b7f_5254001d5caarow8_col13,#T_6d1bd5f8_f1de_11ea_8b7f_5254001d5caarow13_col8{\n",
        "            background-color:  #045483;\n",
        "            color:  #f1f1f1;\n",
        "        }#T_6d1bd5f8_f1de_11ea_8b7f_5254001d5caarow8_col15,#T_6d1bd5f8_f1de_11ea_8b7f_5254001d5caarow15_col8{\n",
        "            background-color:  #2c89bd;\n",
        "            color:  #000000;\n",
        "        }#T_6d1bd5f8_f1de_11ea_8b7f_5254001d5caarow8_col16,#T_6d1bd5f8_f1de_11ea_8b7f_5254001d5caarow16_col8{\n",
        "            background-color:  #034973;\n",
        "            color:  #f1f1f1;\n",
        "        }#T_6d1bd5f8_f1de_11ea_8b7f_5254001d5caarow9_col10,#T_6d1bd5f8_f1de_11ea_8b7f_5254001d5caarow9_col13,#T_6d1bd5f8_f1de_11ea_8b7f_5254001d5caarow10_col9,#T_6d1bd5f8_f1de_11ea_8b7f_5254001d5caarow13_col9{\n",
        "            background-color:  #0570b0;\n",
        "            color:  #f1f1f1;\n",
        "        }#T_6d1bd5f8_f1de_11ea_8b7f_5254001d5caarow9_col11,#T_6d1bd5f8_f1de_11ea_8b7f_5254001d5caarow11_col9{\n",
        "            background-color:  #04639b;\n",
        "            color:  #f1f1f1;\n",
        "        }#T_6d1bd5f8_f1de_11ea_8b7f_5254001d5caarow9_col12,#T_6d1bd5f8_f1de_11ea_8b7f_5254001d5caarow12_col9{\n",
        "            background-color:  #2987bc;\n",
        "            color:  #000000;\n",
        "        }#T_6d1bd5f8_f1de_11ea_8b7f_5254001d5caarow9_col15,#T_6d1bd5f8_f1de_11ea_8b7f_5254001d5caarow15_col9{\n",
        "            background-color:  #6fa7ce;\n",
        "            color:  #000000;\n",
        "        }#T_6d1bd5f8_f1de_11ea_8b7f_5254001d5caarow10_col13,#T_6d1bd5f8_f1de_11ea_8b7f_5254001d5caarow13_col10{\n",
        "            background-color:  #0a73b2;\n",
        "            color:  #f1f1f1;\n",
        "        }#T_6d1bd5f8_f1de_11ea_8b7f_5254001d5caarow10_col14,#T_6d1bd5f8_f1de_11ea_8b7f_5254001d5caarow14_col10{\n",
        "            background-color:  #1b7eb7;\n",
        "            color:  #000000;\n",
        "        }#T_6d1bd5f8_f1de_11ea_8b7f_5254001d5caarow11_col12,#T_6d1bd5f8_f1de_11ea_8b7f_5254001d5caarow12_col11{\n",
        "            background-color:  #157ab5;\n",
        "            color:  #000000;\n",
        "        }#T_6d1bd5f8_f1de_11ea_8b7f_5254001d5caarow11_col13,#T_6d1bd5f8_f1de_11ea_8b7f_5254001d5caarow12_col16,#T_6d1bd5f8_f1de_11ea_8b7f_5254001d5caarow13_col11,#T_6d1bd5f8_f1de_11ea_8b7f_5254001d5caarow16_col12{\n",
        "            background-color:  #056dac;\n",
        "            color:  #f1f1f1;\n",
        "        }#T_6d1bd5f8_f1de_11ea_8b7f_5254001d5caarow11_col14,#T_6d1bd5f8_f1de_11ea_8b7f_5254001d5caarow14_col11{\n",
        "            background-color:  #056fae;\n",
        "            color:  #f1f1f1;\n",
        "        }#T_6d1bd5f8_f1de_11ea_8b7f_5254001d5caarow11_col15,#T_6d1bd5f8_f1de_11ea_8b7f_5254001d5caarow12_col13,#T_6d1bd5f8_f1de_11ea_8b7f_5254001d5caarow13_col12,#T_6d1bd5f8_f1de_11ea_8b7f_5254001d5caarow15_col11{\n",
        "            background-color:  #308cbe;\n",
        "            color:  #000000;\n",
        "        }#T_6d1bd5f8_f1de_11ea_8b7f_5254001d5caarow12_col14,#T_6d1bd5f8_f1de_11ea_8b7f_5254001d5caarow14_col12{\n",
        "            background-color:  #0f76b3;\n",
        "            color:  #f1f1f1;\n",
        "        }#T_6d1bd5f8_f1de_11ea_8b7f_5254001d5caarow12_col15,#T_6d1bd5f8_f1de_11ea_8b7f_5254001d5caarow15_col12{\n",
        "            background-color:  #2081b9;\n",
        "            color:  #000000;\n",
        "        }#T_6d1bd5f8_f1de_11ea_8b7f_5254001d5caarow13_col14,#T_6d1bd5f8_f1de_11ea_8b7f_5254001d5caarow14_col13{\n",
        "            background-color:  #04629a;\n",
        "            color:  #f1f1f1;\n",
        "        }#T_6d1bd5f8_f1de_11ea_8b7f_5254001d5caarow13_col15,#T_6d1bd5f8_f1de_11ea_8b7f_5254001d5caarow15_col13{\n",
        "            background-color:  #0c74b2;\n",
        "            color:  #f1f1f1;\n",
        "        }#T_6d1bd5f8_f1de_11ea_8b7f_5254001d5caarow13_col16,#T_6d1bd5f8_f1de_11ea_8b7f_5254001d5caarow16_col13{\n",
        "            background-color:  #034871;\n",
        "            color:  #f1f1f1;\n",
        "        }#T_6d1bd5f8_f1de_11ea_8b7f_5254001d5caarow14_col15,#T_6d1bd5f8_f1de_11ea_8b7f_5254001d5caarow15_col14{\n",
        "            background-color:  #4a98c5;\n",
        "            color:  #000000;\n",
        "        }#T_6d1bd5f8_f1de_11ea_8b7f_5254001d5caarow14_col16,#T_6d1bd5f8_f1de_11ea_8b7f_5254001d5caarow16_col14{\n",
        "            background-color:  #04649d;\n",
        "            color:  #f1f1f1;\n",
        "        }#T_6d1bd5f8_f1de_11ea_8b7f_5254001d5caarow15_col16,#T_6d1bd5f8_f1de_11ea_8b7f_5254001d5caarow16_col15{\n",
        "            background-color:  #056dab;\n",
        "            color:  #f1f1f1;\n",
        "        }</style><table id=\"T_6d1bd5f8_f1de_11ea_8b7f_5254001d5caa\" ><thead>    <tr>        <th class=\"blank level0\" ></th>        <th class=\"col_heading level0 col0\" >Rt</th>        <th class=\"col_heading level0 col1\" >theta</th>        <th class=\"col_heading level0 col2\" >kappa</th>        <th class=\"col_heading level0 col3\" >rho</th>        <th class=\"col_heading level0 col4\" >sigma</th>        <th class=\"col_heading level0 col5\" >School_closing</th>        <th class=\"col_heading level0 col6\" >Workplace_closing</th>        <th class=\"col_heading level0 col7\" >Cancel_events</th>        <th class=\"col_heading level0 col8\" >Gatherings_restrictions</th>        <th class=\"col_heading level0 col9\" >Transport_closing</th>        <th class=\"col_heading level0 col10\" >Stay_home_restrictions</th>        <th class=\"col_heading level0 col11\" >Internal_movement_restrictions</th>        <th class=\"col_heading level0 col12\" >International_movement_restrictions</th>        <th class=\"col_heading level0 col13\" >Information_campaigns</th>        <th class=\"col_heading level0 col14\" >Testing_policy</th>        <th class=\"col_heading level0 col15\" >Contact_tracing</th>        <th class=\"col_heading level0 col16\" >Stringency_index</th>    </tr></thead><tbody>\n",
        "                <tr>\n",
        "                        <th id=\"T_6d1bd5f8_f1de_11ea_8b7f_5254001d5caalevel0_row0\" class=\"row_heading level0 row0\" >Rt</th>\n",
        "                        <td id=\"T_6d1bd5f8_f1de_11ea_8b7f_5254001d5caarow0_col0\" class=\"data row0 col0\" >1.000000</td>\n",
        "                        <td id=\"T_6d1bd5f8_f1de_11ea_8b7f_5254001d5caarow0_col1\" class=\"data row0 col1\" >-0.368595</td>\n",
        "                        <td id=\"T_6d1bd5f8_f1de_11ea_8b7f_5254001d5caarow0_col2\" class=\"data row0 col2\" >-0.376366</td>\n",
        "                        <td id=\"T_6d1bd5f8_f1de_11ea_8b7f_5254001d5caarow0_col3\" class=\"data row0 col3\" >0.159884</td>\n",
        "                        <td id=\"T_6d1bd5f8_f1de_11ea_8b7f_5254001d5caarow0_col4\" class=\"data row0 col4\" >-0.180643</td>\n",
        "                        <td id=\"T_6d1bd5f8_f1de_11ea_8b7f_5254001d5caarow0_col5\" class=\"data row0 col5\" >0.035834</td>\n",
        "                        <td id=\"T_6d1bd5f8_f1de_11ea_8b7f_5254001d5caarow0_col6\" class=\"data row0 col6\" >-0.000689</td>\n",
        "                        <td id=\"T_6d1bd5f8_f1de_11ea_8b7f_5254001d5caarow0_col7\" class=\"data row0 col7\" >-0.125830</td>\n",
        "                        <td id=\"T_6d1bd5f8_f1de_11ea_8b7f_5254001d5caarow0_col8\" class=\"data row0 col8\" >-0.076661</td>\n",
        "                        <td id=\"T_6d1bd5f8_f1de_11ea_8b7f_5254001d5caarow0_col9\" class=\"data row0 col9\" >-0.103409</td>\n",
        "                        <td id=\"T_6d1bd5f8_f1de_11ea_8b7f_5254001d5caarow0_col10\" class=\"data row0 col10\" >-0.198371</td>\n",
        "                        <td id=\"T_6d1bd5f8_f1de_11ea_8b7f_5254001d5caarow0_col11\" class=\"data row0 col11\" >-0.127902</td>\n",
        "                        <td id=\"T_6d1bd5f8_f1de_11ea_8b7f_5254001d5caarow0_col12\" class=\"data row0 col12\" >-0.372927</td>\n",
        "                        <td id=\"T_6d1bd5f8_f1de_11ea_8b7f_5254001d5caarow0_col13\" class=\"data row0 col13\" >-0.143079</td>\n",
        "                        <td id=\"T_6d1bd5f8_f1de_11ea_8b7f_5254001d5caarow0_col14\" class=\"data row0 col14\" >-0.138624</td>\n",
        "                        <td id=\"T_6d1bd5f8_f1de_11ea_8b7f_5254001d5caarow0_col15\" class=\"data row0 col15\" >-0.342331</td>\n",
        "                        <td id=\"T_6d1bd5f8_f1de_11ea_8b7f_5254001d5caarow0_col16\" class=\"data row0 col16\" >-0.159446</td>\n",
        "            </tr>\n",
        "            <tr>\n",
        "                        <th id=\"T_6d1bd5f8_f1de_11ea_8b7f_5254001d5caalevel0_row1\" class=\"row_heading level0 row1\" >theta</th>\n",
        "                        <td id=\"T_6d1bd5f8_f1de_11ea_8b7f_5254001d5caarow1_col0\" class=\"data row1 col0\" >-0.368595</td>\n",
        "                        <td id=\"T_6d1bd5f8_f1de_11ea_8b7f_5254001d5caarow1_col1\" class=\"data row1 col1\" >1.000000</td>\n",
        "                        <td id=\"T_6d1bd5f8_f1de_11ea_8b7f_5254001d5caarow1_col2\" class=\"data row1 col2\" >0.991805</td>\n",
        "                        <td id=\"T_6d1bd5f8_f1de_11ea_8b7f_5254001d5caarow1_col3\" class=\"data row1 col3\" >0.801922</td>\n",
        "                        <td id=\"T_6d1bd5f8_f1de_11ea_8b7f_5254001d5caarow1_col4\" class=\"data row1 col4\" >-0.094751</td>\n",
        "                        <td id=\"T_6d1bd5f8_f1de_11ea_8b7f_5254001d5caarow1_col5\" class=\"data row1 col5\" >-0.327904</td>\n",
        "                        <td id=\"T_6d1bd5f8_f1de_11ea_8b7f_5254001d5caarow1_col6\" class=\"data row1 col6\" >-0.163652</td>\n",
        "                        <td id=\"T_6d1bd5f8_f1de_11ea_8b7f_5254001d5caarow1_col7\" class=\"data row1 col7\" >-0.329192</td>\n",
        "                        <td id=\"T_6d1bd5f8_f1de_11ea_8b7f_5254001d5caarow1_col8\" class=\"data row1 col8\" >-0.336025</td>\n",
        "                        <td id=\"T_6d1bd5f8_f1de_11ea_8b7f_5254001d5caarow1_col9\" class=\"data row1 col9\" >-0.342854</td>\n",
        "                        <td id=\"T_6d1bd5f8_f1de_11ea_8b7f_5254001d5caarow1_col10\" class=\"data row1 col10\" >0.099412</td>\n",
        "                        <td id=\"T_6d1bd5f8_f1de_11ea_8b7f_5254001d5caarow1_col11\" class=\"data row1 col11\" >-0.119960</td>\n",
        "                        <td id=\"T_6d1bd5f8_f1de_11ea_8b7f_5254001d5caarow1_col12\" class=\"data row1 col12\" >0.182119</td>\n",
        "                        <td id=\"T_6d1bd5f8_f1de_11ea_8b7f_5254001d5caarow1_col13\" class=\"data row1 col13\" >-0.360898</td>\n",
        "                        <td id=\"T_6d1bd5f8_f1de_11ea_8b7f_5254001d5caarow1_col14\" class=\"data row1 col14\" >-0.439239</td>\n",
        "                        <td id=\"T_6d1bd5f8_f1de_11ea_8b7f_5254001d5caarow1_col15\" class=\"data row1 col15\" >-0.000308</td>\n",
        "                        <td id=\"T_6d1bd5f8_f1de_11ea_8b7f_5254001d5caarow1_col16\" class=\"data row1 col16\" >-0.184245</td>\n",
        "            </tr>\n",
        "            <tr>\n",
        "                        <th id=\"T_6d1bd5f8_f1de_11ea_8b7f_5254001d5caalevel0_row2\" class=\"row_heading level0 row2\" >kappa</th>\n",
        "                        <td id=\"T_6d1bd5f8_f1de_11ea_8b7f_5254001d5caarow2_col0\" class=\"data row2 col0\" >-0.376366</td>\n",
        "                        <td id=\"T_6d1bd5f8_f1de_11ea_8b7f_5254001d5caarow2_col1\" class=\"data row2 col1\" >0.991805</td>\n",
        "                        <td id=\"T_6d1bd5f8_f1de_11ea_8b7f_5254001d5caarow2_col2\" class=\"data row2 col2\" >1.000000</td>\n",
        "                        <td id=\"T_6d1bd5f8_f1de_11ea_8b7f_5254001d5caarow2_col3\" class=\"data row2 col3\" >0.790835</td>\n",
        "                        <td id=\"T_6d1bd5f8_f1de_11ea_8b7f_5254001d5caarow2_col4\" class=\"data row2 col4\" >-0.142631</td>\n",
        "                        <td id=\"T_6d1bd5f8_f1de_11ea_8b7f_5254001d5caarow2_col5\" class=\"data row2 col5\" >-0.340359</td>\n",
        "                        <td id=\"T_6d1bd5f8_f1de_11ea_8b7f_5254001d5caarow2_col6\" class=\"data row2 col6\" >-0.179352</td>\n",
        "                        <td id=\"T_6d1bd5f8_f1de_11ea_8b7f_5254001d5caarow2_col7\" class=\"data row2 col7\" >-0.333017</td>\n",
        "                        <td id=\"T_6d1bd5f8_f1de_11ea_8b7f_5254001d5caarow2_col8\" class=\"data row2 col8\" >-0.309411</td>\n",
        "                        <td id=\"T_6d1bd5f8_f1de_11ea_8b7f_5254001d5caarow2_col9\" class=\"data row2 col9\" >-0.329061</td>\n",
        "                        <td id=\"T_6d1bd5f8_f1de_11ea_8b7f_5254001d5caarow2_col10\" class=\"data row2 col10\" >0.105957</td>\n",
        "                        <td id=\"T_6d1bd5f8_f1de_11ea_8b7f_5254001d5caarow2_col11\" class=\"data row2 col11\" >-0.100549</td>\n",
        "                        <td id=\"T_6d1bd5f8_f1de_11ea_8b7f_5254001d5caarow2_col12\" class=\"data row2 col12\" >0.215275</td>\n",
        "                        <td id=\"T_6d1bd5f8_f1de_11ea_8b7f_5254001d5caarow2_col13\" class=\"data row2 col13\" >-0.364368</td>\n",
        "                        <td id=\"T_6d1bd5f8_f1de_11ea_8b7f_5254001d5caarow2_col14\" class=\"data row2 col14\" >-0.408107</td>\n",
        "                        <td id=\"T_6d1bd5f8_f1de_11ea_8b7f_5254001d5caarow2_col15\" class=\"data row2 col15\" >-0.012813</td>\n",
        "                        <td id=\"T_6d1bd5f8_f1de_11ea_8b7f_5254001d5caarow2_col16\" class=\"data row2 col16\" >-0.189639</td>\n",
        "            </tr>\n",
        "            <tr>\n",
        "                        <th id=\"T_6d1bd5f8_f1de_11ea_8b7f_5254001d5caalevel0_row3\" class=\"row_heading level0 row3\" >rho</th>\n",
        "                        <td id=\"T_6d1bd5f8_f1de_11ea_8b7f_5254001d5caarow3_col0\" class=\"data row3 col0\" >0.159884</td>\n",
        "                        <td id=\"T_6d1bd5f8_f1de_11ea_8b7f_5254001d5caarow3_col1\" class=\"data row3 col1\" >0.801922</td>\n",
        "                        <td id=\"T_6d1bd5f8_f1de_11ea_8b7f_5254001d5caarow3_col2\" class=\"data row3 col2\" >0.790835</td>\n",
        "                        <td id=\"T_6d1bd5f8_f1de_11ea_8b7f_5254001d5caarow3_col3\" class=\"data row3 col3\" >1.000000</td>\n",
        "                        <td id=\"T_6d1bd5f8_f1de_11ea_8b7f_5254001d5caarow3_col4\" class=\"data row3 col4\" >0.026984</td>\n",
        "                        <td id=\"T_6d1bd5f8_f1de_11ea_8b7f_5254001d5caarow3_col5\" class=\"data row3 col5\" >-0.250245</td>\n",
        "                        <td id=\"T_6d1bd5f8_f1de_11ea_8b7f_5254001d5caarow3_col6\" class=\"data row3 col6\" >-0.111982</td>\n",
        "                        <td id=\"T_6d1bd5f8_f1de_11ea_8b7f_5254001d5caarow3_col7\" class=\"data row3 col7\" >-0.338373</td>\n",
        "                        <td id=\"T_6d1bd5f8_f1de_11ea_8b7f_5254001d5caarow3_col8\" class=\"data row3 col8\" >-0.320647</td>\n",
        "                        <td id=\"T_6d1bd5f8_f1de_11ea_8b7f_5254001d5caarow3_col9\" class=\"data row3 col9\" >-0.357682</td>\n",
        "                        <td id=\"T_6d1bd5f8_f1de_11ea_8b7f_5254001d5caarow3_col10\" class=\"data row3 col10\" >0.056581</td>\n",
        "                        <td id=\"T_6d1bd5f8_f1de_11ea_8b7f_5254001d5caarow3_col11\" class=\"data row3 col11\" >-0.140244</td>\n",
        "                        <td id=\"T_6d1bd5f8_f1de_11ea_8b7f_5254001d5caarow3_col12\" class=\"data row3 col12\" >0.078356</td>\n",
        "                        <td id=\"T_6d1bd5f8_f1de_11ea_8b7f_5254001d5caarow3_col13\" class=\"data row3 col13\" >-0.376348</td>\n",
        "                        <td id=\"T_6d1bd5f8_f1de_11ea_8b7f_5254001d5caarow3_col14\" class=\"data row3 col14\" >-0.512044</td>\n",
        "                        <td id=\"T_6d1bd5f8_f1de_11ea_8b7f_5254001d5caarow3_col15\" class=\"data row3 col15\" >-0.087430</td>\n",
        "                        <td id=\"T_6d1bd5f8_f1de_11ea_8b7f_5254001d5caarow3_col16\" class=\"data row3 col16\" >-0.183298</td>\n",
        "            </tr>\n",
        "            <tr>\n",
        "                        <th id=\"T_6d1bd5f8_f1de_11ea_8b7f_5254001d5caalevel0_row4\" class=\"row_heading level0 row4\" >sigma</th>\n",
        "                        <td id=\"T_6d1bd5f8_f1de_11ea_8b7f_5254001d5caarow4_col0\" class=\"data row4 col0\" >-0.180643</td>\n",
        "                        <td id=\"T_6d1bd5f8_f1de_11ea_8b7f_5254001d5caarow4_col1\" class=\"data row4 col1\" >-0.094751</td>\n",
        "                        <td id=\"T_6d1bd5f8_f1de_11ea_8b7f_5254001d5caarow4_col2\" class=\"data row4 col2\" >-0.142631</td>\n",
        "                        <td id=\"T_6d1bd5f8_f1de_11ea_8b7f_5254001d5caarow4_col3\" class=\"data row4 col3\" >0.026984</td>\n",
        "                        <td id=\"T_6d1bd5f8_f1de_11ea_8b7f_5254001d5caarow4_col4\" class=\"data row4 col4\" >1.000000</td>\n",
        "                        <td id=\"T_6d1bd5f8_f1de_11ea_8b7f_5254001d5caarow4_col5\" class=\"data row4 col5\" >0.188528</td>\n",
        "                        <td id=\"T_6d1bd5f8_f1de_11ea_8b7f_5254001d5caarow4_col6\" class=\"data row4 col6\" >0.044008</td>\n",
        "                        <td id=\"T_6d1bd5f8_f1de_11ea_8b7f_5254001d5caarow4_col7\" class=\"data row4 col7\" >0.130651</td>\n",
        "                        <td id=\"T_6d1bd5f8_f1de_11ea_8b7f_5254001d5caarow4_col8\" class=\"data row4 col8\" >-0.089696</td>\n",
        "                        <td id=\"T_6d1bd5f8_f1de_11ea_8b7f_5254001d5caarow4_col9\" class=\"data row4 col9\" >-0.025846</td>\n",
        "                        <td id=\"T_6d1bd5f8_f1de_11ea_8b7f_5254001d5caarow4_col10\" class=\"data row4 col10\" >-0.022134</td>\n",
        "                        <td id=\"T_6d1bd5f8_f1de_11ea_8b7f_5254001d5caarow4_col11\" class=\"data row4 col11\" >-0.094114</td>\n",
        "                        <td id=\"T_6d1bd5f8_f1de_11ea_8b7f_5254001d5caarow4_col12\" class=\"data row4 col12\" >-0.028399</td>\n",
        "                        <td id=\"T_6d1bd5f8_f1de_11ea_8b7f_5254001d5caarow4_col13\" class=\"data row4 col13\" >0.137746</td>\n",
        "                        <td id=\"T_6d1bd5f8_f1de_11ea_8b7f_5254001d5caarow4_col14\" class=\"data row4 col14\" >-0.088342</td>\n",
        "                        <td id=\"T_6d1bd5f8_f1de_11ea_8b7f_5254001d5caarow4_col15\" class=\"data row4 col15\" >0.225334</td>\n",
        "                        <td id=\"T_6d1bd5f8_f1de_11ea_8b7f_5254001d5caarow4_col16\" class=\"data row4 col16\" >0.108365</td>\n",
        "            </tr>\n",
        "            <tr>\n",
        "                        <th id=\"T_6d1bd5f8_f1de_11ea_8b7f_5254001d5caalevel0_row5\" class=\"row_heading level0 row5\" >School_closing</th>\n",
        "                        <td id=\"T_6d1bd5f8_f1de_11ea_8b7f_5254001d5caarow5_col0\" class=\"data row5 col0\" >0.035834</td>\n",
        "                        <td id=\"T_6d1bd5f8_f1de_11ea_8b7f_5254001d5caarow5_col1\" class=\"data row5 col1\" >-0.327904</td>\n",
        "                        <td id=\"T_6d1bd5f8_f1de_11ea_8b7f_5254001d5caarow5_col2\" class=\"data row5 col2\" >-0.340359</td>\n",
        "                        <td id=\"T_6d1bd5f8_f1de_11ea_8b7f_5254001d5caarow5_col3\" class=\"data row5 col3\" >-0.250245</td>\n",
        "                        <td id=\"T_6d1bd5f8_f1de_11ea_8b7f_5254001d5caarow5_col4\" class=\"data row5 col4\" >0.188528</td>\n",
        "                        <td id=\"T_6d1bd5f8_f1de_11ea_8b7f_5254001d5caarow5_col5\" class=\"data row5 col5\" >1.000000</td>\n",
        "                        <td id=\"T_6d1bd5f8_f1de_11ea_8b7f_5254001d5caarow5_col6\" class=\"data row5 col6\" >0.773953</td>\n",
        "                        <td id=\"T_6d1bd5f8_f1de_11ea_8b7f_5254001d5caarow5_col7\" class=\"data row5 col7\" >0.837942</td>\n",
        "                        <td id=\"T_6d1bd5f8_f1de_11ea_8b7f_5254001d5caarow5_col8\" class=\"data row5 col8\" >0.705041</td>\n",
        "                        <td id=\"T_6d1bd5f8_f1de_11ea_8b7f_5254001d5caarow5_col9\" class=\"data row5 col9\" >0.515499</td>\n",
        "                        <td id=\"T_6d1bd5f8_f1de_11ea_8b7f_5254001d5caarow5_col10\" class=\"data row5 col10\" >0.488046</td>\n",
        "                        <td id=\"T_6d1bd5f8_f1de_11ea_8b7f_5254001d5caarow5_col11\" class=\"data row5 col11\" >0.491194</td>\n",
        "                        <td id=\"T_6d1bd5f8_f1de_11ea_8b7f_5254001d5caarow5_col12\" class=\"data row5 col12\" >0.431779</td>\n",
        "                        <td id=\"T_6d1bd5f8_f1de_11ea_8b7f_5254001d5caarow5_col13\" class=\"data row5 col13\" >0.829144</td>\n",
        "                        <td id=\"T_6d1bd5f8_f1de_11ea_8b7f_5254001d5caarow5_col14\" class=\"data row5 col14\" >0.652678</td>\n",
        "                        <td id=\"T_6d1bd5f8_f1de_11ea_8b7f_5254001d5caarow5_col15\" class=\"data row5 col15\" >0.426399</td>\n",
        "                        <td id=\"T_6d1bd5f8_f1de_11ea_8b7f_5254001d5caarow5_col16\" class=\"data row5 col16\" >0.828674</td>\n",
        "            </tr>\n",
        "            <tr>\n",
        "                        <th id=\"T_6d1bd5f8_f1de_11ea_8b7f_5254001d5caalevel0_row6\" class=\"row_heading level0 row6\" >Workplace_closing</th>\n",
        "                        <td id=\"T_6d1bd5f8_f1de_11ea_8b7f_5254001d5caarow6_col0\" class=\"data row6 col0\" >-0.000689</td>\n",
        "                        <td id=\"T_6d1bd5f8_f1de_11ea_8b7f_5254001d5caarow6_col1\" class=\"data row6 col1\" >-0.163652</td>\n",
        "                        <td id=\"T_6d1bd5f8_f1de_11ea_8b7f_5254001d5caarow6_col2\" class=\"data row6 col2\" >-0.179352</td>\n",
        "                        <td id=\"T_6d1bd5f8_f1de_11ea_8b7f_5254001d5caarow6_col3\" class=\"data row6 col3\" >-0.111982</td>\n",
        "                        <td id=\"T_6d1bd5f8_f1de_11ea_8b7f_5254001d5caarow6_col4\" class=\"data row6 col4\" >0.044008</td>\n",
        "                        <td id=\"T_6d1bd5f8_f1de_11ea_8b7f_5254001d5caarow6_col5\" class=\"data row6 col5\" >0.773953</td>\n",
        "                        <td id=\"T_6d1bd5f8_f1de_11ea_8b7f_5254001d5caarow6_col6\" class=\"data row6 col6\" >1.000000</td>\n",
        "                        <td id=\"T_6d1bd5f8_f1de_11ea_8b7f_5254001d5caarow6_col7\" class=\"data row6 col7\" >0.753221</td>\n",
        "                        <td id=\"T_6d1bd5f8_f1de_11ea_8b7f_5254001d5caarow6_col8\" class=\"data row6 col8\" >0.794228</td>\n",
        "                        <td id=\"T_6d1bd5f8_f1de_11ea_8b7f_5254001d5caarow6_col9\" class=\"data row6 col9\" >0.674476</td>\n",
        "                        <td id=\"T_6d1bd5f8_f1de_11ea_8b7f_5254001d5caarow6_col10\" class=\"data row6 col10\" >0.690936</td>\n",
        "                        <td id=\"T_6d1bd5f8_f1de_11ea_8b7f_5254001d5caarow6_col11\" class=\"data row6 col11\" >0.661379</td>\n",
        "                        <td id=\"T_6d1bd5f8_f1de_11ea_8b7f_5254001d5caarow6_col12\" class=\"data row6 col12\" >0.448147</td>\n",
        "                        <td id=\"T_6d1bd5f8_f1de_11ea_8b7f_5254001d5caarow6_col13\" class=\"data row6 col13\" >0.831964</td>\n",
        "                        <td id=\"T_6d1bd5f8_f1de_11ea_8b7f_5254001d5caarow6_col14\" class=\"data row6 col14\" >0.634544</td>\n",
        "                        <td id=\"T_6d1bd5f8_f1de_11ea_8b7f_5254001d5caarow6_col15\" class=\"data row6 col15\" >0.418160</td>\n",
        "                        <td id=\"T_6d1bd5f8_f1de_11ea_8b7f_5254001d5caarow6_col16\" class=\"data row6 col16\" >0.893453</td>\n",
        "            </tr>\n",
        "            <tr>\n",
        "                        <th id=\"T_6d1bd5f8_f1de_11ea_8b7f_5254001d5caalevel0_row7\" class=\"row_heading level0 row7\" >Cancel_events</th>\n",
        "                        <td id=\"T_6d1bd5f8_f1de_11ea_8b7f_5254001d5caarow7_col0\" class=\"data row7 col0\" >-0.125830</td>\n",
        "                        <td id=\"T_6d1bd5f8_f1de_11ea_8b7f_5254001d5caarow7_col1\" class=\"data row7 col1\" >-0.329192</td>\n",
        "                        <td id=\"T_6d1bd5f8_f1de_11ea_8b7f_5254001d5caarow7_col2\" class=\"data row7 col2\" >-0.333017</td>\n",
        "                        <td id=\"T_6d1bd5f8_f1de_11ea_8b7f_5254001d5caarow7_col3\" class=\"data row7 col3\" >-0.338373</td>\n",
        "                        <td id=\"T_6d1bd5f8_f1de_11ea_8b7f_5254001d5caarow7_col4\" class=\"data row7 col4\" >0.130651</td>\n",
        "                        <td id=\"T_6d1bd5f8_f1de_11ea_8b7f_5254001d5caarow7_col5\" class=\"data row7 col5\" >0.837942</td>\n",
        "                        <td id=\"T_6d1bd5f8_f1de_11ea_8b7f_5254001d5caarow7_col6\" class=\"data row7 col6\" >0.753221</td>\n",
        "                        <td id=\"T_6d1bd5f8_f1de_11ea_8b7f_5254001d5caarow7_col7\" class=\"data row7 col7\" >1.000000</td>\n",
        "                        <td id=\"T_6d1bd5f8_f1de_11ea_8b7f_5254001d5caarow7_col8\" class=\"data row7 col8\" >0.812489</td>\n",
        "                        <td id=\"T_6d1bd5f8_f1de_11ea_8b7f_5254001d5caarow7_col9\" class=\"data row7 col9\" >0.569680</td>\n",
        "                        <td id=\"T_6d1bd5f8_f1de_11ea_8b7f_5254001d5caarow7_col10\" class=\"data row7 col10\" >0.615161</td>\n",
        "                        <td id=\"T_6d1bd5f8_f1de_11ea_8b7f_5254001d5caarow7_col11\" class=\"data row7 col11\" >0.673033</td>\n",
        "                        <td id=\"T_6d1bd5f8_f1de_11ea_8b7f_5254001d5caarow7_col12\" class=\"data row7 col12\" >0.492203</td>\n",
        "                        <td id=\"T_6d1bd5f8_f1de_11ea_8b7f_5254001d5caarow7_col13\" class=\"data row7 col13\" >0.893572</td>\n",
        "                        <td id=\"T_6d1bd5f8_f1de_11ea_8b7f_5254001d5caarow7_col14\" class=\"data row7 col14\" >0.718673</td>\n",
        "                        <td id=\"T_6d1bd5f8_f1de_11ea_8b7f_5254001d5caarow7_col15\" class=\"data row7 col15\" >0.656702</td>\n",
        "                        <td id=\"T_6d1bd5f8_f1de_11ea_8b7f_5254001d5caarow7_col16\" class=\"data row7 col16\" >0.889713</td>\n",
        "            </tr>\n",
        "            <tr>\n",
        "                        <th id=\"T_6d1bd5f8_f1de_11ea_8b7f_5254001d5caalevel0_row8\" class=\"row_heading level0 row8\" >Gatherings_restrictions</th>\n",
        "                        <td id=\"T_6d1bd5f8_f1de_11ea_8b7f_5254001d5caarow8_col0\" class=\"data row8 col0\" >-0.076661</td>\n",
        "                        <td id=\"T_6d1bd5f8_f1de_11ea_8b7f_5254001d5caarow8_col1\" class=\"data row8 col1\" >-0.336025</td>\n",
        "                        <td id=\"T_6d1bd5f8_f1de_11ea_8b7f_5254001d5caarow8_col2\" class=\"data row8 col2\" >-0.309411</td>\n",
        "                        <td id=\"T_6d1bd5f8_f1de_11ea_8b7f_5254001d5caarow8_col3\" class=\"data row8 col3\" >-0.320647</td>\n",
        "                        <td id=\"T_6d1bd5f8_f1de_11ea_8b7f_5254001d5caarow8_col4\" class=\"data row8 col4\" >-0.089696</td>\n",
        "                        <td id=\"T_6d1bd5f8_f1de_11ea_8b7f_5254001d5caarow8_col5\" class=\"data row8 col5\" >0.705041</td>\n",
        "                        <td id=\"T_6d1bd5f8_f1de_11ea_8b7f_5254001d5caarow8_col6\" class=\"data row8 col6\" >0.794228</td>\n",
        "                        <td id=\"T_6d1bd5f8_f1de_11ea_8b7f_5254001d5caarow8_col7\" class=\"data row8 col7\" >0.812489</td>\n",
        "                        <td id=\"T_6d1bd5f8_f1de_11ea_8b7f_5254001d5caarow8_col8\" class=\"data row8 col8\" >1.000000</td>\n",
        "                        <td id=\"T_6d1bd5f8_f1de_11ea_8b7f_5254001d5caarow8_col9\" class=\"data row8 col9\" >0.801110</td>\n",
        "                        <td id=\"T_6d1bd5f8_f1de_11ea_8b7f_5254001d5caarow8_col10\" class=\"data row8 col10\" >0.708972</td>\n",
        "                        <td id=\"T_6d1bd5f8_f1de_11ea_8b7f_5254001d5caarow8_col11\" class=\"data row8 col11\" >0.793508</td>\n",
        "                        <td id=\"T_6d1bd5f8_f1de_11ea_8b7f_5254001d5caarow8_col12\" class=\"data row8 col12\" >0.575503</td>\n",
        "                        <td id=\"T_6d1bd5f8_f1de_11ea_8b7f_5254001d5caarow8_col13\" class=\"data row8 col13\" >0.845065</td>\n",
        "                        <td id=\"T_6d1bd5f8_f1de_11ea_8b7f_5254001d5caarow8_col14\" class=\"data row8 col14\" >0.799623</td>\n",
        "                        <td id=\"T_6d1bd5f8_f1de_11ea_8b7f_5254001d5caarow8_col15\" class=\"data row8 col15\" >0.473819</td>\n",
        "                        <td id=\"T_6d1bd5f8_f1de_11ea_8b7f_5254001d5caarow8_col16\" class=\"data row8 col16\" >0.900436</td>\n",
        "            </tr>\n",
        "            <tr>\n",
        "                        <th id=\"T_6d1bd5f8_f1de_11ea_8b7f_5254001d5caalevel0_row9\" class=\"row_heading level0 row9\" >Transport_closing</th>\n",
        "                        <td id=\"T_6d1bd5f8_f1de_11ea_8b7f_5254001d5caarow9_col0\" class=\"data row9 col0\" >-0.103409</td>\n",
        "                        <td id=\"T_6d1bd5f8_f1de_11ea_8b7f_5254001d5caarow9_col1\" class=\"data row9 col1\" >-0.342854</td>\n",
        "                        <td id=\"T_6d1bd5f8_f1de_11ea_8b7f_5254001d5caarow9_col2\" class=\"data row9 col2\" >-0.329061</td>\n",
        "                        <td id=\"T_6d1bd5f8_f1de_11ea_8b7f_5254001d5caarow9_col3\" class=\"data row9 col3\" >-0.357682</td>\n",
        "                        <td id=\"T_6d1bd5f8_f1de_11ea_8b7f_5254001d5caarow9_col4\" class=\"data row9 col4\" >-0.025846</td>\n",
        "                        <td id=\"T_6d1bd5f8_f1de_11ea_8b7f_5254001d5caarow9_col5\" class=\"data row9 col5\" >0.515499</td>\n",
        "                        <td id=\"T_6d1bd5f8_f1de_11ea_8b7f_5254001d5caarow9_col6\" class=\"data row9 col6\" >0.674476</td>\n",
        "                        <td id=\"T_6d1bd5f8_f1de_11ea_8b7f_5254001d5caarow9_col7\" class=\"data row9 col7\" >0.569680</td>\n",
        "                        <td id=\"T_6d1bd5f8_f1de_11ea_8b7f_5254001d5caarow9_col8\" class=\"data row9 col8\" >0.801110</td>\n",
        "                        <td id=\"T_6d1bd5f8_f1de_11ea_8b7f_5254001d5caarow9_col9\" class=\"data row9 col9\" >1.000000</td>\n",
        "                        <td id=\"T_6d1bd5f8_f1de_11ea_8b7f_5254001d5caarow9_col10\" class=\"data row9 col10\" >0.621109</td>\n",
        "                        <td id=\"T_6d1bd5f8_f1de_11ea_8b7f_5254001d5caarow9_col11\" class=\"data row9 col11\" >0.730282</td>\n",
        "                        <td id=\"T_6d1bd5f8_f1de_11ea_8b7f_5254001d5caarow9_col12\" class=\"data row9 col12\" >0.484823</td>\n",
        "                        <td id=\"T_6d1bd5f8_f1de_11ea_8b7f_5254001d5caarow9_col13\" class=\"data row9 col13\" >0.617586</td>\n",
        "                        <td id=\"T_6d1bd5f8_f1de_11ea_8b7f_5254001d5caarow9_col14\" class=\"data row9 col14\" >0.707113</td>\n",
        "                        <td id=\"T_6d1bd5f8_f1de_11ea_8b7f_5254001d5caarow9_col15\" class=\"data row9 col15\" >0.255869</td>\n",
        "                        <td id=\"T_6d1bd5f8_f1de_11ea_8b7f_5254001d5caarow9_col16\" class=\"data row9 col16\" >0.752264</td>\n",
        "            </tr>\n",
        "            <tr>\n",
        "                        <th id=\"T_6d1bd5f8_f1de_11ea_8b7f_5254001d5caalevel0_row10\" class=\"row_heading level0 row10\" >Stay_home_restrictions</th>\n",
        "                        <td id=\"T_6d1bd5f8_f1de_11ea_8b7f_5254001d5caarow10_col0\" class=\"data row10 col0\" >-0.198371</td>\n",
        "                        <td id=\"T_6d1bd5f8_f1de_11ea_8b7f_5254001d5caarow10_col1\" class=\"data row10 col1\" >0.099412</td>\n",
        "                        <td id=\"T_6d1bd5f8_f1de_11ea_8b7f_5254001d5caarow10_col2\" class=\"data row10 col2\" >0.105957</td>\n",
        "                        <td id=\"T_6d1bd5f8_f1de_11ea_8b7f_5254001d5caarow10_col3\" class=\"data row10 col3\" >0.056581</td>\n",
        "                        <td id=\"T_6d1bd5f8_f1de_11ea_8b7f_5254001d5caarow10_col4\" class=\"data row10 col4\" >-0.022134</td>\n",
        "                        <td id=\"T_6d1bd5f8_f1de_11ea_8b7f_5254001d5caarow10_col5\" class=\"data row10 col5\" >0.488046</td>\n",
        "                        <td id=\"T_6d1bd5f8_f1de_11ea_8b7f_5254001d5caarow10_col6\" class=\"data row10 col6\" >0.690936</td>\n",
        "                        <td id=\"T_6d1bd5f8_f1de_11ea_8b7f_5254001d5caarow10_col7\" class=\"data row10 col7\" >0.615161</td>\n",
        "                        <td id=\"T_6d1bd5f8_f1de_11ea_8b7f_5254001d5caarow10_col8\" class=\"data row10 col8\" >0.708972</td>\n",
        "                        <td id=\"T_6d1bd5f8_f1de_11ea_8b7f_5254001d5caarow10_col9\" class=\"data row10 col9\" >0.621109</td>\n",
        "                        <td id=\"T_6d1bd5f8_f1de_11ea_8b7f_5254001d5caarow10_col10\" class=\"data row10 col10\" >1.000000</td>\n",
        "                        <td id=\"T_6d1bd5f8_f1de_11ea_8b7f_5254001d5caarow10_col11\" class=\"data row10 col11\" >0.794795</td>\n",
        "                        <td id=\"T_6d1bd5f8_f1de_11ea_8b7f_5254001d5caarow10_col12\" class=\"data row10 col12\" >0.634360</td>\n",
        "                        <td id=\"T_6d1bd5f8_f1de_11ea_8b7f_5254001d5caarow10_col13\" class=\"data row10 col13\" >0.598597</td>\n",
        "                        <td id=\"T_6d1bd5f8_f1de_11ea_8b7f_5254001d5caarow10_col14\" class=\"data row10 col14\" >0.534141</td>\n",
        "                        <td id=\"T_6d1bd5f8_f1de_11ea_8b7f_5254001d5caarow10_col15\" class=\"data row10 col15\" >0.610439</td>\n",
        "                        <td id=\"T_6d1bd5f8_f1de_11ea_8b7f_5254001d5caarow10_col16\" class=\"data row10 col16\" >0.803068</td>\n",
        "            </tr>\n",
        "            <tr>\n",
        "                        <th id=\"T_6d1bd5f8_f1de_11ea_8b7f_5254001d5caalevel0_row11\" class=\"row_heading level0 row11\" >Internal_movement_restrictions</th>\n",
        "                        <td id=\"T_6d1bd5f8_f1de_11ea_8b7f_5254001d5caarow11_col0\" class=\"data row11 col0\" >-0.127902</td>\n",
        "                        <td id=\"T_6d1bd5f8_f1de_11ea_8b7f_5254001d5caarow11_col1\" class=\"data row11 col1\" >-0.119960</td>\n",
        "                        <td id=\"T_6d1bd5f8_f1de_11ea_8b7f_5254001d5caarow11_col2\" class=\"data row11 col2\" >-0.100549</td>\n",
        "                        <td id=\"T_6d1bd5f8_f1de_11ea_8b7f_5254001d5caarow11_col3\" class=\"data row11 col3\" >-0.140244</td>\n",
        "                        <td id=\"T_6d1bd5f8_f1de_11ea_8b7f_5254001d5caarow11_col4\" class=\"data row11 col4\" >-0.094114</td>\n",
        "                        <td id=\"T_6d1bd5f8_f1de_11ea_8b7f_5254001d5caarow11_col5\" class=\"data row11 col5\" >0.491194</td>\n",
        "                        <td id=\"T_6d1bd5f8_f1de_11ea_8b7f_5254001d5caarow11_col6\" class=\"data row11 col6\" >0.661379</td>\n",
        "                        <td id=\"T_6d1bd5f8_f1de_11ea_8b7f_5254001d5caarow11_col7\" class=\"data row11 col7\" >0.673033</td>\n",
        "                        <td id=\"T_6d1bd5f8_f1de_11ea_8b7f_5254001d5caarow11_col8\" class=\"data row11 col8\" >0.793508</td>\n",
        "                        <td id=\"T_6d1bd5f8_f1de_11ea_8b7f_5254001d5caarow11_col9\" class=\"data row11 col9\" >0.730282</td>\n",
        "                        <td id=\"T_6d1bd5f8_f1de_11ea_8b7f_5254001d5caarow11_col10\" class=\"data row11 col10\" >0.794795</td>\n",
        "                        <td id=\"T_6d1bd5f8_f1de_11ea_8b7f_5254001d5caarow11_col11\" class=\"data row11 col11\" >1.000000</td>\n",
        "                        <td id=\"T_6d1bd5f8_f1de_11ea_8b7f_5254001d5caarow11_col12\" class=\"data row11 col12\" >0.557455</td>\n",
        "                        <td id=\"T_6d1bd5f8_f1de_11ea_8b7f_5254001d5caarow11_col13\" class=\"data row11 col13\" >0.640445</td>\n",
        "                        <td id=\"T_6d1bd5f8_f1de_11ea_8b7f_5254001d5caarow11_col14\" class=\"data row11 col14\" >0.630970</td>\n",
        "                        <td id=\"T_6d1bd5f8_f1de_11ea_8b7f_5254001d5caarow11_col15\" class=\"data row11 col15\" >0.450800</td>\n",
        "                        <td id=\"T_6d1bd5f8_f1de_11ea_8b7f_5254001d5caarow11_col16\" class=\"data row11 col16\" >0.787656</td>\n",
        "            </tr>\n",
        "            <tr>\n",
        "                        <th id=\"T_6d1bd5f8_f1de_11ea_8b7f_5254001d5caalevel0_row12\" class=\"row_heading level0 row12\" >International_movement_restrictions</th>\n",
        "                        <td id=\"T_6d1bd5f8_f1de_11ea_8b7f_5254001d5caarow12_col0\" class=\"data row12 col0\" >-0.372927</td>\n",
        "                        <td id=\"T_6d1bd5f8_f1de_11ea_8b7f_5254001d5caarow12_col1\" class=\"data row12 col1\" >0.182119</td>\n",
        "                        <td id=\"T_6d1bd5f8_f1de_11ea_8b7f_5254001d5caarow12_col2\" class=\"data row12 col2\" >0.215275</td>\n",
        "                        <td id=\"T_6d1bd5f8_f1de_11ea_8b7f_5254001d5caarow12_col3\" class=\"data row12 col3\" >0.078356</td>\n",
        "                        <td id=\"T_6d1bd5f8_f1de_11ea_8b7f_5254001d5caarow12_col4\" class=\"data row12 col4\" >-0.028399</td>\n",
        "                        <td id=\"T_6d1bd5f8_f1de_11ea_8b7f_5254001d5caarow12_col5\" class=\"data row12 col5\" >0.431779</td>\n",
        "                        <td id=\"T_6d1bd5f8_f1de_11ea_8b7f_5254001d5caarow12_col6\" class=\"data row12 col6\" >0.448147</td>\n",
        "                        <td id=\"T_6d1bd5f8_f1de_11ea_8b7f_5254001d5caarow12_col7\" class=\"data row12 col7\" >0.492203</td>\n",
        "                        <td id=\"T_6d1bd5f8_f1de_11ea_8b7f_5254001d5caarow12_col8\" class=\"data row12 col8\" >0.575503</td>\n",
        "                        <td id=\"T_6d1bd5f8_f1de_11ea_8b7f_5254001d5caarow12_col9\" class=\"data row12 col9\" >0.484823</td>\n",
        "                        <td id=\"T_6d1bd5f8_f1de_11ea_8b7f_5254001d5caarow12_col10\" class=\"data row12 col10\" >0.634360</td>\n",
        "                        <td id=\"T_6d1bd5f8_f1de_11ea_8b7f_5254001d5caarow12_col11\" class=\"data row12 col11\" >0.557455</td>\n",
        "                        <td id=\"T_6d1bd5f8_f1de_11ea_8b7f_5254001d5caarow12_col12\" class=\"data row12 col12\" >1.000000</td>\n",
        "                        <td id=\"T_6d1bd5f8_f1de_11ea_8b7f_5254001d5caarow12_col13\" class=\"data row12 col13\" >0.456000</td>\n",
        "                        <td id=\"T_6d1bd5f8_f1de_11ea_8b7f_5254001d5caarow12_col14\" class=\"data row12 col14\" >0.582719</td>\n",
        "                        <td id=\"T_6d1bd5f8_f1de_11ea_8b7f_5254001d5caarow12_col15\" class=\"data row12 col15\" >0.518370</td>\n",
        "                        <td id=\"T_6d1bd5f8_f1de_11ea_8b7f_5254001d5caarow12_col16\" class=\"data row12 col16\" >0.645204</td>\n",
        "            </tr>\n",
        "            <tr>\n",
        "                        <th id=\"T_6d1bd5f8_f1de_11ea_8b7f_5254001d5caalevel0_row13\" class=\"row_heading level0 row13\" >Information_campaigns</th>\n",
        "                        <td id=\"T_6d1bd5f8_f1de_11ea_8b7f_5254001d5caarow13_col0\" class=\"data row13 col0\" >-0.143079</td>\n",
        "                        <td id=\"T_6d1bd5f8_f1de_11ea_8b7f_5254001d5caarow13_col1\" class=\"data row13 col1\" >-0.360898</td>\n",
        "                        <td id=\"T_6d1bd5f8_f1de_11ea_8b7f_5254001d5caarow13_col2\" class=\"data row13 col2\" >-0.364368</td>\n",
        "                        <td id=\"T_6d1bd5f8_f1de_11ea_8b7f_5254001d5caarow13_col3\" class=\"data row13 col3\" >-0.376348</td>\n",
        "                        <td id=\"T_6d1bd5f8_f1de_11ea_8b7f_5254001d5caarow13_col4\" class=\"data row13 col4\" >0.137746</td>\n",
        "                        <td id=\"T_6d1bd5f8_f1de_11ea_8b7f_5254001d5caarow13_col5\" class=\"data row13 col5\" >0.829144</td>\n",
        "                        <td id=\"T_6d1bd5f8_f1de_11ea_8b7f_5254001d5caarow13_col6\" class=\"data row13 col6\" >0.831964</td>\n",
        "                        <td id=\"T_6d1bd5f8_f1de_11ea_8b7f_5254001d5caarow13_col7\" class=\"data row13 col7\" >0.893572</td>\n",
        "                        <td id=\"T_6d1bd5f8_f1de_11ea_8b7f_5254001d5caarow13_col8\" class=\"data row13 col8\" >0.845065</td>\n",
        "                        <td id=\"T_6d1bd5f8_f1de_11ea_8b7f_5254001d5caarow13_col9\" class=\"data row13 col9\" >0.617586</td>\n",
        "                        <td id=\"T_6d1bd5f8_f1de_11ea_8b7f_5254001d5caarow13_col10\" class=\"data row13 col10\" >0.598597</td>\n",
        "                        <td id=\"T_6d1bd5f8_f1de_11ea_8b7f_5254001d5caarow13_col11\" class=\"data row13 col11\" >0.640445</td>\n",
        "                        <td id=\"T_6d1bd5f8_f1de_11ea_8b7f_5254001d5caarow13_col12\" class=\"data row13 col12\" >0.456000</td>\n",
        "                        <td id=\"T_6d1bd5f8_f1de_11ea_8b7f_5254001d5caarow13_col13\" class=\"data row13 col13\" >1.000000</td>\n",
        "                        <td id=\"T_6d1bd5f8_f1de_11ea_8b7f_5254001d5caarow13_col14\" class=\"data row13 col14\" >0.737070</td>\n",
        "                        <td id=\"T_6d1bd5f8_f1de_11ea_8b7f_5254001d5caarow13_col15\" class=\"data row13 col15\" >0.593292</td>\n",
        "                        <td id=\"T_6d1bd5f8_f1de_11ea_8b7f_5254001d5caarow13_col16\" class=\"data row13 col16\" >0.906332</td>\n",
        "            </tr>\n",
        "            <tr>\n",
        "                        <th id=\"T_6d1bd5f8_f1de_11ea_8b7f_5254001d5caalevel0_row14\" class=\"row_heading level0 row14\" >Testing_policy</th>\n",
        "                        <td id=\"T_6d1bd5f8_f1de_11ea_8b7f_5254001d5caarow14_col0\" class=\"data row14 col0\" >-0.138624</td>\n",
        "                        <td id=\"T_6d1bd5f8_f1de_11ea_8b7f_5254001d5caarow14_col1\" class=\"data row14 col1\" >-0.439239</td>\n",
        "                        <td id=\"T_6d1bd5f8_f1de_11ea_8b7f_5254001d5caarow14_col2\" class=\"data row14 col2\" >-0.408107</td>\n",
        "                        <td id=\"T_6d1bd5f8_f1de_11ea_8b7f_5254001d5caarow14_col3\" class=\"data row14 col3\" >-0.512044</td>\n",
        "                        <td id=\"T_6d1bd5f8_f1de_11ea_8b7f_5254001d5caarow14_col4\" class=\"data row14 col4\" >-0.088342</td>\n",
        "                        <td id=\"T_6d1bd5f8_f1de_11ea_8b7f_5254001d5caarow14_col5\" class=\"data row14 col5\" >0.652678</td>\n",
        "                        <td id=\"T_6d1bd5f8_f1de_11ea_8b7f_5254001d5caarow14_col6\" class=\"data row14 col6\" >0.634544</td>\n",
        "                        <td id=\"T_6d1bd5f8_f1de_11ea_8b7f_5254001d5caarow14_col7\" class=\"data row14 col7\" >0.718673</td>\n",
        "                        <td id=\"T_6d1bd5f8_f1de_11ea_8b7f_5254001d5caarow14_col8\" class=\"data row14 col8\" >0.799623</td>\n",
        "                        <td id=\"T_6d1bd5f8_f1de_11ea_8b7f_5254001d5caarow14_col9\" class=\"data row14 col9\" >0.707113</td>\n",
        "                        <td id=\"T_6d1bd5f8_f1de_11ea_8b7f_5254001d5caarow14_col10\" class=\"data row14 col10\" >0.534141</td>\n",
        "                        <td id=\"T_6d1bd5f8_f1de_11ea_8b7f_5254001d5caarow14_col11\" class=\"data row14 col11\" >0.630970</td>\n",
        "                        <td id=\"T_6d1bd5f8_f1de_11ea_8b7f_5254001d5caarow14_col12\" class=\"data row14 col12\" >0.582719</td>\n",
        "                        <td id=\"T_6d1bd5f8_f1de_11ea_8b7f_5254001d5caarow14_col13\" class=\"data row14 col13\" >0.737070</td>\n",
        "                        <td id=\"T_6d1bd5f8_f1de_11ea_8b7f_5254001d5caarow14_col14\" class=\"data row14 col14\" >1.000000</td>\n",
        "                        <td id=\"T_6d1bd5f8_f1de_11ea_8b7f_5254001d5caarow14_col15\" class=\"data row14 col15\" >0.372523</td>\n",
        "                        <td id=\"T_6d1bd5f8_f1de_11ea_8b7f_5254001d5caarow14_col16\" class=\"data row14 col16\" >0.722580</td>\n",
        "            </tr>\n",
        "            <tr>\n",
        "                        <th id=\"T_6d1bd5f8_f1de_11ea_8b7f_5254001d5caalevel0_row15\" class=\"row_heading level0 row15\" >Contact_tracing</th>\n",
        "                        <td id=\"T_6d1bd5f8_f1de_11ea_8b7f_5254001d5caarow15_col0\" class=\"data row15 col0\" >-0.342331</td>\n",
        "                        <td id=\"T_6d1bd5f8_f1de_11ea_8b7f_5254001d5caarow15_col1\" class=\"data row15 col1\" >-0.000308</td>\n",
        "                        <td id=\"T_6d1bd5f8_f1de_11ea_8b7f_5254001d5caarow15_col2\" class=\"data row15 col2\" >-0.012813</td>\n",
        "                        <td id=\"T_6d1bd5f8_f1de_11ea_8b7f_5254001d5caarow15_col3\" class=\"data row15 col3\" >-0.087430</td>\n",
        "                        <td id=\"T_6d1bd5f8_f1de_11ea_8b7f_5254001d5caarow15_col4\" class=\"data row15 col4\" >0.225334</td>\n",
        "                        <td id=\"T_6d1bd5f8_f1de_11ea_8b7f_5254001d5caarow15_col5\" class=\"data row15 col5\" >0.426399</td>\n",
        "                        <td id=\"T_6d1bd5f8_f1de_11ea_8b7f_5254001d5caarow15_col6\" class=\"data row15 col6\" >0.418160</td>\n",
        "                        <td id=\"T_6d1bd5f8_f1de_11ea_8b7f_5254001d5caarow15_col7\" class=\"data row15 col7\" >0.656702</td>\n",
        "                        <td id=\"T_6d1bd5f8_f1de_11ea_8b7f_5254001d5caarow15_col8\" class=\"data row15 col8\" >0.473819</td>\n",
        "                        <td id=\"T_6d1bd5f8_f1de_11ea_8b7f_5254001d5caarow15_col9\" class=\"data row15 col9\" >0.255869</td>\n",
        "                        <td id=\"T_6d1bd5f8_f1de_11ea_8b7f_5254001d5caarow15_col10\" class=\"data row15 col10\" >0.610439</td>\n",
        "                        <td id=\"T_6d1bd5f8_f1de_11ea_8b7f_5254001d5caarow15_col11\" class=\"data row15 col11\" >0.450800</td>\n",
        "                        <td id=\"T_6d1bd5f8_f1de_11ea_8b7f_5254001d5caarow15_col12\" class=\"data row15 col12\" >0.518370</td>\n",
        "                        <td id=\"T_6d1bd5f8_f1de_11ea_8b7f_5254001d5caarow15_col13\" class=\"data row15 col13\" >0.593292</td>\n",
        "                        <td id=\"T_6d1bd5f8_f1de_11ea_8b7f_5254001d5caarow15_col14\" class=\"data row15 col14\" >0.372523</td>\n",
        "                        <td id=\"T_6d1bd5f8_f1de_11ea_8b7f_5254001d5caarow15_col15\" class=\"data row15 col15\" >1.000000</td>\n",
        "                        <td id=\"T_6d1bd5f8_f1de_11ea_8b7f_5254001d5caarow15_col16\" class=\"data row15 col16\" >0.646376</td>\n",
        "            </tr>\n",
        "            <tr>\n",
        "                        <th id=\"T_6d1bd5f8_f1de_11ea_8b7f_5254001d5caalevel0_row16\" class=\"row_heading level0 row16\" >Stringency_index</th>\n",
        "                        <td id=\"T_6d1bd5f8_f1de_11ea_8b7f_5254001d5caarow16_col0\" class=\"data row16 col0\" >-0.159446</td>\n",
        "                        <td id=\"T_6d1bd5f8_f1de_11ea_8b7f_5254001d5caarow16_col1\" class=\"data row16 col1\" >-0.184245</td>\n",
        "                        <td id=\"T_6d1bd5f8_f1de_11ea_8b7f_5254001d5caarow16_col2\" class=\"data row16 col2\" >-0.189639</td>\n",
        "                        <td id=\"T_6d1bd5f8_f1de_11ea_8b7f_5254001d5caarow16_col3\" class=\"data row16 col3\" >-0.183298</td>\n",
        "                        <td id=\"T_6d1bd5f8_f1de_11ea_8b7f_5254001d5caarow16_col4\" class=\"data row16 col4\" >0.108365</td>\n",
        "                        <td id=\"T_6d1bd5f8_f1de_11ea_8b7f_5254001d5caarow16_col5\" class=\"data row16 col5\" >0.828674</td>\n",
        "                        <td id=\"T_6d1bd5f8_f1de_11ea_8b7f_5254001d5caarow16_col6\" class=\"data row16 col6\" >0.893453</td>\n",
        "                        <td id=\"T_6d1bd5f8_f1de_11ea_8b7f_5254001d5caarow16_col7\" class=\"data row16 col7\" >0.889713</td>\n",
        "                        <td id=\"T_6d1bd5f8_f1de_11ea_8b7f_5254001d5caarow16_col8\" class=\"data row16 col8\" >0.900436</td>\n",
        "                        <td id=\"T_6d1bd5f8_f1de_11ea_8b7f_5254001d5caarow16_col9\" class=\"data row16 col9\" >0.752264</td>\n",
        "                        <td id=\"T_6d1bd5f8_f1de_11ea_8b7f_5254001d5caarow16_col10\" class=\"data row16 col10\" >0.803068</td>\n",
        "                        <td id=\"T_6d1bd5f8_f1de_11ea_8b7f_5254001d5caarow16_col11\" class=\"data row16 col11\" >0.787656</td>\n",
        "                        <td id=\"T_6d1bd5f8_f1de_11ea_8b7f_5254001d5caarow16_col12\" class=\"data row16 col12\" >0.645204</td>\n",
        "                        <td id=\"T_6d1bd5f8_f1de_11ea_8b7f_5254001d5caarow16_col13\" class=\"data row16 col13\" >0.906332</td>\n",
        "                        <td id=\"T_6d1bd5f8_f1de_11ea_8b7f_5254001d5caarow16_col14\" class=\"data row16 col14\" >0.722580</td>\n",
        "                        <td id=\"T_6d1bd5f8_f1de_11ea_8b7f_5254001d5caarow16_col15\" class=\"data row16 col15\" >0.646376</td>\n",
        "                        <td id=\"T_6d1bd5f8_f1de_11ea_8b7f_5254001d5caarow16_col16\" class=\"data row16 col16\" >1.000000</td>\n",
        "            </tr>\n",
        "    </tbody></table>"
       ],
       "output_type": "pyout",
       "prompt_number": 21,
       "text": [
        "<pandas.io.formats.style.Styler at 0x7f1672699280>"
       ]
      }
     ],
     "prompt_number": 21
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "# Scatter plot of Stringency index and Rt\n",
      "df = track_df.copy()\n",
      "sns.scatterplot(data=df, x=\"Stringency_index\", y=\"Rt\", hue=\"Country\", legend=\"brief\", marker=\"+\")\n",
      "bbox_to_anchor=(1.02, 0)\n",
      "bbox_loc=\"lower left\"\n",
      "plt.legend(bbox_to_anchor=bbox_to_anchor, loc=bbox_loc, borderaxespad=0)\n",
      "plt.title(\"Relationship of Stringency index and reproduction number\")\n",
      "plt.ylabel(\"Reproduction number\")\n",
      "plt.xlabel(\"Stringency index\")\n",
      "plt.show()"
     ],
     "language": "python",
     "metadata": {},
     "outputs": [
      {
       "output_type": "display_data",
       "png": "\n",
       "text": [
        "<Figure size 432x288 with 1 Axes>"
       ]
      }
     ],
     "prompt_number": 22
    }
   ],
   "metadata": {}
  }
 ]
}
