{
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3.8.2 64-bit ('.venv': venv)",
   "name": "python_defaultSpec_1597669925034"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.8.2-final"
  },
  "name": ""
 },
 "nbformat": 3,
 "nbformat_minor": 0,
 "worksheets": [
  {
   "cells": [
    {
     "cell_type": "markdown",
     "metadata": {},
     "source": [
      "# Usage (details: policy measures)\n",
      "Here, we will analyse the relationship of policy measures and parameter values of SIR-derived ODE models. Policy measures are tracked by [Oxford Covid-19 Government Response Tracker (OxCGRT)](https://github.com/OxCGRT/covid-policy-tracker)."
     ]
    },
    {
     "cell_type": "heading",
     "level": 2,
     "metadata": {},
     "source": [
      "Preparation"
     ]
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "# Standard users\n",
      "# !pip install covsirphy\n",
      "# Developers (Note: this notebook is in example directory)\n",
      "import os\n",
      "os.chdir(\"../\")"
     ],
     "language": "python",
     "metadata": {},
     "outputs": [],
     "prompt_number": 1
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "from pprint import pprint"
     ],
     "language": "python",
     "metadata": {},
     "outputs": [],
     "prompt_number": 2
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "import covsirphy as cs\n",
      "cs.__version__"
     ],
     "language": "python",
     "metadata": {},
     "outputs": [
      {
       "output_type": "pyout",
       "prompt_number": 3,
       "text": [
        "'2.13.0'"
       ]
      }
     ],
     "prompt_number": 3
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "# Standard users and developers\n",
      "data_loader = cs.DataLoader(\"input\")\n",
      "# The number of cases (JHU style)\n",
      "jhu_data = data_loader.jhu(verbose=False)\n",
      "# Population in each country\n",
      "population_data = data_loader.population(verbose=False)\n",
      "# Government Response Tracker (OxCGRT)\n",
      "oxcgrt_data = data_loader.oxcgrt(verbose=False)\n",
      "# Description/citation\n",
      "print(oxcgrt_data.citation)"
     ],
     "language": "python",
     "metadata": {
      "tags": []
     },
     "outputs": [
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "(Secondary source) Guidotti, E., Ardia, D., (2020), \"COVID-19 Data Hub\", Journal of Open Source Software 5(51):2376, doi: 10.21105/joss.02376.\n"
       ]
      }
     ],
     "prompt_number": 4
    },
    {
     "cell_type": "markdown",
     "metadata": {},
     "source": [
      "## Class for policy measure analysis\n",
      "We will `PolicyMeasures` class to find relationship of policy measures and parameter values of SIR-derived ODE models."
     ]
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "# Create analyser with tau value 360 [min] (can be changed)\n",
      "analyser = cs.PolicyMeasures(jhu_data, population_data, oxcgrt_data, tau=360)\n",
      "# The number of registerd countries\n",
      "len(analyser.countries)"
     ],
     "language": "python",
     "metadata": {
      "tags": []
     },
     "outputs": [
      {
       "output_type": "stream",
       "stream": "stderr",
       "text": [
        "/home/runner/.local/share/virtualenvs/covid19-sir-kT3BL-HO/lib/python3.8/site-packages/scipy/interpolate/fitpack2.py:253: UserWarning: \n",
        "The maximal number of iterations maxit (set to 20 by the program)\n",
        "allowed for finding a smoothing spline with fp=s has been reached: s\n",
        "too small.\n",
        "There is an approximation returned but the corresponding weighted sum\n",
        "of squared residuals does not satisfy the condition abs(fp-s)/s < tol.\n",
        "  warnings.warn(message)\n"
       ]
      },
      {
       "output_type": "pyout",
       "prompt_number": 5,
       "text": [
        "196"
       ]
      }
     ],
     "prompt_number": 5
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "# We can get Scenario instance for detailed scenario analysis\n",
      "type(analyser.scenario(\"Japan\"))"
     ],
     "language": "python",
     "metadata": {},
     "outputs": [
      {
       "output_type": "pyout",
       "prompt_number": 6,
       "text": [
        "covsirphy.analysis.scenario.Scenario"
       ]
      }
     ],
     "prompt_number": 6
    },
    {
     "cell_type": "markdown",
     "metadata": {},
     "source": [
      "## Set phases with S-R trend analysis\n",
      "We will perform S-R trend analysis to set phases in all countries. Countries which do not have **16th phases** will be un-registered for the next analysis. This number will be adjusted for your analysis."
     ]
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "# Show the number of phases of all countries\n",
      "analyser.trend()\n",
      "pprint(analyser.phase_len(), compact=True)"
     ],
     "language": "python",
     "metadata": {},
     "outputs": [
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "{2: ['Holy See', 'Timor-Leste', 'Solomon Islands'],\n",
        " 3: ['Laos', 'Tanzania', 'Saint Kitts and Nevis'],\n",
        " 4: ['Saint Lucia', 'Dominica', 'Brunei', 'Grenada'],\n",
        " 5: ['Equatorial Guinea', 'Fiji'],\n",
        " 6: ['Saint Vincent and the Grenadines', 'Antigua and Barbuda', 'Mauritius'],\n",
        " 7: ['Gambia'],\n",
        " 8: ['Bahamas', 'Liechtenstein', 'Vietnam', 'Trinidad and Tobago', 'Kyrgyzstan',\n",
        "     'Cambodia', 'Monaco', 'Seychelles', 'Northern Mariana Islands',\n",
        "     'Madagascar'],\n",
        " 9: ['Belize', 'Suriname', 'Australia', 'Bermuda', 'Burundi', 'Malawi', 'Ghana',\n",
        "     'Lesotho', 'Uzbekistan', 'Sao Tome and Principe', 'Bolivia', 'Oman',\n",
        "     'Barbados', 'Swaziland', 'Djibouti', 'Kazakhstan', 'Republic of the Congo',\n",
        "     'Zimbabwe', 'South Africa', 'Zambia', 'Virgin Islands, U.S.'],\n",
        " 10: ['Bahrain', 'Singapore', 'Central African Republic', 'Syria', 'Botswana',\n",
        "      'Venezuela', 'Angola', 'Senegal', 'Bhutan', 'Kuwait', 'Mozambique',\n",
        "      \"Cote d'Ivoire\", 'New Zealand', 'Dominican Republic', 'Namibia',\n",
        "      'Jamaica', 'Libya', 'Nigeria', 'Israel', 'Liberia', 'Ethiopia',\n",
        "      'Mongolia', 'Benin', 'Papua New Guinea', 'Eritrea', 'Guatemala',\n",
        "      'Comoros', 'Maldives', 'Rwanda', 'Honduras', 'Philippines',\n",
        "      'Saudi Arabia', 'Gabon', 'Chile', 'Algeria', 'Guyana'],\n",
        " 11: ['Mexico', 'Guinea', 'Panama', 'Ecuador', 'Iraq', 'Brazil', 'Guam',\n",
        "      'Pakistan', 'Sierra Leone', 'Jordan', 'Chad', 'Kenya', 'Cape Verde',\n",
        "      'Yemen', 'Costa Rica', 'Sudan', 'Colombia', 'Taiwan', 'Togo',\n",
        "      'Guinea-Bissau', 'Peru', 'Cameroon', 'Paraguay', 'Montenegro',\n",
        "      'Bangladesh', 'Egypt', 'Nepal', 'El Salvador', 'Puerto Rico', 'India',\n",
        "      'Nicaragua'],\n",
        " 12: ['Slovakia', 'Tajikistan', 'Kosovo', 'Argentina', 'Azerbaijan',\n",
        "      'Democratic Republic of the Congo', 'Niger', 'United Arab Emirates',\n",
        "      'Georgia', 'Iceland', 'Qatar', 'South Sudan', 'Indonesia', 'Japan'],\n",
        " 13: ['Slovenia', 'San Marino', 'Malta', 'Haiti', 'Mali', 'Hungary', 'Myanmar',\n",
        "      'Cuba', 'United States', 'Cyprus', 'Mauritania', 'Palestine', 'Poland',\n",
        "      'Andorra', 'Greece', 'Luxembourg', 'Belarus', 'Sri Lanka', 'Croatia',\n",
        "      'China', 'Russia', 'Tunisia', 'Moldova', 'Serbia', 'Bulgaria', 'Somalia',\n",
        "      'Uganda', 'Burkina Faso', 'Armenia'],\n",
        " 14: ['Albania', 'Spain', 'Ireland', 'Bosnia and Herzegovina', 'Uruguay',\n",
        "      'Latvia', 'Malaysia', 'Afghanistan', 'Thailand', 'Morocco', 'Iran',\n",
        "      'Czech Republic', 'Lithuania', 'Norway', 'Turkey', 'North Macedonia'],\n",
        " 15: ['Sweden', 'Lebanon', 'Canada', 'Romania', 'Estonia', 'Italy', 'Finland',\n",
        "      'Germany', 'Switzerland'],\n",
        " 16: ['Portugal', 'United Kingdom', 'Netherlands', 'Ukraine', 'Belgium',\n",
        "      'Denmark', 'Austria'],\n",
        " 17: ['France']}\n"
       ]
      }
     ],
     "prompt_number": 7
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "# Set phases with S-R trend analysis\n",
      "analyser.trend(min_len=16)\n",
      "# The number of countries\n",
      "len(analyser.countries)"
     ],
     "language": "python",
     "metadata": {},
     "outputs": [
      {
       "output_type": "pyout",
       "prompt_number": 8,
       "text": [
        "8"
       ]
      }
     ],
     "prompt_number": 8
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "phase_len_dict = analyser.phase_len()\n",
      "pprint(phase_len_dict, compact=True)"
     ],
     "language": "python",
     "metadata": {
      "tags": []
     },
     "outputs": [
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "{16: ['Portugal', 'United Kingdom', 'Netherlands', 'Ukraine', 'Belgium',\n",
        "      'Denmark', 'Austria'],\n",
        " 17: ['France']}\n"
       ]
      }
     ],
     "prompt_number": 9
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "# Here, only show the countries which have the most phases\n",
      "countries_show = max(phase_len_dict.items(), key=lambda x: x[0])[1]\n",
      "# Show summary\n",
      "analyser.summary(countries=countries_show)"
     ],
     "language": "python",
     "metadata": {
      "tags": []
     },
     "outputs": [
      {
       "html": [
        "<div>\n",
        "<style scoped>\n",
        "    .dataframe tbody tr th:only-of-type {\n",
        "        vertical-align: middle;\n",
        "    }\n",
        "\n",
        "    .dataframe tbody tr th {\n",
        "        vertical-align: top;\n",
        "    }\n",
        "\n",
        "    .dataframe thead th {\n",
        "        text-align: right;\n",
        "    }\n",
        "</style>\n",
        "<table border=\"1\" class=\"dataframe\">\n",
        "  <thead>\n",
        "    <tr style=\"text-align: right;\">\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th>Type</th>\n",
        "      <th>Start</th>\n",
        "      <th>End</th>\n",
        "      <th>Population</th>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>Country</th>\n",
        "      <th>Phase</th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "    </tr>\n",
        "  </thead>\n",
        "  <tbody>\n",
        "    <tr>\n",
        "      <th rowspan=\"17\" valign=\"top\">France</th>\n",
        "      <th>0th</th>\n",
        "      <td>Past</td>\n",
        "      <td>07Feb2020</td>\n",
        "      <td>30Mar2020</td>\n",
        "      <td>66977107</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>1st</th>\n",
        "      <td>Past</td>\n",
        "      <td>31Mar2020</td>\n",
        "      <td>22Apr2020</td>\n",
        "      <td>66977107</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>2nd</th>\n",
        "      <td>Past</td>\n",
        "      <td>23Apr2020</td>\n",
        "      <td>08Jul2020</td>\n",
        "      <td>66977107</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>3rd</th>\n",
        "      <td>Past</td>\n",
        "      <td>09Jul2020</td>\n",
        "      <td>18Aug2020</td>\n",
        "      <td>66977107</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>4th</th>\n",
        "      <td>Past</td>\n",
        "      <td>19Aug2020</td>\n",
        "      <td>02Sep2020</td>\n",
        "      <td>66977107</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>5th</th>\n",
        "      <td>Past</td>\n",
        "      <td>03Sep2020</td>\n",
        "      <td>14Sep2020</td>\n",
        "      <td>66977107</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>6th</th>\n",
        "      <td>Past</td>\n",
        "      <td>15Sep2020</td>\n",
        "      <td>22Sep2020</td>\n",
        "      <td>66977107</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>7th</th>\n",
        "      <td>Past</td>\n",
        "      <td>23Sep2020</td>\n",
        "      <td>01Oct2020</td>\n",
        "      <td>66977107</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>8th</th>\n",
        "      <td>Past</td>\n",
        "      <td>02Oct2020</td>\n",
        "      <td>08Oct2020</td>\n",
        "      <td>66977107</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>9th</th>\n",
        "      <td>Past</td>\n",
        "      <td>09Oct2020</td>\n",
        "      <td>15Oct2020</td>\n",
        "      <td>66977107</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>10th</th>\n",
        "      <td>Past</td>\n",
        "      <td>16Oct2020</td>\n",
        "      <td>21Oct2020</td>\n",
        "      <td>66977107</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>11th</th>\n",
        "      <td>Past</td>\n",
        "      <td>22Oct2020</td>\n",
        "      <td>31Oct2020</td>\n",
        "      <td>66977107</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>12th</th>\n",
        "      <td>Past</td>\n",
        "      <td>01Nov2020</td>\n",
        "      <td>10Nov2020</td>\n",
        "      <td>66977107</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>13th</th>\n",
        "      <td>Past</td>\n",
        "      <td>11Nov2020</td>\n",
        "      <td>16Nov2020</td>\n",
        "      <td>66977107</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>14th</th>\n",
        "      <td>Past</td>\n",
        "      <td>17Nov2020</td>\n",
        "      <td>24Nov2020</td>\n",
        "      <td>66977107</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>15th</th>\n",
        "      <td>Past</td>\n",
        "      <td>25Nov2020</td>\n",
        "      <td>03Dec2020</td>\n",
        "      <td>66977107</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>16th</th>\n",
        "      <td>Past</td>\n",
        "      <td>04Dec2020</td>\n",
        "      <td>13Dec2020</td>\n",
        "      <td>66977107</td>\n",
        "    </tr>\n",
        "  </tbody>\n",
        "</table>\n",
        "</div>"
       ],
       "output_type": "pyout",
       "prompt_number": 10,
       "text": [
        "               Type      Start        End  Population\n",
        "Country Phase                                        \n",
        "France  0th    Past  07Feb2020  30Mar2020    66977107\n",
        "        1st    Past  31Mar2020  22Apr2020    66977107\n",
        "        2nd    Past  23Apr2020  08Jul2020    66977107\n",
        "        3rd    Past  09Jul2020  18Aug2020    66977107\n",
        "        4th    Past  19Aug2020  02Sep2020    66977107\n",
        "        5th    Past  03Sep2020  14Sep2020    66977107\n",
        "        6th    Past  15Sep2020  22Sep2020    66977107\n",
        "        7th    Past  23Sep2020  01Oct2020    66977107\n",
        "        8th    Past  02Oct2020  08Oct2020    66977107\n",
        "        9th    Past  09Oct2020  15Oct2020    66977107\n",
        "        10th   Past  16Oct2020  21Oct2020    66977107\n",
        "        11th   Past  22Oct2020  31Oct2020    66977107\n",
        "        12th   Past  01Nov2020  10Nov2020    66977107\n",
        "        13th   Past  11Nov2020  16Nov2020    66977107\n",
        "        14th   Past  17Nov2020  24Nov2020    66977107\n",
        "        15th   Past  25Nov2020  03Dec2020    66977107\n",
        "        16th   Past  04Dec2020  13Dec2020    66977107"
       ]
      }
     ],
     "prompt_number": 10
    },
    {
     "cell_type": "markdown",
     "metadata": {},
     "source": [
      "## Parameter estimation\n",
      "we will estimate the parameter values with SIR-derived ODE models in each country."
     ]
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "# Parameter estimation with SIR-F model\n",
      "analyser.estimate(cs.SIRF, timeout=10)"
     ],
     "language": "python",
     "metadata": {
      "tags": []
     },
     "outputs": [
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n",
        "<SIR-F model: parameter estimation>\n",
        "Running optimization with 4 CPUs...\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stderr",
       "text": [
        "/home/runner/.local/share/virtualenvs/covid19-sir-kT3BL-HO/lib/python3.8/site-packages/scipy/interpolate/fitpack2.py:253: UserWarning: \n",
        "The maximal number of iterations maxit (set to 20 by the program)\n",
        "allowed for finding a smoothing spline with fp=s has been reached: s\n",
        "too small.\n",
        "There is an approximation returned but the corresponding weighted sum\n",
        "of squared residuals does not satisfy the condition abs(fp-s)/s < tol.\n",
        "  warnings.warn(message)\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tAUT, 11th phase (31Oct2020 - 09Nov2020): finished  229 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tFRA,  2nd phase (23Apr2020 - 08Jul2020): finished  212 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tDNK,  3rd phase (13Jun2020 - 09Aug2020): finished  217 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tGBR,  9th phase (20Oct2020 - 25Oct2020): finished  231 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stderr",
       "text": [
        "/home/runner/.local/share/virtualenvs/covid19-sir-kT3BL-HO/lib/python3.8/site-packages/scipy/interpolate/fitpack2.py:253: UserWarning: \n",
        "The maximal number of iterations maxit (set to 20 by the program)\n",
        "allowed for finding a smoothing spline with fp=s has been reached: s\n",
        "too small.\n",
        "There is an approximation returned but the corresponding weighted sum\n",
        "of squared residuals does not satisfy the condition abs(fp-s)/s < tol.\n",
        "  warnings.warn(message)\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tBEL,  2nd phase (14Apr2020 - 07May2020): finished  226 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tGBR,  5th phase (18Aug2020 - 17Sep2020): finished  225 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tFRA, 13th phase (11Nov2020 - 16Nov2020): finished  231 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tUKR, 14th phase (01Dec2020 - 06Dec2020): finished  232 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tDNK,  6th phase (21Sep2020 - 30Sep2020): finished  231 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tAUT,  7th phase (28Sep2020 - 06Oct2020): finished  231 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stderr",
       "text": [
        "/home/runner/.local/share/virtualenvs/covid19-sir-kT3BL-HO/lib/python3.8/site-packages/scipy/interpolate/fitpack2.py:253: UserWarning: \n",
        "The maximal number of iterations maxit (set to 20 by the program)\n",
        "allowed for finding a smoothing spline with fp=s has been reached: s\n",
        "too small.\n",
        "There is an approximation returned but the corresponding weighted sum\n",
        "of squared residuals does not satisfy the condition abs(fp-s)/s < tol.\n",
        "  warnings.warn(message)\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tBEL,  8th phase (07Oct2020 - 12Oct2020): finished  233 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tAUT,  5th phase (07Sep2020 - 16Sep2020): finished  230 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tFRA,  6th phase (15Sep2020 - 22Sep2020): finished  233 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tGBR,  1st phase (07Apr2020 - 23Apr2020): finished  228 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tGBR, 13th phase (18Nov2020 - 25Nov2020): finished  231 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tAUT, 10th phase (21Oct2020 - 30Oct2020): finished  230 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stderr",
       "text": [
        "/home/runner/.local/share/virtualenvs/covid19-sir-kT3BL-HO/lib/python3.8/site-packages/scipy/interpolate/fitpack2.py:253: UserWarning: \n",
        "The maximal number of iterations maxit (set to 20 by the program)\n",
        "allowed for finding a smoothing spline with fp=s has been reached: s\n",
        "too small.\n",
        "There is an approximation returned but the corresponding weighted sum\n",
        "of squared residuals does not satisfy the condition abs(fp-s)/s < tol.\n",
        "  warnings.warn(message)\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tUKR,  0th phase (21Mar2020 - 30May2020): finished  217 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tGBR,  6th phase (18Sep2020 - 02Oct2020): finished  229 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tUKR,  3rd phase (12Aug2020 - 31Aug2020): finished  226 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tFRA,  7th phase (23Sep2020 - 01Oct2020): finished  231 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stderr",
       "text": [
        "/home/runner/.local/share/virtualenvs/covid19-sir-kT3BL-HO/lib/python3.8/site-packages/scipy/interpolate/fitpack2.py:253: UserWarning: \n",
        "The maximal number of iterations maxit (set to 20 by the program)\n",
        "allowed for finding a smoothing spline with fp=s has been reached: s\n",
        "too small.\n",
        "There is an approximation returned but the corresponding weighted sum\n",
        "of squared residuals does not satisfy the condition abs(fp-s)/s < tol.\n",
        "  warnings.warn(message)\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tUKR,  1st phase (31May2020 - 08Jul2020): finished  223 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tNLD,  8th phase (05Oct2020 - 14Oct2020): finished  231 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tGBR,  2nd phase (24Apr2020 - 11May2020): finished  227 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tFRA,  9th phase (09Oct2020 - 15Oct2020): finished  231 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tPRT,  0th phase (14Mar2020 - 01Apr2020): finished  227 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tBEL,  3rd phase (08May2020 - 27Jul2020): finished  211 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tPRT,  9th phase (14Oct2020 - 21Oct2020): finished  230 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tPRT,  8th phase (02Oct2020 - 13Oct2020): finished  229 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tBEL, 12th phase (08Nov2020 - 14Nov2020): finished  233 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tBEL,  9th phase (13Oct2020 - 22Oct2020): finished  231 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tBEL, 10th phase (23Oct2020 - 01Nov2020): finished  227 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tDNK, 11th phase (05Nov2020 - 10Nov2020): finished  227 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tNLD, 14th phase (26Nov2020 - 02Dec2020): finished  208 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tUKR,  9th phase (30Oct2020 - 05Nov2020): finished  211 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stderr",
       "text": [
        "/home/runner/.local/share/virtualenvs/covid19-sir-kT3BL-HO/lib/python3.8/site-packages/scipy/interpolate/fitpack2.py:253: UserWarning: \n",
        "The maximal number of iterations maxit (set to 20 by the program)\n",
        "allowed for finding a smoothing spline with fp=s has been reached: s\n",
        "too small.\n",
        "There is an approximation returned but the corresponding weighted sum\n",
        "of squared residuals does not satisfy the condition abs(fp-s)/s < tol.\n",
        "  warnings.warn(message)\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tBEL, 15th phase (02Dec2020 - 13Dec2020): finished  209 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tNLD,  2nd phase (17Apr2020 - 21May2020): finished  201 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tFRA,  8th phase (02Oct2020 - 08Oct2020): finished  229 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tDNK,  4th phase (10Aug2020 - 08Sep2020): finished  226 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tNLD,  0th phase (11Mar2020 - 31Mar2020): finished  227 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tGBR, 14th phase (26Nov2020 - 04Dec2020): finished  231 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tNLD, 11th phase (04Nov2020 - 13Nov2020): finished  231 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tAUT,  9th phase (15Oct2020 - 20Oct2020): finished  234 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stderr",
       "text": [
        "/home/runner/.local/share/virtualenvs/covid19-sir-kT3BL-HO/lib/python3.8/site-packages/scipy/interpolate/fitpack2.py:253: UserWarning: \n",
        "The maximal number of iterations maxit (set to 20 by the program)\n",
        "allowed for finding a smoothing spline with fp=s has been reached: s\n",
        "too small.\n",
        "There is an approximation returned but the corresponding weighted sum\n",
        "of squared residuals does not satisfy the condition abs(fp-s)/s < tol.\n",
        "  warnings.warn(message)\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tDNK,  9th phase (23Oct2020 - 29Oct2020): finished  233 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tUKR, 12th phase (19Nov2020 - 24Nov2020): finished  233 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tFRA, 10th phase (16Oct2020 - 21Oct2020): finished  234 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tAUT,  3rd phase (11Jul2020 - 17Aug2020): finished  224 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tNLD,  4th phase (08Aug2020 - 04Sep2020): finished  225 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tDNK,  2nd phase (03May2020 - 12Jun2020): finished  220 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tBEL, 14th phase (23Nov2020 - 01Dec2020): finished  232 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tGBR,  7th phase (03Oct2020 - 11Oct2020): finished  232 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tUKR, 11th phase (13Nov2020 - 18Nov2020): finished  233 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tAUT,  0th phase (06Mar2020 - 24Mar2020): finished  226 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stderr",
       "text": [
        "/home/runner/.local/share/virtualenvs/covid19-sir-kT3BL-HO/lib/python3.8/site-packages/scipy/interpolate/fitpack2.py:253: UserWarning: \n",
        "The maximal number of iterations maxit (set to 20 by the program)\n",
        "allowed for finding a smoothing spline with fp=s has been reached: s\n",
        "too small.\n",
        "There is an approximation returned but the corresponding weighted sum\n",
        "of squared residuals does not satisfy the condition abs(fp-s)/s < tol.\n",
        "  warnings.warn(message)\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tAUT,  8th phase (07Oct2020 - 14Oct2020): finished  232 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tPRT,  4th phase (19Jun2020 - 14Jul2020): finished  227 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tFRA,  3rd phase (09Jul2020 - 18Aug2020): finished  222 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tAUT,  6th phase (17Sep2020 - 27Sep2020): finished  229 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tBEL,  1st phase (31Mar2020 - 13Apr2020): finished  230 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tBEL,  6th phase (15Sep2020 - 28Sep2020): finished  230 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tNLD,  7th phase (28Sep2020 - 04Oct2020): finished  232 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stderr",
       "text": [
        "/home/runner/.local/share/virtualenvs/covid19-sir-kT3BL-HO/lib/python3.8/site-packages/scipy/interpolate/fitpack2.py:253: UserWarning: \n",
        "The maximal number of iterations maxit (set to 20 by the program)\n",
        "allowed for finding a smoothing spline with fp=s has been reached: s\n",
        "too small.\n",
        "There is an approximation returned but the corresponding weighted sum\n",
        "of squared residuals does not satisfy the condition abs(fp-s)/s < tol.\n",
        "  warnings.warn(message)\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tPRT, 13th phase (13Nov2020 - 22Nov2020): finished  230 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tUKR, 10th phase (06Nov2020 - 12Nov2020): finished  218 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tFRA, 12th phase (01Nov2020 - 10Nov2020): finished  213 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tGBR, 10th phase (26Oct2020 - 05Nov2020): finished  234 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tPRT,  2nd phase (19Apr2020 - 20May2020): finished  223 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tGBR, 11th phase (06Nov2020 - 11Nov2020): finished  215 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tPRT, 15th phase (03Dec2020 - 13Dec2020): finished  211 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tGBR, 15th phase (05Dec2020 - 13Dec2020): finished  236 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tPRT, 11th phase (28Oct2020 - 02Nov2020): finished  236 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stderr",
       "text": [
        "/home/runner/.local/share/virtualenvs/covid19-sir-kT3BL-HO/lib/python3.8/site-packages/scipy/interpolate/fitpack2.py:253: UserWarning: \n",
        "The maximal number of iterations maxit (set to 20 by the program)\n",
        "allowed for finding a smoothing spline with fp=s has been reached: s\n",
        "too small.\n",
        "There is an approximation returned but the corresponding weighted sum\n",
        "of squared residuals does not satisfy the condition abs(fp-s)/s < tol.\n",
        "  warnings.warn(message)\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tDNK,  5th phase (09Sep2020 - 20Sep2020): finished  231 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tGBR,  3rd phase (12May2020 - 11Jun2020): finished  224 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tFRA, 11th phase (22Oct2020 - 31Oct2020): finished  229 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tAUT, 12th phase (10Nov2020 - 19Nov2020): finished  231 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tNLD, 10th phase (25Oct2020 - 03Nov2020): finished  230 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tPRT,  5th phase (15Jul2020 - 25Aug2020): finished  219 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stderr",
       "text": [
        "/home/runner/.local/share/virtualenvs/covid19-sir-kT3BL-HO/lib/python3.8/site-packages/scipy/interpolate/fitpack2.py:253: UserWarning: \n",
        "The maximal number of iterations maxit (set to 20 by the program)\n",
        "allowed for finding a smoothing spline with fp=s has been reached: s\n",
        "too small.\n",
        "There is an approximation returned but the corresponding weighted sum\n",
        "of squared residuals does not satisfy the condition abs(fp-s)/s < tol.\n",
        "  warnings.warn(message)\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tBEL, 11th phase (02Nov2020 - 07Nov2020): finished  232 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tDNK,  0th phase (19Mar2020 - 12Apr2020): finished  226 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tFRA, 15th phase (25Nov2020 - 03Dec2020): finished  178 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tDNK,  7th phase (01Oct2020 - 12Oct2020): finished  182 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tGBR,  8th phase (12Oct2020 - 19Oct2020): finished  186 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tBEL,  5th phase (23Aug2020 - 14Sep2020): finished  182 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tGBR,  4th phase (12Jun2020 - 17Aug2020): finished  213 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tUKR,  6th phase (01Oct2020 - 11Oct2020): finished  223 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tUKR,  5th phase (17Sep2020 - 30Sep2020): finished  226 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tPRT,  1st phase (02Apr2020 - 18Apr2020): finished  222 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stderr",
       "text": [
        "/home/runner/.local/share/virtualenvs/covid19-sir-kT3BL-HO/lib/python3.8/site-packages/scipy/interpolate/fitpack2.py:253: UserWarning: \n",
        "The maximal number of iterations maxit (set to 20 by the program)\n",
        "allowed for finding a smoothing spline with fp=s has been reached: s\n",
        "too small.\n",
        "There is an approximation returned but the corresponding weighted sum\n",
        "of squared residuals does not satisfy the condition abs(fp-s)/s < tol.\n",
        "  warnings.warn(message)\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tNLD,  1st phase (01Apr2020 - 16Apr2020): finished  220 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tBEL, 13th phase (15Nov2020 - 22Nov2020): finished  228 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stderr",
       "text": [
        "/home/runner/.local/share/virtualenvs/covid19-sir-kT3BL-HO/lib/python3.8/site-packages/scipy/interpolate/fitpack2.py:253: UserWarning: \n",
        "The maximal number of iterations maxit (set to 20 by the program)\n",
        "allowed for finding a smoothing spline with fp=s has been reached: s\n",
        "too small.\n",
        "There is an approximation returned but the corresponding weighted sum\n",
        "of squared residuals does not satisfy the condition abs(fp-s)/s < tol.\n",
        "  warnings.warn(message)\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tBEL,  7th phase (29Sep2020 - 06Oct2020): finished  230 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tFRA,  5th phase (03Sep2020 - 14Sep2020): finished  225 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tNLD,  9th phase (15Oct2020 - 24Oct2020): finished  223 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tFRA, 14th phase (17Nov2020 - 24Nov2020): finished  229 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tAUT,  2nd phase (09Apr2020 - 10Jul2020): finished  205 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tBEL,  0th phase (13Mar2020 - 30Mar2020): finished  224 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stderr",
       "text": [
        "/home/runner/.local/share/virtualenvs/covid19-sir-kT3BL-HO/lib/python3.8/site-packages/scipy/interpolate/fitpack2.py:253: UserWarning: \n",
        "The maximal number of iterations maxit (set to 20 by the program)\n",
        "allowed for finding a smoothing spline with fp=s has been reached: s\n",
        "too small.\n",
        "There is an approximation returned but the corresponding weighted sum\n",
        "of squared residuals does not satisfy the condition abs(fp-s)/s < tol.\n",
        "  warnings.warn(message)\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tUKR, 13th phase (25Nov2020 - 30Nov2020): finished  231 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tGBR,  0th phase (18Feb2020 - 06Apr2020): finished  220 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tUKR,  8th phase (22Oct2020 - 29Oct2020): finished  229 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tFRA,  4th phase (19Aug2020 - 02Sep2020): finished  225 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tUKR,  4th phase (01Sep2020 - 16Sep2020): finished  223 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tAUT,  4th phase (18Aug2020 - 06Sep2020): finished  224 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tPRT,  3rd phase (21May2020 - 18Jun2020): finished  224 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tAUT,  1st phase (25Mar2020 - 08Apr2020): finished  220 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tPRT, 14th phase (23Nov2020 - 02Dec2020): finished  223 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tUKR, 15th phase (07Dec2020 - 13Dec2020): finished  229 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tNLD, 13th phase (20Nov2020 - 25Nov2020): finished  232 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tPRT, 10th phase (22Oct2020 - 27Oct2020): finished  222 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stderr",
       "text": [
        "/home/runner/.local/share/virtualenvs/covid19-sir-kT3BL-HO/lib/python3.8/site-packages/scipy/interpolate/fitpack2.py:253: UserWarning: \n",
        "The maximal number of iterations maxit (set to 20 by the program)\n",
        "allowed for finding a smoothing spline with fp=s has been reached: s\n",
        "too small.\n",
        "There is an approximation returned but the corresponding weighted sum\n",
        "of squared residuals does not satisfy the condition abs(fp-s)/s < tol.\n",
        "  warnings.warn(message)\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tNLD,  3rd phase (22May2020 - 07Aug2020): finished  237 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tGBR, 12th phase (12Nov2020 - 17Nov2020): finished  257 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stderr",
       "text": [
        "/home/runner/.local/share/virtualenvs/covid19-sir-kT3BL-HO/lib/python3.8/site-packages/scipy/interpolate/fitpack2.py:253: UserWarning: \n",
        "The maximal number of iterations maxit (set to 20 by the program)\n",
        "allowed for finding a smoothing spline with fp=s has been reached: s\n",
        "too small.\n",
        "There is an approximation returned but the corresponding weighted sum\n",
        "of squared residuals does not satisfy the condition abs(fp-s)/s < tol.\n",
        "  warnings.warn(message)\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tFRA,  0th phase (07Feb2020 - 30Mar2020): finished  245 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tPRT, 12th phase (03Nov2020 - 12Nov2020): finished  257 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tFRA, 16th phase (04Dec2020 - 13Dec2020): finished  256 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tDNK,  1st phase (13Apr2020 - 02May2020): finished  253 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tBEL,  4th phase (28Jul2020 - 22Aug2020): finished  254 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tNLD, 12th phase (14Nov2020 - 19Nov2020): finished  260 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tPRT,  6th phase (26Aug2020 - 15Sep2020): finished  254 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tUKR,  7th phase (12Oct2020 - 21Oct2020): finished  259 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tUKR,  2nd phase (09Jul2020 - 11Aug2020): finished  249 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stderr",
       "text": [
        "/home/runner/.local/share/virtualenvs/covid19-sir-kT3BL-HO/lib/python3.8/site-packages/scipy/interpolate/fitpack2.py:253: UserWarning: \n",
        "The maximal number of iterations maxit (set to 20 by the program)\n",
        "allowed for finding a smoothing spline with fp=s has been reached: s\n",
        "too small.\n",
        "There is an approximation returned but the corresponding weighted sum\n",
        "of squared residuals does not satisfy the condition abs(fp-s)/s < tol.\n",
        "  warnings.warn(message)\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tNLD,  6th phase (19Sep2020 - 27Sep2020): finished  259 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tFRA,  1st phase (31Mar2020 - 22Apr2020): finished  228 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tPRT,  7th phase (16Sep2020 - 01Oct2020): finished  233 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tDNK, 10th phase (30Oct2020 - 04Nov2020): finished  237 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tNLD,  5th phase (05Sep2020 - 18Sep2020): finished  257 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tAUT, 13th phase (20Nov2020 - 30Nov2020): finished  259 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tDNK, 13th phase (17Nov2020 - 22Nov2020): finished  264 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "Completed optimization. Total: 5 min 56 sec\n"
       ]
      }
     ],
     "prompt_number": 11
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "# Show summary\n",
      "analyser.summary(countries=countries_show)"
     ],
     "language": "python",
     "metadata": {},
     "outputs": [
      {
       "html": [
        "<div>\n",
        "<style scoped>\n",
        "    .dataframe tbody tr th:only-of-type {\n",
        "        vertical-align: middle;\n",
        "    }\n",
        "\n",
        "    .dataframe tbody tr th {\n",
        "        vertical-align: top;\n",
        "    }\n",
        "\n",
        "    .dataframe thead th {\n",
        "        text-align: right;\n",
        "    }\n",
        "</style>\n",
        "<table border=\"1\" class=\"dataframe\">\n",
        "  <thead>\n",
        "    <tr style=\"text-align: right;\">\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th>Type</th>\n",
        "      <th>Start</th>\n",
        "      <th>End</th>\n",
        "      <th>Population</th>\n",
        "      <th>ODE</th>\n",
        "      <th>Rt</th>\n",
        "      <th>theta</th>\n",
        "      <th>kappa</th>\n",
        "      <th>rho</th>\n",
        "      <th>sigma</th>\n",
        "      <th>tau</th>\n",
        "      <th>alpha1 [-]</th>\n",
        "      <th>1/gamma [day]</th>\n",
        "      <th>1/beta [day]</th>\n",
        "      <th>1/alpha2 [day]</th>\n",
        "      <th>RMSLE</th>\n",
        "      <th>Trials</th>\n",
        "      <th>Runtime</th>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>Country</th>\n",
        "      <th>Phase</th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "    </tr>\n",
        "  </thead>\n",
        "  <tbody>\n",
        "    <tr>\n",
        "      <th rowspan=\"17\" valign=\"top\">France</th>\n",
        "      <th>0th</th>\n",
        "      <td>Past</td>\n",
        "      <td>07Feb2020</td>\n",
        "      <td>30Mar2020</td>\n",
        "      <td>66977107</td>\n",
        "      <td>SIR-F</td>\n",
        "      <td>8.95</td>\n",
        "      <td>0.001841</td>\n",
        "      <td>0.000059</td>\n",
        "      <td>0.038763</td>\n",
        "      <td>0.004265</td>\n",
        "      <td>360</td>\n",
        "      <td>0.002</td>\n",
        "      <td>58</td>\n",
        "      <td>6</td>\n",
        "      <td>4209</td>\n",
        "      <td>1.400120</td>\n",
        "      <td>245</td>\n",
        "      <td>0 min 10 sec</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>1st</th>\n",
        "      <td>Past</td>\n",
        "      <td>31Mar2020</td>\n",
        "      <td>22Apr2020</td>\n",
        "      <td>66977107</td>\n",
        "      <td>SIR-F</td>\n",
        "      <td>0.71</td>\n",
        "      <td>0.346351</td>\n",
        "      <td>0.001473</td>\n",
        "      <td>0.024343</td>\n",
        "      <td>0.021055</td>\n",
        "      <td>360</td>\n",
        "      <td>0.346</td>\n",
        "      <td>11</td>\n",
        "      <td>10</td>\n",
        "      <td>169</td>\n",
        "      <td>0.187872</td>\n",
        "      <td>228</td>\n",
        "      <td>0 min 10 sec</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>2nd</th>\n",
        "      <td>Past</td>\n",
        "      <td>23Apr2020</td>\n",
        "      <td>08Jul2020</td>\n",
        "      <td>66977107</td>\n",
        "      <td>SIR-F</td>\n",
        "      <td>0.62</td>\n",
        "      <td>0.477580</td>\n",
        "      <td>0.000558</td>\n",
        "      <td>0.021357</td>\n",
        "      <td>0.017420</td>\n",
        "      <td>360</td>\n",
        "      <td>0.478</td>\n",
        "      <td>14</td>\n",
        "      <td>11</td>\n",
        "      <td>447</td>\n",
        "      <td>0.367082</td>\n",
        "      <td>212</td>\n",
        "      <td>0 min 10 sec</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>3rd</th>\n",
        "      <td>Past</td>\n",
        "      <td>09Jul2020</td>\n",
        "      <td>18Aug2020</td>\n",
        "      <td>66977107</td>\n",
        "      <td>SIR-F</td>\n",
        "      <td>1.51</td>\n",
        "      <td>0.034041</td>\n",
        "      <td>0.000807</td>\n",
        "      <td>0.025499</td>\n",
        "      <td>0.015544</td>\n",
        "      <td>360</td>\n",
        "      <td>0.034</td>\n",
        "      <td>16</td>\n",
        "      <td>9</td>\n",
        "      <td>309</td>\n",
        "      <td>0.107313</td>\n",
        "      <td>222</td>\n",
        "      <td>0 min 10 sec</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>4th</th>\n",
        "      <td>Past</td>\n",
        "      <td>19Aug2020</td>\n",
        "      <td>02Sep2020</td>\n",
        "      <td>66977107</td>\n",
        "      <td>SIR-F</td>\n",
        "      <td>2.04</td>\n",
        "      <td>0.001289</td>\n",
        "      <td>0.000071</td>\n",
        "      <td>0.030650</td>\n",
        "      <td>0.014930</td>\n",
        "      <td>360</td>\n",
        "      <td>0.001</td>\n",
        "      <td>16</td>\n",
        "      <td>8</td>\n",
        "      <td>3514</td>\n",
        "      <td>0.031933</td>\n",
        "      <td>225</td>\n",
        "      <td>0 min 10 sec</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>5th</th>\n",
        "      <td>Past</td>\n",
        "      <td>03Sep2020</td>\n",
        "      <td>14Sep2020</td>\n",
        "      <td>66977107</td>\n",
        "      <td>SIR-F</td>\n",
        "      <td>1.55</td>\n",
        "      <td>0.000900</td>\n",
        "      <td>0.000071</td>\n",
        "      <td>0.025259</td>\n",
        "      <td>0.016224</td>\n",
        "      <td>360</td>\n",
        "      <td>0.001</td>\n",
        "      <td>15</td>\n",
        "      <td>9</td>\n",
        "      <td>3514</td>\n",
        "      <td>0.032319</td>\n",
        "      <td>225</td>\n",
        "      <td>0 min 10 sec</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>6th</th>\n",
        "      <td>Past</td>\n",
        "      <td>15Sep2020</td>\n",
        "      <td>22Sep2020</td>\n",
        "      <td>66977107</td>\n",
        "      <td>SIR-F</td>\n",
        "      <td>1.48</td>\n",
        "      <td>0.000864</td>\n",
        "      <td>0.000150</td>\n",
        "      <td>0.025987</td>\n",
        "      <td>0.017436</td>\n",
        "      <td>360</td>\n",
        "      <td>0.001</td>\n",
        "      <td>14</td>\n",
        "      <td>9</td>\n",
        "      <td>1666</td>\n",
        "      <td>0.019375</td>\n",
        "      <td>233</td>\n",
        "      <td>0 min 10 sec</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>7th</th>\n",
        "      <td>Past</td>\n",
        "      <td>23Sep2020</td>\n",
        "      <td>01Oct2020</td>\n",
        "      <td>66977107</td>\n",
        "      <td>SIR-F</td>\n",
        "      <td>1.36</td>\n",
        "      <td>0.001278</td>\n",
        "      <td>0.000079</td>\n",
        "      <td>0.024934</td>\n",
        "      <td>0.018240</td>\n",
        "      <td>360</td>\n",
        "      <td>0.001</td>\n",
        "      <td>13</td>\n",
        "      <td>10</td>\n",
        "      <td>3152</td>\n",
        "      <td>0.033578</td>\n",
        "      <td>231</td>\n",
        "      <td>0 min 10 sec</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>8th</th>\n",
        "      <td>Past</td>\n",
        "      <td>02Oct2020</td>\n",
        "      <td>08Oct2020</td>\n",
        "      <td>66977107</td>\n",
        "      <td>SIR-F</td>\n",
        "      <td>1.25</td>\n",
        "      <td>0.001379</td>\n",
        "      <td>0.000191</td>\n",
        "      <td>0.029453</td>\n",
        "      <td>0.023312</td>\n",
        "      <td>360</td>\n",
        "      <td>0.001</td>\n",
        "      <td>10</td>\n",
        "      <td>8</td>\n",
        "      <td>1308</td>\n",
        "      <td>0.038653</td>\n",
        "      <td>229</td>\n",
        "      <td>0 min 10 sec</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>9th</th>\n",
        "      <td>Past</td>\n",
        "      <td>09Oct2020</td>\n",
        "      <td>15Oct2020</td>\n",
        "      <td>66977107</td>\n",
        "      <td>SIR-F</td>\n",
        "      <td>1.67</td>\n",
        "      <td>0.001050</td>\n",
        "      <td>0.000152</td>\n",
        "      <td>0.025168</td>\n",
        "      <td>0.014910</td>\n",
        "      <td>360</td>\n",
        "      <td>0.001</td>\n",
        "      <td>16</td>\n",
        "      <td>9</td>\n",
        "      <td>1645</td>\n",
        "      <td>0.035339</td>\n",
        "      <td>231</td>\n",
        "      <td>0 min 10 sec</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>10th</th>\n",
        "      <td>Past</td>\n",
        "      <td>16Oct2020</td>\n",
        "      <td>21Oct2020</td>\n",
        "      <td>66977107</td>\n",
        "      <td>SIR-F</td>\n",
        "      <td>1.75</td>\n",
        "      <td>0.001811</td>\n",
        "      <td>0.000059</td>\n",
        "      <td>0.027659</td>\n",
        "      <td>0.015725</td>\n",
        "      <td>360</td>\n",
        "      <td>0.002</td>\n",
        "      <td>15</td>\n",
        "      <td>9</td>\n",
        "      <td>4226</td>\n",
        "      <td>0.032896</td>\n",
        "      <td>234</td>\n",
        "      <td>0 min 10 sec</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>11th</th>\n",
        "      <td>Past</td>\n",
        "      <td>22Oct2020</td>\n",
        "      <td>31Oct2020</td>\n",
        "      <td>66977107</td>\n",
        "      <td>SIR-F</td>\n",
        "      <td>2.52</td>\n",
        "      <td>0.001843</td>\n",
        "      <td>0.000150</td>\n",
        "      <td>0.028712</td>\n",
        "      <td>0.011235</td>\n",
        "      <td>360</td>\n",
        "      <td>0.002</td>\n",
        "      <td>22</td>\n",
        "      <td>8</td>\n",
        "      <td>1666</td>\n",
        "      <td>0.044265</td>\n",
        "      <td>229</td>\n",
        "      <td>0 min 10 sec</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>12th</th>\n",
        "      <td>Past</td>\n",
        "      <td>01Nov2020</td>\n",
        "      <td>10Nov2020</td>\n",
        "      <td>66977107</td>\n",
        "      <td>SIR-F</td>\n",
        "      <td>1.47</td>\n",
        "      <td>0.001461</td>\n",
        "      <td>0.000191</td>\n",
        "      <td>0.026602</td>\n",
        "      <td>0.017866</td>\n",
        "      <td>360</td>\n",
        "      <td>0.001</td>\n",
        "      <td>13</td>\n",
        "      <td>9</td>\n",
        "      <td>1308</td>\n",
        "      <td>0.041189</td>\n",
        "      <td>213</td>\n",
        "      <td>0 min 10 sec</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>13th</th>\n",
        "      <td>Past</td>\n",
        "      <td>11Nov2020</td>\n",
        "      <td>16Nov2020</td>\n",
        "      <td>66977107</td>\n",
        "      <td>SIR-F</td>\n",
        "      <td>0.65</td>\n",
        "      <td>0.001978</td>\n",
        "      <td>0.000194</td>\n",
        "      <td>0.013372</td>\n",
        "      <td>0.020379</td>\n",
        "      <td>360</td>\n",
        "      <td>0.002</td>\n",
        "      <td>12</td>\n",
        "      <td>18</td>\n",
        "      <td>1289</td>\n",
        "      <td>0.010552</td>\n",
        "      <td>231</td>\n",
        "      <td>0 min 10 sec</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>14th</th>\n",
        "      <td>Past</td>\n",
        "      <td>17Nov2020</td>\n",
        "      <td>24Nov2020</td>\n",
        "      <td>66977107</td>\n",
        "      <td>SIR-F</td>\n",
        "      <td>0.42</td>\n",
        "      <td>0.014111</td>\n",
        "      <td>0.000299</td>\n",
        "      <td>0.013885</td>\n",
        "      <td>0.031968</td>\n",
        "      <td>360</td>\n",
        "      <td>0.014</td>\n",
        "      <td>7</td>\n",
        "      <td>18</td>\n",
        "      <td>835</td>\n",
        "      <td>0.030729</td>\n",
        "      <td>229</td>\n",
        "      <td>0 min 10 sec</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>15th</th>\n",
        "      <td>Past</td>\n",
        "      <td>25Nov2020</td>\n",
        "      <td>03Dec2020</td>\n",
        "      <td>66977107</td>\n",
        "      <td>SIR-F</td>\n",
        "      <td>0.38</td>\n",
        "      <td>0.097496</td>\n",
        "      <td>0.000002</td>\n",
        "      <td>0.015722</td>\n",
        "      <td>0.037587</td>\n",
        "      <td>360</td>\n",
        "      <td>0.097</td>\n",
        "      <td>6</td>\n",
        "      <td>15</td>\n",
        "      <td>132837</td>\n",
        "      <td>0.050764</td>\n",
        "      <td>178</td>\n",
        "      <td>0 min 10 sec</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>16th</th>\n",
        "      <td>Past</td>\n",
        "      <td>04Dec2020</td>\n",
        "      <td>13Dec2020</td>\n",
        "      <td>66977107</td>\n",
        "      <td>SIR-F</td>\n",
        "      <td>1.05</td>\n",
        "      <td>0.019052</td>\n",
        "      <td>0.000288</td>\n",
        "      <td>0.024852</td>\n",
        "      <td>0.022851</td>\n",
        "      <td>360</td>\n",
        "      <td>0.019</td>\n",
        "      <td>10</td>\n",
        "      <td>10</td>\n",
        "      <td>867</td>\n",
        "      <td>0.024342</td>\n",
        "      <td>256</td>\n",
        "      <td>0 min 10 sec</td>\n",
        "    </tr>\n",
        "  </tbody>\n",
        "</table>\n",
        "</div>"
       ],
       "output_type": "pyout",
       "prompt_number": 12,
       "text": [
        "               Type      Start        End  Population    ODE    Rt     theta  \\\n",
        "Country Phase                                                                  \n",
        "France  0th    Past  07Feb2020  30Mar2020    66977107  SIR-F  8.95  0.001841   \n",
        "        1st    Past  31Mar2020  22Apr2020    66977107  SIR-F  0.71  0.346351   \n",
        "        2nd    Past  23Apr2020  08Jul2020    66977107  SIR-F  0.62  0.477580   \n",
        "        3rd    Past  09Jul2020  18Aug2020    66977107  SIR-F  1.51  0.034041   \n",
        "        4th    Past  19Aug2020  02Sep2020    66977107  SIR-F  2.04  0.001289   \n",
        "        5th    Past  03Sep2020  14Sep2020    66977107  SIR-F  1.55  0.000900   \n",
        "        6th    Past  15Sep2020  22Sep2020    66977107  SIR-F  1.48  0.000864   \n",
        "        7th    Past  23Sep2020  01Oct2020    66977107  SIR-F  1.36  0.001278   \n",
        "        8th    Past  02Oct2020  08Oct2020    66977107  SIR-F  1.25  0.001379   \n",
        "        9th    Past  09Oct2020  15Oct2020    66977107  SIR-F  1.67  0.001050   \n",
        "        10th   Past  16Oct2020  21Oct2020    66977107  SIR-F  1.75  0.001811   \n",
        "        11th   Past  22Oct2020  31Oct2020    66977107  SIR-F  2.52  0.001843   \n",
        "        12th   Past  01Nov2020  10Nov2020    66977107  SIR-F  1.47  0.001461   \n",
        "        13th   Past  11Nov2020  16Nov2020    66977107  SIR-F  0.65  0.001978   \n",
        "        14th   Past  17Nov2020  24Nov2020    66977107  SIR-F  0.42  0.014111   \n",
        "        15th   Past  25Nov2020  03Dec2020    66977107  SIR-F  0.38  0.097496   \n",
        "        16th   Past  04Dec2020  13Dec2020    66977107  SIR-F  1.05  0.019052   \n",
        "\n",
        "                  kappa       rho     sigma  tau  alpha1 [-]  1/gamma [day]  \\\n",
        "Country Phase                                                                 \n",
        "France  0th    0.000059  0.038763  0.004265  360       0.002             58   \n",
        "        1st    0.001473  0.024343  0.021055  360       0.346             11   \n",
        "        2nd    0.000558  0.021357  0.017420  360       0.478             14   \n",
        "        3rd    0.000807  0.025499  0.015544  360       0.034             16   \n",
        "        4th    0.000071  0.030650  0.014930  360       0.001             16   \n",
        "        5th    0.000071  0.025259  0.016224  360       0.001             15   \n",
        "        6th    0.000150  0.025987  0.017436  360       0.001             14   \n",
        "        7th    0.000079  0.024934  0.018240  360       0.001             13   \n",
        "        8th    0.000191  0.029453  0.023312  360       0.001             10   \n",
        "        9th    0.000152  0.025168  0.014910  360       0.001             16   \n",
        "        10th   0.000059  0.027659  0.015725  360       0.002             15   \n",
        "        11th   0.000150  0.028712  0.011235  360       0.002             22   \n",
        "        12th   0.000191  0.026602  0.017866  360       0.001             13   \n",
        "        13th   0.000194  0.013372  0.020379  360       0.002             12   \n",
        "        14th   0.000299  0.013885  0.031968  360       0.014              7   \n",
        "        15th   0.000002  0.015722  0.037587  360       0.097              6   \n",
        "        16th   0.000288  0.024852  0.022851  360       0.019             10   \n",
        "\n",
        "               1/beta [day]  1/alpha2 [day]     RMSLE  Trials       Runtime  \n",
        "Country Phase                                                                \n",
        "France  0th               6            4209  1.400120     245  0 min 10 sec  \n",
        "        1st              10             169  0.187872     228  0 min 10 sec  \n",
        "        2nd              11             447  0.367082     212  0 min 10 sec  \n",
        "        3rd               9             309  0.107313     222  0 min 10 sec  \n",
        "        4th               8            3514  0.031933     225  0 min 10 sec  \n",
        "        5th               9            3514  0.032319     225  0 min 10 sec  \n",
        "        6th               9            1666  0.019375     233  0 min 10 sec  \n",
        "        7th              10            3152  0.033578     231  0 min 10 sec  \n",
        "        8th               8            1308  0.038653     229  0 min 10 sec  \n",
        "        9th               9            1645  0.035339     231  0 min 10 sec  \n",
        "        10th              9            4226  0.032896     234  0 min 10 sec  \n",
        "        11th              8            1666  0.044265     229  0 min 10 sec  \n",
        "        12th              9            1308  0.041189     213  0 min 10 sec  \n",
        "        13th             18            1289  0.010552     231  0 min 10 sec  \n",
        "        14th             18             835  0.030729     229  0 min 10 sec  \n",
        "        15th             15          132837  0.050764     178  0 min 10 sec  \n",
        "        16th             10             867  0.024342     256  0 min 10 sec  "
       ]
      }
     ],
     "prompt_number": 12
    },
    {
     "cell_type": "markdown",
     "metadata": {},
     "source": [
      "## Compare the history of parameters\n",
      "Here, compare the history of parameter values if countries."
     ]
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "# All parameter/day parameter/Rt/OxCGRT\n",
      "analyser.track().head()"
     ],
     "language": "python",
     "metadata": {},
     "outputs": [
      {
       "html": [
        "<div>\n",
        "<style scoped>\n",
        "    .dataframe tbody tr th:only-of-type {\n",
        "        vertical-align: middle;\n",
        "    }\n",
        "\n",
        "    .dataframe tbody tr th {\n",
        "        vertical-align: top;\n",
        "    }\n",
        "\n",
        "    .dataframe thead th {\n",
        "        text-align: right;\n",
        "    }\n",
        "</style>\n",
        "<table border=\"1\" class=\"dataframe\">\n",
        "  <thead>\n",
        "    <tr style=\"text-align: right;\">\n",
        "      <th></th>\n",
        "      <th>Date</th>\n",
        "      <th>Country</th>\n",
        "      <th>theta</th>\n",
        "      <th>kappa</th>\n",
        "      <th>rho</th>\n",
        "      <th>sigma</th>\n",
        "      <th>alpha1 [-]</th>\n",
        "      <th>1/alpha2 [day]</th>\n",
        "      <th>1/beta [day]</th>\n",
        "      <th>1/gamma [day]</th>\n",
        "      <th>...</th>\n",
        "      <th>Cancel_events</th>\n",
        "      <th>Gatherings_restrictions</th>\n",
        "      <th>Transport_closing</th>\n",
        "      <th>Stay_home_restrictions</th>\n",
        "      <th>Internal_movement_restrictions</th>\n",
        "      <th>International_movement_restrictions</th>\n",
        "      <th>Information_campaigns</th>\n",
        "      <th>Testing_policy</th>\n",
        "      <th>Contact_tracing</th>\n",
        "      <th>Stringency_index</th>\n",
        "    </tr>\n",
        "  </thead>\n",
        "  <tbody>\n",
        "    <tr>\n",
        "      <th>0</th>\n",
        "      <td>2020-03-14</td>\n",
        "      <td>Portugal</td>\n",
        "      <td>0.0159678</td>\n",
        "      <td>0.000288427</td>\n",
        "      <td>0.0518065</td>\n",
        "      <td>0.000204125</td>\n",
        "      <td>0.016</td>\n",
        "      <td>866</td>\n",
        "      <td>4</td>\n",
        "      <td>1224</td>\n",
        "      <td>...</td>\n",
        "      <td>0</td>\n",
        "      <td>0</td>\n",
        "      <td>0</td>\n",
        "      <td>0</td>\n",
        "      <td>0</td>\n",
        "      <td>3</td>\n",
        "      <td>2</td>\n",
        "      <td>1</td>\n",
        "      <td>2</td>\n",
        "      <td>32.41</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>1</th>\n",
        "      <td>2020-03-14</td>\n",
        "      <td>Portugal</td>\n",
        "      <td>0.0159678</td>\n",
        "      <td>0.000288427</td>\n",
        "      <td>0.0518065</td>\n",
        "      <td>0.000204125</td>\n",
        "      <td>0.016</td>\n",
        "      <td>866</td>\n",
        "      <td>4</td>\n",
        "      <td>1224</td>\n",
        "      <td>...</td>\n",
        "      <td>0</td>\n",
        "      <td>0</td>\n",
        "      <td>0</td>\n",
        "      <td>0</td>\n",
        "      <td>0</td>\n",
        "      <td>3</td>\n",
        "      <td>2</td>\n",
        "      <td>1</td>\n",
        "      <td>2</td>\n",
        "      <td>32.41</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>2</th>\n",
        "      <td>2020-03-14</td>\n",
        "      <td>Portugal</td>\n",
        "      <td>0.0159678</td>\n",
        "      <td>0.000288427</td>\n",
        "      <td>0.0518065</td>\n",
        "      <td>0.000204125</td>\n",
        "      <td>0.016</td>\n",
        "      <td>866</td>\n",
        "      <td>4</td>\n",
        "      <td>1224</td>\n",
        "      <td>...</td>\n",
        "      <td>0</td>\n",
        "      <td>0</td>\n",
        "      <td>0</td>\n",
        "      <td>0</td>\n",
        "      <td>0</td>\n",
        "      <td>3</td>\n",
        "      <td>2</td>\n",
        "      <td>1</td>\n",
        "      <td>2</td>\n",
        "      <td>32.41</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>3</th>\n",
        "      <td>2020-03-14</td>\n",
        "      <td>Portugal</td>\n",
        "      <td>0.0159678</td>\n",
        "      <td>0.000288427</td>\n",
        "      <td>0.0518065</td>\n",
        "      <td>0.000204125</td>\n",
        "      <td>0.016</td>\n",
        "      <td>866</td>\n",
        "      <td>4</td>\n",
        "      <td>1224</td>\n",
        "      <td>...</td>\n",
        "      <td>0</td>\n",
        "      <td>0</td>\n",
        "      <td>0</td>\n",
        "      <td>0</td>\n",
        "      <td>0</td>\n",
        "      <td>3</td>\n",
        "      <td>2</td>\n",
        "      <td>1</td>\n",
        "      <td>2</td>\n",
        "      <td>32.41</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>4</th>\n",
        "      <td>2020-03-14</td>\n",
        "      <td>Portugal</td>\n",
        "      <td>0.0159678</td>\n",
        "      <td>0.000288427</td>\n",
        "      <td>0.0518065</td>\n",
        "      <td>0.000204125</td>\n",
        "      <td>0.016</td>\n",
        "      <td>866</td>\n",
        "      <td>4</td>\n",
        "      <td>1224</td>\n",
        "      <td>...</td>\n",
        "      <td>0</td>\n",
        "      <td>0</td>\n",
        "      <td>0</td>\n",
        "      <td>0</td>\n",
        "      <td>0</td>\n",
        "      <td>3</td>\n",
        "      <td>2</td>\n",
        "      <td>1</td>\n",
        "      <td>2</td>\n",
        "      <td>32.41</td>\n",
        "    </tr>\n",
        "  </tbody>\n",
        "</table>\n",
        "<p>5 rows \u00d7 23 columns</p>\n",
        "</div>"
       ],
       "output_type": "pyout",
       "prompt_number": 13,
       "text": [
        "        Date   Country      theta        kappa        rho        sigma  \\\n",
        "0 2020-03-14  Portugal  0.0159678  0.000288427  0.0518065  0.000204125   \n",
        "1 2020-03-14  Portugal  0.0159678  0.000288427  0.0518065  0.000204125   \n",
        "2 2020-03-14  Portugal  0.0159678  0.000288427  0.0518065  0.000204125   \n",
        "3 2020-03-14  Portugal  0.0159678  0.000288427  0.0518065  0.000204125   \n",
        "4 2020-03-14  Portugal  0.0159678  0.000288427  0.0518065  0.000204125   \n",
        "\n",
        "  alpha1 [-] 1/alpha2 [day] 1/beta [day] 1/gamma [day]  ... Cancel_events  \\\n",
        "0      0.016            866            4          1224  ...             0   \n",
        "1      0.016            866            4          1224  ...             0   \n",
        "2      0.016            866            4          1224  ...             0   \n",
        "3      0.016            866            4          1224  ...             0   \n",
        "4      0.016            866            4          1224  ...             0   \n",
        "\n",
        "   Gatherings_restrictions  Transport_closing  Stay_home_restrictions  \\\n",
        "0                        0                  0                       0   \n",
        "1                        0                  0                       0   \n",
        "2                        0                  0                       0   \n",
        "3                        0                  0                       0   \n",
        "4                        0                  0                       0   \n",
        "\n",
        "   Internal_movement_restrictions  International_movement_restrictions  \\\n",
        "0                               0                                    3   \n",
        "1                               0                                    3   \n",
        "2                               0                                    3   \n",
        "3                               0                                    3   \n",
        "4                               0                                    3   \n",
        "\n",
        "   Information_campaigns  Testing_policy  Contact_tracing  Stringency_index  \n",
        "0                      2               1                2             32.41  \n",
        "1                      2               1                2             32.41  \n",
        "2                      2               1                2             32.41  \n",
        "3                      2               1                2             32.41  \n",
        "4                      2               1                2             32.41  \n",
        "\n",
        "[5 rows x 23 columns]"
       ]
      }
     ],
     "prompt_number": 13
    },
    {
     "cell_type": "heading",
     "level": 3,
     "metadata": {},
     "source": [
      "$Rt$: Reprodcution number $\\mathrm{[-]}$"
     ]
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "analyser.history(\"Rt\", roll_window=None).tail()"
     ],
     "language": "python",
     "metadata": {},
     "outputs": [
      {
       "output_type": "display_data",
       "png": "\n",
       "text": [
        "<Figure size 648x432 with 1 Axes>"
       ]
      },
      {
       "html": [
        "<div>\n",
        "<style scoped>\n",
        "    .dataframe tbody tr th:only-of-type {\n",
        "        vertical-align: middle;\n",
        "    }\n",
        "\n",
        "    .dataframe tbody tr th {\n",
        "        vertical-align: top;\n",
        "    }\n",
        "\n",
        "    .dataframe thead th {\n",
        "        text-align: right;\n",
        "    }\n",
        "</style>\n",
        "<table border=\"1\" class=\"dataframe\">\n",
        "  <thead>\n",
        "    <tr style=\"text-align: right;\">\n",
        "      <th>Country</th>\n",
        "      <th>Austria</th>\n",
        "      <th>Belgium</th>\n",
        "      <th>Denmark</th>\n",
        "      <th>France</th>\n",
        "      <th>Netherlands</th>\n",
        "      <th>Portugal</th>\n",
        "      <th>Ukraine</th>\n",
        "      <th>United Kingdom</th>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>Date</th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "    </tr>\n",
        "  </thead>\n",
        "  <tbody>\n",
        "    <tr>\n",
        "      <th>2020-12-09</th>\n",
        "      <td>1.07</td>\n",
        "      <td>0.96</td>\n",
        "      <td>1.25</td>\n",
        "      <td>1.05</td>\n",
        "      <td>1.02</td>\n",
        "      <td>1.02</td>\n",
        "      <td>0.82</td>\n",
        "      <td>1.37</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>2020-12-10</th>\n",
        "      <td>1.07</td>\n",
        "      <td>0.96</td>\n",
        "      <td>1.25</td>\n",
        "      <td>1.05</td>\n",
        "      <td>1.02</td>\n",
        "      <td>1.02</td>\n",
        "      <td>0.82</td>\n",
        "      <td>1.37</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>2020-12-11</th>\n",
        "      <td>1.07</td>\n",
        "      <td>0.96</td>\n",
        "      <td>1.25</td>\n",
        "      <td>1.05</td>\n",
        "      <td>1.02</td>\n",
        "      <td>1.02</td>\n",
        "      <td>0.82</td>\n",
        "      <td>1.37</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>2020-12-12</th>\n",
        "      <td>1.07</td>\n",
        "      <td>0.96</td>\n",
        "      <td>1.25</td>\n",
        "      <td>1.05</td>\n",
        "      <td>1.02</td>\n",
        "      <td>1.02</td>\n",
        "      <td>0.82</td>\n",
        "      <td>1.37</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>2020-12-13</th>\n",
        "      <td>1.07</td>\n",
        "      <td>0.96</td>\n",
        "      <td>1.25</td>\n",
        "      <td>1.05</td>\n",
        "      <td>1.02</td>\n",
        "      <td>1.02</td>\n",
        "      <td>0.82</td>\n",
        "      <td>1.37</td>\n",
        "    </tr>\n",
        "  </tbody>\n",
        "</table>\n",
        "</div>"
       ],
       "output_type": "pyout",
       "prompt_number": 14,
       "text": [
        "Country     Austria  Belgium  Denmark  France  Netherlands  Portugal  Ukraine  \\\n",
        "Date                                                                            \n",
        "2020-12-09     1.07     0.96     1.25    1.05         1.02      1.02     0.82   \n",
        "2020-12-10     1.07     0.96     1.25    1.05         1.02      1.02     0.82   \n",
        "2020-12-11     1.07     0.96     1.25    1.05         1.02      1.02     0.82   \n",
        "2020-12-12     1.07     0.96     1.25    1.05         1.02      1.02     0.82   \n",
        "2020-12-13     1.07     0.96     1.25    1.05         1.02      1.02     0.82   \n",
        "\n",
        "Country     United Kingdom  \n",
        "Date                        \n",
        "2020-12-09            1.37  \n",
        "2020-12-10            1.37  \n",
        "2020-12-11            1.37  \n",
        "2020-12-12            1.37  \n",
        "2020-12-13            1.37  "
       ]
      }
     ],
     "prompt_number": 14
    },
    {
     "cell_type": "heading",
     "level": 3,
     "metadata": {},
     "source": [
      "$\\rho$: Effective contact rate $\\mathrm{[-]}$"
     ]
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "analyser.history(\"rho\", roll_window=None).tail()"
     ],
     "language": "python",
     "metadata": {},
     "outputs": [
      {
       "output_type": "display_data",
       "png": "\n",
       "text": [
        "<Figure size 648x432 with 1 Axes>"
       ]
      },
      {
       "html": [
        "<div>\n",
        "<style scoped>\n",
        "    .dataframe tbody tr th:only-of-type {\n",
        "        vertical-align: middle;\n",
        "    }\n",
        "\n",
        "    .dataframe tbody tr th {\n",
        "        vertical-align: top;\n",
        "    }\n",
        "\n",
        "    .dataframe thead th {\n",
        "        text-align: right;\n",
        "    }\n",
        "</style>\n",
        "<table border=\"1\" class=\"dataframe\">\n",
        "  <thead>\n",
        "    <tr style=\"text-align: right;\">\n",
        "      <th>Country</th>\n",
        "      <th>Austria</th>\n",
        "      <th>Belgium</th>\n",
        "      <th>Denmark</th>\n",
        "      <th>France</th>\n",
        "      <th>Netherlands</th>\n",
        "      <th>Portugal</th>\n",
        "      <th>Ukraine</th>\n",
        "      <th>United Kingdom</th>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>Date</th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "    </tr>\n",
        "  </thead>\n",
        "  <tbody>\n",
        "    <tr>\n",
        "      <th>2020-12-09</th>\n",
        "      <td>0.012868</td>\n",
        "      <td>0.015954</td>\n",
        "      <td>0.022887</td>\n",
        "      <td>0.024852</td>\n",
        "      <td>0.022517</td>\n",
        "      <td>0.012355</td>\n",
        "      <td>0.007977</td>\n",
        "      <td>0.02546</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>2020-12-10</th>\n",
        "      <td>0.012868</td>\n",
        "      <td>0.015954</td>\n",
        "      <td>0.022887</td>\n",
        "      <td>0.024852</td>\n",
        "      <td>0.022517</td>\n",
        "      <td>0.012355</td>\n",
        "      <td>0.007977</td>\n",
        "      <td>0.02546</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>2020-12-11</th>\n",
        "      <td>0.012868</td>\n",
        "      <td>0.015954</td>\n",
        "      <td>0.022887</td>\n",
        "      <td>0.024852</td>\n",
        "      <td>0.022517</td>\n",
        "      <td>0.012355</td>\n",
        "      <td>0.007977</td>\n",
        "      <td>0.02546</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>2020-12-12</th>\n",
        "      <td>0.012868</td>\n",
        "      <td>0.015954</td>\n",
        "      <td>0.022887</td>\n",
        "      <td>0.024852</td>\n",
        "      <td>0.022517</td>\n",
        "      <td>0.012355</td>\n",
        "      <td>0.007977</td>\n",
        "      <td>0.02546</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>2020-12-13</th>\n",
        "      <td>0.012868</td>\n",
        "      <td>0.015954</td>\n",
        "      <td>0.022887</td>\n",
        "      <td>0.024852</td>\n",
        "      <td>0.022517</td>\n",
        "      <td>0.012355</td>\n",
        "      <td>0.007977</td>\n",
        "      <td>0.02546</td>\n",
        "    </tr>\n",
        "  </tbody>\n",
        "</table>\n",
        "</div>"
       ],
       "output_type": "pyout",
       "prompt_number": 15,
       "text": [
        "Country      Austria   Belgium   Denmark    France  Netherlands  Portugal  \\\n",
        "Date                                                                        \n",
        "2020-12-09  0.012868  0.015954  0.022887  0.024852     0.022517  0.012355   \n",
        "2020-12-10  0.012868  0.015954  0.022887  0.024852     0.022517  0.012355   \n",
        "2020-12-11  0.012868  0.015954  0.022887  0.024852     0.022517  0.012355   \n",
        "2020-12-12  0.012868  0.015954  0.022887  0.024852     0.022517  0.012355   \n",
        "2020-12-13  0.012868  0.015954  0.022887  0.024852     0.022517  0.012355   \n",
        "\n",
        "Country      Ukraine  United Kingdom  \n",
        "Date                                  \n",
        "2020-12-09  0.007977         0.02546  \n",
        "2020-12-10  0.007977         0.02546  \n",
        "2020-12-11  0.007977         0.02546  \n",
        "2020-12-12  0.007977         0.02546  \n",
        "2020-12-13  0.007977         0.02546  "
       ]
      }
     ],
     "prompt_number": 15
    },
    {
     "cell_type": "heading",
     "level": 3,
     "metadata": {},
     "source": [
      "$\\sigma$: Recovery rate $\\mathrm{[-]}$"
     ]
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "analyser.history(\"sigma\", roll_window=None).tail()"
     ],
     "language": "python",
     "metadata": {},
     "outputs": [
      {
       "output_type": "display_data",
       "png": "\n",
       "text": [
        "<Figure size 648x432 with 1 Axes>"
       ]
      },
      {
       "html": [
        "<div>\n",
        "<style scoped>\n",
        "    .dataframe tbody tr th:only-of-type {\n",
        "        vertical-align: middle;\n",
        "    }\n",
        "\n",
        "    .dataframe tbody tr th {\n",
        "        vertical-align: top;\n",
        "    }\n",
        "\n",
        "    .dataframe thead th {\n",
        "        text-align: right;\n",
        "    }\n",
        "</style>\n",
        "<table border=\"1\" class=\"dataframe\">\n",
        "  <thead>\n",
        "    <tr style=\"text-align: right;\">\n",
        "      <th>Country</th>\n",
        "      <th>Austria</th>\n",
        "      <th>Belgium</th>\n",
        "      <th>Denmark</th>\n",
        "      <th>France</th>\n",
        "      <th>Netherlands</th>\n",
        "      <th>Portugal</th>\n",
        "      <th>Ukraine</th>\n",
        "      <th>United Kingdom</th>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>Date</th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "    </tr>\n",
        "  </thead>\n",
        "  <tbody>\n",
        "    <tr>\n",
        "      <th>2020-12-09</th>\n",
        "      <td>0.011795</td>\n",
        "      <td>0.015203</td>\n",
        "      <td>0.018227</td>\n",
        "      <td>0.022851</td>\n",
        "      <td>0.021933</td>\n",
        "      <td>0.011915</td>\n",
        "      <td>0.0095</td>\n",
        "      <td>0.017815</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>2020-12-10</th>\n",
        "      <td>0.011795</td>\n",
        "      <td>0.015203</td>\n",
        "      <td>0.018227</td>\n",
        "      <td>0.022851</td>\n",
        "      <td>0.021933</td>\n",
        "      <td>0.011915</td>\n",
        "      <td>0.0095</td>\n",
        "      <td>0.017815</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>2020-12-11</th>\n",
        "      <td>0.011795</td>\n",
        "      <td>0.015203</td>\n",
        "      <td>0.018227</td>\n",
        "      <td>0.022851</td>\n",
        "      <td>0.021933</td>\n",
        "      <td>0.011915</td>\n",
        "      <td>0.0095</td>\n",
        "      <td>0.017815</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>2020-12-12</th>\n",
        "      <td>0.011795</td>\n",
        "      <td>0.015203</td>\n",
        "      <td>0.018227</td>\n",
        "      <td>0.022851</td>\n",
        "      <td>0.021933</td>\n",
        "      <td>0.011915</td>\n",
        "      <td>0.0095</td>\n",
        "      <td>0.017815</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>2020-12-13</th>\n",
        "      <td>0.011795</td>\n",
        "      <td>0.015203</td>\n",
        "      <td>0.018227</td>\n",
        "      <td>0.022851</td>\n",
        "      <td>0.021933</td>\n",
        "      <td>0.011915</td>\n",
        "      <td>0.0095</td>\n",
        "      <td>0.017815</td>\n",
        "    </tr>\n",
        "  </tbody>\n",
        "</table>\n",
        "</div>"
       ],
       "output_type": "pyout",
       "prompt_number": 16,
       "text": [
        "Country      Austria   Belgium   Denmark    France  Netherlands  Portugal  \\\n",
        "Date                                                                        \n",
        "2020-12-09  0.011795  0.015203  0.018227  0.022851     0.021933  0.011915   \n",
        "2020-12-10  0.011795  0.015203  0.018227  0.022851     0.021933  0.011915   \n",
        "2020-12-11  0.011795  0.015203  0.018227  0.022851     0.021933  0.011915   \n",
        "2020-12-12  0.011795  0.015203  0.018227  0.022851     0.021933  0.011915   \n",
        "2020-12-13  0.011795  0.015203  0.018227  0.022851     0.021933  0.011915   \n",
        "\n",
        "Country     Ukraine  United Kingdom  \n",
        "Date                                 \n",
        "2020-12-09   0.0095        0.017815  \n",
        "2020-12-10   0.0095        0.017815  \n",
        "2020-12-11   0.0095        0.017815  \n",
        "2020-12-12   0.0095        0.017815  \n",
        "2020-12-13   0.0095        0.017815  "
       ]
      }
     ],
     "prompt_number": 16
    },
    {
     "cell_type": "heading",
     "level": 3,
     "metadata": {},
     "source": [
      "$\\kappa$: Mortality rate of infected cases $\\mathrm{[-]}$"
     ]
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "analyser.history(\"kappa\", roll_window=None).tail()"
     ],
     "language": "python",
     "metadata": {},
     "outputs": [
      {
       "output_type": "display_data",
       "png": "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\n",
       "text": [
        "<Figure size 648x432 with 1 Axes>"
       ]
      },
      {
       "html": [
        "<div>\n",
        "<style scoped>\n",
        "    .dataframe tbody tr th:only-of-type {\n",
        "        vertical-align: middle;\n",
        "    }\n",
        "\n",
        "    .dataframe tbody tr th {\n",
        "        vertical-align: top;\n",
        "    }\n",
        "\n",
        "    .dataframe thead th {\n",
        "        text-align: right;\n",
        "    }\n",
        "</style>\n",
        "<table border=\"1\" class=\"dataframe\">\n",
        "  <thead>\n",
        "    <tr style=\"text-align: right;\">\n",
        "      <th>Country</th>\n",
        "      <th>Austria</th>\n",
        "      <th>Belgium</th>\n",
        "      <th>Denmark</th>\n",
        "      <th>France</th>\n",
        "      <th>Netherlands</th>\n",
        "      <th>Portugal</th>\n",
        "      <th>Ukraine</th>\n",
        "      <th>United Kingdom</th>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>Date</th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "    </tr>\n",
        "  </thead>\n",
        "  <tbody>\n",
        "    <tr>\n",
        "      <th>2020-12-09</th>\n",
        "      <td>0.000229</td>\n",
        "      <td>0.000526</td>\n",
        "      <td>0.000059</td>\n",
        "      <td>0.000288</td>\n",
        "      <td>0.000191</td>\n",
        "      <td>0.000228</td>\n",
        "      <td>0.000059</td>\n",
        "      <td>0.000418</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>2020-12-10</th>\n",
        "      <td>0.000229</td>\n",
        "      <td>0.000526</td>\n",
        "      <td>0.000059</td>\n",
        "      <td>0.000288</td>\n",
        "      <td>0.000191</td>\n",
        "      <td>0.000228</td>\n",
        "      <td>0.000059</td>\n",
        "      <td>0.000418</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>2020-12-11</th>\n",
        "      <td>0.000229</td>\n",
        "      <td>0.000526</td>\n",
        "      <td>0.000059</td>\n",
        "      <td>0.000288</td>\n",
        "      <td>0.000191</td>\n",
        "      <td>0.000228</td>\n",
        "      <td>0.000059</td>\n",
        "      <td>0.000418</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>2020-12-12</th>\n",
        "      <td>0.000229</td>\n",
        "      <td>0.000526</td>\n",
        "      <td>0.000059</td>\n",
        "      <td>0.000288</td>\n",
        "      <td>0.000191</td>\n",
        "      <td>0.000228</td>\n",
        "      <td>0.000059</td>\n",
        "      <td>0.000418</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>2020-12-13</th>\n",
        "      <td>0.000229</td>\n",
        "      <td>0.000526</td>\n",
        "      <td>0.000059</td>\n",
        "      <td>0.000288</td>\n",
        "      <td>0.000191</td>\n",
        "      <td>0.000228</td>\n",
        "      <td>0.000059</td>\n",
        "      <td>0.000418</td>\n",
        "    </tr>\n",
        "  </tbody>\n",
        "</table>\n",
        "</div>"
       ],
       "output_type": "pyout",
       "prompt_number": 17,
       "text": [
        "Country      Austria   Belgium   Denmark    France  Netherlands  Portugal  \\\n",
        "Date                                                                        \n",
        "2020-12-09  0.000229  0.000526  0.000059  0.000288     0.000191  0.000228   \n",
        "2020-12-10  0.000229  0.000526  0.000059  0.000288     0.000191  0.000228   \n",
        "2020-12-11  0.000229  0.000526  0.000059  0.000288     0.000191  0.000228   \n",
        "2020-12-12  0.000229  0.000526  0.000059  0.000288     0.000191  0.000228   \n",
        "2020-12-13  0.000229  0.000526  0.000059  0.000288     0.000191  0.000228   \n",
        "\n",
        "Country      Ukraine  United Kingdom  \n",
        "Date                                  \n",
        "2020-12-09  0.000059        0.000418  \n",
        "2020-12-10  0.000059        0.000418  \n",
        "2020-12-11  0.000059        0.000418  \n",
        "2020-12-12  0.000059        0.000418  \n",
        "2020-12-13  0.000059        0.000418  "
       ]
      }
     ],
     "prompt_number": 17
    },
    {
     "cell_type": "heading",
     "level": 3,
     "metadata": {},
     "source": [
      "$\\theta$: Mortality rate of S$^\\ast$ cases $\\mathrm{[-]}$"
     ]
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "analyser.history(\"theta\", roll_window=None).tail()"
     ],
     "language": "python",
     "metadata": {},
     "outputs": [
      {
       "output_type": "display_data",
       "png": "\n",
       "text": [
        "<Figure size 648x432 with 1 Axes>"
       ]
      },
      {
       "html": [
        "<div>\n",
        "<style scoped>\n",
        "    .dataframe tbody tr th:only-of-type {\n",
        "        vertical-align: middle;\n",
        "    }\n",
        "\n",
        "    .dataframe tbody tr th {\n",
        "        vertical-align: top;\n",
        "    }\n",
        "\n",
        "    .dataframe thead th {\n",
        "        text-align: right;\n",
        "    }\n",
        "</style>\n",
        "<table border=\"1\" class=\"dataframe\">\n",
        "  <thead>\n",
        "    <tr style=\"text-align: right;\">\n",
        "      <th>Country</th>\n",
        "      <th>Austria</th>\n",
        "      <th>Belgium</th>\n",
        "      <th>Denmark</th>\n",
        "      <th>France</th>\n",
        "      <th>Netherlands</th>\n",
        "      <th>Portugal</th>\n",
        "      <th>Ukraine</th>\n",
        "      <th>United Kingdom</th>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>Date</th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "    </tr>\n",
        "  </thead>\n",
        "  <tbody>\n",
        "    <tr>\n",
        "      <th>2020-12-09</th>\n",
        "      <td>0.000121</td>\n",
        "      <td>0.054262</td>\n",
        "      <td>0.002689</td>\n",
        "      <td>0.019052</td>\n",
        "      <td>0.001486</td>\n",
        "      <td>0.000121</td>\n",
        "      <td>0.015059</td>\n",
        "      <td>0.021205</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>2020-12-10</th>\n",
        "      <td>0.000121</td>\n",
        "      <td>0.054262</td>\n",
        "      <td>0.002689</td>\n",
        "      <td>0.019052</td>\n",
        "      <td>0.001486</td>\n",
        "      <td>0.000121</td>\n",
        "      <td>0.015059</td>\n",
        "      <td>0.021205</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>2020-12-11</th>\n",
        "      <td>0.000121</td>\n",
        "      <td>0.054262</td>\n",
        "      <td>0.002689</td>\n",
        "      <td>0.019052</td>\n",
        "      <td>0.001486</td>\n",
        "      <td>0.000121</td>\n",
        "      <td>0.015059</td>\n",
        "      <td>0.021205</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>2020-12-12</th>\n",
        "      <td>0.000121</td>\n",
        "      <td>0.054262</td>\n",
        "      <td>0.002689</td>\n",
        "      <td>0.019052</td>\n",
        "      <td>0.001486</td>\n",
        "      <td>0.000121</td>\n",
        "      <td>0.015059</td>\n",
        "      <td>0.021205</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>2020-12-13</th>\n",
        "      <td>0.000121</td>\n",
        "      <td>0.054262</td>\n",
        "      <td>0.002689</td>\n",
        "      <td>0.019052</td>\n",
        "      <td>0.001486</td>\n",
        "      <td>0.000121</td>\n",
        "      <td>0.015059</td>\n",
        "      <td>0.021205</td>\n",
        "    </tr>\n",
        "  </tbody>\n",
        "</table>\n",
        "</div>"
       ],
       "output_type": "pyout",
       "prompt_number": 18,
       "text": [
        "Country      Austria   Belgium   Denmark    France  Netherlands  Portugal  \\\n",
        "Date                                                                        \n",
        "2020-12-09  0.000121  0.054262  0.002689  0.019052     0.001486  0.000121   \n",
        "2020-12-10  0.000121  0.054262  0.002689  0.019052     0.001486  0.000121   \n",
        "2020-12-11  0.000121  0.054262  0.002689  0.019052     0.001486  0.000121   \n",
        "2020-12-12  0.000121  0.054262  0.002689  0.019052     0.001486  0.000121   \n",
        "2020-12-13  0.000121  0.054262  0.002689  0.019052     0.001486  0.000121   \n",
        "\n",
        "Country      Ukraine  United Kingdom  \n",
        "Date                                  \n",
        "2020-12-09  0.015059        0.021205  \n",
        "2020-12-10  0.015059        0.021205  \n",
        "2020-12-11  0.015059        0.021205  \n",
        "2020-12-12  0.015059        0.021205  \n",
        "2020-12-13  0.015059        0.021205  "
       ]
      }
     ],
     "prompt_number": 18
    },
    {
     "cell_type": "markdown",
     "metadata": {},
     "source": [
      "## (Experimental): Relationship of OxCGRT index and parameter values\n",
      "Government responses will impact on parameter values of ODE models about 14 days later. Here, we will investigate on the relationship of [stringency index (from OxCGRT)](https://github.com/OxCGRT/covid-policy-tracker/blob/master/documentation/index_methodology.md) and reproduction number/model parameters.\n"
     ]
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "%matplotlib inline\n",
      "from matplotlib import pyplot as plt\n",
      "import seaborn as sns\n",
      "import pandas as pd"
     ],
     "language": "python",
     "metadata": {},
     "outputs": [],
     "prompt_number": 19
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "df = analyser.track()\n",
      "param_cols = [\"Rt\", *cs.SIRF.PARAMETERS]\n",
      "oxcgrt_cols = oxcgrt_data.OXCGRT_VARS[:]\n",
      "cols = param_cols + oxcgrt_cols\n",
      "delay = 14\n",
      "\n",
      "for col in param_cols:\n",
      "    df[col] = pd.to_numeric(df[col], errors=\"coerce\")\n",
      "    df[col] = df.groupby(\"Country\")[col].shift(0 - delay)\n",
      "\n",
      "df = df.dropna(how=\"any\")\n",
      "df = df.loc[:, [\"Date\", \"Country\", *cols]]\n",
      "track_df = df.copy()\n",
      "track_df.info()"
     ],
     "language": "python",
     "metadata": {},
     "outputs": [
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "<class 'pandas.core.frame.DataFrame'>\n",
        "Int64Index: 25689 entries, 0 to 25786\n",
        "Data columns (total 19 columns):\n",
        " #   Column                               Non-Null Count  Dtype         \n",
        "---  ------                               --------------  -----         \n",
        " 0   Date                                 25689 non-null  datetime64[ns]\n",
        " 1   Country                              25689 non-null  object        \n",
        " 2   Rt                                   25689 non-null  float64       \n",
        " 3   theta                                25689 non-null  float64       \n",
        " 4   kappa                                25689 non-null  float64       \n",
        " 5   rho                                  25689 non-null  float64       \n",
        " 6   sigma                                25689 non-null  float64       \n",
        " 7   School_closing                       25689 non-null  int64         \n",
        " 8   Workplace_closing                    25689 non-null  int64         \n",
        " 9   Cancel_events                        25689 non-null  int64         \n",
        " 10  Gatherings_restrictions              25689 non-null  int64         \n",
        " 11  Transport_closing                    25689 non-null  int64         \n",
        " 12  Stay_home_restrictions               25689 non-null  int64         \n",
        " 13  Internal_movement_restrictions       25689 non-null  int64         \n",
        " 14  International_movement_restrictions  25689 non-null  int64         \n",
        " 15  Information_campaigns                25689 non-null  int64         \n",
        " 16  Testing_policy                       25689 non-null  int64         \n",
        " 17  Contact_tracing                      25689 non-null  int64         \n",
        " 18  Stringency_index                     25689 non-null  float64       \n",
        "dtypes: datetime64[ns](1), float64(6), int64(11), object(1)\n",
        "memory usage: 3.9+ MB\n"
       ]
      }
     ],
     "prompt_number": 20
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "# Correlation\n",
      "df = track_df.copy()\n",
      "df.corr().style.background_gradient(axis=None)"
     ],
     "language": "python",
     "metadata": {},
     "outputs": [
      {
       "html": [
        "<style  type=\"text/css\" >\n",
        "#T_f43832a4_3d1d_11eb_813f_525400a98544row0_col0,#T_f43832a4_3d1d_11eb_813f_525400a98544row1_col1,#T_f43832a4_3d1d_11eb_813f_525400a98544row2_col2,#T_f43832a4_3d1d_11eb_813f_525400a98544row3_col3,#T_f43832a4_3d1d_11eb_813f_525400a98544row4_col4,#T_f43832a4_3d1d_11eb_813f_525400a98544row5_col5,#T_f43832a4_3d1d_11eb_813f_525400a98544row6_col6,#T_f43832a4_3d1d_11eb_813f_525400a98544row7_col7,#T_f43832a4_3d1d_11eb_813f_525400a98544row8_col8,#T_f43832a4_3d1d_11eb_813f_525400a98544row9_col9,#T_f43832a4_3d1d_11eb_813f_525400a98544row10_col10,#T_f43832a4_3d1d_11eb_813f_525400a98544row11_col11,#T_f43832a4_3d1d_11eb_813f_525400a98544row12_col12,#T_f43832a4_3d1d_11eb_813f_525400a98544row13_col13,#T_f43832a4_3d1d_11eb_813f_525400a98544row14_col14,#T_f43832a4_3d1d_11eb_813f_525400a98544row15_col15,#T_f43832a4_3d1d_11eb_813f_525400a98544row16_col16{\n",
        "            background-color:  #023858;\n",
        "            color:  #f1f1f1;\n",
        "        }#T_f43832a4_3d1d_11eb_813f_525400a98544row0_col1,#T_f43832a4_3d1d_11eb_813f_525400a98544row0_col10,#T_f43832a4_3d1d_11eb_813f_525400a98544row1_col0,#T_f43832a4_3d1d_11eb_813f_525400a98544row1_col3,#T_f43832a4_3d1d_11eb_813f_525400a98544row3_col1,#T_f43832a4_3d1d_11eb_813f_525400a98544row10_col0{\n",
        "            background-color:  #d1d2e6;\n",
        "            color:  #000000;\n",
        "        }#T_f43832a4_3d1d_11eb_813f_525400a98544row0_col2,#T_f43832a4_3d1d_11eb_813f_525400a98544row0_col5,#T_f43832a4_3d1d_11eb_813f_525400a98544row2_col0,#T_f43832a4_3d1d_11eb_813f_525400a98544row5_col0{\n",
        "            background-color:  #bfc9e1;\n",
        "            color:  #000000;\n",
        "        }#T_f43832a4_3d1d_11eb_813f_525400a98544row0_col3,#T_f43832a4_3d1d_11eb_813f_525400a98544row3_col0,#T_f43832a4_3d1d_11eb_813f_525400a98544row7_col13,#T_f43832a4_3d1d_11eb_813f_525400a98544row13_col7{\n",
        "            background-color:  #2182b9;\n",
        "            color:  #000000;\n",
        "        }#T_f43832a4_3d1d_11eb_813f_525400a98544row0_col4,#T_f43832a4_3d1d_11eb_813f_525400a98544row4_col0{\n",
        "            background-color:  #f8f1f8;\n",
        "            color:  #000000;\n",
        "        }#T_f43832a4_3d1d_11eb_813f_525400a98544row0_col6,#T_f43832a4_3d1d_11eb_813f_525400a98544row6_col0{\n",
        "            background-color:  #c8cde4;\n",
        "            color:  #000000;\n",
        "        }#T_f43832a4_3d1d_11eb_813f_525400a98544row0_col7,#T_f43832a4_3d1d_11eb_813f_525400a98544row7_col0{\n",
        "            background-color:  #dedcec;\n",
        "            color:  #000000;\n",
        "        }#T_f43832a4_3d1d_11eb_813f_525400a98544row0_col8,#T_f43832a4_3d1d_11eb_813f_525400a98544row8_col0{\n",
        "            background-color:  #e8e4f0;\n",
        "            color:  #000000;\n",
        "        }#T_f43832a4_3d1d_11eb_813f_525400a98544row0_col9,#T_f43832a4_3d1d_11eb_813f_525400a98544row9_col0{\n",
        "            background-color:  #dddbec;\n",
        "            color:  #000000;\n",
        "        }#T_f43832a4_3d1d_11eb_813f_525400a98544row0_col11,#T_f43832a4_3d1d_11eb_813f_525400a98544row11_col0{\n",
        "            background-color:  #e1dfed;\n",
        "            color:  #000000;\n",
        "        }#T_f43832a4_3d1d_11eb_813f_525400a98544row0_col12,#T_f43832a4_3d1d_11eb_813f_525400a98544row5_col15,#T_f43832a4_3d1d_11eb_813f_525400a98544row12_col0,#T_f43832a4_3d1d_11eb_813f_525400a98544row15_col5{\n",
        "            background-color:  #d4d4e8;\n",
        "            color:  #000000;\n",
        "        }#T_f43832a4_3d1d_11eb_813f_525400a98544row0_col13,#T_f43832a4_3d1d_11eb_813f_525400a98544row13_col0{\n",
        "            background-color:  #ced0e6;\n",
        "            color:  #000000;\n",
        "        }#T_f43832a4_3d1d_11eb_813f_525400a98544row0_col14,#T_f43832a4_3d1d_11eb_813f_525400a98544row14_col0{\n",
        "            background-color:  #e0deed;\n",
        "            color:  #000000;\n",
        "        }#T_f43832a4_3d1d_11eb_813f_525400a98544row0_col15,#T_f43832a4_3d1d_11eb_813f_525400a98544row15_col0{\n",
        "            background-color:  #d7d6e9;\n",
        "            color:  #000000;\n",
        "        }#T_f43832a4_3d1d_11eb_813f_525400a98544row0_col16,#T_f43832a4_3d1d_11eb_813f_525400a98544row16_col0{\n",
        "            background-color:  #d3d4e7;\n",
        "            color:  #000000;\n",
        "        }#T_f43832a4_3d1d_11eb_813f_525400a98544row1_col2,#T_f43832a4_3d1d_11eb_813f_525400a98544row2_col1,#T_f43832a4_3d1d_11eb_813f_525400a98544row2_col12,#T_f43832a4_3d1d_11eb_813f_525400a98544row12_col2{\n",
        "            background-color:  #91b5d6;\n",
        "            color:  #000000;\n",
        "        }#T_f43832a4_3d1d_11eb_813f_525400a98544row1_col4,#T_f43832a4_3d1d_11eb_813f_525400a98544row4_col1{\n",
        "            background-color:  #83afd3;\n",
        "            color:  #000000;\n",
        "        }#T_f43832a4_3d1d_11eb_813f_525400a98544row1_col5,#T_f43832a4_3d1d_11eb_813f_525400a98544row5_col1,#T_f43832a4_3d1d_11eb_813f_525400a98544row9_col10,#T_f43832a4_3d1d_11eb_813f_525400a98544row10_col9,#T_f43832a4_3d1d_11eb_813f_525400a98544row11_col13,#T_f43832a4_3d1d_11eb_813f_525400a98544row13_col11{\n",
        "            background-color:  #509ac6;\n",
        "            color:  #000000;\n",
        "        }#T_f43832a4_3d1d_11eb_813f_525400a98544row1_col6,#T_f43832a4_3d1d_11eb_813f_525400a98544row6_col1{\n",
        "            background-color:  #6ba5cd;\n",
        "            color:  #000000;\n",
        "        }#T_f43832a4_3d1d_11eb_813f_525400a98544row1_col7,#T_f43832a4_3d1d_11eb_813f_525400a98544row7_col1{\n",
        "            background-color:  #67a4cc;\n",
        "            color:  #000000;\n",
        "        }#T_f43832a4_3d1d_11eb_813f_525400a98544row1_col8,#T_f43832a4_3d1d_11eb_813f_525400a98544row4_col10,#T_f43832a4_3d1d_11eb_813f_525400a98544row8_col1,#T_f43832a4_3d1d_11eb_813f_525400a98544row10_col4{\n",
        "            background-color:  #7eadd1;\n",
        "            color:  #000000;\n",
        "        }#T_f43832a4_3d1d_11eb_813f_525400a98544row1_col9,#T_f43832a4_3d1d_11eb_813f_525400a98544row9_col1{\n",
        "            background-color:  #9fbad9;\n",
        "            color:  #000000;\n",
        "        }#T_f43832a4_3d1d_11eb_813f_525400a98544row1_col10,#T_f43832a4_3d1d_11eb_813f_525400a98544row10_col1{\n",
        "            background-color:  #89b1d4;\n",
        "            color:  #000000;\n",
        "        }#T_f43832a4_3d1d_11eb_813f_525400a98544row1_col11,#T_f43832a4_3d1d_11eb_813f_525400a98544row10_col12,#T_f43832a4_3d1d_11eb_813f_525400a98544row11_col1,#T_f43832a4_3d1d_11eb_813f_525400a98544row12_col10{\n",
        "            background-color:  #5a9ec9;\n",
        "            color:  #000000;\n",
        "        }#T_f43832a4_3d1d_11eb_813f_525400a98544row1_col12,#T_f43832a4_3d1d_11eb_813f_525400a98544row12_col1{\n",
        "            background-color:  #93b5d6;\n",
        "            color:  #000000;\n",
        "        }#T_f43832a4_3d1d_11eb_813f_525400a98544row1_col13,#T_f43832a4_3d1d_11eb_813f_525400a98544row13_col1{\n",
        "            background-color:  #99b8d8;\n",
        "            color:  #000000;\n",
        "        }#T_f43832a4_3d1d_11eb_813f_525400a98544row1_col14,#T_f43832a4_3d1d_11eb_813f_525400a98544row14_col1{\n",
        "            background-color:  #e0dded;\n",
        "            color:  #000000;\n",
        "        }#T_f43832a4_3d1d_11eb_813f_525400a98544row1_col15,#T_f43832a4_3d1d_11eb_813f_525400a98544row7_col15,#T_f43832a4_3d1d_11eb_813f_525400a98544row15_col1,#T_f43832a4_3d1d_11eb_813f_525400a98544row15_col7{\n",
        "            background-color:  #bcc7e1;\n",
        "            color:  #000000;\n",
        "        }#T_f43832a4_3d1d_11eb_813f_525400a98544row1_col16,#T_f43832a4_3d1d_11eb_813f_525400a98544row16_col1{\n",
        "            background-color:  #529bc7;\n",
        "            color:  #000000;\n",
        "        }#T_f43832a4_3d1d_11eb_813f_525400a98544row2_col3,#T_f43832a4_3d1d_11eb_813f_525400a98544row3_col2{\n",
        "            background-color:  #b1c2de;\n",
        "            color:  #000000;\n",
        "        }#T_f43832a4_3d1d_11eb_813f_525400a98544row2_col4,#T_f43832a4_3d1d_11eb_813f_525400a98544row4_col2,#T_f43832a4_3d1d_11eb_813f_525400a98544row7_col14,#T_f43832a4_3d1d_11eb_813f_525400a98544row14_col7{\n",
        "            background-color:  #a1bbda;\n",
        "            color:  #000000;\n",
        "        }#T_f43832a4_3d1d_11eb_813f_525400a98544row2_col5,#T_f43832a4_3d1d_11eb_813f_525400a98544row5_col2{\n",
        "            background-color:  #bbc7e0;\n",
        "            color:  #000000;\n",
        "        }#T_f43832a4_3d1d_11eb_813f_525400a98544row2_col6,#T_f43832a4_3d1d_11eb_813f_525400a98544row6_col2,#T_f43832a4_3d1d_11eb_813f_525400a98544row11_col14,#T_f43832a4_3d1d_11eb_813f_525400a98544row14_col11{\n",
        "            background-color:  #a4bcda;\n",
        "            color:  #000000;\n",
        "        }#T_f43832a4_3d1d_11eb_813f_525400a98544row2_col7,#T_f43832a4_3d1d_11eb_813f_525400a98544row7_col2{\n",
        "            background-color:  #97b7d7;\n",
        "            color:  #000000;\n",
        "        }#T_f43832a4_3d1d_11eb_813f_525400a98544row2_col8,#T_f43832a4_3d1d_11eb_813f_525400a98544row8_col2{\n",
        "            background-color:  #cdd0e5;\n",
        "            color:  #000000;\n",
        "        }#T_f43832a4_3d1d_11eb_813f_525400a98544row2_col9,#T_f43832a4_3d1d_11eb_813f_525400a98544row9_col2,#T_f43832a4_3d1d_11eb_813f_525400a98544row11_col15,#T_f43832a4_3d1d_11eb_813f_525400a98544row15_col11{\n",
        "            background-color:  #a7bddb;\n",
        "            color:  #000000;\n",
        "        }#T_f43832a4_3d1d_11eb_813f_525400a98544row2_col10,#T_f43832a4_3d1d_11eb_813f_525400a98544row10_col2,#T_f43832a4_3d1d_11eb_813f_525400a98544row14_col16,#T_f43832a4_3d1d_11eb_813f_525400a98544row16_col14{\n",
        "            background-color:  #b7c5df;\n",
        "            color:  #000000;\n",
        "        }#T_f43832a4_3d1d_11eb_813f_525400a98544row2_col11,#T_f43832a4_3d1d_11eb_813f_525400a98544row11_col2{\n",
        "            background-color:  #c2cbe2;\n",
        "            color:  #000000;\n",
        "        }#T_f43832a4_3d1d_11eb_813f_525400a98544row2_col13,#T_f43832a4_3d1d_11eb_813f_525400a98544row5_col12,#T_f43832a4_3d1d_11eb_813f_525400a98544row12_col5,#T_f43832a4_3d1d_11eb_813f_525400a98544row13_col2{\n",
        "            background-color:  #a2bcda;\n",
        "            color:  #000000;\n",
        "        }#T_f43832a4_3d1d_11eb_813f_525400a98544row2_col14,#T_f43832a4_3d1d_11eb_813f_525400a98544row14_col2{\n",
        "            background-color:  #c5cce3;\n",
        "            color:  #000000;\n",
        "        }#T_f43832a4_3d1d_11eb_813f_525400a98544row2_col15,#T_f43832a4_3d1d_11eb_813f_525400a98544row15_col2{\n",
        "            background-color:  #9ab8d8;\n",
        "            color:  #000000;\n",
        "        }#T_f43832a4_3d1d_11eb_813f_525400a98544row2_col16,#T_f43832a4_3d1d_11eb_813f_525400a98544row16_col2{\n",
        "            background-color:  #b9c6e0;\n",
        "            color:  #000000;\n",
        "        }#T_f43832a4_3d1d_11eb_813f_525400a98544row3_col4,#T_f43832a4_3d1d_11eb_813f_525400a98544row4_col3{\n",
        "            background-color:  #eee9f3;\n",
        "            color:  #000000;\n",
        "        }#T_f43832a4_3d1d_11eb_813f_525400a98544row3_col5,#T_f43832a4_3d1d_11eb_813f_525400a98544row5_col3{\n",
        "            background-color:  #e3e0ee;\n",
        "            color:  #000000;\n",
        "        }#T_f43832a4_3d1d_11eb_813f_525400a98544row3_col6,#T_f43832a4_3d1d_11eb_813f_525400a98544row6_col3{\n",
        "            background-color:  #ede8f3;\n",
        "            color:  #000000;\n",
        "        }#T_f43832a4_3d1d_11eb_813f_525400a98544row3_col7,#T_f43832a4_3d1d_11eb_813f_525400a98544row7_col3{\n",
        "            background-color:  #f9f2f8;\n",
        "            color:  #000000;\n",
        "        }#T_f43832a4_3d1d_11eb_813f_525400a98544row3_col8,#T_f43832a4_3d1d_11eb_813f_525400a98544row8_col3{\n",
        "            background-color:  #faf3f9;\n",
        "            color:  #000000;\n",
        "        }#T_f43832a4_3d1d_11eb_813f_525400a98544row3_col9,#T_f43832a4_3d1d_11eb_813f_525400a98544row9_col3{\n",
        "            background-color:  #fbf3f9;\n",
        "            color:  #000000;\n",
        "        }#T_f43832a4_3d1d_11eb_813f_525400a98544row3_col10,#T_f43832a4_3d1d_11eb_813f_525400a98544row10_col3{\n",
        "            background-color:  #f0eaf4;\n",
        "            color:  #000000;\n",
        "        }#T_f43832a4_3d1d_11eb_813f_525400a98544row3_col11,#T_f43832a4_3d1d_11eb_813f_525400a98544row11_col3{\n",
        "            background-color:  #d6d6e9;\n",
        "            color:  #000000;\n",
        "        }#T_f43832a4_3d1d_11eb_813f_525400a98544row3_col12,#T_f43832a4_3d1d_11eb_813f_525400a98544row12_col3{\n",
        "            background-color:  #fdf5fa;\n",
        "            color:  #000000;\n",
        "        }#T_f43832a4_3d1d_11eb_813f_525400a98544row3_col13,#T_f43832a4_3d1d_11eb_813f_525400a98544row13_col3{\n",
        "            background-color:  #e4e1ef;\n",
        "            color:  #000000;\n",
        "        }#T_f43832a4_3d1d_11eb_813f_525400a98544row3_col14,#T_f43832a4_3d1d_11eb_813f_525400a98544row14_col3{\n",
        "            background-color:  #fff7fb;\n",
        "            color:  #000000;\n",
        "        }#T_f43832a4_3d1d_11eb_813f_525400a98544row3_col15,#T_f43832a4_3d1d_11eb_813f_525400a98544row15_col3{\n",
        "            background-color:  #dcdaeb;\n",
        "            color:  #000000;\n",
        "        }#T_f43832a4_3d1d_11eb_813f_525400a98544row3_col16,#T_f43832a4_3d1d_11eb_813f_525400a98544row16_col3{\n",
        "            background-color:  #f4edf6;\n",
        "            color:  #000000;\n",
        "        }#T_f43832a4_3d1d_11eb_813f_525400a98544row4_col5,#T_f43832a4_3d1d_11eb_813f_525400a98544row5_col4{\n",
        "            background-color:  #71a8ce;\n",
        "            color:  #000000;\n",
        "        }#T_f43832a4_3d1d_11eb_813f_525400a98544row4_col6,#T_f43832a4_3d1d_11eb_813f_525400a98544row6_col4{\n",
        "            background-color:  #5ea0ca;\n",
        "            color:  #000000;\n",
        "        }#T_f43832a4_3d1d_11eb_813f_525400a98544row4_col7,#T_f43832a4_3d1d_11eb_813f_525400a98544row7_col4{\n",
        "            background-color:  #569dc8;\n",
        "            color:  #000000;\n",
        "        }#T_f43832a4_3d1d_11eb_813f_525400a98544row4_col8,#T_f43832a4_3d1d_11eb_813f_525400a98544row8_col4,#T_f43832a4_3d1d_11eb_813f_525400a98544row12_col14,#T_f43832a4_3d1d_11eb_813f_525400a98544row14_col12{\n",
        "            background-color:  #358fc0;\n",
        "            color:  #000000;\n",
        "        }#T_f43832a4_3d1d_11eb_813f_525400a98544row4_col9,#T_f43832a4_3d1d_11eb_813f_525400a98544row9_col4{\n",
        "            background-color:  #78abd0;\n",
        "            color:  #000000;\n",
        "        }#T_f43832a4_3d1d_11eb_813f_525400a98544row4_col11,#T_f43832a4_3d1d_11eb_813f_525400a98544row11_col4{\n",
        "            background-color:  #4697c4;\n",
        "            color:  #000000;\n",
        "        }#T_f43832a4_3d1d_11eb_813f_525400a98544row4_col12,#T_f43832a4_3d1d_11eb_813f_525400a98544row12_col4{\n",
        "            background-color:  #81aed2;\n",
        "            color:  #000000;\n",
        "        }#T_f43832a4_3d1d_11eb_813f_525400a98544row4_col13,#T_f43832a4_3d1d_11eb_813f_525400a98544row8_col14,#T_f43832a4_3d1d_11eb_813f_525400a98544row13_col4,#T_f43832a4_3d1d_11eb_813f_525400a98544row14_col8{\n",
        "            background-color:  #69a5cc;\n",
        "            color:  #000000;\n",
        "        }#T_f43832a4_3d1d_11eb_813f_525400a98544row4_col14,#T_f43832a4_3d1d_11eb_813f_525400a98544row10_col14,#T_f43832a4_3d1d_11eb_813f_525400a98544row14_col4,#T_f43832a4_3d1d_11eb_813f_525400a98544row14_col10{\n",
        "            background-color:  #9ebad9;\n",
        "            color:  #000000;\n",
        "        }#T_f43832a4_3d1d_11eb_813f_525400a98544row4_col15,#T_f43832a4_3d1d_11eb_813f_525400a98544row4_col16,#T_f43832a4_3d1d_11eb_813f_525400a98544row9_col14,#T_f43832a4_3d1d_11eb_813f_525400a98544row14_col9,#T_f43832a4_3d1d_11eb_813f_525400a98544row15_col4,#T_f43832a4_3d1d_11eb_813f_525400a98544row16_col4{\n",
        "            background-color:  #60a1ca;\n",
        "            color:  #000000;\n",
        "        }#T_f43832a4_3d1d_11eb_813f_525400a98544row5_col6,#T_f43832a4_3d1d_11eb_813f_525400a98544row6_col5{\n",
        "            background-color:  #046299;\n",
        "            color:  #f1f1f1;\n",
        "        }#T_f43832a4_3d1d_11eb_813f_525400a98544row5_col7,#T_f43832a4_3d1d_11eb_813f_525400a98544row7_col5{\n",
        "            background-color:  #167bb6;\n",
        "            color:  #000000;\n",
        "        }#T_f43832a4_3d1d_11eb_813f_525400a98544row5_col8,#T_f43832a4_3d1d_11eb_813f_525400a98544row7_col10,#T_f43832a4_3d1d_11eb_813f_525400a98544row8_col5,#T_f43832a4_3d1d_11eb_813f_525400a98544row10_col7{\n",
        "            background-color:  #2383ba;\n",
        "            color:  #000000;\n",
        "        }#T_f43832a4_3d1d_11eb_813f_525400a98544row5_col9,#T_f43832a4_3d1d_11eb_813f_525400a98544row6_col11,#T_f43832a4_3d1d_11eb_813f_525400a98544row9_col5,#T_f43832a4_3d1d_11eb_813f_525400a98544row11_col6{\n",
        "            background-color:  #3b92c1;\n",
        "            color:  #000000;\n",
        "        }#T_f43832a4_3d1d_11eb_813f_525400a98544row5_col10,#T_f43832a4_3d1d_11eb_813f_525400a98544row8_col9,#T_f43832a4_3d1d_11eb_813f_525400a98544row9_col8,#T_f43832a4_3d1d_11eb_813f_525400a98544row10_col5{\n",
        "            background-color:  #1b7eb7;\n",
        "            color:  #000000;\n",
        "        }#T_f43832a4_3d1d_11eb_813f_525400a98544row5_col11,#T_f43832a4_3d1d_11eb_813f_525400a98544row11_col5,#T_f43832a4_3d1d_11eb_813f_525400a98544row12_col15,#T_f43832a4_3d1d_11eb_813f_525400a98544row15_col12{\n",
        "            background-color:  #2786bb;\n",
        "            color:  #000000;\n",
        "        }#T_f43832a4_3d1d_11eb_813f_525400a98544row5_col13,#T_f43832a4_3d1d_11eb_813f_525400a98544row13_col5{\n",
        "            background-color:  #5c9fc9;\n",
        "            color:  #000000;\n",
        "        }#T_f43832a4_3d1d_11eb_813f_525400a98544row5_col14,#T_f43832a4_3d1d_11eb_813f_525400a98544row14_col5{\n",
        "            background-color:  #dad9ea;\n",
        "            color:  #000000;\n",
        "        }#T_f43832a4_3d1d_11eb_813f_525400a98544row5_col16,#T_f43832a4_3d1d_11eb_813f_525400a98544row16_col5{\n",
        "            background-color:  #045c90;\n",
        "            color:  #f1f1f1;\n",
        "        }#T_f43832a4_3d1d_11eb_813f_525400a98544row6_col7,#T_f43832a4_3d1d_11eb_813f_525400a98544row7_col6{\n",
        "            background-color:  #04629a;\n",
        "            color:  #f1f1f1;\n",
        "        }#T_f43832a4_3d1d_11eb_813f_525400a98544row6_col8,#T_f43832a4_3d1d_11eb_813f_525400a98544row8_col6{\n",
        "            background-color:  #0771b1;\n",
        "            color:  #f1f1f1;\n",
        "        }#T_f43832a4_3d1d_11eb_813f_525400a98544row6_col9,#T_f43832a4_3d1d_11eb_813f_525400a98544row9_col6,#T_f43832a4_3d1d_11eb_813f_525400a98544row12_col13,#T_f43832a4_3d1d_11eb_813f_525400a98544row13_col12{\n",
        "            background-color:  #4295c3;\n",
        "            color:  #000000;\n",
        "        }#T_f43832a4_3d1d_11eb_813f_525400a98544row6_col10,#T_f43832a4_3d1d_11eb_813f_525400a98544row10_col6{\n",
        "            background-color:  #0569a4;\n",
        "            color:  #f1f1f1;\n",
        "        }#T_f43832a4_3d1d_11eb_813f_525400a98544row6_col12,#T_f43832a4_3d1d_11eb_813f_525400a98544row12_col6{\n",
        "            background-color:  #73a9cf;\n",
        "            color:  #000000;\n",
        "        }#T_f43832a4_3d1d_11eb_813f_525400a98544row6_col13,#T_f43832a4_3d1d_11eb_813f_525400a98544row7_col11,#T_f43832a4_3d1d_11eb_813f_525400a98544row11_col7,#T_f43832a4_3d1d_11eb_813f_525400a98544row13_col6{\n",
        "            background-color:  #3991c1;\n",
        "            color:  #000000;\n",
        "        }#T_f43832a4_3d1d_11eb_813f_525400a98544row6_col14,#T_f43832a4_3d1d_11eb_813f_525400a98544row14_col6{\n",
        "            background-color:  #d2d3e7;\n",
        "            color:  #000000;\n",
        "        }#T_f43832a4_3d1d_11eb_813f_525400a98544row6_col15,#T_f43832a4_3d1d_11eb_813f_525400a98544row15_col6{\n",
        "            background-color:  #d9d8ea;\n",
        "            color:  #000000;\n",
        "        }#T_f43832a4_3d1d_11eb_813f_525400a98544row6_col16,#T_f43832a4_3d1d_11eb_813f_525400a98544row16_col6{\n",
        "            background-color:  #034e7b;\n",
        "            color:  #f1f1f1;\n",
        "        }#T_f43832a4_3d1d_11eb_813f_525400a98544row7_col8,#T_f43832a4_3d1d_11eb_813f_525400a98544row8_col7{\n",
        "            background-color:  #056ead;\n",
        "            color:  #f1f1f1;\n",
        "        }#T_f43832a4_3d1d_11eb_813f_525400a98544row7_col9,#T_f43832a4_3d1d_11eb_813f_525400a98544row9_col7,#T_f43832a4_3d1d_11eb_813f_525400a98544row13_col14,#T_f43832a4_3d1d_11eb_813f_525400a98544row14_col13{\n",
        "            background-color:  #3790c0;\n",
        "            color:  #000000;\n",
        "        }#T_f43832a4_3d1d_11eb_813f_525400a98544row7_col12,#T_f43832a4_3d1d_11eb_813f_525400a98544row12_col7{\n",
        "            background-color:  #65a3cb;\n",
        "            color:  #000000;\n",
        "        }#T_f43832a4_3d1d_11eb_813f_525400a98544row7_col16,#T_f43832a4_3d1d_11eb_813f_525400a98544row16_col7{\n",
        "            background-color:  #045a8d;\n",
        "            color:  #f1f1f1;\n",
        "        }#T_f43832a4_3d1d_11eb_813f_525400a98544row8_col10,#T_f43832a4_3d1d_11eb_813f_525400a98544row10_col8{\n",
        "            background-color:  #2c89bd;\n",
        "            color:  #000000;\n",
        "        }#T_f43832a4_3d1d_11eb_813f_525400a98544row8_col11,#T_f43832a4_3d1d_11eb_813f_525400a98544row11_col8{\n",
        "            background-color:  #056dab;\n",
        "            color:  #f1f1f1;\n",
        "        }#T_f43832a4_3d1d_11eb_813f_525400a98544row8_col12,#T_f43832a4_3d1d_11eb_813f_525400a98544row9_col11,#T_f43832a4_3d1d_11eb_813f_525400a98544row11_col9,#T_f43832a4_3d1d_11eb_813f_525400a98544row12_col8{\n",
        "            background-color:  #328dbf;\n",
        "            color:  #000000;\n",
        "        }#T_f43832a4_3d1d_11eb_813f_525400a98544row8_col13,#T_f43832a4_3d1d_11eb_813f_525400a98544row13_col8{\n",
        "            background-color:  #1e80b8;\n",
        "            color:  #000000;\n",
        "        }#T_f43832a4_3d1d_11eb_813f_525400a98544row8_col15,#T_f43832a4_3d1d_11eb_813f_525400a98544row15_col8{\n",
        "            background-color:  #86b0d3;\n",
        "            color:  #000000;\n",
        "        }#T_f43832a4_3d1d_11eb_813f_525400a98544row8_col16,#T_f43832a4_3d1d_11eb_813f_525400a98544row16_col8{\n",
        "            background-color:  #046097;\n",
        "            color:  #f1f1f1;\n",
        "        }#T_f43832a4_3d1d_11eb_813f_525400a98544row9_col12,#T_f43832a4_3d1d_11eb_813f_525400a98544row12_col9{\n",
        "            background-color:  #62a2cb;\n",
        "            color:  #000000;\n",
        "        }#T_f43832a4_3d1d_11eb_813f_525400a98544row9_col13,#T_f43832a4_3d1d_11eb_813f_525400a98544row10_col11,#T_f43832a4_3d1d_11eb_813f_525400a98544row11_col10,#T_f43832a4_3d1d_11eb_813f_525400a98544row13_col9{\n",
        "            background-color:  #3d93c2;\n",
        "            color:  #000000;\n",
        "        }#T_f43832a4_3d1d_11eb_813f_525400a98544row9_col15,#T_f43832a4_3d1d_11eb_813f_525400a98544row15_col9{\n",
        "            background-color:  #96b6d7;\n",
        "            color:  #000000;\n",
        "        }#T_f43832a4_3d1d_11eb_813f_525400a98544row9_col16,#T_f43832a4_3d1d_11eb_813f_525400a98544row16_col9{\n",
        "            background-color:  #2081b9;\n",
        "            color:  #000000;\n",
        "        }#T_f43832a4_3d1d_11eb_813f_525400a98544row10_col13,#T_f43832a4_3d1d_11eb_813f_525400a98544row12_col16,#T_f43832a4_3d1d_11eb_813f_525400a98544row13_col10,#T_f43832a4_3d1d_11eb_813f_525400a98544row16_col12{\n",
        "            background-color:  #4e9ac6;\n",
        "            color:  #000000;\n",
        "        }#T_f43832a4_3d1d_11eb_813f_525400a98544row10_col15,#T_f43832a4_3d1d_11eb_813f_525400a98544row15_col10{\n",
        "            background-color:  #c1cae2;\n",
        "            color:  #000000;\n",
        "        }#T_f43832a4_3d1d_11eb_813f_525400a98544row10_col16,#T_f43832a4_3d1d_11eb_813f_525400a98544row16_col10{\n",
        "            background-color:  #056caa;\n",
        "            color:  #f1f1f1;\n",
        "        }#T_f43832a4_3d1d_11eb_813f_525400a98544row11_col12,#T_f43832a4_3d1d_11eb_813f_525400a98544row12_col11{\n",
        "            background-color:  #8bb2d4;\n",
        "            color:  #000000;\n",
        "        }#T_f43832a4_3d1d_11eb_813f_525400a98544row11_col16,#T_f43832a4_3d1d_11eb_813f_525400a98544row14_col15,#T_f43832a4_3d1d_11eb_813f_525400a98544row15_col14,#T_f43832a4_3d1d_11eb_813f_525400a98544row16_col11{\n",
        "            background-color:  #1077b4;\n",
        "            color:  #f1f1f1;\n",
        "        }#T_f43832a4_3d1d_11eb_813f_525400a98544row13_col15,#T_f43832a4_3d1d_11eb_813f_525400a98544row15_col13{\n",
        "            background-color:  #4897c4;\n",
        "            color:  #000000;\n",
        "        }#T_f43832a4_3d1d_11eb_813f_525400a98544row13_col16,#T_f43832a4_3d1d_11eb_813f_525400a98544row16_col13{\n",
        "            background-color:  #197db7;\n",
        "            color:  #000000;\n",
        "        }#T_f43832a4_3d1d_11eb_813f_525400a98544row15_col16,#T_f43832a4_3d1d_11eb_813f_525400a98544row16_col15{\n",
        "            background-color:  #cccfe5;\n",
        "            color:  #000000;\n",
        "        }</style><table id=\"T_f43832a4_3d1d_11eb_813f_525400a98544\" ><thead>    <tr>        <th class=\"blank level0\" ></th>        <th class=\"col_heading level0 col0\" >Rt</th>        <th class=\"col_heading level0 col1\" >theta</th>        <th class=\"col_heading level0 col2\" >kappa</th>        <th class=\"col_heading level0 col3\" >rho</th>        <th class=\"col_heading level0 col4\" >sigma</th>        <th class=\"col_heading level0 col5\" >School_closing</th>        <th class=\"col_heading level0 col6\" >Workplace_closing</th>        <th class=\"col_heading level0 col7\" >Cancel_events</th>        <th class=\"col_heading level0 col8\" >Gatherings_restrictions</th>        <th class=\"col_heading level0 col9\" >Transport_closing</th>        <th class=\"col_heading level0 col10\" >Stay_home_restrictions</th>        <th class=\"col_heading level0 col11\" >Internal_movement_restrictions</th>        <th class=\"col_heading level0 col12\" >International_movement_restrictions</th>        <th class=\"col_heading level0 col13\" >Information_campaigns</th>        <th class=\"col_heading level0 col14\" >Testing_policy</th>        <th class=\"col_heading level0 col15\" >Contact_tracing</th>        <th class=\"col_heading level0 col16\" >Stringency_index</th>    </tr></thead><tbody>\n",
        "                <tr>\n",
        "                        <th id=\"T_f43832a4_3d1d_11eb_813f_525400a98544level0_row0\" class=\"row_heading level0 row0\" >Rt</th>\n",
        "                        <td id=\"T_f43832a4_3d1d_11eb_813f_525400a98544row0_col0\" class=\"data row0 col0\" >1.000000</td>\n",
        "                        <td id=\"T_f43832a4_3d1d_11eb_813f_525400a98544row0_col1\" class=\"data row0 col1\" >-0.140514</td>\n",
        "                        <td id=\"T_f43832a4_3d1d_11eb_813f_525400a98544row0_col2\" class=\"data row0 col2\" >-0.056735</td>\n",
        "                        <td id=\"T_f43832a4_3d1d_11eb_813f_525400a98544row0_col3\" class=\"data row0 col3\" >0.511475</td>\n",
        "                        <td id=\"T_f43832a4_3d1d_11eb_813f_525400a98544row0_col4\" class=\"data row0 col4\" >-0.446143</td>\n",
        "                        <td id=\"T_f43832a4_3d1d_11eb_813f_525400a98544row0_col5\" class=\"data row0 col5\" >-0.056303</td>\n",
        "                        <td id=\"T_f43832a4_3d1d_11eb_813f_525400a98544row0_col6\" class=\"data row0 col6\" >-0.099091</td>\n",
        "                        <td id=\"T_f43832a4_3d1d_11eb_813f_525400a98544row0_col7\" class=\"data row0 col7\" >-0.231188</td>\n",
        "                        <td id=\"T_f43832a4_3d1d_11eb_813f_525400a98544row0_col8\" class=\"data row0 col8\" >-0.298852</td>\n",
        "                        <td id=\"T_f43832a4_3d1d_11eb_813f_525400a98544row0_col9\" class=\"data row0 col9\" >-0.223093</td>\n",
        "                        <td id=\"T_f43832a4_3d1d_11eb_813f_525400a98544row0_col10\" class=\"data row0 col10\" >-0.138375</td>\n",
        "                        <td id=\"T_f43832a4_3d1d_11eb_813f_525400a98544row0_col11\" class=\"data row0 col11\" >-0.254112</td>\n",
        "                        <td id=\"T_f43832a4_3d1d_11eb_813f_525400a98544row0_col12\" class=\"data row0 col12\" >-0.163730</td>\n",
        "                        <td id=\"T_f43832a4_3d1d_11eb_813f_525400a98544row0_col13\" class=\"data row0 col13\" >-0.129844</td>\n",
        "                        <td id=\"T_f43832a4_3d1d_11eb_813f_525400a98544row0_col14\" class=\"data row0 col14\" >-0.246318</td>\n",
        "                        <td id=\"T_f43832a4_3d1d_11eb_813f_525400a98544row0_col15\" class=\"data row0 col15\" >-0.180392</td>\n",
        "                        <td id=\"T_f43832a4_3d1d_11eb_813f_525400a98544row0_col16\" class=\"data row0 col16\" >-0.155601</td>\n",
        "            </tr>\n",
        "            <tr>\n",
        "                        <th id=\"T_f43832a4_3d1d_11eb_813f_525400a98544level0_row1\" class=\"row_heading level0 row1\" >theta</th>\n",
        "                        <td id=\"T_f43832a4_3d1d_11eb_813f_525400a98544row1_col0\" class=\"data row1 col0\" >-0.140514</td>\n",
        "                        <td id=\"T_f43832a4_3d1d_11eb_813f_525400a98544row1_col1\" class=\"data row1 col1\" >1.000000</td>\n",
        "                        <td id=\"T_f43832a4_3d1d_11eb_813f_525400a98544row1_col2\" class=\"data row1 col2\" >0.131548</td>\n",
        "                        <td id=\"T_f43832a4_3d1d_11eb_813f_525400a98544row1_col3\" class=\"data row1 col3\" >-0.137368</td>\n",
        "                        <td id=\"T_f43832a4_3d1d_11eb_813f_525400a98544row1_col4\" class=\"data row1 col4\" >0.187604</td>\n",
        "                        <td id=\"T_f43832a4_3d1d_11eb_813f_525400a98544row1_col5\" class=\"data row1 col5\" >0.353661</td>\n",
        "                        <td id=\"T_f43832a4_3d1d_11eb_813f_525400a98544row1_col6\" class=\"data row1 col6\" >0.266529</td>\n",
        "                        <td id=\"T_f43832a4_3d1d_11eb_813f_525400a98544row1_col7\" class=\"data row1 col7\" >0.281906</td>\n",
        "                        <td id=\"T_f43832a4_3d1d_11eb_813f_525400a98544row1_col8\" class=\"data row1 col8\" >0.206308</td>\n",
        "                        <td id=\"T_f43832a4_3d1d_11eb_813f_525400a98544row1_col9\" class=\"data row1 col9\" >0.078272</td>\n",
        "                        <td id=\"T_f43832a4_3d1d_11eb_813f_525400a98544row1_col10\" class=\"data row1 col10\" >0.162166</td>\n",
        "                        <td id=\"T_f43832a4_3d1d_11eb_813f_525400a98544row1_col11\" class=\"data row1 col11\" >0.321462</td>\n",
        "                        <td id=\"T_f43832a4_3d1d_11eb_813f_525400a98544row1_col12\" class=\"data row1 col12\" >0.128625</td>\n",
        "                        <td id=\"T_f43832a4_3d1d_11eb_813f_525400a98544row1_col13\" class=\"data row1 col13\" >0.105470</td>\n",
        "                        <td id=\"T_f43832a4_3d1d_11eb_813f_525400a98544row1_col14\" class=\"data row1 col14\" >-0.242722</td>\n",
        "                        <td id=\"T_f43832a4_3d1d_11eb_813f_525400a98544row1_col15\" class=\"data row1 col15\" >-0.042415</td>\n",
        "                        <td id=\"T_f43832a4_3d1d_11eb_813f_525400a98544row1_col16\" class=\"data row1 col16\" >0.346017</td>\n",
        "            </tr>\n",
        "            <tr>\n",
        "                        <th id=\"T_f43832a4_3d1d_11eb_813f_525400a98544level0_row2\" class=\"row_heading level0 row2\" >kappa</th>\n",
        "                        <td id=\"T_f43832a4_3d1d_11eb_813f_525400a98544row2_col0\" class=\"data row2 col0\" >-0.056735</td>\n",
        "                        <td id=\"T_f43832a4_3d1d_11eb_813f_525400a98544row2_col1\" class=\"data row2 col1\" >0.131548</td>\n",
        "                        <td id=\"T_f43832a4_3d1d_11eb_813f_525400a98544row2_col2\" class=\"data row2 col2\" >1.000000</td>\n",
        "                        <td id=\"T_f43832a4_3d1d_11eb_813f_525400a98544row2_col3\" class=\"data row2 col3\" >0.004485</td>\n",
        "                        <td id=\"T_f43832a4_3d1d_11eb_813f_525400a98544row2_col4\" class=\"data row2 col4\" >0.074039</td>\n",
        "                        <td id=\"T_f43832a4_3d1d_11eb_813f_525400a98544row2_col5\" class=\"data row2 col5\" >-0.040809</td>\n",
        "                        <td id=\"T_f43832a4_3d1d_11eb_813f_525400a98544row2_col6\" class=\"data row2 col6\" >0.061438</td>\n",
        "                        <td id=\"T_f43832a4_3d1d_11eb_813f_525400a98544row2_col7\" class=\"data row2 col7\" >0.110062</td>\n",
        "                        <td id=\"T_f43832a4_3d1d_11eb_813f_525400a98544row2_col8\" class=\"data row2 col8\" >-0.119263</td>\n",
        "                        <td id=\"T_f43832a4_3d1d_11eb_813f_525400a98544row2_col9\" class=\"data row2 col9\" >0.048296</td>\n",
        "                        <td id=\"T_f43832a4_3d1d_11eb_813f_525400a98544row2_col10\" class=\"data row2 col10\" >-0.022950</td>\n",
        "                        <td id=\"T_f43832a4_3d1d_11eb_813f_525400a98544row2_col11\" class=\"data row2 col11\" >-0.073778</td>\n",
        "                        <td id=\"T_f43832a4_3d1d_11eb_813f_525400a98544row2_col12\" class=\"data row2 col12\" >0.131792</td>\n",
        "                        <td id=\"T_f43832a4_3d1d_11eb_813f_525400a98544row2_col13\" class=\"data row2 col13\" >0.068533</td>\n",
        "                        <td id=\"T_f43832a4_3d1d_11eb_813f_525400a98544row2_col14\" class=\"data row2 col14\" >-0.088523</td>\n",
        "                        <td id=\"T_f43832a4_3d1d_11eb_813f_525400a98544row2_col15\" class=\"data row2 col15\" >0.098313</td>\n",
        "                        <td id=\"T_f43832a4_3d1d_11eb_813f_525400a98544row2_col16\" class=\"data row2 col16\" >-0.036017</td>\n",
        "            </tr>\n",
        "            <tr>\n",
        "                        <th id=\"T_f43832a4_3d1d_11eb_813f_525400a98544level0_row3\" class=\"row_heading level0 row3\" >rho</th>\n",
        "                        <td id=\"T_f43832a4_3d1d_11eb_813f_525400a98544row3_col0\" class=\"data row3 col0\" >0.511475</td>\n",
        "                        <td id=\"T_f43832a4_3d1d_11eb_813f_525400a98544row3_col1\" class=\"data row3 col1\" >-0.137368</td>\n",
        "                        <td id=\"T_f43832a4_3d1d_11eb_813f_525400a98544row3_col2\" class=\"data row3 col2\" >0.004485</td>\n",
        "                        <td id=\"T_f43832a4_3d1d_11eb_813f_525400a98544row3_col3\" class=\"data row3 col3\" >1.000000</td>\n",
        "                        <td id=\"T_f43832a4_3d1d_11eb_813f_525400a98544row3_col4\" class=\"data row3 col4\" >-0.344183</td>\n",
        "                        <td id=\"T_f43832a4_3d1d_11eb_813f_525400a98544row3_col5\" class=\"data row3 col5\" >-0.264255</td>\n",
        "                        <td id=\"T_f43832a4_3d1d_11eb_813f_525400a98544row3_col6\" class=\"data row3 col6\" >-0.332364</td>\n",
        "                        <td id=\"T_f43832a4_3d1d_11eb_813f_525400a98544row3_col7\" class=\"data row3 col7\" >-0.455377</td>\n",
        "                        <td id=\"T_f43832a4_3d1d_11eb_813f_525400a98544row3_col8\" class=\"data row3 col8\" >-0.463318</td>\n",
        "                        <td id=\"T_f43832a4_3d1d_11eb_813f_525400a98544row3_col9\" class=\"data row3 col9\" >-0.472843</td>\n",
        "                        <td id=\"T_f43832a4_3d1d_11eb_813f_525400a98544row3_col10\" class=\"data row3 col10\" >-0.364794</td>\n",
        "                        <td id=\"T_f43832a4_3d1d_11eb_813f_525400a98544row3_col11\" class=\"data row3 col11\" >-0.175675</td>\n",
        "                        <td id=\"T_f43832a4_3d1d_11eb_813f_525400a98544row3_col12\" class=\"data row3 col12\" >-0.491373</td>\n",
        "                        <td id=\"T_f43832a4_3d1d_11eb_813f_525400a98544row3_col13\" class=\"data row3 col13\" >-0.269026</td>\n",
        "                        <td id=\"T_f43832a4_3d1d_11eb_813f_525400a98544row3_col14\" class=\"data row3 col14\" >-0.515826</td>\n",
        "                        <td id=\"T_f43832a4_3d1d_11eb_813f_525400a98544row3_col15\" class=\"data row3 col15\" >-0.218141</td>\n",
        "                        <td id=\"T_f43832a4_3d1d_11eb_813f_525400a98544row3_col16\" class=\"data row3 col16\" >-0.399239</td>\n",
        "            </tr>\n",
        "            <tr>\n",
        "                        <th id=\"T_f43832a4_3d1d_11eb_813f_525400a98544level0_row4\" class=\"row_heading level0 row4\" >sigma</th>\n",
        "                        <td id=\"T_f43832a4_3d1d_11eb_813f_525400a98544row4_col0\" class=\"data row4 col0\" >-0.446143</td>\n",
        "                        <td id=\"T_f43832a4_3d1d_11eb_813f_525400a98544row4_col1\" class=\"data row4 col1\" >0.187604</td>\n",
        "                        <td id=\"T_f43832a4_3d1d_11eb_813f_525400a98544row4_col2\" class=\"data row4 col2\" >0.074039</td>\n",
        "                        <td id=\"T_f43832a4_3d1d_11eb_813f_525400a98544row4_col3\" class=\"data row4 col3\" >-0.344183</td>\n",
        "                        <td id=\"T_f43832a4_3d1d_11eb_813f_525400a98544row4_col4\" class=\"data row4 col4\" >1.000000</td>\n",
        "                        <td id=\"T_f43832a4_3d1d_11eb_813f_525400a98544row4_col5\" class=\"data row4 col5\" >0.248076</td>\n",
        "                        <td id=\"T_f43832a4_3d1d_11eb_813f_525400a98544row4_col6\" class=\"data row4 col6\" >0.308281</td>\n",
        "                        <td id=\"T_f43832a4_3d1d_11eb_813f_525400a98544row4_col7\" class=\"data row4 col7\" >0.332624</td>\n",
        "                        <td id=\"T_f43832a4_3d1d_11eb_813f_525400a98544row4_col8\" class=\"data row4 col8\" >0.435827</td>\n",
        "                        <td id=\"T_f43832a4_3d1d_11eb_813f_525400a98544row4_col9\" class=\"data row4 col9\" >0.225648</td>\n",
        "                        <td id=\"T_f43832a4_3d1d_11eb_813f_525400a98544row4_col10\" class=\"data row4 col10\" >0.205243</td>\n",
        "                        <td id=\"T_f43832a4_3d1d_11eb_813f_525400a98544row4_col11\" class=\"data row4 col11\" >0.380423</td>\n",
        "                        <td id=\"T_f43832a4_3d1d_11eb_813f_525400a98544row4_col12\" class=\"data row4 col12\" >0.191550</td>\n",
        "                        <td id=\"T_f43832a4_3d1d_11eb_813f_525400a98544row4_col13\" class=\"data row4 col13\" >0.272443</td>\n",
        "                        <td id=\"T_f43832a4_3d1d_11eb_813f_525400a98544row4_col14\" class=\"data row4 col14\" >0.087808</td>\n",
        "                        <td id=\"T_f43832a4_3d1d_11eb_813f_525400a98544row4_col15\" class=\"data row4 col15\" >0.302935</td>\n",
        "                        <td id=\"T_f43832a4_3d1d_11eb_813f_525400a98544row4_col16\" class=\"data row4 col16\" >0.304174</td>\n",
        "            </tr>\n",
        "            <tr>\n",
        "                        <th id=\"T_f43832a4_3d1d_11eb_813f_525400a98544level0_row5\" class=\"row_heading level0 row5\" >School_closing</th>\n",
        "                        <td id=\"T_f43832a4_3d1d_11eb_813f_525400a98544row5_col0\" class=\"data row5 col0\" >-0.056303</td>\n",
        "                        <td id=\"T_f43832a4_3d1d_11eb_813f_525400a98544row5_col1\" class=\"data row5 col1\" >0.353661</td>\n",
        "                        <td id=\"T_f43832a4_3d1d_11eb_813f_525400a98544row5_col2\" class=\"data row5 col2\" >-0.040809</td>\n",
        "                        <td id=\"T_f43832a4_3d1d_11eb_813f_525400a98544row5_col3\" class=\"data row5 col3\" >-0.264255</td>\n",
        "                        <td id=\"T_f43832a4_3d1d_11eb_813f_525400a98544row5_col4\" class=\"data row5 col4\" >0.248076</td>\n",
        "                        <td id=\"T_f43832a4_3d1d_11eb_813f_525400a98544row5_col5\" class=\"data row5 col5\" >1.000000</td>\n",
        "                        <td id=\"T_f43832a4_3d1d_11eb_813f_525400a98544row5_col6\" class=\"data row5 col6\" >0.742052</td>\n",
        "                        <td id=\"T_f43832a4_3d1d_11eb_813f_525400a98544row5_col7\" class=\"data row5 col7\" >0.553381</td>\n",
        "                        <td id=\"T_f43832a4_3d1d_11eb_813f_525400a98544row5_col8\" class=\"data row5 col8\" >0.507374</td>\n",
        "                        <td id=\"T_f43832a4_3d1d_11eb_813f_525400a98544row5_col9\" class=\"data row5 col9\" >0.417287</td>\n",
        "                        <td id=\"T_f43832a4_3d1d_11eb_813f_525400a98544row5_col10\" class=\"data row5 col10\" >0.536773</td>\n",
        "                        <td id=\"T_f43832a4_3d1d_11eb_813f_525400a98544row5_col11\" class=\"data row5 col11\" >0.489820</td>\n",
        "                        <td id=\"T_f43832a4_3d1d_11eb_813f_525400a98544row5_col12\" class=\"data row5 col12\" >0.066788</td>\n",
        "                        <td id=\"T_f43832a4_3d1d_11eb_813f_525400a98544row5_col13\" class=\"data row5 col13\" >0.313705</td>\n",
        "                        <td id=\"T_f43832a4_3d1d_11eb_813f_525400a98544row5_col14\" class=\"data row5 col14\" >-0.204293</td>\n",
        "                        <td id=\"T_f43832a4_3d1d_11eb_813f_525400a98544row5_col15\" class=\"data row5 col15\" >-0.163080</td>\n",
        "                        <td id=\"T_f43832a4_3d1d_11eb_813f_525400a98544row5_col16\" class=\"data row5 col16\" >0.791139</td>\n",
        "            </tr>\n",
        "            <tr>\n",
        "                        <th id=\"T_f43832a4_3d1d_11eb_813f_525400a98544level0_row6\" class=\"row_heading level0 row6\" >Workplace_closing</th>\n",
        "                        <td id=\"T_f43832a4_3d1d_11eb_813f_525400a98544row6_col0\" class=\"data row6 col0\" >-0.099091</td>\n",
        "                        <td id=\"T_f43832a4_3d1d_11eb_813f_525400a98544row6_col1\" class=\"data row6 col1\" >0.266529</td>\n",
        "                        <td id=\"T_f43832a4_3d1d_11eb_813f_525400a98544row6_col2\" class=\"data row6 col2\" >0.061438</td>\n",
        "                        <td id=\"T_f43832a4_3d1d_11eb_813f_525400a98544row6_col3\" class=\"data row6 col3\" >-0.332364</td>\n",
        "                        <td id=\"T_f43832a4_3d1d_11eb_813f_525400a98544row6_col4\" class=\"data row6 col4\" >0.308281</td>\n",
        "                        <td id=\"T_f43832a4_3d1d_11eb_813f_525400a98544row6_col5\" class=\"data row6 col5\" >0.742052</td>\n",
        "                        <td id=\"T_f43832a4_3d1d_11eb_813f_525400a98544row6_col6\" class=\"data row6 col6\" >1.000000</td>\n",
        "                        <td id=\"T_f43832a4_3d1d_11eb_813f_525400a98544row6_col7\" class=\"data row6 col7\" >0.735160</td>\n",
        "                        <td id=\"T_f43832a4_3d1d_11eb_813f_525400a98544row6_col8\" class=\"data row6 col8\" >0.611632</td>\n",
        "                        <td id=\"T_f43832a4_3d1d_11eb_813f_525400a98544row6_col9\" class=\"data row6 col9\" >0.392581</td>\n",
        "                        <td id=\"T_f43832a4_3d1d_11eb_813f_525400a98544row6_col10\" class=\"data row6 col10\" >0.684650</td>\n",
        "                        <td id=\"T_f43832a4_3d1d_11eb_813f_525400a98544row6_col11\" class=\"data row6 col11\" >0.414821</td>\n",
        "                        <td id=\"T_f43832a4_3d1d_11eb_813f_525400a98544row6_col12\" class=\"data row6 col12\" >0.245475</td>\n",
        "                        <td id=\"T_f43832a4_3d1d_11eb_813f_525400a98544row6_col13\" class=\"data row6 col13\" >0.420162</td>\n",
        "                        <td id=\"T_f43832a4_3d1d_11eb_813f_525400a98544row6_col14\" class=\"data row6 col14\" >-0.152267</td>\n",
        "                        <td id=\"T_f43832a4_3d1d_11eb_813f_525400a98544row6_col15\" class=\"data row6 col15\" >-0.197899</td>\n",
        "                        <td id=\"T_f43832a4_3d1d_11eb_813f_525400a98544row6_col16\" class=\"data row6 col16\" >0.875639</td>\n",
        "            </tr>\n",
        "            <tr>\n",
        "                        <th id=\"T_f43832a4_3d1d_11eb_813f_525400a98544level0_row7\" class=\"row_heading level0 row7\" >Cancel_events</th>\n",
        "                        <td id=\"T_f43832a4_3d1d_11eb_813f_525400a98544row7_col0\" class=\"data row7 col0\" >-0.231188</td>\n",
        "                        <td id=\"T_f43832a4_3d1d_11eb_813f_525400a98544row7_col1\" class=\"data row7 col1\" >0.281906</td>\n",
        "                        <td id=\"T_f43832a4_3d1d_11eb_813f_525400a98544row7_col2\" class=\"data row7 col2\" >0.110062</td>\n",
        "                        <td id=\"T_f43832a4_3d1d_11eb_813f_525400a98544row7_col3\" class=\"data row7 col3\" >-0.455377</td>\n",
        "                        <td id=\"T_f43832a4_3d1d_11eb_813f_525400a98544row7_col4\" class=\"data row7 col4\" >0.332624</td>\n",
        "                        <td id=\"T_f43832a4_3d1d_11eb_813f_525400a98544row7_col5\" class=\"data row7 col5\" >0.553381</td>\n",
        "                        <td id=\"T_f43832a4_3d1d_11eb_813f_525400a98544row7_col6\" class=\"data row7 col6\" >0.735160</td>\n",
        "                        <td id=\"T_f43832a4_3d1d_11eb_813f_525400a98544row7_col7\" class=\"data row7 col7\" >1.000000</td>\n",
        "                        <td id=\"T_f43832a4_3d1d_11eb_813f_525400a98544row7_col8\" class=\"data row7 col8\" >0.637204</td>\n",
        "                        <td id=\"T_f43832a4_3d1d_11eb_813f_525400a98544row7_col9\" class=\"data row7 col9\" >0.429540</td>\n",
        "                        <td id=\"T_f43832a4_3d1d_11eb_813f_525400a98544row7_col10\" class=\"data row7 col10\" >0.504717</td>\n",
        "                        <td id=\"T_f43832a4_3d1d_11eb_813f_525400a98544row7_col11\" class=\"data row7 col11\" >0.423536</td>\n",
        "                        <td id=\"T_f43832a4_3d1d_11eb_813f_525400a98544row7_col12\" class=\"data row7 col12\" >0.289380</td>\n",
        "                        <td id=\"T_f43832a4_3d1d_11eb_813f_525400a98544row7_col13\" class=\"data row7 col13\" >0.509729</td>\n",
        "                        <td id=\"T_f43832a4_3d1d_11eb_813f_525400a98544row7_col14\" class=\"data row7 col14\" >0.070567</td>\n",
        "                        <td id=\"T_f43832a4_3d1d_11eb_813f_525400a98544row7_col15\" class=\"data row7 col15\" >-0.044598</td>\n",
        "                        <td id=\"T_f43832a4_3d1d_11eb_813f_525400a98544row7_col16\" class=\"data row7 col16\" >0.806775</td>\n",
        "            </tr>\n",
        "            <tr>\n",
        "                        <th id=\"T_f43832a4_3d1d_11eb_813f_525400a98544level0_row8\" class=\"row_heading level0 row8\" >Gatherings_restrictions</th>\n",
        "                        <td id=\"T_f43832a4_3d1d_11eb_813f_525400a98544row8_col0\" class=\"data row8 col0\" >-0.298852</td>\n",
        "                        <td id=\"T_f43832a4_3d1d_11eb_813f_525400a98544row8_col1\" class=\"data row8 col1\" >0.206308</td>\n",
        "                        <td id=\"T_f43832a4_3d1d_11eb_813f_525400a98544row8_col2\" class=\"data row8 col2\" >-0.119263</td>\n",
        "                        <td id=\"T_f43832a4_3d1d_11eb_813f_525400a98544row8_col3\" class=\"data row8 col3\" >-0.463318</td>\n",
        "                        <td id=\"T_f43832a4_3d1d_11eb_813f_525400a98544row8_col4\" class=\"data row8 col4\" >0.435827</td>\n",
        "                        <td id=\"T_f43832a4_3d1d_11eb_813f_525400a98544row8_col5\" class=\"data row8 col5\" >0.507374</td>\n",
        "                        <td id=\"T_f43832a4_3d1d_11eb_813f_525400a98544row8_col6\" class=\"data row8 col6\" >0.611632</td>\n",
        "                        <td id=\"T_f43832a4_3d1d_11eb_813f_525400a98544row8_col7\" class=\"data row8 col7\" >0.637204</td>\n",
        "                        <td id=\"T_f43832a4_3d1d_11eb_813f_525400a98544row8_col8\" class=\"data row8 col8\" >1.000000</td>\n",
        "                        <td id=\"T_f43832a4_3d1d_11eb_813f_525400a98544row8_col9\" class=\"data row8 col9\" >0.535811</td>\n",
        "                        <td id=\"T_f43832a4_3d1d_11eb_813f_525400a98544row8_col10\" class=\"data row8 col10\" >0.470570</td>\n",
        "                        <td id=\"T_f43832a4_3d1d_11eb_813f_525400a98544row8_col11\" class=\"data row8 col11\" >0.647747</td>\n",
        "                        <td id=\"T_f43832a4_3d1d_11eb_813f_525400a98544row8_col12\" class=\"data row8 col12\" >0.446609</td>\n",
        "                        <td id=\"T_f43832a4_3d1d_11eb_813f_525400a98544row8_col13\" class=\"data row8 col13\" >0.524021</td>\n",
        "                        <td id=\"T_f43832a4_3d1d_11eb_813f_525400a98544row8_col14\" class=\"data row8 col14\" >0.272653</td>\n",
        "                        <td id=\"T_f43832a4_3d1d_11eb_813f_525400a98544row8_col15\" class=\"data row8 col15\" >0.174585</td>\n",
        "                        <td id=\"T_f43832a4_3d1d_11eb_813f_525400a98544row8_col16\" class=\"data row8 col16\" >0.751545</td>\n",
        "            </tr>\n",
        "            <tr>\n",
        "                        <th id=\"T_f43832a4_3d1d_11eb_813f_525400a98544level0_row9\" class=\"row_heading level0 row9\" >Transport_closing</th>\n",
        "                        <td id=\"T_f43832a4_3d1d_11eb_813f_525400a98544row9_col0\" class=\"data row9 col0\" >-0.223093</td>\n",
        "                        <td id=\"T_f43832a4_3d1d_11eb_813f_525400a98544row9_col1\" class=\"data row9 col1\" >0.078272</td>\n",
        "                        <td id=\"T_f43832a4_3d1d_11eb_813f_525400a98544row9_col2\" class=\"data row9 col2\" >0.048296</td>\n",
        "                        <td id=\"T_f43832a4_3d1d_11eb_813f_525400a98544row9_col3\" class=\"data row9 col3\" >-0.472843</td>\n",
        "                        <td id=\"T_f43832a4_3d1d_11eb_813f_525400a98544row9_col4\" class=\"data row9 col4\" >0.225648</td>\n",
        "                        <td id=\"T_f43832a4_3d1d_11eb_813f_525400a98544row9_col5\" class=\"data row9 col5\" >0.417287</td>\n",
        "                        <td id=\"T_f43832a4_3d1d_11eb_813f_525400a98544row9_col6\" class=\"data row9 col6\" >0.392581</td>\n",
        "                        <td id=\"T_f43832a4_3d1d_11eb_813f_525400a98544row9_col7\" class=\"data row9 col7\" >0.429540</td>\n",
        "                        <td id=\"T_f43832a4_3d1d_11eb_813f_525400a98544row9_col8\" class=\"data row9 col8\" >0.535811</td>\n",
        "                        <td id=\"T_f43832a4_3d1d_11eb_813f_525400a98544row9_col9\" class=\"data row9 col9\" >1.000000</td>\n",
        "                        <td id=\"T_f43832a4_3d1d_11eb_813f_525400a98544row9_col10\" class=\"data row9 col10\" >0.352440</td>\n",
        "                        <td id=\"T_f43832a4_3d1d_11eb_813f_525400a98544row9_col11\" class=\"data row9 col11\" >0.445633</td>\n",
        "                        <td id=\"T_f43832a4_3d1d_11eb_813f_525400a98544row9_col12\" class=\"data row9 col12\" >0.300838</td>\n",
        "                        <td id=\"T_f43832a4_3d1d_11eb_813f_525400a98544row9_col13\" class=\"data row9 col13\" >0.411334</td>\n",
        "                        <td id=\"T_f43832a4_3d1d_11eb_813f_525400a98544row9_col14\" class=\"data row9 col14\" >0.306927</td>\n",
        "                        <td id=\"T_f43832a4_3d1d_11eb_813f_525400a98544row9_col15\" class=\"data row9 col15\" >0.116777</td>\n",
        "                        <td id=\"T_f43832a4_3d1d_11eb_813f_525400a98544row9_col16\" class=\"data row9 col16\" >0.516982</td>\n",
        "            </tr>\n",
        "            <tr>\n",
        "                        <th id=\"T_f43832a4_3d1d_11eb_813f_525400a98544level0_row10\" class=\"row_heading level0 row10\" >Stay_home_restrictions</th>\n",
        "                        <td id=\"T_f43832a4_3d1d_11eb_813f_525400a98544row10_col0\" class=\"data row10 col0\" >-0.138375</td>\n",
        "                        <td id=\"T_f43832a4_3d1d_11eb_813f_525400a98544row10_col1\" class=\"data row10 col1\" >0.162166</td>\n",
        "                        <td id=\"T_f43832a4_3d1d_11eb_813f_525400a98544row10_col2\" class=\"data row10 col2\" >-0.022950</td>\n",
        "                        <td id=\"T_f43832a4_3d1d_11eb_813f_525400a98544row10_col3\" class=\"data row10 col3\" >-0.364794</td>\n",
        "                        <td id=\"T_f43832a4_3d1d_11eb_813f_525400a98544row10_col4\" class=\"data row10 col4\" >0.205243</td>\n",
        "                        <td id=\"T_f43832a4_3d1d_11eb_813f_525400a98544row10_col5\" class=\"data row10 col5\" >0.536773</td>\n",
        "                        <td id=\"T_f43832a4_3d1d_11eb_813f_525400a98544row10_col6\" class=\"data row10 col6\" >0.684650</td>\n",
        "                        <td id=\"T_f43832a4_3d1d_11eb_813f_525400a98544row10_col7\" class=\"data row10 col7\" >0.504717</td>\n",
        "                        <td id=\"T_f43832a4_3d1d_11eb_813f_525400a98544row10_col8\" class=\"data row10 col8\" >0.470570</td>\n",
        "                        <td id=\"T_f43832a4_3d1d_11eb_813f_525400a98544row10_col9\" class=\"data row10 col9\" >0.352440</td>\n",
        "                        <td id=\"T_f43832a4_3d1d_11eb_813f_525400a98544row10_col10\" class=\"data row10 col10\" >1.000000</td>\n",
        "                        <td id=\"T_f43832a4_3d1d_11eb_813f_525400a98544row10_col11\" class=\"data row10 col11\" >0.411450</td>\n",
        "                        <td id=\"T_f43832a4_3d1d_11eb_813f_525400a98544row10_col12\" class=\"data row10 col12\" >0.321052</td>\n",
        "                        <td id=\"T_f43832a4_3d1d_11eb_813f_525400a98544row10_col13\" class=\"data row10 col13\" >0.356326</td>\n",
        "                        <td id=\"T_f43832a4_3d1d_11eb_813f_525400a98544row10_col14\" class=\"data row10 col14\" >0.086392</td>\n",
        "                        <td id=\"T_f43832a4_3d1d_11eb_813f_525400a98544row10_col15\" class=\"data row10 col15\" >-0.068048</td>\n",
        "                        <td id=\"T_f43832a4_3d1d_11eb_813f_525400a98544row10_col16\" class=\"data row10 col16\" >0.653747</td>\n",
        "            </tr>\n",
        "            <tr>\n",
        "                        <th id=\"T_f43832a4_3d1d_11eb_813f_525400a98544level0_row11\" class=\"row_heading level0 row11\" >Internal_movement_restrictions</th>\n",
        "                        <td id=\"T_f43832a4_3d1d_11eb_813f_525400a98544row11_col0\" class=\"data row11 col0\" >-0.254112</td>\n",
        "                        <td id=\"T_f43832a4_3d1d_11eb_813f_525400a98544row11_col1\" class=\"data row11 col1\" >0.321462</td>\n",
        "                        <td id=\"T_f43832a4_3d1d_11eb_813f_525400a98544row11_col2\" class=\"data row11 col2\" >-0.073778</td>\n",
        "                        <td id=\"T_f43832a4_3d1d_11eb_813f_525400a98544row11_col3\" class=\"data row11 col3\" >-0.175675</td>\n",
        "                        <td id=\"T_f43832a4_3d1d_11eb_813f_525400a98544row11_col4\" class=\"data row11 col4\" >0.380423</td>\n",
        "                        <td id=\"T_f43832a4_3d1d_11eb_813f_525400a98544row11_col5\" class=\"data row11 col5\" >0.489820</td>\n",
        "                        <td id=\"T_f43832a4_3d1d_11eb_813f_525400a98544row11_col6\" class=\"data row11 col6\" >0.414821</td>\n",
        "                        <td id=\"T_f43832a4_3d1d_11eb_813f_525400a98544row11_col7\" class=\"data row11 col7\" >0.423536</td>\n",
        "                        <td id=\"T_f43832a4_3d1d_11eb_813f_525400a98544row11_col8\" class=\"data row11 col8\" >0.647747</td>\n",
        "                        <td id=\"T_f43832a4_3d1d_11eb_813f_525400a98544row11_col9\" class=\"data row11 col9\" >0.445633</td>\n",
        "                        <td id=\"T_f43832a4_3d1d_11eb_813f_525400a98544row11_col10\" class=\"data row11 col10\" >0.411450</td>\n",
        "                        <td id=\"T_f43832a4_3d1d_11eb_813f_525400a98544row11_col11\" class=\"data row11 col11\" >1.000000</td>\n",
        "                        <td id=\"T_f43832a4_3d1d_11eb_813f_525400a98544row11_col12\" class=\"data row11 col12\" >0.158017</td>\n",
        "                        <td id=\"T_f43832a4_3d1d_11eb_813f_525400a98544row11_col13\" class=\"data row11 col13\" >0.349357</td>\n",
        "                        <td id=\"T_f43832a4_3d1d_11eb_813f_525400a98544row11_col14\" class=\"data row11 col14\" >0.064161</td>\n",
        "                        <td id=\"T_f43832a4_3d1d_11eb_813f_525400a98544row11_col15\" class=\"data row11 col15\" >0.049189</td>\n",
        "                        <td id=\"T_f43832a4_3d1d_11eb_813f_525400a98544row11_col16\" class=\"data row11 col16\" >0.574720</td>\n",
        "            </tr>\n",
        "            <tr>\n",
        "                        <th id=\"T_f43832a4_3d1d_11eb_813f_525400a98544level0_row12\" class=\"row_heading level0 row12\" >International_movement_restrictions</th>\n",
        "                        <td id=\"T_f43832a4_3d1d_11eb_813f_525400a98544row12_col0\" class=\"data row12 col0\" >-0.163730</td>\n",
        "                        <td id=\"T_f43832a4_3d1d_11eb_813f_525400a98544row12_col1\" class=\"data row12 col1\" >0.128625</td>\n",
        "                        <td id=\"T_f43832a4_3d1d_11eb_813f_525400a98544row12_col2\" class=\"data row12 col2\" >0.131792</td>\n",
        "                        <td id=\"T_f43832a4_3d1d_11eb_813f_525400a98544row12_col3\" class=\"data row12 col3\" >-0.491373</td>\n",
        "                        <td id=\"T_f43832a4_3d1d_11eb_813f_525400a98544row12_col4\" class=\"data row12 col4\" >0.191550</td>\n",
        "                        <td id=\"T_f43832a4_3d1d_11eb_813f_525400a98544row12_col5\" class=\"data row12 col5\" >0.066788</td>\n",
        "                        <td id=\"T_f43832a4_3d1d_11eb_813f_525400a98544row12_col6\" class=\"data row12 col6\" >0.245475</td>\n",
        "                        <td id=\"T_f43832a4_3d1d_11eb_813f_525400a98544row12_col7\" class=\"data row12 col7\" >0.289380</td>\n",
        "                        <td id=\"T_f43832a4_3d1d_11eb_813f_525400a98544row12_col8\" class=\"data row12 col8\" >0.446609</td>\n",
        "                        <td id=\"T_f43832a4_3d1d_11eb_813f_525400a98544row12_col9\" class=\"data row12 col9\" >0.300838</td>\n",
        "                        <td id=\"T_f43832a4_3d1d_11eb_813f_525400a98544row12_col10\" class=\"data row12 col10\" >0.321052</td>\n",
        "                        <td id=\"T_f43832a4_3d1d_11eb_813f_525400a98544row12_col11\" class=\"data row12 col11\" >0.158017</td>\n",
        "                        <td id=\"T_f43832a4_3d1d_11eb_813f_525400a98544row12_col12\" class=\"data row12 col12\" >1.000000</td>\n",
        "                        <td id=\"T_f43832a4_3d1d_11eb_813f_525400a98544row12_col13\" class=\"data row12 col13\" >0.393288</td>\n",
        "                        <td id=\"T_f43832a4_3d1d_11eb_813f_525400a98544row12_col14\" class=\"data row12 col14\" >0.436550</td>\n",
        "                        <td id=\"T_f43832a4_3d1d_11eb_813f_525400a98544row12_col15\" class=\"data row12 col15\" >0.487500</td>\n",
        "                        <td id=\"T_f43832a4_3d1d_11eb_813f_525400a98544row12_col16\" class=\"data row12 col16\" >0.356585</td>\n",
        "            </tr>\n",
        "            <tr>\n",
        "                        <th id=\"T_f43832a4_3d1d_11eb_813f_525400a98544level0_row13\" class=\"row_heading level0 row13\" >Information_campaigns</th>\n",
        "                        <td id=\"T_f43832a4_3d1d_11eb_813f_525400a98544row13_col0\" class=\"data row13 col0\" >-0.129844</td>\n",
        "                        <td id=\"T_f43832a4_3d1d_11eb_813f_525400a98544row13_col1\" class=\"data row13 col1\" >0.105470</td>\n",
        "                        <td id=\"T_f43832a4_3d1d_11eb_813f_525400a98544row13_col2\" class=\"data row13 col2\" >0.068533</td>\n",
        "                        <td id=\"T_f43832a4_3d1d_11eb_813f_525400a98544row13_col3\" class=\"data row13 col3\" >-0.269026</td>\n",
        "                        <td id=\"T_f43832a4_3d1d_11eb_813f_525400a98544row13_col4\" class=\"data row13 col4\" >0.272443</td>\n",
        "                        <td id=\"T_f43832a4_3d1d_11eb_813f_525400a98544row13_col5\" class=\"data row13 col5\" >0.313705</td>\n",
        "                        <td id=\"T_f43832a4_3d1d_11eb_813f_525400a98544row13_col6\" class=\"data row13 col6\" >0.420162</td>\n",
        "                        <td id=\"T_f43832a4_3d1d_11eb_813f_525400a98544row13_col7\" class=\"data row13 col7\" >0.509729</td>\n",
        "                        <td id=\"T_f43832a4_3d1d_11eb_813f_525400a98544row13_col8\" class=\"data row13 col8\" >0.524021</td>\n",
        "                        <td id=\"T_f43832a4_3d1d_11eb_813f_525400a98544row13_col9\" class=\"data row13 col9\" >0.411334</td>\n",
        "                        <td id=\"T_f43832a4_3d1d_11eb_813f_525400a98544row13_col10\" class=\"data row13 col10\" >0.356326</td>\n",
        "                        <td id=\"T_f43832a4_3d1d_11eb_813f_525400a98544row13_col11\" class=\"data row13 col11\" >0.349357</td>\n",
        "                        <td id=\"T_f43832a4_3d1d_11eb_813f_525400a98544row13_col12\" class=\"data row13 col12\" >0.393288</td>\n",
        "                        <td id=\"T_f43832a4_3d1d_11eb_813f_525400a98544row13_col13\" class=\"data row13 col13\" >1.000000</td>\n",
        "                        <td id=\"T_f43832a4_3d1d_11eb_813f_525400a98544row13_col14\" class=\"data row13 col14\" >0.427262</td>\n",
        "                        <td id=\"T_f43832a4_3d1d_11eb_813f_525400a98544row13_col15\" class=\"data row13 col15\" >0.376945</td>\n",
        "                        <td id=\"T_f43832a4_3d1d_11eb_813f_525400a98544row13_col16\" class=\"data row13 col16\" >0.538157</td>\n",
        "            </tr>\n",
        "            <tr>\n",
        "                        <th id=\"T_f43832a4_3d1d_11eb_813f_525400a98544level0_row14\" class=\"row_heading level0 row14\" >Testing_policy</th>\n",
        "                        <td id=\"T_f43832a4_3d1d_11eb_813f_525400a98544row14_col0\" class=\"data row14 col0\" >-0.246318</td>\n",
        "                        <td id=\"T_f43832a4_3d1d_11eb_813f_525400a98544row14_col1\" class=\"data row14 col1\" >-0.242722</td>\n",
        "                        <td id=\"T_f43832a4_3d1d_11eb_813f_525400a98544row14_col2\" class=\"data row14 col2\" >-0.088523</td>\n",
        "                        <td id=\"T_f43832a4_3d1d_11eb_813f_525400a98544row14_col3\" class=\"data row14 col3\" >-0.515826</td>\n",
        "                        <td id=\"T_f43832a4_3d1d_11eb_813f_525400a98544row14_col4\" class=\"data row14 col4\" >0.087808</td>\n",
        "                        <td id=\"T_f43832a4_3d1d_11eb_813f_525400a98544row14_col5\" class=\"data row14 col5\" >-0.204293</td>\n",
        "                        <td id=\"T_f43832a4_3d1d_11eb_813f_525400a98544row14_col6\" class=\"data row14 col6\" >-0.152267</td>\n",
        "                        <td id=\"T_f43832a4_3d1d_11eb_813f_525400a98544row14_col7\" class=\"data row14 col7\" >0.070567</td>\n",
        "                        <td id=\"T_f43832a4_3d1d_11eb_813f_525400a98544row14_col8\" class=\"data row14 col8\" >0.272653</td>\n",
        "                        <td id=\"T_f43832a4_3d1d_11eb_813f_525400a98544row14_col9\" class=\"data row14 col9\" >0.306927</td>\n",
        "                        <td id=\"T_f43832a4_3d1d_11eb_813f_525400a98544row14_col10\" class=\"data row14 col10\" >0.086392</td>\n",
        "                        <td id=\"T_f43832a4_3d1d_11eb_813f_525400a98544row14_col11\" class=\"data row14 col11\" >0.064161</td>\n",
        "                        <td id=\"T_f43832a4_3d1d_11eb_813f_525400a98544row14_col12\" class=\"data row14 col12\" >0.436550</td>\n",
        "                        <td id=\"T_f43832a4_3d1d_11eb_813f_525400a98544row14_col13\" class=\"data row14 col13\" >0.427262</td>\n",
        "                        <td id=\"T_f43832a4_3d1d_11eb_813f_525400a98544row14_col14\" class=\"data row14 col14\" >1.000000</td>\n",
        "                        <td id=\"T_f43832a4_3d1d_11eb_813f_525400a98544row14_col15\" class=\"data row14 col15\" >0.577146</td>\n",
        "                        <td id=\"T_f43832a4_3d1d_11eb_813f_525400a98544row14_col16\" class=\"data row14 col16\" >-0.023875</td>\n",
        "            </tr>\n",
        "            <tr>\n",
        "                        <th id=\"T_f43832a4_3d1d_11eb_813f_525400a98544level0_row15\" class=\"row_heading level0 row15\" >Contact_tracing</th>\n",
        "                        <td id=\"T_f43832a4_3d1d_11eb_813f_525400a98544row15_col0\" class=\"data row15 col0\" >-0.180392</td>\n",
        "                        <td id=\"T_f43832a4_3d1d_11eb_813f_525400a98544row15_col1\" class=\"data row15 col1\" >-0.042415</td>\n",
        "                        <td id=\"T_f43832a4_3d1d_11eb_813f_525400a98544row15_col2\" class=\"data row15 col2\" >0.098313</td>\n",
        "                        <td id=\"T_f43832a4_3d1d_11eb_813f_525400a98544row15_col3\" class=\"data row15 col3\" >-0.218141</td>\n",
        "                        <td id=\"T_f43832a4_3d1d_11eb_813f_525400a98544row15_col4\" class=\"data row15 col4\" >0.302935</td>\n",
        "                        <td id=\"T_f43832a4_3d1d_11eb_813f_525400a98544row15_col5\" class=\"data row15 col5\" >-0.163080</td>\n",
        "                        <td id=\"T_f43832a4_3d1d_11eb_813f_525400a98544row15_col6\" class=\"data row15 col6\" >-0.197899</td>\n",
        "                        <td id=\"T_f43832a4_3d1d_11eb_813f_525400a98544row15_col7\" class=\"data row15 col7\" >-0.044598</td>\n",
        "                        <td id=\"T_f43832a4_3d1d_11eb_813f_525400a98544row15_col8\" class=\"data row15 col8\" >0.174585</td>\n",
        "                        <td id=\"T_f43832a4_3d1d_11eb_813f_525400a98544row15_col9\" class=\"data row15 col9\" >0.116777</td>\n",
        "                        <td id=\"T_f43832a4_3d1d_11eb_813f_525400a98544row15_col10\" class=\"data row15 col10\" >-0.068048</td>\n",
        "                        <td id=\"T_f43832a4_3d1d_11eb_813f_525400a98544row15_col11\" class=\"data row15 col11\" >0.049189</td>\n",
        "                        <td id=\"T_f43832a4_3d1d_11eb_813f_525400a98544row15_col12\" class=\"data row15 col12\" >0.487500</td>\n",
        "                        <td id=\"T_f43832a4_3d1d_11eb_813f_525400a98544row15_col13\" class=\"data row15 col13\" >0.376945</td>\n",
        "                        <td id=\"T_f43832a4_3d1d_11eb_813f_525400a98544row15_col14\" class=\"data row15 col14\" >0.577146</td>\n",
        "                        <td id=\"T_f43832a4_3d1d_11eb_813f_525400a98544row15_col15\" class=\"data row15 col15\" >1.000000</td>\n",
        "                        <td id=\"T_f43832a4_3d1d_11eb_813f_525400a98544row15_col16\" class=\"data row15 col16\" >-0.118044</td>\n",
        "            </tr>\n",
        "            <tr>\n",
        "                        <th id=\"T_f43832a4_3d1d_11eb_813f_525400a98544level0_row16\" class=\"row_heading level0 row16\" >Stringency_index</th>\n",
        "                        <td id=\"T_f43832a4_3d1d_11eb_813f_525400a98544row16_col0\" class=\"data row16 col0\" >-0.155601</td>\n",
        "                        <td id=\"T_f43832a4_3d1d_11eb_813f_525400a98544row16_col1\" class=\"data row16 col1\" >0.346017</td>\n",
        "                        <td id=\"T_f43832a4_3d1d_11eb_813f_525400a98544row16_col2\" class=\"data row16 col2\" >-0.036017</td>\n",
        "                        <td id=\"T_f43832a4_3d1d_11eb_813f_525400a98544row16_col3\" class=\"data row16 col3\" >-0.399239</td>\n",
        "                        <td id=\"T_f43832a4_3d1d_11eb_813f_525400a98544row16_col4\" class=\"data row16 col4\" >0.304174</td>\n",
        "                        <td id=\"T_f43832a4_3d1d_11eb_813f_525400a98544row16_col5\" class=\"data row16 col5\" >0.791139</td>\n",
        "                        <td id=\"T_f43832a4_3d1d_11eb_813f_525400a98544row16_col6\" class=\"data row16 col6\" >0.875639</td>\n",
        "                        <td id=\"T_f43832a4_3d1d_11eb_813f_525400a98544row16_col7\" class=\"data row16 col7\" >0.806775</td>\n",
        "                        <td id=\"T_f43832a4_3d1d_11eb_813f_525400a98544row16_col8\" class=\"data row16 col8\" >0.751545</td>\n",
        "                        <td id=\"T_f43832a4_3d1d_11eb_813f_525400a98544row16_col9\" class=\"data row16 col9\" >0.516982</td>\n",
        "                        <td id=\"T_f43832a4_3d1d_11eb_813f_525400a98544row16_col10\" class=\"data row16 col10\" >0.653747</td>\n",
        "                        <td id=\"T_f43832a4_3d1d_11eb_813f_525400a98544row16_col11\" class=\"data row16 col11\" >0.574720</td>\n",
        "                        <td id=\"T_f43832a4_3d1d_11eb_813f_525400a98544row16_col12\" class=\"data row16 col12\" >0.356585</td>\n",
        "                        <td id=\"T_f43832a4_3d1d_11eb_813f_525400a98544row16_col13\" class=\"data row16 col13\" >0.538157</td>\n",
        "                        <td id=\"T_f43832a4_3d1d_11eb_813f_525400a98544row16_col14\" class=\"data row16 col14\" >-0.023875</td>\n",
        "                        <td id=\"T_f43832a4_3d1d_11eb_813f_525400a98544row16_col15\" class=\"data row16 col15\" >-0.118044</td>\n",
        "                        <td id=\"T_f43832a4_3d1d_11eb_813f_525400a98544row16_col16\" class=\"data row16 col16\" >1.000000</td>\n",
        "            </tr>\n",
        "    </tbody></table>"
       ],
       "output_type": "pyout",
       "prompt_number": 21,
       "text": [
        "<pandas.io.formats.style.Styler at 0x7f0caaffcac0>"
       ]
      }
     ],
     "prompt_number": 21
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "# Scatter plot of Stringency index and Rt\n",
      "df = track_df.copy()\n",
      "sns.scatterplot(data=df, x=\"Stringency_index\", y=\"Rt\", hue=\"Country\", legend=\"brief\", marker=\"+\")\n",
      "bbox_to_anchor=(1.02, 0)\n",
      "bbox_loc=\"lower left\"\n",
      "plt.legend(bbox_to_anchor=bbox_to_anchor, loc=bbox_loc, borderaxespad=0)\n",
      "plt.title(\"Relationship of Stringency index and reproduction number\")\n",
      "plt.ylabel(\"Reproduction number\")\n",
      "plt.xlabel(\"Stringency index\")\n",
      "plt.show()"
     ],
     "language": "python",
     "metadata": {},
     "outputs": [
      {
       "output_type": "display_data",
       "png": "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\n",
       "text": [
        "<Figure size 432x288 with 1 Axes>"
       ]
      }
     ],
     "prompt_number": 22
    }
   ],
   "metadata": {}
  }
 ]
}
