{
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3.8.2 64-bit ('.venv': venv)",
   "name": "python_defaultSpec_1596469977201"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": 3
  },
  "name": ""
 },
 "nbformat": 3,
 "nbformat_minor": 0,
 "worksheets": [
  {
   "cells": [
    {
     "cell_type": "markdown",
     "metadata": {},
     "source": [
      "# Usage (details: policy measures)\n",
      "Here, we will analyse the relationship of policy measures and parameter values of SIR-derived ODE models. Policy measures are tracked by [Oxford Covid-19 Government Response Tracker (OxCGRT)](https://github.com/OxCGRT/covid-policy-tracker)."
     ]
    },
    {
     "cell_type": "heading",
     "level": 2,
     "metadata": {},
     "source": [
      "Preparation"
     ]
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "# Standard users\n",
      "# !pip install covsirphy\n",
      "# Developers (Note: this notebook is in example directory)\n",
      "import os\n",
      "os.chdir(\"../\")"
     ],
     "language": "python",
     "metadata": {},
     "outputs": [],
     "prompt_number": 1
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "from pprint import pprint"
     ],
     "language": "python",
     "metadata": {},
     "outputs": [],
     "prompt_number": 2
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "import covsirphy as cs\n",
      "cs.__version__"
     ],
     "language": "python",
     "metadata": {},
     "outputs": [
      {
       "output_type": "pyout",
       "prompt_number": 3,
       "text": [
        "'2.6.0-theta.new.72.167.fix.120.155.157.163.164.165.174.188'"
       ]
      }
     ],
     "prompt_number": 3
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "# Standard users and developers\n",
      "data_loader = cs.DataLoader(\"input\")\n",
      "# The number of cases (JHU style)\n",
      "jhu_data = data_loader.jhu(verbose=False)\n",
      "# Population in each country\n",
      "population_data = data_loader.population(verbose=False)\n",
      "# Government Response Tracker (OxCGRT)\n",
      "oxcgrt_data = data_loader.oxcgrt(verbose=False)\n",
      "# Description/citation\n",
      "print(oxcgrt_data.citation)"
     ],
     "language": "python",
     "metadata": {
      "tags": []
     },
     "outputs": [
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "(Secondary source) Guidotti, E., Ardia, D., (2020), \"COVID-19 Data Hub\", Working paper, doi: 10.13140/RG.2.2.11649.81763.\n",
        "We can get Citation list of primary sources with DataLoader(...).covid19dh_citation"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      }
     ],
     "prompt_number": 4
    },
    {
     "cell_type": "markdown",
     "metadata": {},
     "source": [
      "## Class for policy measure analysis\n",
      "We will `PolicyMeasures` class to find relationship of policy measures and parameter values of SIR-derived ODE models."
     ]
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "# Create analyser with tau value 360 [min] (can be changed)\n",
      "analyser = cs.PolicyMeasures(jhu_data, population_data, oxcgrt_data, tau=360)\n",
      "# The number of registerd countries\n",
      "len(analyser.countries)"
     ],
     "language": "python",
     "metadata": {
      "tags": []
     },
     "outputs": [
      {
       "output_type": "pyout",
       "prompt_number": 5,
       "text": [
        "184"
       ]
      }
     ],
     "prompt_number": 5
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "# We can get Scenario instance for detailed scenario analysis\n",
      "type(analyser.scenario(\"Japan\"))"
     ],
     "language": "python",
     "metadata": {},
     "outputs": [
      {
       "output_type": "pyout",
       "prompt_number": 6,
       "text": [
        "covsirphy.analysis.scenario.Scenario"
       ]
      }
     ],
     "prompt_number": 6
    },
    {
     "cell_type": "markdown",
     "metadata": {},
     "source": [
      "## Set phases with S-R trend analysis\n",
      "We will perform S-R trend analysis to set phases in all countries. Countries which do not have **9th phases** will be un-registered for the next analysis. This number will be adjusted for your analysis."
     ]
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "# Set phases with S-R trend analysis\n",
      "analyser.trend(min_len=9)\n",
      "# The number of countries\n",
      "len(analyser.countries)"
     ],
     "language": "python",
     "metadata": {},
     "outputs": [
      {
       "output_type": "pyout",
       "prompt_number": 7,
       "text": [
        "11"
       ]
      }
     ],
     "prompt_number": 7
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "phase_len_dict = analyser.phase_len()\n",
      "pprint(phase_len_dict, compact=True)"
     ],
     "language": "python",
     "metadata": {
      "tags": []
     },
     "outputs": [
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "{"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "9"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ": "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "["
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Canada'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Senegal'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Portugal'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Italy'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Guinea'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Kuwait'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        "     "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'United Arab Emirates'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "]"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        " "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "10"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ": "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "['Iran', 'Poland', 'Bahrain', 'Czech Republic']"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "}"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      }
     ],
     "prompt_number": 8
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "# Here, only show the countries which have the most phases\n",
      "countries_show = max(phase_len_dict.items(), key=lambda x: x[0])[1]\n",
      "# Show summary\n",
      "analyser.summary(countries=countries_show)"
     ],
     "language": "python",
     "metadata": {
      "tags": []
     },
     "outputs": [
      {
       "html": [
        "<div>\n",
        "<style scoped>\n",
        "    .dataframe tbody tr th:only-of-type {\n",
        "        vertical-align: middle;\n",
        "    }\n",
        "\n",
        "    .dataframe tbody tr th {\n",
        "        vertical-align: top;\n",
        "    }\n",
        "\n",
        "    .dataframe thead th {\n",
        "        text-align: right;\n",
        "    }\n",
        "</style>\n",
        "<table border=\"1\" class=\"dataframe\">\n",
        "  <thead>\n",
        "    <tr style=\"text-align: right;\">\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th>Type</th>\n",
        "      <th>Start</th>\n",
        "      <th>End</th>\n",
        "      <th>Population</th>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>Country</th>\n",
        "      <th>Phase</th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "    </tr>\n",
        "  </thead>\n",
        "  <tbody>\n",
        "    <tr>\n",
        "      <th rowspan=\"10\" valign=\"top\">Iran</th>\n",
        "      <th>1st</th>\n",
        "      <td>Past</td>\n",
        "      <td>28Mar2020</td>\n",
        "      <td>12Apr2020</td>\n",
        "      <td>81800269</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>2nd</th>\n",
        "      <td>Past</td>\n",
        "      <td>13Apr2020</td>\n",
        "      <td>04May2020</td>\n",
        "      <td>81800269</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>3rd</th>\n",
        "      <td>Past</td>\n",
        "      <td>05May2020</td>\n",
        "      <td>20May2020</td>\n",
        "      <td>81800269</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>4th</th>\n",
        "      <td>Past</td>\n",
        "      <td>21May2020</td>\n",
        "      <td>02Jun2020</td>\n",
        "      <td>81800269</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>5th</th>\n",
        "      <td>Past</td>\n",
        "      <td>03Jun2020</td>\n",
        "      <td>15Jun2020</td>\n",
        "      <td>81800269</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>6th</th>\n",
        "      <td>Past</td>\n",
        "      <td>16Jun2020</td>\n",
        "      <td>26Jun2020</td>\n",
        "      <td>81800269</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>7th</th>\n",
        "      <td>Past</td>\n",
        "      <td>27Jun2020</td>\n",
        "      <td>06Jul2020</td>\n",
        "      <td>81800269</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>8th</th>\n",
        "      <td>Past</td>\n",
        "      <td>07Jul2020</td>\n",
        "      <td>18Jul2020</td>\n",
        "      <td>81800269</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>9th</th>\n",
        "      <td>Past</td>\n",
        "      <td>19Jul2020</td>\n",
        "      <td>30Jul2020</td>\n",
        "      <td>81800269</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>10th</th>\n",
        "      <td>Past</td>\n",
        "      <td>31Jul2020</td>\n",
        "      <td>13Aug2020</td>\n",
        "      <td>81800269</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th rowspan=\"10\" valign=\"top\">Poland</th>\n",
        "      <th>1st</th>\n",
        "      <td>Past</td>\n",
        "      <td>23Apr2020</td>\n",
        "      <td>10May2020</td>\n",
        "      <td>37974750</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>2nd</th>\n",
        "      <td>Past</td>\n",
        "      <td>11May2020</td>\n",
        "      <td>21May2020</td>\n",
        "      <td>37974750</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>3rd</th>\n",
        "      <td>Past</td>\n",
        "      <td>22May2020</td>\n",
        "      <td>03Jun2020</td>\n",
        "      <td>37974750</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>4th</th>\n",
        "      <td>Past</td>\n",
        "      <td>04Jun2020</td>\n",
        "      <td>13Jun2020</td>\n",
        "      <td>37974750</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>5th</th>\n",
        "      <td>Past</td>\n",
        "      <td>14Jun2020</td>\n",
        "      <td>24Jun2020</td>\n",
        "      <td>37974750</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>6th</th>\n",
        "      <td>Past</td>\n",
        "      <td>25Jun2020</td>\n",
        "      <td>04Jul2020</td>\n",
        "      <td>37974750</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>7th</th>\n",
        "      <td>Past</td>\n",
        "      <td>05Jul2020</td>\n",
        "      <td>17Jul2020</td>\n",
        "      <td>37974750</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>8th</th>\n",
        "      <td>Past</td>\n",
        "      <td>18Jul2020</td>\n",
        "      <td>26Jul2020</td>\n",
        "      <td>37974750</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>9th</th>\n",
        "      <td>Past</td>\n",
        "      <td>27Jul2020</td>\n",
        "      <td>04Aug2020</td>\n",
        "      <td>37974750</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>10th</th>\n",
        "      <td>Past</td>\n",
        "      <td>05Aug2020</td>\n",
        "      <td>13Aug2020</td>\n",
        "      <td>37974750</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th rowspan=\"10\" valign=\"top\">Bahrain</th>\n",
        "      <th>1st</th>\n",
        "      <td>Past</td>\n",
        "      <td>06May2020</td>\n",
        "      <td>25May2020</td>\n",
        "      <td>1569439</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>2nd</th>\n",
        "      <td>Past</td>\n",
        "      <td>26May2020</td>\n",
        "      <td>04Jun2020</td>\n",
        "      <td>1569439</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>3rd</th>\n",
        "      <td>Past</td>\n",
        "      <td>05Jun2020</td>\n",
        "      <td>13Jun2020</td>\n",
        "      <td>1569439</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>4th</th>\n",
        "      <td>Past</td>\n",
        "      <td>14Jun2020</td>\n",
        "      <td>21Jun2020</td>\n",
        "      <td>1569439</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>5th</th>\n",
        "      <td>Past</td>\n",
        "      <td>22Jun2020</td>\n",
        "      <td>29Jun2020</td>\n",
        "      <td>1569439</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>6th</th>\n",
        "      <td>Past</td>\n",
        "      <td>30Jun2020</td>\n",
        "      <td>07Jul2020</td>\n",
        "      <td>1569439</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>7th</th>\n",
        "      <td>Past</td>\n",
        "      <td>08Jul2020</td>\n",
        "      <td>15Jul2020</td>\n",
        "      <td>1569439</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>8th</th>\n",
        "      <td>Past</td>\n",
        "      <td>16Jul2020</td>\n",
        "      <td>23Jul2020</td>\n",
        "      <td>1569439</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>9th</th>\n",
        "      <td>Past</td>\n",
        "      <td>24Jul2020</td>\n",
        "      <td>02Aug2020</td>\n",
        "      <td>1569439</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>10th</th>\n",
        "      <td>Past</td>\n",
        "      <td>03Aug2020</td>\n",
        "      <td>13Aug2020</td>\n",
        "      <td>1569439</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th rowspan=\"10\" valign=\"top\">Czech Republic</th>\n",
        "      <th>1st</th>\n",
        "      <td>Past</td>\n",
        "      <td>07Apr2020</td>\n",
        "      <td>16Apr2020</td>\n",
        "      <td>10649800</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>2nd</th>\n",
        "      <td>Past</td>\n",
        "      <td>17Apr2020</td>\n",
        "      <td>27Apr2020</td>\n",
        "      <td>10649800</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>3rd</th>\n",
        "      <td>Past</td>\n",
        "      <td>28Apr2020</td>\n",
        "      <td>14May2020</td>\n",
        "      <td>10649800</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>4th</th>\n",
        "      <td>Past</td>\n",
        "      <td>15May2020</td>\n",
        "      <td>04Jun2020</td>\n",
        "      <td>10649800</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>5th</th>\n",
        "      <td>Past</td>\n",
        "      <td>05Jun2020</td>\n",
        "      <td>24Jun2020</td>\n",
        "      <td>10649800</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>6th</th>\n",
        "      <td>Past</td>\n",
        "      <td>25Jun2020</td>\n",
        "      <td>05Jul2020</td>\n",
        "      <td>10649800</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>7th</th>\n",
        "      <td>Past</td>\n",
        "      <td>06Jul2020</td>\n",
        "      <td>16Jul2020</td>\n",
        "      <td>10649800</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>8th</th>\n",
        "      <td>Past</td>\n",
        "      <td>17Jul2020</td>\n",
        "      <td>25Jul2020</td>\n",
        "      <td>10649800</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>9th</th>\n",
        "      <td>Past</td>\n",
        "      <td>26Jul2020</td>\n",
        "      <td>03Aug2020</td>\n",
        "      <td>10649800</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>10th</th>\n",
        "      <td>Past</td>\n",
        "      <td>04Aug2020</td>\n",
        "      <td>13Aug2020</td>\n",
        "      <td>10649800</td>\n",
        "    </tr>\n",
        "  </tbody>\n",
        "</table>\n",
        "</div>"
       ],
       "output_type": "pyout",
       "prompt_number": 9,
       "text": [
        "                      Type      Start        End  Population\n",
        "Country        Phase                                        \n",
        "Iran           1st    Past  28Mar2020  12Apr2020    81800269\n",
        "               2nd    Past  13Apr2020  04May2020    81800269\n",
        "               3rd    Past  05May2020  20May2020    81800269\n",
        "               4th    Past  21May2020  02Jun2020    81800269\n",
        "               5th    Past  03Jun2020  15Jun2020    81800269\n",
        "               6th    Past  16Jun2020  26Jun2020    81800269\n",
        "               7th    Past  27Jun2020  06Jul2020    81800269\n",
        "               8th    Past  07Jul2020  18Jul2020    81800269\n",
        "               9th    Past  19Jul2020  30Jul2020    81800269\n",
        "               10th   Past  31Jul2020  13Aug2020    81800269\n",
        "Poland         1st    Past  23Apr2020  10May2020    37974750\n",
        "               2nd    Past  11May2020  21May2020    37974750\n",
        "               3rd    Past  22May2020  03Jun2020    37974750\n",
        "               4th    Past  04Jun2020  13Jun2020    37974750\n",
        "               5th    Past  14Jun2020  24Jun2020    37974750\n",
        "               6th    Past  25Jun2020  04Jul2020    37974750\n",
        "               7th    Past  05Jul2020  17Jul2020    37974750\n",
        "               8th    Past  18Jul2020  26Jul2020    37974750\n",
        "               9th    Past  27Jul2020  04Aug2020    37974750\n",
        "               10th   Past  05Aug2020  13Aug2020    37974750\n",
        "Bahrain        1st    Past  06May2020  25May2020     1569439\n",
        "               2nd    Past  26May2020  04Jun2020     1569439\n",
        "               3rd    Past  05Jun2020  13Jun2020     1569439\n",
        "               4th    Past  14Jun2020  21Jun2020     1569439\n",
        "               5th    Past  22Jun2020  29Jun2020     1569439\n",
        "               6th    Past  30Jun2020  07Jul2020     1569439\n",
        "               7th    Past  08Jul2020  15Jul2020     1569439\n",
        "               8th    Past  16Jul2020  23Jul2020     1569439\n",
        "               9th    Past  24Jul2020  02Aug2020     1569439\n",
        "               10th   Past  03Aug2020  13Aug2020     1569439\n",
        "Czech Republic 1st    Past  07Apr2020  16Apr2020    10649800\n",
        "               2nd    Past  17Apr2020  27Apr2020    10649800\n",
        "               3rd    Past  28Apr2020  14May2020    10649800\n",
        "               4th    Past  15May2020  04Jun2020    10649800\n",
        "               5th    Past  05Jun2020  24Jun2020    10649800\n",
        "               6th    Past  25Jun2020  05Jul2020    10649800\n",
        "               7th    Past  06Jul2020  16Jul2020    10649800\n",
        "               8th    Past  17Jul2020  25Jul2020    10649800\n",
        "               9th    Past  26Jul2020  03Aug2020    10649800\n",
        "               10th   Past  04Aug2020  13Aug2020    10649800"
       ]
      }
     ],
     "prompt_number": 9
    },
    {
     "cell_type": "markdown",
     "metadata": {},
     "source": [
      "## Parameter estimation\n",
      "we will estimate the parameter values with SIR-derived ODE models in each country."
     ]
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "# Parameter estimation with SIR-F model\n",
      "analyser.estimate(cs.SIRF)"
     ],
     "language": "python",
     "metadata": {
      "tags": []
     },
     "outputs": [
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n",
        "<SIR-F model: parameter estimation>"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "Running optimization with 4 CPUs..."
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tPRT,  5th phase (17Jun2020 - 25Jun2020): finished  190 trials in 0 min  5 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tSEN,  7th phase (11Jul2020 - 20Jul2020): finished  378 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tIRN,  9th phase (19Jul2020 - 30Jul2020): finished  523 trials in 0 min 15 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tPOL,  2nd phase (11May2020 - 21May2020): finished  781 trials in 0 min 25 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tITA,  4th phase (22Apr2020 - 30Apr2020): finished  152 trials in 0 min  5 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tBHR,  3rd phase (05Jun2020 - 13Jun2020): finished 1519 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tARE,  4th phase (03Jun2020 - 10Jun2020): finished  792 trials in 0 min 30 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tKWT,  1st phase (11May2020 - 23May2020): finished 1439 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tSEN,  2nd phase (15May2020 - 29May2020): finished 1429 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tCAN,  6th phase (26May2020 - 05Jun2020): finished  137 trials in 0 min  5 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tPOL,  7th phase (05Jul2020 - 17Jul2020): finished  471 trials in 0 min 20 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tKWT,  7th phase (14Jul2020 - 23Jul2020): finished 1269 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tARE,  2nd phase (13May2020 - 25May2020): finished 1257 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tPOL,  6th phase (25Jun2020 - 04Jul2020): finished  366 trials in 0 min 15 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tKWT,  9th phase (02Aug2020 - 13Aug2020): finished  224 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tKWT,  2nd phase (24May2020 - 06Jun2020): finished 1201 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tKWT,  8th phase (24Jul2020 - 01Aug2020): finished  235 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tPRT,  9th phase (29Jul2020 - 13Aug2020): finished  507 trials in 0 min 20 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tCZE,  5th phase (05Jun2020 - 24Jun2020): finished 1236 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tPOL,  5th phase (14Jun2020 - 24Jun2020): finished 1234 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tIRN,  6th phase (16Jun2020 - 26Jun2020): finished 1221 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tCZE,  8th phase (17Jul2020 - 25Jul2020): finished  666 trials in 0 min 30 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tPOL, 10th phase (05Aug2020 - 13Aug2020): finished 1109 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tPRT,  2nd phase (18May2020 - 29May2020): finished 1129 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tCZE,  7th phase (06Jul2020 - 16Jul2020): finished 1100 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tCAN,  9th phase (24Jul2020 - 13Aug2020): finished 1077 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tCZE,  4th phase (15May2020 - 04Jun2020): finished  358 trials in 0 min 15 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tIRN,  2nd phase (13Apr2020 - 04May2020): finished  610 trials in 0 min 25 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tKWT,  4th phase (17Jun2020 - 24Jun2020): finished  158 trials in 0 min  5 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tSEN,  8th phase (21Jul2020 - 31Jul2020): finished 1266 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tSEN,  6th phase (01Jul2020 - 10Jul2020): finished 1267 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tITA,  5th phase (01May2020 - 09May2020): finished  549 trials in 0 min 20 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tARE,  8th phase (11Jul2020 - 25Jul2020): finished 1351 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tARE,  5th phase (11Jun2020 - 22Jun2020): finished  980 trials in 0 min 40 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tPRT,  3rd phase (30May2020 - 07Jun2020): finished  412 trials in 0 min 15 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tGIN,  4th phase (09Jun2020 - 17Jun2020): finished  543 trials in 0 min 20 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tCAN,  8th phase (29Jun2020 - 23Jul2020): finished 1359 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tCZE,  9th phase (26Jul2020 - 03Aug2020): finished 1372 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tCZE,  6th phase (25Jun2020 - 05Jul2020): finished  655 trials in 0 min 25 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tPOL,  9th phase (27Jul2020 - 04Aug2020): finished  159 trials in 0 min  5 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tCZE,  2nd phase (17Apr2020 - 27Apr2020): finished  269 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tPRT,  4th phase (08Jun2020 - 16Jun2020): finished  551 trials in 0 min 20 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tPOL,  8th phase (18Jul2020 - 26Jul2020): finished  433 trials in 0 min 15 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tGIN,  3rd phase (22May2020 - 08Jun2020): finished 1356 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tARE,  1st phase (28Apr2020 - 12May2020): finished 1377 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tSEN,  1st phase (30Apr2020 - 14May2020): finished 1358 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tSEN,  3rd phase (30May2020 - 09Jun2020): finished 1393 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tIRN,  7th phase (27Jun2020 - 06Jul2020): finished  143 trials in 0 min  5 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tSEN,  5th phase (20Jun2020 - 30Jun2020): finished  537 trials in 0 min 20 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tGIN,  5th phase (18Jun2020 - 02Jul2020): finished 1384 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tARE,  7th phase (03Jul2020 - 10Jul2020): finished 1360 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tSEN,  9th phase (01Aug2020 - 13Aug2020): finished  577 trials in 0 min 20 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tPRT,  6th phase (26Jun2020 - 07Jul2020): finished  284 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tCAN,  4th phase (08May2020 - 15May2020): finished  150 trials in 0 min  5 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tGIN,  8th phase (24Jul2020 - 03Aug2020): finished 1317 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tCAN,  7th phase (06Jun2020 - 28Jun2020): finished  368 trials in 0 min 15 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tKWT,  6th phase (04Jul2020 - 13Jul2020): finished  234 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tPOL,  3rd phase (22May2020 - 03Jun2020): finished  991 trials in 0 min 45 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tITA,  6th phase (10May2020 - 19May2020): finished  387 trials in 0 min 15 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tCAN,  2nd phase (16Apr2020 - 23Apr2020): finished 1235 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tIRN, 10th phase (31Jul2020 - 13Aug2020): finished  488 trials in 0 min 20 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tKWT,  3rd phase (07Jun2020 - 16Jun2020): finished  266 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tARE,  6th phase (23Jun2020 - 02Jul2020): finished 1208 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tITA,  8th phase (05Jun2020 - 07Jul2020): finished  515 trials in 0 min 25 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tBHR, 10th phase (03Aug2020 - 13Aug2020): finished  340 trials in 0 min 15 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tBHR,  4th phase (14Jun2020 - 21Jun2020): finished 1165 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tGIN,  1st phase (02May2020 - 11May2020): finished 1128 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tKWT,  5th phase (25Jun2020 - 03Jul2020): finished 1053 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tARE,  3rd phase (26May2020 - 02Jun2020): finished  491 trials in 0 min 25 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tPRT,  1st phase (05May2020 - 17May2020): finished 1047 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tCAN,  5th phase (16May2020 - 25May2020): finished  247 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tCZE,  1st phase (07Apr2020 - 16Apr2020): finished 1036 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tCAN,  1st phase (08Apr2020 - 15Apr2020): finished 1073 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tIRN,  8th phase (07Jul2020 - 18Jul2020): finished  250 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tBHR,  6th phase (30Jun2020 - 07Jul2020): finished  577 trials in 0 min 25 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tBHR,  7th phase (08Jul2020 - 15Jul2020): finished 1186 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tGIN,  6th phase (03Jul2020 - 14Jul2020): finished 1196 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tGIN,  7th phase (15Jul2020 - 23Jul2020): finished 1185 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tCZE,  3rd phase (28Apr2020 - 14May2020): finished  440 trials in 0 min 20 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tITA,  7th phase (20May2020 - 04Jun2020): finished  348 trials in 0 min 15 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tCAN,  3rd phase (24Apr2020 - 07May2020): finished  747 trials in 0 min 35 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tBHR,  5th phase (22Jun2020 - 29Jun2020): finished 1168 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tITA,  1st phase (24Mar2020 - 01Apr2020): finished 1010 trials in 0 min 50 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tBHR,  9th phase (24Jul2020 - 02Aug2020): finished  255 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tIRN,  1st phase (28Mar2020 - 12Apr2020): finished 1199 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tARE,  9th phase (26Jul2020 - 13Aug2020): finished  758 trials in 0 min 35 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tBHR,  1st phase (06May2020 - 25May2020): finished 1167 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tSEN,  4th phase (10Jun2020 - 19Jun2020): finished 1169 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tITA,  2nd phase (02Apr2020 - 13Apr2020): finished  520 trials in 0 min 25 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tIRN,  5th phase (03Jun2020 - 15Jun2020): finished  624 trials in 0 min 30 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tPRT,  7th phase (08Jul2020 - 16Jul2020): finished  226 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tBHR,  8th phase (16Jul2020 - 23Jul2020): finished  121 trials in 0 min  5 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tITA,  3rd phase (14Apr2020 - 21Apr2020): finished  336 trials in 0 min 15 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tIRN,  4th phase (21May2020 - 02Jun2020): finished 1138 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tPOL,  4th phase (04Jun2020 - 13Jun2020): finished 1104 trials in 0 min 55 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tBHR,  2nd phase (26May2020 - 04Jun2020): finished 1121 trials in 0 min 55 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tPOL,  1st phase (23Apr2020 - 10May2020): finished  241 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tITA,  9th phase (08Jul2020 - 13Aug2020): finished 1219 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tPRT,  8th phase (17Jul2020 - 28Jul2020): finished  378 trials in 0 min 15 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tCZE, 10th phase (04Aug2020 - 13Aug2020): finished 1245 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tGIN,  2nd phase (12May2020 - 21May2020): finished 1359 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tIRN,  3rd phase (05May2020 - 20May2020): finished  459 trials in 0 min 15 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "Completed optimization. Total: 17 min 45 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      }
     ],
     "prompt_number": 10
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "# Show summary\n",
      "analyser.summary(countries=countries_show)"
     ],
     "language": "python",
     "metadata": {},
     "outputs": [
      {
       "html": [
        "<div>\n",
        "<style scoped>\n",
        "    .dataframe tbody tr th:only-of-type {\n",
        "        vertical-align: middle;\n",
        "    }\n",
        "\n",
        "    .dataframe tbody tr th {\n",
        "        vertical-align: top;\n",
        "    }\n",
        "\n",
        "    .dataframe thead th {\n",
        "        text-align: right;\n",
        "    }\n",
        "</style>\n",
        "<table border=\"1\" class=\"dataframe\">\n",
        "  <thead>\n",
        "    <tr style=\"text-align: right;\">\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th>Type</th>\n",
        "      <th>Start</th>\n",
        "      <th>End</th>\n",
        "      <th>Population</th>\n",
        "      <th>ODE</th>\n",
        "      <th>Rt</th>\n",
        "      <th>theta</th>\n",
        "      <th>kappa</th>\n",
        "      <th>rho</th>\n",
        "      <th>sigma</th>\n",
        "      <th>tau</th>\n",
        "      <th>1/alpha2 [day]</th>\n",
        "      <th>alpha1 [-]</th>\n",
        "      <th>1/gamma [day]</th>\n",
        "      <th>1/beta [day]</th>\n",
        "      <th>RMSLE</th>\n",
        "      <th>Trials</th>\n",
        "      <th>Runtime</th>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>Country</th>\n",
        "      <th>Phase</th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "    </tr>\n",
        "  </thead>\n",
        "  <tbody>\n",
        "    <tr>\n",
        "      <th rowspan=\"10\" valign=\"top\">Iran</th>\n",
        "      <th>0th</th>\n",
        "      <td>Past</td>\n",
        "      <td>28Mar2020</td>\n",
        "      <td>12Apr2020</td>\n",
        "      <td>81800269</td>\n",
        "      <td>SIR-F</td>\n",
        "      <td>1.35</td>\n",
        "      <td>0.052383</td>\n",
        "      <td>0.000156</td>\n",
        "      <td>0.023055</td>\n",
        "      <td>0.016002</td>\n",
        "      <td>360</td>\n",
        "      <td>1599</td>\n",
        "      <td>0.052</td>\n",
        "      <td>15</td>\n",
        "      <td>10</td>\n",
        "      <td>0.195790</td>\n",
        "      <td>1199</td>\n",
        "      <td>1 min  0 sec</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>1st</th>\n",
        "      <td>Past</td>\n",
        "      <td>13Apr2020</td>\n",
        "      <td>04May2020</td>\n",
        "      <td>81800269</td>\n",
        "      <td>SIR-F</td>\n",
        "      <td>0.70</td>\n",
        "      <td>0.026814</td>\n",
        "      <td>0.000725</td>\n",
        "      <td>0.018222</td>\n",
        "      <td>0.024623</td>\n",
        "      <td>360</td>\n",
        "      <td>344</td>\n",
        "      <td>0.027</td>\n",
        "      <td>10</td>\n",
        "      <td>13</td>\n",
        "      <td>0.030652</td>\n",
        "      <td>610</td>\n",
        "      <td>0 min 25 sec</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>2nd</th>\n",
        "      <td>Past</td>\n",
        "      <td>05May2020</td>\n",
        "      <td>20May2020</td>\n",
        "      <td>81800269</td>\n",
        "      <td>SIR-F</td>\n",
        "      <td>1.42</td>\n",
        "      <td>0.018373</td>\n",
        "      <td>0.000483</td>\n",
        "      <td>0.026592</td>\n",
        "      <td>0.017854</td>\n",
        "      <td>360</td>\n",
        "      <td>517</td>\n",
        "      <td>0.018</td>\n",
        "      <td>14</td>\n",
        "      <td>9</td>\n",
        "      <td>0.019420</td>\n",
        "      <td>459</td>\n",
        "      <td>0 min 15 sec</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>3rd</th>\n",
        "      <td>Past</td>\n",
        "      <td>21May2020</td>\n",
        "      <td>02Jun2020</td>\n",
        "      <td>81800269</td>\n",
        "      <td>SIR-F</td>\n",
        "      <td>1.17</td>\n",
        "      <td>0.018216</td>\n",
        "      <td>0.000182</td>\n",
        "      <td>0.024205</td>\n",
        "      <td>0.020082</td>\n",
        "      <td>360</td>\n",
        "      <td>1376</td>\n",
        "      <td>0.018</td>\n",
        "      <td>12</td>\n",
        "      <td>10</td>\n",
        "      <td>0.013804</td>\n",
        "      <td>1138</td>\n",
        "      <td>1 min  0 sec</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>4th</th>\n",
        "      <td>Past</td>\n",
        "      <td>03Jun2020</td>\n",
        "      <td>15Jun2020</td>\n",
        "      <td>81800269</td>\n",
        "      <td>SIR-F</td>\n",
        "      <td>1.11</td>\n",
        "      <td>0.017161</td>\n",
        "      <td>0.000338</td>\n",
        "      <td>0.020119</td>\n",
        "      <td>0.017535</td>\n",
        "      <td>360</td>\n",
        "      <td>740</td>\n",
        "      <td>0.017</td>\n",
        "      <td>14</td>\n",
        "      <td>12</td>\n",
        "      <td>0.019490</td>\n",
        "      <td>624</td>\n",
        "      <td>0 min 30 sec</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>5th</th>\n",
        "      <td>Past</td>\n",
        "      <td>16Jun2020</td>\n",
        "      <td>26Jun2020</td>\n",
        "      <td>81800269</td>\n",
        "      <td>SIR-F</td>\n",
        "      <td>0.98</td>\n",
        "      <td>0.000833</td>\n",
        "      <td>0.000930</td>\n",
        "      <td>0.020759</td>\n",
        "      <td>0.020198</td>\n",
        "      <td>360</td>\n",
        "      <td>268</td>\n",
        "      <td>0.001</td>\n",
        "      <td>12</td>\n",
        "      <td>12</td>\n",
        "      <td>0.018972</td>\n",
        "      <td>1221</td>\n",
        "      <td>1 min  0 sec</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>6th</th>\n",
        "      <td>Past</td>\n",
        "      <td>27Jun2020</td>\n",
        "      <td>06Jul2020</td>\n",
        "      <td>81800269</td>\n",
        "      <td>SIR-F</td>\n",
        "      <td>0.91</td>\n",
        "      <td>0.051843</td>\n",
        "      <td>0.000093</td>\n",
        "      <td>0.022732</td>\n",
        "      <td>0.023584</td>\n",
        "      <td>360</td>\n",
        "      <td>2698</td>\n",
        "      <td>0.052</td>\n",
        "      <td>10</td>\n",
        "      <td>10</td>\n",
        "      <td>0.006641</td>\n",
        "      <td>143</td>\n",
        "      <td>0 min  5 sec</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>7th</th>\n",
        "      <td>Past</td>\n",
        "      <td>07Jul2020</td>\n",
        "      <td>18Jul2020</td>\n",
        "      <td>81800269</td>\n",
        "      <td>SIR-F</td>\n",
        "      <td>0.85</td>\n",
        "      <td>0.056678</td>\n",
        "      <td>0.000598</td>\n",
        "      <td>0.024420</td>\n",
        "      <td>0.026480</td>\n",
        "      <td>360</td>\n",
        "      <td>418</td>\n",
        "      <td>0.057</td>\n",
        "      <td>9</td>\n",
        "      <td>10</td>\n",
        "      <td>0.008305</td>\n",
        "      <td>250</td>\n",
        "      <td>0 min 10 sec</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>8th</th>\n",
        "      <td>Past</td>\n",
        "      <td>19Jul2020</td>\n",
        "      <td>30Jul2020</td>\n",
        "      <td>81800269</td>\n",
        "      <td>SIR-F</td>\n",
        "      <td>1.06</td>\n",
        "      <td>0.082227</td>\n",
        "      <td>0.000114</td>\n",
        "      <td>0.028696</td>\n",
        "      <td>0.024636</td>\n",
        "      <td>360</td>\n",
        "      <td>2198</td>\n",
        "      <td>0.082</td>\n",
        "      <td>10</td>\n",
        "      <td>8</td>\n",
        "      <td>0.013572</td>\n",
        "      <td>523</td>\n",
        "      <td>0 min 15 sec</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>9th</th>\n",
        "      <td>Past</td>\n",
        "      <td>31Jul2020</td>\n",
        "      <td>13Aug2020</td>\n",
        "      <td>81800269</td>\n",
        "      <td>SIR-F</td>\n",
        "      <td>1.02</td>\n",
        "      <td>0.059340</td>\n",
        "      <td>0.000268</td>\n",
        "      <td>0.025926</td>\n",
        "      <td>0.023604</td>\n",
        "      <td>360</td>\n",
        "      <td>934</td>\n",
        "      <td>0.059</td>\n",
        "      <td>10</td>\n",
        "      <td>9</td>\n",
        "      <td>0.015135</td>\n",
        "      <td>488</td>\n",
        "      <td>0 min 20 sec</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th rowspan=\"10\" valign=\"top\">Poland</th>\n",
        "      <th>0th</th>\n",
        "      <td>Past</td>\n",
        "      <td>23Apr2020</td>\n",
        "      <td>10May2020</td>\n",
        "      <td>37974750</td>\n",
        "      <td>SIR-F</td>\n",
        "      <td>1.29</td>\n",
        "      <td>0.056002</td>\n",
        "      <td>0.000054</td>\n",
        "      <td>0.009000</td>\n",
        "      <td>0.006556</td>\n",
        "      <td>360</td>\n",
        "      <td>4601</td>\n",
        "      <td>0.056</td>\n",
        "      <td>38</td>\n",
        "      <td>27</td>\n",
        "      <td>0.062129</td>\n",
        "      <td>241</td>\n",
        "      <td>0 min 10 sec</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>1st</th>\n",
        "      <td>Past</td>\n",
        "      <td>11May2020</td>\n",
        "      <td>21May2020</td>\n",
        "      <td>37974750</td>\n",
        "      <td>SIR-F</td>\n",
        "      <td>1.37</td>\n",
        "      <td>0.000229</td>\n",
        "      <td>0.000424</td>\n",
        "      <td>0.009532</td>\n",
        "      <td>0.006535</td>\n",
        "      <td>360</td>\n",
        "      <td>589</td>\n",
        "      <td>0.000</td>\n",
        "      <td>38</td>\n",
        "      <td>26</td>\n",
        "      <td>0.014849</td>\n",
        "      <td>781</td>\n",
        "      <td>0 min 25 sec</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>2nd</th>\n",
        "      <td>Past</td>\n",
        "      <td>22May2020</td>\n",
        "      <td>03Jun2020</td>\n",
        "      <td>37974750</td>\n",
        "      <td>SIR-F</td>\n",
        "      <td>1.22</td>\n",
        "      <td>0.019244</td>\n",
        "      <td>0.000084</td>\n",
        "      <td>0.007728</td>\n",
        "      <td>0.006153</td>\n",
        "      <td>360</td>\n",
        "      <td>2971</td>\n",
        "      <td>0.019</td>\n",
        "      <td>40</td>\n",
        "      <td>32</td>\n",
        "      <td>0.013709</td>\n",
        "      <td>991</td>\n",
        "      <td>0 min 45 sec</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>3rd</th>\n",
        "      <td>Past</td>\n",
        "      <td>04Jun2020</td>\n",
        "      <td>13Jun2020</td>\n",
        "      <td>37974750</td>\n",
        "      <td>SIR-F</td>\n",
        "      <td>2.08</td>\n",
        "      <td>0.000300</td>\n",
        "      <td>0.000273</td>\n",
        "      <td>0.009114</td>\n",
        "      <td>0.004099</td>\n",
        "      <td>360</td>\n",
        "      <td>916</td>\n",
        "      <td>0.000</td>\n",
        "      <td>60</td>\n",
        "      <td>27</td>\n",
        "      <td>0.010338</td>\n",
        "      <td>1104</td>\n",
        "      <td>0 min 55 sec</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>4th</th>\n",
        "      <td>Past</td>\n",
        "      <td>14Jun2020</td>\n",
        "      <td>24Jun2020</td>\n",
        "      <td>37974750</td>\n",
        "      <td>SIR-F</td>\n",
        "      <td>0.89</td>\n",
        "      <td>0.033505</td>\n",
        "      <td>0.000059</td>\n",
        "      <td>0.005942</td>\n",
        "      <td>0.006420</td>\n",
        "      <td>360</td>\n",
        "      <td>4227</td>\n",
        "      <td>0.034</td>\n",
        "      <td>38</td>\n",
        "      <td>42</td>\n",
        "      <td>0.024045</td>\n",
        "      <td>1234</td>\n",
        "      <td>1 min  0 sec</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>5th</th>\n",
        "      <td>Past</td>\n",
        "      <td>25Jun2020</td>\n",
        "      <td>04Jul2020</td>\n",
        "      <td>37974750</td>\n",
        "      <td>SIR-F</td>\n",
        "      <td>0.58</td>\n",
        "      <td>0.000266</td>\n",
        "      <td>0.000257</td>\n",
        "      <td>0.006358</td>\n",
        "      <td>0.010631</td>\n",
        "      <td>360</td>\n",
        "      <td>974</td>\n",
        "      <td>0.000</td>\n",
        "      <td>23</td>\n",
        "      <td>39</td>\n",
        "      <td>0.014428</td>\n",
        "      <td>366</td>\n",
        "      <td>0 min 15 sec</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>6th</th>\n",
        "      <td>Past</td>\n",
        "      <td>05Jul2020</td>\n",
        "      <td>17Jul2020</td>\n",
        "      <td>37974750</td>\n",
        "      <td>SIR-F</td>\n",
        "      <td>0.61</td>\n",
        "      <td>0.016288</td>\n",
        "      <td>0.000039</td>\n",
        "      <td>0.008003</td>\n",
        "      <td>0.012971</td>\n",
        "      <td>360</td>\n",
        "      <td>6345</td>\n",
        "      <td>0.016</td>\n",
        "      <td>19</td>\n",
        "      <td>31</td>\n",
        "      <td>0.017149</td>\n",
        "      <td>471</td>\n",
        "      <td>0 min 20 sec</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>7th</th>\n",
        "      <td>Past</td>\n",
        "      <td>18Jul2020</td>\n",
        "      <td>26Jul2020</td>\n",
        "      <td>37974750</td>\n",
        "      <td>SIR-F</td>\n",
        "      <td>1.09</td>\n",
        "      <td>0.000300</td>\n",
        "      <td>0.000230</td>\n",
        "      <td>0.012753</td>\n",
        "      <td>0.011479</td>\n",
        "      <td>360</td>\n",
        "      <td>1086</td>\n",
        "      <td>0.000</td>\n",
        "      <td>21</td>\n",
        "      <td>19</td>\n",
        "      <td>0.007615</td>\n",
        "      <td>433</td>\n",
        "      <td>0 min 15 sec</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>8th</th>\n",
        "      <td>Past</td>\n",
        "      <td>27Jul2020</td>\n",
        "      <td>04Aug2020</td>\n",
        "      <td>37974750</td>\n",
        "      <td>SIR-F</td>\n",
        "      <td>1.96</td>\n",
        "      <td>0.000471</td>\n",
        "      <td>0.000109</td>\n",
        "      <td>0.015053</td>\n",
        "      <td>0.007560</td>\n",
        "      <td>360</td>\n",
        "      <td>2287</td>\n",
        "      <td>0.000</td>\n",
        "      <td>33</td>\n",
        "      <td>16</td>\n",
        "      <td>0.009191</td>\n",
        "      <td>159</td>\n",
        "      <td>0 min  5 sec</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>9th</th>\n",
        "      <td>Past</td>\n",
        "      <td>05Aug2020</td>\n",
        "      <td>13Aug2020</td>\n",
        "      <td>37974750</td>\n",
        "      <td>SIR-F</td>\n",
        "      <td>2.08</td>\n",
        "      <td>0.000796</td>\n",
        "      <td>0.000158</td>\n",
        "      <td>0.013804</td>\n",
        "      <td>0.006477</td>\n",
        "      <td>360</td>\n",
        "      <td>1587</td>\n",
        "      <td>0.001</td>\n",
        "      <td>38</td>\n",
        "      <td>18</td>\n",
        "      <td>0.010957</td>\n",
        "      <td>1109</td>\n",
        "      <td>1 min  0 sec</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th rowspan=\"10\" valign=\"top\">Bahrain</th>\n",
        "      <th>0th</th>\n",
        "      <td>Past</td>\n",
        "      <td>06May2020</td>\n",
        "      <td>25May2020</td>\n",
        "      <td>1569439</td>\n",
        "      <td>SIR-F</td>\n",
        "      <td>2.63</td>\n",
        "      <td>0.001254</td>\n",
        "      <td>0.000001</td>\n",
        "      <td>0.020811</td>\n",
        "      <td>0.007911</td>\n",
        "      <td>360</td>\n",
        "      <td>174012</td>\n",
        "      <td>0.001</td>\n",
        "      <td>31</td>\n",
        "      <td>12</td>\n",
        "      <td>0.174479</td>\n",
        "      <td>1167</td>\n",
        "      <td>1 min  0 sec</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>1st</th>\n",
        "      <td>Past</td>\n",
        "      <td>26May2020</td>\n",
        "      <td>04Jun2020</td>\n",
        "      <td>1569439</td>\n",
        "      <td>SIR-F</td>\n",
        "      <td>1.44</td>\n",
        "      <td>0.000019</td>\n",
        "      <td>0.000041</td>\n",
        "      <td>0.022700</td>\n",
        "      <td>0.015726</td>\n",
        "      <td>360</td>\n",
        "      <td>6137</td>\n",
        "      <td>0.000</td>\n",
        "      <td>15</td>\n",
        "      <td>11</td>\n",
        "      <td>0.042331</td>\n",
        "      <td>1121</td>\n",
        "      <td>0 min 55 sec</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>2nd</th>\n",
        "      <td>Past</td>\n",
        "      <td>05Jun2020</td>\n",
        "      <td>13Jun2020</td>\n",
        "      <td>1569439</td>\n",
        "      <td>SIR-F</td>\n",
        "      <td>1.06</td>\n",
        "      <td>0.000455</td>\n",
        "      <td>0.000084</td>\n",
        "      <td>0.022557</td>\n",
        "      <td>0.021142</td>\n",
        "      <td>360</td>\n",
        "      <td>2977</td>\n",
        "      <td>0.000</td>\n",
        "      <td>11</td>\n",
        "      <td>11</td>\n",
        "      <td>0.027833</td>\n",
        "      <td>1519</td>\n",
        "      <td>1 min  0 sec</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>3rd</th>\n",
        "      <td>Past</td>\n",
        "      <td>14Jun2020</td>\n",
        "      <td>21Jun2020</td>\n",
        "      <td>1569439</td>\n",
        "      <td>SIR-F</td>\n",
        "      <td>0.99</td>\n",
        "      <td>0.000636</td>\n",
        "      <td>0.000117</td>\n",
        "      <td>0.022416</td>\n",
        "      <td>0.022518</td>\n",
        "      <td>360</td>\n",
        "      <td>2143</td>\n",
        "      <td>0.001</td>\n",
        "      <td>11</td>\n",
        "      <td>11</td>\n",
        "      <td>0.032996</td>\n",
        "      <td>1165</td>\n",
        "      <td>1 min  0 sec</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>4th</th>\n",
        "      <td>Past</td>\n",
        "      <td>22Jun2020</td>\n",
        "      <td>29Jun2020</td>\n",
        "      <td>1569439</td>\n",
        "      <td>SIR-F</td>\n",
        "      <td>0.93</td>\n",
        "      <td>0.000433</td>\n",
        "      <td>0.000098</td>\n",
        "      <td>0.024508</td>\n",
        "      <td>0.026288</td>\n",
        "      <td>360</td>\n",
        "      <td>2549</td>\n",
        "      <td>0.000</td>\n",
        "      <td>9</td>\n",
        "      <td>10</td>\n",
        "      <td>0.023426</td>\n",
        "      <td>1168</td>\n",
        "      <td>1 min  0 sec</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>5th</th>\n",
        "      <td>Past</td>\n",
        "      <td>30Jun2020</td>\n",
        "      <td>07Jul2020</td>\n",
        "      <td>1569439</td>\n",
        "      <td>SIR-F</td>\n",
        "      <td>0.84</td>\n",
        "      <td>0.000252</td>\n",
        "      <td>0.000076</td>\n",
        "      <td>0.026814</td>\n",
        "      <td>0.032004</td>\n",
        "      <td>360</td>\n",
        "      <td>3296</td>\n",
        "      <td>0.000</td>\n",
        "      <td>7</td>\n",
        "      <td>9</td>\n",
        "      <td>0.019609</td>\n",
        "      <td>577</td>\n",
        "      <td>0 min 25 sec</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>6th</th>\n",
        "      <td>Past</td>\n",
        "      <td>08Jul2020</td>\n",
        "      <td>15Jul2020</td>\n",
        "      <td>1569439</td>\n",
        "      <td>SIR-F</td>\n",
        "      <td>0.86</td>\n",
        "      <td>0.000637</td>\n",
        "      <td>0.000117</td>\n",
        "      <td>0.030096</td>\n",
        "      <td>0.034677</td>\n",
        "      <td>360</td>\n",
        "      <td>2144</td>\n",
        "      <td>0.001</td>\n",
        "      <td>7</td>\n",
        "      <td>8</td>\n",
        "      <td>0.016334</td>\n",
        "      <td>1186</td>\n",
        "      <td>1 min  0 sec</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>7th</th>\n",
        "      <td>Past</td>\n",
        "      <td>16Jul2020</td>\n",
        "      <td>23Jul2020</td>\n",
        "      <td>1569439</td>\n",
        "      <td>SIR-F</td>\n",
        "      <td>0.82</td>\n",
        "      <td>0.000550</td>\n",
        "      <td>0.000109</td>\n",
        "      <td>0.028061</td>\n",
        "      <td>0.034077</td>\n",
        "      <td>360</td>\n",
        "      <td>2283</td>\n",
        "      <td>0.001</td>\n",
        "      <td>7</td>\n",
        "      <td>8</td>\n",
        "      <td>0.017544</td>\n",
        "      <td>121</td>\n",
        "      <td>0 min  5 sec</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>8th</th>\n",
        "      <td>Past</td>\n",
        "      <td>24Jul2020</td>\n",
        "      <td>02Aug2020</td>\n",
        "      <td>1569439</td>\n",
        "      <td>SIR-F</td>\n",
        "      <td>0.83</td>\n",
        "      <td>0.000910</td>\n",
        "      <td>0.000071</td>\n",
        "      <td>0.028003</td>\n",
        "      <td>0.033740</td>\n",
        "      <td>360</td>\n",
        "      <td>3514</td>\n",
        "      <td>0.001</td>\n",
        "      <td>7</td>\n",
        "      <td>8</td>\n",
        "      <td>0.025115</td>\n",
        "      <td>255</td>\n",
        "      <td>0 min 10 sec</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>9th</th>\n",
        "      <td>Past</td>\n",
        "      <td>03Aug2020</td>\n",
        "      <td>13Aug2020</td>\n",
        "      <td>1569439</td>\n",
        "      <td>SIR-F</td>\n",
        "      <td>1.23</td>\n",
        "      <td>0.000066</td>\n",
        "      <td>0.000152</td>\n",
        "      <td>0.033395</td>\n",
        "      <td>0.027001</td>\n",
        "      <td>360</td>\n",
        "      <td>1645</td>\n",
        "      <td>0.000</td>\n",
        "      <td>9</td>\n",
        "      <td>7</td>\n",
        "      <td>0.018498</td>\n",
        "      <td>340</td>\n",
        "      <td>0 min 15 sec</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th rowspan=\"10\" valign=\"top\">Czech Republic</th>\n",
        "      <th>0th</th>\n",
        "      <td>Past</td>\n",
        "      <td>07Apr2020</td>\n",
        "      <td>16Apr2020</td>\n",
        "      <td>10649800</td>\n",
        "      <td>SIR-F</td>\n",
        "      <td>1.02</td>\n",
        "      <td>0.048100</td>\n",
        "      <td>0.000158</td>\n",
        "      <td>0.007716</td>\n",
        "      <td>0.007013</td>\n",
        "      <td>360</td>\n",
        "      <td>1582</td>\n",
        "      <td>0.048</td>\n",
        "      <td>35</td>\n",
        "      <td>32</td>\n",
        "      <td>0.079159</td>\n",
        "      <td>1036</td>\n",
        "      <td>1 min  0 sec</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>1st</th>\n",
        "      <td>Past</td>\n",
        "      <td>17Apr2020</td>\n",
        "      <td>27Apr2020</td>\n",
        "      <td>10649800</td>\n",
        "      <td>SIR-F</td>\n",
        "      <td>0.36</td>\n",
        "      <td>0.047056</td>\n",
        "      <td>0.000059</td>\n",
        "      <td>0.004238</td>\n",
        "      <td>0.011174</td>\n",
        "      <td>360</td>\n",
        "      <td>4228</td>\n",
        "      <td>0.047</td>\n",
        "      <td>22</td>\n",
        "      <td>58</td>\n",
        "      <td>0.074678</td>\n",
        "      <td>269</td>\n",
        "      <td>0 min 10 sec</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>2nd</th>\n",
        "      <td>Past</td>\n",
        "      <td>28Apr2020</td>\n",
        "      <td>14May2020</td>\n",
        "      <td>10649800</td>\n",
        "      <td>SIR-F</td>\n",
        "      <td>0.41</td>\n",
        "      <td>0.021433</td>\n",
        "      <td>0.000181</td>\n",
        "      <td>0.003697</td>\n",
        "      <td>0.008659</td>\n",
        "      <td>360</td>\n",
        "      <td>1378</td>\n",
        "      <td>0.021</td>\n",
        "      <td>28</td>\n",
        "      <td>67</td>\n",
        "      <td>0.038267</td>\n",
        "      <td>440</td>\n",
        "      <td>0 min 20 sec</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>3rd</th>\n",
        "      <td>Past</td>\n",
        "      <td>15May2020</td>\n",
        "      <td>04Jun2020</td>\n",
        "      <td>10649800</td>\n",
        "      <td>SIR-F</td>\n",
        "      <td>0.76</td>\n",
        "      <td>0.000133</td>\n",
        "      <td>0.000168</td>\n",
        "      <td>0.005027</td>\n",
        "      <td>0.006455</td>\n",
        "      <td>360</td>\n",
        "      <td>1486</td>\n",
        "      <td>0.000</td>\n",
        "      <td>38</td>\n",
        "      <td>49</td>\n",
        "      <td>0.035281</td>\n",
        "      <td>358</td>\n",
        "      <td>0 min 15 sec</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>4th</th>\n",
        "      <td>Past</td>\n",
        "      <td>05Jun2020</td>\n",
        "      <td>24Jun2020</td>\n",
        "      <td>10649800</td>\n",
        "      <td>SIR-F</td>\n",
        "      <td>1.48</td>\n",
        "      <td>0.000230</td>\n",
        "      <td>0.000060</td>\n",
        "      <td>0.006328</td>\n",
        "      <td>0.004206</td>\n",
        "      <td>360</td>\n",
        "      <td>4195</td>\n",
        "      <td>0.000</td>\n",
        "      <td>59</td>\n",
        "      <td>39</td>\n",
        "      <td>0.024854</td>\n",
        "      <td>1236</td>\n",
        "      <td>1 min  0 sec</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>5th</th>\n",
        "      <td>Past</td>\n",
        "      <td>25Jun2020</td>\n",
        "      <td>05Jul2020</td>\n",
        "      <td>10649800</td>\n",
        "      <td>SIR-F</td>\n",
        "      <td>3.65</td>\n",
        "      <td>0.001024</td>\n",
        "      <td>0.000036</td>\n",
        "      <td>0.013479</td>\n",
        "      <td>0.003650</td>\n",
        "      <td>360</td>\n",
        "      <td>6891</td>\n",
        "      <td>0.001</td>\n",
        "      <td>68</td>\n",
        "      <td>18</td>\n",
        "      <td>0.043309</td>\n",
        "      <td>655</td>\n",
        "      <td>0 min 25 sec</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>6th</th>\n",
        "      <td>Past</td>\n",
        "      <td>06Jul2020</td>\n",
        "      <td>16Jul2020</td>\n",
        "      <td>10649800</td>\n",
        "      <td>SIR-F</td>\n",
        "      <td>0.90</td>\n",
        "      <td>0.000685</td>\n",
        "      <td>0.000021</td>\n",
        "      <td>0.006646</td>\n",
        "      <td>0.007350</td>\n",
        "      <td>360</td>\n",
        "      <td>11761</td>\n",
        "      <td>0.001</td>\n",
        "      <td>34</td>\n",
        "      <td>37</td>\n",
        "      <td>0.042497</td>\n",
        "      <td>1100</td>\n",
        "      <td>1 min  0 sec</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>7th</th>\n",
        "      <td>Past</td>\n",
        "      <td>17Jul2020</td>\n",
        "      <td>25Jul2020</td>\n",
        "      <td>10649800</td>\n",
        "      <td>SIR-F</td>\n",
        "      <td>2.00</td>\n",
        "      <td>0.000251</td>\n",
        "      <td>0.000060</td>\n",
        "      <td>0.009072</td>\n",
        "      <td>0.004466</td>\n",
        "      <td>360</td>\n",
        "      <td>4189</td>\n",
        "      <td>0.000</td>\n",
        "      <td>55</td>\n",
        "      <td>27</td>\n",
        "      <td>0.008180</td>\n",
        "      <td>666</td>\n",
        "      <td>0 min 30 sec</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>8th</th>\n",
        "      <td>Past</td>\n",
        "      <td>26Jul2020</td>\n",
        "      <td>03Aug2020</td>\n",
        "      <td>10649800</td>\n",
        "      <td>SIR-F</td>\n",
        "      <td>3.11</td>\n",
        "      <td>0.001097</td>\n",
        "      <td>0.000026</td>\n",
        "      <td>0.013585</td>\n",
        "      <td>0.004338</td>\n",
        "      <td>360</td>\n",
        "      <td>9563</td>\n",
        "      <td>0.001</td>\n",
        "      <td>57</td>\n",
        "      <td>18</td>\n",
        "      <td>0.039869</td>\n",
        "      <td>1372</td>\n",
        "      <td>1 min  0 sec</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>9th</th>\n",
        "      <td>Past</td>\n",
        "      <td>04Aug2020</td>\n",
        "      <td>13Aug2020</td>\n",
        "      <td>10649800</td>\n",
        "      <td>SIR-F</td>\n",
        "      <td>1.17</td>\n",
        "      <td>0.000344</td>\n",
        "      <td>0.000079</td>\n",
        "      <td>0.008299</td>\n",
        "      <td>0.007002</td>\n",
        "      <td>360</td>\n",
        "      <td>3161</td>\n",
        "      <td>0.000</td>\n",
        "      <td>35</td>\n",
        "      <td>30</td>\n",
        "      <td>0.023499</td>\n",
        "      <td>1245</td>\n",
        "      <td>1 min  0 sec</td>\n",
        "    </tr>\n",
        "  </tbody>\n",
        "</table>\n",
        "</div>"
       ],
       "output_type": "pyout",
       "prompt_number": 11,
       "text": [
        "                      Type      Start        End  Population    ODE    Rt  \\\n",
        "Country        Phase                                                        \n",
        "Iran           0th    Past  28Mar2020  12Apr2020    81800269  SIR-F  1.35   \n",
        "               1st    Past  13Apr2020  04May2020    81800269  SIR-F  0.70   \n",
        "               2nd    Past  05May2020  20May2020    81800269  SIR-F  1.42   \n",
        "               3rd    Past  21May2020  02Jun2020    81800269  SIR-F  1.17   \n",
        "               4th    Past  03Jun2020  15Jun2020    81800269  SIR-F  1.11   \n",
        "               5th    Past  16Jun2020  26Jun2020    81800269  SIR-F  0.98   \n",
        "               6th    Past  27Jun2020  06Jul2020    81800269  SIR-F  0.91   \n",
        "               7th    Past  07Jul2020  18Jul2020    81800269  SIR-F  0.85   \n",
        "               8th    Past  19Jul2020  30Jul2020    81800269  SIR-F  1.06   \n",
        "               9th    Past  31Jul2020  13Aug2020    81800269  SIR-F  1.02   \n",
        "Poland         0th    Past  23Apr2020  10May2020    37974750  SIR-F  1.29   \n",
        "               1st    Past  11May2020  21May2020    37974750  SIR-F  1.37   \n",
        "               2nd    Past  22May2020  03Jun2020    37974750  SIR-F  1.22   \n",
        "               3rd    Past  04Jun2020  13Jun2020    37974750  SIR-F  2.08   \n",
        "               4th    Past  14Jun2020  24Jun2020    37974750  SIR-F  0.89   \n",
        "               5th    Past  25Jun2020  04Jul2020    37974750  SIR-F  0.58   \n",
        "               6th    Past  05Jul2020  17Jul2020    37974750  SIR-F  0.61   \n",
        "               7th    Past  18Jul2020  26Jul2020    37974750  SIR-F  1.09   \n",
        "               8th    Past  27Jul2020  04Aug2020    37974750  SIR-F  1.96   \n",
        "               9th    Past  05Aug2020  13Aug2020    37974750  SIR-F  2.08   \n",
        "Bahrain        0th    Past  06May2020  25May2020     1569439  SIR-F  2.63   \n",
        "               1st    Past  26May2020  04Jun2020     1569439  SIR-F  1.44   \n",
        "               2nd    Past  05Jun2020  13Jun2020     1569439  SIR-F  1.06   \n",
        "               3rd    Past  14Jun2020  21Jun2020     1569439  SIR-F  0.99   \n",
        "               4th    Past  22Jun2020  29Jun2020     1569439  SIR-F  0.93   \n",
        "               5th    Past  30Jun2020  07Jul2020     1569439  SIR-F  0.84   \n",
        "               6th    Past  08Jul2020  15Jul2020     1569439  SIR-F  0.86   \n",
        "               7th    Past  16Jul2020  23Jul2020     1569439  SIR-F  0.82   \n",
        "               8th    Past  24Jul2020  02Aug2020     1569439  SIR-F  0.83   \n",
        "               9th    Past  03Aug2020  13Aug2020     1569439  SIR-F  1.23   \n",
        "Czech Republic 0th    Past  07Apr2020  16Apr2020    10649800  SIR-F  1.02   \n",
        "               1st    Past  17Apr2020  27Apr2020    10649800  SIR-F  0.36   \n",
        "               2nd    Past  28Apr2020  14May2020    10649800  SIR-F  0.41   \n",
        "               3rd    Past  15May2020  04Jun2020    10649800  SIR-F  0.76   \n",
        "               4th    Past  05Jun2020  24Jun2020    10649800  SIR-F  1.48   \n",
        "               5th    Past  25Jun2020  05Jul2020    10649800  SIR-F  3.65   \n",
        "               6th    Past  06Jul2020  16Jul2020    10649800  SIR-F  0.90   \n",
        "               7th    Past  17Jul2020  25Jul2020    10649800  SIR-F  2.00   \n",
        "               8th    Past  26Jul2020  03Aug2020    10649800  SIR-F  3.11   \n",
        "               9th    Past  04Aug2020  13Aug2020    10649800  SIR-F  1.17   \n",
        "\n",
        "                         theta     kappa       rho     sigma  tau  \\\n",
        "Country        Phase                                                \n",
        "Iran           0th    0.052383  0.000156  0.023055  0.016002  360   \n",
        "               1st    0.026814  0.000725  0.018222  0.024623  360   \n",
        "               2nd    0.018373  0.000483  0.026592  0.017854  360   \n",
        "               3rd    0.018216  0.000182  0.024205  0.020082  360   \n",
        "               4th    0.017161  0.000338  0.020119  0.017535  360   \n",
        "               5th    0.000833  0.000930  0.020759  0.020198  360   \n",
        "               6th    0.051843  0.000093  0.022732  0.023584  360   \n",
        "               7th    0.056678  0.000598  0.024420  0.026480  360   \n",
        "               8th    0.082227  0.000114  0.028696  0.024636  360   \n",
        "               9th    0.059340  0.000268  0.025926  0.023604  360   \n",
        "Poland         0th    0.056002  0.000054  0.009000  0.006556  360   \n",
        "               1st    0.000229  0.000424  0.009532  0.006535  360   \n",
        "               2nd    0.019244  0.000084  0.007728  0.006153  360   \n",
        "               3rd    0.000300  0.000273  0.009114  0.004099  360   \n",
        "               4th    0.033505  0.000059  0.005942  0.006420  360   \n",
        "               5th    0.000266  0.000257  0.006358  0.010631  360   \n",
        "               6th    0.016288  0.000039  0.008003  0.012971  360   \n",
        "               7th    0.000300  0.000230  0.012753  0.011479  360   \n",
        "               8th    0.000471  0.000109  0.015053  0.007560  360   \n",
        "               9th    0.000796  0.000158  0.013804  0.006477  360   \n",
        "Bahrain        0th    0.001254  0.000001  0.020811  0.007911  360   \n",
        "               1st    0.000019  0.000041  0.022700  0.015726  360   \n",
        "               2nd    0.000455  0.000084  0.022557  0.021142  360   \n",
        "               3rd    0.000636  0.000117  0.022416  0.022518  360   \n",
        "               4th    0.000433  0.000098  0.024508  0.026288  360   \n",
        "               5th    0.000252  0.000076  0.026814  0.032004  360   \n",
        "               6th    0.000637  0.000117  0.030096  0.034677  360   \n",
        "               7th    0.000550  0.000109  0.028061  0.034077  360   \n",
        "               8th    0.000910  0.000071  0.028003  0.033740  360   \n",
        "               9th    0.000066  0.000152  0.033395  0.027001  360   \n",
        "Czech Republic 0th    0.048100  0.000158  0.007716  0.007013  360   \n",
        "               1st    0.047056  0.000059  0.004238  0.011174  360   \n",
        "               2nd    0.021433  0.000181  0.003697  0.008659  360   \n",
        "               3rd    0.000133  0.000168  0.005027  0.006455  360   \n",
        "               4th    0.000230  0.000060  0.006328  0.004206  360   \n",
        "               5th    0.001024  0.000036  0.013479  0.003650  360   \n",
        "               6th    0.000685  0.000021  0.006646  0.007350  360   \n",
        "               7th    0.000251  0.000060  0.009072  0.004466  360   \n",
        "               8th    0.001097  0.000026  0.013585  0.004338  360   \n",
        "               9th    0.000344  0.000079  0.008299  0.007002  360   \n",
        "\n",
        "                      1/alpha2 [day]  alpha1 [-]  1/gamma [day]  1/beta [day]  \\\n",
        "Country        Phase                                                            \n",
        "Iran           0th              1599       0.052             15            10   \n",
        "               1st               344       0.027             10            13   \n",
        "               2nd               517       0.018             14             9   \n",
        "               3rd              1376       0.018             12            10   \n",
        "               4th               740       0.017             14            12   \n",
        "               5th               268       0.001             12            12   \n",
        "               6th              2698       0.052             10            10   \n",
        "               7th               418       0.057              9            10   \n",
        "               8th              2198       0.082             10             8   \n",
        "               9th               934       0.059             10             9   \n",
        "Poland         0th              4601       0.056             38            27   \n",
        "               1st               589       0.000             38            26   \n",
        "               2nd              2971       0.019             40            32   \n",
        "               3rd               916       0.000             60            27   \n",
        "               4th              4227       0.034             38            42   \n",
        "               5th               974       0.000             23            39   \n",
        "               6th              6345       0.016             19            31   \n",
        "               7th              1086       0.000             21            19   \n",
        "               8th              2287       0.000             33            16   \n",
        "               9th              1587       0.001             38            18   \n",
        "Bahrain        0th            174012       0.001             31            12   \n",
        "               1st              6137       0.000             15            11   \n",
        "               2nd              2977       0.000             11            11   \n",
        "               3rd              2143       0.001             11            11   \n",
        "               4th              2549       0.000              9            10   \n",
        "               5th              3296       0.000              7             9   \n",
        "               6th              2144       0.001              7             8   \n",
        "               7th              2283       0.001              7             8   \n",
        "               8th              3514       0.001              7             8   \n",
        "               9th              1645       0.000              9             7   \n",
        "Czech Republic 0th              1582       0.048             35            32   \n",
        "               1st              4228       0.047             22            58   \n",
        "               2nd              1378       0.021             28            67   \n",
        "               3rd              1486       0.000             38            49   \n",
        "               4th              4195       0.000             59            39   \n",
        "               5th              6891       0.001             68            18   \n",
        "               6th             11761       0.001             34            37   \n",
        "               7th              4189       0.000             55            27   \n",
        "               8th              9563       0.001             57            18   \n",
        "               9th              3161       0.000             35            30   \n",
        "\n",
        "                         RMSLE  Trials       Runtime  \n",
        "Country        Phase                                  \n",
        "Iran           0th    0.195790    1199  1 min  0 sec  \n",
        "               1st    0.030652     610  0 min 25 sec  \n",
        "               2nd    0.019420     459  0 min 15 sec  \n",
        "               3rd    0.013804    1138  1 min  0 sec  \n",
        "               4th    0.019490     624  0 min 30 sec  \n",
        "               5th    0.018972    1221  1 min  0 sec  \n",
        "               6th    0.006641     143  0 min  5 sec  \n",
        "               7th    0.008305     250  0 min 10 sec  \n",
        "               8th    0.013572     523  0 min 15 sec  \n",
        "               9th    0.015135     488  0 min 20 sec  \n",
        "Poland         0th    0.062129     241  0 min 10 sec  \n",
        "               1st    0.014849     781  0 min 25 sec  \n",
        "               2nd    0.013709     991  0 min 45 sec  \n",
        "               3rd    0.010338    1104  0 min 55 sec  \n",
        "               4th    0.024045    1234  1 min  0 sec  \n",
        "               5th    0.014428     366  0 min 15 sec  \n",
        "               6th    0.017149     471  0 min 20 sec  \n",
        "               7th    0.007615     433  0 min 15 sec  \n",
        "               8th    0.009191     159  0 min  5 sec  \n",
        "               9th    0.010957    1109  1 min  0 sec  \n",
        "Bahrain        0th    0.174479    1167  1 min  0 sec  \n",
        "               1st    0.042331    1121  0 min 55 sec  \n",
        "               2nd    0.027833    1519  1 min  0 sec  \n",
        "               3rd    0.032996    1165  1 min  0 sec  \n",
        "               4th    0.023426    1168  1 min  0 sec  \n",
        "               5th    0.019609     577  0 min 25 sec  \n",
        "               6th    0.016334    1186  1 min  0 sec  \n",
        "               7th    0.017544     121  0 min  5 sec  \n",
        "               8th    0.025115     255  0 min 10 sec  \n",
        "               9th    0.018498     340  0 min 15 sec  \n",
        "Czech Republic 0th    0.079159    1036  1 min  0 sec  \n",
        "               1st    0.074678     269  0 min 10 sec  \n",
        "               2nd    0.038267     440  0 min 20 sec  \n",
        "               3rd    0.035281     358  0 min 15 sec  \n",
        "               4th    0.024854    1236  1 min  0 sec  \n",
        "               5th    0.043309     655  0 min 25 sec  \n",
        "               6th    0.042497    1100  1 min  0 sec  \n",
        "               7th    0.008180     666  0 min 30 sec  \n",
        "               8th    0.039869    1372  1 min  0 sec  \n",
        "               9th    0.023499    1245  1 min  0 sec  "
       ]
      }
     ],
     "prompt_number": 11
    },
    {
     "cell_type": "markdown",
     "metadata": {},
     "source": [
      "## Compare the history of parameters\n",
      "Here, compare the history of parameter values if countries."
     ]
    },
    {
     "cell_type": "heading",
     "level": 3,
     "metadata": {},
     "source": [
      "$Rt$: Reprodcution number $\\mathrm{[-]}$"
     ]
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "analyser.param_history(\"Rt\", roll_window=None).tail()"
     ],
     "language": "python",
     "metadata": {},
     "outputs": [
      {
       "output_type": "display_data",
       "png": "\n",
       "text": [
        "<Figure size 648x432 with 1 Axes>"
       ]
      },
      {
       "html": [
        "<div>\n",
        "<style scoped>\n",
        "    .dataframe tbody tr th:only-of-type {\n",
        "        vertical-align: middle;\n",
        "    }\n",
        "\n",
        "    .dataframe tbody tr th {\n",
        "        vertical-align: top;\n",
        "    }\n",
        "\n",
        "    .dataframe thead th {\n",
        "        text-align: right;\n",
        "    }\n",
        "</style>\n",
        "<table border=\"1\" class=\"dataframe\">\n",
        "  <thead>\n",
        "    <tr style=\"text-align: right;\">\n",
        "      <th>Country</th>\n",
        "      <th>Bahrain</th>\n",
        "      <th>Canada</th>\n",
        "      <th>Czech Republic</th>\n",
        "      <th>Guinea</th>\n",
        "      <th>Iran</th>\n",
        "      <th>Italy</th>\n",
        "      <th>Kuwait</th>\n",
        "      <th>Poland</th>\n",
        "      <th>Portugal</th>\n",
        "      <th>Senegal</th>\n",
        "      <th>United Arab Emirates</th>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>Date</th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "    </tr>\n",
        "  </thead>\n",
        "  <tbody>\n",
        "    <tr>\n",
        "      <th>2020-08-09</th>\n",
        "      <td>1.23</td>\n",
        "      <td>0.89</td>\n",
        "      <td>1.17</td>\n",
        "      <td>NaN</td>\n",
        "      <td>1.02</td>\n",
        "      <td>0.9</td>\n",
        "      <td>0.89</td>\n",
        "      <td>2.08</td>\n",
        "      <td>0.79</td>\n",
        "      <td>1.82</td>\n",
        "      <td>0.83</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>2020-08-10</th>\n",
        "      <td>1.23</td>\n",
        "      <td>0.89</td>\n",
        "      <td>1.17</td>\n",
        "      <td>NaN</td>\n",
        "      <td>1.02</td>\n",
        "      <td>0.9</td>\n",
        "      <td>0.89</td>\n",
        "      <td>2.08</td>\n",
        "      <td>0.79</td>\n",
        "      <td>1.82</td>\n",
        "      <td>0.83</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>2020-08-11</th>\n",
        "      <td>1.23</td>\n",
        "      <td>0.89</td>\n",
        "      <td>1.17</td>\n",
        "      <td>NaN</td>\n",
        "      <td>1.02</td>\n",
        "      <td>0.9</td>\n",
        "      <td>0.89</td>\n",
        "      <td>2.08</td>\n",
        "      <td>0.79</td>\n",
        "      <td>1.82</td>\n",
        "      <td>0.83</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>2020-08-12</th>\n",
        "      <td>1.23</td>\n",
        "      <td>0.89</td>\n",
        "      <td>1.17</td>\n",
        "      <td>NaN</td>\n",
        "      <td>1.02</td>\n",
        "      <td>0.9</td>\n",
        "      <td>0.89</td>\n",
        "      <td>2.08</td>\n",
        "      <td>0.79</td>\n",
        "      <td>1.82</td>\n",
        "      <td>0.83</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>2020-08-13</th>\n",
        "      <td>1.23</td>\n",
        "      <td>0.89</td>\n",
        "      <td>1.17</td>\n",
        "      <td>NaN</td>\n",
        "      <td>1.02</td>\n",
        "      <td>0.9</td>\n",
        "      <td>0.89</td>\n",
        "      <td>2.08</td>\n",
        "      <td>0.79</td>\n",
        "      <td>1.82</td>\n",
        "      <td>0.83</td>\n",
        "    </tr>\n",
        "  </tbody>\n",
        "</table>\n",
        "</div>"
       ],
       "output_type": "pyout",
       "prompt_number": 12,
       "text": [
        "Country     Bahrain  Canada  Czech Republic  Guinea  Iran  Italy  Kuwait  \\\n",
        "Date                                                                       \n",
        "2020-08-09     1.23    0.89            1.17     NaN  1.02    0.9    0.89   \n",
        "2020-08-10     1.23    0.89            1.17     NaN  1.02    0.9    0.89   \n",
        "2020-08-11     1.23    0.89            1.17     NaN  1.02    0.9    0.89   \n",
        "2020-08-12     1.23    0.89            1.17     NaN  1.02    0.9    0.89   \n",
        "2020-08-13     1.23    0.89            1.17     NaN  1.02    0.9    0.89   \n",
        "\n",
        "Country     Poland  Portugal  Senegal  United Arab Emirates  \n",
        "Date                                                         \n",
        "2020-08-09    2.08      0.79     1.82                  0.83  \n",
        "2020-08-10    2.08      0.79     1.82                  0.83  \n",
        "2020-08-11    2.08      0.79     1.82                  0.83  \n",
        "2020-08-12    2.08      0.79     1.82                  0.83  \n",
        "2020-08-13    2.08      0.79     1.82                  0.83  "
       ]
      }
     ],
     "prompt_number": 12
    },
    {
     "cell_type": "heading",
     "level": 3,
     "metadata": {},
     "source": [
      "$\\rho$: Effective contact rate $\\mathrm{[-]}$"
     ]
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "analyser.param_history(\"rho\", roll_window=None).tail()"
     ],
     "language": "python",
     "metadata": {},
     "outputs": [
      {
       "output_type": "display_data",
       "png": "\n",
       "text": [
        "<Figure size 648x432 with 1 Axes>"
       ]
      },
      {
       "html": [
        "<div>\n",
        "<style scoped>\n",
        "    .dataframe tbody tr th:only-of-type {\n",
        "        vertical-align: middle;\n",
        "    }\n",
        "\n",
        "    .dataframe tbody tr th {\n",
        "        vertical-align: top;\n",
        "    }\n",
        "\n",
        "    .dataframe thead th {\n",
        "        text-align: right;\n",
        "    }\n",
        "</style>\n",
        "<table border=\"1\" class=\"dataframe\">\n",
        "  <thead>\n",
        "    <tr style=\"text-align: right;\">\n",
        "      <th>Country</th>\n",
        "      <th>Bahrain</th>\n",
        "      <th>Canada</th>\n",
        "      <th>Czech Republic</th>\n",
        "      <th>Guinea</th>\n",
        "      <th>Iran</th>\n",
        "      <th>Italy</th>\n",
        "      <th>Kuwait</th>\n",
        "      <th>Poland</th>\n",
        "      <th>Portugal</th>\n",
        "      <th>Senegal</th>\n",
        "      <th>United Arab Emirates</th>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>Date</th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "    </tr>\n",
        "  </thead>\n",
        "  <tbody>\n",
        "    <tr>\n",
        "      <th>2020-08-09</th>\n",
        "      <td>0.033395</td>\n",
        "      <td>0.013946</td>\n",
        "      <td>0.008299</td>\n",
        "      <td>NaN</td>\n",
        "      <td>0.025926</td>\n",
        "      <td>0.004503</td>\n",
        "      <td>0.018583</td>\n",
        "      <td>0.013804</td>\n",
        "      <td>0.00367</td>\n",
        "      <td>0.007128</td>\n",
        "      <td>0.010616</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>2020-08-10</th>\n",
        "      <td>0.033395</td>\n",
        "      <td>0.013946</td>\n",
        "      <td>0.008299</td>\n",
        "      <td>NaN</td>\n",
        "      <td>0.025926</td>\n",
        "      <td>0.004503</td>\n",
        "      <td>0.018583</td>\n",
        "      <td>0.013804</td>\n",
        "      <td>0.00367</td>\n",
        "      <td>0.007128</td>\n",
        "      <td>0.010616</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>2020-08-11</th>\n",
        "      <td>0.033395</td>\n",
        "      <td>0.013946</td>\n",
        "      <td>0.008299</td>\n",
        "      <td>NaN</td>\n",
        "      <td>0.025926</td>\n",
        "      <td>0.004503</td>\n",
        "      <td>0.018583</td>\n",
        "      <td>0.013804</td>\n",
        "      <td>0.00367</td>\n",
        "      <td>0.007128</td>\n",
        "      <td>0.010616</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>2020-08-12</th>\n",
        "      <td>0.033395</td>\n",
        "      <td>0.013946</td>\n",
        "      <td>0.008299</td>\n",
        "      <td>NaN</td>\n",
        "      <td>0.025926</td>\n",
        "      <td>0.004503</td>\n",
        "      <td>0.018583</td>\n",
        "      <td>0.013804</td>\n",
        "      <td>0.00367</td>\n",
        "      <td>0.007128</td>\n",
        "      <td>0.010616</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>2020-08-13</th>\n",
        "      <td>0.033395</td>\n",
        "      <td>0.013946</td>\n",
        "      <td>0.008299</td>\n",
        "      <td>NaN</td>\n",
        "      <td>0.025926</td>\n",
        "      <td>0.004503</td>\n",
        "      <td>0.018583</td>\n",
        "      <td>0.013804</td>\n",
        "      <td>0.00367</td>\n",
        "      <td>0.007128</td>\n",
        "      <td>0.010616</td>\n",
        "    </tr>\n",
        "  </tbody>\n",
        "</table>\n",
        "</div>"
       ],
       "output_type": "pyout",
       "prompt_number": 13,
       "text": [
        "Country      Bahrain    Canada  Czech Republic  Guinea      Iran     Italy  \\\n",
        "Date                                                                         \n",
        "2020-08-09  0.033395  0.013946        0.008299     NaN  0.025926  0.004503   \n",
        "2020-08-10  0.033395  0.013946        0.008299     NaN  0.025926  0.004503   \n",
        "2020-08-11  0.033395  0.013946        0.008299     NaN  0.025926  0.004503   \n",
        "2020-08-12  0.033395  0.013946        0.008299     NaN  0.025926  0.004503   \n",
        "2020-08-13  0.033395  0.013946        0.008299     NaN  0.025926  0.004503   \n",
        "\n",
        "Country       Kuwait    Poland  Portugal   Senegal  United Arab Emirates  \n",
        "Date                                                                      \n",
        "2020-08-09  0.018583  0.013804   0.00367  0.007128              0.010616  \n",
        "2020-08-10  0.018583  0.013804   0.00367  0.007128              0.010616  \n",
        "2020-08-11  0.018583  0.013804   0.00367  0.007128              0.010616  \n",
        "2020-08-12  0.018583  0.013804   0.00367  0.007128              0.010616  \n",
        "2020-08-13  0.018583  0.013804   0.00367  0.007128              0.010616  "
       ]
      }
     ],
     "prompt_number": 13
    },
    {
     "cell_type": "heading",
     "level": 3,
     "metadata": {},
     "source": [
      "$\\sigma$: Recovery rate $\\mathrm{[-]}$"
     ]
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "analyser.param_history(\"sigma\", roll_window=None).tail()"
     ],
     "language": "python",
     "metadata": {},
     "outputs": [
      {
       "output_type": "display_data",
       "png": "\n",
       "text": [
        "<Figure size 648x432 with 1 Axes>"
       ]
      },
      {
       "html": [
        "<div>\n",
        "<style scoped>\n",
        "    .dataframe tbody tr th:only-of-type {\n",
        "        vertical-align: middle;\n",
        "    }\n",
        "\n",
        "    .dataframe tbody tr th {\n",
        "        vertical-align: top;\n",
        "    }\n",
        "\n",
        "    .dataframe thead th {\n",
        "        text-align: right;\n",
        "    }\n",
        "</style>\n",
        "<table border=\"1\" class=\"dataframe\">\n",
        "  <thead>\n",
        "    <tr style=\"text-align: right;\">\n",
        "      <th>Country</th>\n",
        "      <th>Bahrain</th>\n",
        "      <th>Canada</th>\n",
        "      <th>Czech Republic</th>\n",
        "      <th>Guinea</th>\n",
        "      <th>Iran</th>\n",
        "      <th>Italy</th>\n",
        "      <th>Kuwait</th>\n",
        "      <th>Poland</th>\n",
        "      <th>Portugal</th>\n",
        "      <th>Senegal</th>\n",
        "      <th>United Arab Emirates</th>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>Date</th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "    </tr>\n",
        "  </thead>\n",
        "  <tbody>\n",
        "    <tr>\n",
        "      <th>2020-08-09</th>\n",
        "      <td>0.027001</td>\n",
        "      <td>0.015375</td>\n",
        "      <td>0.007002</td>\n",
        "      <td>NaN</td>\n",
        "      <td>0.023604</td>\n",
        "      <td>0.004832</td>\n",
        "      <td>0.020859</td>\n",
        "      <td>0.006477</td>\n",
        "      <td>0.004565</td>\n",
        "      <td>0.003749</td>\n",
        "      <td>0.012774</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>2020-08-10</th>\n",
        "      <td>0.027001</td>\n",
        "      <td>0.015375</td>\n",
        "      <td>0.007002</td>\n",
        "      <td>NaN</td>\n",
        "      <td>0.023604</td>\n",
        "      <td>0.004832</td>\n",
        "      <td>0.020859</td>\n",
        "      <td>0.006477</td>\n",
        "      <td>0.004565</td>\n",
        "      <td>0.003749</td>\n",
        "      <td>0.012774</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>2020-08-11</th>\n",
        "      <td>0.027001</td>\n",
        "      <td>0.015375</td>\n",
        "      <td>0.007002</td>\n",
        "      <td>NaN</td>\n",
        "      <td>0.023604</td>\n",
        "      <td>0.004832</td>\n",
        "      <td>0.020859</td>\n",
        "      <td>0.006477</td>\n",
        "      <td>0.004565</td>\n",
        "      <td>0.003749</td>\n",
        "      <td>0.012774</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>2020-08-12</th>\n",
        "      <td>0.027001</td>\n",
        "      <td>0.015375</td>\n",
        "      <td>0.007002</td>\n",
        "      <td>NaN</td>\n",
        "      <td>0.023604</td>\n",
        "      <td>0.004832</td>\n",
        "      <td>0.020859</td>\n",
        "      <td>0.006477</td>\n",
        "      <td>0.004565</td>\n",
        "      <td>0.003749</td>\n",
        "      <td>0.012774</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>2020-08-13</th>\n",
        "      <td>0.027001</td>\n",
        "      <td>0.015375</td>\n",
        "      <td>0.007002</td>\n",
        "      <td>NaN</td>\n",
        "      <td>0.023604</td>\n",
        "      <td>0.004832</td>\n",
        "      <td>0.020859</td>\n",
        "      <td>0.006477</td>\n",
        "      <td>0.004565</td>\n",
        "      <td>0.003749</td>\n",
        "      <td>0.012774</td>\n",
        "    </tr>\n",
        "  </tbody>\n",
        "</table>\n",
        "</div>"
       ],
       "output_type": "pyout",
       "prompt_number": 14,
       "text": [
        "Country      Bahrain    Canada  Czech Republic  Guinea      Iran     Italy  \\\n",
        "Date                                                                         \n",
        "2020-08-09  0.027001  0.015375        0.007002     NaN  0.023604  0.004832   \n",
        "2020-08-10  0.027001  0.015375        0.007002     NaN  0.023604  0.004832   \n",
        "2020-08-11  0.027001  0.015375        0.007002     NaN  0.023604  0.004832   \n",
        "2020-08-12  0.027001  0.015375        0.007002     NaN  0.023604  0.004832   \n",
        "2020-08-13  0.027001  0.015375        0.007002     NaN  0.023604  0.004832   \n",
        "\n",
        "Country       Kuwait    Poland  Portugal   Senegal  United Arab Emirates  \n",
        "Date                                                                      \n",
        "2020-08-09  0.020859  0.006477  0.004565  0.003749              0.012774  \n",
        "2020-08-10  0.020859  0.006477  0.004565  0.003749              0.012774  \n",
        "2020-08-11  0.020859  0.006477  0.004565  0.003749              0.012774  \n",
        "2020-08-12  0.020859  0.006477  0.004565  0.003749              0.012774  \n",
        "2020-08-13  0.020859  0.006477  0.004565  0.003749              0.012774  "
       ]
      }
     ],
     "prompt_number": 14
    },
    {
     "cell_type": "heading",
     "level": 3,
     "metadata": {},
     "source": [
      "$\\kappa$: Mortality rate of infected cases $\\mathrm{[-]}$"
     ]
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "analyser.param_history(\"kappa\", roll_window=None).tail()"
     ],
     "language": "python",
     "metadata": {},
     "outputs": [
      {
       "output_type": "display_data",
       "png": "\n",
       "text": [
        "<Figure size 648x432 with 1 Axes>"
       ]
      },
      {
       "html": [
        "<div>\n",
        "<style scoped>\n",
        "    .dataframe tbody tr th:only-of-type {\n",
        "        vertical-align: middle;\n",
        "    }\n",
        "\n",
        "    .dataframe tbody tr th {\n",
        "        vertical-align: top;\n",
        "    }\n",
        "\n",
        "    .dataframe thead th {\n",
        "        text-align: right;\n",
        "    }\n",
        "</style>\n",
        "<table border=\"1\" class=\"dataframe\">\n",
        "  <thead>\n",
        "    <tr style=\"text-align: right;\">\n",
        "      <th>Country</th>\n",
        "      <th>Bahrain</th>\n",
        "      <th>Canada</th>\n",
        "      <th>Czech Republic</th>\n",
        "      <th>Guinea</th>\n",
        "      <th>Iran</th>\n",
        "      <th>Italy</th>\n",
        "      <th>Kuwait</th>\n",
        "      <th>Poland</th>\n",
        "      <th>Portugal</th>\n",
        "      <th>Senegal</th>\n",
        "      <th>United Arab Emirates</th>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>Date</th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "    </tr>\n",
        "  </thead>\n",
        "  <tbody>\n",
        "    <tr>\n",
        "      <th>2020-08-09</th>\n",
        "      <td>0.000152</td>\n",
        "      <td>0.000368</td>\n",
        "      <td>0.000079</td>\n",
        "      <td>NaN</td>\n",
        "      <td>0.000268</td>\n",
        "      <td>0.000188</td>\n",
        "      <td>0.000071</td>\n",
        "      <td>0.000158</td>\n",
        "      <td>0.000076</td>\n",
        "      <td>0.000157</td>\n",
        "      <td>0.000025</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>2020-08-10</th>\n",
        "      <td>0.000152</td>\n",
        "      <td>0.000368</td>\n",
        "      <td>0.000079</td>\n",
        "      <td>NaN</td>\n",
        "      <td>0.000268</td>\n",
        "      <td>0.000188</td>\n",
        "      <td>0.000071</td>\n",
        "      <td>0.000158</td>\n",
        "      <td>0.000076</td>\n",
        "      <td>0.000157</td>\n",
        "      <td>0.000025</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>2020-08-11</th>\n",
        "      <td>0.000152</td>\n",
        "      <td>0.000368</td>\n",
        "      <td>0.000079</td>\n",
        "      <td>NaN</td>\n",
        "      <td>0.000268</td>\n",
        "      <td>0.000188</td>\n",
        "      <td>0.000071</td>\n",
        "      <td>0.000158</td>\n",
        "      <td>0.000076</td>\n",
        "      <td>0.000157</td>\n",
        "      <td>0.000025</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>2020-08-12</th>\n",
        "      <td>0.000152</td>\n",
        "      <td>0.000368</td>\n",
        "      <td>0.000079</td>\n",
        "      <td>NaN</td>\n",
        "      <td>0.000268</td>\n",
        "      <td>0.000188</td>\n",
        "      <td>0.000071</td>\n",
        "      <td>0.000158</td>\n",
        "      <td>0.000076</td>\n",
        "      <td>0.000157</td>\n",
        "      <td>0.000025</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>2020-08-13</th>\n",
        "      <td>0.000152</td>\n",
        "      <td>0.000368</td>\n",
        "      <td>0.000079</td>\n",
        "      <td>NaN</td>\n",
        "      <td>0.000268</td>\n",
        "      <td>0.000188</td>\n",
        "      <td>0.000071</td>\n",
        "      <td>0.000158</td>\n",
        "      <td>0.000076</td>\n",
        "      <td>0.000157</td>\n",
        "      <td>0.000025</td>\n",
        "    </tr>\n",
        "  </tbody>\n",
        "</table>\n",
        "</div>"
       ],
       "output_type": "pyout",
       "prompt_number": 15,
       "text": [
        "Country      Bahrain    Canada  Czech Republic  Guinea      Iran     Italy  \\\n",
        "Date                                                                         \n",
        "2020-08-09  0.000152  0.000368        0.000079     NaN  0.000268  0.000188   \n",
        "2020-08-10  0.000152  0.000368        0.000079     NaN  0.000268  0.000188   \n",
        "2020-08-11  0.000152  0.000368        0.000079     NaN  0.000268  0.000188   \n",
        "2020-08-12  0.000152  0.000368        0.000079     NaN  0.000268  0.000188   \n",
        "2020-08-13  0.000152  0.000368        0.000079     NaN  0.000268  0.000188   \n",
        "\n",
        "Country       Kuwait    Poland  Portugal   Senegal  United Arab Emirates  \n",
        "Date                                                                      \n",
        "2020-08-09  0.000071  0.000158  0.000076  0.000157              0.000025  \n",
        "2020-08-10  0.000071  0.000158  0.000076  0.000157              0.000025  \n",
        "2020-08-11  0.000071  0.000158  0.000076  0.000157              0.000025  \n",
        "2020-08-12  0.000071  0.000158  0.000076  0.000157              0.000025  \n",
        "2020-08-13  0.000071  0.000158  0.000076  0.000157              0.000025  "
       ]
      }
     ],
     "prompt_number": 15
    },
    {
     "cell_type": "heading",
     "level": 3,
     "metadata": {},
     "source": [
      "$\\theta$: Mortality rate of S$^\\ast$ cases $\\mathrm{[-]}$"
     ]
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "analyser.param_history(\"theta\", roll_window=None).tail()"
     ],
     "language": "python",
     "metadata": {},
     "outputs": [
      {
       "output_type": "display_data",
       "png": "\n",
       "text": [
        "<Figure size 648x432 with 1 Axes>"
       ]
      },
      {
       "html": [
        "<div>\n",
        "<style scoped>\n",
        "    .dataframe tbody tr th:only-of-type {\n",
        "        vertical-align: middle;\n",
        "    }\n",
        "\n",
        "    .dataframe tbody tr th {\n",
        "        vertical-align: top;\n",
        "    }\n",
        "\n",
        "    .dataframe thead th {\n",
        "        text-align: right;\n",
        "    }\n",
        "</style>\n",
        "<table border=\"1\" class=\"dataframe\">\n",
        "  <thead>\n",
        "    <tr style=\"text-align: right;\">\n",
        "      <th>Country</th>\n",
        "      <th>Bahrain</th>\n",
        "      <th>Canada</th>\n",
        "      <th>Czech Republic</th>\n",
        "      <th>Guinea</th>\n",
        "      <th>Iran</th>\n",
        "      <th>Italy</th>\n",
        "      <th>Kuwait</th>\n",
        "      <th>Poland</th>\n",
        "      <th>Portugal</th>\n",
        "      <th>Senegal</th>\n",
        "      <th>United Arab Emirates</th>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>Date</th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "    </tr>\n",
        "  </thead>\n",
        "  <tbody>\n",
        "    <tr>\n",
        "      <th>2020-08-09</th>\n",
        "      <td>0.000066</td>\n",
        "      <td>0.000869</td>\n",
        "      <td>0.000344</td>\n",
        "      <td>NaN</td>\n",
        "      <td>0.05934</td>\n",
        "      <td>0.000372</td>\n",
        "      <td>0.00112</td>\n",
        "      <td>0.000796</td>\n",
        "      <td>0.000547</td>\n",
        "      <td>0.001835</td>\n",
        "      <td>0.001246</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>2020-08-10</th>\n",
        "      <td>0.000066</td>\n",
        "      <td>0.000869</td>\n",
        "      <td>0.000344</td>\n",
        "      <td>NaN</td>\n",
        "      <td>0.05934</td>\n",
        "      <td>0.000372</td>\n",
        "      <td>0.00112</td>\n",
        "      <td>0.000796</td>\n",
        "      <td>0.000547</td>\n",
        "      <td>0.001835</td>\n",
        "      <td>0.001246</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>2020-08-11</th>\n",
        "      <td>0.000066</td>\n",
        "      <td>0.000869</td>\n",
        "      <td>0.000344</td>\n",
        "      <td>NaN</td>\n",
        "      <td>0.05934</td>\n",
        "      <td>0.000372</td>\n",
        "      <td>0.00112</td>\n",
        "      <td>0.000796</td>\n",
        "      <td>0.000547</td>\n",
        "      <td>0.001835</td>\n",
        "      <td>0.001246</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>2020-08-12</th>\n",
        "      <td>0.000066</td>\n",
        "      <td>0.000869</td>\n",
        "      <td>0.000344</td>\n",
        "      <td>NaN</td>\n",
        "      <td>0.05934</td>\n",
        "      <td>0.000372</td>\n",
        "      <td>0.00112</td>\n",
        "      <td>0.000796</td>\n",
        "      <td>0.000547</td>\n",
        "      <td>0.001835</td>\n",
        "      <td>0.001246</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>2020-08-13</th>\n",
        "      <td>0.000066</td>\n",
        "      <td>0.000869</td>\n",
        "      <td>0.000344</td>\n",
        "      <td>NaN</td>\n",
        "      <td>0.05934</td>\n",
        "      <td>0.000372</td>\n",
        "      <td>0.00112</td>\n",
        "      <td>0.000796</td>\n",
        "      <td>0.000547</td>\n",
        "      <td>0.001835</td>\n",
        "      <td>0.001246</td>\n",
        "    </tr>\n",
        "  </tbody>\n",
        "</table>\n",
        "</div>"
       ],
       "output_type": "pyout",
       "prompt_number": 16,
       "text": [
        "Country      Bahrain    Canada  Czech Republic  Guinea     Iran     Italy  \\\n",
        "Date                                                                        \n",
        "2020-08-09  0.000066  0.000869        0.000344     NaN  0.05934  0.000372   \n",
        "2020-08-10  0.000066  0.000869        0.000344     NaN  0.05934  0.000372   \n",
        "2020-08-11  0.000066  0.000869        0.000344     NaN  0.05934  0.000372   \n",
        "2020-08-12  0.000066  0.000869        0.000344     NaN  0.05934  0.000372   \n",
        "2020-08-13  0.000066  0.000869        0.000344     NaN  0.05934  0.000372   \n",
        "\n",
        "Country      Kuwait    Poland  Portugal   Senegal  United Arab Emirates  \n",
        "Date                                                                     \n",
        "2020-08-09  0.00112  0.000796  0.000547  0.001835              0.001246  \n",
        "2020-08-10  0.00112  0.000796  0.000547  0.001835              0.001246  \n",
        "2020-08-11  0.00112  0.000796  0.000547  0.001835              0.001246  \n",
        "2020-08-12  0.00112  0.000796  0.000547  0.001835              0.001246  \n",
        "2020-08-13  0.00112  0.000796  0.000547  0.001835              0.001246  "
       ]
      }
     ],
     "prompt_number": 16
    }
   ],
   "metadata": {}
  }
 ]
}
