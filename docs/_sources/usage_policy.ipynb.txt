{
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3.8.2 64-bit ('.venv': venv)",
   "name": "python_defaultSpec_1597669925034"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.8.2-final"
  },
  "name": ""
 },
 "nbformat": 3,
 "nbformat_minor": 0,
 "worksheets": [
  {
   "cells": [
    {
     "cell_type": "markdown",
     "metadata": {},
     "source": [
      "# Usage (details: policy measures)\n",
      "Here, we will analyse the relationship of policy measures and parameter values of SIR-derived ODE models. Policy measures are tracked by [Oxford Covid-19 Government Response Tracker (OxCGRT)](https://github.com/OxCGRT/covid-policy-tracker)."
     ]
    },
    {
     "cell_type": "heading",
     "level": 2,
     "metadata": {},
     "source": [
      "Preparation"
     ]
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "# Standard users\n",
      "# !pip install covsirphy\n",
      "# Developers (Note: this notebook is in example directory)\n",
      "import os\n",
      "os.chdir(\"../\")"
     ],
     "language": "python",
     "metadata": {},
     "outputs": [],
     "prompt_number": 1
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "from pprint import pprint"
     ],
     "language": "python",
     "metadata": {},
     "outputs": [],
     "prompt_number": 2
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "import covsirphy as cs\n",
      "cs.__version__"
     ],
     "language": "python",
     "metadata": {},
     "outputs": [
      {
       "output_type": "pyout",
       "prompt_number": 3,
       "text": [
        "'2.7.3-alpha.new.202.203.206'"
       ]
      }
     ],
     "prompt_number": 3
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "# Standard users and developers\n",
      "data_loader = cs.DataLoader(\"input\")\n",
      "# The number of cases (JHU style)\n",
      "jhu_data = data_loader.jhu(verbose=False)\n",
      "# Population in each country\n",
      "population_data = data_loader.population(verbose=False)\n",
      "# Government Response Tracker (OxCGRT)\n",
      "oxcgrt_data = data_loader.oxcgrt(verbose=False)\n",
      "# Description/citation\n",
      "print(oxcgrt_data.citation)"
     ],
     "language": "python",
     "metadata": {
      "tags": []
     },
     "outputs": [
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "(Secondary source) Guidotti, E., Ardia, D., (2020), \"COVID-19 Data Hub\", Working paper, doi: 10.13140/RG.2.2.11649.81763.\n",
        "We can get Citation list of primary sources with DataLoader(...).covid19dh_citation"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      }
     ],
     "prompt_number": 4
    },
    {
     "cell_type": "markdown",
     "metadata": {},
     "source": [
      "## Class for policy measure analysis\n",
      "We will `PolicyMeasures` class to find relationship of policy measures and parameter values of SIR-derived ODE models."
     ]
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "# Create analyser with tau value 360 [min] (can be changed)\n",
      "analyser = cs.PolicyMeasures(jhu_data, population_data, oxcgrt_data, tau=360)\n",
      "# The number of registerd countries\n",
      "len(analyser.countries)"
     ],
     "language": "python",
     "metadata": {
      "tags": []
     },
     "outputs": [
      {
       "output_type": "pyout",
       "prompt_number": 5,
       "text": [
        "184"
       ]
      }
     ],
     "prompt_number": 5
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "# We can get Scenario instance for detailed scenario analysis\n",
      "type(analyser.scenario(\"Japan\"))"
     ],
     "language": "python",
     "metadata": {},
     "outputs": [
      {
       "output_type": "pyout",
       "prompt_number": 6,
       "text": [
        "covsirphy.analysis.scenario.Scenario"
       ]
      }
     ],
     "prompt_number": 6
    },
    {
     "cell_type": "markdown",
     "metadata": {},
     "source": [
      "## Set phases with S-R trend analysis\n",
      "We will perform S-R trend analysis to set phases in all countries. Countries which do not have **9th phases** will be un-registered for the next analysis. This number will be adjusted for your analysis."
     ]
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "# Show the number of phases of all countries\n",
      "analyser.trend()\n",
      "pprint(analyser.phase_len(), compact=True)"
     ],
     "language": "python",
     "metadata": {},
     "outputs": [
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "{"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "2"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ": "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "['Fiji', 'Bahamas', 'Papua New Guinea', 'Dominica']"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        " "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "3"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ": "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "["
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Brunei'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Namibia'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Mauritius'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Zimbabwe'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Seychelles'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Gambia'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        "     "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Tanzania'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Lesotho'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "]"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        " "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "4"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ": "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "["
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Sao Tome and Principe'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Central African Republic'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Ireland'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        "     "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Venezuela'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Zambia'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Grenada'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Iceland'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Trinidad and Tobago'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        "     "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Antigua and Barbuda'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Kyrgyzstan'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Belize'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Equatorial Guinea'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        "     "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'South Sudan'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Guatemala'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Eritrea'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Montenegro'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Norway'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        "     "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Saint Lucia'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'New Zealand'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Angola'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Palestine'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Botswana'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "]"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        " "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "5"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ": "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "["
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Suriname'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Australia'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Malawi'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Guinea-Bissau'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Spain'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Slovakia'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        "     "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Ethiopia'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Saint Vincent and the Grenadines'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Maldives'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Guyana'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        "     "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Costa Rica'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Philippines'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Kazakhstan'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Comoros'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Mozambique'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        "     "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Cambodia'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Benin'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Libya'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Syria'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Chad'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Swaziland'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Madagascar'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        "     "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Andorra'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Paraguay'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Lebanon'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Liechtenstein'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Japan'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "]"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        " "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "6"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ": "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "["
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'India'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Mongolia'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Tajikistan'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Iraq'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Slovenia'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Colombia'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        "     "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'San Marino'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Uganda'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Congo'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Qatar'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Morocco'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Taiwan'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Djibouti'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        "     "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Bosnia and Herzegovina'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Uzbekistan'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Kenya'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Burundi'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Rwanda'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        "     "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Argentina'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Yemen'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Barbados'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Somalia'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Greece'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Macedonia'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        "     "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Mauritania'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Sri Lanka'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Israel'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Luxembourg'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Niger'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Bermuda'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        "     "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Croatia'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Oman'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Cape Verde'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'South Africa'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Malta'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Vietnam'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        "     "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Afghanistan'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Kosovo'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "]"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        " "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "7"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ": "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "["
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Albania'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Finland'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Serbia'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Chile'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Bhutan'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Nicaragua'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Nepal'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        "     "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Germany'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Armenia'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'El Salvador'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Cyprus'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Algeria'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Panama'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        "     "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Uruguay'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Ecuador'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Netherlands'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Pakistan'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Sudan'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Sierra Leone'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        "     "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Canada'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Azerbaijan'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Haiti'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Latvia'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Monaco'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Bulgaria'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'China'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        "     "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Thailand'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Togo'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Cameroon'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Tunisia'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Jordan'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Switzerland'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        "     "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Estonia'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Ghana'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Honduras'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Dominican Republic'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Bolivia'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "]"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        " "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "8"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ": "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "["
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Cuba'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Myanmar'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Lithuania'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Singapore'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Belarus'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Indonesia'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        "     "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Burkina Faso'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Austria'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Denmark'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Georgia'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Jamaica'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Turkey'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        "     "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'United States'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Liberia'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Gabon'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Mali'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Hungary'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Ukraine'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        "     "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Belgium'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Nigeria'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Malaysia'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Egypt'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Saudi Arabia'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Brazil'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "]"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        " "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "9"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ": "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "["
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Bangladesh'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Portugal'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Russia'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'United Arab Emirates'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Romania'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        "     "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Kuwait'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Mexico'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Czech Republic'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Moldova'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Peru'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Korea, South'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        "     "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'France'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Italy'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "]"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        " "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "10"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ": "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "['Iran', 'Bahrain', 'Poland', 'Senegal']"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        " "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "11"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ": "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "['Guinea']"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "}"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      }
     ],
     "prompt_number": 7
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "# Set phases with S-R trend analysis\n",
      "analyser.trend(min_len=9)\n",
      "# The number of countries\n",
      "len(analyser.countries)"
     ],
     "language": "python",
     "metadata": {},
     "outputs": [
      {
       "output_type": "pyout",
       "prompt_number": 8,
       "text": [
        "18"
       ]
      }
     ],
     "prompt_number": 8
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "phase_len_dict = analyser.phase_len()\n",
      "pprint(phase_len_dict, compact=True)"
     ],
     "language": "python",
     "metadata": {
      "tags": []
     },
     "outputs": [
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "{"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "9"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ": "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "["
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Bangladesh'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Portugal'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Russia'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'United Arab Emirates'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Romania'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        "     "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Kuwait'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Mexico'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Czech Republic'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Moldova'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Peru'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Korea, South'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        "     "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'France'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Italy'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "]"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        " "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "10"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ": "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "['Iran', 'Bahrain', 'Poland', 'Senegal']"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        " "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "11"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ": "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "['Guinea']"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "}"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      }
     ],
     "prompt_number": 9
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "# Here, only show the countries which have the most phases\n",
      "countries_show = max(phase_len_dict.items(), key=lambda x: x[0])[1]\n",
      "# Show summary\n",
      "analyser.summary(countries=countries_show)"
     ],
     "language": "python",
     "metadata": {
      "tags": []
     },
     "outputs": [
      {
       "html": [
        "<div>\n",
        "<style scoped>\n",
        "    .dataframe tbody tr th:only-of-type {\n",
        "        vertical-align: middle;\n",
        "    }\n",
        "\n",
        "    .dataframe tbody tr th {\n",
        "        vertical-align: top;\n",
        "    }\n",
        "\n",
        "    .dataframe thead th {\n",
        "        text-align: right;\n",
        "    }\n",
        "</style>\n",
        "<table border=\"1\" class=\"dataframe\">\n",
        "  <thead>\n",
        "    <tr style=\"text-align: right;\">\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th>Type</th>\n",
        "      <th>Start</th>\n",
        "      <th>End</th>\n",
        "      <th>Population</th>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>Country</th>\n",
        "      <th>Phase</th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "    </tr>\n",
        "  </thead>\n",
        "  <tbody>\n",
        "    <tr>\n",
        "      <th rowspan=\"11\" valign=\"top\">Guinea</th>\n",
        "      <th>1st</th>\n",
        "      <td>Past</td>\n",
        "      <td>02May2020</td>\n",
        "      <td>11May2020</td>\n",
        "      <td>12414318</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>2nd</th>\n",
        "      <td>Past</td>\n",
        "      <td>12May2020</td>\n",
        "      <td>20May2020</td>\n",
        "      <td>12414318</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>3rd</th>\n",
        "      <td>Past</td>\n",
        "      <td>21May2020</td>\n",
        "      <td>28May2020</td>\n",
        "      <td>12414318</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>4th</th>\n",
        "      <td>Past</td>\n",
        "      <td>29May2020</td>\n",
        "      <td>08Jun2020</td>\n",
        "      <td>12414318</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>5th</th>\n",
        "      <td>Past</td>\n",
        "      <td>09Jun2020</td>\n",
        "      <td>18Jun2020</td>\n",
        "      <td>12414318</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>6th</th>\n",
        "      <td>Past</td>\n",
        "      <td>19Jun2020</td>\n",
        "      <td>03Jul2020</td>\n",
        "      <td>12414318</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>7th</th>\n",
        "      <td>Past</td>\n",
        "      <td>04Jul2020</td>\n",
        "      <td>12Jul2020</td>\n",
        "      <td>12414318</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>8th</th>\n",
        "      <td>Past</td>\n",
        "      <td>13Jul2020</td>\n",
        "      <td>24Jul2020</td>\n",
        "      <td>12414318</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>9th</th>\n",
        "      <td>Past</td>\n",
        "      <td>25Jul2020</td>\n",
        "      <td>04Aug2020</td>\n",
        "      <td>12414318</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>10th</th>\n",
        "      <td>Past</td>\n",
        "      <td>05Aug2020</td>\n",
        "      <td>13Aug2020</td>\n",
        "      <td>12414318</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>11th</th>\n",
        "      <td>Past</td>\n",
        "      <td>14Aug2020</td>\n",
        "      <td>24Aug2020</td>\n",
        "      <td>12414318</td>\n",
        "    </tr>\n",
        "  </tbody>\n",
        "</table>\n",
        "</div>"
       ],
       "output_type": "pyout",
       "prompt_number": 10,
       "text": [
        "               Type      Start        End  Population\n",
        "Country Phase                                        \n",
        "Guinea  1st    Past  02May2020  11May2020    12414318\n",
        "        2nd    Past  12May2020  20May2020    12414318\n",
        "        3rd    Past  21May2020  28May2020    12414318\n",
        "        4th    Past  29May2020  08Jun2020    12414318\n",
        "        5th    Past  09Jun2020  18Jun2020    12414318\n",
        "        6th    Past  19Jun2020  03Jul2020    12414318\n",
        "        7th    Past  04Jul2020  12Jul2020    12414318\n",
        "        8th    Past  13Jul2020  24Jul2020    12414318\n",
        "        9th    Past  25Jul2020  04Aug2020    12414318\n",
        "        10th   Past  05Aug2020  13Aug2020    12414318\n",
        "        11th   Past  14Aug2020  24Aug2020    12414318"
       ]
      }
     ],
     "prompt_number": 10
    },
    {
     "cell_type": "markdown",
     "metadata": {},
     "source": [
      "## Parameter estimation\n",
      "we will estimate the parameter values with SIR-derived ODE models in each country."
     ]
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "# Parameter estimation with SIR-F model\n",
      "analyser.estimate(cs.SIRF)"
     ],
     "language": "python",
     "metadata": {
      "tags": []
     },
     "outputs": [
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n",
        "<SIR-F model: parameter estimation>"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "Running optimization with 4 CPUs..."
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tMEX,  4th phase (27Jun2020 - 06Jul2020): finished  285 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tPOL,  5th phase (17Jun2020 - 30Jun2020): finished  296 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tKOR,  4th phase (30Apr2020 - 22May2020): finished  286 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tKWT,  7th phase (22Jul2020 - 31Jul2020): finished  310 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tPRT,  4th phase (12Jun2020 - 21Jun2020): finished  445 trials in 0 min 15 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tPRT,  2nd phase (18May2020 - 29May2020): finished 1485 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tBHR,  2nd phase (27May2020 - 04Jun2020): finished  946 trials in 0 min 30 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tBHR,  7th phase (08Jul2020 - 15Jul2020): finished 1589 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tMEX,  9th phase (13Aug2020 - 24Aug2020): finished 1594 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tKWT,  8th phase (01Aug2020 - 11Aug2020): finished  247 trials in 0 min  5 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tROU,  3rd phase (20May2020 - 13Jun2020): finished  462 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tIRN,  8th phase (17Jul2020 - 28Jul2020): finished  221 trials in 0 min  5 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tMDA,  8th phase (08Aug2020 - 15Aug2020): finished  339 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tPRT,  8th phase (24Jul2020 - 08Aug2020): finished  510 trials in 0 min 15 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tITA,  7th phase (21May2020 - 09Jun2020): finished  729 trials in 0 min 20 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tSEN,  9th phase (31Jul2020 - 12Aug2020): finished 1273 trials in 0 min 40 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tMDA,  2nd phase (04Jun2020 - 15Jun2020): finished  886 trials in 0 min 25 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tKOR,  1st phase (15Mar2020 - 24Mar2020): finished 1730 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tKWT,  3rd phase (10Jun2020 - 22Jun2020): finished  719 trials in 0 min 20 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tROU,  9th phase (15Aug2020 - 24Aug2020): finished  215 trials in 0 min  5 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tBGD,  8th phase (05Aug2020 - 13Aug2020): finished  215 trials in 0 min  5 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tRUS,  4th phase (14Jun2020 - 23Jun2020): finished 1774 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tROU,  7th phase (25Jul2020 - 01Aug2020): finished  213 trials in 0 min  5 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tIRN,  9th phase (29Jul2020 - 09Aug2020): finished 1009 trials in 0 min 30 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tKOR,  8th phase (20Jul2020 - 07Aug2020): finished 1738 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tGIN,  4th phase (29May2020 - 08Jun2020): finished 1750 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tARE,  8th phase (13Jul2020 - 27Jul2020): finished  195 trials in 0 min  5 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tCZE,  4th phase (04Jun2020 - 25Jun2020): finished 1678 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tPOL,  9th phase (07Aug2020 - 15Aug2020): finished  274 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tIRN, 10th phase (10Aug2020 - 24Aug2020): finished 1483 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tSEN,  4th phase (10Jun2020 - 19Jun2020): finished 1433 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tPRT,  7th phase (11Jul2020 - 23Jul2020): finished  190 trials in 0 min  5 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tRUS,  2nd phase (23May2020 - 30May2020): finished 1389 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tFRA,  6th phase (27May2020 - 19Jun2020): finished 1454 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tBHR,  4th phase (14Jun2020 - 21Jun2020): finished 1474 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tSEN,  3rd phase (30May2020 - 09Jun2020): finished 1470 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tRUS,  8th phase (26Jul2020 - 07Aug2020): finished 1519 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tIRN,  4th phase (29May2020 - 10Jun2020): finished 1472 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tIRN,  7th phase (05Jul2020 - 16Jul2020): finished  166 trials in 0 min  5 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tPER,  3rd phase (31May2020 - 11Jun2020): finished 1446 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tKWT,  2nd phase (25May2020 - 09Jun2020): finished 1278 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tSEN,  6th phase (01Jul2020 - 10Jul2020): finished 1329 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tSEN,  5th phase (20Jun2020 - 30Jun2020): finished  262 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tMEX,  6th phase (15Jul2020 - 22Jul2020): finished 1108 trials in 0 min 55 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tPER,  5th phase (24Jun2020 - 06Jul2020): finished 1174 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tMEX,  1st phase (21May2020 - 04Jun2020): finished 1275 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tBHR,  1st phase (06May2020 - 26May2020): finished 1241 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tBHR,  9th phase (27Jul2020 - 09Aug2020): finished 1243 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tBGD,  6th phase (15Jul2020 - 23Jul2020): finished  314 trials in 0 min 15 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tITA,  1st phase (24Mar2020 - 31Mar2020): finished 1193 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tPER,  1st phase (06May2020 - 22May2020): finished 1151 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tCZE,  1st phase (08Apr2020 - 19Apr2020): finished 1131 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tBGD,  9th phase (14Aug2020 - 24Aug2020): finished  355 trials in 0 min 15 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tKWT,  6th phase (11Jul2020 - 21Jul2020): finished  426 trials in 0 min 15 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tMDA,  4th phase (25Jun2020 - 08Jul2020): finished 1282 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tITA,  9th phase (23Jul2020 - 24Aug2020): finished 1286 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tPOL,  8th phase (26Jul2020 - 06Aug2020): finished  467 trials in 0 min 15 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tSEN,  1st phase (01May2020 - 13May2020): finished 1467 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tRUS,  5th phase (24Jun2020 - 03Jul2020): finished 1502 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tARE,  9th phase (28Jul2020 - 24Aug2020): finished 1363 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tGIN,  9th phase (25Jul2020 - 04Aug2020): finished 1499 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tCZE,  6th phase (18Jul2020 - 26Jul2020): finished  280 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tPER,  9th phase (06Aug2020 - 24Aug2020): finished 1458 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tBHR,  6th phase (30Jun2020 - 07Jul2020): finished 1411 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tPRT,  5th phase (22Jun2020 - 01Jul2020): finished  292 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tITA,  3rd phase (13Apr2020 - 21Apr2020): finished 1467 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tSEN,  7th phase (11Jul2020 - 20Jul2020): finished 1373 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tMDA,  6th phase (21Jul2020 - 29Jul2020): finished  322 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tGIN,  3rd phase (21May2020 - 28May2020): finished 1514 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tRUS,  3rd phase (31May2020 - 13Jun2020): finished 1397 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tBHR,  3rd phase (05Jun2020 - 13Jun2020): finished 1438 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tKOR,  2nd phase (25Mar2020 - 05Apr2020): finished 1387 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tIRN,  1st phase (29Mar2020 - 16Apr2020): finished 1410 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tITA,  4th phase (22Apr2020 - 01May2020): finished  150 trials in 0 min  5 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tSEN,  2nd phase (14May2020 - 29May2020): finished 1217 trials in 0 min 50 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tITA,  2nd phase (01Apr2020 - 12Apr2020): finished 1004 trials in 0 min 40 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tMEX,  7th phase (23Jul2020 - 04Aug2020): finished  560 trials in 0 min 20 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tRUS,  9th phase (08Aug2020 - 24Aug2020): finished 1369 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tITA,  5th phase (02May2020 - 09May2020): finished  446 trials in 0 min 15 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tMEX,  3rd phase (17Jun2020 - 26Jun2020): finished  419 trials in 0 min 15 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tGIN,  6th phase (19Jun2020 - 03Jul2020): finished 1376 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tMDA,  3rd phase (16Jun2020 - 24Jun2020): finished  306 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tMDA,  5th phase (09Jul2020 - 20Jul2020): finished  419 trials in 0 min 15 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tROU,  8th phase (02Aug2020 - 14Aug2020): finished  289 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tMDA,  1st phase (13May2020 - 03Jun2020): finished 1381 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tRUS,  6th phase (04Jul2020 - 14Jul2020): finished 1407 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tFRA,  7th phase (20Jun2020 - 12Jul2020): finished  597 trials in 0 min 20 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tPOL,  6th phase (01Jul2020 - 14Jul2020): finished  177 trials in 0 min  5 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tIRN,  6th phase (23Jun2020 - 04Jul2020): finished  168 trials in 0 min  5 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tBGD,  4th phase (28Jun2020 - 06Jul2020): finished  534 trials in 0 min 20 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tKWT,  1st phase (11May2020 - 24May2020): finished 1382 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tPOL,  4th phase (04Jun2020 - 16Jun2020): finished  555 trials in 0 min 20 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tPER,  6th phase (07Jul2020 - 18Jul2020): finished 1388 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tGIN,  8th phase (13Jul2020 - 24Jul2020): finished 1394 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tFRA,  5th phase (05May2020 - 26May2020): finished 1363 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tARE,  2nd phase (13May2020 - 25May2020): finished 1356 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tBGD,  2nd phase (11Jun2020 - 18Jun2020): finished 1368 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tROU,  6th phase (16Jul2020 - 24Jul2020): finished 1364 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tCZE,  8th phase (06Aug2020 - 13Aug2020): finished 1432 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tPRT,  9th phase (09Aug2020 - 24Aug2020): finished  576 trials in 0 min 20 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tFRA,  2nd phase (03Apr2020 - 12Apr2020): finished 1407 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tPOL,  1st phase (23Apr2020 - 08May2020): finished 1426 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tRUS,  7th phase (15Jul2020 - 25Jul2020): finished 1417 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tITA,  6th phase (10May2020 - 20May2020): finished  247 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tPER,  8th phase (29Jul2020 - 05Aug2020): finished 1344 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tFRA,  1st phase (25Mar2020 - 02Apr2020): finished 1286 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tARE,  5th phase (12Jun2020 - 23Jun2020): finished 1016 trials in 0 min 45 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tBHR,  8th phase (16Jul2020 - 26Jul2020): finished 1248 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tFRA,  4th phase (25Apr2020 - 04May2020): finished 1244 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tPOL,  2nd phase (09May2020 - 21May2020): finished  348 trials in 0 min 15 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tPRT,  1st phase (05May2020 - 17May2020): finished 1239 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tROU,  1st phase (16Apr2020 - 01May2020): finished 1309 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tBGD,  3rd phase (19Jun2020 - 27Jun2020): finished 1225 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tMEX,  2nd phase (05Jun2020 - 16Jun2020): finished  904 trials in 0 min 45 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tGIN,  1st phase (02May2020 - 11May2020): finished 1104 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tROU,  5th phase (02Jul2020 - 15Jul2020): finished 1088 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tBHR,  5th phase (22Jun2020 - 29Jun2020): finished 1073 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tITA,  8th phase (10Jun2020 - 22Jul2020): finished  353 trials in 0 min 20 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tSEN,  8th phase (21Jul2020 - 30Jul2020): finished 1111 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tPER,  7th phase (19Jul2020 - 28Jul2020): finished 1106 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tFRA,  8th phase (13Jul2020 - 02Aug2020): finished 1097 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tBGD,  5th phase (07Jul2020 - 14Jul2020): finished 1128 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tKOR,  3rd phase (06Apr2020 - 29Apr2020): finished  337 trials in 0 min 15 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tIRN,  5th phase (11Jun2020 - 22Jun2020): finished  314 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tARE,  3rd phase (26May2020 - 03Jun2020): finished 1051 trials in 0 min 40 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tIRN,  3rd phase (11May2020 - 28May2020): finished 1339 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tPRT,  6th phase (02Jul2020 - 10Jul2020): finished  359 trials in 0 min 15 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tPOL,  3rd phase (22May2020 - 03Jun2020): finished 1343 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tKWT,  9th phase (12Aug2020 - 24Aug2020): finished  327 trials in 0 min 15 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tFRA,  3rd phase (13Apr2020 - 24Apr2020): finished 1293 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tKOR,  6th phase (17Jun2020 - 02Jul2020): finished 1095 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tBGD,  1st phase (27May2020 - 10Jun2020): finished 1100 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tMDA,  9th phase (16Aug2020 - 24Aug2020): finished 1272 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tARE,  7th phase (03Jul2020 - 12Jul2020): finished 1114 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tGIN,  2nd phase (12May2020 - 20May2020): finished 1086 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tGIN,  5th phase (09Jun2020 - 18Jun2020): finished 1106 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tROU,  2nd phase (02May2020 - 19May2020): finished  214 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tKOR,  5th phase (23May2020 - 16Jun2020): finished 1101 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tROU,  4th phase (14Jun2020 - 01Jul2020): finished 1123 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tGIN,  7th phase (04Jul2020 - 12Jul2020): finished 1267 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tCZE,  2nd phase (20Apr2020 - 10May2020): finished  931 trials in 0 min 40 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tARE,  4th phase (04Jun2020 - 11Jun2020): finished  945 trials in 0 min 45 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tKWT,  4th phase (23Jun2020 - 01Jul2020): finished  572 trials in 0 min 25 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tIRN,  2nd phase (17Apr2020 - 10May2020): finished  119 trials in 0 min  5 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tPRT,  3rd phase (30May2020 - 11Jun2020): finished 1158 trials in 0 min 50 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tMEX,  8th phase (05Aug2020 - 12Aug2020): finished 1231 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tARE,  6th phase (24Jun2020 - 02Jul2020): finished  482 trials in 0 min 20 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tCZE,  3rd phase (11May2020 - 03Jun2020): finished 1222 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tCZE,  7th phase (27Jul2020 - 05Aug2020): finished 1182 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tBGD,  7th phase (24Jul2020 - 04Aug2020): finished  343 trials in 0 min 20 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tCZE,  5th phase (26Jun2020 - 17Jul2020): finished 1022 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tKOR,  7th phase (03Jul2020 - 19Jul2020): finished 1028 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tFRA,  9th phase (03Aug2020 - 24Aug2020): finished  532 trials in 0 min 25 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tMDA,  7th phase (30Jul2020 - 07Aug2020): finished 1080 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tARE,  1st phase (27Apr2020 - 12May2020): finished 1171 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tRUS,  1st phase (08May2020 - 22May2020): finished 1308 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "Completed optimization. Total: 29 min 47 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      }
     ],
     "prompt_number": 11
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "# Show summary\n",
      "analyser.summary(countries=countries_show)"
     ],
     "language": "python",
     "metadata": {},
     "outputs": [
      {
       "html": [
        "<div>\n",
        "<style scoped>\n",
        "    .dataframe tbody tr th:only-of-type {\n",
        "        vertical-align: middle;\n",
        "    }\n",
        "\n",
        "    .dataframe tbody tr th {\n",
        "        vertical-align: top;\n",
        "    }\n",
        "\n",
        "    .dataframe thead th {\n",
        "        text-align: right;\n",
        "    }\n",
        "</style>\n",
        "<table border=\"1\" class=\"dataframe\">\n",
        "  <thead>\n",
        "    <tr style=\"text-align: right;\">\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th>Type</th>\n",
        "      <th>Start</th>\n",
        "      <th>End</th>\n",
        "      <th>Population</th>\n",
        "      <th>ODE</th>\n",
        "      <th>Rt</th>\n",
        "      <th>theta</th>\n",
        "      <th>kappa</th>\n",
        "      <th>rho</th>\n",
        "      <th>sigma</th>\n",
        "      <th>tau</th>\n",
        "      <th>1/gamma [day]</th>\n",
        "      <th>1/alpha2 [day]</th>\n",
        "      <th>1/beta [day]</th>\n",
        "      <th>alpha1 [-]</th>\n",
        "      <th>RMSLE</th>\n",
        "      <th>Trials</th>\n",
        "      <th>Runtime</th>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>Country</th>\n",
        "      <th>Phase</th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "    </tr>\n",
        "  </thead>\n",
        "  <tbody>\n",
        "    <tr>\n",
        "      <th rowspan=\"11\" valign=\"top\">Guinea</th>\n",
        "      <th>1st</th>\n",
        "      <td>Past</td>\n",
        "      <td>02May2020</td>\n",
        "      <td>11May2020</td>\n",
        "      <td>12414318</td>\n",
        "      <td>SIR-F</td>\n",
        "      <td>1.79</td>\n",
        "      <td>0.000437189</td>\n",
        "      <td>9.8046e-05</td>\n",
        "      <td>0.0126597</td>\n",
        "      <td>0.00699089</td>\n",
        "      <td>360</td>\n",
        "      <td>35</td>\n",
        "      <td>2549</td>\n",
        "      <td>19</td>\n",
        "      <td>0</td>\n",
        "      <td>0.0738058</td>\n",
        "      <td>1104</td>\n",
        "      <td>1 min  0 sec</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>2nd</th>\n",
        "      <td>Past</td>\n",
        "      <td>12May2020</td>\n",
        "      <td>20May2020</td>\n",
        "      <td>12414318</td>\n",
        "      <td>SIR-F</td>\n",
        "      <td>0.56</td>\n",
        "      <td>0.0339565</td>\n",
        "      <td>3.65944e-06</td>\n",
        "      <td>0.00408737</td>\n",
        "      <td>0.00705158</td>\n",
        "      <td>360</td>\n",
        "      <td>35</td>\n",
        "      <td>68316</td>\n",
        "      <td>61</td>\n",
        "      <td>0.034</td>\n",
        "      <td>0.135724</td>\n",
        "      <td>1086</td>\n",
        "      <td>1 min  0 sec</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>3rd</th>\n",
        "      <td>Past</td>\n",
        "      <td>21May2020</td>\n",
        "      <td>28May2020</td>\n",
        "      <td>12414318</td>\n",
        "      <td>SIR-F</td>\n",
        "      <td>1.46</td>\n",
        "      <td>0.000822208</td>\n",
        "      <td>8.45387e-05</td>\n",
        "      <td>0.00929099</td>\n",
        "      <td>0.0062892</td>\n",
        "      <td>360</td>\n",
        "      <td>39</td>\n",
        "      <td>2957</td>\n",
        "      <td>26</td>\n",
        "      <td>0.001</td>\n",
        "      <td>0.0326798</td>\n",
        "      <td>1514</td>\n",
        "      <td>1 min  0 sec</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>4th</th>\n",
        "      <td>Past</td>\n",
        "      <td>29May2020</td>\n",
        "      <td>08Jun2020</td>\n",
        "      <td>12414318</td>\n",
        "      <td>SIR-F</td>\n",
        "      <td>0.6</td>\n",
        "      <td>0.000936415</td>\n",
        "      <td>3.12653e-05</td>\n",
        "      <td>0.0101341</td>\n",
        "      <td>0.0168402</td>\n",
        "      <td>360</td>\n",
        "      <td>14</td>\n",
        "      <td>7996</td>\n",
        "      <td>24</td>\n",
        "      <td>0.001</td>\n",
        "      <td>0.0618899</td>\n",
        "      <td>1750</td>\n",
        "      <td>1 min  0 sec</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>5th</th>\n",
        "      <td>Past</td>\n",
        "      <td>09Jun2020</td>\n",
        "      <td>18Jun2020</td>\n",
        "      <td>12414318</td>\n",
        "      <td>SIR-F</td>\n",
        "      <td>0.79</td>\n",
        "      <td>0.000570239</td>\n",
        "      <td>7.90865e-05</td>\n",
        "      <td>0.0113251</td>\n",
        "      <td>0.0142607</td>\n",
        "      <td>360</td>\n",
        "      <td>17</td>\n",
        "      <td>3161</td>\n",
        "      <td>22</td>\n",
        "      <td>0.001</td>\n",
        "      <td>0.0511646</td>\n",
        "      <td>1106</td>\n",
        "      <td>1 min  0 sec</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>6th</th>\n",
        "      <td>Past</td>\n",
        "      <td>19Jun2020</td>\n",
        "      <td>03Jul2020</td>\n",
        "      <td>12414318</td>\n",
        "      <td>SIR-F</td>\n",
        "      <td>0.55</td>\n",
        "      <td>0.00052027</td>\n",
        "      <td>7.57978e-05</td>\n",
        "      <td>0.00645391</td>\n",
        "      <td>0.0117235</td>\n",
        "      <td>360</td>\n",
        "      <td>21</td>\n",
        "      <td>3298</td>\n",
        "      <td>38</td>\n",
        "      <td>0.001</td>\n",
        "      <td>0.0578081</td>\n",
        "      <td>1376</td>\n",
        "      <td>1 min  0 sec</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>7th</th>\n",
        "      <td>Past</td>\n",
        "      <td>04Jul2020</td>\n",
        "      <td>12Jul2020</td>\n",
        "      <td>12414318</td>\n",
        "      <td>SIR-F</td>\n",
        "      <td>1.63</td>\n",
        "      <td>0.000541553</td>\n",
        "      <td>9.44571e-05</td>\n",
        "      <td>0.0142668</td>\n",
        "      <td>0.0086606</td>\n",
        "      <td>360</td>\n",
        "      <td>28</td>\n",
        "      <td>2646</td>\n",
        "      <td>17</td>\n",
        "      <td>0.001</td>\n",
        "      <td>0.0233784</td>\n",
        "      <td>1267</td>\n",
        "      <td>1 min  0 sec</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>8th</th>\n",
        "      <td>Past</td>\n",
        "      <td>13Jul2020</td>\n",
        "      <td>24Jul2020</td>\n",
        "      <td>12414318</td>\n",
        "      <td>SIR-F</td>\n",
        "      <td>0.6</td>\n",
        "      <td>0.00160791</td>\n",
        "      <td>8.3691e-05</td>\n",
        "      <td>0.0165341</td>\n",
        "      <td>0.0272927</td>\n",
        "      <td>360</td>\n",
        "      <td>9</td>\n",
        "      <td>2987</td>\n",
        "      <td>15</td>\n",
        "      <td>0.002</td>\n",
        "      <td>0.0692484</td>\n",
        "      <td>1394</td>\n",
        "      <td>1 min  0 sec</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>9th</th>\n",
        "      <td>Past</td>\n",
        "      <td>25Jul2020</td>\n",
        "      <td>04Aug2020</td>\n",
        "      <td>12414318</td>\n",
        "      <td>SIR-F</td>\n",
        "      <td>1.06</td>\n",
        "      <td>0.000751578</td>\n",
        "      <td>0.000157446</td>\n",
        "      <td>0.015658</td>\n",
        "      <td>0.014671</td>\n",
        "      <td>360</td>\n",
        "      <td>17</td>\n",
        "      <td>1587</td>\n",
        "      <td>15</td>\n",
        "      <td>0.001</td>\n",
        "      <td>0.0347043</td>\n",
        "      <td>1499</td>\n",
        "      <td>1 min  0 sec</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>10th</th>\n",
        "      <td>Past</td>\n",
        "      <td>05Aug2020</td>\n",
        "      <td>13Aug2020</td>\n",
        "      <td>12414318</td>\n",
        "      <td>-</td>\n",
        "      <td>-</td>\n",
        "      <td>-</td>\n",
        "      <td>-</td>\n",
        "      <td>-</td>\n",
        "      <td>-</td>\n",
        "      <td>-</td>\n",
        "      <td>-</td>\n",
        "      <td>-</td>\n",
        "      <td>-</td>\n",
        "      <td>-</td>\n",
        "      <td>-</td>\n",
        "      <td>-</td>\n",
        "      <td>-</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>11th</th>\n",
        "      <td>Past</td>\n",
        "      <td>14Aug2020</td>\n",
        "      <td>24Aug2020</td>\n",
        "      <td>12414318</td>\n",
        "      <td>-</td>\n",
        "      <td>-</td>\n",
        "      <td>-</td>\n",
        "      <td>-</td>\n",
        "      <td>-</td>\n",
        "      <td>-</td>\n",
        "      <td>-</td>\n",
        "      <td>-</td>\n",
        "      <td>-</td>\n",
        "      <td>-</td>\n",
        "      <td>-</td>\n",
        "      <td>-</td>\n",
        "      <td>-</td>\n",
        "      <td>-</td>\n",
        "    </tr>\n",
        "  </tbody>\n",
        "</table>\n",
        "</div>"
       ],
       "output_type": "pyout",
       "prompt_number": 12,
       "text": [
        "               Type      Start        End  Population    ODE    Rt  \\\n",
        "Country Phase                                                        \n",
        "Guinea  1st    Past  02May2020  11May2020    12414318  SIR-F  1.79   \n",
        "        2nd    Past  12May2020  20May2020    12414318  SIR-F  0.56   \n",
        "        3rd    Past  21May2020  28May2020    12414318  SIR-F  1.46   \n",
        "        4th    Past  29May2020  08Jun2020    12414318  SIR-F   0.6   \n",
        "        5th    Past  09Jun2020  18Jun2020    12414318  SIR-F  0.79   \n",
        "        6th    Past  19Jun2020  03Jul2020    12414318  SIR-F  0.55   \n",
        "        7th    Past  04Jul2020  12Jul2020    12414318  SIR-F  1.63   \n",
        "        8th    Past  13Jul2020  24Jul2020    12414318  SIR-F   0.6   \n",
        "        9th    Past  25Jul2020  04Aug2020    12414318  SIR-F  1.06   \n",
        "        10th   Past  05Aug2020  13Aug2020    12414318      -     -   \n",
        "        11th   Past  14Aug2020  24Aug2020    12414318      -     -   \n",
        "\n",
        "                     theta        kappa         rho       sigma  tau  \\\n",
        "Country Phase                                                          \n",
        "Guinea  1st    0.000437189   9.8046e-05   0.0126597  0.00699089  360   \n",
        "        2nd      0.0339565  3.65944e-06  0.00408737  0.00705158  360   \n",
        "        3rd    0.000822208  8.45387e-05  0.00929099   0.0062892  360   \n",
        "        4th    0.000936415  3.12653e-05   0.0101341   0.0168402  360   \n",
        "        5th    0.000570239  7.90865e-05   0.0113251   0.0142607  360   \n",
        "        6th     0.00052027  7.57978e-05  0.00645391   0.0117235  360   \n",
        "        7th    0.000541553  9.44571e-05   0.0142668   0.0086606  360   \n",
        "        8th     0.00160791   8.3691e-05   0.0165341   0.0272927  360   \n",
        "        9th    0.000751578  0.000157446    0.015658    0.014671  360   \n",
        "        10th             -            -           -           -    -   \n",
        "        11th             -            -           -           -    -   \n",
        "\n",
        "              1/gamma [day] 1/alpha2 [day] 1/beta [day] alpha1 [-]      RMSLE  \\\n",
        "Country Phase                                                                   \n",
        "Guinea  1st              35           2549           19          0  0.0738058   \n",
        "        2nd              35          68316           61      0.034   0.135724   \n",
        "        3rd              39           2957           26      0.001  0.0326798   \n",
        "        4th              14           7996           24      0.001  0.0618899   \n",
        "        5th              17           3161           22      0.001  0.0511646   \n",
        "        6th              21           3298           38      0.001  0.0578081   \n",
        "        7th              28           2646           17      0.001  0.0233784   \n",
        "        8th               9           2987           15      0.002  0.0692484   \n",
        "        9th              17           1587           15      0.001  0.0347043   \n",
        "        10th              -              -            -          -          -   \n",
        "        11th              -              -            -          -          -   \n",
        "\n",
        "              Trials       Runtime  \n",
        "Country Phase                       \n",
        "Guinea  1st     1104  1 min  0 sec  \n",
        "        2nd     1086  1 min  0 sec  \n",
        "        3rd     1514  1 min  0 sec  \n",
        "        4th     1750  1 min  0 sec  \n",
        "        5th     1106  1 min  0 sec  \n",
        "        6th     1376  1 min  0 sec  \n",
        "        7th     1267  1 min  0 sec  \n",
        "        8th     1394  1 min  0 sec  \n",
        "        9th     1499  1 min  0 sec  \n",
        "        10th       -             -  \n",
        "        11th       -             -  "
       ]
      }
     ],
     "prompt_number": 12
    },
    {
     "cell_type": "markdown",
     "metadata": {},
     "source": [
      "## Compare the history of parameters\n",
      "Here, compare the history of parameter values if countries."
     ]
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "# All parameter/day parameter/Rt/OxCGRT\n",
      "analyser.track().head()"
     ],
     "language": "python",
     "metadata": {},
     "outputs": [
      {
       "html": [
        "<div>\n",
        "<style scoped>\n",
        "    .dataframe tbody tr th:only-of-type {\n",
        "        vertical-align: middle;\n",
        "    }\n",
        "\n",
        "    .dataframe tbody tr th {\n",
        "        vertical-align: top;\n",
        "    }\n",
        "\n",
        "    .dataframe thead th {\n",
        "        text-align: right;\n",
        "    }\n",
        "</style>\n",
        "<table border=\"1\" class=\"dataframe\">\n",
        "  <thead>\n",
        "    <tr style=\"text-align: right;\">\n",
        "      <th></th>\n",
        "      <th>Date</th>\n",
        "      <th>Country</th>\n",
        "      <th>theta</th>\n",
        "      <th>kappa</th>\n",
        "      <th>rho</th>\n",
        "      <th>sigma</th>\n",
        "      <th>alpha1 [-]</th>\n",
        "      <th>1/alpha2 [day]</th>\n",
        "      <th>1/beta [day]</th>\n",
        "      <th>1/gamma [day]</th>\n",
        "      <th>...</th>\n",
        "      <th>Cancel_events</th>\n",
        "      <th>Gatherings_restrictions</th>\n",
        "      <th>Transport_closing</th>\n",
        "      <th>Stay_home_restrictions</th>\n",
        "      <th>Internal_movement_restrictions</th>\n",
        "      <th>International_movement_restrictions</th>\n",
        "      <th>Information_campaigns</th>\n",
        "      <th>Testing_policy</th>\n",
        "      <th>Contact_tracing</th>\n",
        "      <th>Stringency_index</th>\n",
        "    </tr>\n",
        "  </thead>\n",
        "  <tbody>\n",
        "    <tr>\n",
        "      <th>0</th>\n",
        "      <td>2020-05-27</td>\n",
        "      <td>Bangladesh</td>\n",
        "      <td>0.00136739</td>\n",
        "      <td>0.000171597</td>\n",
        "      <td>0.0150918</td>\n",
        "      <td>0.00291814</td>\n",
        "      <td>0.001</td>\n",
        "      <td>1456</td>\n",
        "      <td>16</td>\n",
        "      <td>85</td>\n",
        "      <td>...</td>\n",
        "      <td>2</td>\n",
        "      <td>4</td>\n",
        "      <td>2</td>\n",
        "      <td>2</td>\n",
        "      <td>2</td>\n",
        "      <td>3</td>\n",
        "      <td>2</td>\n",
        "      <td>2</td>\n",
        "      <td>1</td>\n",
        "      <td>93.52</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>1</th>\n",
        "      <td>2020-05-28</td>\n",
        "      <td>Bangladesh</td>\n",
        "      <td>0.00136739</td>\n",
        "      <td>0.000171597</td>\n",
        "      <td>0.0150918</td>\n",
        "      <td>0.00291814</td>\n",
        "      <td>0.001</td>\n",
        "      <td>1456</td>\n",
        "      <td>16</td>\n",
        "      <td>85</td>\n",
        "      <td>...</td>\n",
        "      <td>2</td>\n",
        "      <td>4</td>\n",
        "      <td>2</td>\n",
        "      <td>2</td>\n",
        "      <td>2</td>\n",
        "      <td>3</td>\n",
        "      <td>2</td>\n",
        "      <td>2</td>\n",
        "      <td>1</td>\n",
        "      <td>93.52</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>2</th>\n",
        "      <td>2020-05-29</td>\n",
        "      <td>Bangladesh</td>\n",
        "      <td>0.00136739</td>\n",
        "      <td>0.000171597</td>\n",
        "      <td>0.0150918</td>\n",
        "      <td>0.00291814</td>\n",
        "      <td>0.001</td>\n",
        "      <td>1456</td>\n",
        "      <td>16</td>\n",
        "      <td>85</td>\n",
        "      <td>...</td>\n",
        "      <td>2</td>\n",
        "      <td>4</td>\n",
        "      <td>2</td>\n",
        "      <td>2</td>\n",
        "      <td>2</td>\n",
        "      <td>3</td>\n",
        "      <td>2</td>\n",
        "      <td>2</td>\n",
        "      <td>1</td>\n",
        "      <td>93.52</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>3</th>\n",
        "      <td>2020-05-30</td>\n",
        "      <td>Bangladesh</td>\n",
        "      <td>0.00136739</td>\n",
        "      <td>0.000171597</td>\n",
        "      <td>0.0150918</td>\n",
        "      <td>0.00291814</td>\n",
        "      <td>0.001</td>\n",
        "      <td>1456</td>\n",
        "      <td>16</td>\n",
        "      <td>85</td>\n",
        "      <td>...</td>\n",
        "      <td>2</td>\n",
        "      <td>4</td>\n",
        "      <td>2</td>\n",
        "      <td>2</td>\n",
        "      <td>2</td>\n",
        "      <td>3</td>\n",
        "      <td>2</td>\n",
        "      <td>2</td>\n",
        "      <td>1</td>\n",
        "      <td>93.52</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>4</th>\n",
        "      <td>2020-05-31</td>\n",
        "      <td>Bangladesh</td>\n",
        "      <td>0.00136739</td>\n",
        "      <td>0.000171597</td>\n",
        "      <td>0.0150918</td>\n",
        "      <td>0.00291814</td>\n",
        "      <td>0.001</td>\n",
        "      <td>1456</td>\n",
        "      <td>16</td>\n",
        "      <td>85</td>\n",
        "      <td>...</td>\n",
        "      <td>2</td>\n",
        "      <td>3</td>\n",
        "      <td>1</td>\n",
        "      <td>1</td>\n",
        "      <td>0</td>\n",
        "      <td>3</td>\n",
        "      <td>2</td>\n",
        "      <td>2</td>\n",
        "      <td>1</td>\n",
        "      <td>62.96</td>\n",
        "    </tr>\n",
        "  </tbody>\n",
        "</table>\n",
        "<p>5 rows \u00d7 23 columns</p>\n",
        "</div>"
       ],
       "output_type": "pyout",
       "prompt_number": 13,
       "text": [
        "        Date     Country       theta        kappa        rho       sigma  \\\n",
        "0 2020-05-27  Bangladesh  0.00136739  0.000171597  0.0150918  0.00291814   \n",
        "1 2020-05-28  Bangladesh  0.00136739  0.000171597  0.0150918  0.00291814   \n",
        "2 2020-05-29  Bangladesh  0.00136739  0.000171597  0.0150918  0.00291814   \n",
        "3 2020-05-30  Bangladesh  0.00136739  0.000171597  0.0150918  0.00291814   \n",
        "4 2020-05-31  Bangladesh  0.00136739  0.000171597  0.0150918  0.00291814   \n",
        "\n",
        "  alpha1 [-] 1/alpha2 [day] 1/beta [day] 1/gamma [day]  ... Cancel_events  \\\n",
        "0      0.001           1456           16            85  ...             2   \n",
        "1      0.001           1456           16            85  ...             2   \n",
        "2      0.001           1456           16            85  ...             2   \n",
        "3      0.001           1456           16            85  ...             2   \n",
        "4      0.001           1456           16            85  ...             2   \n",
        "\n",
        "   Gatherings_restrictions  Transport_closing  Stay_home_restrictions  \\\n",
        "0                        4                  2                       2   \n",
        "1                        4                  2                       2   \n",
        "2                        4                  2                       2   \n",
        "3                        4                  2                       2   \n",
        "4                        3                  1                       1   \n",
        "\n",
        "   Internal_movement_restrictions  International_movement_restrictions  \\\n",
        "0                               2                                    3   \n",
        "1                               2                                    3   \n",
        "2                               2                                    3   \n",
        "3                               2                                    3   \n",
        "4                               0                                    3   \n",
        "\n",
        "   Information_campaigns  Testing_policy  Contact_tracing  Stringency_index  \n",
        "0                      2               2                1             93.52  \n",
        "1                      2               2                1             93.52  \n",
        "2                      2               2                1             93.52  \n",
        "3                      2               2                1             93.52  \n",
        "4                      2               2                1             62.96  \n",
        "\n",
        "[5 rows x 23 columns]"
       ]
      }
     ],
     "prompt_number": 13
    },
    {
     "cell_type": "heading",
     "level": 3,
     "metadata": {},
     "source": [
      "$Rt$: Reprodcution number $\\mathrm{[-]}$"
     ]
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "analyser.param_history(\"Rt\", roll_window=None).tail()"
     ],
     "language": "python",
     "metadata": {},
     "outputs": [
      {
       "output_type": "display_data",
       "png": "\n",
       "text": [
        "<Figure size 648x432 with 1 Axes>"
       ]
      },
      {
       "html": [
        "<div>\n",
        "<style scoped>\n",
        "    .dataframe tbody tr th:only-of-type {\n",
        "        vertical-align: middle;\n",
        "    }\n",
        "\n",
        "    .dataframe tbody tr th {\n",
        "        vertical-align: top;\n",
        "    }\n",
        "\n",
        "    .dataframe thead th {\n",
        "        text-align: right;\n",
        "    }\n",
        "</style>\n",
        "<table border=\"1\" class=\"dataframe\">\n",
        "  <thead>\n",
        "    <tr style=\"text-align: right;\">\n",
        "      <th>Country</th>\n",
        "      <th>Bahrain</th>\n",
        "      <th>Bangladesh</th>\n",
        "      <th>Czech Republic</th>\n",
        "      <th>France</th>\n",
        "      <th>Guinea</th>\n",
        "      <th>Iran</th>\n",
        "      <th>Italy</th>\n",
        "      <th>Korea, South</th>\n",
        "      <th>Kuwait</th>\n",
        "      <th>Mexico</th>\n",
        "      <th>Moldova</th>\n",
        "      <th>Peru</th>\n",
        "      <th>Poland</th>\n",
        "      <th>Portugal</th>\n",
        "      <th>Romania</th>\n",
        "      <th>Russia</th>\n",
        "      <th>Senegal</th>\n",
        "      <th>United Arab Emirates</th>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>Date</th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "    </tr>\n",
        "  </thead>\n",
        "  <tbody>\n",
        "    <tr>\n",
        "      <th>2020-08-20</th>\n",
        "      <td>0.92</td>\n",
        "      <td>1.12</td>\n",
        "      <td>1.14</td>\n",
        "      <td>12.08</td>\n",
        "      <td>1.06</td>\n",
        "      <td>1.25</td>\n",
        "      <td>1.33</td>\n",
        "      <td>0.88</td>\n",
        "      <td>1.0</td>\n",
        "      <td>0.95</td>\n",
        "      <td>74.05</td>\n",
        "      <td>1.45</td>\n",
        "      <td>2.09</td>\n",
        "      <td>1.21</td>\n",
        "      <td>2.91</td>\n",
        "      <td>1.32</td>\n",
        "      <td>1.71</td>\n",
        "      <td>1.08</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>2020-08-21</th>\n",
        "      <td>0.92</td>\n",
        "      <td>1.12</td>\n",
        "      <td>1.14</td>\n",
        "      <td>12.08</td>\n",
        "      <td>1.06</td>\n",
        "      <td>1.25</td>\n",
        "      <td>1.33</td>\n",
        "      <td>0.88</td>\n",
        "      <td>1.0</td>\n",
        "      <td>0.95</td>\n",
        "      <td>74.05</td>\n",
        "      <td>1.45</td>\n",
        "      <td>2.09</td>\n",
        "      <td>1.21</td>\n",
        "      <td>2.91</td>\n",
        "      <td>1.32</td>\n",
        "      <td>1.71</td>\n",
        "      <td>1.08</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>2020-08-22</th>\n",
        "      <td>0.92</td>\n",
        "      <td>1.12</td>\n",
        "      <td>1.14</td>\n",
        "      <td>12.08</td>\n",
        "      <td>1.06</td>\n",
        "      <td>1.25</td>\n",
        "      <td>1.33</td>\n",
        "      <td>0.88</td>\n",
        "      <td>1.0</td>\n",
        "      <td>0.95</td>\n",
        "      <td>74.05</td>\n",
        "      <td>1.45</td>\n",
        "      <td>2.09</td>\n",
        "      <td>1.21</td>\n",
        "      <td>2.91</td>\n",
        "      <td>1.32</td>\n",
        "      <td>1.71</td>\n",
        "      <td>1.08</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>2020-08-23</th>\n",
        "      <td>0.92</td>\n",
        "      <td>1.12</td>\n",
        "      <td>1.14</td>\n",
        "      <td>12.08</td>\n",
        "      <td>1.06</td>\n",
        "      <td>1.25</td>\n",
        "      <td>1.33</td>\n",
        "      <td>0.88</td>\n",
        "      <td>1.0</td>\n",
        "      <td>0.95</td>\n",
        "      <td>74.05</td>\n",
        "      <td>1.45</td>\n",
        "      <td>2.09</td>\n",
        "      <td>1.21</td>\n",
        "      <td>2.91</td>\n",
        "      <td>1.32</td>\n",
        "      <td>1.71</td>\n",
        "      <td>1.08</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>2020-08-24</th>\n",
        "      <td>0.92</td>\n",
        "      <td>1.12</td>\n",
        "      <td>1.14</td>\n",
        "      <td>12.08</td>\n",
        "      <td>1.06</td>\n",
        "      <td>1.25</td>\n",
        "      <td>1.33</td>\n",
        "      <td>0.88</td>\n",
        "      <td>1.0</td>\n",
        "      <td>0.95</td>\n",
        "      <td>74.05</td>\n",
        "      <td>1.45</td>\n",
        "      <td>2.09</td>\n",
        "      <td>1.21</td>\n",
        "      <td>2.91</td>\n",
        "      <td>1.32</td>\n",
        "      <td>1.71</td>\n",
        "      <td>1.08</td>\n",
        "    </tr>\n",
        "  </tbody>\n",
        "</table>\n",
        "</div>"
       ],
       "output_type": "pyout",
       "prompt_number": 14,
       "text": [
        "Country     Bahrain  Bangladesh  Czech Republic  France  Guinea  Iran  Italy  \\\n",
        "Date                                                                           \n",
        "2020-08-20     0.92        1.12            1.14   12.08    1.06  1.25   1.33   \n",
        "2020-08-21     0.92        1.12            1.14   12.08    1.06  1.25   1.33   \n",
        "2020-08-22     0.92        1.12            1.14   12.08    1.06  1.25   1.33   \n",
        "2020-08-23     0.92        1.12            1.14   12.08    1.06  1.25   1.33   \n",
        "2020-08-24     0.92        1.12            1.14   12.08    1.06  1.25   1.33   \n",
        "\n",
        "Country     Korea, South  Kuwait  Mexico  Moldova  Peru  Poland  Portugal  \\\n",
        "Date                                                                        \n",
        "2020-08-20          0.88     1.0    0.95    74.05  1.45    2.09      1.21   \n",
        "2020-08-21          0.88     1.0    0.95    74.05  1.45    2.09      1.21   \n",
        "2020-08-22          0.88     1.0    0.95    74.05  1.45    2.09      1.21   \n",
        "2020-08-23          0.88     1.0    0.95    74.05  1.45    2.09      1.21   \n",
        "2020-08-24          0.88     1.0    0.95    74.05  1.45    2.09      1.21   \n",
        "\n",
        "Country     Romania  Russia  Senegal  United Arab Emirates  \n",
        "Date                                                        \n",
        "2020-08-20     2.91    1.32     1.71                  1.08  \n",
        "2020-08-21     2.91    1.32     1.71                  1.08  \n",
        "2020-08-22     2.91    1.32     1.71                  1.08  \n",
        "2020-08-23     2.91    1.32     1.71                  1.08  \n",
        "2020-08-24     2.91    1.32     1.71                  1.08  "
       ]
      }
     ],
     "prompt_number": 14
    },
    {
     "cell_type": "heading",
     "level": 3,
     "metadata": {},
     "source": [
      "$\\rho$: Effective contact rate $\\mathrm{[-]}$"
     ]
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "analyser.param_history(\"rho\", roll_window=None).tail()"
     ],
     "language": "python",
     "metadata": {},
     "outputs": [
      {
       "output_type": "display_data",
       "png": "\n",
       "text": [
        "<Figure size 648x432 with 1 Axes>"
       ]
      },
      {
       "html": [
        "<div>\n",
        "<style scoped>\n",
        "    .dataframe tbody tr th:only-of-type {\n",
        "        vertical-align: middle;\n",
        "    }\n",
        "\n",
        "    .dataframe tbody tr th {\n",
        "        vertical-align: top;\n",
        "    }\n",
        "\n",
        "    .dataframe thead th {\n",
        "        text-align: right;\n",
        "    }\n",
        "</style>\n",
        "<table border=\"1\" class=\"dataframe\">\n",
        "  <thead>\n",
        "    <tr style=\"text-align: right;\">\n",
        "      <th>Country</th>\n",
        "      <th>Bahrain</th>\n",
        "      <th>Bangladesh</th>\n",
        "      <th>Czech Republic</th>\n",
        "      <th>France</th>\n",
        "      <th>Guinea</th>\n",
        "      <th>Iran</th>\n",
        "      <th>Italy</th>\n",
        "      <th>Korea, South</th>\n",
        "      <th>Kuwait</th>\n",
        "      <th>Mexico</th>\n",
        "      <th>Moldova</th>\n",
        "      <th>Peru</th>\n",
        "      <th>Poland</th>\n",
        "      <th>Portugal</th>\n",
        "      <th>Romania</th>\n",
        "      <th>Russia</th>\n",
        "      <th>Senegal</th>\n",
        "      <th>United Arab Emirates</th>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>Date</th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "    </tr>\n",
        "  </thead>\n",
        "  <tbody>\n",
        "    <tr>\n",
        "      <th>2020-08-20</th>\n",
        "      <td>0.029542</td>\n",
        "      <td>0.005311</td>\n",
        "      <td>0.012231</td>\n",
        "      <td>0.006396</td>\n",
        "      <td>0.015658</td>\n",
        "      <td>0.021795</td>\n",
        "      <td>0.006455</td>\n",
        "      <td>0.01412</td>\n",
        "      <td>0.019828</td>\n",
        "      <td>0.031363</td>\n",
        "      <td>0.011348</td>\n",
        "      <td>0.004232</td>\n",
        "      <td>0.011983</td>\n",
        "      <td>0.004213</td>\n",
        "      <td>0.007275</td>\n",
        "      <td>0.001305</td>\n",
        "      <td>0.007582</td>\n",
        "      <td>0.011385</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>2020-08-21</th>\n",
        "      <td>0.029542</td>\n",
        "      <td>0.005311</td>\n",
        "      <td>0.012231</td>\n",
        "      <td>0.006396</td>\n",
        "      <td>0.015658</td>\n",
        "      <td>0.021795</td>\n",
        "      <td>0.006455</td>\n",
        "      <td>0.01412</td>\n",
        "      <td>0.019828</td>\n",
        "      <td>0.031363</td>\n",
        "      <td>0.011348</td>\n",
        "      <td>0.004232</td>\n",
        "      <td>0.011983</td>\n",
        "      <td>0.004213</td>\n",
        "      <td>0.007275</td>\n",
        "      <td>0.001305</td>\n",
        "      <td>0.007582</td>\n",
        "      <td>0.011385</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>2020-08-22</th>\n",
        "      <td>0.029542</td>\n",
        "      <td>0.005311</td>\n",
        "      <td>0.012231</td>\n",
        "      <td>0.006396</td>\n",
        "      <td>0.015658</td>\n",
        "      <td>0.021795</td>\n",
        "      <td>0.006455</td>\n",
        "      <td>0.01412</td>\n",
        "      <td>0.019828</td>\n",
        "      <td>0.031363</td>\n",
        "      <td>0.011348</td>\n",
        "      <td>0.004232</td>\n",
        "      <td>0.011983</td>\n",
        "      <td>0.004213</td>\n",
        "      <td>0.007275</td>\n",
        "      <td>0.001305</td>\n",
        "      <td>0.007582</td>\n",
        "      <td>0.011385</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>2020-08-23</th>\n",
        "      <td>0.029542</td>\n",
        "      <td>0.005311</td>\n",
        "      <td>0.012231</td>\n",
        "      <td>0.006396</td>\n",
        "      <td>0.015658</td>\n",
        "      <td>0.021795</td>\n",
        "      <td>0.006455</td>\n",
        "      <td>0.01412</td>\n",
        "      <td>0.019828</td>\n",
        "      <td>0.031363</td>\n",
        "      <td>0.011348</td>\n",
        "      <td>0.004232</td>\n",
        "      <td>0.011983</td>\n",
        "      <td>0.004213</td>\n",
        "      <td>0.007275</td>\n",
        "      <td>0.001305</td>\n",
        "      <td>0.007582</td>\n",
        "      <td>0.011385</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>2020-08-24</th>\n",
        "      <td>0.029542</td>\n",
        "      <td>0.005311</td>\n",
        "      <td>0.012231</td>\n",
        "      <td>0.006396</td>\n",
        "      <td>0.015658</td>\n",
        "      <td>0.021795</td>\n",
        "      <td>0.006455</td>\n",
        "      <td>0.01412</td>\n",
        "      <td>0.019828</td>\n",
        "      <td>0.031363</td>\n",
        "      <td>0.011348</td>\n",
        "      <td>0.004232</td>\n",
        "      <td>0.011983</td>\n",
        "      <td>0.004213</td>\n",
        "      <td>0.007275</td>\n",
        "      <td>0.001305</td>\n",
        "      <td>0.007582</td>\n",
        "      <td>0.011385</td>\n",
        "    </tr>\n",
        "  </tbody>\n",
        "</table>\n",
        "</div>"
       ],
       "output_type": "pyout",
       "prompt_number": 15,
       "text": [
        "Country      Bahrain  Bangladesh  Czech Republic    France    Guinea  \\\n",
        "Date                                                                   \n",
        "2020-08-20  0.029542    0.005311        0.012231  0.006396  0.015658   \n",
        "2020-08-21  0.029542    0.005311        0.012231  0.006396  0.015658   \n",
        "2020-08-22  0.029542    0.005311        0.012231  0.006396  0.015658   \n",
        "2020-08-23  0.029542    0.005311        0.012231  0.006396  0.015658   \n",
        "2020-08-24  0.029542    0.005311        0.012231  0.006396  0.015658   \n",
        "\n",
        "Country         Iran     Italy  Korea, South    Kuwait    Mexico   Moldova  \\\n",
        "Date                                                                         \n",
        "2020-08-20  0.021795  0.006455       0.01412  0.019828  0.031363  0.011348   \n",
        "2020-08-21  0.021795  0.006455       0.01412  0.019828  0.031363  0.011348   \n",
        "2020-08-22  0.021795  0.006455       0.01412  0.019828  0.031363  0.011348   \n",
        "2020-08-23  0.021795  0.006455       0.01412  0.019828  0.031363  0.011348   \n",
        "2020-08-24  0.021795  0.006455       0.01412  0.019828  0.031363  0.011348   \n",
        "\n",
        "Country         Peru    Poland  Portugal   Romania    Russia   Senegal  \\\n",
        "Date                                                                     \n",
        "2020-08-20  0.004232  0.011983  0.004213  0.007275  0.001305  0.007582   \n",
        "2020-08-21  0.004232  0.011983  0.004213  0.007275  0.001305  0.007582   \n",
        "2020-08-22  0.004232  0.011983  0.004213  0.007275  0.001305  0.007582   \n",
        "2020-08-23  0.004232  0.011983  0.004213  0.007275  0.001305  0.007582   \n",
        "2020-08-24  0.004232  0.011983  0.004213  0.007275  0.001305  0.007582   \n",
        "\n",
        "Country     United Arab Emirates  \n",
        "Date                              \n",
        "2020-08-20              0.011385  \n",
        "2020-08-21              0.011385  \n",
        "2020-08-22              0.011385  \n",
        "2020-08-23              0.011385  \n",
        "2020-08-24              0.011385  "
       ]
      }
     ],
     "prompt_number": 15
    },
    {
     "cell_type": "heading",
     "level": 3,
     "metadata": {},
     "source": [
      "$\\sigma$: Recovery rate $\\mathrm{[-]}$"
     ]
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "analyser.param_history(\"sigma\", roll_window=None).tail()"
     ],
     "language": "python",
     "metadata": {},
     "outputs": [
      {
       "output_type": "display_data",
       "png": "\n",
       "text": [
        "<Figure size 648x432 with 1 Axes>"
       ]
      },
      {
       "html": [
        "<div>\n",
        "<style scoped>\n",
        "    .dataframe tbody tr th:only-of-type {\n",
        "        vertical-align: middle;\n",
        "    }\n",
        "\n",
        "    .dataframe tbody tr th {\n",
        "        vertical-align: top;\n",
        "    }\n",
        "\n",
        "    .dataframe thead th {\n",
        "        text-align: right;\n",
        "    }\n",
        "</style>\n",
        "<table border=\"1\" class=\"dataframe\">\n",
        "  <thead>\n",
        "    <tr style=\"text-align: right;\">\n",
        "      <th>Country</th>\n",
        "      <th>Bahrain</th>\n",
        "      <th>Bangladesh</th>\n",
        "      <th>Czech Republic</th>\n",
        "      <th>France</th>\n",
        "      <th>Guinea</th>\n",
        "      <th>Iran</th>\n",
        "      <th>Italy</th>\n",
        "      <th>Korea, South</th>\n",
        "      <th>Kuwait</th>\n",
        "      <th>Mexico</th>\n",
        "      <th>Moldova</th>\n",
        "      <th>Peru</th>\n",
        "      <th>Poland</th>\n",
        "      <th>Portugal</th>\n",
        "      <th>Romania</th>\n",
        "      <th>Russia</th>\n",
        "      <th>Senegal</th>\n",
        "      <th>United Arab Emirates</th>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>Date</th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "    </tr>\n",
        "  </thead>\n",
        "  <tbody>\n",
        "    <tr>\n",
        "      <th>2020-08-20</th>\n",
        "      <td>0.032166</td>\n",
        "      <td>0.004671</td>\n",
        "      <td>0.01075</td>\n",
        "      <td>0.000453</td>\n",
        "      <td>0.014671</td>\n",
        "      <td>0.016052</td>\n",
        "      <td>0.004659</td>\n",
        "      <td>0.015978</td>\n",
        "      <td>0.019642</td>\n",
        "      <td>0.029872</td>\n",
        "      <td>0.0</td>\n",
        "      <td>0.00269</td>\n",
        "      <td>0.005573</td>\n",
        "      <td>0.003394</td>\n",
        "      <td>0.002306</td>\n",
        "      <td>0.000965</td>\n",
        "      <td>0.004271</td>\n",
        "      <td>0.01052</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>2020-08-21</th>\n",
        "      <td>0.032166</td>\n",
        "      <td>0.004671</td>\n",
        "      <td>0.01075</td>\n",
        "      <td>0.000453</td>\n",
        "      <td>0.014671</td>\n",
        "      <td>0.016052</td>\n",
        "      <td>0.004659</td>\n",
        "      <td>0.015978</td>\n",
        "      <td>0.019642</td>\n",
        "      <td>0.029872</td>\n",
        "      <td>0.0</td>\n",
        "      <td>0.00269</td>\n",
        "      <td>0.005573</td>\n",
        "      <td>0.003394</td>\n",
        "      <td>0.002306</td>\n",
        "      <td>0.000965</td>\n",
        "      <td>0.004271</td>\n",
        "      <td>0.01052</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>2020-08-22</th>\n",
        "      <td>0.032166</td>\n",
        "      <td>0.004671</td>\n",
        "      <td>0.01075</td>\n",
        "      <td>0.000453</td>\n",
        "      <td>0.014671</td>\n",
        "      <td>0.016052</td>\n",
        "      <td>0.004659</td>\n",
        "      <td>0.015978</td>\n",
        "      <td>0.019642</td>\n",
        "      <td>0.029872</td>\n",
        "      <td>0.0</td>\n",
        "      <td>0.00269</td>\n",
        "      <td>0.005573</td>\n",
        "      <td>0.003394</td>\n",
        "      <td>0.002306</td>\n",
        "      <td>0.000965</td>\n",
        "      <td>0.004271</td>\n",
        "      <td>0.01052</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>2020-08-23</th>\n",
        "      <td>0.032166</td>\n",
        "      <td>0.004671</td>\n",
        "      <td>0.01075</td>\n",
        "      <td>0.000453</td>\n",
        "      <td>0.014671</td>\n",
        "      <td>0.016052</td>\n",
        "      <td>0.004659</td>\n",
        "      <td>0.015978</td>\n",
        "      <td>0.019642</td>\n",
        "      <td>0.029872</td>\n",
        "      <td>0.0</td>\n",
        "      <td>0.00269</td>\n",
        "      <td>0.005573</td>\n",
        "      <td>0.003394</td>\n",
        "      <td>0.002306</td>\n",
        "      <td>0.000965</td>\n",
        "      <td>0.004271</td>\n",
        "      <td>0.01052</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>2020-08-24</th>\n",
        "      <td>0.032166</td>\n",
        "      <td>0.004671</td>\n",
        "      <td>0.01075</td>\n",
        "      <td>0.000453</td>\n",
        "      <td>0.014671</td>\n",
        "      <td>0.016052</td>\n",
        "      <td>0.004659</td>\n",
        "      <td>0.015978</td>\n",
        "      <td>0.019642</td>\n",
        "      <td>0.029872</td>\n",
        "      <td>0.0</td>\n",
        "      <td>0.00269</td>\n",
        "      <td>0.005573</td>\n",
        "      <td>0.003394</td>\n",
        "      <td>0.002306</td>\n",
        "      <td>0.000965</td>\n",
        "      <td>0.004271</td>\n",
        "      <td>0.01052</td>\n",
        "    </tr>\n",
        "  </tbody>\n",
        "</table>\n",
        "</div>"
       ],
       "output_type": "pyout",
       "prompt_number": 16,
       "text": [
        "Country      Bahrain  Bangladesh  Czech Republic    France    Guinea  \\\n",
        "Date                                                                   \n",
        "2020-08-20  0.032166    0.004671         0.01075  0.000453  0.014671   \n",
        "2020-08-21  0.032166    0.004671         0.01075  0.000453  0.014671   \n",
        "2020-08-22  0.032166    0.004671         0.01075  0.000453  0.014671   \n",
        "2020-08-23  0.032166    0.004671         0.01075  0.000453  0.014671   \n",
        "2020-08-24  0.032166    0.004671         0.01075  0.000453  0.014671   \n",
        "\n",
        "Country         Iran     Italy  Korea, South    Kuwait    Mexico  Moldova  \\\n",
        "Date                                                                        \n",
        "2020-08-20  0.016052  0.004659      0.015978  0.019642  0.029872      0.0   \n",
        "2020-08-21  0.016052  0.004659      0.015978  0.019642  0.029872      0.0   \n",
        "2020-08-22  0.016052  0.004659      0.015978  0.019642  0.029872      0.0   \n",
        "2020-08-23  0.016052  0.004659      0.015978  0.019642  0.029872      0.0   \n",
        "2020-08-24  0.016052  0.004659      0.015978  0.019642  0.029872      0.0   \n",
        "\n",
        "Country        Peru    Poland  Portugal   Romania    Russia   Senegal  \\\n",
        "Date                                                                    \n",
        "2020-08-20  0.00269  0.005573  0.003394  0.002306  0.000965  0.004271   \n",
        "2020-08-21  0.00269  0.005573  0.003394  0.002306  0.000965  0.004271   \n",
        "2020-08-22  0.00269  0.005573  0.003394  0.002306  0.000965  0.004271   \n",
        "2020-08-23  0.00269  0.005573  0.003394  0.002306  0.000965  0.004271   \n",
        "2020-08-24  0.00269  0.005573  0.003394  0.002306  0.000965  0.004271   \n",
        "\n",
        "Country     United Arab Emirates  \n",
        "Date                              \n",
        "2020-08-20               0.01052  \n",
        "2020-08-21               0.01052  \n",
        "2020-08-22               0.01052  \n",
        "2020-08-23               0.01052  \n",
        "2020-08-24               0.01052  "
       ]
      }
     ],
     "prompt_number": 16
    },
    {
     "cell_type": "heading",
     "level": 3,
     "metadata": {},
     "source": [
      "$\\kappa$: Mortality rate of infected cases $\\mathrm{[-]}$"
     ]
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "analyser.param_history(\"kappa\", roll_window=None).tail()"
     ],
     "language": "python",
     "metadata": {},
     "outputs": [
      {
       "output_type": "display_data",
       "png": "\n",
       "text": [
        "<Figure size 648x432 with 1 Axes>"
       ]
      },
      {
       "html": [
        "<div>\n",
        "<style scoped>\n",
        "    .dataframe tbody tr th:only-of-type {\n",
        "        vertical-align: middle;\n",
        "    }\n",
        "\n",
        "    .dataframe tbody tr th {\n",
        "        vertical-align: top;\n",
        "    }\n",
        "\n",
        "    .dataframe thead th {\n",
        "        text-align: right;\n",
        "    }\n",
        "</style>\n",
        "<table border=\"1\" class=\"dataframe\">\n",
        "  <thead>\n",
        "    <tr style=\"text-align: right;\">\n",
        "      <th>Country</th>\n",
        "      <th>Bahrain</th>\n",
        "      <th>Bangladesh</th>\n",
        "      <th>Czech Republic</th>\n",
        "      <th>France</th>\n",
        "      <th>Guinea</th>\n",
        "      <th>Iran</th>\n",
        "      <th>Italy</th>\n",
        "      <th>Korea, South</th>\n",
        "      <th>Kuwait</th>\n",
        "      <th>Mexico</th>\n",
        "      <th>Moldova</th>\n",
        "      <th>Peru</th>\n",
        "      <th>Poland</th>\n",
        "      <th>Portugal</th>\n",
        "      <th>Romania</th>\n",
        "      <th>Russia</th>\n",
        "      <th>Senegal</th>\n",
        "      <th>United Arab Emirates</th>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>Date</th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "    </tr>\n",
        "  </thead>\n",
        "  <tbody>\n",
        "    <tr>\n",
        "      <th>2020-08-20</th>\n",
        "      <td>0.000095</td>\n",
        "      <td>0.000079</td>\n",
        "      <td>0.000002</td>\n",
        "      <td>0.000076</td>\n",
        "      <td>0.000157</td>\n",
        "      <td>0.00064</td>\n",
        "      <td>0.000196</td>\n",
        "      <td>0.000101</td>\n",
        "      <td>0.000079</td>\n",
        "      <td>0.000458</td>\n",
        "      <td>0.000153</td>\n",
        "      <td>0.000188</td>\n",
        "      <td>0.000162</td>\n",
        "      <td>0.000076</td>\n",
        "      <td>0.000191</td>\n",
        "      <td>0.000002</td>\n",
        "      <td>0.000082</td>\n",
        "      <td>0.000037</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>2020-08-21</th>\n",
        "      <td>0.000095</td>\n",
        "      <td>0.000079</td>\n",
        "      <td>0.000002</td>\n",
        "      <td>0.000076</td>\n",
        "      <td>0.000157</td>\n",
        "      <td>0.00064</td>\n",
        "      <td>0.000196</td>\n",
        "      <td>0.000101</td>\n",
        "      <td>0.000079</td>\n",
        "      <td>0.000458</td>\n",
        "      <td>0.000153</td>\n",
        "      <td>0.000188</td>\n",
        "      <td>0.000162</td>\n",
        "      <td>0.000076</td>\n",
        "      <td>0.000191</td>\n",
        "      <td>0.000002</td>\n",
        "      <td>0.000082</td>\n",
        "      <td>0.000037</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>2020-08-22</th>\n",
        "      <td>0.000095</td>\n",
        "      <td>0.000079</td>\n",
        "      <td>0.000002</td>\n",
        "      <td>0.000076</td>\n",
        "      <td>0.000157</td>\n",
        "      <td>0.00064</td>\n",
        "      <td>0.000196</td>\n",
        "      <td>0.000101</td>\n",
        "      <td>0.000079</td>\n",
        "      <td>0.000458</td>\n",
        "      <td>0.000153</td>\n",
        "      <td>0.000188</td>\n",
        "      <td>0.000162</td>\n",
        "      <td>0.000076</td>\n",
        "      <td>0.000191</td>\n",
        "      <td>0.000002</td>\n",
        "      <td>0.000082</td>\n",
        "      <td>0.000037</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>2020-08-23</th>\n",
        "      <td>0.000095</td>\n",
        "      <td>0.000079</td>\n",
        "      <td>0.000002</td>\n",
        "      <td>0.000076</td>\n",
        "      <td>0.000157</td>\n",
        "      <td>0.00064</td>\n",
        "      <td>0.000196</td>\n",
        "      <td>0.000101</td>\n",
        "      <td>0.000079</td>\n",
        "      <td>0.000458</td>\n",
        "      <td>0.000153</td>\n",
        "      <td>0.000188</td>\n",
        "      <td>0.000162</td>\n",
        "      <td>0.000076</td>\n",
        "      <td>0.000191</td>\n",
        "      <td>0.000002</td>\n",
        "      <td>0.000082</td>\n",
        "      <td>0.000037</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>2020-08-24</th>\n",
        "      <td>0.000095</td>\n",
        "      <td>0.000079</td>\n",
        "      <td>0.000002</td>\n",
        "      <td>0.000076</td>\n",
        "      <td>0.000157</td>\n",
        "      <td>0.00064</td>\n",
        "      <td>0.000196</td>\n",
        "      <td>0.000101</td>\n",
        "      <td>0.000079</td>\n",
        "      <td>0.000458</td>\n",
        "      <td>0.000153</td>\n",
        "      <td>0.000188</td>\n",
        "      <td>0.000162</td>\n",
        "      <td>0.000076</td>\n",
        "      <td>0.000191</td>\n",
        "      <td>0.000002</td>\n",
        "      <td>0.000082</td>\n",
        "      <td>0.000037</td>\n",
        "    </tr>\n",
        "  </tbody>\n",
        "</table>\n",
        "</div>"
       ],
       "output_type": "pyout",
       "prompt_number": 17,
       "text": [
        "Country      Bahrain  Bangladesh  Czech Republic    France    Guinea     Iran  \\\n",
        "Date                                                                            \n",
        "2020-08-20  0.000095    0.000079        0.000002  0.000076  0.000157  0.00064   \n",
        "2020-08-21  0.000095    0.000079        0.000002  0.000076  0.000157  0.00064   \n",
        "2020-08-22  0.000095    0.000079        0.000002  0.000076  0.000157  0.00064   \n",
        "2020-08-23  0.000095    0.000079        0.000002  0.000076  0.000157  0.00064   \n",
        "2020-08-24  0.000095    0.000079        0.000002  0.000076  0.000157  0.00064   \n",
        "\n",
        "Country        Italy  Korea, South    Kuwait    Mexico   Moldova      Peru  \\\n",
        "Date                                                                         \n",
        "2020-08-20  0.000196      0.000101  0.000079  0.000458  0.000153  0.000188   \n",
        "2020-08-21  0.000196      0.000101  0.000079  0.000458  0.000153  0.000188   \n",
        "2020-08-22  0.000196      0.000101  0.000079  0.000458  0.000153  0.000188   \n",
        "2020-08-23  0.000196      0.000101  0.000079  0.000458  0.000153  0.000188   \n",
        "2020-08-24  0.000196      0.000101  0.000079  0.000458  0.000153  0.000188   \n",
        "\n",
        "Country       Poland  Portugal   Romania    Russia   Senegal  \\\n",
        "Date                                                           \n",
        "2020-08-20  0.000162  0.000076  0.000191  0.000002  0.000082   \n",
        "2020-08-21  0.000162  0.000076  0.000191  0.000002  0.000082   \n",
        "2020-08-22  0.000162  0.000076  0.000191  0.000002  0.000082   \n",
        "2020-08-23  0.000162  0.000076  0.000191  0.000002  0.000082   \n",
        "2020-08-24  0.000162  0.000076  0.000191  0.000002  0.000082   \n",
        "\n",
        "Country     United Arab Emirates  \n",
        "Date                              \n",
        "2020-08-20              0.000037  \n",
        "2020-08-21              0.000037  \n",
        "2020-08-22              0.000037  \n",
        "2020-08-23              0.000037  \n",
        "2020-08-24              0.000037  "
       ]
      }
     ],
     "prompt_number": 17
    },
    {
     "cell_type": "heading",
     "level": 3,
     "metadata": {},
     "source": [
      "$\\theta$: Mortality rate of S$^\\ast$ cases $\\mathrm{[-]}$"
     ]
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "analyser.param_history(\"theta\", roll_window=None).tail()"
     ],
     "language": "python",
     "metadata": {},
     "outputs": [
      {
       "output_type": "display_data",
       "png": "\n",
       "text": [
        "<Figure size 648x432 with 1 Axes>"
       ]
      },
      {
       "html": [
        "<div>\n",
        "<style scoped>\n",
        "    .dataframe tbody tr th:only-of-type {\n",
        "        vertical-align: middle;\n",
        "    }\n",
        "\n",
        "    .dataframe tbody tr th {\n",
        "        vertical-align: top;\n",
        "    }\n",
        "\n",
        "    .dataframe thead th {\n",
        "        text-align: right;\n",
        "    }\n",
        "</style>\n",
        "<table border=\"1\" class=\"dataframe\">\n",
        "  <thead>\n",
        "    <tr style=\"text-align: right;\">\n",
        "      <th>Country</th>\n",
        "      <th>Bahrain</th>\n",
        "      <th>Bangladesh</th>\n",
        "      <th>Czech Republic</th>\n",
        "      <th>France</th>\n",
        "      <th>Guinea</th>\n",
        "      <th>Iran</th>\n",
        "      <th>Italy</th>\n",
        "      <th>Korea, South</th>\n",
        "      <th>Kuwait</th>\n",
        "      <th>Mexico</th>\n",
        "      <th>Moldova</th>\n",
        "      <th>Peru</th>\n",
        "      <th>Poland</th>\n",
        "      <th>Portugal</th>\n",
        "      <th>Romania</th>\n",
        "      <th>Russia</th>\n",
        "      <th>Senegal</th>\n",
        "      <th>United Arab Emirates</th>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>Date</th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "    </tr>\n",
        "  </thead>\n",
        "  <tbody>\n",
        "    <tr>\n",
        "      <th>2020-08-20</th>\n",
        "      <td>0.00054</td>\n",
        "      <td>0.000425</td>\n",
        "      <td>0.001929</td>\n",
        "      <td>0.000375</td>\n",
        "      <td>0.000752</td>\n",
        "      <td>0.040958</td>\n",
        "      <td>0.000558</td>\n",
        "      <td>0.001217</td>\n",
        "      <td>0.000555</td>\n",
        "      <td>0.082216</td>\n",
        "      <td>0.000808</td>\n",
        "      <td>0.015475</td>\n",
        "      <td>0.00174</td>\n",
        "      <td>0.000618</td>\n",
        "      <td>0.002076</td>\n",
        "      <td>0.020192</td>\n",
        "      <td>0.018737</td>\n",
        "      <td>0.000678</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>2020-08-21</th>\n",
        "      <td>0.00054</td>\n",
        "      <td>0.000425</td>\n",
        "      <td>0.001929</td>\n",
        "      <td>0.000375</td>\n",
        "      <td>0.000752</td>\n",
        "      <td>0.040958</td>\n",
        "      <td>0.000558</td>\n",
        "      <td>0.001217</td>\n",
        "      <td>0.000555</td>\n",
        "      <td>0.082216</td>\n",
        "      <td>0.000808</td>\n",
        "      <td>0.015475</td>\n",
        "      <td>0.00174</td>\n",
        "      <td>0.000618</td>\n",
        "      <td>0.002076</td>\n",
        "      <td>0.020192</td>\n",
        "      <td>0.018737</td>\n",
        "      <td>0.000678</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>2020-08-22</th>\n",
        "      <td>0.00054</td>\n",
        "      <td>0.000425</td>\n",
        "      <td>0.001929</td>\n",
        "      <td>0.000375</td>\n",
        "      <td>0.000752</td>\n",
        "      <td>0.040958</td>\n",
        "      <td>0.000558</td>\n",
        "      <td>0.001217</td>\n",
        "      <td>0.000555</td>\n",
        "      <td>0.082216</td>\n",
        "      <td>0.000808</td>\n",
        "      <td>0.015475</td>\n",
        "      <td>0.00174</td>\n",
        "      <td>0.000618</td>\n",
        "      <td>0.002076</td>\n",
        "      <td>0.020192</td>\n",
        "      <td>0.018737</td>\n",
        "      <td>0.000678</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>2020-08-23</th>\n",
        "      <td>0.00054</td>\n",
        "      <td>0.000425</td>\n",
        "      <td>0.001929</td>\n",
        "      <td>0.000375</td>\n",
        "      <td>0.000752</td>\n",
        "      <td>0.040958</td>\n",
        "      <td>0.000558</td>\n",
        "      <td>0.001217</td>\n",
        "      <td>0.000555</td>\n",
        "      <td>0.082216</td>\n",
        "      <td>0.000808</td>\n",
        "      <td>0.015475</td>\n",
        "      <td>0.00174</td>\n",
        "      <td>0.000618</td>\n",
        "      <td>0.002076</td>\n",
        "      <td>0.020192</td>\n",
        "      <td>0.018737</td>\n",
        "      <td>0.000678</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>2020-08-24</th>\n",
        "      <td>0.00054</td>\n",
        "      <td>0.000425</td>\n",
        "      <td>0.001929</td>\n",
        "      <td>0.000375</td>\n",
        "      <td>0.000752</td>\n",
        "      <td>0.040958</td>\n",
        "      <td>0.000558</td>\n",
        "      <td>0.001217</td>\n",
        "      <td>0.000555</td>\n",
        "      <td>0.082216</td>\n",
        "      <td>0.000808</td>\n",
        "      <td>0.015475</td>\n",
        "      <td>0.00174</td>\n",
        "      <td>0.000618</td>\n",
        "      <td>0.002076</td>\n",
        "      <td>0.020192</td>\n",
        "      <td>0.018737</td>\n",
        "      <td>0.000678</td>\n",
        "    </tr>\n",
        "  </tbody>\n",
        "</table>\n",
        "</div>"
       ],
       "output_type": "pyout",
       "prompt_number": 18,
       "text": [
        "Country     Bahrain  Bangladesh  Czech Republic    France    Guinea      Iran  \\\n",
        "Date                                                                            \n",
        "2020-08-20  0.00054    0.000425        0.001929  0.000375  0.000752  0.040958   \n",
        "2020-08-21  0.00054    0.000425        0.001929  0.000375  0.000752  0.040958   \n",
        "2020-08-22  0.00054    0.000425        0.001929  0.000375  0.000752  0.040958   \n",
        "2020-08-23  0.00054    0.000425        0.001929  0.000375  0.000752  0.040958   \n",
        "2020-08-24  0.00054    0.000425        0.001929  0.000375  0.000752  0.040958   \n",
        "\n",
        "Country        Italy  Korea, South    Kuwait    Mexico   Moldova      Peru  \\\n",
        "Date                                                                         \n",
        "2020-08-20  0.000558      0.001217  0.000555  0.082216  0.000808  0.015475   \n",
        "2020-08-21  0.000558      0.001217  0.000555  0.082216  0.000808  0.015475   \n",
        "2020-08-22  0.000558      0.001217  0.000555  0.082216  0.000808  0.015475   \n",
        "2020-08-23  0.000558      0.001217  0.000555  0.082216  0.000808  0.015475   \n",
        "2020-08-24  0.000558      0.001217  0.000555  0.082216  0.000808  0.015475   \n",
        "\n",
        "Country      Poland  Portugal   Romania    Russia   Senegal  \\\n",
        "Date                                                          \n",
        "2020-08-20  0.00174  0.000618  0.002076  0.020192  0.018737   \n",
        "2020-08-21  0.00174  0.000618  0.002076  0.020192  0.018737   \n",
        "2020-08-22  0.00174  0.000618  0.002076  0.020192  0.018737   \n",
        "2020-08-23  0.00174  0.000618  0.002076  0.020192  0.018737   \n",
        "2020-08-24  0.00174  0.000618  0.002076  0.020192  0.018737   \n",
        "\n",
        "Country     United Arab Emirates  \n",
        "Date                              \n",
        "2020-08-20              0.000678  \n",
        "2020-08-21              0.000678  \n",
        "2020-08-22              0.000678  \n",
        "2020-08-23              0.000678  \n",
        "2020-08-24              0.000678  "
       ]
      }
     ],
     "prompt_number": 18
    },
    {
     "cell_type": "markdown",
     "metadata": {},
     "source": [
      "## (Experimental): Relationship of OxCGRT index and parameter values\n",
      "Government responses will impact on parameter values of ODE models about 14 days later. Here, we will investigate on the relationship of [stringency index (from OxCGRT)](https://github.com/OxCGRT/covid-policy-tracker/blob/master/documentation/index_methodology.md) and reproduction number/model parameters.\n"
     ]
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "%matplotlib inline\n",
      "from matplotlib import pyplot as plt\n",
      "import seaborn as sns\n",
      "import pandas as pd"
     ],
     "language": "python",
     "metadata": {},
     "outputs": [],
     "prompt_number": 19
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "df = analyser.track()\n",
      "param_cols = [\"Rt\", *cs.SIRF.PARAMETERS]\n",
      "oxcgrt_cols = oxcgrt_data.OXCGRT_VARS[:]\n",
      "cols = param_cols + oxcgrt_cols\n",
      "delay = 14\n",
      "\n",
      "for col in param_cols:\n",
      "    df[col] = pd.to_numeric(df[col], errors=\"coerce\")\n",
      "    df[col] = df.groupby(\"Country\")[col].shift(0 - delay)\n",
      "\n",
      "df = df.dropna(how=\"any\")\n",
      "df = df.loc[:, [\"Date\", \"Country\", *cols]]\n",
      "track_df = df.copy()\n",
      "track_df.info()"
     ],
     "language": "python",
     "metadata": {},
     "outputs": [
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "<class 'pandas.core.frame.DataFrame'>\n",
        "Int64Index: 22843 entries, 0 to 23080\n",
        "Data columns (total 19 columns):\n",
        " #   Column                               Non-Null Count  Dtype         \n",
        "---  ------                               --------------  -----         \n",
        " 0   Date                                 22843 non-null  datetime64[ns]\n",
        " 1   Country                              22843 non-null  object        \n",
        " 2   Rt                                   22843 non-null  float64       \n",
        " 3   theta                                22843 non-null  float64       \n",
        " 4   kappa                                22843 non-null  float64       \n",
        " 5   rho                                  22843 non-null  float64       \n",
        " 6   sigma                                22843 non-null  float64       \n",
        " 7   School_closing                       22843 non-null  int64         \n",
        " 8   Workplace_closing                    22843 non-null  int64         \n",
        " 9   Cancel_events                        22843 non-null  int64         \n",
        " 10  Gatherings_restrictions              22843 non-null  int64         \n",
        " 11  Transport_closing                    22843 non-null  int64         \n",
        " 12  Stay_home_restrictions               22843 non-null  int64         \n",
        " 13  Internal_movement_restrictions       22843 non-null  int64         \n",
        " 14  International_movement_restrictions  22843 non-null  int64         \n",
        " 15  Information_campaigns                22843 non-null  int64         \n",
        " 16  Testing_policy                       22843 non-null  int64         \n",
        " 17  Contact_tracing                      22843 non-null  int64         \n",
        " 18  Stringency_index                     22843 non-null  float64       \n",
        "dtypes: datetime64[ns](1), float64(6), int64(11), object(1)\n",
        "memory usage: 3.5+ MB\n"
       ]
      }
     ],
     "prompt_number": 20
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "# Correlation\n",
      "df = track_df.copy()\n",
      "df.corr().style.background_gradient(axis=None)"
     ],
     "language": "python",
     "metadata": {},
     "outputs": [
      {
       "html": [
        "<style  type=\"text/css\" >\n",
        "#T_b22d571a_e631_11ea_8653_525400de11c7row0_col0,#T_b22d571a_e631_11ea_8653_525400de11c7row1_col1,#T_b22d571a_e631_11ea_8653_525400de11c7row2_col2,#T_b22d571a_e631_11ea_8653_525400de11c7row3_col3,#T_b22d571a_e631_11ea_8653_525400de11c7row4_col4,#T_b22d571a_e631_11ea_8653_525400de11c7row5_col5,#T_b22d571a_e631_11ea_8653_525400de11c7row6_col6,#T_b22d571a_e631_11ea_8653_525400de11c7row7_col7,#T_b22d571a_e631_11ea_8653_525400de11c7row8_col8,#T_b22d571a_e631_11ea_8653_525400de11c7row9_col9,#T_b22d571a_e631_11ea_8653_525400de11c7row10_col10,#T_b22d571a_e631_11ea_8653_525400de11c7row11_col11,#T_b22d571a_e631_11ea_8653_525400de11c7row12_col12,#T_b22d571a_e631_11ea_8653_525400de11c7row13_col13,#T_b22d571a_e631_11ea_8653_525400de11c7row14_col14,#T_b22d571a_e631_11ea_8653_525400de11c7row15_col15,#T_b22d571a_e631_11ea_8653_525400de11c7row16_col16{\n",
        "            background-color:  #023858;\n",
        "            color:  #f1f1f1;\n",
        "        }#T_b22d571a_e631_11ea_8653_525400de11c7row0_col1,#T_b22d571a_e631_11ea_8653_525400de11c7row1_col0,#T_b22d571a_e631_11ea_8653_525400de11c7row8_col15,#T_b22d571a_e631_11ea_8653_525400de11c7row10_col15,#T_b22d571a_e631_11ea_8653_525400de11c7row15_col8,#T_b22d571a_e631_11ea_8653_525400de11c7row15_col10{\n",
        "            background-color:  #c0c9e2;\n",
        "            color:  #000000;\n",
        "        }#T_b22d571a_e631_11ea_8653_525400de11c7row0_col2,#T_b22d571a_e631_11ea_8653_525400de11c7row2_col0,#T_b22d571a_e631_11ea_8653_525400de11c7row2_col10,#T_b22d571a_e631_11ea_8653_525400de11c7row10_col2{\n",
        "            background-color:  #a4bcda;\n",
        "            color:  #000000;\n",
        "        }#T_b22d571a_e631_11ea_8653_525400de11c7row0_col3,#T_b22d571a_e631_11ea_8653_525400de11c7row3_col0{\n",
        "            background-color:  #80aed2;\n",
        "            color:  #000000;\n",
        "        }#T_b22d571a_e631_11ea_8653_525400de11c7row0_col4,#T_b22d571a_e631_11ea_8653_525400de11c7row4_col0{\n",
        "            background-color:  #d6d6e9;\n",
        "            color:  #000000;\n",
        "        }#T_b22d571a_e631_11ea_8653_525400de11c7row0_col5,#T_b22d571a_e631_11ea_8653_525400de11c7row5_col0{\n",
        "            background-color:  #e2dfee;\n",
        "            color:  #000000;\n",
        "        }#T_b22d571a_e631_11ea_8653_525400de11c7row0_col6,#T_b22d571a_e631_11ea_8653_525400de11c7row3_col8,#T_b22d571a_e631_11ea_8653_525400de11c7row6_col0,#T_b22d571a_e631_11ea_8653_525400de11c7row8_col3{\n",
        "            background-color:  #bfc9e1;\n",
        "            color:  #000000;\n",
        "        }#T_b22d571a_e631_11ea_8653_525400de11c7row0_col7,#T_b22d571a_e631_11ea_8653_525400de11c7row3_col11,#T_b22d571a_e631_11ea_8653_525400de11c7row4_col6,#T_b22d571a_e631_11ea_8653_525400de11c7row6_col4,#T_b22d571a_e631_11ea_8653_525400de11c7row7_col0,#T_b22d571a_e631_11ea_8653_525400de11c7row9_col14,#T_b22d571a_e631_11ea_8653_525400de11c7row11_col3,#T_b22d571a_e631_11ea_8653_525400de11c7row14_col9{\n",
        "            background-color:  #a8bedc;\n",
        "            color:  #000000;\n",
        "        }#T_b22d571a_e631_11ea_8653_525400de11c7row0_col8,#T_b22d571a_e631_11ea_8653_525400de11c7row1_col11,#T_b22d571a_e631_11ea_8653_525400de11c7row8_col0,#T_b22d571a_e631_11ea_8653_525400de11c7row11_col1,#T_b22d571a_e631_11ea_8653_525400de11c7row13_col14,#T_b22d571a_e631_11ea_8653_525400de11c7row14_col13{\n",
        "            background-color:  #8bb2d4;\n",
        "            color:  #000000;\n",
        "        }#T_b22d571a_e631_11ea_8653_525400de11c7row0_col9,#T_b22d571a_e631_11ea_8653_525400de11c7row9_col0{\n",
        "            background-color:  #bdc8e1;\n",
        "            color:  #000000;\n",
        "        }#T_b22d571a_e631_11ea_8653_525400de11c7row0_col10,#T_b22d571a_e631_11ea_8653_525400de11c7row2_col8,#T_b22d571a_e631_11ea_8653_525400de11c7row8_col2,#T_b22d571a_e631_11ea_8653_525400de11c7row10_col0{\n",
        "            background-color:  #b8c6e0;\n",
        "            color:  #000000;\n",
        "        }#T_b22d571a_e631_11ea_8653_525400de11c7row0_col11,#T_b22d571a_e631_11ea_8653_525400de11c7row11_col0,#T_b22d571a_e631_11ea_8653_525400de11c7row11_col13,#T_b22d571a_e631_11ea_8653_525400de11c7row13_col11{\n",
        "            background-color:  #b1c2de;\n",
        "            color:  #000000;\n",
        "        }#T_b22d571a_e631_11ea_8653_525400de11c7row0_col12,#T_b22d571a_e631_11ea_8653_525400de11c7row12_col0{\n",
        "            background-color:  #d4d4e8;\n",
        "            color:  #000000;\n",
        "        }#T_b22d571a_e631_11ea_8653_525400de11c7row0_col13,#T_b22d571a_e631_11ea_8653_525400de11c7row13_col0{\n",
        "            background-color:  #a7bddb;\n",
        "            color:  #000000;\n",
        "        }#T_b22d571a_e631_11ea_8653_525400de11c7row0_col14,#T_b22d571a_e631_11ea_8653_525400de11c7row4_col10,#T_b22d571a_e631_11ea_8653_525400de11c7row10_col4,#T_b22d571a_e631_11ea_8653_525400de11c7row14_col0{\n",
        "            background-color:  #d0d1e6;\n",
        "            color:  #000000;\n",
        "        }#T_b22d571a_e631_11ea_8653_525400de11c7row0_col15,#T_b22d571a_e631_11ea_8653_525400de11c7row12_col15,#T_b22d571a_e631_11ea_8653_525400de11c7row15_col0,#T_b22d571a_e631_11ea_8653_525400de11c7row15_col12{\n",
        "            background-color:  #c1cae2;\n",
        "            color:  #000000;\n",
        "        }#T_b22d571a_e631_11ea_8653_525400de11c7row0_col16,#T_b22d571a_e631_11ea_8653_525400de11c7row16_col0{\n",
        "            background-color:  #bcc7e1;\n",
        "            color:  #000000;\n",
        "        }#T_b22d571a_e631_11ea_8653_525400de11c7row1_col2,#T_b22d571a_e631_11ea_8653_525400de11c7row2_col1{\n",
        "            background-color:  #1c7fb8;\n",
        "            color:  #000000;\n",
        "        }#T_b22d571a_e631_11ea_8653_525400de11c7row1_col3,#T_b22d571a_e631_11ea_8653_525400de11c7row3_col1{\n",
        "            background-color:  #7eadd1;\n",
        "            color:  #000000;\n",
        "        }#T_b22d571a_e631_11ea_8653_525400de11c7row1_col4,#T_b22d571a_e631_11ea_8653_525400de11c7row4_col1{\n",
        "            background-color:  #84b0d3;\n",
        "            color:  #000000;\n",
        "        }#T_b22d571a_e631_11ea_8653_525400de11c7row1_col5,#T_b22d571a_e631_11ea_8653_525400de11c7row5_col1{\n",
        "            background-color:  #63a2cb;\n",
        "            color:  #000000;\n",
        "        }#T_b22d571a_e631_11ea_8653_525400de11c7row1_col6,#T_b22d571a_e631_11ea_8653_525400de11c7row6_col1{\n",
        "            background-color:  #2d8abd;\n",
        "            color:  #000000;\n",
        "        }#T_b22d571a_e631_11ea_8653_525400de11c7row1_col7,#T_b22d571a_e631_11ea_8653_525400de11c7row3_col6,#T_b22d571a_e631_11ea_8653_525400de11c7row6_col3,#T_b22d571a_e631_11ea_8653_525400de11c7row7_col1,#T_b22d571a_e631_11ea_8653_525400de11c7row13_col15,#T_b22d571a_e631_11ea_8653_525400de11c7row15_col13{\n",
        "            background-color:  #86b0d3;\n",
        "            color:  #000000;\n",
        "        }#T_b22d571a_e631_11ea_8653_525400de11c7row1_col8,#T_b22d571a_e631_11ea_8653_525400de11c7row2_col12,#T_b22d571a_e631_11ea_8653_525400de11c7row8_col1,#T_b22d571a_e631_11ea_8653_525400de11c7row12_col2{\n",
        "            background-color:  #8fb4d6;\n",
        "            color:  #000000;\n",
        "        }#T_b22d571a_e631_11ea_8653_525400de11c7row1_col9,#T_b22d571a_e631_11ea_8653_525400de11c7row2_col7,#T_b22d571a_e631_11ea_8653_525400de11c7row7_col2,#T_b22d571a_e631_11ea_8653_525400de11c7row9_col1{\n",
        "            background-color:  #8eb3d5;\n",
        "            color:  #000000;\n",
        "        }#T_b22d571a_e631_11ea_8653_525400de11c7row1_col10,#T_b22d571a_e631_11ea_8653_525400de11c7row10_col1,#T_b22d571a_e631_11ea_8653_525400de11c7row10_col13,#T_b22d571a_e631_11ea_8653_525400de11c7row13_col10{\n",
        "            background-color:  #9ab8d8;\n",
        "            color:  #000000;\n",
        "        }#T_b22d571a_e631_11ea_8653_525400de11c7row1_col12,#T_b22d571a_e631_11ea_8653_525400de11c7row12_col1,#T_b22d571a_e631_11ea_8653_525400de11c7row13_col16,#T_b22d571a_e631_11ea_8653_525400de11c7row16_col13{\n",
        "            background-color:  #a9bfdc;\n",
        "            color:  #000000;\n",
        "        }#T_b22d571a_e631_11ea_8653_525400de11c7row1_col13,#T_b22d571a_e631_11ea_8653_525400de11c7row13_col1{\n",
        "            background-color:  #a5bddb;\n",
        "            color:  #000000;\n",
        "        }#T_b22d571a_e631_11ea_8653_525400de11c7row1_col14,#T_b22d571a_e631_11ea_8653_525400de11c7row14_col1{\n",
        "            background-color:  #f5eef6;\n",
        "            color:  #000000;\n",
        "        }#T_b22d571a_e631_11ea_8653_525400de11c7row1_col15,#T_b22d571a_e631_11ea_8653_525400de11c7row15_col1{\n",
        "            background-color:  #e1dfed;\n",
        "            color:  #000000;\n",
        "        }#T_b22d571a_e631_11ea_8653_525400de11c7row1_col16,#T_b22d571a_e631_11ea_8653_525400de11c7row7_col9,#T_b22d571a_e631_11ea_8653_525400de11c7row9_col7,#T_b22d571a_e631_11ea_8653_525400de11c7row16_col1{\n",
        "            background-color:  #4697c4;\n",
        "            color:  #000000;\n",
        "        }#T_b22d571a_e631_11ea_8653_525400de11c7row2_col3,#T_b22d571a_e631_11ea_8653_525400de11c7row3_col2,#T_b22d571a_e631_11ea_8653_525400de11c7row5_col6,#T_b22d571a_e631_11ea_8653_525400de11c7row6_col5,#T_b22d571a_e631_11ea_8653_525400de11c7row12_col16,#T_b22d571a_e631_11ea_8653_525400de11c7row16_col12{\n",
        "            background-color:  #1278b4;\n",
        "            color:  #f1f1f1;\n",
        "        }#T_b22d571a_e631_11ea_8653_525400de11c7row2_col4,#T_b22d571a_e631_11ea_8653_525400de11c7row4_col2{\n",
        "            background-color:  #62a2cb;\n",
        "            color:  #000000;\n",
        "        }#T_b22d571a_e631_11ea_8653_525400de11c7row2_col5,#T_b22d571a_e631_11ea_8653_525400de11c7row5_col2{\n",
        "            background-color:  #529bc7;\n",
        "            color:  #000000;\n",
        "        }#T_b22d571a_e631_11ea_8653_525400de11c7row2_col6,#T_b22d571a_e631_11ea_8653_525400de11c7row6_col2{\n",
        "            background-color:  #358fc0;\n",
        "            color:  #000000;\n",
        "        }#T_b22d571a_e631_11ea_8653_525400de11c7row2_col9,#T_b22d571a_e631_11ea_8653_525400de11c7row3_col9,#T_b22d571a_e631_11ea_8653_525400de11c7row5_col8,#T_b22d571a_e631_11ea_8653_525400de11c7row8_col5,#T_b22d571a_e631_11ea_8653_525400de11c7row9_col2,#T_b22d571a_e631_11ea_8653_525400de11c7row9_col3{\n",
        "            background-color:  #9cb9d9;\n",
        "            color:  #000000;\n",
        "        }#T_b22d571a_e631_11ea_8653_525400de11c7row2_col11,#T_b22d571a_e631_11ea_8653_525400de11c7row11_col2{\n",
        "            background-color:  #b0c2de;\n",
        "            color:  #000000;\n",
        "        }#T_b22d571a_e631_11ea_8653_525400de11c7row2_col13,#T_b22d571a_e631_11ea_8653_525400de11c7row7_col15,#T_b22d571a_e631_11ea_8653_525400de11c7row9_col13,#T_b22d571a_e631_11ea_8653_525400de11c7row13_col2,#T_b22d571a_e631_11ea_8653_525400de11c7row13_col9,#T_b22d571a_e631_11ea_8653_525400de11c7row15_col7{\n",
        "            background-color:  #bbc7e0;\n",
        "            color:  #000000;\n",
        "        }#T_b22d571a_e631_11ea_8653_525400de11c7row2_col14,#T_b22d571a_e631_11ea_8653_525400de11c7row14_col2{\n",
        "            background-color:  #fdf5fa;\n",
        "            color:  #000000;\n",
        "        }#T_b22d571a_e631_11ea_8653_525400de11c7row2_col15,#T_b22d571a_e631_11ea_8653_525400de11c7row15_col2{\n",
        "            background-color:  #fff7fb;\n",
        "            color:  #000000;\n",
        "        }#T_b22d571a_e631_11ea_8653_525400de11c7row2_col16,#T_b22d571a_e631_11ea_8653_525400de11c7row5_col7,#T_b22d571a_e631_11ea_8653_525400de11c7row7_col5,#T_b22d571a_e631_11ea_8653_525400de11c7row16_col2{\n",
        "            background-color:  #509ac6;\n",
        "            color:  #000000;\n",
        "        }#T_b22d571a_e631_11ea_8653_525400de11c7row3_col4,#T_b22d571a_e631_11ea_8653_525400de11c7row4_col3,#T_b22d571a_e631_11ea_8653_525400de11c7row6_col10,#T_b22d571a_e631_11ea_8653_525400de11c7row10_col6{\n",
        "            background-color:  #0771b1;\n",
        "            color:  #f1f1f1;\n",
        "        }#T_b22d571a_e631_11ea_8653_525400de11c7row3_col5,#T_b22d571a_e631_11ea_8653_525400de11c7row5_col3,#T_b22d571a_e631_11ea_8653_525400de11c7row5_col11,#T_b22d571a_e631_11ea_8653_525400de11c7row11_col5{\n",
        "            background-color:  #76aad0;\n",
        "            color:  #000000;\n",
        "        }#T_b22d571a_e631_11ea_8653_525400de11c7row3_col7,#T_b22d571a_e631_11ea_8653_525400de11c7row7_col3,#T_b22d571a_e631_11ea_8653_525400de11c7row14_col16,#T_b22d571a_e631_11ea_8653_525400de11c7row16_col14{\n",
        "            background-color:  #cdd0e5;\n",
        "            color:  #000000;\n",
        "        }#T_b22d571a_e631_11ea_8653_525400de11c7row3_col10,#T_b22d571a_e631_11ea_8653_525400de11c7row10_col3,#T_b22d571a_e631_11ea_8653_525400de11c7row12_col13,#T_b22d571a_e631_11ea_8653_525400de11c7row13_col12{\n",
        "            background-color:  #a1bbda;\n",
        "            color:  #000000;\n",
        "        }#T_b22d571a_e631_11ea_8653_525400de11c7row3_col12,#T_b22d571a_e631_11ea_8653_525400de11c7row12_col3{\n",
        "            background-color:  #79abd0;\n",
        "            color:  #000000;\n",
        "        }#T_b22d571a_e631_11ea_8653_525400de11c7row3_col13,#T_b22d571a_e631_11ea_8653_525400de11c7row13_col3{\n",
        "            background-color:  #c5cce3;\n",
        "            color:  #000000;\n",
        "        }#T_b22d571a_e631_11ea_8653_525400de11c7row3_col14,#T_b22d571a_e631_11ea_8653_525400de11c7row14_col3{\n",
        "            background-color:  #e4e1ef;\n",
        "            color:  #000000;\n",
        "        }#T_b22d571a_e631_11ea_8653_525400de11c7row3_col15,#T_b22d571a_e631_11ea_8653_525400de11c7row15_col3{\n",
        "            background-color:  #eee8f3;\n",
        "            color:  #000000;\n",
        "        }#T_b22d571a_e631_11ea_8653_525400de11c7row3_col16,#T_b22d571a_e631_11ea_8653_525400de11c7row16_col3{\n",
        "            background-color:  #7dacd1;\n",
        "            color:  #000000;\n",
        "        }#T_b22d571a_e631_11ea_8653_525400de11c7row4_col5,#T_b22d571a_e631_11ea_8653_525400de11c7row5_col4{\n",
        "            background-color:  #549cc7;\n",
        "            color:  #000000;\n",
        "        }#T_b22d571a_e631_11ea_8653_525400de11c7row4_col7,#T_b22d571a_e631_11ea_8653_525400de11c7row7_col4{\n",
        "            background-color:  #c6cce3;\n",
        "            color:  #000000;\n",
        "        }#T_b22d571a_e631_11ea_8653_525400de11c7row4_col8,#T_b22d571a_e631_11ea_8653_525400de11c7row8_col4{\n",
        "            background-color:  #f1ebf4;\n",
        "            color:  #000000;\n",
        "        }#T_b22d571a_e631_11ea_8653_525400de11c7row4_col9,#T_b22d571a_e631_11ea_8653_525400de11c7row9_col4{\n",
        "            background-color:  #d3d4e7;\n",
        "            color:  #000000;\n",
        "        }#T_b22d571a_e631_11ea_8653_525400de11c7row4_col11,#T_b22d571a_e631_11ea_8653_525400de11c7row11_col4{\n",
        "            background-color:  #e0dded;\n",
        "            color:  #000000;\n",
        "        }#T_b22d571a_e631_11ea_8653_525400de11c7row4_col12,#T_b22d571a_e631_11ea_8653_525400de11c7row12_col4{\n",
        "            background-color:  #88b1d4;\n",
        "            color:  #000000;\n",
        "        }#T_b22d571a_e631_11ea_8653_525400de11c7row4_col13,#T_b22d571a_e631_11ea_8653_525400de11c7row6_col14,#T_b22d571a_e631_11ea_8653_525400de11c7row13_col4,#T_b22d571a_e631_11ea_8653_525400de11c7row14_col6{\n",
        "            background-color:  #cccfe5;\n",
        "            color:  #000000;\n",
        "        }#T_b22d571a_e631_11ea_8653_525400de11c7row4_col14,#T_b22d571a_e631_11ea_8653_525400de11c7row14_col4{\n",
        "            background-color:  #d2d2e7;\n",
        "            color:  #000000;\n",
        "        }#T_b22d571a_e631_11ea_8653_525400de11c7row4_col15,#T_b22d571a_e631_11ea_8653_525400de11c7row15_col4{\n",
        "            background-color:  #c2cbe2;\n",
        "            color:  #000000;\n",
        "        }#T_b22d571a_e631_11ea_8653_525400de11c7row4_col16,#T_b22d571a_e631_11ea_8653_525400de11c7row16_col4{\n",
        "            background-color:  #b7c5df;\n",
        "            color:  #000000;\n",
        "        }#T_b22d571a_e631_11ea_8653_525400de11c7row5_col9,#T_b22d571a_e631_11ea_8653_525400de11c7row5_col10,#T_b22d571a_e631_11ea_8653_525400de11c7row9_col5,#T_b22d571a_e631_11ea_8653_525400de11c7row10_col5{\n",
        "            background-color:  #348ebf;\n",
        "            color:  #000000;\n",
        "        }#T_b22d571a_e631_11ea_8653_525400de11c7row5_col12,#T_b22d571a_e631_11ea_8653_525400de11c7row12_col5{\n",
        "            background-color:  #187cb6;\n",
        "            color:  #000000;\n",
        "        }#T_b22d571a_e631_11ea_8653_525400de11c7row5_col13,#T_b22d571a_e631_11ea_8653_525400de11c7row12_col14,#T_b22d571a_e631_11ea_8653_525400de11c7row13_col5,#T_b22d571a_e631_11ea_8653_525400de11c7row14_col12{\n",
        "            background-color:  #b4c4df;\n",
        "            color:  #000000;\n",
        "        }#T_b22d571a_e631_11ea_8653_525400de11c7row5_col14,#T_b22d571a_e631_11ea_8653_525400de11c7row14_col5{\n",
        "            background-color:  #c4cbe3;\n",
        "            color:  #000000;\n",
        "        }#T_b22d571a_e631_11ea_8653_525400de11c7row5_col15,#T_b22d571a_e631_11ea_8653_525400de11c7row15_col5{\n",
        "            background-color:  #dbdaeb;\n",
        "            color:  #000000;\n",
        "        }#T_b22d571a_e631_11ea_8653_525400de11c7row5_col16,#T_b22d571a_e631_11ea_8653_525400de11c7row8_col10,#T_b22d571a_e631_11ea_8653_525400de11c7row10_col8,#T_b22d571a_e631_11ea_8653_525400de11c7row16_col5{\n",
        "            background-color:  #0569a5;\n",
        "            color:  #f1f1f1;\n",
        "        }#T_b22d571a_e631_11ea_8653_525400de11c7row6_col7,#T_b22d571a_e631_11ea_8653_525400de11c7row7_col6{\n",
        "            background-color:  #2f8bbe;\n",
        "            color:  #000000;\n",
        "        }#T_b22d571a_e631_11ea_8653_525400de11c7row6_col8,#T_b22d571a_e631_11ea_8653_525400de11c7row7_col11,#T_b22d571a_e631_11ea_8653_525400de11c7row8_col6,#T_b22d571a_e631_11ea_8653_525400de11c7row11_col7{\n",
        "            background-color:  #3f93c2;\n",
        "            color:  #000000;\n",
        "        }#T_b22d571a_e631_11ea_8653_525400de11c7row6_col9,#T_b22d571a_e631_11ea_8653_525400de11c7row9_col6{\n",
        "            background-color:  #2182b9;\n",
        "            color:  #000000;\n",
        "        }#T_b22d571a_e631_11ea_8653_525400de11c7row6_col11,#T_b22d571a_e631_11ea_8653_525400de11c7row11_col6{\n",
        "            background-color:  #2685bb;\n",
        "            color:  #000000;\n",
        "        }#T_b22d571a_e631_11ea_8653_525400de11c7row6_col12,#T_b22d571a_e631_11ea_8653_525400de11c7row11_col12,#T_b22d571a_e631_11ea_8653_525400de11c7row12_col6,#T_b22d571a_e631_11ea_8653_525400de11c7row12_col11{\n",
        "            background-color:  #71a8ce;\n",
        "            color:  #000000;\n",
        "        }#T_b22d571a_e631_11ea_8653_525400de11c7row6_col13,#T_b22d571a_e631_11ea_8653_525400de11c7row7_col13,#T_b22d571a_e631_11ea_8653_525400de11c7row13_col6,#T_b22d571a_e631_11ea_8653_525400de11c7row13_col7{\n",
        "            background-color:  #adc1dd;\n",
        "            color:  #000000;\n",
        "        }#T_b22d571a_e631_11ea_8653_525400de11c7row6_col15,#T_b22d571a_e631_11ea_8653_525400de11c7row15_col6{\n",
        "            background-color:  #ede7f2;\n",
        "            color:  #000000;\n",
        "        }#T_b22d571a_e631_11ea_8653_525400de11c7row6_col16,#T_b22d571a_e631_11ea_8653_525400de11c7row16_col6{\n",
        "            background-color:  #045f95;\n",
        "            color:  #f1f1f1;\n",
        "        }#T_b22d571a_e631_11ea_8653_525400de11c7row7_col8,#T_b22d571a_e631_11ea_8653_525400de11c7row8_col7{\n",
        "            background-color:  #167bb6;\n",
        "            color:  #000000;\n",
        "        }#T_b22d571a_e631_11ea_8653_525400de11c7row7_col10,#T_b22d571a_e631_11ea_8653_525400de11c7row10_col7{\n",
        "            background-color:  #1379b5;\n",
        "            color:  #f1f1f1;\n",
        "        }#T_b22d571a_e631_11ea_8653_525400de11c7row7_col12,#T_b22d571a_e631_11ea_8653_525400de11c7row12_col7{\n",
        "            background-color:  #acc0dd;\n",
        "            color:  #000000;\n",
        "        }#T_b22d571a_e631_11ea_8653_525400de11c7row7_col14,#T_b22d571a_e631_11ea_8653_525400de11c7row14_col7{\n",
        "            background-color:  #94b6d7;\n",
        "            color:  #000000;\n",
        "        }#T_b22d571a_e631_11ea_8653_525400de11c7row7_col16,#T_b22d571a_e631_11ea_8653_525400de11c7row16_col7{\n",
        "            background-color:  #157ab5;\n",
        "            color:  #000000;\n",
        "        }#T_b22d571a_e631_11ea_8653_525400de11c7row8_col9,#T_b22d571a_e631_11ea_8653_525400de11c7row9_col8{\n",
        "            background-color:  #0a73b2;\n",
        "            color:  #f1f1f1;\n",
        "        }#T_b22d571a_e631_11ea_8653_525400de11c7row8_col11,#T_b22d571a_e631_11ea_8653_525400de11c7row9_col10,#T_b22d571a_e631_11ea_8653_525400de11c7row10_col9,#T_b22d571a_e631_11ea_8653_525400de11c7row11_col8{\n",
        "            background-color:  #056dac;\n",
        "            color:  #f1f1f1;\n",
        "        }#T_b22d571a_e631_11ea_8653_525400de11c7row8_col12,#T_b22d571a_e631_11ea_8653_525400de11c7row12_col8{\n",
        "            background-color:  #89b1d4;\n",
        "            color:  #000000;\n",
        "        }#T_b22d571a_e631_11ea_8653_525400de11c7row8_col13,#T_b22d571a_e631_11ea_8653_525400de11c7row13_col8{\n",
        "            background-color:  #99b8d8;\n",
        "            color:  #000000;\n",
        "        }#T_b22d571a_e631_11ea_8653_525400de11c7row8_col14,#T_b22d571a_e631_11ea_8653_525400de11c7row14_col8{\n",
        "            background-color:  #73a9cf;\n",
        "            color:  #000000;\n",
        "        }#T_b22d571a_e631_11ea_8653_525400de11c7row8_col16,#T_b22d571a_e631_11ea_8653_525400de11c7row16_col8{\n",
        "            background-color:  #056faf;\n",
        "            color:  #f1f1f1;\n",
        "        }#T_b22d571a_e631_11ea_8653_525400de11c7row9_col11,#T_b22d571a_e631_11ea_8653_525400de11c7row11_col9{\n",
        "            background-color:  #046096;\n",
        "            color:  #f1f1f1;\n",
        "        }#T_b22d571a_e631_11ea_8653_525400de11c7row9_col12,#T_b22d571a_e631_11ea_8653_525400de11c7row12_col9{\n",
        "            background-color:  #4496c3;\n",
        "            color:  #000000;\n",
        "        }#T_b22d571a_e631_11ea_8653_525400de11c7row9_col15,#T_b22d571a_e631_11ea_8653_525400de11c7row15_col9{\n",
        "            background-color:  #d9d8ea;\n",
        "            color:  #000000;\n",
        "        }#T_b22d571a_e631_11ea_8653_525400de11c7row9_col16,#T_b22d571a_e631_11ea_8653_525400de11c7row16_col9{\n",
        "            background-color:  #045a8d;\n",
        "            color:  #f1f1f1;\n",
        "        }#T_b22d571a_e631_11ea_8653_525400de11c7row10_col11,#T_b22d571a_e631_11ea_8653_525400de11c7row11_col10{\n",
        "            background-color:  #04639b;\n",
        "            color:  #f1f1f1;\n",
        "        }#T_b22d571a_e631_11ea_8653_525400de11c7row10_col12,#T_b22d571a_e631_11ea_8653_525400de11c7row12_col10{\n",
        "            background-color:  #5c9fc9;\n",
        "            color:  #000000;\n",
        "        }#T_b22d571a_e631_11ea_8653_525400de11c7row10_col14,#T_b22d571a_e631_11ea_8653_525400de11c7row14_col10{\n",
        "            background-color:  #589ec8;\n",
        "            color:  #000000;\n",
        "        }#T_b22d571a_e631_11ea_8653_525400de11c7row10_col16,#T_b22d571a_e631_11ea_8653_525400de11c7row16_col10{\n",
        "            background-color:  #046097;\n",
        "            color:  #f1f1f1;\n",
        "        }#T_b22d571a_e631_11ea_8653_525400de11c7row11_col14,#T_b22d571a_e631_11ea_8653_525400de11c7row14_col11{\n",
        "            background-color:  #75a9cf;\n",
        "            color:  #000000;\n",
        "        }#T_b22d571a_e631_11ea_8653_525400de11c7row11_col15,#T_b22d571a_e631_11ea_8653_525400de11c7row15_col11{\n",
        "            background-color:  #ced0e6;\n",
        "            color:  #000000;\n",
        "        }#T_b22d571a_e631_11ea_8653_525400de11c7row11_col16,#T_b22d571a_e631_11ea_8653_525400de11c7row16_col11{\n",
        "            background-color:  #0568a3;\n",
        "            color:  #f1f1f1;\n",
        "        }#T_b22d571a_e631_11ea_8653_525400de11c7row14_col15,#T_b22d571a_e631_11ea_8653_525400de11c7row15_col14{\n",
        "            background-color:  #0c74b2;\n",
        "            color:  #f1f1f1;\n",
        "        }#T_b22d571a_e631_11ea_8653_525400de11c7row15_col16,#T_b22d571a_e631_11ea_8653_525400de11c7row16_col15{\n",
        "            background-color:  #efe9f3;\n",
        "            color:  #000000;\n",
        "        }</style><table id=\"T_b22d571a_e631_11ea_8653_525400de11c7\" ><thead>    <tr>        <th class=\"blank level0\" ></th>        <th class=\"col_heading level0 col0\" >Rt</th>        <th class=\"col_heading level0 col1\" >theta</th>        <th class=\"col_heading level0 col2\" >kappa</th>        <th class=\"col_heading level0 col3\" >rho</th>        <th class=\"col_heading level0 col4\" >sigma</th>        <th class=\"col_heading level0 col5\" >School_closing</th>        <th class=\"col_heading level0 col6\" >Workplace_closing</th>        <th class=\"col_heading level0 col7\" >Cancel_events</th>        <th class=\"col_heading level0 col8\" >Gatherings_restrictions</th>        <th class=\"col_heading level0 col9\" >Transport_closing</th>        <th class=\"col_heading level0 col10\" >Stay_home_restrictions</th>        <th class=\"col_heading level0 col11\" >Internal_movement_restrictions</th>        <th class=\"col_heading level0 col12\" >International_movement_restrictions</th>        <th class=\"col_heading level0 col13\" >Information_campaigns</th>        <th class=\"col_heading level0 col14\" >Testing_policy</th>        <th class=\"col_heading level0 col15\" >Contact_tracing</th>        <th class=\"col_heading level0 col16\" >Stringency_index</th>    </tr></thead><tbody>\n",
        "                <tr>\n",
        "                        <th id=\"T_b22d571a_e631_11ea_8653_525400de11c7level0_row0\" class=\"row_heading level0 row0\" >Rt</th>\n",
        "                        <td id=\"T_b22d571a_e631_11ea_8653_525400de11c7row0_col0\" class=\"data row0 col0\" >1.000000</td>\n",
        "                        <td id=\"T_b22d571a_e631_11ea_8653_525400de11c7row0_col1\" class=\"data row0 col1\" >-0.106296</td>\n",
        "                        <td id=\"T_b22d571a_e631_11ea_8653_525400de11c7row0_col2\" class=\"data row0 col2\" >0.026312</td>\n",
        "                        <td id=\"T_b22d571a_e631_11ea_8653_525400de11c7row0_col3\" class=\"data row0 col3\" >0.164316</td>\n",
        "                        <td id=\"T_b22d571a_e631_11ea_8653_525400de11c7row0_col4\" class=\"data row0 col4\" >-0.220957</td>\n",
        "                        <td id=\"T_b22d571a_e631_11ea_8653_525400de11c7row0_col5\" class=\"data row0 col5\" >-0.310694</td>\n",
        "                        <td id=\"T_b22d571a_e631_11ea_8653_525400de11c7row0_col6\" class=\"data row0 col6\" >-0.100085</td>\n",
        "                        <td id=\"T_b22d571a_e631_11ea_8653_525400de11c7row0_col7\" class=\"data row0 col7\" >0.006137</td>\n",
        "                        <td id=\"T_b22d571a_e631_11ea_8653_525400de11c7row0_col8\" class=\"data row0 col8\" >0.123920</td>\n",
        "                        <td id=\"T_b22d571a_e631_11ea_8653_525400de11c7row0_col9\" class=\"data row0 col9\" >-0.094739</td>\n",
        "                        <td id=\"T_b22d571a_e631_11ea_8653_525400de11c7row0_col10\" class=\"data row0 col10\" >-0.065754</td>\n",
        "                        <td id=\"T_b22d571a_e631_11ea_8653_525400de11c7row0_col11\" class=\"data row0 col11\" >-0.039972</td>\n",
        "                        <td id=\"T_b22d571a_e631_11ea_8653_525400de11c7row0_col12\" class=\"data row0 col12\" >-0.212203</td>\n",
        "                        <td id=\"T_b22d571a_e631_11ea_8653_525400de11c7row0_col13\" class=\"data row0 col13\" >0.011838</td>\n",
        "                        <td id=\"T_b22d571a_e631_11ea_8653_525400de11c7row0_col14\" class=\"data row0 col14\" >-0.176433</td>\n",
        "                        <td id=\"T_b22d571a_e631_11ea_8653_525400de11c7row0_col15\" class=\"data row0 col15\" >-0.113817</td>\n",
        "                        <td id=\"T_b22d571a_e631_11ea_8653_525400de11c7row0_col16\" class=\"data row0 col16\" >-0.085108</td>\n",
        "            </tr>\n",
        "            <tr>\n",
        "                        <th id=\"T_b22d571a_e631_11ea_8653_525400de11c7level0_row1\" class=\"row_heading level0 row1\" >theta</th>\n",
        "                        <td id=\"T_b22d571a_e631_11ea_8653_525400de11c7row1_col0\" class=\"data row1 col0\" >-0.106296</td>\n",
        "                        <td id=\"T_b22d571a_e631_11ea_8653_525400de11c7row1_col1\" class=\"data row1 col1\" >1.000000</td>\n",
        "                        <td id=\"T_b22d571a_e631_11ea_8653_525400de11c7row1_col2\" class=\"data row1 col2\" >0.508063</td>\n",
        "                        <td id=\"T_b22d571a_e631_11ea_8653_525400de11c7row1_col3\" class=\"data row1 col3\" >0.173576</td>\n",
        "                        <td id=\"T_b22d571a_e631_11ea_8653_525400de11c7row1_col4\" class=\"data row1 col4\" >0.149272</td>\n",
        "                        <td id=\"T_b22d571a_e631_11ea_8653_525400de11c7row1_col5\" class=\"data row1 col5\" >0.262772</td>\n",
        "                        <td id=\"T_b22d571a_e631_11ea_8653_525400de11c7row1_col6\" class=\"data row1 col6\" >0.445689</td>\n",
        "                        <td id=\"T_b22d571a_e631_11ea_8653_525400de11c7row1_col7\" class=\"data row1 col7\" >0.140376</td>\n",
        "                        <td id=\"T_b22d571a_e631_11ea_8653_525400de11c7row1_col8\" class=\"data row1 col8\" >0.105861</td>\n",
        "                        <td id=\"T_b22d571a_e631_11ea_8653_525400de11c7row1_col9\" class=\"data row1 col9\" >0.110168</td>\n",
        "                        <td id=\"T_b22d571a_e631_11ea_8653_525400de11c7row1_col10\" class=\"data row1 col10\" >0.063263</td>\n",
        "                        <td id=\"T_b22d571a_e631_11ea_8653_525400de11c7row1_col11\" class=\"data row1 col11\" >0.122013</td>\n",
        "                        <td id=\"T_b22d571a_e631_11ea_8653_525400de11c7row1_col12\" class=\"data row1 col12\" >0.001288</td>\n",
        "                        <td id=\"T_b22d571a_e631_11ea_8653_525400de11c7row1_col13\" class=\"data row1 col13\" >0.016713</td>\n",
        "                        <td id=\"T_b22d571a_e631_11ea_8653_525400de11c7row1_col14\" class=\"data row1 col14\" >-0.468716</td>\n",
        "                        <td id=\"T_b22d571a_e631_11ea_8653_525400de11c7row1_col15\" class=\"data row1 col15\" >-0.302666</td>\n",
        "                        <td id=\"T_b22d571a_e631_11ea_8653_525400de11c7row1_col16\" class=\"data row1 col16\" >0.358596</td>\n",
        "            </tr>\n",
        "            <tr>\n",
        "                        <th id=\"T_b22d571a_e631_11ea_8653_525400de11c7level0_row2\" class=\"row_heading level0 row2\" >kappa</th>\n",
        "                        <td id=\"T_b22d571a_e631_11ea_8653_525400de11c7row2_col0\" class=\"data row2 col0\" >0.026312</td>\n",
        "                        <td id=\"T_b22d571a_e631_11ea_8653_525400de11c7row2_col1\" class=\"data row2 col1\" >0.508063</td>\n",
        "                        <td id=\"T_b22d571a_e631_11ea_8653_525400de11c7row2_col2\" class=\"data row2 col2\" >1.000000</td>\n",
        "                        <td id=\"T_b22d571a_e631_11ea_8653_525400de11c7row2_col3\" class=\"data row2 col3\" >0.551950</td>\n",
        "                        <td id=\"T_b22d571a_e631_11ea_8653_525400de11c7row2_col4\" class=\"data row2 col4\" >0.270612</td>\n",
        "                        <td id=\"T_b22d571a_e631_11ea_8653_525400de11c7row2_col5\" class=\"data row2 col5\" >0.318597</td>\n",
        "                        <td id=\"T_b22d571a_e631_11ea_8653_525400de11c7row2_col6\" class=\"data row2 col6\" >0.414938</td>\n",
        "                        <td id=\"T_b22d571a_e631_11ea_8653_525400de11c7row2_col7\" class=\"data row2 col7\" >0.110072</td>\n",
        "                        <td id=\"T_b22d571a_e631_11ea_8653_525400de11c7row2_col8\" class=\"data row2 col8\" >-0.066258</td>\n",
        "                        <td id=\"T_b22d571a_e631_11ea_8653_525400de11c7row2_col9\" class=\"data row2 col9\" >0.053024</td>\n",
        "                        <td id=\"T_b22d571a_e631_11ea_8653_525400de11c7row2_col10\" class=\"data row2 col10\" >0.027046</td>\n",
        "                        <td id=\"T_b22d571a_e631_11ea_8653_525400de11c7row2_col11\" class=\"data row2 col11\" >-0.028557</td>\n",
        "                        <td id=\"T_b22d571a_e631_11ea_8653_525400de11c7row2_col12\" class=\"data row2 col12\" >0.102423</td>\n",
        "                        <td id=\"T_b22d571a_e631_11ea_8653_525400de11c7row2_col13\" class=\"data row2 col13\" >-0.078197</td>\n",
        "                        <td id=\"T_b22d571a_e631_11ea_8653_525400de11c7row2_col14\" class=\"data row2 col14\" >-0.546777</td>\n",
        "                        <td id=\"T_b22d571a_e631_11ea_8653_525400de11c7row2_col15\" class=\"data row2 col15\" >-0.575930</td>\n",
        "                        <td id=\"T_b22d571a_e631_11ea_8653_525400de11c7row2_col16\" class=\"data row2 col16\" >0.323145</td>\n",
        "            </tr>\n",
        "            <tr>\n",
        "                        <th id=\"T_b22d571a_e631_11ea_8653_525400de11c7level0_row3\" class=\"row_heading level0 row3\" >rho</th>\n",
        "                        <td id=\"T_b22d571a_e631_11ea_8653_525400de11c7row3_col0\" class=\"data row3 col0\" >0.164316</td>\n",
        "                        <td id=\"T_b22d571a_e631_11ea_8653_525400de11c7row3_col1\" class=\"data row3 col1\" >0.173576</td>\n",
        "                        <td id=\"T_b22d571a_e631_11ea_8653_525400de11c7row3_col2\" class=\"data row3 col2\" >0.551950</td>\n",
        "                        <td id=\"T_b22d571a_e631_11ea_8653_525400de11c7row3_col3\" class=\"data row3 col3\" >1.000000</td>\n",
        "                        <td id=\"T_b22d571a_e631_11ea_8653_525400de11c7row3_col4\" class=\"data row3 col4\" >0.596960</td>\n",
        "                        <td id=\"T_b22d571a_e631_11ea_8653_525400de11c7row3_col5\" class=\"data row3 col5\" >0.200971</td>\n",
        "                        <td id=\"T_b22d571a_e631_11ea_8653_525400de11c7row3_col6\" class=\"data row3 col6\" >0.140768</td>\n",
        "                        <td id=\"T_b22d571a_e631_11ea_8653_525400de11c7row3_col7\" class=\"data row3 col7\" >-0.164421</td>\n",
        "                        <td id=\"T_b22d571a_e631_11ea_8653_525400de11c7row3_col8\" class=\"data row3 col8\" >-0.099968</td>\n",
        "                        <td id=\"T_b22d571a_e631_11ea_8653_525400de11c7row3_col9\" class=\"data row3 col9\" >0.055586</td>\n",
        "                        <td id=\"T_b22d571a_e631_11ea_8653_525400de11c7row3_col10\" class=\"data row3 col10\" >0.035246</td>\n",
        "                        <td id=\"T_b22d571a_e631_11ea_8653_525400de11c7row3_col11\" class=\"data row3 col11\" >0.005694</td>\n",
        "                        <td id=\"T_b22d571a_e631_11ea_8653_525400de11c7row3_col12\" class=\"data row3 col12\" >0.188685</td>\n",
        "                        <td id=\"T_b22d571a_e631_11ea_8653_525400de11c7row3_col13\" class=\"data row3 col13\" >-0.129362</td>\n",
        "                        <td id=\"T_b22d571a_e631_11ea_8653_525400de11c7row3_col14\" class=\"data row3 col14\" >-0.323379</td>\n",
        "                        <td id=\"T_b22d571a_e631_11ea_8653_525400de11c7row3_col15\" class=\"data row3 col15\" >-0.391359</td>\n",
        "                        <td id=\"T_b22d571a_e631_11ea_8653_525400de11c7row3_col16\" class=\"data row3 col16\" >0.177014</td>\n",
        "            </tr>\n",
        "            <tr>\n",
        "                        <th id=\"T_b22d571a_e631_11ea_8653_525400de11c7level0_row4\" class=\"row_heading level0 row4\" >sigma</th>\n",
        "                        <td id=\"T_b22d571a_e631_11ea_8653_525400de11c7row4_col0\" class=\"data row4 col0\" >-0.220957</td>\n",
        "                        <td id=\"T_b22d571a_e631_11ea_8653_525400de11c7row4_col1\" class=\"data row4 col1\" >0.149272</td>\n",
        "                        <td id=\"T_b22d571a_e631_11ea_8653_525400de11c7row4_col2\" class=\"data row4 col2\" >0.270612</td>\n",
        "                        <td id=\"T_b22d571a_e631_11ea_8653_525400de11c7row4_col3\" class=\"data row4 col3\" >0.596960</td>\n",
        "                        <td id=\"T_b22d571a_e631_11ea_8653_525400de11c7row4_col4\" class=\"data row4 col4\" >1.000000</td>\n",
        "                        <td id=\"T_b22d571a_e631_11ea_8653_525400de11c7row4_col5\" class=\"data row4 col5\" >0.311801</td>\n",
        "                        <td id=\"T_b22d571a_e631_11ea_8653_525400de11c7row4_col6\" class=\"data row4 col6\" >0.007654</td>\n",
        "                        <td id=\"T_b22d571a_e631_11ea_8653_525400de11c7row4_col7\" class=\"data row4 col7\" >-0.132969</td>\n",
        "                        <td id=\"T_b22d571a_e631_11ea_8653_525400de11c7row4_col8\" class=\"data row4 col8\" >-0.425279</td>\n",
        "                        <td id=\"T_b22d571a_e631_11ea_8653_525400de11c7row4_col9\" class=\"data row4 col9\" >-0.206419</td>\n",
        "                        <td id=\"T_b22d571a_e631_11ea_8653_525400de11c7row4_col10\" class=\"data row4 col10\" >-0.181225</td>\n",
        "                        <td id=\"T_b22d571a_e631_11ea_8653_525400de11c7row4_col11\" class=\"data row4 col11\" >-0.291974</td>\n",
        "                        <td id=\"T_b22d571a_e631_11ea_8653_525400de11c7row4_col12\" class=\"data row4 col12\" >0.133135</td>\n",
        "                        <td id=\"T_b22d571a_e631_11ea_8653_525400de11c7row4_col13\" class=\"data row4 col13\" >-0.158656</td>\n",
        "                        <td id=\"T_b22d571a_e631_11ea_8653_525400de11c7row4_col14\" class=\"data row4 col14\" >-0.188702</td>\n",
        "                        <td id=\"T_b22d571a_e631_11ea_8653_525400de11c7row4_col15\" class=\"data row4 col15\" >-0.118594</td>\n",
        "                        <td id=\"T_b22d571a_e631_11ea_8653_525400de11c7row4_col16\" class=\"data row4 col16\" >-0.061040</td>\n",
        "            </tr>\n",
        "            <tr>\n",
        "                        <th id=\"T_b22d571a_e631_11ea_8653_525400de11c7level0_row5\" class=\"row_heading level0 row5\" >School_closing</th>\n",
        "                        <td id=\"T_b22d571a_e631_11ea_8653_525400de11c7row5_col0\" class=\"data row5 col0\" >-0.310694</td>\n",
        "                        <td id=\"T_b22d571a_e631_11ea_8653_525400de11c7row5_col1\" class=\"data row5 col1\" >0.262772</td>\n",
        "                        <td id=\"T_b22d571a_e631_11ea_8653_525400de11c7row5_col2\" class=\"data row5 col2\" >0.318597</td>\n",
        "                        <td id=\"T_b22d571a_e631_11ea_8653_525400de11c7row5_col3\" class=\"data row5 col3\" >0.200971</td>\n",
        "                        <td id=\"T_b22d571a_e631_11ea_8653_525400de11c7row5_col4\" class=\"data row5 col4\" >0.311801</td>\n",
        "                        <td id=\"T_b22d571a_e631_11ea_8653_525400de11c7row5_col5\" class=\"data row5 col5\" >1.000000</td>\n",
        "                        <td id=\"T_b22d571a_e631_11ea_8653_525400de11c7row5_col6\" class=\"data row5 col6\" >0.553546</td>\n",
        "                        <td id=\"T_b22d571a_e631_11ea_8653_525400de11c7row5_col7\" class=\"data row5 col7\" >0.325979</td>\n",
        "                        <td id=\"T_b22d571a_e631_11ea_8653_525400de11c7row5_col8\" class=\"data row5 col8\" >0.056600</td>\n",
        "                        <td id=\"T_b22d571a_e631_11ea_8653_525400de11c7row5_col9\" class=\"data row5 col9\" >0.417242</td>\n",
        "                        <td id=\"T_b22d571a_e631_11ea_8653_525400de11c7row5_col10\" class=\"data row5 col10\" >0.417889</td>\n",
        "                        <td id=\"T_b22d571a_e631_11ea_8653_525400de11c7row5_col11\" class=\"data row5 col11\" >0.200801</td>\n",
        "                        <td id=\"T_b22d571a_e631_11ea_8653_525400de11c7row5_col12\" class=\"data row5 col12\" >0.529272</td>\n",
        "                        <td id=\"T_b22d571a_e631_11ea_8653_525400de11c7row5_col13\" class=\"data row5 col13\" >-0.049544</td>\n",
        "                        <td id=\"T_b22d571a_e631_11ea_8653_525400de11c7row5_col14\" class=\"data row5 col14\" >-0.124293</td>\n",
        "                        <td id=\"T_b22d571a_e631_11ea_8653_525400de11c7row5_col15\" class=\"data row5 col15\" >-0.261483</td>\n",
        "                        <td id=\"T_b22d571a_e631_11ea_8653_525400de11c7row5_col16\" class=\"data row5 col16\" >0.664888</td>\n",
        "            </tr>\n",
        "            <tr>\n",
        "                        <th id=\"T_b22d571a_e631_11ea_8653_525400de11c7level0_row6\" class=\"row_heading level0 row6\" >Workplace_closing</th>\n",
        "                        <td id=\"T_b22d571a_e631_11ea_8653_525400de11c7row6_col0\" class=\"data row6 col0\" >-0.100085</td>\n",
        "                        <td id=\"T_b22d571a_e631_11ea_8653_525400de11c7row6_col1\" class=\"data row6 col1\" >0.445689</td>\n",
        "                        <td id=\"T_b22d571a_e631_11ea_8653_525400de11c7row6_col2\" class=\"data row6 col2\" >0.414938</td>\n",
        "                        <td id=\"T_b22d571a_e631_11ea_8653_525400de11c7row6_col3\" class=\"data row6 col3\" >0.140768</td>\n",
        "                        <td id=\"T_b22d571a_e631_11ea_8653_525400de11c7row6_col4\" class=\"data row6 col4\" >0.007654</td>\n",
        "                        <td id=\"T_b22d571a_e631_11ea_8653_525400de11c7row6_col5\" class=\"data row6 col5\" >0.553546</td>\n",
        "                        <td id=\"T_b22d571a_e631_11ea_8653_525400de11c7row6_col6\" class=\"data row6 col6\" >1.000000</td>\n",
        "                        <td id=\"T_b22d571a_e631_11ea_8653_525400de11c7row6_col7\" class=\"data row6 col7\" >0.434428</td>\n",
        "                        <td id=\"T_b22d571a_e631_11ea_8653_525400de11c7row6_col8\" class=\"data row6 col8\" >0.383003</td>\n",
        "                        <td id=\"T_b22d571a_e631_11ea_8653_525400de11c7row6_col9\" class=\"data row6 col9\" >0.490404</td>\n",
        "                        <td id=\"T_b22d571a_e631_11ea_8653_525400de11c7row6_col10\" class=\"data row6 col10\" >0.598424</td>\n",
        "                        <td id=\"T_b22d571a_e631_11ea_8653_525400de11c7row6_col11\" class=\"data row6 col11\" >0.473532</td>\n",
        "                        <td id=\"T_b22d571a_e631_11ea_8653_525400de11c7row6_col12\" class=\"data row6 col12\" >0.218431</td>\n",
        "                        <td id=\"T_b22d571a_e631_11ea_8653_525400de11c7row6_col13\" class=\"data row6 col13\" >-0.017340</td>\n",
        "                        <td id=\"T_b22d571a_e631_11ea_8653_525400de11c7row6_col14\" class=\"data row6 col14\" >-0.159505</td>\n",
        "                        <td id=\"T_b22d571a_e631_11ea_8653_525400de11c7row6_col15\" class=\"data row6 col15\" >-0.382791</td>\n",
        "                        <td id=\"T_b22d571a_e631_11ea_8653_525400de11c7row6_col16\" class=\"data row6 col16\" >0.758110</td>\n",
        "            </tr>\n",
        "            <tr>\n",
        "                        <th id=\"T_b22d571a_e631_11ea_8653_525400de11c7level0_row7\" class=\"row_heading level0 row7\" >Cancel_events</th>\n",
        "                        <td id=\"T_b22d571a_e631_11ea_8653_525400de11c7row7_col0\" class=\"data row7 col0\" >0.006137</td>\n",
        "                        <td id=\"T_b22d571a_e631_11ea_8653_525400de11c7row7_col1\" class=\"data row7 col1\" >0.140376</td>\n",
        "                        <td id=\"T_b22d571a_e631_11ea_8653_525400de11c7row7_col2\" class=\"data row7 col2\" >0.110072</td>\n",
        "                        <td id=\"T_b22d571a_e631_11ea_8653_525400de11c7row7_col3\" class=\"data row7 col3\" >-0.164421</td>\n",
        "                        <td id=\"T_b22d571a_e631_11ea_8653_525400de11c7row7_col4\" class=\"data row7 col4\" >-0.132969</td>\n",
        "                        <td id=\"T_b22d571a_e631_11ea_8653_525400de11c7row7_col5\" class=\"data row7 col5\" >0.325979</td>\n",
        "                        <td id=\"T_b22d571a_e631_11ea_8653_525400de11c7row7_col6\" class=\"data row7 col6\" >0.434428</td>\n",
        "                        <td id=\"T_b22d571a_e631_11ea_8653_525400de11c7row7_col7\" class=\"data row7 col7\" >1.000000</td>\n",
        "                        <td id=\"T_b22d571a_e631_11ea_8653_525400de11c7row7_col8\" class=\"data row7 col8\" >0.535665</td>\n",
        "                        <td id=\"T_b22d571a_e631_11ea_8653_525400de11c7row7_col9\" class=\"data row7 col9\" >0.354021</td>\n",
        "                        <td id=\"T_b22d571a_e631_11ea_8653_525400de11c7row7_col10\" class=\"data row7 col10\" >0.548753</td>\n",
        "                        <td id=\"T_b22d571a_e631_11ea_8653_525400de11c7row7_col11\" class=\"data row7 col11\" >0.383998</td>\n",
        "                        <td id=\"T_b22d571a_e631_11ea_8653_525400de11c7row7_col12\" class=\"data row7 col12\" >-0.011670</td>\n",
        "                        <td id=\"T_b22d571a_e631_11ea_8653_525400de11c7row7_col13\" class=\"data row7 col13\" >-0.019432</td>\n",
        "                        <td id=\"T_b22d571a_e631_11ea_8653_525400de11c7row7_col14\" class=\"data row7 col14\" >0.088127</td>\n",
        "                        <td id=\"T_b22d571a_e631_11ea_8653_525400de11c7row7_col15\" class=\"data row7 col15\" >-0.083325</td>\n",
        "                        <td id=\"T_b22d571a_e631_11ea_8653_525400de11c7row7_col16\" class=\"data row7 col16\" >0.539659</td>\n",
        "            </tr>\n",
        "            <tr>\n",
        "                        <th id=\"T_b22d571a_e631_11ea_8653_525400de11c7level0_row8\" class=\"row_heading level0 row8\" >Gatherings_restrictions</th>\n",
        "                        <td id=\"T_b22d571a_e631_11ea_8653_525400de11c7row8_col0\" class=\"data row8 col0\" >0.123920</td>\n",
        "                        <td id=\"T_b22d571a_e631_11ea_8653_525400de11c7row8_col1\" class=\"data row8 col1\" >0.105861</td>\n",
        "                        <td id=\"T_b22d571a_e631_11ea_8653_525400de11c7row8_col2\" class=\"data row8 col2\" >-0.066258</td>\n",
        "                        <td id=\"T_b22d571a_e631_11ea_8653_525400de11c7row8_col3\" class=\"data row8 col3\" >-0.099968</td>\n",
        "                        <td id=\"T_b22d571a_e631_11ea_8653_525400de11c7row8_col4\" class=\"data row8 col4\" >-0.425279</td>\n",
        "                        <td id=\"T_b22d571a_e631_11ea_8653_525400de11c7row8_col5\" class=\"data row8 col5\" >0.056600</td>\n",
        "                        <td id=\"T_b22d571a_e631_11ea_8653_525400de11c7row8_col6\" class=\"data row8 col6\" >0.383003</td>\n",
        "                        <td id=\"T_b22d571a_e631_11ea_8653_525400de11c7row8_col7\" class=\"data row8 col7\" >0.535665</td>\n",
        "                        <td id=\"T_b22d571a_e631_11ea_8653_525400de11c7row8_col8\" class=\"data row8 col8\" >1.000000</td>\n",
        "                        <td id=\"T_b22d571a_e631_11ea_8653_525400de11c7row8_col9\" class=\"data row8 col9\" >0.585511</td>\n",
        "                        <td id=\"T_b22d571a_e631_11ea_8653_525400de11c7row8_col10\" class=\"data row8 col10\" >0.662077</td>\n",
        "                        <td id=\"T_b22d571a_e631_11ea_8653_525400de11c7row8_col11\" class=\"data row8 col11\" >0.624882</td>\n",
        "                        <td id=\"T_b22d571a_e631_11ea_8653_525400de11c7row8_col12\" class=\"data row8 col12\" >0.127618</td>\n",
        "                        <td id=\"T_b22d571a_e631_11ea_8653_525400de11c7row8_col13\" class=\"data row8 col13\" >0.068376</td>\n",
        "                        <td id=\"T_b22d571a_e631_11ea_8653_525400de11c7row8_col14\" class=\"data row8 col14\" >0.214060</td>\n",
        "                        <td id=\"T_b22d571a_e631_11ea_8653_525400de11c7row8_col15\" class=\"data row8 col15\" >-0.105072</td>\n",
        "                        <td id=\"T_b22d571a_e631_11ea_8653_525400de11c7row8_col16\" class=\"data row8 col16\" >0.607560</td>\n",
        "            </tr>\n",
        "            <tr>\n",
        "                        <th id=\"T_b22d571a_e631_11ea_8653_525400de11c7level0_row9\" class=\"row_heading level0 row9\" >Transport_closing</th>\n",
        "                        <td id=\"T_b22d571a_e631_11ea_8653_525400de11c7row9_col0\" class=\"data row9 col0\" >-0.094739</td>\n",
        "                        <td id=\"T_b22d571a_e631_11ea_8653_525400de11c7row9_col1\" class=\"data row9 col1\" >0.110168</td>\n",
        "                        <td id=\"T_b22d571a_e631_11ea_8653_525400de11c7row9_col2\" class=\"data row9 col2\" >0.053024</td>\n",
        "                        <td id=\"T_b22d571a_e631_11ea_8653_525400de11c7row9_col3\" class=\"data row9 col3\" >0.055586</td>\n",
        "                        <td id=\"T_b22d571a_e631_11ea_8653_525400de11c7row9_col4\" class=\"data row9 col4\" >-0.206419</td>\n",
        "                        <td id=\"T_b22d571a_e631_11ea_8653_525400de11c7row9_col5\" class=\"data row9 col5\" >0.417242</td>\n",
        "                        <td id=\"T_b22d571a_e631_11ea_8653_525400de11c7row9_col6\" class=\"data row9 col6\" >0.490404</td>\n",
        "                        <td id=\"T_b22d571a_e631_11ea_8653_525400de11c7row9_col7\" class=\"data row9 col7\" >0.354021</td>\n",
        "                        <td id=\"T_b22d571a_e631_11ea_8653_525400de11c7row9_col8\" class=\"data row9 col8\" >0.585511</td>\n",
        "                        <td id=\"T_b22d571a_e631_11ea_8653_525400de11c7row9_col9\" class=\"data row9 col9\" >1.000000</td>\n",
        "                        <td id=\"T_b22d571a_e631_11ea_8653_525400de11c7row9_col10\" class=\"data row9 col10\" >0.630083</td>\n",
        "                        <td id=\"T_b22d571a_e631_11ea_8653_525400de11c7row9_col11\" class=\"data row9 col11\" >0.749438</td>\n",
        "                        <td id=\"T_b22d571a_e631_11ea_8653_525400de11c7row9_col12\" class=\"data row9 col12\" >0.365093</td>\n",
        "                        <td id=\"T_b22d571a_e631_11ea_8653_525400de11c7row9_col13\" class=\"data row9 col13\" >-0.082109</td>\n",
        "                        <td id=\"T_b22d571a_e631_11ea_8653_525400de11c7row9_col14\" class=\"data row9 col14\" >0.004357</td>\n",
        "                        <td id=\"T_b22d571a_e631_11ea_8653_525400de11c7row9_col15\" class=\"data row9 col15\" >-0.243252</td>\n",
        "                        <td id=\"T_b22d571a_e631_11ea_8653_525400de11c7row9_col16\" class=\"data row9 col16\" >0.796951</td>\n",
        "            </tr>\n",
        "            <tr>\n",
        "                        <th id=\"T_b22d571a_e631_11ea_8653_525400de11c7level0_row10\" class=\"row_heading level0 row10\" >Stay_home_restrictions</th>\n",
        "                        <td id=\"T_b22d571a_e631_11ea_8653_525400de11c7row10_col0\" class=\"data row10 col0\" >-0.065754</td>\n",
        "                        <td id=\"T_b22d571a_e631_11ea_8653_525400de11c7row10_col1\" class=\"data row10 col1\" >0.063263</td>\n",
        "                        <td id=\"T_b22d571a_e631_11ea_8653_525400de11c7row10_col2\" class=\"data row10 col2\" >0.027046</td>\n",
        "                        <td id=\"T_b22d571a_e631_11ea_8653_525400de11c7row10_col3\" class=\"data row10 col3\" >0.035246</td>\n",
        "                        <td id=\"T_b22d571a_e631_11ea_8653_525400de11c7row10_col4\" class=\"data row10 col4\" >-0.181225</td>\n",
        "                        <td id=\"T_b22d571a_e631_11ea_8653_525400de11c7row10_col5\" class=\"data row10 col5\" >0.417889</td>\n",
        "                        <td id=\"T_b22d571a_e631_11ea_8653_525400de11c7row10_col6\" class=\"data row10 col6\" >0.598424</td>\n",
        "                        <td id=\"T_b22d571a_e631_11ea_8653_525400de11c7row10_col7\" class=\"data row10 col7\" >0.548753</td>\n",
        "                        <td id=\"T_b22d571a_e631_11ea_8653_525400de11c7row10_col8\" class=\"data row10 col8\" >0.662077</td>\n",
        "                        <td id=\"T_b22d571a_e631_11ea_8653_525400de11c7row10_col9\" class=\"data row10 col9\" >0.630083</td>\n",
        "                        <td id=\"T_b22d571a_e631_11ea_8653_525400de11c7row10_col10\" class=\"data row10 col10\" >1.000000</td>\n",
        "                        <td id=\"T_b22d571a_e631_11ea_8653_525400de11c7row10_col11\" class=\"data row10 col11\" >0.718583</td>\n",
        "                        <td id=\"T_b22d571a_e631_11ea_8653_525400de11c7row10_col12\" class=\"data row10 col12\" >0.286790</td>\n",
        "                        <td id=\"T_b22d571a_e631_11ea_8653_525400de11c7row10_col13\" class=\"data row10 col13\" >0.060269</td>\n",
        "                        <td id=\"T_b22d571a_e631_11ea_8653_525400de11c7row10_col14\" class=\"data row10 col14\" >0.302852</td>\n",
        "                        <td id=\"T_b22d571a_e631_11ea_8653_525400de11c7row10_col15\" class=\"data row10 col15\" >-0.105307</td>\n",
        "                        <td id=\"T_b22d571a_e631_11ea_8653_525400de11c7row10_col16\" class=\"data row10 col16\" >0.742556</td>\n",
        "            </tr>\n",
        "            <tr>\n",
        "                        <th id=\"T_b22d571a_e631_11ea_8653_525400de11c7level0_row11\" class=\"row_heading level0 row11\" >Internal_movement_restrictions</th>\n",
        "                        <td id=\"T_b22d571a_e631_11ea_8653_525400de11c7row11_col0\" class=\"data row11 col0\" >-0.039972</td>\n",
        "                        <td id=\"T_b22d571a_e631_11ea_8653_525400de11c7row11_col1\" class=\"data row11 col1\" >0.122013</td>\n",
        "                        <td id=\"T_b22d571a_e631_11ea_8653_525400de11c7row11_col2\" class=\"data row11 col2\" >-0.028557</td>\n",
        "                        <td id=\"T_b22d571a_e631_11ea_8653_525400de11c7row11_col3\" class=\"data row11 col3\" >0.005694</td>\n",
        "                        <td id=\"T_b22d571a_e631_11ea_8653_525400de11c7row11_col4\" class=\"data row11 col4\" >-0.291974</td>\n",
        "                        <td id=\"T_b22d571a_e631_11ea_8653_525400de11c7row11_col5\" class=\"data row11 col5\" >0.200801</td>\n",
        "                        <td id=\"T_b22d571a_e631_11ea_8653_525400de11c7row11_col6\" class=\"data row11 col6\" >0.473532</td>\n",
        "                        <td id=\"T_b22d571a_e631_11ea_8653_525400de11c7row11_col7\" class=\"data row11 col7\" >0.383998</td>\n",
        "                        <td id=\"T_b22d571a_e631_11ea_8653_525400de11c7row11_col8\" class=\"data row11 col8\" >0.624882</td>\n",
        "                        <td id=\"T_b22d571a_e631_11ea_8653_525400de11c7row11_col9\" class=\"data row11 col9\" >0.749438</td>\n",
        "                        <td id=\"T_b22d571a_e631_11ea_8653_525400de11c7row11_col10\" class=\"data row11 col10\" >0.718583</td>\n",
        "                        <td id=\"T_b22d571a_e631_11ea_8653_525400de11c7row11_col11\" class=\"data row11 col11\" >1.000000</td>\n",
        "                        <td id=\"T_b22d571a_e631_11ea_8653_525400de11c7row11_col12\" class=\"data row11 col12\" >0.219572</td>\n",
        "                        <td id=\"T_b22d571a_e631_11ea_8653_525400de11c7row11_col13\" class=\"data row11 col13\" >-0.040021</td>\n",
        "                        <td id=\"T_b22d571a_e631_11ea_8653_525400de11c7row11_col14\" class=\"data row11 col14\" >0.211247</td>\n",
        "                        <td id=\"T_b22d571a_e631_11ea_8653_525400de11c7row11_col15\" class=\"data row11 col15\" >-0.174277</td>\n",
        "                        <td id=\"T_b22d571a_e631_11ea_8653_525400de11c7row11_col16\" class=\"data row11 col16\" >0.675343</td>\n",
        "            </tr>\n",
        "            <tr>\n",
        "                        <th id=\"T_b22d571a_e631_11ea_8653_525400de11c7level0_row12\" class=\"row_heading level0 row12\" >International_movement_restrictions</th>\n",
        "                        <td id=\"T_b22d571a_e631_11ea_8653_525400de11c7row12_col0\" class=\"data row12 col0\" >-0.212203</td>\n",
        "                        <td id=\"T_b22d571a_e631_11ea_8653_525400de11c7row12_col1\" class=\"data row12 col1\" >0.001288</td>\n",
        "                        <td id=\"T_b22d571a_e631_11ea_8653_525400de11c7row12_col2\" class=\"data row12 col2\" >0.102423</td>\n",
        "                        <td id=\"T_b22d571a_e631_11ea_8653_525400de11c7row12_col3\" class=\"data row12 col3\" >0.188685</td>\n",
        "                        <td id=\"T_b22d571a_e631_11ea_8653_525400de11c7row12_col4\" class=\"data row12 col4\" >0.133135</td>\n",
        "                        <td id=\"T_b22d571a_e631_11ea_8653_525400de11c7row12_col5\" class=\"data row12 col5\" >0.529272</td>\n",
        "                        <td id=\"T_b22d571a_e631_11ea_8653_525400de11c7row12_col6\" class=\"data row12 col6\" >0.218431</td>\n",
        "                        <td id=\"T_b22d571a_e631_11ea_8653_525400de11c7row12_col7\" class=\"data row12 col7\" >-0.011670</td>\n",
        "                        <td id=\"T_b22d571a_e631_11ea_8653_525400de11c7row12_col8\" class=\"data row12 col8\" >0.127618</td>\n",
        "                        <td id=\"T_b22d571a_e631_11ea_8653_525400de11c7row12_col9\" class=\"data row12 col9\" >0.365093</td>\n",
        "                        <td id=\"T_b22d571a_e631_11ea_8653_525400de11c7row12_col10\" class=\"data row12 col10\" >0.286790</td>\n",
        "                        <td id=\"T_b22d571a_e631_11ea_8653_525400de11c7row12_col11\" class=\"data row12 col11\" >0.219572</td>\n",
        "                        <td id=\"T_b22d571a_e631_11ea_8653_525400de11c7row12_col12\" class=\"data row12 col12\" >1.000000</td>\n",
        "                        <td id=\"T_b22d571a_e631_11ea_8653_525400de11c7row12_col13\" class=\"data row12 col13\" >0.037745</td>\n",
        "                        <td id=\"T_b22d571a_e631_11ea_8653_525400de11c7row12_col14\" class=\"data row12 col14\" >-0.050473</td>\n",
        "                        <td id=\"T_b22d571a_e631_11ea_8653_525400de11c7row12_col15\" class=\"data row12 col15\" >-0.110471</td>\n",
        "                        <td id=\"T_b22d571a_e631_11ea_8653_525400de11c7row12_col16\" class=\"data row12 col16\" >0.556493</td>\n",
        "            </tr>\n",
        "            <tr>\n",
        "                        <th id=\"T_b22d571a_e631_11ea_8653_525400de11c7level0_row13\" class=\"row_heading level0 row13\" >Information_campaigns</th>\n",
        "                        <td id=\"T_b22d571a_e631_11ea_8653_525400de11c7row13_col0\" class=\"data row13 col0\" >0.011838</td>\n",
        "                        <td id=\"T_b22d571a_e631_11ea_8653_525400de11c7row13_col1\" class=\"data row13 col1\" >0.016713</td>\n",
        "                        <td id=\"T_b22d571a_e631_11ea_8653_525400de11c7row13_col2\" class=\"data row13 col2\" >-0.078197</td>\n",
        "                        <td id=\"T_b22d571a_e631_11ea_8653_525400de11c7row13_col3\" class=\"data row13 col3\" >-0.129362</td>\n",
        "                        <td id=\"T_b22d571a_e631_11ea_8653_525400de11c7row13_col4\" class=\"data row13 col4\" >-0.158656</td>\n",
        "                        <td id=\"T_b22d571a_e631_11ea_8653_525400de11c7row13_col5\" class=\"data row13 col5\" >-0.049544</td>\n",
        "                        <td id=\"T_b22d571a_e631_11ea_8653_525400de11c7row13_col6\" class=\"data row13 col6\" >-0.017340</td>\n",
        "                        <td id=\"T_b22d571a_e631_11ea_8653_525400de11c7row13_col7\" class=\"data row13 col7\" >-0.019432</td>\n",
        "                        <td id=\"T_b22d571a_e631_11ea_8653_525400de11c7row13_col8\" class=\"data row13 col8\" >0.068376</td>\n",
        "                        <td id=\"T_b22d571a_e631_11ea_8653_525400de11c7row13_col9\" class=\"data row13 col9\" >-0.082109</td>\n",
        "                        <td id=\"T_b22d571a_e631_11ea_8653_525400de11c7row13_col10\" class=\"data row13 col10\" >0.060269</td>\n",
        "                        <td id=\"T_b22d571a_e631_11ea_8653_525400de11c7row13_col11\" class=\"data row13 col11\" >-0.040021</td>\n",
        "                        <td id=\"T_b22d571a_e631_11ea_8653_525400de11c7row13_col12\" class=\"data row13 col12\" >0.037745</td>\n",
        "                        <td id=\"T_b22d571a_e631_11ea_8653_525400de11c7row13_col13\" class=\"data row13 col13\" >1.000000</td>\n",
        "                        <td id=\"T_b22d571a_e631_11ea_8653_525400de11c7row13_col14\" class=\"data row13 col14\" >0.120955</td>\n",
        "                        <td id=\"T_b22d571a_e631_11ea_8653_525400de11c7row13_col15\" class=\"data row13 col15\" >0.138664</td>\n",
        "                        <td id=\"T_b22d571a_e631_11ea_8653_525400de11c7row13_col16\" class=\"data row13 col16\" >0.001687</td>\n",
        "            </tr>\n",
        "            <tr>\n",
        "                        <th id=\"T_b22d571a_e631_11ea_8653_525400de11c7level0_row14\" class=\"row_heading level0 row14\" >Testing_policy</th>\n",
        "                        <td id=\"T_b22d571a_e631_11ea_8653_525400de11c7row14_col0\" class=\"data row14 col0\" >-0.176433</td>\n",
        "                        <td id=\"T_b22d571a_e631_11ea_8653_525400de11c7row14_col1\" class=\"data row14 col1\" >-0.468716</td>\n",
        "                        <td id=\"T_b22d571a_e631_11ea_8653_525400de11c7row14_col2\" class=\"data row14 col2\" >-0.546777</td>\n",
        "                        <td id=\"T_b22d571a_e631_11ea_8653_525400de11c7row14_col3\" class=\"data row14 col3\" >-0.323379</td>\n",
        "                        <td id=\"T_b22d571a_e631_11ea_8653_525400de11c7row14_col4\" class=\"data row14 col4\" >-0.188702</td>\n",
        "                        <td id=\"T_b22d571a_e631_11ea_8653_525400de11c7row14_col5\" class=\"data row14 col5\" >-0.124293</td>\n",
        "                        <td id=\"T_b22d571a_e631_11ea_8653_525400de11c7row14_col6\" class=\"data row14 col6\" >-0.159505</td>\n",
        "                        <td id=\"T_b22d571a_e631_11ea_8653_525400de11c7row14_col7\" class=\"data row14 col7\" >0.088127</td>\n",
        "                        <td id=\"T_b22d571a_e631_11ea_8653_525400de11c7row14_col8\" class=\"data row14 col8\" >0.214060</td>\n",
        "                        <td id=\"T_b22d571a_e631_11ea_8653_525400de11c7row14_col9\" class=\"data row14 col9\" >0.004357</td>\n",
        "                        <td id=\"T_b22d571a_e631_11ea_8653_525400de11c7row14_col10\" class=\"data row14 col10\" >0.302852</td>\n",
        "                        <td id=\"T_b22d571a_e631_11ea_8653_525400de11c7row14_col11\" class=\"data row14 col11\" >0.211247</td>\n",
        "                        <td id=\"T_b22d571a_e631_11ea_8653_525400de11c7row14_col12\" class=\"data row14 col12\" >-0.050473</td>\n",
        "                        <td id=\"T_b22d571a_e631_11ea_8653_525400de11c7row14_col13\" class=\"data row14 col13\" >0.120955</td>\n",
        "                        <td id=\"T_b22d571a_e631_11ea_8653_525400de11c7row14_col14\" class=\"data row14 col14\" >1.000000</td>\n",
        "                        <td id=\"T_b22d571a_e631_11ea_8653_525400de11c7row14_col15\" class=\"data row14 col15\" >0.578168</td>\n",
        "                        <td id=\"T_b22d571a_e631_11ea_8653_525400de11c7row14_col16\" class=\"data row14 col16\" >-0.165644</td>\n",
        "            </tr>\n",
        "            <tr>\n",
        "                        <th id=\"T_b22d571a_e631_11ea_8653_525400de11c7level0_row15\" class=\"row_heading level0 row15\" >Contact_tracing</th>\n",
        "                        <td id=\"T_b22d571a_e631_11ea_8653_525400de11c7row15_col0\" class=\"data row15 col0\" >-0.113817</td>\n",
        "                        <td id=\"T_b22d571a_e631_11ea_8653_525400de11c7row15_col1\" class=\"data row15 col1\" >-0.302666</td>\n",
        "                        <td id=\"T_b22d571a_e631_11ea_8653_525400de11c7row15_col2\" class=\"data row15 col2\" >-0.575930</td>\n",
        "                        <td id=\"T_b22d571a_e631_11ea_8653_525400de11c7row15_col3\" class=\"data row15 col3\" >-0.391359</td>\n",
        "                        <td id=\"T_b22d571a_e631_11ea_8653_525400de11c7row15_col4\" class=\"data row15 col4\" >-0.118594</td>\n",
        "                        <td id=\"T_b22d571a_e631_11ea_8653_525400de11c7row15_col5\" class=\"data row15 col5\" >-0.261483</td>\n",
        "                        <td id=\"T_b22d571a_e631_11ea_8653_525400de11c7row15_col6\" class=\"data row15 col6\" >-0.382791</td>\n",
        "                        <td id=\"T_b22d571a_e631_11ea_8653_525400de11c7row15_col7\" class=\"data row15 col7\" >-0.083325</td>\n",
        "                        <td id=\"T_b22d571a_e631_11ea_8653_525400de11c7row15_col8\" class=\"data row15 col8\" >-0.105072</td>\n",
        "                        <td id=\"T_b22d571a_e631_11ea_8653_525400de11c7row15_col9\" class=\"data row15 col9\" >-0.243252</td>\n",
        "                        <td id=\"T_b22d571a_e631_11ea_8653_525400de11c7row15_col10\" class=\"data row15 col10\" >-0.105307</td>\n",
        "                        <td id=\"T_b22d571a_e631_11ea_8653_525400de11c7row15_col11\" class=\"data row15 col11\" >-0.174277</td>\n",
        "                        <td id=\"T_b22d571a_e631_11ea_8653_525400de11c7row15_col12\" class=\"data row15 col12\" >-0.110471</td>\n",
        "                        <td id=\"T_b22d571a_e631_11ea_8653_525400de11c7row15_col13\" class=\"data row15 col13\" >0.138664</td>\n",
        "                        <td id=\"T_b22d571a_e631_11ea_8653_525400de11c7row15_col14\" class=\"data row15 col14\" >0.578168</td>\n",
        "                        <td id=\"T_b22d571a_e631_11ea_8653_525400de11c7row15_col15\" class=\"data row15 col15\" >1.000000</td>\n",
        "                        <td id=\"T_b22d571a_e631_11ea_8653_525400de11c7row15_col16\" class=\"data row15 col16\" >-0.408872</td>\n",
        "            </tr>\n",
        "            <tr>\n",
        "                        <th id=\"T_b22d571a_e631_11ea_8653_525400de11c7level0_row16\" class=\"row_heading level0 row16\" >Stringency_index</th>\n",
        "                        <td id=\"T_b22d571a_e631_11ea_8653_525400de11c7row16_col0\" class=\"data row16 col0\" >-0.085108</td>\n",
        "                        <td id=\"T_b22d571a_e631_11ea_8653_525400de11c7row16_col1\" class=\"data row16 col1\" >0.358596</td>\n",
        "                        <td id=\"T_b22d571a_e631_11ea_8653_525400de11c7row16_col2\" class=\"data row16 col2\" >0.323145</td>\n",
        "                        <td id=\"T_b22d571a_e631_11ea_8653_525400de11c7row16_col3\" class=\"data row16 col3\" >0.177014</td>\n",
        "                        <td id=\"T_b22d571a_e631_11ea_8653_525400de11c7row16_col4\" class=\"data row16 col4\" >-0.061040</td>\n",
        "                        <td id=\"T_b22d571a_e631_11ea_8653_525400de11c7row16_col5\" class=\"data row16 col5\" >0.664888</td>\n",
        "                        <td id=\"T_b22d571a_e631_11ea_8653_525400de11c7row16_col6\" class=\"data row16 col6\" >0.758110</td>\n",
        "                        <td id=\"T_b22d571a_e631_11ea_8653_525400de11c7row16_col7\" class=\"data row16 col7\" >0.539659</td>\n",
        "                        <td id=\"T_b22d571a_e631_11ea_8653_525400de11c7row16_col8\" class=\"data row16 col8\" >0.607560</td>\n",
        "                        <td id=\"T_b22d571a_e631_11ea_8653_525400de11c7row16_col9\" class=\"data row16 col9\" >0.796951</td>\n",
        "                        <td id=\"T_b22d571a_e631_11ea_8653_525400de11c7row16_col10\" class=\"data row16 col10\" >0.742556</td>\n",
        "                        <td id=\"T_b22d571a_e631_11ea_8653_525400de11c7row16_col11\" class=\"data row16 col11\" >0.675343</td>\n",
        "                        <td id=\"T_b22d571a_e631_11ea_8653_525400de11c7row16_col12\" class=\"data row16 col12\" >0.556493</td>\n",
        "                        <td id=\"T_b22d571a_e631_11ea_8653_525400de11c7row16_col13\" class=\"data row16 col13\" >0.001687</td>\n",
        "                        <td id=\"T_b22d571a_e631_11ea_8653_525400de11c7row16_col14\" class=\"data row16 col14\" >-0.165644</td>\n",
        "                        <td id=\"T_b22d571a_e631_11ea_8653_525400de11c7row16_col15\" class=\"data row16 col15\" >-0.408872</td>\n",
        "                        <td id=\"T_b22d571a_e631_11ea_8653_525400de11c7row16_col16\" class=\"data row16 col16\" >1.000000</td>\n",
        "            </tr>\n",
        "    </tbody></table>"
       ],
       "output_type": "pyout",
       "prompt_number": 21,
       "text": [
        "<pandas.io.formats.style.Styler at 0x7fbace75dd90>"
       ]
      }
     ],
     "prompt_number": 21
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "# Scatter plot of Stringency index and Rt\n",
      "df = track_df.copy()\n",
      "sns.scatterplot(data=df, x=\"Stringency_index\", y=\"Rt\", hue=\"Country\", legend=\"brief\", marker=\"+\")\n",
      "bbox_to_anchor=(1.02, 0)\n",
      "bbox_loc=\"lower left\"\n",
      "plt.legend(bbox_to_anchor=bbox_to_anchor, loc=bbox_loc, borderaxespad=0)\n",
      "plt.title(\"Relationship of Stringency index and reproduction number\")\n",
      "plt.ylabel(\"Reproduction number\")\n",
      "plt.xlabel(\"Stringency index\")\n",
      "plt.show()"
     ],
     "language": "python",
     "metadata": {},
     "outputs": [
      {
       "output_type": "display_data",
       "png": "iVBORw0KGgoAAAANSUhEUgAAAhAAAAFJCAYAAADKaRQrAAAAOXRFWHRTb2Z0d2FyZQBNYXRwbG90bGliIHZlcnNpb24zLjMuMCwgaHR0cHM6Ly9tYXRwbG90bGliLm9yZy86wFpkAAAACXBIWXMAAAsTAAALEwEAmpwYAABbq0lEQVR4nO3dd5xU1fnH8c+XpggoFmJXTOwiIkWxo2KNBUs0igrRgOYHUaNGjbFAJNFYo8FKNGJERQnNFgUVsYMoxZpYsIugoHQRnt8f58zu3dmZnZndmd0BnvfrNa+d28/cnZn7zDnnnkdmhnPOOedcIRo1dAGcc845t/LxAMI555xzBfMAwjnnnHMF8wDCOeeccwXzAMI555xzBfMAwjnnnHMF8wDCOeeccwXzAMI555xzBfMAwjnnnHMF8wDCOeeccwXzAMI551y9kLSRpAclfSBpiqTHJW1bxP13k7RnsfbnauYBhHPOuZKTJGAUMMHMfmZmnYA/ABsW8TDdgIwBhKQmRTyOwwMI55xz9WN/YJmZ3Z6aYWbTgBckXSvpTUkzJJ0IFbUJj6bWlTRYUu/4fKakgZJej9tsL6ktcBbwO0lTJe0j6R5Jt0t6FbhG0v8ktYn7aCTp/dS0K5xHZM455+pDO2BKhvnHAh2AXYANgMmSJuaxvzlm1lHS/wEXmNmvJd0OLDCz6wAknQFsBuxpZsslfQf0BP4GdAemmdnsOr6u1ZbXQDjnnGtIewMPmNlyM5sFPAd0yWO7kfHvFKBtDes9bGbL4/O7gdPi89OBfxZeXJfiAYRzzrn68BbQqYD1f6TqNWrNtOVL49/l1FybvjD1xMw+BWZJOgDYDXiigPK4NB5AOOecqw/PAGtI6puaIak9MA84UVLj2B9hX2AS8DGwo6Q1JLUGDszjGPOBVjnW+QdwH1VrJlwteADhnHOu5MzMgGOA7vE2zreAq4D7genANEKQcaGZfRVrCx4C3ox/38jjMI8Ax6Q6UWZZZyzQEm++qDOF/6lzzjm36pPUGbjRzLIFGC5PfheGc8651YKki4HfEO7EcHXkNRDOOeecK5j3gXDOOedcwTyAcM4551zBPIBwzjnnXME8gHDOOedcwTyAcM45Vy8kLY9jNEyLibCKnno7PQlXnttMiLd3FnqseyQdX+h2qwq/jdM551x9WWxmHQAkHUIYSGq/Bi2RqzUPIJxzzlWz5LxrTgb+AmwBfAJcsuYNF95fxEOsDcwFkNQSGAOsCzQFLjWzMTFF9xPAC8CewOfA0Wa2WFIX4C5gBTAOOMzM2iUPIGk34CZCHo3FwK/M7D1JzQkjUe4CvAs0T2xzMDAQWAP4IG6zQNLVwFGEHB1PmdkFcZN9JZ0HbEQYRXNEEc9RWfMmDOecc1XE4GEIsCWg+HdInF8XzWMTxruEnBRXpg4JHGNmHYH9geslKS7bBrjFzHYi5M04Ls7/J3BmrNHIltPiXWAfM9sVuJwQEEEYTGqRme0AXEFM8iVpA+BSoHssy2vAeZLWJwzDvZOZtQcGJY6xMSGj6BHA1YWfkpWX10A455xL9xdgrbR5a8X5damFSDZh7AHcK6kdIUj5i6R9CTUKmwIbxm0+MrOp8fkUoG1MrtXKzF6O8+8nXMDTrQMMlbQNYITaDQgJu24GMLPpkqbH+V2BHYEXY/zSDHgZ+I4Q5NwV+1ck+1iMNrMVwNuSNmQ14gGEc865dFsUOL9gZvZy/MXfBjg8/u1kZsskzaQyfffSxGbLSTQ35OFK4FkzOyY2h0zIsb6AcWZ2UrUFoTnkQOB4oD9wQIbyKX27VZk3YTjnnEv3SYHzCyZpe6Ax8A2hpuDrGDzsT2gyycrM5gHzJe0eZ/0yy6rrEPpNAPROzJ8InBzL0Q5oH+e/Auwlaeu4rIWkbWMfjXXM7HHgd4S+E6s9r4FwzjmX7hJCH4hkM8aiOL8umkuaGp8L6GVmyyUNAx6RNIPQ7+DdPPZ1BjBE0grgOUIzQ7prCE0YlwKPJebfBvxT0jvAO4SmEcxstqTewAOS1ojrXgrMB8ZIWjOW+7x8X/CqzJNpOeecq6Ye7sKoE0ktzWxBfH4xsLGZndPAxVqteADhnHNupSPpROAPhJr0j4HeZja7YUu1evEAwjnnnHMF806UzjnnnCuYBxDOOeecK5gHEM4555wrmAcQzjnnnCuYBxDOOefqRSKd95uSHpaUPlx2Tdt2kHR4ico1QNIFudd0SR5AOOecqy+LzaxDzJr5A3BWPhtJagJ0IAx57cqEj0TpnHOumqUXHVRtIKk1/jqumANJPQ+0l7QecDfwU8Jol31jgqsBwM/i/E+AvQgjWe4NXAXsACwws+sAJL0JHGFmMyVdBpwCzAY+BaaY2XWS+gB9CUmy3gdONbNFRXxNqxWvgXDOOVdFDB6qpfOO8+ss1igcBswABgJvxDTZlwD3JlbdkZBa+yRCOu7hsQZjeA377kJI+b1LPEbnxOKRZtbFzHYhDGF9RjFez+rKAwjnnHPpakrnXRepXBivEWoV7gL2Bv4FYGbPAOtLWjuuP9bMFhd4jL2AMWa2xMzmA48klrWT9HzMudET2Kn2L8V5E4Zzzrl0pUrnvdjMOiRnSDVmwF5Yw7IfqfojeM1sKybcA/Qws2kxaVa3PLZxWXgNhHPOuXQlT+ed8DyhNgBJ3YA5ZvZ9hvXmA60S0zOBjnG7jsBWcf6LwJGS1oxpuI9IbNMK+FJS09QxXe15AOGccy7dJYQOjUnFSOedyQCgk6TpwNVAryzrPQvsGG8DPRH4N7CepLeA/sB/AcxsMjAWmA48QehnkUr1fRnwKiHIyCdluKuBJ9NyzjlXTT3chVEyqVTfcZyJiYQ7O15v6HKtajyAcM45t0qRdD/hDo41gaFmdlUDF2mV5AGEc8455wrmfSCcc845VzAPIJxzzjlXMA8gnHPOOVcwDyCcc845VzAPIJxzztULSRtKul/Sh5KmSHpZ0jE5tnlcUut6KqIrgAcQzjnnSk5hzOrRwEQz+6mZdQJ+CWxW03ZmdriZzSt9CV2h/DZO55xz1bx9fadqA0nteP6UWg8kJelA4HIz2y/Dst5AZzPrH6cfBa4zswmSZhIyarYkjCz5ArAn8DlwtJktlvQz4BagDWHEzD5m9q6kI4FLCem7vwF6mtms2r4GV5XXQDjnnKsiBg/V0nnH+bW1E1DX0SC3AW4xs52AeYS03QB3Ar+NtRoXALfG+S8AXc1sV+BB4MI6Ht8leDZO55xz6WpK512U4awl3UJI5f0DofYgHx+Z2dT4fArQNibM2hN4OJHZc434dzNguKSNCbUQHxWh6C7yGgjnnHPpSpHO+y1i9kwAM+sHHEhodsg3NffSxPPlhB/BjYB5ZtYh8dghrvN3YLCZ7QycWcN+XS2slAGEpAmSfl3LbbeQtEBS42KXK3GMAZLuq2H5WzFtbbGPu6GkiZLmS7q+2PuPx+gp6alS7Lu+SdpH0nt12N4kbV3MMhWTpLaxjCtFTaOkmZK6l2C/t0u6rNj7rU+5vlNKoBTpvJ8B1pT0m8S8VC3HTKCDpEaSNgd2y3enMfX3R5J+AaGzpqRd4uJ1CH0lIHuWT1dLDRZAxC+LxfFi/pWke2JVVCmOU/GlZGafmFlLM1te7GPly8x2MrMJJdh1X2AOsLaZnZ++UNJmkv4taY6k7yS9GTsv5X2xMbNhZnZwCcpe78zseTPbrqHL4YpHUm9JLyTnmdlZZnZlQ5VpJVX0dN4Weuz3APaT9JGkScBQ4CJCeu2PgLeBmym8r0RP4AxJ0wg1HUfH+QMITRtTCN+Nroga+pfJkWY2XtJGwJPAH4A/NnCZVmZbAm9b9ltr/gVMi+stBXYGNsp355KamNmPdS6lKzvF/t/6e6V85fO/2fH8Kfe/fX0nKOJdGABm9iXh1s1MembZpm18Ogdol5h/XeL5R8ChGbYdA4ypZXFdLmbWIA9ClVX3xPQ1wGOJ6a7AS4SettOAbollE4Bfx+c/I1SNfUN4gw0DWsdl/wJWAIuBBYQeuG0BA5rEdTYBxgLfAu8Tbv9JHWcA8BBwLzCfENl2Tiy/iFA9Nh94Dzgwz+0qXntcdwQwPK77OrBLDedtT2Ay8F38u2ecfw+wjNAhaUHy3Ca2XQB0yLLfT+J5WRAfewC9Cb8Mboznd1Cc90JiOwPOAv4X/1e3UHl7cGPg+vh/+Qjon3bu1wHuAr6M53EQ0Dgu603oQX0dMDduf1jiuOsB/wS+iMtHx/lvEgLT1HpN4/F3zfCauwGfpf1fLgCmx/M7HFgzsfz3saxfAKfH17J1XLZGLOsnwCzgdqB5XPY4cH1iPw8Cd2f5P+wGvBzP5ZfAYKBZAef7uvh6PwT6Jc93ls/gRfH1LiX8oMj1ubsKmAR8T/hiXi8uaxuPdUY8BxMJNZyXAh8DXxM+D+sk9ndqXPYN4YfDTCo/F/cAg2r4X20OjARmx+0HAzsASwht4wsI7eKZ9tWH8Fn/lvDZ3ySf85vh/A2g5s95xfsjvRyp10P4Tvo6/q97AIcD/41luyTtWFm/JwjfY/+O5+Mj4OwM294X/2+/rq/veX+s2o+GO3DVL4vNgBnATXF60/ilcHj8EjooTreJyydQGUBsHZevQeiMMxH4W6bjxOm2VL2ITSTc8rMm0CF+AA+IywbEL6TDCV/OVwGvxGXbAZ+mvnzifn+Wa7sMr30A4cJ/POFid0H8Amia4ZytR7hYnkr4sj8pTq8fl1d8QWU55+MJAcEvgS3SllU5L3Feb0Lnpt/G4zUncwDxKNCa8EtlNnBoXHYWoUpyM2DdePzkuR8F3AG0AH5CuDCdmTj2MsKXfWPgN4QLd+pi+Rjhy3TdeN72i/MvBIYnync0MCPL+ehG9QBiEuHLeD3gHeCsuOxQQmDQLpb3fqoGEDcSLkbrAa2AR4Cr4rKNCBeJAwi/sj4EWmUpUyfCRbxJ/J+8A5xbwPl+l3BxXQ94Nv1/muEzODWu35z8PnefJ87Bv4H70t4/98ZlzQlB1vvATwn38I8E/hXX35Fwkd+X8Nm9gfBeyxlAxPfDtHjOWxA+u3sn3jcvpL3Oin3F/8EcQme+NQid7Cbmc34znL8B1Pw5zxVA/AhcTnj/9onHup/w/tmJ8MNnq1zfE/F/NSXuq1k83x8Ch6Rt2yOu27yhvvf9sWo9Gu7A4ctrASGaNuBpKmsOLkp90STWfxLoFZ9PIEsUHT8kb6QdJ2MAQfjiXE7iyzx+CdwTnw8AxieW7Qgsjs+3JlwUupN2sa9pu/QyxXWTXzqNCL9G9snw2k4FJqXNexnoHZ9XfEFlOTfrAlcTfiktJ1w8uqSfl8T6vYFP0vbRm+oBxN6J6YeAi+PzZ4gBQZzunjj3GxJ+9TZPLD8JeDZxnPcTy9aK224EbEyoWVo3w2vcJL6n1o7TI4ALs5yPblQPIE5JTF8D3B6f3w1cnVi2bSzP1oT75BcSA8i4fA/CLWep6eMIAeec5PnK43NyLjCqgPN9VmLZwen/0wyfwdMT0/l87pLnYEdCjVfjxPvnp4nlTwP/l5jejnAha0K42D2YWNYi7iufAGIPwsW22usidwBxF3BNYlnLWKa2uc5vhmMNoObPea4AYjGVNW6t4vq7J9afAvTI9T0B7E71z+kfgH8mtp2Y6TX4wx91eTT0XRg9zKwV4cO0PbBBnL8l8AtJ81IPwv3CG6fvIN558KCkzyV9T6im2yB9vSw2Ab41s/mJeR8TfomlfJV4vojQi7iJmb1P+HIfAHwdy7BJru2ylOPT1BMzW0Go2twkw3qbxPIlpZc3KzOba2YXWxiEZUNCADFaiZunaypbDdJfa6oz7CZp2yefb0n49fRl4n98B6Emotp+zSzVoaslIfD71szmphfEzL4g1LIcF8fPP4zQrJWvfF9L8v/QhhDgTEm8lv/E+SmPEC6075lZlU5+SZK2lfRo7Fj8PaENOv39XJsyZpP+P8n1uUvff9O08iWXp79fP6YyeKxSVjNbSKjtyMfmwMdWuz4WVcpkZgvicWv6zNfUubuQz3m6b6yyM/fi+Dc5SuLitGNn+57YEtgk7f92CeE8V9vWuWJp6AACADN7jhCdpzrFfEr4JdQ68WhhZldn2PwvhMh9ZzNbGziF8IuwYvc1HPoLYD1JrRLztqDytp9c5b7fzPYmfIAN+Gs+22WweeqJpEaEKv8vspR3y7R5eZc3yczmEM53qro+23mq6fzl8iVVx7nfPPH8U0INxAaJ//HaMbjJ5VPC/611luVDCe+DXwAvm1nB5yeDL6la/uT98HMIX/Y7JV7LOmaW/PL/M6E5YmNJJ9VwnNsIzRDbxPfzJVR9P9e2jNkk/7/5fO7S97+Mqr3bk/tLf79uQai2n5VeVklrAesn1l1I1YGMkp19PwW2yHKhzvV+rVImSS3icYvxHkm3iOyvoTayfU98SqjtSv7fWpnZ4Ylt6/I5di6jsgggor8BB8X7d+8DjpR0iKTGktaU1E1SpqQrrQhNId9J2pTQ0S1pFqFNsBoz+5TQYeyqeIz2hE5gOe+3lrSdpAMkrUFoB11MqFavjU6Sjo1fiOcSLqyvZFjvcWBbSSdLaiLpREK16aP5HETSXyW1i9u2IvQreN/MviFUCa8gy7mqpYeAcyRtGi/2F6UWWOiN/RRwvaS14/3fP5O0X66dxm2fAG6VtK6kppL2TawymtDGfQ6hTb5Yr6W3pB3jxe6KRHlWEIb9vVHSTwDiaz4kPt8X+BVwGuFe9L/H92omrQgd3RZI2p7wPyqkjGfH23XXBS4u6BXm97k7JXEO/gSMsOy3RD8A/E7SVvEW7b8Q+qf8SGhaOkLS3pKaxX0lv4+mAodLWi/epXVuYtkkQgBytaQWsZx7xWWzgM3iPrOV6VeSOsTP7l+AV81sZh7np1BTgZPjuTwUyPneziHb98QkYL6kiyQ1j8drJ6lLHY/nXI3KJoAws9mEL/vL44X9aMKvr9mECPv3ZC7vQMLF4jtCx7qRacuvAi6NVXsXZNj+JEL77ReETn1XmNn4PIq8BqE/wRxCNeZPCO2OtTEGOJHKDpLHmtmy9JXihf4I4HxCteuFwBGxNiEfaxFe4zxCJ6stgaPivhcRfiW/GM9V11q+lqQhhCBhOvAGIQD6kdD/AsIFtRmho+VcwkWlWjNVFqcSfv2+S+iLcm5qgZktJnTw24rq74daMbMnCEHuM4SOgc+krXJRnP9KbHoYD2wnaW3C+7q/mX1uZs8T2uH/maXp6ALgZEI/jiGEjqL5GkLoszCN0Eu/oNee5+fuX4Tawq8InRfPrmGXd8f1JxI6/C0hdMjFzN4i3CVyPyEYmEuokk8eZxqhn8ZTJM5DDFiOJPQ/+SRud2Jc/Ayhj89Xkqp9LuJn+zLC++NLwl1c2W4rrKtzYjnnETrPjq7j/jJ+T8TzcQShE/hHhO+kfxDuciorkpZLmqowBs0jNdQi1mbf/5C0Y7H253LzbJwNTNIAQkerUxq6LKUm6TBCp8T0ZphSHOtyYNvV4bzWF0kTCHdd/KOhy+JWTpIWpJr2JA0F/mtmf27gYrlaKpsaCLfqidWph8cmk00J1f6j6uG46xGaou4s9bGcW1WNv6PTyePv6DRz/B2dVsS/dcnEmcnLxM6rCukJOsfnGyik8EbSTpImxVqL6ZK2ic1Wj0maFmsyTsywj9skvaaQNmBgkcvtIg8gXCmJ0MQ0l9CE8Q7h9r3SHVDqQ6h6f8LMJpbyWM6tqmKwUC2dd7GCCIVcRAcSxk6pyVmE8YE6AJ0JzVWHAl+Y2S5m1o5wx1O6P5pZZ6A9Yejs9sUot6uqoYeyXu2Z2YCGLkOpxH4V9dqRy8yGEL74XJGZWbeGLoOrN6VK591c0lRCzcM7wLgc678M/DF25B1pZv+TNIPQ+fqvwKOxX1G6EyT1JVzjNiZ0Np9eh3K7DLwGwjnnXLpSpPOGMNBWByprNvrF+cl03hUpt83sfkJH78XA45IOMLP/EjrOzwAGxf5OFSRtReiMfKCZtSd0rvc03iVQljUQG2ywgbVt27ahi+GccyuVKVOmzDGzNrnXzOkTqo85k5pfZ2a2SNLZhIHsbiXcbdOJcEvq8an1JP0U+NDMbpa0BdBe0ruEgeTuUxg069dpu1+bMI7Id5I2JAwmN6EY5XZVlWUA0bZtW1577bWGLoZzzq1UJOUz+mg+LiE0BSabMeqUzjudmb0haTrhVvrrgIdis8NjidVOAE6VtIxw6/BfCM2i10paQbiV+zdp+50m6Q3CLd6fEkamdSVQlrdxdu7c2TyAcM65wkiaEjsP1lnsMFklnXf3M+uWztutWsqyBsI551zDisGCBwwuK+9E6ZxzzrmCeQDhnHPOuYJ5AOGcc865gnkA4crOnsMnN3QRnHPO5eABhCs75XdfkHPOuXQeQDjnnKsXkhY0dBlc8fhtnK4s7Dl8cpWahz1iM4aAl06s13Qazrl6JKmJmf3Y0OVwhfMAwpWFZJCwx/DJvOxBg3MNatjQjtUGkurZ6/WijAshqRtwJSFT7/bAtpJGA5sT8lbcZGZ3xnUXADcBRxByYhxtZrOKUQ5XN96E4ZxzrooYPFRL5x3nF0tH4Bwz2zZOn25mnQhpu8+WtH6c3wJ4xcx2ASYCfYpYBlcHHkC4sqOGLoBzrqZ03sUyycw+SkyfLWka8AqhJmKbOP8H4NH4fArQtohlcHXgTRiu7HifB+caXKnSeSctTD2JTRrdgT1ips4JVKbgXmaVSZuW49etsuE1EM4559JlS9tdlHTeGawDzI3Bw/ZA1xIdxxWRBxDOOefSXUJI351U1HTeaf4DNJH0DnA1oRnDlbmSpfOWtB0wPDHrp8DlwL1xfltgJnCCmc1NbuvpvJ1zrnDFTOddyrsw3KqhZAFElYNIjYHPgd2BfsC3Zna1pIuBdc3souT6HkA451zhihlAOJdLfTVhHAh8YGYfA0cDQ+P8oUCPeiqDc84554qkvgKIXwIPxOcbmtmX8flXwIb1VAbnnHPOFUnJAwhJzYCjgIfTl8Vbc6q1ocyePZvOnTtXPO68885SF9M555xzBaiP+2kPA15PDD06S9LGZvalpI2Br9M3aNOmDd4HwjnnnCtf9dGEcRKVzRcAY4Fe8XkvYEw9lME555xzRVTSAEJSC+AgYGRi9tXAQZL+Rxh57OpSlsE551zDk9RW0ptp8wZIuiDHdp0l3Ryfd5O0Zy2OPVPSBlmWdZBkkg4tdL+59p1Yp7ek2ZKmJh47FnCMsySdVmC5anWuClHSJgwzWwisnzbvG8JdGc4551yNzOw1INWm3Q1YALxUxEOcBLwQ//4nfaEkEYY8WFHH4ww3s/612dDMbs80P0cq9G4U/1xV4WOKO+ecq+bq4dUHkrr4xNINJBXzX7wK7A+0Bs4ws+djnowLgP7AWcBySacAvwXeBW6nMkfHuWb2Yszk+QCwKfAyWXL0xeDgF4Sa8uclrWlmSyS1BZ6M5ekEHB7HLeoCNAdGmNkViV1dKOkwQrrxk83s/TxfczdgIDAP2Bl4CJgBnBOP08PMPpA0AFhgZtfF8zQV2Bt4QNJ/gUuBZsA3QM+4bb7naj9CunQINzXsa2bz8ym/D2XtnHOuihg8VEvnHeeXUhMz2w04F0heoDGzmYQL4I1m1sHMnidc+G40sy7AccA/4upXAC+Y2U7AKLInAdsT+MjMPgAmAD9PLNsGuNXMdopjGP0xDtLVHthPUvvEut+Z2c7AYOBvWY51YloTRvM4fxfCxX4H4FRg23gO/kG48GfSzMw6m9n1hNqTrma2K/AgcGGB5+oCoJ+ZdQD2IQRBefEaCOecc+lqSudd21qIbMMeJ+en+svlm7a7O7BjqEgAYG1JLYF9gWMBzOwxSXOzbH8S4aJL/Hsa8O84/bGZJXNynCCpL+G6uTGwIzA9Lnsg8ffGLMeq1oQRyz05NTaSpA+Ap+LiGYTamIz7SjzfDBge72psBnyUeZOs5+pF4AZJw4CRZvZZlu2r8QDCOedculKk8/4GWDdt3npUveAtjX/zTdvdiPDre0lyZuIimVVMsXAccLSkPxJqWtaX1Cqukkw3vhXhl3oXM5sr6R4q041D1SCo0PwQSxPPVySmV5D9HCxMPP87cIOZjY1NIgOybJPxXAFXS3oMOBx4UdIhZvZuPgX3JgznnHPpip7O28wWAF9KOgBA0nrAoYQq+HzNB1olpp8iUc0vqUN8OhE4Oc47jOqBC4TO/NPNbHMza2tmWxJqH47JsO7ahIv2d5I2JIxvlHRi4u/LBbyeYliHkGsKKodIgDzPlaSfmdkMM/srMBnYPt8DewDhnHMuXanSeZ8GXCZpKvAMMDD2P8jXI8AxsQ/BPsDZQGdJ0yW9TehLAKFj4r6S3iI0ZWQKfE4i9I9I+necX4WZTQPeIHREvJ9Q7Z+0rqTphM6Pv8tS9vQ+EMW6xXIA8LCkKcCcxPx8z9W5kt6M5V8GPJHvgeslG2ehPBunc84VrpjZOOv7Lgy38vEAwjnnVhGeztvVJ2/CcM4551zBPIBwzjnnXME8gHDOOedcwTyAcM4551zBPIBwzjnnXME8gHDOOVcvJC2P4xJMk/R6rrEQMqUAr8Uxj4qJsFyR+VDWzjnn6svimLQJSYcAVwH71XWnNaW1NrOxwNi6HsNV5wGEc865ao4ZW30gqVFHFXUgqbWBuQAxqdMYwpDTTYFLzWxMXK+xpCGEzJmfA0eb2eJ80lqb2SxJvYHOZtY/5rD4HugMbETIXDmiiK9pteJNGM4556qIwUO1dN5xfl00j00Y7xLSSV8Z5y8BjjGzjoQMlNerMiPWNsAtMTX3PEICrJQa01pnKcPGhKDjCODqOr6e1ZrXQDjnnEtXinTeULUJYw/gXkntCEHKXyTtS8hCuSmwYdzmIzObGp+np/muTVrr0Wa2Ang7JsZytVTSGghJrSWNkPSupHck7SFpPUnjJP0v/s2UJc0551zDKUU67yrM7GVgA6AN0DP+7RQDjFlUpstOprtOT/OdntZ6sJntDJxJ1XTbScn95c777bIqdRPGTcB/zGx7YBfgHeBi4Gkz2wZ4Ok4755wrH0VP551O0vZAY0J/hXWAr81smaT9CU0mhcqW1tqVSMkCCEnrAPsCdwGY2Q9mNg84GhgaVxsK9ChVGZxzztVKqdJ5p/pATCU0P/Qys+XAMEKq6RmElN/v1mLfA8ic1tqVSMmycUrqANwJvE2ofZhCyJX+uZm1jusImJuaTtlyyy2tTZs2FdN9+/alb9++JSmnc86tKoqZjbMe7sJwK7lSBhCdgVeAvczsVUk3EW6f+W0yYJA018yq9IPwdN7OOVc4T+ft6lMp+0B8BnxmZq/G6RFAR2BW7CVL/Pt1CcvgnHPOuRIoWQBhZl8Bn0raLs46kNCcMZbKDi69CIOHOOecc24lUupxIH4LDJPUDPgQ+BUhaHlI0hnAx8AJJS6Dc84554qspAFEHPwjU3vcgaU8rnPOOedKy4eyds4551zBPIBwzjlXLxLpvN+U9Iik1g1UjrMkndYQx16VeADhnHOuviw2sw5m1g74FujXEIUws9vN7N6GOPaqpMY+EJIaA2/Foaidc86tJjqPPb/aQFKvHXV9MQeSehloDxUDD95OSNj1AXC6mc2NKbvfAPYBWhBGqfwDsDMw3MwujduPBjYn5L+4yczujPMXEFIqHAEsJqQCnyVpALDAzK6T1AfoS0jA9T5wqpmlj8LpMqixBiIOMfqepKIlUHHOOVfeYvBQLZ13nF9n8cfpgYTb+gHuBS4ys/bADOCKxOo/xMGxbifc9t8PaAf0lrR+XOd0M+tE6LR/dmJ+C+AVM9sFmAj0yVCckWbWJa7zDnBGMV7j6iCfuzDWBd6SNIlE5jMzO6pkpXLOOdeQSpXOu3nMg7Ep4WI9LuZNam1mz8V1hgIPJ7ZJBRkzCDXiXwJI+pBQ6/ANIWg4Jq63ObBNnP8D8GicPwU4KEOZ2kkaBLQGWgJP1uH1rVbyCSAuK3kpnHPOlZNSpfNebGYdJK1FuFD3ozK5Yjap9NsrqJqKewXQRFI3oDuwh5ktis0eqVTey6wyX0N6KvCUe4AeZjZNUm+gWwGvZ7WWsxNljApnAk3j88nA6yUul3POuYZT0nTesY/B2cD5hJrtuZL2iYtPBZ7Ltm0G6xCSMi6KKcK7FlicVsCXkpoCPQvcdrWWM4CIHUxGAHfEWZsCo0tYJueccw2rVOm8K5jZG8B04CRCWoNrJU0HOgB/KmBX/yHURLwDXE1I4liIy4BXgRepXRrx1VbObJyxvWo34FUz2zXOm2FmO5eqUJ6N0znnClfMbJz1cBeGW8nl0wdiqZn9IAkASU2A0uQAd845VxZisOABg8sqn4GknpN0CaH37EGE3rGPlLZYzjnnnCtn+QQQFwOzCbfQnAk8DlxaykI555xzrrzlbMIwsxWShhI6mRjwnuXqOOGcc865VVrOAELSzwkjgH1AGJFsK0lnmtkTpS6cc84558pTPp0orwf2N7P3AST9DHgM8ADCOeecW03l0wdifip4iD4E5peoPM4551ZRMblV6vnhkv4racsSHOcoSRfH5z0k7VjsY7gaaiAkHRufvibpceAhQh+IXxBGo3TOOecKJulA4GbgEDP7uNj7N7OxVObQ6EHIh/F2sY+zuqupCePIxPNZwH7x+WygeT47lzSTUFuxHPjRzDpLWg8YDrQlDJF9gpnNLajUzjnnSqrLqJurDSQ1+Ziz6zwuhKR9CZk+DzezDyS1BR41s3Zx+QWEpFa3Ak+YWSdJuwBTgS3N7BNJHxBSeh9IuCuwGSF5Vs+Yrrs3ITPn/cBRwH6SLgWOM7MP6voaXJA1gDCzXxXpGPub2ZzE9MXA02Z2daxiuhi4qEjHcs45V0cxeBhCZUbOLYEhXUbdTB2DiDUIqRC6mVmNw0ab2deS1pS0NrAP8Bqwj6QXgK9j7osXgK5mZpJ+DVxIyK+R2sdLksYSApQRdSi3yyCfuzC2An5LqDGoWL8O6byPpjLb2VBgAh5AOOdcOSlVOu9lwEvAGcA5eaz/ErAXsG889qGEuwGfj8s3A4ZL2phQC/FRHcrmCpRPJ8rRhKaGvxPuyEg98mHAU5KmSOob522YyucOfAVsmL7R7Nmz6dy5c8XjzjvvzPNwzjnniqBU6bxXACcAu8URjgF+pOq1aM3E84mE2octgTHALsDeVAYQfwcGx9xMZ6Zt60osn9s4l5jZzbXc/95m9rmknwDjJFWpsorVTtUGpWrTpg2eTMs55xrMJ4SLdqb5dRKbHn4OPC9pFnAv8BNJ6wMLgCMIGTYhBAp/BibGQQ2/BQ4H/hCXrwN8Hp/3ynLI+YSU3a7I8qmBuEnSFZL2kNQx9chn52b2efz7NTCKkNVzVqxuIv79upZld845VxolTedtZt8SmiMuBQ4jpO+eBIwjkVLbzGYSmiwmxlkvAPMSHe8HAA9LmgIk+9olPQj8XtIbcRwjVyT5pPO+CjiVMBLlijjbzOyAHNu1ABqZ2fz4fBzhTXIg8E2iE+V6ZnZhcltP5+2cc4UrZjrvUt2F4VYd+QQQ7wM7mtkPBe1Y+imh1gFCU8n9ZvbnWE31EOFN+THhNs5vk9t6AOGcc4UrZgDhXC759IF4E2hNgU0NZvYhocNL+vxvCLUQzjnnnFtJ5RNAtAbelTQZWJqaWYfbOJ1zzjm3kssngLii5KVwzjnn3EolZwBhZs/VR0Gcc845t/LIZyTK+YQBoSCM9NUUWGhma5eyYM4555wrXznHgTCzVma2dgwYmgPHEZKcOOecc3mTZJLuS0w3kTRb0qO13N9Zkk4rXgldIfIZSKqCBaOBQ0pTHOecc6uwhUA7SamMzgdROZJkwczsdjO7tyglcwXLpwnj2MRkI0KK1CUlK5FzzrkGt/vIYdUGknr12J7FGEjqceDnwAjgJOABQr6L1ACEfwfaEZrLB5jZGEk3EQYg/JOkQ4A/EpIyXg4sMLPrJG0N3A60AZYDvwA+BK4hjHZpwCAzG16E1+DIrwbiyMTjEMK44keXslDOOecaTgwehhDyYSj+HRLn19WDwC8lrQm0B15NLPsj8IyZ7QbsD1wbg4o/ACdK2h+4GfiVma1I2+8w4BYz2wXYE/gSOBboQBiTqHvc38ZFeA2O/O7C+FV9FMQ551zZKFU6b8xsuqS2hNqHx9MWHwwcJemCOL0msIWZvSOpDyEnxu/M7IPkRpJaAZua2ah4jCVx/t7AA2a2nJCH6TmgCzC2Lq/BBfk0YbQB+gBtk+ub2emlK5ZzzrkGVKp03iljgesIzRDrJ+YLOM7M3suwzc7AN8AmRSqDq6N8mjDGEFKmjgceSzycc86tmrKl7a5zOu/obmCgmc1Im/8k8FtJApC0a/y7JXA+sCtwmKTdkxuZ2XzgM0k94vprSFqLkA78REmN44/hfQlZP10R5DMS5VpmdlHJS+Kcc65cXELoA5FsxihmOu/PCH0Z0l0J/A2YLqkR8JGkI4G7gAvM7AtJZwD3SOqStu2pwB2S/gQsI3SiHAXsAUwjdKK80My+KsZrcPll4xwEvGRm6W1VJePZOJ1zrnDFzMZZwrsw3CoinwBiPtCCkEhrGaGNyko5EqUHEM45VzhP5+3qUz53YbSqj4I455xzbuVR0EiUzjnnnHPgAYRzzjnnasEDCOecc84VLK8AIt5Du4mkLVKPfA8Qt30jlW1N0laSXpX0vqThkprVtvDOOeecaxg5AwhJvwVmAeOoHESqkNSr5wDvJKb/CtxoZlsDc4EzCtiXc865lZSkjSQ9KOkDSVMkPS5p2yLte0BiCOya1pspaYak6ZKei4NUFVU8xgY1lVHSnyR1L/ax61M+NRDnANuZ2U5mtnN8tM9n55I2I2Rd+0ecFnAAIQsbwFCgR8Glds45t1KJ3/+jgAlm9jMz60RIkrVhAxRn/3gdmwBc2gDHx8wuN7PxDXHsYskngPgU+K6W+/8bcCGQypq2PjDPzH6M058Bm6ZvNHv2bDp37lzxuPPOO2t5eOecc7XRdcTjJ3cd8fjMriMeXxH/1jUT5/7AMjO7PTXDzKaZ2fPx1/jU+Phc0j8BJJ0iaVKcf4ekxnH+oZJelzRN0tOJY+woaYKkDyWdnUeZXiZegyS1kfRvSZPjY684f4Ckf0l6WdL/YlIvJHVLNc3H6cGSeif2fWGs6ZgUU41XIekeScfH510kvRRfz6SYHKzs5TOU9YfABEmPEQaTAsDMbqhpI0lHAF+b2RRJ3QopVJs2bfCBpJxzrmHEYCE5lPWWwJCuIx7nleMPr+1olO2AKZkWmNnlwOWSWhPyVwyWtANwIrCXmS2TdCvQU9ITsWz7mtlHktZL7Gp7QqDSCnhP0m1mtqyGMh0KjI7PbyI0r78Q+/k9CewQl7UHuhIGVXwjXg9z+c7MdpZ0GuHH9BGZVor9AIcDJ5rZZElrA4vz2H+DyyeA+CQ+msVHvvYipGU9nJCSdW3CP6i1pCaxFmIz4PPCiuycc67ESpbOO5vYxHEfcEP84dkf6ARMjrm1mgNfEy7kE83sIwAz+zaxm8fMbCmwVNLXhOaRzzIc7tkYeCwALovzuhNqMFLrrC2pZXw+xswWA4slPQvsBszL8ZIeSPy9sYb1tgO+NLPJ8fV8n2O/ZSOfkSgHAqROpJktyGfHZvYHQvsWsQbiAjPrKelh4HjgQaAXIdunc8658lGKdN5vEb77sxkAfGZm/4zTAobGa0mFmFwrm6WJ58vJfo3bnxAADAMGAucRmvS7mtmStONBSMSVZMCPVO0GsGaGdTI9X2XkcxdGO0lvEP75b8WeszvV4ZgXAedJep/QJ+KuOuzLOedc8ZUinfczwBqS+qZmSGovaZ8YFHQHkv0WngaOl/STuO568Y6JV4B9JW2Vml+bwsRa8HOB0+I+ngJ+myhbh8TqR0taU9L6QDdgMvAxocZijdj0cmDaIU5M/H25hqK8B2ysmF1UUitJ+bQONLh8CnkncJ6ZPQsVtQlDgD3zPYiZTSD0dsXMPiRU/zjnnCtPRU/nbWYm6Rjgb5IuApYAMwkX8T8ROjNOir/4x5rZ5ZIuBZ5SSO29DOhnZq/EIGRknP81cFAty/SlpAeAfoTg5RZJ0wnXxonAWXHV6cCzwAbAlWb2BYCkh4A3gY+AN9J2v27c11LgpBrK8IOkE4G/S2pO6P/QndC8UtbyycY5zcx2yTWvmDwbp3POFU5FzMYZO1JWSeddhw6UKy1JA4AFZnZdQ5el3OR1F4aky4B/xelTCHdmOOecW0XFYGG1Cxhc/vIJIE4ndDIZGaefj/Occ865VZqZDWjoMpSrfO7CmEvVji3OOeecW81lDSAk/c3MzpX0CBluQTGzo0paMuecc86VrZpqIFJ9HrzjiHPOOeeqyBpAmFlqyNEOZnZTcpmkc4DnSlkw55xzzpWvfJJp9cowr3eRy+Gcc24VJ8kk3ZeYbiJpdjIpVZbteksanGVZ2Y+XsKqqqQ/EScDJwFaSxiYWtQK+zbyVc845l9VCoJ2k5jG3xEF4PqSVVk19IF4CviSMvHV9Yv58wqhczjnnVlF7DJ9cbSCpl0/sUoxxIR4Hfg6MIIzQ+ACwD1QMS3038FPCyJd9zazK9SYOYX0/0JJELqWYjOsa4DBCx/9BZjZc0oPAv8zssbjePcCjwGuEvn4t4i76m9lLRXh9q42sTRhm9nEcgron8KqZPWdmzwHvELJoOuecWwXF4GEIIY234t8hcX5dPQj8UtKahDTZryaWDQTeMLP2hGGz782w/U3AbWa2M+FHbsqxQAdgF8JQ0NdK2piQKvsEqEidfSDwGHEIbDPrSMhXcXMRXttqJZ8+EA8BKxLTy4GHS1Mc55xzZaCmdN51EmsU2hJqHx5PW7w38Q5AM3sGWF/S2mnr7EVlqux/pW37gJktN7NZhI7+XYAngP0lrUGonZgYm0+aAkMkzSBc03as62tb3eQzEmUTM/shNRETfzQrYZmcc841rFKk804aSxgioBshK3Oh8k6PbWZLJE0ADiHUNDwYF/0OmEWosWhESO7lCpBPDcRsSRWDRkk6GphTuiI555xrYKVI5510NzDQzGakzX+e0Gyeyvw8x8y+T1vnReCX8XnPtG1PlNRYUhtgX2BSXDYc+BWhr8V/4rx1gC/NbAVwKtC4jq9ptZNPAHEWcImkTyR9ClwEnFnaYjnnnGtAlxA6MSbVKZ13kpl9ZmaZ+hwMADrFNNhXk3kYgXOAfrHpYdPE/FGEDv7TgGeAC83sq7jsKWA/YHyiRv1WoJekacD2hDtEXAFypvOuWFFqCWBmJb/n1tN5O+dc4YqZzruEd2G4VUTOPhCSLk+bBsDM/lSiMjnnnGtgMVjwgMFllU8TxsLEYzmhF2vbXBtJWlPSJEnTJL0laWCcv5WkVyW9L2m4d8h0zjnnVj75pPNODiKFpOuAJ/PY91LgADNbIKkp8IKkJ4DzgBvN7EFJtwNnALcVXnTnnHPONZR8aiDSrUUeA0lZkOov0TQ+DDiAMAIZwFCgRy3K4JxzzrkGlE8fiBlU3nPbGGgD5NX/QVJjYAqwNXAL8AEwz8x+jKt8RtVetM4555xbCeQzkNQRiec/ArMSAUCNzGw50EFSa8ItNtvns93s2bPp3LmyI3Hfvn3p27dvPps655xzrh7UlI1zvfh0ftqitSVhZnln5DSzeZKeBfYAWktqEoOQzciQia1Nmzb4bZzOObdqkbQcmEG49rwD9DKz9PEmUuv2BjqbWf8iHHcAsMDMrqvrvlylmvpATCFkK5sCzAb+C/wvPp+Sa8eS2sSaByQ1J6RtfQd4Fjg+rtaLRDY155xzq7TFZtbBzNoBPxAGKnQrqaw1EGa2FYCkIcAoM3s8Th9Gfh0fNwaGxn4QjYCHzOxRSW8DD0oaBLwB3FW3l+Ccc67Y9r7vm2oDSb1wyvrFHBfieaB9nim8jwQuBZoB3wA9zWxWrFnYIm67BfC31AiXkv5I+JH6NfApefzwdYXJpw9EVzPrk5owsyckXZNro/gG2DXD/A+B3QoqpXPOuXoTg4chVGbk3BIYsvd931CMIEJSE8KYQv+hMoV3D0kHEFJ4d0jb5AXCtcgk/Rq4EDg/Ltse2B9oBbwn6TZCmvBfxv00AV7HA4iiyyeA+ELSpcB9cbon8EXpiuScc66B1ZTOuy4BRHNJU+Pz5wk10K8Cx0FI4S0pUwrvzYDhkjYm1EJ8lFj2mJktBZZK+hrYkJA0a1Sqf4WksXUos8sin3EgTiLcujkqPn4S5znnnFs1lSqdd6oPRAcz+20isVUufwcGm9nOhGSOayaWLU08X05+P4xdEeQMIMzsWzM7h5AadR8zO6eQOzCcc86tdEqdzjspnxTe61B5x16mDJ3pJgI9JDWX1Ao4sjhFdUk5AwhJO0t6A3gTeEvSFEntSl8055xzDaSk6bzTDCB3Cu8BwMOSpgBzcu3QzF4HhhNSez8BTC5WYV2lnOm8Jb0E/NHMno3T3YC/mNmepSqUp/N2zrnCFTOddz3cheFWcvm0FbVIBQ8AZjZBUosSlsk551wDi8GCBwwuq3wCiA8lXQb8K06fAnxYuiI555xzrtzlcxfG6YS7MEYC/wY2iPOcc845t5qqsQYijiI50sz2r6fyOOecc24lUGMNRMymuULSOvVUHuecc86tBPLpA7EAmCFpHLAwNdPMzi5ZqZxzzjlX1vIJIEbGh3POOVdrhaTzduUvZwBhZkMlNSMkLDHgvQKGH3XOOedSFptZBwBJwwjpvG/ItZGkJmb2Y4nL5gqUM4CQdDhwB/ABIGArSWea2ROlLpxzzrmGce0tC6sNJPX7fi1Kkc67BSHXRTugKTDAzMZI6g0cC7QEGku6ArjAzI4AkDQYeM3M7ilimVwB8rmN8wZgfzPrZmb7EdKm3ljaYjnnnGsoMXgYQkjjrfh3SJxfZ4l03jOAPwLPmNluhOvLtYnBCjsCx8drjysz+QQQ883s/cT0h8D8EpXHOedcw6spnXddpNJ5v0ao1bgLOBi4OM6fQMi0mcr6Oc6TN5avfDpRvibpceAhQh+IXwCTJR0LYGbewdI551YtJU3nnZwhScBxZvZe2vzdSdz5B/xI1R+9yZTergHkUwOxJjAL2A/oBswGmhPSox5RspI555xrKPWZzvtJ4LcxkEDSrlnW+xjYUdIakloDB5agLK4A+dyF8ava7FjS5sC9wIaEmos7zewmSesR0qy2BWYCJ5jZ3NocwznnXElcQugDkWzGKFU67yuBvwHTJTUCPiLDj1Mz+1TSQ8CbcZ03SlAWV4B80nlvC9wGbGhm7SS1B44ys0E5ttsY2NjMXpfUCpgC9AB6A9+a2dWSLgbWNbOLktt6Om/nnCtcMdN518NdGG4ll08A8Rzwe+AOM9s1znvTzNoVdCBpDDA4PrqZ2ZcxyJhgZtsl1/UAwjnnClfMAMK5XPLpRLmWmU2KzVMpBQ3oIaktsCvwKqEm48u46CtCE0cVs2fPpnPnys9A37596du3byGHdM4551wJ5RNAzJH0M0I/BiQdD3xZ8yaVJLUkpAE/18y+TwYiZmaSqlWBtGnTBq+BcM4558pXPgFEP+BOYHtJnxM6r/TMZ+eSmhKCh2GJ2z1nSdo40YTxdS3K7ZxzzrkGlPM2TjP70My6A20I+TD2A/bOtV28Jecu4B0zS451PhboFZ/3AsYUWmjnnHPONaysAYSktSX9QdJgSQcRbuHpBbwPnJDHvvcCTgUOkDQ1Pg4HrgYOkvQ/oHucds4559xKpKYmjH8Bc4GXgT6E8coFHGNmU3Pt2MxeiOtn4gOAOOfcakbSAjNrGZ8fThj/4SAz+7iey9EVuAlYIz6Gm9mAWuynNXCymd0ap7uRSPi1qqspgPipme0MIOkfhI6TW5jZknopmXPOuVWSpAOBm4FD8gkeYpO4zGxFkYowlDCI4TRJjYHtcm2QRWvg/4Bbi1SulUpNfSCWpZ6Y2XLgMw8enHNu9TB+0MKTxw9aOHP8oIUr4t9iZeLclzDK5RFm9kGcd56kN+Pj3DivraT3JN1LGH1yc0m/lzRZ0nRJAxP7HC1piqS3JOVzz/9PiHcTmtlyM3s77me9uK/pkl6JAyciaYCkCxLHezMOT3A18LPYRH9tXNxS0ghJ70oalhqie1VUUwCxi6Tv42M+IW/795LmS/q+vgronHOufsVgoVo67yIEEWsAo4EeZvYugKROwK+A3YGuQJ9EPoxtgFvNbCdCLcE2wG5AB6BTDEYATjezTkBn4GxJ6+cox43Ae5JGSTpTUiox10DgDTNrTxi2+94c+7kY+MDMOpjZ7+O8XYFzgR2BnxL6A66SsgYQZtbYzNaOj1Zm1iTxfO36LKRzzrl6Vap03suAl4AzEvP2BkaZ2UIzWwCMBPaJyz42s1fi84Pj4w3gdcJdgdvEZWdLmga8AmyemJ+Rmf2JEGw8BZwM/CdRln/FdZ4B1pdU6PVukpl9FptbphLyPq2S8hkHwjnn3OqlVOm8VxDu4nta0iVmlisgSabzFnCVmd2RXCF2XOwO7GFmiyRNII9U37H55DZJQ4DZOWotCkklvjTxfDmr8HU2n3TezjnnVi8lS+dtZouAnwM9JZ0BPA/0kLSWpBbAMXFeuieB0+PoxkjaVNJPgHWAuTF42J7QDEJc515Ju6XvSNLPE30TtiFc6OfF4/aM63QD5pjZ94TM0R3j/I7AVnHb+UCr2p2Jld8qGxk555yrtZKm8zazbyUdCkwEzgHuASbFxf8wszdiJ8XkNk9J2gF4OV77FwCnEJofzpL0DvAeoRkjpT3wRYYinArcKGkRoXahp5ktlzQAuFvSdCrHPoIwovJpkt4i5HT6byzTN5JelPQm8ATwWC1PyUopZzbOhuDZOJ1zrnDFzMYZO0xWSefd/dKVJ5137Ltwl5n9oqHLsqryAMI551YRns7b1SfvA+Gcc865gnkA4ZxzzrmCeQDhnHPOuYJ5AFHGFvV5q6GL4FzZ8s+Hcw3LAwjnnHPOFcwDCOecc/VC0h9jwqvpMQHV7g1cnnskHd+QZViZ+UBSZSa9WjY5vdaQneq7OM6VFf98rLwk7QEcAXQ0s6WSNgCaNXCxXB14AFFmkl+Ci/q85V+KziX456P+zDqz+kBSG95Rp4GkNiYMDb0UwMzmQEU2zhuAlsAcoLeZfRlzWrwK7A+0Bs4ws+clNSak0e5GyO55i5ndIakRMBg4APiUkLjrbjMbIely4EigOSGZ15lWjoMgrWS8CcM551wVMXiols47zq+tp4DNJf1X0q2S9pPUFPg7cHxMx3038OfENk3MbDdCeuwr4rwzgO/MrAvQhZD+eyvgWELmyx0JQ1XvkdjPYDPrYmbtCEHEEXV4HS4qWQAh6W5JX8cxwlPz1pM0TtL/4t91S3V855xztVb0dN4xVXcnoC8wGxgOnAm0A8ZJmgpcCmyW2Gxk/DuFyrTYBxPyUkwl1FCsT0iItTfwsJmtMLOvgGcT+9lf0quSZhBqKLzqqghKWQNxD3Bo2ryLgafNbBvg6TjtsvDqWeey889HSZUknbeZLTezCWZ2BdAfOA54y8w6xMfOZnZwYpNUauxkWmwBv01ss5WZPZXtmJLWBG4l1HLsTKhZyZnu2+VWsgDCzCYC36bNPhoYGp8PBXqU6vjOOedqrejpvCVtJ2mbxKwOwDtAm9jBEklNJeWKDJ8EfhObP5C0bUwD/iJwnKRGkjYk9JGAymBhTkwF7nddFEl9d6Lc0My+jM+/AjbMtNLs2bPp3LkyH0zfvn3p27dvPRTPOeccpUnn3RL4u6TWhBTa7xOaM+4Ebpa0DuGa9DegplHC/kFoznhdIa/3bMKP0X8DBwJvEzpRvk7oKzFP0hDgTcJ1Z3IdXoNLKGk2zpjP/dHYcQVJ88ysdWL5XDOr1g/Cs3E651zhipmNswR3YZScpJZmtkDS+sAkYK/YH8KVQH3XQMyStHG8RWdj4Ot6Pr5zzrk8xGChrAOGDB6NNRzNgCs9eCit+g4gxgK9CPfw9gLG1PPxnXPOraLMrFtDl2F1UsrbOB8AXga2k/SZpDMIgcNBkv4HdI/TzjnnnFvJlKwGwsxOyrLowFId0znnnHP1w0eidM4551zBPIBwzjnnXME8mZZzzrl6IWk5MCMxq4eZzWyg4rg68gDCOedcfVlsZh0yLYiDQsnMVtRvkVxteROGc865ahb1eevkRX3emrmoz1sr4t+6ZOLMSFJbSe9JupcwUuTmkm6T9JqktyQNTKw7U9JASa9LmiFp+zi/paR/xnnTJR0X5x8s6eW4/sNxGGtXRB5AOOdWS4v75x6G5sdJM3KusyqKwUK1dN5FCCKaS5oaH6PivG2AW81sJzP7GPhjHE2zPbCfpPaJ7eeYWUfgNuCCOO8ywpDVO5tZe+AZSRsQMnt2j+u/BpxXx7K7NB5ANJD9Hss9pPyiPjUNBw99XhhcrOI4t9LJ9fkohuWT3yz5McpU0dN5R4sTWTSPifM+NrNXEuucIOl14A1C2u0dE8sypffuDtySWsHM5gJd43YvxrTfvQhBkCsi7wPRQBYuX5p7pRymfTuz7gVxzrnqSpLOO4uFqSeStiLULHQxs7mS7qFq6u1M6b0zETCuhvGIXBF4ALESW0HpEqE5typKb7ZITjcffDQQmi1SNQ/2wacsveUBABp3aUeT3Xaup5I2uE/I/Iu91um887Q2IaD4LqbkPgyYkGObcUA/4FwASesCrwC3SNrazN6P6b43NbP/lqrgqyMPIOrRfo9dUqXmofPY8wFo0XgNnvt5qBlMr5ZNTq81ZCf6vDC4Ss3DbmNDM+Au67VlyN79S1V058pCrs9HLqkgAULwkJxOabLbzhWBwtJbHmCNfqvlj9hSpPPOycymSXoDeJeQkvvFPDYbRAgW3iTUTAw0s5GSegMPSFojrncp4AFEEZU0nXdtrQ7pvDuPPZ/Xjrq+xnUW9Xmrxi/FfPbh3Kri8UkDOXy3Kyqmc30+cskWQCStbAFEMdN5xw6TVdJ5rzVkp5UtO6crIa+BWMnsPvb3LKfyNulULUZjGvHqUdc2VLGcK7n3PnuabkOOrzKvphqIa29ZyO/7tSjoGOnbNO7Srk7br8xisOABg8vK78IokScHza/zPjKNpvLqUdfy2lHXV9Q8pJ7XV/CQq+f74x8sqfW+n7txYe6VimTJedfUuLzfk/PqpyDRniMzf08XeqfBCY90LUZxqjhqxDd13sdJY74tQklCkJB60PT9qtMlsOze90uyX+dWBatkADHrzPwuRF1HPF7lb/r8bOvnoxHKe91sMu2h89jzKx7p0/m+7lJ6/IPqd5e8fX1+NarLilj8up6LGXOWF6kk+VmepUOs5egoe9/TZwCw5PwQEN09dkityzD+jk4Z53+7pGoZ9hw+udo6195Sc8D86fyaX0e2Yz8+aSA3jtyXG0fuy4tsWvH88UkDM39Aiq5eDuLcSsmbMBpIox/2r9V2yT4P6X0gZj1W80VzYf9RtBh8TI3rFLrNsKGd6NlrSsX017OmAAekrVVYP5t3+s9jh8GtK6bzaavO1/g7OtH9zCmMbPcQJ3NhteX339uFk0+rfoEspqUXHcQafx2X57JwAVs24nqaHn9+tfU//2ZaeGKptQu/4H1x5nw2uaNVxfTbN+zGjudNqrbekvOuYc0bLszy3yzNhfbw3a6o6Pfw0Jhz+N3RD1QsWzS0+kBQ196yMOt0tqaFmrbJp1tybY7p3KrAA4gienLQ/IqaByHGDVoAhNstp257AA+vuW/Fuo05oKIWASoDgwV93qr4KhawMFZhG9AyvZo2rQNsrl+rqYvL+EEL6X5pzV9sqXWEauz5zt7G4x8sqah5+EK70P+p7wA46rUmHHxJzcd57saFVWoexg9aSLtlTXjuxoU02+069tjriuwbJ7x360Fs93+ZL8opS867BrYNf639iirNGGvecCH9npzHdD3G7cO+YYXBvsNC1f1O89/mtrP2yascSV1G3czkY86umD5mdEdG9Xi9YnrPkfdXqXnYfeQw2K0XT/eZEd9H4T+2qM9bGIew7MnMnQZPeKQry/b7AcY+yH3cyzFjOwLQVM146MhXcrbLp9eWPdb0aS4e8Q3fVrRGib3v+wZ2PZ31RnxDjznbV9tH+jtv95HD+Gnjw6rUPOx9Xzifm7cSrVvO4rYDd6hY9ocNTqV71hJWWvR/YypiFQkW9RtTUYC1bj26yuvM9Loz3caZChKaDz6aa29ZSP93noLEp3Bx/9EVr7J5hmA61zGdW1WtMgFEepV1cnrDOyo/0NmaK2rTjPHK8YdXWXbIpZW/4sYNWsBBl1YOvf7G8OVVagt2H/FYxjsokkHCwj5v0aKGtt1Gyw6o8jqFsr7u2lOVi1a1nu9D4fCfrcnhPwtjvez9r9kMPngd3r6+M1+smMDb14eq6dRfEDP3ObLiV+V+v6ssYypo+erMBez3uxY8dP/TGQOI4cP24cSez1eZt3zxtznfA2vecCHcMTz8vefB8DfhlkNaM2xoR3qe+jr7DvuGiT3XB2DpRX8CxmWtOVh65S9Y47KHM528qtJ+pL90bOWowLv/+z5ePe4UdhvxKJC6IBtCMTAUK2KvmPuePiPUPKwwRjUayPixW1YEh0IMe+TeyoMdWb0Yyf/h+Ds60Y7nKpoQxt/RCWv0HCfPP4jlW4Z5t31xFcubvg/WiNnLQezIHsMn02PO9igeWYhrb1kQj2CwMTxw9HoVx9zrvjm8eMoGFdNdh79ftdmizWlVprufGWq1rnxjOE9/OR2AZWrCimU/raxlafYB/LB1lpOdWT63cSaDhMX9R9N8cI+CjlFX6YGnc+VqlQkgkhfLWWcuzHrxTF30c/VnSA8OUttkmp+vcMxwaRCi64jH4hLltd/F/cfwxbniw/cfAaCR9WC5ltLImlXss0L8zy7sP6rKxWVR/9HsiVjYf0XGponF/cewghXsSSMW9beKbSDUcIhtGTa0U8Xr6DH5MobRsXIHjZ5i2NCOsAH85FPY8fwpvH19J3Y8v7KZY8v+Y2C3qsd9p/882i1rwldnLkCIhf83hiN0PoteGoOo+svxxy7Vm2pO33wgY94nY8/TFfzA+Dv2ZVYzgzVg2D0d6fFaotyCHpOvYHSXkLdn2NCOWKP/5GzOqLgALZiXdZ2UpRcdxPY7HMbSiw6qmK5it14svegg1OVcFjZqDawLQMsVH7OgUdsQQmgeHw18lBN32pGmJ9zFkvOuYdQe4tifX8RCbQTAU4+ex8FH3ABAC/uKp3icXeZWL88XZ4basnY8hxDtXn8unitjzs+g/RLBt6/DCsFGhL+isqqhSu2Xqv298u2j2HvRN4k1VFEDAUDTyiAB4A8jb6oynXLZridy2a4nAqHJruWQyoGcFvX7IOOdF9mm860ZqFpLoYyDTbnakbTAzFpKagvsaWY13uUR13vUzAq7HcbViwYJICQdCtwENAb+YWZX13cZXjn+8IqAIFMwUVNNQz5WYPz1oS6YVXbG67H8UgCkxoxsNIBXj/95jfvI1CDxyosDKifW6sG9+3Wv+N7u/exE7jmgspnkYl5ndJcrAWjz6XPs/dUzvLhR94pftRoUvlxTzRnjBy1kT+DljQ6u2MeeX43npY0OqlhnUZ+3qvR5WDR5ND17VVbLrztoPs14PpZejB+0AHiOLwbNYZPmh9C09RZsSu+K9cfHMthGTfg8lmvnT40XNzmA2ZvvB8Axky9n2knTKmsjhoYL/Xu3HsTyxbF3/xZ/4putw2tv3Hw9Wk8bnQgiW7AxocypPhCLXhtNz96h3MOGdqzWgr+hvYktX17tgl9T/wUIvx6rTt8UnnT9Of1nduaXez4Rpg2++PF3oR4eQGKf3XuhFbCC1lXKk3ofrLB1mNl0L37NXF4FXthmOPAnWvAVLfiqYv2fMJWunz0XawUW0oGqF9J+wNGH/jPu3HjkyTMY2t4q6hLazxWPrfscIFixgjVtFgd9u2OVQPSYbyrTE1iVmpLK6R/WeqJiutmiw/ix6VTE2hX76Dp8Ulz+PTRTlXOX7Rd4leazpoUPJJVLCDKStRSF1UB480Xe2gIn47eJrtTqPYCQ1JiQ+OQg4DNgsqSxZvZ2fZclKRkk1Lamod+T8yp6769oC42W/QeAnTdozObzDmB040EV64rcQcorW7at1i789xaDqkyPbhICBMwSl+XUEahycV/U3zjo0paMH7SwSvNKSvdLW7C4PwzYYhFXfNKcgVsu4amvYMCWixnwr8VgxgsZvqT3vnd25YWwrSp+nV7x8Zps2jwEAW+0NqauBfAx/wfcODJc7HfiMRpluRno72tdCTKOZTmfzBzPh+9X/hIcNrQjtIAm67QIzRkPP1alliPZfJHew3/8HZ3Yk8sqgomevV5n0eQx9Oz1emjC6PU6PQF4vXpNAcnag37VAowXWrauaM7oMupmjvthaGLLzuy+hFRsRed5fwPg0nUHYo1Eo1DNwDHdJ4bVzRg/bivu2X9fRjU9j2N+uIHOHzyOVqwb3jsb/Akkhj42lMaJi/t9j94LfMxyVrD2kPaMG7SQflNnVnkNzz1+YMXz7xvB8z+5kK+aNQeg/dw/MXyzywHY6IfF3ND5MNpvtXVFJ8prblnAhf2qvn/S540btIBJx55SMb3XfXOwZm9XVBA1/qEry5u9EsscXuvkY8+pdq6T/YQAVrCiMpBZVr35opD+CNlqExqiBqJ64Jk7mCq1xf3HVBtIqvngo4t1wb8a2CEmuhoKjAL+BaT+Yf3N7KXkBpImAmeb2dQ4/QLQz8ymFalMrkD1PhKlpD2AAWZ2SJz+A4CZXZVap75HokwPGOraVAFUaUMHuHp4Ry4+sfJinu0YqV/kKXt8Nb5aBXHK/vs14ZVfVNZifHbWHDa7fQOySd1Rkd6JMlNa43iNYwXQIu1Ls6Y0yAftvhcvnLpBxWvpfmkL3r6+E1t+dHmV11FREx7333XE41z57r5ctv1E/jlhT7bguayve2SXgfTs9XqNzVBjnt6PDW+r3oEu9es4deyUTGVKSdU6LL3oIFYszNQvP5yt9ItLl1E3M+anv+GLaT8CMO+TFbTeohH24XQ2PaYjm+zSFAjvhWS5wi4NJEaP25dvj2zCB9MX07JpM5YvhcZxYN4Nd2jM6Uue4ZXjD2f87Z3oftYUFvZ5kxZD2lV7HyXt+fHMKr/WvzhzPvOObMoX0+bRuFmrasfY8YjQvyVXANFxbvY7MS5vu4iXTmlTMd11+CReObGyHSufdv/0u45yjURZ2w6NNb2/66MJoy59IIo1EmUMHjINZd2nLkFEogmjG3CBmR0R568FrDCzJZK2AR4ws87JJgxJvYBdzexcSdsC9xdr1E1XS2ZWrw/geEKzRWr6VGBwcp0tttjCOnXqVPG44447rD7t/vBjdd7HPvfNqTJ99fDOBR9j3JULqkwv6je66j4eerTK9FUP7lrj/u67Z9eM+810jNQ6e907u8Z9ppcpuf74v4R9vHVdxyrrLEzbJiV1zNTreumFARmPkXodSennIptxt3fMuM9UmTLte8mF3av8TUntI31+SueRN1WZvuf658P61/Sqtu5uD99rZpWvI7XPL/p+X2X5M9dU/d+l3kfjbguva8GvZ1Tb91Np/++Fv34zYzlT5+aJK+dnfD2Lf/dXMzO7evD31Zalz3sqbR/p52K3B8fVuDyTTmPOqzKd/jrSXTM4+/s8X+nvk/qQz7nIBnjNivA9vajf6JmL+o22DI+ZddkvsCD+7UYIDFLz1yHUQMwApgKL4vy2wJvx+VrA+0BTQg1G/2K8Vn/U/lGWnSjbtGlDQ+bCqGvtA4Rmi6SLTijB2AJK/8VX8734qeaMXLdwVlnHCqyhSqx/4B9q2R4cX0a2WzibNMmw32rnonaSTT4pNfV5AKBl64yz039Frh1PzRq/v6faun/+5m/AqdVex9AD9uNiXufPs+PybOJmyzP0Is11ZlLlTHViXN5oCVC9iSt118pF/VpVW5Y+L308ivRzYc3ehkQDXSmq6b0/Qp3UZzpvgN8Bs4BdCAMcVhvS1swWSRpH6KRyApB59DFXbxpiJMrPgc0T05vFeauUWw5pXePyYgQp6fu4+MTqvdjr6oXT2uReKcf6yb4JkH1YqcrApuZLXvotnIXI1NO/pjIlZQsk8rqFE9i9++5Zl6WXK3WsVLNX99+E5RvuUDUwTb0HUtuvPaR9znLk6my4VfvqwUOxTapFwJB+23Ophq9uaGVyC2e2tN3FSuc9H0hGnesAX5rZCkKk3DjjVvAP4GZgsplluL/I1aeG6APRhJBS9UBC4DAZONnMKrpTrw7ZOJ1zrthWoj4QTYEngfWBe4BHgX8TYvn/EDpHtsx0G6ekd4Fzzew/tS2HK456b8Iwsx8l9Se8eRoDdyeDB+eccw2r+eCj74+dSYt6F4aZtYx/l1F9zPtk9dlFcb2ZQDJ42IRQc/5UXcrhiqPeayDy4TUQzjlXuGLVQJQjSacBfwbOM7P82g1dSa002TjvvPPOhi5CwbzM9cPLXD+8zPVjZSxzfTCze81scw8eyocHECXkZa4fXub64WWuHytjmd3qaaUJIJxzzjlXPsqyD4Sk2cDHabM3AOY0QHHqwstcP7zM9cPLXD/qUuYtzaywe6+dq6WyDCCcc845V968CcM555xzBfMAwjnnnHMF8wDCOeeccwUruwBC0pqSJkmaJuktSQPj/K0kvSrpfUnDJTVr6LKmk9RY0huSHo3TZV1mSTMlzZA0VdJrcd56ksZJ+l/8u25DlzNJUmtJIyS9K+kdSXuUc5klbRfPb+rxvaRzy7nMAJJ+Fz9/b0p6IH4uy/39fE4s71uSzo3zyu48S7pb0teS3kzMy1hOBTfHcz5dUseGK7lzVZVdAAEsBQ4ws12ADsChkroCfwVuNLOtgbnAGQ1XxKzOAd5JTK8MZd7fzDokRq+7GHjazLYBno7T5eQm4D9mtj0hc987lHGZzey9eH47ELIHLgJGUcZllrQpcDbQOeYgaAz8kjJ+P0tqB/QBdiO8L46QtDXleZ7vAQ5Nm5etnIcB28RHX+C2eiqjczmVXQBhwYI42TQ+jDBu+og4fyjQo/5Ll52kzYCfE7LFIUmUeZmzOJpQViizMktaB9gXuAvAzH4ws3mUcZnTHAh8YGYfU/5lbgI0j8nv1gK+pLzfzzsAr5rZIjP7EXgOOJYyPM9mNhH4Nm12tnIeDdwbvxdfAVpL2rheCupcDmUXQEBFU8BU4GtgHPABMC9+MQB8BmzaQMXL5m/AhcCKOL0+5V9mA56SNEVS3zhvQzP7Mj7/CtiwYYqW0VbAbOCfsanoH5JaUN5lTvol8EB8XrZlNrPPgesICZS+BL4DplDe7+c3gX0krS9pLeBwYHPK+DynyVbOTYFPE+uV23l3q7GyDCDMbHms8t2MUCW5fcOWqGaSjgC+NrMpDV2WAu1tZh0J1aT9JO2bXGhhkJByGiikCdARuM3MdgUWklYlXYZlBiD2FzgKqDaOf7mVOba/H00I2DYBWlC9yr2smNk7hCaWpwjpoKcCy9PWKavznM3KUk7nyjKASInV088CexCq7lLpxzcDPm+ocmWwF3CUpJnAg4Sq3pso7zKnfmliZl8T2uV3A2alqkjj368broTVfAZ8ZmavxukRhICinMucchjwupnNitPlXObuwEdmNjumXR5JeI+X+/v5LjPrZGb7Evpo/JfyPs9J2cr5OaEmJaXszrtbfZVdACGpjaTW8Xlz4CBCR7lngePjar2AMQ1SwAzM7A9mtpmZtSVUUz9jZj0p4zJLaiGpVeo5cDChGngsoaxQZmU2s6+ATyVtF2cdCLxNGZc54SQqmy+gvMv8CdBV0lqxL0/qPJft+xlA0k/i3y0I/R/up7zPc1K2co4FTot3Y3QFvks0dTjXoMpuKGtJ7QmdiBoTApyHzOxPkn5K+HW/HvAGcIqZLW24kmYmqRtwgZkdUc5ljmUbFSebAPeb2Z8lrQ88BGxByEdygpmld/hqMJI6EDqqNgM+BH5FfJ9QvmVuQbgo/9TMvovzyv08DwROBH4kvHd/TWh7L8v3M4Ck5wl9j5YB55nZ0+V4niU9AHQj5LyYBVwBjCZDOWMAN5jQhLQI+JWZvdYAxXaumrILIJxzzjlX/squCcM555xz5c8DCOecc84VzAMI55xzzhXMAwjnnHPOFcwDCOecc84VzAMIV1Yk/TFmU5wes1fuHuefG4cozrbdPyTtWH8lrR1Jm0gakXvNKtv0ljS4VGVyzrnaaJJ7Fefqh6Q9gCOAjma2VNIGhPEeAM4F7iPcC5++XWMz+3W9FbQOzOwLKgdjcs65lZbXQLhysjEwJzU4kZnNMbMvJJ1NyMnwrKRnASQtkHS9pGnAHpImSOqcWPZnSdMkvSJpwzj/Z3F6hqRBklJZX5H0e0mTY83HwDivraR3JA2JtSJPxdFRkbS1pPHxGK/Hfd8rqUdin8MkHZ18gXGfb8bnvSWNlPQfSf+TdE1ivV9J+q+kSYRhpFPz20j6dyzrZEl7xfljJJ0Wn58paVix/inOOZeJBxCunDwFbB4vnLdK2g/AzG4GvgD2N7P947otCOmbdzGzF9L20wJ4xcx2ASYCfeL8m4CbzGxnQl4NACQdDGxDyAXSAeiUSCy2DXCLme0EzAOOi/OHxfm7AHsSslbeBfSO+1wnzn8sx2vuQBjxcWfgREmbx1wIAwmBw95AsmnmJuBGM+sSy/KPOL8vcLmkfYDzgd/mOK5zztWJBxCubJjZAqAT4WI4GxguqXeW1ZcD/86y7Afg0fh8CtA2Pt+DymyY9yfWPzg+3gBeJ2R/3SYu+8jMpib3FXOIbGpmo2K5l5jZIjN7DthGUhtC7ot/J9JfZ/O0mX1nZksI+Sa2BHYHJsRkVj8AwxPrdwcGK6S7HwusLallTNJ1OSFfxfkNPVyzc27V530gXFkxs+XABGCCpBmExEL3ZFh1SVw3k2VWOUb7cnK/zwVcZWZ3VJkptQWSuR6WA81z7Ote4BRCUrVf5ViXDPvPVdZGQNcYcKTbGfiG0NzjnHMl5TUQrmxI2k7SNolZHQiJhQDmA63qeIhXqGyC+GVi/pPA6ZJaxnJsmsrsmImZzQc+S/V3kLRG4g6RewgdPjGzt2tZzleB/SStL6kp8IvEsqdINE/E5GJI2o2QMnxX4AJJW9Xy2M45lxcPIFw5aQkMlfS2pOmEtv8BcdmdwH9SnShr6VzgvLjvrYHvAMzsKUKTxsux1mMEuYOVU4Gz475eAjaK+5pFSD//z9oWMqZrHgC8DLwY95dyNtA5dvZ8GzhL0hrAEOD0eJfH+cDdMZOjc86VhGfjdKuNWEuw2MxM0i+Bk8zs6Fzb1eIYMwi3on5XzH0751w58T4QbnXSidABUYQ7Kk4v5s4ldSfciXGjBw/OuVWd10A455xzrmDeB8I555xzBfMAwjnnnHMF8wDCOeeccwXzAMI555xzBfMAwjnnnHMF+3/o2B0iIR3FCgAAAABJRU5ErkJggg==\n",
       "text": [
        "<Figure size 432x288 with 1 Axes>"
       ]
      }
     ],
     "prompt_number": 22
    }
   ],
   "metadata": {}
  }
 ]
}
