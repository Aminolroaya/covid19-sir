{
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3.8.2 64-bit ('.venv': venv)",
   "name": "python_defaultSpec_1597669925034"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.8.2-final"
  },
  "name": ""
 },
 "nbformat": 3,
 "nbformat_minor": 0,
 "worksheets": [
  {
   "cells": [
    {
     "cell_type": "markdown",
     "metadata": {},
     "source": [
      "# Usage (details: policy measures)\n",
      "Here, we will analyse the relationship of policy measures and parameter values of SIR-derived ODE models. Policy measures are tracked by [Oxford Covid-19 Government Response Tracker (OxCGRT)](https://github.com/OxCGRT/covid-policy-tracker)."
     ]
    },
    {
     "cell_type": "heading",
     "level": 2,
     "metadata": {},
     "source": [
      "Preparation"
     ]
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "# Standard users\n",
      "# !pip install covsirphy\n",
      "# Developers (Note: this notebook is in example directory)\n",
      "import os\n",
      "os.chdir(\"../\")"
     ],
     "language": "python",
     "metadata": {},
     "outputs": [],
     "prompt_number": 1
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "from pprint import pprint"
     ],
     "language": "python",
     "metadata": {},
     "outputs": [],
     "prompt_number": 2
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "import covsirphy as cs\n",
      "cs.__version__"
     ],
     "language": "python",
     "metadata": {},
     "outputs": [
      {
       "output_type": "pyout",
       "prompt_number": 3,
       "text": [
        "'2.12.0-sigma.new.339.357.359.362.366.367.382.383.fix.360.373'"
       ]
      }
     ],
     "prompt_number": 3
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "# Standard users and developers\n",
      "data_loader = cs.DataLoader(\"input\")\n",
      "# The number of cases (JHU style)\n",
      "jhu_data = data_loader.jhu(verbose=False)\n",
      "# Population in each country\n",
      "population_data = data_loader.population(verbose=False)\n",
      "# Government Response Tracker (OxCGRT)\n",
      "oxcgrt_data = data_loader.oxcgrt(verbose=False)\n",
      "# Description/citation\n",
      "print(oxcgrt_data.citation)"
     ],
     "language": "python",
     "metadata": {
      "tags": []
     },
     "outputs": [
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "(Secondary source) Guidotti, E., Ardia, D., (2020), \"COVID-19 Data Hub\", Journal of Open Source Software 5(51):2376, doi: 10.21105/joss.02376.\n"
       ]
      }
     ],
     "prompt_number": 4
    },
    {
     "cell_type": "markdown",
     "metadata": {},
     "source": [
      "## Class for policy measure analysis\n",
      "We will `PolicyMeasures` class to find relationship of policy measures and parameter values of SIR-derived ODE models."
     ]
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "# Create analyser with tau value 360 [min] (can be changed)\n",
      "analyser = cs.PolicyMeasures(jhu_data, population_data, oxcgrt_data, tau=360)\n",
      "# The number of registerd countries\n",
      "len(analyser.countries)"
     ],
     "language": "python",
     "metadata": {
      "tags": []
     },
     "outputs": [
      {
       "output_type": "stream",
       "stream": "stderr",
       "text": [
        "/home/runner/.local/share/virtualenvs/covid19-sir-kT3BL-HO/lib/python3.8/site-packages/scipy/interpolate/fitpack2.py:253: UserWarning: \n",
        "The maximal number of iterations maxit (set to 20 by the program)\n",
        "allowed for finding a smoothing spline with fp=s has been reached: s\n",
        "too small.\n",
        "There is an approximation returned but the corresponding weighted sum\n",
        "of squared residuals does not satisfy the condition abs(fp-s)/s < tol.\n",
        "  warnings.warn(message)\n"
       ]
      },
      {
       "output_type": "pyout",
       "prompt_number": 5,
       "text": [
        "196"
       ]
      }
     ],
     "prompt_number": 5
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "# We can get Scenario instance for detailed scenario analysis\n",
      "type(analyser.scenario(\"Japan\"))"
     ],
     "language": "python",
     "metadata": {},
     "outputs": [
      {
       "output_type": "pyout",
       "prompt_number": 6,
       "text": [
        "covsirphy.analysis.scenario.Scenario"
       ]
      }
     ],
     "prompt_number": 6
    },
    {
     "cell_type": "markdown",
     "metadata": {},
     "source": [
      "## Set phases with S-R trend analysis\n",
      "We will perform S-R trend analysis to set phases in all countries. Countries which do not have **16th phases** will be un-registered for the next analysis. This number will be adjusted for your analysis."
     ]
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "# Show the number of phases of all countries\n",
      "analyser.trend()\n",
      "pprint(analyser.phase_len(), compact=True)"
     ],
     "language": "python",
     "metadata": {},
     "outputs": [
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "{2: ['Timor-Leste', 'Holy See', 'Solomon Islands'],\n",
        " 3: ['Saint Kitts and Nevis', 'Tanzania', 'Laos'],\n",
        " 4: ['Brunei', 'Grenada', 'Dominica', 'Saint Lucia'],\n",
        " 5: ['Equatorial Guinea', 'Fiji'],\n",
        " 6: ['Mauritius', 'Antigua and Barbuda', 'Saint Vincent and the Grenadines'],\n",
        " 7: ['Gambia', 'Northern Mariana Islands'],\n",
        " 8: ['Cambodia', 'Kyrgyzstan', 'Virgin Islands, U.S.', 'Seychelles', 'Barbados',\n",
        "     'Lesotho', 'Vietnam', 'Madagascar', 'Malawi', 'Bahamas',\n",
        "     'Trinidad and Tobago'],\n",
        " 9: ['Swaziland', 'Namibia', 'Venezuela', 'Liechtenstein', 'Suriname',\n",
        "     'Senegal', 'Guyana', 'Djibouti', 'Kazakhstan', 'Monaco', 'Uzbekistan',\n",
        "     'Benin', 'Zambia', 'Australia', 'Papua New Guinea',\n",
        "     'Republic of the Congo', 'Ghana', 'Oman', 'Burundi',\n",
        "     'Sao Tome and Principe', 'Bolivia', 'South Africa'],\n",
        " 10: ['Maldives', 'Brazil', 'Israel', 'Guatemala', 'Ethiopia', 'Rwanda',\n",
        "      'Bahrain', 'Central African Republic', 'New Zealand', 'Liberia',\n",
        "      'Myanmar', \"Cote d'Ivoire\", 'Egypt', 'Peru', 'Eritrea', 'Singapore',\n",
        "      'Botswana', 'Zimbabwe', 'Bermuda', 'Comoros', 'Belize', 'El Salvador',\n",
        "      'Saudi Arabia', 'Philippines', 'Bhutan', 'Chile', 'Gabon', 'Mongolia',\n",
        "      'Kenya', 'Nigeria', 'Syria', 'Jamaica', 'Guam', 'Mozambique', 'Libya',\n",
        "      'Honduras', 'Kuwait'],\n",
        " 11: ['Guinea-Bissau', 'Angola', 'Sierra Leone', 'Chad', 'Iraq', 'Bangladesh',\n",
        "      'Sudan', 'Yemen', 'Taiwan', 'Guinea', 'Mexico', 'Pakistan', 'Andorra',\n",
        "      'Argentina', 'Algeria', 'Cape Verde', 'Jordan', 'Ecuador', 'Panama',\n",
        "      'Costa Rica', 'Nicaragua', 'Puerto Rico', 'Cameroon', 'Paraguay', 'Niger',\n",
        "      'Dominican Republic', 'Togo', 'Colombia', 'India'],\n",
        " 12: ['Kosovo', 'Croatia', 'Georgia', 'Haiti', 'Cuba', 'Palestine',\n",
        "      'United Arab Emirates', 'Qatar', 'Japan', 'Uganda', 'South Sudan',\n",
        "      'Serbia', 'Tajikistan', 'Iceland', 'Nepal',\n",
        "      'Democratic Republic of the Congo', 'Azerbaijan', 'Sri Lanka'],\n",
        " 13: ['Moldova', 'Burkina Faso', 'Uruguay', 'Somalia', 'Ireland', 'Slovakia',\n",
        "      'United States', 'Indonesia', 'China', 'Cyprus', 'Russia', 'Afghanistan',\n",
        "      'San Marino', 'Slovenia', 'Bulgaria', 'Mali', 'Armenia', 'Montenegro',\n",
        "      'Hungary', 'Belarus', 'Mauritania'],\n",
        " 14: ['Luxembourg', 'Morocco', 'Sweden', 'Albania', 'Malaysia',\n",
        "      'North Macedonia', 'Malta', 'Turkey', 'Iran', 'Spain',\n",
        "      'Bosnia and Herzegovina', 'Czech Republic', 'Estonia', 'Tunisia',\n",
        "      'Poland', 'Greece', 'Thailand'],\n",
        " 15: ['Austria', 'Lebanon', 'Lithuania', 'Romania', 'Finland', 'Italy',\n",
        "      'Belgium', 'Netherlands', 'Canada', 'Portugal', 'Norway', 'Latvia',\n",
        "      'Switzerland'],\n",
        " 16: ['Germany', 'Denmark', 'Ukraine', 'United Kingdom', 'France']}\n"
       ]
      }
     ],
     "prompt_number": 7
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "# Set phases with S-R trend analysis\n",
      "analyser.trend(min_len=16)\n",
      "# The number of countries\n",
      "len(analyser.countries)"
     ],
     "language": "python",
     "metadata": {},
     "outputs": [
      {
       "output_type": "pyout",
       "prompt_number": 8,
       "text": [
        "5"
       ]
      }
     ],
     "prompt_number": 8
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "phase_len_dict = analyser.phase_len()\n",
      "pprint(phase_len_dict, compact=True)"
     ],
     "language": "python",
     "metadata": {
      "tags": []
     },
     "outputs": [
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "{16: ['Germany', 'Denmark', 'Ukraine', 'United Kingdom', 'France']}\n"
       ]
      }
     ],
     "prompt_number": 9
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "# Here, only show the countries which have the most phases\n",
      "countries_show = max(phase_len_dict.items(), key=lambda x: x[0])[1]\n",
      "# Show summary\n",
      "analyser.summary(countries=countries_show)"
     ],
     "language": "python",
     "metadata": {
      "tags": []
     },
     "outputs": [
      {
       "html": [
        "<div>\n",
        "<style scoped>\n",
        "    .dataframe tbody tr th:only-of-type {\n",
        "        vertical-align: middle;\n",
        "    }\n",
        "\n",
        "    .dataframe tbody tr th {\n",
        "        vertical-align: top;\n",
        "    }\n",
        "\n",
        "    .dataframe thead th {\n",
        "        text-align: right;\n",
        "    }\n",
        "</style>\n",
        "<table border=\"1\" class=\"dataframe\">\n",
        "  <thead>\n",
        "    <tr style=\"text-align: right;\">\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th>Type</th>\n",
        "      <th>Start</th>\n",
        "      <th>End</th>\n",
        "      <th>Population</th>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>Country</th>\n",
        "      <th>Phase</th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "    </tr>\n",
        "  </thead>\n",
        "  <tbody>\n",
        "    <tr>\n",
        "      <th rowspan=\"5\" valign=\"top\">Germany</th>\n",
        "      <th>0th</th>\n",
        "      <td>Past</td>\n",
        "      <td>14Jan2020</td>\n",
        "      <td>21Mar2020</td>\n",
        "      <td>82905782</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>1st</th>\n",
        "      <td>Past</td>\n",
        "      <td>22Mar2020</td>\n",
        "      <td>31Mar2020</td>\n",
        "      <td>82905782</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>2nd</th>\n",
        "      <td>Past</td>\n",
        "      <td>01Apr2020</td>\n",
        "      <td>14Apr2020</td>\n",
        "      <td>82905782</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>3rd</th>\n",
        "      <td>Past</td>\n",
        "      <td>15Apr2020</td>\n",
        "      <td>10May2020</td>\n",
        "      <td>82905782</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>4th</th>\n",
        "      <td>Past</td>\n",
        "      <td>11May2020</td>\n",
        "      <td>08Jul2020</td>\n",
        "      <td>82905782</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>...</th>\n",
        "      <th>...</th>\n",
        "      <td>...</td>\n",
        "      <td>...</td>\n",
        "      <td>...</td>\n",
        "      <td>...</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th rowspan=\"5\" valign=\"top\">France</th>\n",
        "      <th>11th</th>\n",
        "      <td>Past</td>\n",
        "      <td>22Oct2020</td>\n",
        "      <td>31Oct2020</td>\n",
        "      <td>66977107</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>12th</th>\n",
        "      <td>Past</td>\n",
        "      <td>01Nov2020</td>\n",
        "      <td>10Nov2020</td>\n",
        "      <td>66977107</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>13th</th>\n",
        "      <td>Past</td>\n",
        "      <td>11Nov2020</td>\n",
        "      <td>16Nov2020</td>\n",
        "      <td>66977107</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>14th</th>\n",
        "      <td>Past</td>\n",
        "      <td>17Nov2020</td>\n",
        "      <td>25Nov2020</td>\n",
        "      <td>66977107</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>15th</th>\n",
        "      <td>Past</td>\n",
        "      <td>26Nov2020</td>\n",
        "      <td>07Dec2020</td>\n",
        "      <td>66977107</td>\n",
        "    </tr>\n",
        "  </tbody>\n",
        "</table>\n",
        "<p>80 rows \u00d7 4 columns</p>\n",
        "</div>"
       ],
       "output_type": "pyout",
       "prompt_number": 10,
       "text": [
        "               Type      Start        End  Population\n",
        "Country Phase                                        \n",
        "Germany 0th    Past  14Jan2020  21Mar2020    82905782\n",
        "        1st    Past  22Mar2020  31Mar2020    82905782\n",
        "        2nd    Past  01Apr2020  14Apr2020    82905782\n",
        "        3rd    Past  15Apr2020  10May2020    82905782\n",
        "        4th    Past  11May2020  08Jul2020    82905782\n",
        "...             ...        ...        ...         ...\n",
        "France  11th   Past  22Oct2020  31Oct2020    66977107\n",
        "        12th   Past  01Nov2020  10Nov2020    66977107\n",
        "        13th   Past  11Nov2020  16Nov2020    66977107\n",
        "        14th   Past  17Nov2020  25Nov2020    66977107\n",
        "        15th   Past  26Nov2020  07Dec2020    66977107\n",
        "\n",
        "[80 rows x 4 columns]"
       ]
      }
     ],
     "prompt_number": 10
    },
    {
     "cell_type": "markdown",
     "metadata": {},
     "source": [
      "## Parameter estimation\n",
      "we will estimate the parameter values with SIR-derived ODE models in each country."
     ]
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "# Parameter estimation with SIR-F model\n",
      "analyser.estimate(cs.SIRF, timeout=10)"
     ],
     "language": "python",
     "metadata": {
      "tags": []
     },
     "outputs": [
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n",
        "<SIR-F model: parameter estimation>\n",
        "Running optimization with 4 CPUs...\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stderr",
       "text": [
        "/home/runner/.local/share/virtualenvs/covid19-sir-kT3BL-HO/lib/python3.8/site-packages/scipy/interpolate/fitpack2.py:253: UserWarning: \n",
        "The maximal number of iterations maxit (set to 20 by the program)\n",
        "allowed for finding a smoothing spline with fp=s has been reached: s\n",
        "too small.\n",
        "There is an approximation returned but the corresponding weighted sum\n",
        "of squared residuals does not satisfy the condition abs(fp-s)/s < tol.\n",
        "  warnings.warn(message)\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tDEU,  3rd phase (15Apr2020 - 10May2020): finished  204 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tFRA, 12th phase (01Nov2020 - 10Nov2020): finished  221 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tDEU,  5th phase (09Jul2020 - 17Aug2020): finished  204 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tUKR,  1st phase (17May2020 - 25Jun2020): finished  203 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tUKR, 10th phase (30Oct2020 - 05Nov2020): finished  198 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tDNK,  7th phase (25Sep2020 - 05Oct2020): finished  201 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stderr",
       "text": [
        "/home/runner/.local/share/virtualenvs/covid19-sir-kT3BL-HO/lib/python3.8/site-packages/scipy/interpolate/fitpack2.py:253: UserWarning: \n",
        "The maximal number of iterations maxit (set to 20 by the program)\n",
        "allowed for finding a smoothing spline with fp=s has been reached: s\n",
        "too small.\n",
        "There is an approximation returned but the corresponding weighted sum\n",
        "of squared residuals does not satisfy the condition abs(fp-s)/s < tol.\n",
        "  warnings.warn(message)\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tDEU,  1st phase (22Mar2020 - 31Mar2020): finished  209 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stderr",
       "text": [
        "/home/runner/.local/share/virtualenvs/covid19-sir-kT3BL-HO/lib/python3.8/site-packages/scipy/interpolate/fitpack2.py:253: UserWarning: \n",
        "The maximal number of iterations maxit (set to 20 by the program)\n",
        "allowed for finding a smoothing spline with fp=s has been reached: s\n",
        "too small.\n",
        "There is an approximation returned but the corresponding weighted sum\n",
        "of squared residuals does not satisfy the condition abs(fp-s)/s < tol.\n",
        "  warnings.warn(message)\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tGBR,  8th phase (12Oct2020 - 19Oct2020): finished  195 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tFRA,  6th phase (15Sep2020 - 22Sep2020): finished  212 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tFRA, 10th phase (16Oct2020 - 21Oct2020): finished  220 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tDNK,  9th phase (16Oct2020 - 23Oct2020): finished  212 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tGBR, 14th phase (24Nov2020 - 30Nov2020): finished  216 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tDEU,  2nd phase (01Apr2020 - 14Apr2020): finished  259 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tDEU,  8th phase (05Oct2020 - 14Oct2020): finished  242 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tGBR,  1st phase (02Apr2020 - 20Apr2020): finished  219 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tDEU, 11th phase (28Oct2020 - 02Nov2020): finished  220 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tGBR,  0th phase (12Feb2020 - 01Apr2020): finished  178 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tDNK,  6th phase (17Sep2020 - 24Sep2020): finished  191 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tDEU, 12th phase (03Nov2020 - 12Nov2020): finished  188 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stderr",
       "text": [
        "/home/runner/.local/share/virtualenvs/covid19-sir-kT3BL-HO/lib/python3.8/site-packages/scipy/interpolate/fitpack2.py:253: UserWarning: \n",
        "The maximal number of iterations maxit (set to 20 by the program)\n",
        "allowed for finding a smoothing spline with fp=s has been reached: s\n",
        "too small.\n",
        "There is an approximation returned but the corresponding weighted sum\n",
        "of squared residuals does not satisfy the condition abs(fp-s)/s < tol.\n",
        "  warnings.warn(message)\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tDEU, 13th phase (13Nov2020 - 24Nov2020): finished  197 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tFRA,  7th phase (23Sep2020 - 01Oct2020): finished  271 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tGBR,  7th phase (03Oct2020 - 11Oct2020): finished  280 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tUKR,  2nd phase (26Jun2020 - 29Jul2020): finished  286 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stderr",
       "text": [
        "/home/runner/.local/share/virtualenvs/covid19-sir-kT3BL-HO/lib/python3.8/site-packages/scipy/interpolate/fitpack2.py:253: UserWarning: \n",
        "The maximal number of iterations maxit (set to 20 by the program)\n",
        "allowed for finding a smoothing spline with fp=s has been reached: s\n",
        "too small.\n",
        "There is an approximation returned but the corresponding weighted sum\n",
        "of squared residuals does not satisfy the condition abs(fp-s)/s < tol.\n",
        "  warnings.warn(message)\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tDNK, 11th phase (30Oct2020 - 04Nov2020): finished  292 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tUKR, 12th phase (13Nov2020 - 18Nov2020): finished  292 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tFRA,  4th phase (19Aug2020 - 02Sep2020): finished  281 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tUKR,  7th phase (03Oct2020 - 12Oct2020): finished  274 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tUKR,  5th phase (07Sep2020 - 20Sep2020): finished  273 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stderr",
       "text": [
        "/home/runner/.local/share/virtualenvs/covid19-sir-kT3BL-HO/lib/python3.8/site-packages/scipy/interpolate/fitpack2.py:253: UserWarning: \n",
        "The maximal number of iterations maxit (set to 20 by the program)\n",
        "allowed for finding a smoothing spline with fp=s has been reached: s\n",
        "too small.\n",
        "There is an approximation returned but the corresponding weighted sum\n",
        "of squared residuals does not satisfy the condition abs(fp-s)/s < tol.\n",
        "  warnings.warn(message)\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tDNK, 13th phase (11Nov2020 - 16Nov2020): finished  346 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tDNK, 12th phase (05Nov2020 - 10Nov2020): finished  353 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tGBR,  3rd phase (10May2020 - 11Jun2020): finished  344 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tFRA,  0th phase (07Feb2020 - 29Mar2020): finished  340 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stderr",
       "text": [
        "/home/runner/.local/share/virtualenvs/covid19-sir-kT3BL-HO/lib/python3.8/site-packages/scipy/interpolate/fitpack2.py:253: UserWarning: \n",
        "The maximal number of iterations maxit (set to 20 by the program)\n",
        "allowed for finding a smoothing spline with fp=s has been reached: s\n",
        "too small.\n",
        "There is an approximation returned but the corresponding weighted sum\n",
        "of squared residuals does not satisfy the condition abs(fp-s)/s < tol.\n",
        "  warnings.warn(message)\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tDNK,  5th phase (06Sep2020 - 16Sep2020): finished  368 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tUKR, 13th phase (19Nov2020 - 24Nov2020): finished  369 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tGBR, 10th phase (26Oct2020 - 05Nov2020): finished  369 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tFRA,  5th phase (03Sep2020 - 14Sep2020): finished  368 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stderr",
       "text": [
        "/home/runner/.local/share/virtualenvs/covid19-sir-kT3BL-HO/lib/python3.8/site-packages/scipy/interpolate/fitpack2.py:253: UserWarning: \n",
        "The maximal number of iterations maxit (set to 20 by the program)\n",
        "allowed for finding a smoothing spline with fp=s has been reached: s\n",
        "too small.\n",
        "There is an approximation returned but the corresponding weighted sum\n",
        "of squared residuals does not satisfy the condition abs(fp-s)/s < tol.\n",
        "  warnings.warn(message)\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tDNK,  8th phase (06Oct2020 - 15Oct2020): finished  368 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tDNK,  1st phase (13Apr2020 - 02May2020): finished  360 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tDNK,  3rd phase (12Jun2020 - 06Aug2020): finished  351 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tFRA,  8th phase (02Oct2020 - 08Oct2020): finished  365 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tDNK, 14th phase (17Nov2020 - 26Nov2020): finished  367 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tDNK, 15th phase (27Nov2020 - 07Dec2020): finished  366 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tGBR, 13th phase (18Nov2020 - 23Nov2020): finished  371 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stderr",
       "text": [
        "/home/runner/.local/share/virtualenvs/covid19-sir-kT3BL-HO/lib/python3.8/site-packages/scipy/interpolate/fitpack2.py:253: UserWarning: \n",
        "The maximal number of iterations maxit (set to 20 by the program)\n",
        "allowed for finding a smoothing spline with fp=s has been reached: s\n",
        "too small.\n",
        "There is an approximation returned but the corresponding weighted sum\n",
        "of squared residuals does not satisfy the condition abs(fp-s)/s < tol.\n",
        "  warnings.warn(message)\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tGBR,  9th phase (20Oct2020 - 25Oct2020): finished  370 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stderr",
       "text": [
        "/home/runner/.local/share/virtualenvs/covid19-sir-kT3BL-HO/lib/python3.8/site-packages/scipy/interpolate/fitpack2.py:253: UserWarning: \n",
        "The maximal number of iterations maxit (set to 20 by the program)\n",
        "allowed for finding a smoothing spline with fp=s has been reached: s\n",
        "too small.\n",
        "There is an approximation returned but the corresponding weighted sum\n",
        "of squared residuals does not satisfy the condition abs(fp-s)/s < tol.\n",
        "  warnings.warn(message)\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tUKR,  0th phase (21Mar2020 - 16May2020): finished  355 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tFRA,  9th phase (09Oct2020 - 15Oct2020): finished  368 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tFRA, 14th phase (17Nov2020 - 25Nov2020): finished  370 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tDEU,  9th phase (15Oct2020 - 21Oct2020): finished  370 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tDEU,  4th phase (11May2020 - 08Jul2020): finished  352 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tUKR,  4th phase (21Aug2020 - 06Sep2020): finished  364 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tGBR, 12th phase (12Nov2020 - 17Nov2020): finished  373 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tUKR,  3rd phase (30Jul2020 - 20Aug2020): finished  364 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stderr",
       "text": [
        "/home/runner/.local/share/virtualenvs/covid19-sir-kT3BL-HO/lib/python3.8/site-packages/scipy/interpolate/fitpack2.py:253: UserWarning: \n",
        "The maximal number of iterations maxit (set to 20 by the program)\n",
        "allowed for finding a smoothing spline with fp=s has been reached: s\n",
        "too small.\n",
        "There is an approximation returned but the corresponding weighted sum\n",
        "of squared residuals does not satisfy the condition abs(fp-s)/s < tol.\n",
        "  warnings.warn(message)\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tUKR,  8th phase (13Oct2020 - 21Oct2020): finished  341 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tGBR,  6th phase (18Sep2020 - 02Oct2020): finished  343 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tFRA, 15th phase (26Nov2020 - 07Dec2020): finished  347 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tGBR,  5th phase (19Aug2020 - 17Sep2020): finished  345 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tGBR,  4th phase (12Jun2020 - 18Aug2020): finished  351 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tUKR, 11th phase (06Nov2020 - 12Nov2020): finished  369 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tDNK,  2nd phase (03May2020 - 11Jun2020): finished  350 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tDNK, 10th phase (24Oct2020 - 29Oct2020): finished  368 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stderr",
       "text": [
        "/home/runner/.local/share/virtualenvs/covid19-sir-kT3BL-HO/lib/python3.8/site-packages/scipy/interpolate/fitpack2.py:253: UserWarning: \n",
        "The maximal number of iterations maxit (set to 20 by the program)\n",
        "allowed for finding a smoothing spline with fp=s has been reached: s\n",
        "too small.\n",
        "There is an approximation returned but the corresponding weighted sum\n",
        "of squared residuals does not satisfy the condition abs(fp-s)/s < tol.\n",
        "  warnings.warn(message)\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tGBR, 11th phase (06Nov2020 - 11Nov2020): finished  370 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tFRA, 11th phase (22Oct2020 - 31Oct2020): finished  366 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tDNK,  0th phase (19Mar2020 - 12Apr2020): finished  365 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tDEU,  0th phase (14Jan2020 - 21Mar2020): finished  351 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tDEU,  7th phase (15Sep2020 - 04Oct2020): finished  373 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stderr",
       "text": [
        "/home/runner/.local/share/virtualenvs/covid19-sir-kT3BL-HO/lib/python3.8/site-packages/scipy/interpolate/fitpack2.py:253: UserWarning: \n",
        "The maximal number of iterations maxit (set to 20 by the program)\n",
        "allowed for finding a smoothing spline with fp=s has been reached: s\n",
        "too small.\n",
        "There is an approximation returned but the corresponding weighted sum\n",
        "of squared residuals does not satisfy the condition abs(fp-s)/s < tol.\n",
        "  warnings.warn(message)\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tDEU,  6th phase (18Aug2020 - 14Sep2020): finished  367 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tDEU, 15th phase (01Dec2020 - 07Dec2020): finished  379 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tFRA,  2nd phase (20Apr2020 - 07Jul2020): finished  352 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stderr",
       "text": [
        "/home/runner/.local/share/virtualenvs/covid19-sir-kT3BL-HO/lib/python3.8/site-packages/scipy/interpolate/fitpack2.py:253: UserWarning: \n",
        "The maximal number of iterations maxit (set to 20 by the program)\n",
        "allowed for finding a smoothing spline with fp=s has been reached: s\n",
        "too small.\n",
        "There is an approximation returned but the corresponding weighted sum\n",
        "of squared residuals does not satisfy the condition abs(fp-s)/s < tol.\n",
        "  warnings.warn(message)\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tDNK,  4th phase (07Aug2020 - 05Sep2020): finished  368 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tGBR,  2nd phase (21Apr2020 - 09May2020): finished  374 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stderr",
       "text": [
        "/home/runner/.local/share/virtualenvs/covid19-sir-kT3BL-HO/lib/python3.8/site-packages/scipy/interpolate/fitpack2.py:253: UserWarning: \n",
        "The maximal number of iterations maxit (set to 20 by the program)\n",
        "allowed for finding a smoothing spline with fp=s has been reached: s\n",
        "too small.\n",
        "There is an approximation returned but the corresponding weighted sum\n",
        "of squared residuals does not satisfy the condition abs(fp-s)/s < tol.\n",
        "  warnings.warn(message)\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tFRA,  1st phase (30Mar2020 - 19Apr2020): finished  367 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tFRA,  3rd phase (08Jul2020 - 18Aug2020): finished  365 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tDEU, 10th phase (22Oct2020 - 27Oct2020): finished  380 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tUKR,  9th phase (22Oct2020 - 29Oct2020): finished  380 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tDEU, 14th phase (25Nov2020 - 30Nov2020): finished  380 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tUKR,  6th phase (21Sep2020 - 02Oct2020): finished  378 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "Completed optimization. Total: 3 min 38 sec\n"
       ]
      }
     ],
     "prompt_number": 11
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "# Show summary\n",
      "analyser.summary(countries=countries_show)"
     ],
     "language": "python",
     "metadata": {},
     "outputs": [
      {
       "html": [
        "<div>\n",
        "<style scoped>\n",
        "    .dataframe tbody tr th:only-of-type {\n",
        "        vertical-align: middle;\n",
        "    }\n",
        "\n",
        "    .dataframe tbody tr th {\n",
        "        vertical-align: top;\n",
        "    }\n",
        "\n",
        "    .dataframe thead th {\n",
        "        text-align: right;\n",
        "    }\n",
        "</style>\n",
        "<table border=\"1\" class=\"dataframe\">\n",
        "  <thead>\n",
        "    <tr style=\"text-align: right;\">\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th>Type</th>\n",
        "      <th>Start</th>\n",
        "      <th>End</th>\n",
        "      <th>Population</th>\n",
        "      <th>ODE</th>\n",
        "      <th>Rt</th>\n",
        "      <th>theta</th>\n",
        "      <th>kappa</th>\n",
        "      <th>rho</th>\n",
        "      <th>sigma</th>\n",
        "      <th>tau</th>\n",
        "      <th>alpha1 [-]</th>\n",
        "      <th>1/gamma [day]</th>\n",
        "      <th>1/beta [day]</th>\n",
        "      <th>1/alpha2 [day]</th>\n",
        "      <th>RMSLE</th>\n",
        "      <th>Trials</th>\n",
        "      <th>Runtime</th>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>Country</th>\n",
        "      <th>Phase</th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "    </tr>\n",
        "  </thead>\n",
        "  <tbody>\n",
        "    <tr>\n",
        "      <th rowspan=\"5\" valign=\"top\">Germany</th>\n",
        "      <th>0th</th>\n",
        "      <td>Past</td>\n",
        "      <td>14Jan2020</td>\n",
        "      <td>21Mar2020</td>\n",
        "      <td>82905782</td>\n",
        "      <td>SIR-F</td>\n",
        "      <td>20.62</td>\n",
        "      <td>0.0288458</td>\n",
        "      <td>4.87814e-05</td>\n",
        "      <td>0.0282203</td>\n",
        "      <td>0.00128031</td>\n",
        "      <td>360</td>\n",
        "      <td>0.029</td>\n",
        "      <td>195</td>\n",
        "      <td>8</td>\n",
        "      <td>5124</td>\n",
        "      <td>1.27733</td>\n",
        "      <td>351</td>\n",
        "      <td>0 min 10 sec</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>1st</th>\n",
        "      <td>Past</td>\n",
        "      <td>22Mar2020</td>\n",
        "      <td>31Mar2020</td>\n",
        "      <td>82905782</td>\n",
        "      <td>SIR-F</td>\n",
        "      <td>3.02</td>\n",
        "      <td>0.0176643</td>\n",
        "      <td>0.000867444</td>\n",
        "      <td>0.0304642</td>\n",
        "      <td>0.00905473</td>\n",
        "      <td>360</td>\n",
        "      <td>0.018</td>\n",
        "      <td>27</td>\n",
        "      <td>8</td>\n",
        "      <td>288</td>\n",
        "      <td>0.0897675</td>\n",
        "      <td>209</td>\n",
        "      <td>0 min 10 sec</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>2nd</th>\n",
        "      <td>Past</td>\n",
        "      <td>01Apr2020</td>\n",
        "      <td>14Apr2020</td>\n",
        "      <td>82905782</td>\n",
        "      <td>SIR-F</td>\n",
        "      <td>0.9</td>\n",
        "      <td>0.0232325</td>\n",
        "      <td>0.00097376</td>\n",
        "      <td>0.0194538</td>\n",
        "      <td>0.0200895</td>\n",
        "      <td>360</td>\n",
        "      <td>0.023</td>\n",
        "      <td>12</td>\n",
        "      <td>12</td>\n",
        "      <td>256</td>\n",
        "      <td>0.066155</td>\n",
        "      <td>259</td>\n",
        "      <td>0 min 10 sec</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>3rd</th>\n",
        "      <td>Past</td>\n",
        "      <td>15Apr2020</td>\n",
        "      <td>10May2020</td>\n",
        "      <td>82905782</td>\n",
        "      <td>SIR-F</td>\n",
        "      <td>0.63</td>\n",
        "      <td>0.0234534</td>\n",
        "      <td>0.000616796</td>\n",
        "      <td>0.0179527</td>\n",
        "      <td>0.0270944</td>\n",
        "      <td>360</td>\n",
        "      <td>0.023</td>\n",
        "      <td>9</td>\n",
        "      <td>13</td>\n",
        "      <td>405</td>\n",
        "      <td>0.096866</td>\n",
        "      <td>204</td>\n",
        "      <td>0 min 10 sec</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>4th</th>\n",
        "      <td>Past</td>\n",
        "      <td>11May2020</td>\n",
        "      <td>08Jul2020</td>\n",
        "      <td>82905782</td>\n",
        "      <td>SIR-F</td>\n",
        "      <td>0.83</td>\n",
        "      <td>0.0163263</td>\n",
        "      <td>4.86295e-05</td>\n",
        "      <td>0.0205119</td>\n",
        "      <td>0.0242787</td>\n",
        "      <td>360</td>\n",
        "      <td>0.016</td>\n",
        "      <td>10</td>\n",
        "      <td>12</td>\n",
        "      <td>5140</td>\n",
        "      <td>0.145092</td>\n",
        "      <td>352</td>\n",
        "      <td>0 min 10 sec</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>...</th>\n",
        "      <th>...</th>\n",
        "      <td>...</td>\n",
        "      <td>...</td>\n",
        "      <td>...</td>\n",
        "      <td>...</td>\n",
        "      <td>...</td>\n",
        "      <td>...</td>\n",
        "      <td>...</td>\n",
        "      <td>...</td>\n",
        "      <td>...</td>\n",
        "      <td>...</td>\n",
        "      <td>...</td>\n",
        "      <td>...</td>\n",
        "      <td>...</td>\n",
        "      <td>...</td>\n",
        "      <td>...</td>\n",
        "      <td>...</td>\n",
        "      <td>...</td>\n",
        "      <td>...</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th rowspan=\"5\" valign=\"top\">France</th>\n",
        "      <th>11th</th>\n",
        "      <td>Past</td>\n",
        "      <td>22Oct2020</td>\n",
        "      <td>31Oct2020</td>\n",
        "      <td>66977107</td>\n",
        "      <td>SIR-F</td>\n",
        "      <td>2.52</td>\n",
        "      <td>0.00184299</td>\n",
        "      <td>0.000150047</td>\n",
        "      <td>0.0287121</td>\n",
        "      <td>0.0112353</td>\n",
        "      <td>360</td>\n",
        "      <td>0.002</td>\n",
        "      <td>22</td>\n",
        "      <td>8</td>\n",
        "      <td>1666</td>\n",
        "      <td>0.0442647</td>\n",
        "      <td>366</td>\n",
        "      <td>0 min 10 sec</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>12th</th>\n",
        "      <td>Past</td>\n",
        "      <td>01Nov2020</td>\n",
        "      <td>10Nov2020</td>\n",
        "      <td>66977107</td>\n",
        "      <td>SIR-F</td>\n",
        "      <td>1.47</td>\n",
        "      <td>0.00146091</td>\n",
        "      <td>0.000191072</td>\n",
        "      <td>0.0266021</td>\n",
        "      <td>0.0178662</td>\n",
        "      <td>360</td>\n",
        "      <td>0.001</td>\n",
        "      <td>13</td>\n",
        "      <td>9</td>\n",
        "      <td>1308</td>\n",
        "      <td>0.0411894</td>\n",
        "      <td>221</td>\n",
        "      <td>0 min 10 sec</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>13th</th>\n",
        "      <td>Past</td>\n",
        "      <td>11Nov2020</td>\n",
        "      <td>16Nov2020</td>\n",
        "      <td>66977107</td>\n",
        "      <td>-</td>\n",
        "      <td>-</td>\n",
        "      <td>-</td>\n",
        "      <td>-</td>\n",
        "      <td>-</td>\n",
        "      <td>-</td>\n",
        "      <td>-</td>\n",
        "      <td>-</td>\n",
        "      <td>-</td>\n",
        "      <td>-</td>\n",
        "      <td>-</td>\n",
        "      <td>-</td>\n",
        "      <td>-</td>\n",
        "      <td>-</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>14th</th>\n",
        "      <td>Past</td>\n",
        "      <td>17Nov2020</td>\n",
        "      <td>25Nov2020</td>\n",
        "      <td>66977107</td>\n",
        "      <td>SIR-F</td>\n",
        "      <td>0.41</td>\n",
        "      <td>0.000571028</td>\n",
        "      <td>0.00042599</td>\n",
        "      <td>0.0126256</td>\n",
        "      <td>0.0304919</td>\n",
        "      <td>360</td>\n",
        "      <td>0.001</td>\n",
        "      <td>8</td>\n",
        "      <td>19</td>\n",
        "      <td>586</td>\n",
        "      <td>0.0297736</td>\n",
        "      <td>370</td>\n",
        "      <td>0 min 10 sec</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>15th</th>\n",
        "      <td>Past</td>\n",
        "      <td>26Nov2020</td>\n",
        "      <td>07Dec2020</td>\n",
        "      <td>66977107</td>\n",
        "      <td>SIR-F</td>\n",
        "      <td>0.53</td>\n",
        "      <td>0.0359855</td>\n",
        "      <td>4.8336e-05</td>\n",
        "      <td>0.0187848</td>\n",
        "      <td>0.0343751</td>\n",
        "      <td>360</td>\n",
        "      <td>0.036</td>\n",
        "      <td>7</td>\n",
        "      <td>13</td>\n",
        "      <td>5172</td>\n",
        "      <td>0.0576011</td>\n",
        "      <td>347</td>\n",
        "      <td>0 min 10 sec</td>\n",
        "    </tr>\n",
        "  </tbody>\n",
        "</table>\n",
        "<p>80 rows \u00d7 18 columns</p>\n",
        "</div>"
       ],
       "output_type": "pyout",
       "prompt_number": 12,
       "text": [
        "               Type      Start        End  Population    ODE     Rt  \\\n",
        "Country Phase                                                         \n",
        "Germany 0th    Past  14Jan2020  21Mar2020    82905782  SIR-F  20.62   \n",
        "        1st    Past  22Mar2020  31Mar2020    82905782  SIR-F   3.02   \n",
        "        2nd    Past  01Apr2020  14Apr2020    82905782  SIR-F    0.9   \n",
        "        3rd    Past  15Apr2020  10May2020    82905782  SIR-F   0.63   \n",
        "        4th    Past  11May2020  08Jul2020    82905782  SIR-F   0.83   \n",
        "...             ...        ...        ...         ...    ...    ...   \n",
        "France  11th   Past  22Oct2020  31Oct2020    66977107  SIR-F   2.52   \n",
        "        12th   Past  01Nov2020  10Nov2020    66977107  SIR-F   1.47   \n",
        "        13th   Past  11Nov2020  16Nov2020    66977107      -      -   \n",
        "        14th   Past  17Nov2020  25Nov2020    66977107  SIR-F   0.41   \n",
        "        15th   Past  26Nov2020  07Dec2020    66977107  SIR-F   0.53   \n",
        "\n",
        "                     theta        kappa        rho       sigma  tau  \\\n",
        "Country Phase                                                         \n",
        "Germany 0th      0.0288458  4.87814e-05  0.0282203  0.00128031  360   \n",
        "        1st      0.0176643  0.000867444  0.0304642  0.00905473  360   \n",
        "        2nd      0.0232325   0.00097376  0.0194538   0.0200895  360   \n",
        "        3rd      0.0234534  0.000616796  0.0179527   0.0270944  360   \n",
        "        4th      0.0163263  4.86295e-05  0.0205119   0.0242787  360   \n",
        "...                    ...          ...        ...         ...  ...   \n",
        "France  11th    0.00184299  0.000150047  0.0287121   0.0112353  360   \n",
        "        12th    0.00146091  0.000191072  0.0266021   0.0178662  360   \n",
        "        13th             -            -          -           -    -   \n",
        "        14th   0.000571028   0.00042599  0.0126256   0.0304919  360   \n",
        "        15th     0.0359855   4.8336e-05  0.0187848   0.0343751  360   \n",
        "\n",
        "              alpha1 [-] 1/gamma [day] 1/beta [day] 1/alpha2 [day]      RMSLE  \\\n",
        "Country Phase                                                                   \n",
        "Germany 0th        0.029           195            8           5124    1.27733   \n",
        "        1st        0.018            27            8            288  0.0897675   \n",
        "        2nd        0.023            12           12            256   0.066155   \n",
        "        3rd        0.023             9           13            405   0.096866   \n",
        "        4th        0.016            10           12           5140   0.145092   \n",
        "...                  ...           ...          ...            ...        ...   \n",
        "France  11th       0.002            22            8           1666  0.0442647   \n",
        "        12th       0.001            13            9           1308  0.0411894   \n",
        "        13th           -             -            -              -          -   \n",
        "        14th       0.001             8           19            586  0.0297736   \n",
        "        15th       0.036             7           13           5172  0.0576011   \n",
        "\n",
        "              Trials       Runtime  \n",
        "Country Phase                       \n",
        "Germany 0th      351  0 min 10 sec  \n",
        "        1st      209  0 min 10 sec  \n",
        "        2nd      259  0 min 10 sec  \n",
        "        3rd      204  0 min 10 sec  \n",
        "        4th      352  0 min 10 sec  \n",
        "...              ...           ...  \n",
        "France  11th     366  0 min 10 sec  \n",
        "        12th     221  0 min 10 sec  \n",
        "        13th       -             -  \n",
        "        14th     370  0 min 10 sec  \n",
        "        15th     347  0 min 10 sec  \n",
        "\n",
        "[80 rows x 18 columns]"
       ]
      }
     ],
     "prompt_number": 12
    },
    {
     "cell_type": "markdown",
     "metadata": {},
     "source": [
      "## Compare the history of parameters\n",
      "Here, compare the history of parameter values if countries."
     ]
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "# All parameter/day parameter/Rt/OxCGRT\n",
      "analyser.track().head()"
     ],
     "language": "python",
     "metadata": {},
     "outputs": [
      {
       "html": [
        "<div>\n",
        "<style scoped>\n",
        "    .dataframe tbody tr th:only-of-type {\n",
        "        vertical-align: middle;\n",
        "    }\n",
        "\n",
        "    .dataframe tbody tr th {\n",
        "        vertical-align: top;\n",
        "    }\n",
        "\n",
        "    .dataframe thead th {\n",
        "        text-align: right;\n",
        "    }\n",
        "</style>\n",
        "<table border=\"1\" class=\"dataframe\">\n",
        "  <thead>\n",
        "    <tr style=\"text-align: right;\">\n",
        "      <th></th>\n",
        "      <th>Date</th>\n",
        "      <th>Country</th>\n",
        "      <th>theta</th>\n",
        "      <th>kappa</th>\n",
        "      <th>rho</th>\n",
        "      <th>sigma</th>\n",
        "      <th>alpha1 [-]</th>\n",
        "      <th>1/alpha2 [day]</th>\n",
        "      <th>1/beta [day]</th>\n",
        "      <th>1/gamma [day]</th>\n",
        "      <th>...</th>\n",
        "      <th>Cancel_events</th>\n",
        "      <th>Gatherings_restrictions</th>\n",
        "      <th>Transport_closing</th>\n",
        "      <th>Stay_home_restrictions</th>\n",
        "      <th>Internal_movement_restrictions</th>\n",
        "      <th>International_movement_restrictions</th>\n",
        "      <th>Information_campaigns</th>\n",
        "      <th>Testing_policy</th>\n",
        "      <th>Contact_tracing</th>\n",
        "      <th>Stringency_index</th>\n",
        "    </tr>\n",
        "  </thead>\n",
        "  <tbody>\n",
        "    <tr>\n",
        "      <th>0</th>\n",
        "      <td>2020-01-14</td>\n",
        "      <td>Germany</td>\n",
        "      <td>0.0288458</td>\n",
        "      <td>4.87814e-05</td>\n",
        "      <td>0.0282203</td>\n",
        "      <td>0.00128031</td>\n",
        "      <td>0.029</td>\n",
        "      <td>5124</td>\n",
        "      <td>8</td>\n",
        "      <td>195</td>\n",
        "      <td>...</td>\n",
        "      <td>0</td>\n",
        "      <td>0</td>\n",
        "      <td>0</td>\n",
        "      <td>0</td>\n",
        "      <td>0</td>\n",
        "      <td>0</td>\n",
        "      <td>0</td>\n",
        "      <td>0</td>\n",
        "      <td>0</td>\n",
        "      <td>0.0</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>1</th>\n",
        "      <td>2020-01-14</td>\n",
        "      <td>Germany</td>\n",
        "      <td>0.0288458</td>\n",
        "      <td>4.87814e-05</td>\n",
        "      <td>0.0282203</td>\n",
        "      <td>0.00128031</td>\n",
        "      <td>0.029</td>\n",
        "      <td>5124</td>\n",
        "      <td>8</td>\n",
        "      <td>195</td>\n",
        "      <td>...</td>\n",
        "      <td>0</td>\n",
        "      <td>0</td>\n",
        "      <td>0</td>\n",
        "      <td>0</td>\n",
        "      <td>0</td>\n",
        "      <td>0</td>\n",
        "      <td>0</td>\n",
        "      <td>0</td>\n",
        "      <td>0</td>\n",
        "      <td>0.0</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>2</th>\n",
        "      <td>2020-01-14</td>\n",
        "      <td>Germany</td>\n",
        "      <td>0.0288458</td>\n",
        "      <td>4.87814e-05</td>\n",
        "      <td>0.0282203</td>\n",
        "      <td>0.00128031</td>\n",
        "      <td>0.029</td>\n",
        "      <td>5124</td>\n",
        "      <td>8</td>\n",
        "      <td>195</td>\n",
        "      <td>...</td>\n",
        "      <td>0</td>\n",
        "      <td>0</td>\n",
        "      <td>0</td>\n",
        "      <td>0</td>\n",
        "      <td>0</td>\n",
        "      <td>0</td>\n",
        "      <td>0</td>\n",
        "      <td>0</td>\n",
        "      <td>0</td>\n",
        "      <td>0.0</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>3</th>\n",
        "      <td>2020-01-14</td>\n",
        "      <td>Germany</td>\n",
        "      <td>0.0288458</td>\n",
        "      <td>4.87814e-05</td>\n",
        "      <td>0.0282203</td>\n",
        "      <td>0.00128031</td>\n",
        "      <td>0.029</td>\n",
        "      <td>5124</td>\n",
        "      <td>8</td>\n",
        "      <td>195</td>\n",
        "      <td>...</td>\n",
        "      <td>0</td>\n",
        "      <td>0</td>\n",
        "      <td>0</td>\n",
        "      <td>0</td>\n",
        "      <td>0</td>\n",
        "      <td>0</td>\n",
        "      <td>0</td>\n",
        "      <td>0</td>\n",
        "      <td>0</td>\n",
        "      <td>0.0</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>4</th>\n",
        "      <td>2020-01-14</td>\n",
        "      <td>Germany</td>\n",
        "      <td>0.0288458</td>\n",
        "      <td>4.87814e-05</td>\n",
        "      <td>0.0282203</td>\n",
        "      <td>0.00128031</td>\n",
        "      <td>0.029</td>\n",
        "      <td>5124</td>\n",
        "      <td>8</td>\n",
        "      <td>195</td>\n",
        "      <td>...</td>\n",
        "      <td>0</td>\n",
        "      <td>0</td>\n",
        "      <td>0</td>\n",
        "      <td>0</td>\n",
        "      <td>0</td>\n",
        "      <td>0</td>\n",
        "      <td>0</td>\n",
        "      <td>0</td>\n",
        "      <td>0</td>\n",
        "      <td>0.0</td>\n",
        "    </tr>\n",
        "  </tbody>\n",
        "</table>\n",
        "<p>5 rows \u00d7 23 columns</p>\n",
        "</div>"
       ],
       "output_type": "pyout",
       "prompt_number": 13,
       "text": [
        "        Date  Country      theta        kappa        rho       sigma  \\\n",
        "0 2020-01-14  Germany  0.0288458  4.87814e-05  0.0282203  0.00128031   \n",
        "1 2020-01-14  Germany  0.0288458  4.87814e-05  0.0282203  0.00128031   \n",
        "2 2020-01-14  Germany  0.0288458  4.87814e-05  0.0282203  0.00128031   \n",
        "3 2020-01-14  Germany  0.0288458  4.87814e-05  0.0282203  0.00128031   \n",
        "4 2020-01-14  Germany  0.0288458  4.87814e-05  0.0282203  0.00128031   \n",
        "\n",
        "  alpha1 [-] 1/alpha2 [day] 1/beta [day] 1/gamma [day]  ... Cancel_events  \\\n",
        "0      0.029           5124            8           195  ...             0   \n",
        "1      0.029           5124            8           195  ...             0   \n",
        "2      0.029           5124            8           195  ...             0   \n",
        "3      0.029           5124            8           195  ...             0   \n",
        "4      0.029           5124            8           195  ...             0   \n",
        "\n",
        "   Gatherings_restrictions  Transport_closing  Stay_home_restrictions  \\\n",
        "0                        0                  0                       0   \n",
        "1                        0                  0                       0   \n",
        "2                        0                  0                       0   \n",
        "3                        0                  0                       0   \n",
        "4                        0                  0                       0   \n",
        "\n",
        "   Internal_movement_restrictions  International_movement_restrictions  \\\n",
        "0                               0                                    0   \n",
        "1                               0                                    0   \n",
        "2                               0                                    0   \n",
        "3                               0                                    0   \n",
        "4                               0                                    0   \n",
        "\n",
        "   Information_campaigns  Testing_policy  Contact_tracing  Stringency_index  \n",
        "0                      0               0                0               0.0  \n",
        "1                      0               0                0               0.0  \n",
        "2                      0               0                0               0.0  \n",
        "3                      0               0                0               0.0  \n",
        "4                      0               0                0               0.0  \n",
        "\n",
        "[5 rows x 23 columns]"
       ]
      }
     ],
     "prompt_number": 13
    },
    {
     "cell_type": "heading",
     "level": 3,
     "metadata": {},
     "source": [
      "$Rt$: Reprodcution number $\\mathrm{[-]}$"
     ]
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "analyser.history(\"Rt\", roll_window=None).tail()"
     ],
     "language": "python",
     "metadata": {},
     "outputs": [
      {
       "output_type": "display_data",
       "png": "\n",
       "text": [
        "<Figure size 648x432 with 1 Axes>"
       ]
      },
      {
       "html": [
        "<div>\n",
        "<style scoped>\n",
        "    .dataframe tbody tr th:only-of-type {\n",
        "        vertical-align: middle;\n",
        "    }\n",
        "\n",
        "    .dataframe tbody tr th {\n",
        "        vertical-align: top;\n",
        "    }\n",
        "\n",
        "    .dataframe thead th {\n",
        "        text-align: right;\n",
        "    }\n",
        "</style>\n",
        "<table border=\"1\" class=\"dataframe\">\n",
        "  <thead>\n",
        "    <tr style=\"text-align: right;\">\n",
        "      <th>Country</th>\n",
        "      <th>Denmark</th>\n",
        "      <th>France</th>\n",
        "      <th>Germany</th>\n",
        "      <th>Ukraine</th>\n",
        "      <th>United Kingdom</th>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>Date</th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "    </tr>\n",
        "  </thead>\n",
        "  <tbody>\n",
        "    <tr>\n",
        "      <th>2020-12-03</th>\n",
        "      <td>1.27</td>\n",
        "      <td>0.53</td>\n",
        "      <td>1.16</td>\n",
        "      <td>1.85</td>\n",
        "      <td>0.67</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>2020-12-04</th>\n",
        "      <td>1.27</td>\n",
        "      <td>0.53</td>\n",
        "      <td>1.16</td>\n",
        "      <td>1.85</td>\n",
        "      <td>0.67</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>2020-12-05</th>\n",
        "      <td>1.27</td>\n",
        "      <td>0.53</td>\n",
        "      <td>1.16</td>\n",
        "      <td>1.85</td>\n",
        "      <td>0.67</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>2020-12-06</th>\n",
        "      <td>1.27</td>\n",
        "      <td>0.53</td>\n",
        "      <td>1.16</td>\n",
        "      <td>1.85</td>\n",
        "      <td>0.67</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>2020-12-07</th>\n",
        "      <td>1.27</td>\n",
        "      <td>0.53</td>\n",
        "      <td>1.16</td>\n",
        "      <td>1.85</td>\n",
        "      <td>0.67</td>\n",
        "    </tr>\n",
        "  </tbody>\n",
        "</table>\n",
        "</div>"
       ],
       "output_type": "pyout",
       "prompt_number": 14,
       "text": [
        "Country     Denmark  France  Germany  Ukraine  United Kingdom\n",
        "Date                                                         \n",
        "2020-12-03     1.27    0.53     1.16     1.85            0.67\n",
        "2020-12-04     1.27    0.53     1.16     1.85            0.67\n",
        "2020-12-05     1.27    0.53     1.16     1.85            0.67\n",
        "2020-12-06     1.27    0.53     1.16     1.85            0.67\n",
        "2020-12-07     1.27    0.53     1.16     1.85            0.67"
       ]
      }
     ],
     "prompt_number": 14
    },
    {
     "cell_type": "heading",
     "level": 3,
     "metadata": {},
     "source": [
      "$\\rho$: Effective contact rate $\\mathrm{[-]}$"
     ]
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "analyser.history(\"rho\", roll_window=None).tail()"
     ],
     "language": "python",
     "metadata": {},
     "outputs": [
      {
       "output_type": "display_data",
       "png": "\n",
       "text": [
        "<Figure size 648x432 with 1 Axes>"
       ]
      },
      {
       "html": [
        "<div>\n",
        "<style scoped>\n",
        "    .dataframe tbody tr th:only-of-type {\n",
        "        vertical-align: middle;\n",
        "    }\n",
        "\n",
        "    .dataframe tbody tr th {\n",
        "        vertical-align: top;\n",
        "    }\n",
        "\n",
        "    .dataframe thead th {\n",
        "        text-align: right;\n",
        "    }\n",
        "</style>\n",
        "<table border=\"1\" class=\"dataframe\">\n",
        "  <thead>\n",
        "    <tr style=\"text-align: right;\">\n",
        "      <th>Country</th>\n",
        "      <th>Denmark</th>\n",
        "      <th>France</th>\n",
        "      <th>Germany</th>\n",
        "      <th>Ukraine</th>\n",
        "      <th>United Kingdom</th>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>Date</th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "    </tr>\n",
        "  </thead>\n",
        "  <tbody>\n",
        "    <tr>\n",
        "      <th>2020-12-03</th>\n",
        "      <td>0.021391</td>\n",
        "      <td>0.018785</td>\n",
        "      <td>0.023398</td>\n",
        "      <td>0.010769</td>\n",
        "      <td>0.018801</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>2020-12-04</th>\n",
        "      <td>0.021391</td>\n",
        "      <td>0.018785</td>\n",
        "      <td>0.023398</td>\n",
        "      <td>0.010769</td>\n",
        "      <td>0.018801</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>2020-12-05</th>\n",
        "      <td>0.021391</td>\n",
        "      <td>0.018785</td>\n",
        "      <td>0.023398</td>\n",
        "      <td>0.010769</td>\n",
        "      <td>0.018801</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>2020-12-06</th>\n",
        "      <td>0.021391</td>\n",
        "      <td>0.018785</td>\n",
        "      <td>0.023398</td>\n",
        "      <td>0.010769</td>\n",
        "      <td>0.018801</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>2020-12-07</th>\n",
        "      <td>0.021391</td>\n",
        "      <td>0.018785</td>\n",
        "      <td>0.023398</td>\n",
        "      <td>0.010769</td>\n",
        "      <td>0.018801</td>\n",
        "    </tr>\n",
        "  </tbody>\n",
        "</table>\n",
        "</div>"
       ],
       "output_type": "pyout",
       "prompt_number": 15,
       "text": [
        "Country      Denmark    France   Germany   Ukraine  United Kingdom\n",
        "Date                                                              \n",
        "2020-12-03  0.021391  0.018785  0.023398  0.010769        0.018801\n",
        "2020-12-04  0.021391  0.018785  0.023398  0.010769        0.018801\n",
        "2020-12-05  0.021391  0.018785  0.023398  0.010769        0.018801\n",
        "2020-12-06  0.021391  0.018785  0.023398  0.010769        0.018801\n",
        "2020-12-07  0.021391  0.018785  0.023398  0.010769        0.018801"
       ]
      }
     ],
     "prompt_number": 15
    },
    {
     "cell_type": "heading",
     "level": 3,
     "metadata": {},
     "source": [
      "$\\sigma$: Recovery rate $\\mathrm{[-]}$"
     ]
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "analyser.history(\"sigma\", roll_window=None).tail()"
     ],
     "language": "python",
     "metadata": {},
     "outputs": [
      {
       "output_type": "display_data",
       "png": "\n",
       "text": [
        "<Figure size 648x432 with 1 Axes>"
       ]
      },
      {
       "html": [
        "<div>\n",
        "<style scoped>\n",
        "    .dataframe tbody tr th:only-of-type {\n",
        "        vertical-align: middle;\n",
        "    }\n",
        "\n",
        "    .dataframe tbody tr th {\n",
        "        vertical-align: top;\n",
        "    }\n",
        "\n",
        "    .dataframe thead th {\n",
        "        text-align: right;\n",
        "    }\n",
        "</style>\n",
        "<table border=\"1\" class=\"dataframe\">\n",
        "  <thead>\n",
        "    <tr style=\"text-align: right;\">\n",
        "      <th>Country</th>\n",
        "      <th>Denmark</th>\n",
        "      <th>France</th>\n",
        "      <th>Germany</th>\n",
        "      <th>Ukraine</th>\n",
        "      <th>United Kingdom</th>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>Date</th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "    </tr>\n",
        "  </thead>\n",
        "  <tbody>\n",
        "    <tr>\n",
        "      <th>2020-12-03</th>\n",
        "      <td>0.016738</td>\n",
        "      <td>0.034375</td>\n",
        "      <td>0.020218</td>\n",
        "      <td>0.00573</td>\n",
        "      <td>0.027375</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>2020-12-04</th>\n",
        "      <td>0.016738</td>\n",
        "      <td>0.034375</td>\n",
        "      <td>0.020218</td>\n",
        "      <td>0.00573</td>\n",
        "      <td>0.027375</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>2020-12-05</th>\n",
        "      <td>0.016738</td>\n",
        "      <td>0.034375</td>\n",
        "      <td>0.020218</td>\n",
        "      <td>0.00573</td>\n",
        "      <td>0.027375</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>2020-12-06</th>\n",
        "      <td>0.016738</td>\n",
        "      <td>0.034375</td>\n",
        "      <td>0.020218</td>\n",
        "      <td>0.00573</td>\n",
        "      <td>0.027375</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>2020-12-07</th>\n",
        "      <td>0.016738</td>\n",
        "      <td>0.034375</td>\n",
        "      <td>0.020218</td>\n",
        "      <td>0.00573</td>\n",
        "      <td>0.027375</td>\n",
        "    </tr>\n",
        "  </tbody>\n",
        "</table>\n",
        "</div>"
       ],
       "output_type": "pyout",
       "prompt_number": 16,
       "text": [
        "Country      Denmark    France   Germany  Ukraine  United Kingdom\n",
        "Date                                                             \n",
        "2020-12-03  0.016738  0.034375  0.020218  0.00573        0.027375\n",
        "2020-12-04  0.016738  0.034375  0.020218  0.00573        0.027375\n",
        "2020-12-05  0.016738  0.034375  0.020218  0.00573        0.027375\n",
        "2020-12-06  0.016738  0.034375  0.020218  0.00573        0.027375\n",
        "2020-12-07  0.016738  0.034375  0.020218  0.00573        0.027375"
       ]
      }
     ],
     "prompt_number": 16
    },
    {
     "cell_type": "heading",
     "level": 3,
     "metadata": {},
     "source": [
      "$\\kappa$: Mortality rate of infected cases $\\mathrm{[-]}$"
     ]
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "analyser.history(\"kappa\", roll_window=None).tail()"
     ],
     "language": "python",
     "metadata": {},
     "outputs": [
      {
       "output_type": "display_data",
       "png": "\n",
       "text": [
        "<Figure size 648x432 with 1 Axes>"
       ]
      },
      {
       "html": [
        "<div>\n",
        "<style scoped>\n",
        "    .dataframe tbody tr th:only-of-type {\n",
        "        vertical-align: middle;\n",
        "    }\n",
        "\n",
        "    .dataframe tbody tr th {\n",
        "        vertical-align: top;\n",
        "    }\n",
        "\n",
        "    .dataframe thead th {\n",
        "        text-align: right;\n",
        "    }\n",
        "</style>\n",
        "<table border=\"1\" class=\"dataframe\">\n",
        "  <thead>\n",
        "    <tr style=\"text-align: right;\">\n",
        "      <th>Country</th>\n",
        "      <th>Denmark</th>\n",
        "      <th>France</th>\n",
        "      <th>Germany</th>\n",
        "      <th>Ukraine</th>\n",
        "      <th>United Kingdom</th>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>Date</th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "    </tr>\n",
        "  </thead>\n",
        "  <tbody>\n",
        "    <tr>\n",
        "      <th>2020-12-03</th>\n",
        "      <td>0.000098</td>\n",
        "      <td>0.000048</td>\n",
        "      <td>0.000002</td>\n",
        "      <td>0.000005</td>\n",
        "      <td>0.000298</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>2020-12-04</th>\n",
        "      <td>0.000098</td>\n",
        "      <td>0.000048</td>\n",
        "      <td>0.000002</td>\n",
        "      <td>0.000005</td>\n",
        "      <td>0.000298</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>2020-12-05</th>\n",
        "      <td>0.000098</td>\n",
        "      <td>0.000048</td>\n",
        "      <td>0.000002</td>\n",
        "      <td>0.000005</td>\n",
        "      <td>0.000298</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>2020-12-06</th>\n",
        "      <td>0.000098</td>\n",
        "      <td>0.000048</td>\n",
        "      <td>0.000002</td>\n",
        "      <td>0.000005</td>\n",
        "      <td>0.000298</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>2020-12-07</th>\n",
        "      <td>0.000098</td>\n",
        "      <td>0.000048</td>\n",
        "      <td>0.000002</td>\n",
        "      <td>0.000005</td>\n",
        "      <td>0.000298</td>\n",
        "    </tr>\n",
        "  </tbody>\n",
        "</table>\n",
        "</div>"
       ],
       "output_type": "pyout",
       "prompt_number": 17,
       "text": [
        "Country      Denmark    France   Germany   Ukraine  United Kingdom\n",
        "Date                                                              \n",
        "2020-12-03  0.000098  0.000048  0.000002  0.000005        0.000298\n",
        "2020-12-04  0.000098  0.000048  0.000002  0.000005        0.000298\n",
        "2020-12-05  0.000098  0.000048  0.000002  0.000005        0.000298\n",
        "2020-12-06  0.000098  0.000048  0.000002  0.000005        0.000298\n",
        "2020-12-07  0.000098  0.000048  0.000002  0.000005        0.000298"
       ]
      }
     ],
     "prompt_number": 17
    },
    {
     "cell_type": "heading",
     "level": 3,
     "metadata": {},
     "source": [
      "$\\theta$: Mortality rate of S$^\\ast$ cases $\\mathrm{[-]}$"
     ]
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "analyser.history(\"theta\", roll_window=None).tail()"
     ],
     "language": "python",
     "metadata": {},
     "outputs": [
      {
       "output_type": "display_data",
       "png": "\n",
       "text": [
        "<Figure size 648x432 with 1 Axes>"
       ]
      },
      {
       "html": [
        "<div>\n",
        "<style scoped>\n",
        "    .dataframe tbody tr th:only-of-type {\n",
        "        vertical-align: middle;\n",
        "    }\n",
        "\n",
        "    .dataframe tbody tr th {\n",
        "        vertical-align: top;\n",
        "    }\n",
        "\n",
        "    .dataframe thead th {\n",
        "        text-align: right;\n",
        "    }\n",
        "</style>\n",
        "<table border=\"1\" class=\"dataframe\">\n",
        "  <thead>\n",
        "    <tr style=\"text-align: right;\">\n",
        "      <th>Country</th>\n",
        "      <th>Denmark</th>\n",
        "      <th>France</th>\n",
        "      <th>Germany</th>\n",
        "      <th>Ukraine</th>\n",
        "      <th>United Kingdom</th>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>Date</th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "    </tr>\n",
        "  </thead>\n",
        "  <tbody>\n",
        "    <tr>\n",
        "      <th>2020-12-03</th>\n",
        "      <td>0.000434</td>\n",
        "      <td>0.035986</td>\n",
        "      <td>0.001311</td>\n",
        "      <td>0.014396</td>\n",
        "      <td>0.015438</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>2020-12-04</th>\n",
        "      <td>0.000434</td>\n",
        "      <td>0.035986</td>\n",
        "      <td>0.001311</td>\n",
        "      <td>0.014396</td>\n",
        "      <td>0.015438</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>2020-12-05</th>\n",
        "      <td>0.000434</td>\n",
        "      <td>0.035986</td>\n",
        "      <td>0.001311</td>\n",
        "      <td>0.014396</td>\n",
        "      <td>0.015438</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>2020-12-06</th>\n",
        "      <td>0.000434</td>\n",
        "      <td>0.035986</td>\n",
        "      <td>0.001311</td>\n",
        "      <td>0.014396</td>\n",
        "      <td>0.015438</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>2020-12-07</th>\n",
        "      <td>0.000434</td>\n",
        "      <td>0.035986</td>\n",
        "      <td>0.001311</td>\n",
        "      <td>0.014396</td>\n",
        "      <td>0.015438</td>\n",
        "    </tr>\n",
        "  </tbody>\n",
        "</table>\n",
        "</div>"
       ],
       "output_type": "pyout",
       "prompt_number": 18,
       "text": [
        "Country      Denmark    France   Germany   Ukraine  United Kingdom\n",
        "Date                                                              \n",
        "2020-12-03  0.000434  0.035986  0.001311  0.014396        0.015438\n",
        "2020-12-04  0.000434  0.035986  0.001311  0.014396        0.015438\n",
        "2020-12-05  0.000434  0.035986  0.001311  0.014396        0.015438\n",
        "2020-12-06  0.000434  0.035986  0.001311  0.014396        0.015438\n",
        "2020-12-07  0.000434  0.035986  0.001311  0.014396        0.015438"
       ]
      }
     ],
     "prompt_number": 18
    },
    {
     "cell_type": "markdown",
     "metadata": {},
     "source": [
      "## (Experimental): Relationship of OxCGRT index and parameter values\n",
      "Government responses will impact on parameter values of ODE models about 14 days later. Here, we will investigate on the relationship of [stringency index (from OxCGRT)](https://github.com/OxCGRT/covid-policy-tracker/blob/master/documentation/index_methodology.md) and reproduction number/model parameters.\n"
     ]
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "%matplotlib inline\n",
      "from matplotlib import pyplot as plt\n",
      "import seaborn as sns\n",
      "import pandas as pd"
     ],
     "language": "python",
     "metadata": {},
     "outputs": [],
     "prompt_number": 19
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "df = analyser.track()\n",
      "param_cols = [\"Rt\", *cs.SIRF.PARAMETERS]\n",
      "oxcgrt_cols = oxcgrt_data.OXCGRT_VARS[:]\n",
      "cols = param_cols + oxcgrt_cols\n",
      "delay = 14\n",
      "\n",
      "for col in param_cols:\n",
      "    df[col] = pd.to_numeric(df[col], errors=\"coerce\")\n",
      "    df[col] = df.groupby(\"Country\")[col].shift(0 - delay)\n",
      "\n",
      "df = df.dropna(how=\"any\")\n",
      "df = df.loc[:, [\"Date\", \"Country\", *cols]]\n",
      "track_df = df.copy()\n",
      "track_df.info()"
     ],
     "language": "python",
     "metadata": {},
     "outputs": [
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "<class 'pandas.core.frame.DataFrame'>\n",
        "Int64Index: 17502 entries, 0 to 17557\n",
        "Data columns (total 19 columns):\n",
        " #   Column                               Non-Null Count  Dtype         \n",
        "---  ------                               --------------  -----         \n",
        " 0   Date                                 17502 non-null  datetime64[ns]\n",
        " 1   Country                              17502 non-null  object        \n",
        " 2   Rt                                   17502 non-null  float64       \n",
        " 3   theta                                17502 non-null  float64       \n",
        " 4   kappa                                17502 non-null  float64       \n",
        " 5   rho                                  17502 non-null  float64       \n",
        " 6   sigma                                17502 non-null  float64       \n",
        " 7   School_closing                       17502 non-null  int64         \n",
        " 8   Workplace_closing                    17502 non-null  int64         \n",
        " 9   Cancel_events                        17502 non-null  int64         \n",
        " 10  Gatherings_restrictions              17502 non-null  int64         \n",
        " 11  Transport_closing                    17502 non-null  int64         \n",
        " 12  Stay_home_restrictions               17502 non-null  int64         \n",
        " 13  Internal_movement_restrictions       17502 non-null  int64         \n",
        " 14  International_movement_restrictions  17502 non-null  int64         \n",
        " 15  Information_campaigns                17502 non-null  int64         \n",
        " 16  Testing_policy                       17502 non-null  int64         \n",
        " 17  Contact_tracing                      17502 non-null  int64         \n",
        " 18  Stringency_index                     17502 non-null  float64       \n",
        "dtypes: datetime64[ns](1), float64(6), int64(11), object(1)\n",
        "memory usage: 2.7+ MB\n"
       ]
      }
     ],
     "prompt_number": 20
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "# Correlation\n",
      "df = track_df.copy()\n",
      "df.corr().style.background_gradient(axis=None)"
     ],
     "language": "python",
     "metadata": {},
     "outputs": [
      {
       "html": [
        "<style  type=\"text/css\" >\n",
        "#T_ebbdb750_38ab_11eb_a9f3_525400dd3525row0_col0,#T_ebbdb750_38ab_11eb_a9f3_525400dd3525row1_col1,#T_ebbdb750_38ab_11eb_a9f3_525400dd3525row2_col2,#T_ebbdb750_38ab_11eb_a9f3_525400dd3525row3_col3,#T_ebbdb750_38ab_11eb_a9f3_525400dd3525row4_col4,#T_ebbdb750_38ab_11eb_a9f3_525400dd3525row5_col5,#T_ebbdb750_38ab_11eb_a9f3_525400dd3525row6_col6,#T_ebbdb750_38ab_11eb_a9f3_525400dd3525row7_col7,#T_ebbdb750_38ab_11eb_a9f3_525400dd3525row8_col8,#T_ebbdb750_38ab_11eb_a9f3_525400dd3525row9_col9,#T_ebbdb750_38ab_11eb_a9f3_525400dd3525row10_col10,#T_ebbdb750_38ab_11eb_a9f3_525400dd3525row11_col11,#T_ebbdb750_38ab_11eb_a9f3_525400dd3525row12_col12,#T_ebbdb750_38ab_11eb_a9f3_525400dd3525row13_col13,#T_ebbdb750_38ab_11eb_a9f3_525400dd3525row14_col14,#T_ebbdb750_38ab_11eb_a9f3_525400dd3525row15_col15,#T_ebbdb750_38ab_11eb_a9f3_525400dd3525row16_col16{\n",
        "            background-color:  #023858;\n",
        "            color:  #f1f1f1;\n",
        "        }#T_ebbdb750_38ab_11eb_a9f3_525400dd3525row0_col1,#T_ebbdb750_38ab_11eb_a9f3_525400dd3525row1_col0{\n",
        "            background-color:  #b1c2de;\n",
        "            color:  #000000;\n",
        "        }#T_ebbdb750_38ab_11eb_a9f3_525400dd3525row0_col2,#T_ebbdb750_38ab_11eb_a9f3_525400dd3525row2_col0{\n",
        "            background-color:  #abbfdc;\n",
        "            color:  #000000;\n",
        "        }#T_ebbdb750_38ab_11eb_a9f3_525400dd3525row0_col3,#T_ebbdb750_38ab_11eb_a9f3_525400dd3525row3_col0,#T_ebbdb750_38ab_11eb_a9f3_525400dd3525row4_col12,#T_ebbdb750_38ab_11eb_a9f3_525400dd3525row6_col13,#T_ebbdb750_38ab_11eb_a9f3_525400dd3525row9_col10,#T_ebbdb750_38ab_11eb_a9f3_525400dd3525row10_col9,#T_ebbdb750_38ab_11eb_a9f3_525400dd3525row11_col13,#T_ebbdb750_38ab_11eb_a9f3_525400dd3525row12_col4,#T_ebbdb750_38ab_11eb_a9f3_525400dd3525row13_col6,#T_ebbdb750_38ab_11eb_a9f3_525400dd3525row13_col11{\n",
        "            background-color:  #056fae;\n",
        "            color:  #f1f1f1;\n",
        "        }#T_ebbdb750_38ab_11eb_a9f3_525400dd3525row0_col4,#T_ebbdb750_38ab_11eb_a9f3_525400dd3525row4_col0{\n",
        "            background-color:  #fff7fb;\n",
        "            color:  #000000;\n",
        "        }#T_ebbdb750_38ab_11eb_a9f3_525400dd3525row0_col5,#T_ebbdb750_38ab_11eb_a9f3_525400dd3525row3_col6,#T_ebbdb750_38ab_11eb_a9f3_525400dd3525row5_col0,#T_ebbdb750_38ab_11eb_a9f3_525400dd3525row6_col3{\n",
        "            background-color:  #dbdaeb;\n",
        "            color:  #000000;\n",
        "        }#T_ebbdb750_38ab_11eb_a9f3_525400dd3525row0_col6,#T_ebbdb750_38ab_11eb_a9f3_525400dd3525row0_col11,#T_ebbdb750_38ab_11eb_a9f3_525400dd3525row6_col0,#T_ebbdb750_38ab_11eb_a9f3_525400dd3525row11_col0{\n",
        "            background-color:  #efe9f3;\n",
        "            color:  #000000;\n",
        "        }#T_ebbdb750_38ab_11eb_a9f3_525400dd3525row0_col7,#T_ebbdb750_38ab_11eb_a9f3_525400dd3525row7_col0{\n",
        "            background-color:  #f1ebf4;\n",
        "            color:  #000000;\n",
        "        }#T_ebbdb750_38ab_11eb_a9f3_525400dd3525row0_col8,#T_ebbdb750_38ab_11eb_a9f3_525400dd3525row8_col0{\n",
        "            background-color:  #fef6fb;\n",
        "            color:  #000000;\n",
        "        }#T_ebbdb750_38ab_11eb_a9f3_525400dd3525row0_col9,#T_ebbdb750_38ab_11eb_a9f3_525400dd3525row9_col0{\n",
        "            background-color:  #ced0e6;\n",
        "            color:  #000000;\n",
        "        }#T_ebbdb750_38ab_11eb_a9f3_525400dd3525row0_col10,#T_ebbdb750_38ab_11eb_a9f3_525400dd3525row10_col0{\n",
        "            background-color:  #e3e0ee;\n",
        "            color:  #000000;\n",
        "        }#T_ebbdb750_38ab_11eb_a9f3_525400dd3525row0_col12,#T_ebbdb750_38ab_11eb_a9f3_525400dd3525row12_col0{\n",
        "            background-color:  #ece7f2;\n",
        "            color:  #000000;\n",
        "        }#T_ebbdb750_38ab_11eb_a9f3_525400dd3525row0_col13,#T_ebbdb750_38ab_11eb_a9f3_525400dd3525row13_col0{\n",
        "            background-color:  #f2ecf5;\n",
        "            color:  #000000;\n",
        "        }#T_ebbdb750_38ab_11eb_a9f3_525400dd3525row0_col14,#T_ebbdb750_38ab_11eb_a9f3_525400dd3525row14_col0{\n",
        "            background-color:  #e9e5f1;\n",
        "            color:  #000000;\n",
        "        }#T_ebbdb750_38ab_11eb_a9f3_525400dd3525row0_col15,#T_ebbdb750_38ab_11eb_a9f3_525400dd3525row15_col0{\n",
        "            background-color:  #d3d4e7;\n",
        "            color:  #000000;\n",
        "        }#T_ebbdb750_38ab_11eb_a9f3_525400dd3525row0_col16,#T_ebbdb750_38ab_11eb_a9f3_525400dd3525row16_col0{\n",
        "            background-color:  #f1ebf5;\n",
        "            color:  #000000;\n",
        "        }#T_ebbdb750_38ab_11eb_a9f3_525400dd3525row1_col2,#T_ebbdb750_38ab_11eb_a9f3_525400dd3525row2_col1,#T_ebbdb750_38ab_11eb_a9f3_525400dd3525row9_col15,#T_ebbdb750_38ab_11eb_a9f3_525400dd3525row15_col9{\n",
        "            background-color:  #73a9cf;\n",
        "            color:  #000000;\n",
        "        }#T_ebbdb750_38ab_11eb_a9f3_525400dd3525row1_col3,#T_ebbdb750_38ab_11eb_a9f3_525400dd3525row3_col1{\n",
        "            background-color:  #cccfe5;\n",
        "            color:  #000000;\n",
        "        }#T_ebbdb750_38ab_11eb_a9f3_525400dd3525row1_col4,#T_ebbdb750_38ab_11eb_a9f3_525400dd3525row4_col1{\n",
        "            background-color:  #4295c3;\n",
        "            color:  #000000;\n",
        "        }#T_ebbdb750_38ab_11eb_a9f3_525400dd3525row1_col5,#T_ebbdb750_38ab_11eb_a9f3_525400dd3525row5_col1{\n",
        "            background-color:  #2081b9;\n",
        "            color:  #000000;\n",
        "        }#T_ebbdb750_38ab_11eb_a9f3_525400dd3525row1_col6,#T_ebbdb750_38ab_11eb_a9f3_525400dd3525row6_col1{\n",
        "            background-color:  #308cbe;\n",
        "            color:  #000000;\n",
        "        }#T_ebbdb750_38ab_11eb_a9f3_525400dd3525row1_col7,#T_ebbdb750_38ab_11eb_a9f3_525400dd3525row7_col1{\n",
        "            background-color:  #3d93c2;\n",
        "            color:  #000000;\n",
        "        }#T_ebbdb750_38ab_11eb_a9f3_525400dd3525row1_col8,#T_ebbdb750_38ab_11eb_a9f3_525400dd3525row2_col10,#T_ebbdb750_38ab_11eb_a9f3_525400dd3525row7_col15,#T_ebbdb750_38ab_11eb_a9f3_525400dd3525row8_col1,#T_ebbdb750_38ab_11eb_a9f3_525400dd3525row10_col2,#T_ebbdb750_38ab_11eb_a9f3_525400dd3525row15_col7{\n",
        "            background-color:  #569dc8;\n",
        "            color:  #000000;\n",
        "        }#T_ebbdb750_38ab_11eb_a9f3_525400dd3525row1_col9,#T_ebbdb750_38ab_11eb_a9f3_525400dd3525row1_col10,#T_ebbdb750_38ab_11eb_a9f3_525400dd3525row9_col1,#T_ebbdb750_38ab_11eb_a9f3_525400dd3525row10_col1{\n",
        "            background-color:  #2d8abd;\n",
        "            color:  #000000;\n",
        "        }#T_ebbdb750_38ab_11eb_a9f3_525400dd3525row1_col11,#T_ebbdb750_38ab_11eb_a9f3_525400dd3525row5_col12,#T_ebbdb750_38ab_11eb_a9f3_525400dd3525row11_col1,#T_ebbdb750_38ab_11eb_a9f3_525400dd3525row12_col5{\n",
        "            background-color:  #2987bc;\n",
        "            color:  #000000;\n",
        "        }#T_ebbdb750_38ab_11eb_a9f3_525400dd3525row1_col12,#T_ebbdb750_38ab_11eb_a9f3_525400dd3525row12_col1{\n",
        "            background-color:  #7dacd1;\n",
        "            color:  #000000;\n",
        "        }#T_ebbdb750_38ab_11eb_a9f3_525400dd3525row1_col13,#T_ebbdb750_38ab_11eb_a9f3_525400dd3525row13_col1{\n",
        "            background-color:  #6ba5cd;\n",
        "            color:  #000000;\n",
        "        }#T_ebbdb750_38ab_11eb_a9f3_525400dd3525row1_col14,#T_ebbdb750_38ab_11eb_a9f3_525400dd3525row14_col1{\n",
        "            background-color:  #c2cbe2;\n",
        "            color:  #000000;\n",
        "        }#T_ebbdb750_38ab_11eb_a9f3_525400dd3525row1_col15,#T_ebbdb750_38ab_11eb_a9f3_525400dd3525row15_col1{\n",
        "            background-color:  #9fbad9;\n",
        "            color:  #000000;\n",
        "        }#T_ebbdb750_38ab_11eb_a9f3_525400dd3525row1_col16,#T_ebbdb750_38ab_11eb_a9f3_525400dd3525row16_col1{\n",
        "            background-color:  #2685bb;\n",
        "            color:  #000000;\n",
        "        }#T_ebbdb750_38ab_11eb_a9f3_525400dd3525row2_col3,#T_ebbdb750_38ab_11eb_a9f3_525400dd3525row2_col9,#T_ebbdb750_38ab_11eb_a9f3_525400dd3525row3_col2,#T_ebbdb750_38ab_11eb_a9f3_525400dd3525row9_col2,#T_ebbdb750_38ab_11eb_a9f3_525400dd3525row10_col14,#T_ebbdb750_38ab_11eb_a9f3_525400dd3525row14_col10{\n",
        "            background-color:  #78abd0;\n",
        "            color:  #000000;\n",
        "        }#T_ebbdb750_38ab_11eb_a9f3_525400dd3525row2_col4,#T_ebbdb750_38ab_11eb_a9f3_525400dd3525row4_col2{\n",
        "            background-color:  #71a8ce;\n",
        "            color:  #000000;\n",
        "        }#T_ebbdb750_38ab_11eb_a9f3_525400dd3525row2_col5,#T_ebbdb750_38ab_11eb_a9f3_525400dd3525row5_col2{\n",
        "            background-color:  #348ebf;\n",
        "            color:  #000000;\n",
        "        }#T_ebbdb750_38ab_11eb_a9f3_525400dd3525row2_col6,#T_ebbdb750_38ab_11eb_a9f3_525400dd3525row4_col9,#T_ebbdb750_38ab_11eb_a9f3_525400dd3525row6_col2,#T_ebbdb750_38ab_11eb_a9f3_525400dd3525row9_col4{\n",
        "            background-color:  #4897c4;\n",
        "            color:  #000000;\n",
        "        }#T_ebbdb750_38ab_11eb_a9f3_525400dd3525row2_col7,#T_ebbdb750_38ab_11eb_a9f3_525400dd3525row7_col2{\n",
        "            background-color:  #6da6cd;\n",
        "            color:  #000000;\n",
        "        }#T_ebbdb750_38ab_11eb_a9f3_525400dd3525row2_col8,#T_ebbdb750_38ab_11eb_a9f3_525400dd3525row8_col2{\n",
        "            background-color:  #76aad0;\n",
        "            color:  #000000;\n",
        "        }#T_ebbdb750_38ab_11eb_a9f3_525400dd3525row2_col11,#T_ebbdb750_38ab_11eb_a9f3_525400dd3525row11_col2{\n",
        "            background-color:  #7bacd1;\n",
        "            color:  #000000;\n",
        "        }#T_ebbdb750_38ab_11eb_a9f3_525400dd3525row2_col12,#T_ebbdb750_38ab_11eb_a9f3_525400dd3525row12_col2{\n",
        "            background-color:  #a7bddb;\n",
        "            color:  #000000;\n",
        "        }#T_ebbdb750_38ab_11eb_a9f3_525400dd3525row2_col13,#T_ebbdb750_38ab_11eb_a9f3_525400dd3525row9_col12,#T_ebbdb750_38ab_11eb_a9f3_525400dd3525row12_col9,#T_ebbdb750_38ab_11eb_a9f3_525400dd3525row13_col2{\n",
        "            background-color:  #5c9fc9;\n",
        "            color:  #000000;\n",
        "        }#T_ebbdb750_38ab_11eb_a9f3_525400dd3525row2_col14,#T_ebbdb750_38ab_11eb_a9f3_525400dd3525row14_col2{\n",
        "            background-color:  #afc1dd;\n",
        "            color:  #000000;\n",
        "        }#T_ebbdb750_38ab_11eb_a9f3_525400dd3525row2_col15,#T_ebbdb750_38ab_11eb_a9f3_525400dd3525row15_col2{\n",
        "            background-color:  #bfc9e1;\n",
        "            color:  #000000;\n",
        "        }#T_ebbdb750_38ab_11eb_a9f3_525400dd3525row2_col16,#T_ebbdb750_38ab_11eb_a9f3_525400dd3525row7_col9,#T_ebbdb750_38ab_11eb_a9f3_525400dd3525row9_col7,#T_ebbdb750_38ab_11eb_a9f3_525400dd3525row11_col15,#T_ebbdb750_38ab_11eb_a9f3_525400dd3525row15_col11,#T_ebbdb750_38ab_11eb_a9f3_525400dd3525row16_col2{\n",
        "            background-color:  #509ac6;\n",
        "            color:  #000000;\n",
        "        }#T_ebbdb750_38ab_11eb_a9f3_525400dd3525row3_col4,#T_ebbdb750_38ab_11eb_a9f3_525400dd3525row4_col3{\n",
        "            background-color:  #f7f0f7;\n",
        "            color:  #000000;\n",
        "        }#T_ebbdb750_38ab_11eb_a9f3_525400dd3525row3_col5,#T_ebbdb750_38ab_11eb_a9f3_525400dd3525row5_col3{\n",
        "            background-color:  #d9d8ea;\n",
        "            color:  #000000;\n",
        "        }#T_ebbdb750_38ab_11eb_a9f3_525400dd3525row3_col7,#T_ebbdb750_38ab_11eb_a9f3_525400dd3525row7_col3{\n",
        "            background-color:  #dedcec;\n",
        "            color:  #000000;\n",
        "        }#T_ebbdb750_38ab_11eb_a9f3_525400dd3525row3_col8,#T_ebbdb750_38ab_11eb_a9f3_525400dd3525row8_col3{\n",
        "            background-color:  #e8e4f0;\n",
        "            color:  #000000;\n",
        "        }#T_ebbdb750_38ab_11eb_a9f3_525400dd3525row3_col9,#T_ebbdb750_38ab_11eb_a9f3_525400dd3525row9_col3{\n",
        "            background-color:  #c1cae2;\n",
        "            color:  #000000;\n",
        "        }#T_ebbdb750_38ab_11eb_a9f3_525400dd3525row3_col10,#T_ebbdb750_38ab_11eb_a9f3_525400dd3525row3_col14,#T_ebbdb750_38ab_11eb_a9f3_525400dd3525row10_col3,#T_ebbdb750_38ab_11eb_a9f3_525400dd3525row14_col3{\n",
        "            background-color:  #d1d2e6;\n",
        "            color:  #000000;\n",
        "        }#T_ebbdb750_38ab_11eb_a9f3_525400dd3525row3_col11,#T_ebbdb750_38ab_11eb_a9f3_525400dd3525row11_col3{\n",
        "            background-color:  #d5d5e8;\n",
        "            color:  #000000;\n",
        "        }#T_ebbdb750_38ab_11eb_a9f3_525400dd3525row3_col12,#T_ebbdb750_38ab_11eb_a9f3_525400dd3525row12_col3{\n",
        "            background-color:  #e7e3f0;\n",
        "            color:  #000000;\n",
        "        }#T_ebbdb750_38ab_11eb_a9f3_525400dd3525row3_col13,#T_ebbdb750_38ab_11eb_a9f3_525400dd3525row13_col3{\n",
        "            background-color:  #d2d3e7;\n",
        "            color:  #000000;\n",
        "        }#T_ebbdb750_38ab_11eb_a9f3_525400dd3525row3_col15,#T_ebbdb750_38ab_11eb_a9f3_525400dd3525row15_col3{\n",
        "            background-color:  #c8cde4;\n",
        "            color:  #000000;\n",
        "        }#T_ebbdb750_38ab_11eb_a9f3_525400dd3525row3_col16,#T_ebbdb750_38ab_11eb_a9f3_525400dd3525row16_col3{\n",
        "            background-color:  #e1dfed;\n",
        "            color:  #000000;\n",
        "        }#T_ebbdb750_38ab_11eb_a9f3_525400dd3525row4_col5,#T_ebbdb750_38ab_11eb_a9f3_525400dd3525row5_col4{\n",
        "            background-color:  #1077b4;\n",
        "            color:  #f1f1f1;\n",
        "        }#T_ebbdb750_38ab_11eb_a9f3_525400dd3525row4_col6,#T_ebbdb750_38ab_11eb_a9f3_525400dd3525row6_col4,#T_ebbdb750_38ab_11eb_a9f3_525400dd3525row12_col16,#T_ebbdb750_38ab_11eb_a9f3_525400dd3525row16_col12{\n",
        "            background-color:  #056aa6;\n",
        "            color:  #f1f1f1;\n",
        "        }#T_ebbdb750_38ab_11eb_a9f3_525400dd3525row4_col7,#T_ebbdb750_38ab_11eb_a9f3_525400dd3525row7_col4{\n",
        "            background-color:  #05659f;\n",
        "            color:  #f1f1f1;\n",
        "        }#T_ebbdb750_38ab_11eb_a9f3_525400dd3525row4_col8,#T_ebbdb750_38ab_11eb_a9f3_525400dd3525row8_col4{\n",
        "            background-color:  #045b8f;\n",
        "            color:  #f1f1f1;\n",
        "        }#T_ebbdb750_38ab_11eb_a9f3_525400dd3525row4_col10,#T_ebbdb750_38ab_11eb_a9f3_525400dd3525row10_col4{\n",
        "            background-color:  #0d75b3;\n",
        "            color:  #f1f1f1;\n",
        "        }#T_ebbdb750_38ab_11eb_a9f3_525400dd3525row4_col11,#T_ebbdb750_38ab_11eb_a9f3_525400dd3525row8_col14,#T_ebbdb750_38ab_11eb_a9f3_525400dd3525row11_col4,#T_ebbdb750_38ab_11eb_a9f3_525400dd3525row14_col8{\n",
        "            background-color:  #0771b1;\n",
        "            color:  #f1f1f1;\n",
        "        }#T_ebbdb750_38ab_11eb_a9f3_525400dd3525row4_col13,#T_ebbdb750_38ab_11eb_a9f3_525400dd3525row13_col4{\n",
        "            background-color:  #056faf;\n",
        "            color:  #f1f1f1;\n",
        "        }#T_ebbdb750_38ab_11eb_a9f3_525400dd3525row4_col14,#T_ebbdb750_38ab_11eb_a9f3_525400dd3525row5_col9,#T_ebbdb750_38ab_11eb_a9f3_525400dd3525row9_col5,#T_ebbdb750_38ab_11eb_a9f3_525400dd3525row14_col4{\n",
        "            background-color:  #1278b4;\n",
        "            color:  #f1f1f1;\n",
        "        }#T_ebbdb750_38ab_11eb_a9f3_525400dd3525row4_col15,#T_ebbdb750_38ab_11eb_a9f3_525400dd3525row15_col4{\n",
        "            background-color:  #3991c1;\n",
        "            color:  #000000;\n",
        "        }#T_ebbdb750_38ab_11eb_a9f3_525400dd3525row4_col16,#T_ebbdb750_38ab_11eb_a9f3_525400dd3525row6_col11,#T_ebbdb750_38ab_11eb_a9f3_525400dd3525row11_col6,#T_ebbdb750_38ab_11eb_a9f3_525400dd3525row16_col4{\n",
        "            background-color:  #0567a2;\n",
        "            color:  #f1f1f1;\n",
        "        }#T_ebbdb750_38ab_11eb_a9f3_525400dd3525row5_col6,#T_ebbdb750_38ab_11eb_a9f3_525400dd3525row6_col5{\n",
        "            background-color:  #045788;\n",
        "            color:  #f1f1f1;\n",
        "        }#T_ebbdb750_38ab_11eb_a9f3_525400dd3525row5_col7,#T_ebbdb750_38ab_11eb_a9f3_525400dd3525row7_col5{\n",
        "            background-color:  #0568a3;\n",
        "            color:  #f1f1f1;\n",
        "        }#T_ebbdb750_38ab_11eb_a9f3_525400dd3525row5_col8,#T_ebbdb750_38ab_11eb_a9f3_525400dd3525row8_col5{\n",
        "            background-color:  #056dab;\n",
        "            color:  #f1f1f1;\n",
        "        }#T_ebbdb750_38ab_11eb_a9f3_525400dd3525row5_col10,#T_ebbdb750_38ab_11eb_a9f3_525400dd3525row10_col5,#T_ebbdb750_38ab_11eb_a9f3_525400dd3525row11_col16,#T_ebbdb750_38ab_11eb_a9f3_525400dd3525row14_col15,#T_ebbdb750_38ab_11eb_a9f3_525400dd3525row15_col14,#T_ebbdb750_38ab_11eb_a9f3_525400dd3525row16_col11{\n",
        "            background-color:  #045d92;\n",
        "            color:  #f1f1f1;\n",
        "        }#T_ebbdb750_38ab_11eb_a9f3_525400dd3525row5_col11,#T_ebbdb750_38ab_11eb_a9f3_525400dd3525row7_col10,#T_ebbdb750_38ab_11eb_a9f3_525400dd3525row10_col7,#T_ebbdb750_38ab_11eb_a9f3_525400dd3525row11_col5{\n",
        "            background-color:  #0567a1;\n",
        "            color:  #f1f1f1;\n",
        "        }#T_ebbdb750_38ab_11eb_a9f3_525400dd3525row5_col13,#T_ebbdb750_38ab_11eb_a9f3_525400dd3525row10_col12,#T_ebbdb750_38ab_11eb_a9f3_525400dd3525row12_col10,#T_ebbdb750_38ab_11eb_a9f3_525400dd3525row13_col5{\n",
        "            background-color:  #167bb6;\n",
        "            color:  #000000;\n",
        "        }#T_ebbdb750_38ab_11eb_a9f3_525400dd3525row5_col14,#T_ebbdb750_38ab_11eb_a9f3_525400dd3525row14_col5{\n",
        "            background-color:  #9ebad9;\n",
        "            color:  #000000;\n",
        "        }#T_ebbdb750_38ab_11eb_a9f3_525400dd3525row5_col15,#T_ebbdb750_38ab_11eb_a9f3_525400dd3525row15_col5{\n",
        "            background-color:  #99b8d8;\n",
        "            color:  #000000;\n",
        "        }#T_ebbdb750_38ab_11eb_a9f3_525400dd3525row5_col16,#T_ebbdb750_38ab_11eb_a9f3_525400dd3525row16_col5{\n",
        "            background-color:  #034f7d;\n",
        "            color:  #f1f1f1;\n",
        "        }#T_ebbdb750_38ab_11eb_a9f3_525400dd3525row6_col7,#T_ebbdb750_38ab_11eb_a9f3_525400dd3525row7_col6,#T_ebbdb750_38ab_11eb_a9f3_525400dd3525row8_col16,#T_ebbdb750_38ab_11eb_a9f3_525400dd3525row16_col8{\n",
        "            background-color:  #045687;\n",
        "            color:  #f1f1f1;\n",
        "        }#T_ebbdb750_38ab_11eb_a9f3_525400dd3525row6_col8,#T_ebbdb750_38ab_11eb_a9f3_525400dd3525row8_col6,#T_ebbdb750_38ab_11eb_a9f3_525400dd3525row8_col11,#T_ebbdb750_38ab_11eb_a9f3_525400dd3525row11_col8{\n",
        "            background-color:  #045c90;\n",
        "            color:  #f1f1f1;\n",
        "        }#T_ebbdb750_38ab_11eb_a9f3_525400dd3525row6_col9,#T_ebbdb750_38ab_11eb_a9f3_525400dd3525row9_col6,#T_ebbdb750_38ab_11eb_a9f3_525400dd3525row11_col12,#T_ebbdb750_38ab_11eb_a9f3_525400dd3525row12_col11{\n",
        "            background-color:  #1e80b8;\n",
        "            color:  #000000;\n",
        "        }#T_ebbdb750_38ab_11eb_a9f3_525400dd3525row6_col10,#T_ebbdb750_38ab_11eb_a9f3_525400dd3525row10_col6,#T_ebbdb750_38ab_11eb_a9f3_525400dd3525row10_col16,#T_ebbdb750_38ab_11eb_a9f3_525400dd3525row16_col10{\n",
        "            background-color:  #034d79;\n",
        "            color:  #f1f1f1;\n",
        "        }#T_ebbdb750_38ab_11eb_a9f3_525400dd3525row6_col12,#T_ebbdb750_38ab_11eb_a9f3_525400dd3525row12_col6{\n",
        "            background-color:  #157ab5;\n",
        "            color:  #000000;\n",
        "        }#T_ebbdb750_38ab_11eb_a9f3_525400dd3525row6_col14,#T_ebbdb750_38ab_11eb_a9f3_525400dd3525row14_col6{\n",
        "            background-color:  #65a3cb;\n",
        "            color:  #000000;\n",
        "        }#T_ebbdb750_38ab_11eb_a9f3_525400dd3525row6_col15,#T_ebbdb750_38ab_11eb_a9f3_525400dd3525row9_col14,#T_ebbdb750_38ab_11eb_a9f3_525400dd3525row14_col9,#T_ebbdb750_38ab_11eb_a9f3_525400dd3525row15_col6{\n",
        "            background-color:  #86b0d3;\n",
        "            color:  #000000;\n",
        "        }#T_ebbdb750_38ab_11eb_a9f3_525400dd3525row6_col16,#T_ebbdb750_38ab_11eb_a9f3_525400dd3525row16_col6{\n",
        "            background-color:  #03456c;\n",
        "            color:  #f1f1f1;\n",
        "        }#T_ebbdb750_38ab_11eb_a9f3_525400dd3525row7_col8,#T_ebbdb750_38ab_11eb_a9f3_525400dd3525row8_col7{\n",
        "            background-color:  #04598c;\n",
        "            color:  #f1f1f1;\n",
        "        }#T_ebbdb750_38ab_11eb_a9f3_525400dd3525row7_col11,#T_ebbdb750_38ab_11eb_a9f3_525400dd3525row11_col7,#T_ebbdb750_38ab_11eb_a9f3_525400dd3525row13_col15,#T_ebbdb750_38ab_11eb_a9f3_525400dd3525row15_col13{\n",
        "            background-color:  #056ead;\n",
        "            color:  #f1f1f1;\n",
        "        }#T_ebbdb750_38ab_11eb_a9f3_525400dd3525row7_col12,#T_ebbdb750_38ab_11eb_a9f3_525400dd3525row12_col7{\n",
        "            background-color:  #0570b0;\n",
        "            color:  #f1f1f1;\n",
        "        }#T_ebbdb750_38ab_11eb_a9f3_525400dd3525row7_col13,#T_ebbdb750_38ab_11eb_a9f3_525400dd3525row13_col7{\n",
        "            background-color:  #04629a;\n",
        "            color:  #f1f1f1;\n",
        "        }#T_ebbdb750_38ab_11eb_a9f3_525400dd3525row7_col14,#T_ebbdb750_38ab_11eb_a9f3_525400dd3525row9_col13,#T_ebbdb750_38ab_11eb_a9f3_525400dd3525row13_col9,#T_ebbdb750_38ab_11eb_a9f3_525400dd3525row14_col7{\n",
        "            background-color:  #2f8bbe;\n",
        "            color:  #000000;\n",
        "        }#T_ebbdb750_38ab_11eb_a9f3_525400dd3525row7_col16,#T_ebbdb750_38ab_11eb_a9f3_525400dd3525row16_col7{\n",
        "            background-color:  #034c78;\n",
        "            color:  #f1f1f1;\n",
        "        }#T_ebbdb750_38ab_11eb_a9f3_525400dd3525row8_col9,#T_ebbdb750_38ab_11eb_a9f3_525400dd3525row9_col8{\n",
        "            background-color:  #2182b9;\n",
        "            color:  #000000;\n",
        "        }#T_ebbdb750_38ab_11eb_a9f3_525400dd3525row8_col10,#T_ebbdb750_38ab_11eb_a9f3_525400dd3525row10_col8{\n",
        "            background-color:  #04649d;\n",
        "            color:  #f1f1f1;\n",
        "        }#T_ebbdb750_38ab_11eb_a9f3_525400dd3525row8_col12,#T_ebbdb750_38ab_11eb_a9f3_525400dd3525row12_col8{\n",
        "            background-color:  #045e94;\n",
        "            color:  #f1f1f1;\n",
        "        }#T_ebbdb750_38ab_11eb_a9f3_525400dd3525row8_col13,#T_ebbdb750_38ab_11eb_a9f3_525400dd3525row13_col8{\n",
        "            background-color:  #046299;\n",
        "            color:  #f1f1f1;\n",
        "        }#T_ebbdb750_38ab_11eb_a9f3_525400dd3525row8_col15,#T_ebbdb750_38ab_11eb_a9f3_525400dd3525row15_col8{\n",
        "            background-color:  #2c89bd;\n",
        "            color:  #000000;\n",
        "        }#T_ebbdb750_38ab_11eb_a9f3_525400dd3525row9_col11,#T_ebbdb750_38ab_11eb_a9f3_525400dd3525row11_col9{\n",
        "            background-color:  #04588a;\n",
        "            color:  #f1f1f1;\n",
        "        }#T_ebbdb750_38ab_11eb_a9f3_525400dd3525row9_col16,#T_ebbdb750_38ab_11eb_a9f3_525400dd3525row12_col15,#T_ebbdb750_38ab_11eb_a9f3_525400dd3525row15_col12,#T_ebbdb750_38ab_11eb_a9f3_525400dd3525row16_col9{\n",
        "            background-color:  #0c74b2;\n",
        "            color:  #f1f1f1;\n",
        "        }#T_ebbdb750_38ab_11eb_a9f3_525400dd3525row10_col11,#T_ebbdb750_38ab_11eb_a9f3_525400dd3525row11_col10{\n",
        "            background-color:  #045f95;\n",
        "            color:  #f1f1f1;\n",
        "        }#T_ebbdb750_38ab_11eb_a9f3_525400dd3525row10_col13,#T_ebbdb750_38ab_11eb_a9f3_525400dd3525row13_col10{\n",
        "            background-color:  #0a73b2;\n",
        "            color:  #f1f1f1;\n",
        "        }#T_ebbdb750_38ab_11eb_a9f3_525400dd3525row10_col15,#T_ebbdb750_38ab_11eb_a9f3_525400dd3525row15_col10{\n",
        "            background-color:  #83afd3;\n",
        "            color:  #000000;\n",
        "        }#T_ebbdb750_38ab_11eb_a9f3_525400dd3525row11_col14,#T_ebbdb750_38ab_11eb_a9f3_525400dd3525row14_col11{\n",
        "            background-color:  #4e9ac6;\n",
        "            color:  #000000;\n",
        "        }#T_ebbdb750_38ab_11eb_a9f3_525400dd3525row12_col13,#T_ebbdb750_38ab_11eb_a9f3_525400dd3525row13_col12{\n",
        "            background-color:  #056caa;\n",
        "            color:  #f1f1f1;\n",
        "        }#T_ebbdb750_38ab_11eb_a9f3_525400dd3525row12_col14,#T_ebbdb750_38ab_11eb_a9f3_525400dd3525row14_col12{\n",
        "            background-color:  #0872b1;\n",
        "            color:  #f1f1f1;\n",
        "        }#T_ebbdb750_38ab_11eb_a9f3_525400dd3525row13_col14,#T_ebbdb750_38ab_11eb_a9f3_525400dd3525row14_col13{\n",
        "            background-color:  #056dac;\n",
        "            color:  #f1f1f1;\n",
        "        }#T_ebbdb750_38ab_11eb_a9f3_525400dd3525row13_col16,#T_ebbdb750_38ab_11eb_a9f3_525400dd3525row16_col13{\n",
        "            background-color:  #046096;\n",
        "            color:  #f1f1f1;\n",
        "        }#T_ebbdb750_38ab_11eb_a9f3_525400dd3525row14_col16,#T_ebbdb750_38ab_11eb_a9f3_525400dd3525row16_col14{\n",
        "            background-color:  #5a9ec9;\n",
        "            color:  #000000;\n",
        "        }#T_ebbdb750_38ab_11eb_a9f3_525400dd3525row15_col16,#T_ebbdb750_38ab_11eb_a9f3_525400dd3525row16_col15{\n",
        "            background-color:  #69a5cc;\n",
        "            color:  #000000;\n",
        "        }</style><table id=\"T_ebbdb750_38ab_11eb_a9f3_525400dd3525\" ><thead>    <tr>        <th class=\"blank level0\" ></th>        <th class=\"col_heading level0 col0\" >Rt</th>        <th class=\"col_heading level0 col1\" >theta</th>        <th class=\"col_heading level0 col2\" >kappa</th>        <th class=\"col_heading level0 col3\" >rho</th>        <th class=\"col_heading level0 col4\" >sigma</th>        <th class=\"col_heading level0 col5\" >School_closing</th>        <th class=\"col_heading level0 col6\" >Workplace_closing</th>        <th class=\"col_heading level0 col7\" >Cancel_events</th>        <th class=\"col_heading level0 col8\" >Gatherings_restrictions</th>        <th class=\"col_heading level0 col9\" >Transport_closing</th>        <th class=\"col_heading level0 col10\" >Stay_home_restrictions</th>        <th class=\"col_heading level0 col11\" >Internal_movement_restrictions</th>        <th class=\"col_heading level0 col12\" >International_movement_restrictions</th>        <th class=\"col_heading level0 col13\" >Information_campaigns</th>        <th class=\"col_heading level0 col14\" >Testing_policy</th>        <th class=\"col_heading level0 col15\" >Contact_tracing</th>        <th class=\"col_heading level0 col16\" >Stringency_index</th>    </tr></thead><tbody>\n",
        "                <tr>\n",
        "                        <th id=\"T_ebbdb750_38ab_11eb_a9f3_525400dd3525level0_row0\" class=\"row_heading level0 row0\" >Rt</th>\n",
        "                        <td id=\"T_ebbdb750_38ab_11eb_a9f3_525400dd3525row0_col0\" class=\"data row0 col0\" >1.000000</td>\n",
        "                        <td id=\"T_ebbdb750_38ab_11eb_a9f3_525400dd3525row0_col1\" class=\"data row0 col1\" >-0.198541</td>\n",
        "                        <td id=\"T_ebbdb750_38ab_11eb_a9f3_525400dd3525row0_col2\" class=\"data row0 col2\" >-0.168540</td>\n",
        "                        <td id=\"T_ebbdb750_38ab_11eb_a9f3_525400dd3525row0_col3\" class=\"data row0 col3\" >0.557251</td>\n",
        "                        <td id=\"T_ebbdb750_38ab_11eb_a9f3_525400dd3525row0_col4\" class=\"data row0 col4\" >-0.825839</td>\n",
        "                        <td id=\"T_ebbdb750_38ab_11eb_a9f3_525400dd3525row0_col5\" class=\"data row0 col5\" >-0.458107</td>\n",
        "                        <td id=\"T_ebbdb750_38ab_11eb_a9f3_525400dd3525row0_col6\" class=\"data row0 col6\" >-0.628864</td>\n",
        "                        <td id=\"T_ebbdb750_38ab_11eb_a9f3_525400dd3525row0_col7\" class=\"data row0 col7\" >-0.652920</td>\n",
        "                        <td id=\"T_ebbdb750_38ab_11eb_a9f3_525400dd3525row0_col8\" class=\"data row0 col8\" >-0.815020</td>\n",
        "                        <td id=\"T_ebbdb750_38ab_11eb_a9f3_525400dd3525row0_col9\" class=\"data row0 col9\" >-0.360725</td>\n",
        "                        <td id=\"T_ebbdb750_38ab_11eb_a9f3_525400dd3525row0_col10\" class=\"data row0 col10\" >-0.521537</td>\n",
        "                        <td id=\"T_ebbdb750_38ab_11eb_a9f3_525400dd3525row0_col11\" class=\"data row0 col11\" >-0.627844</td>\n",
        "                        <td id=\"T_ebbdb750_38ab_11eb_a9f3_525400dd3525row0_col12\" class=\"data row0 col12\" >-0.595739</td>\n",
        "                        <td id=\"T_ebbdb750_38ab_11eb_a9f3_525400dd3525row0_col13\" class=\"data row0 col13\" >-0.663309</td>\n",
        "                        <td id=\"T_ebbdb750_38ab_11eb_a9f3_525400dd3525row0_col14\" class=\"data row0 col14\" >-0.570346</td>\n",
        "                        <td id=\"T_ebbdb750_38ab_11eb_a9f3_525400dd3525row0_col15\" class=\"data row0 col15\" >-0.394909</td>\n",
        "                        <td id=\"T_ebbdb750_38ab_11eb_a9f3_525400dd3525row0_col16\" class=\"data row0 col16\" >-0.657217</td>\n",
        "            </tr>\n",
        "            <tr>\n",
        "                        <th id=\"T_ebbdb750_38ab_11eb_a9f3_525400dd3525level0_row1\" class=\"row_heading level0 row1\" >theta</th>\n",
        "                        <td id=\"T_ebbdb750_38ab_11eb_a9f3_525400dd3525row1_col0\" class=\"data row1 col0\" >-0.198541</td>\n",
        "                        <td id=\"T_ebbdb750_38ab_11eb_a9f3_525400dd3525row1_col1\" class=\"data row1 col1\" >1.000000</td>\n",
        "                        <td id=\"T_ebbdb750_38ab_11eb_a9f3_525400dd3525row1_col2\" class=\"data row1 col2\" >0.091161</td>\n",
        "                        <td id=\"T_ebbdb750_38ab_11eb_a9f3_525400dd3525row1_col3\" class=\"data row1 col3\" >-0.345078</td>\n",
        "                        <td id=\"T_ebbdb750_38ab_11eb_a9f3_525400dd3525row1_col4\" class=\"data row1 col4\" >0.268473</td>\n",
        "                        <td id=\"T_ebbdb750_38ab_11eb_a9f3_525400dd3525row1_col5\" class=\"data row1 col5\" >0.417450</td>\n",
        "                        <td id=\"T_ebbdb750_38ab_11eb_a9f3_525400dd3525row1_col6\" class=\"data row1 col6\" >0.342339</td>\n",
        "                        <td id=\"T_ebbdb750_38ab_11eb_a9f3_525400dd3525row1_col7\" class=\"data row1 col7\" >0.289511</td>\n",
        "                        <td id=\"T_ebbdb750_38ab_11eb_a9f3_525400dd3525row1_col8\" class=\"data row1 col8\" >0.199629</td>\n",
        "                        <td id=\"T_ebbdb750_38ab_11eb_a9f3_525400dd3525row1_col9\" class=\"data row1 col9\" >0.355362</td>\n",
        "                        <td id=\"T_ebbdb750_38ab_11eb_a9f3_525400dd3525row1_col10\" class=\"data row1 col10\" >0.357657</td>\n",
        "                        <td id=\"T_ebbdb750_38ab_11eb_a9f3_525400dd3525row1_col11\" class=\"data row1 col11\" >0.377485</td>\n",
        "                        <td id=\"T_ebbdb750_38ab_11eb_a9f3_525400dd3525row1_col12\" class=\"data row1 col12\" >0.045418</td>\n",
        "                        <td id=\"T_ebbdb750_38ab_11eb_a9f3_525400dd3525row1_col13\" class=\"data row1 col13\" >0.119442</td>\n",
        "                        <td id=\"T_ebbdb750_38ab_11eb_a9f3_525400dd3525row1_col14\" class=\"data row1 col14\" >-0.291446</td>\n",
        "                        <td id=\"T_ebbdb750_38ab_11eb_a9f3_525400dd3525row1_col15\" class=\"data row1 col15\" >-0.111956</td>\n",
        "                        <td id=\"T_ebbdb750_38ab_11eb_a9f3_525400dd3525row1_col16\" class=\"data row1 col16\" >0.389907</td>\n",
        "            </tr>\n",
        "            <tr>\n",
        "                        <th id=\"T_ebbdb750_38ab_11eb_a9f3_525400dd3525level0_row2\" class=\"row_heading level0 row2\" >kappa</th>\n",
        "                        <td id=\"T_ebbdb750_38ab_11eb_a9f3_525400dd3525row2_col0\" class=\"data row2 col0\" >-0.168540</td>\n",
        "                        <td id=\"T_ebbdb750_38ab_11eb_a9f3_525400dd3525row2_col1\" class=\"data row2 col1\" >0.091161</td>\n",
        "                        <td id=\"T_ebbdb750_38ab_11eb_a9f3_525400dd3525row2_col2\" class=\"data row2 col2\" >1.000000</td>\n",
        "                        <td id=\"T_ebbdb750_38ab_11eb_a9f3_525400dd3525row2_col3\" class=\"data row2 col3\" >0.071538</td>\n",
        "                        <td id=\"T_ebbdb750_38ab_11eb_a9f3_525400dd3525row2_col4\" class=\"data row2 col4\" >0.100308</td>\n",
        "                        <td id=\"T_ebbdb750_38ab_11eb_a9f3_525400dd3525row2_col5\" class=\"data row2 col5\" >0.326104</td>\n",
        "                        <td id=\"T_ebbdb750_38ab_11eb_a9f3_525400dd3525row2_col6\" class=\"data row2 col6\" >0.248902</td>\n",
        "                        <td id=\"T_ebbdb750_38ab_11eb_a9f3_525400dd3525row2_col7\" class=\"data row2 col7\" >0.115463</td>\n",
        "                        <td id=\"T_ebbdb750_38ab_11eb_a9f3_525400dd3525row2_col8\" class=\"data row2 col8\" >0.077752</td>\n",
        "                        <td id=\"T_ebbdb750_38ab_11eb_a9f3_525400dd3525row2_col9\" class=\"data row2 col9\" >0.070434</td>\n",
        "                        <td id=\"T_ebbdb750_38ab_11eb_a9f3_525400dd3525row2_col10\" class=\"data row2 col10\" >0.195735</td>\n",
        "                        <td id=\"T_ebbdb750_38ab_11eb_a9f3_525400dd3525row2_col11\" class=\"data row2 col11\" >0.056283</td>\n",
        "                        <td id=\"T_ebbdb750_38ab_11eb_a9f3_525400dd3525row2_col12\" class=\"data row2 col12\" >-0.145793</td>\n",
        "                        <td id=\"T_ebbdb750_38ab_11eb_a9f3_525400dd3525row2_col13\" class=\"data row2 col13\" >0.175904</td>\n",
        "                        <td id=\"T_ebbdb750_38ab_11eb_a9f3_525400dd3525row2_col14\" class=\"data row2 col14\" >-0.187403</td>\n",
        "                        <td id=\"T_ebbdb750_38ab_11eb_a9f3_525400dd3525row2_col15\" class=\"data row2 col15\" >-0.274800</td>\n",
        "                        <td id=\"T_ebbdb750_38ab_11eb_a9f3_525400dd3525row2_col16\" class=\"data row2 col16\" >0.218844</td>\n",
        "            </tr>\n",
        "            <tr>\n",
        "                        <th id=\"T_ebbdb750_38ab_11eb_a9f3_525400dd3525level0_row3\" class=\"row_heading level0 row3\" >rho</th>\n",
        "                        <td id=\"T_ebbdb750_38ab_11eb_a9f3_525400dd3525row3_col0\" class=\"data row3 col0\" >0.557251</td>\n",
        "                        <td id=\"T_ebbdb750_38ab_11eb_a9f3_525400dd3525row3_col1\" class=\"data row3 col1\" >-0.345078</td>\n",
        "                        <td id=\"T_ebbdb750_38ab_11eb_a9f3_525400dd3525row3_col2\" class=\"data row3 col2\" >0.071538</td>\n",
        "                        <td id=\"T_ebbdb750_38ab_11eb_a9f3_525400dd3525row3_col3\" class=\"data row3 col3\" >1.000000</td>\n",
        "                        <td id=\"T_ebbdb750_38ab_11eb_a9f3_525400dd3525row3_col4\" class=\"data row3 col4\" >-0.725779</td>\n",
        "                        <td id=\"T_ebbdb750_38ab_11eb_a9f3_525400dd3525row3_col5\" class=\"data row3 col5\" >-0.436146</td>\n",
        "                        <td id=\"T_ebbdb750_38ab_11eb_a9f3_525400dd3525row3_col6\" class=\"data row3 col6\" >-0.461909</td>\n",
        "                        <td id=\"T_ebbdb750_38ab_11eb_a9f3_525400dd3525row3_col7\" class=\"data row3 col7\" >-0.478968</td>\n",
        "                        <td id=\"T_ebbdb750_38ab_11eb_a9f3_525400dd3525row3_col8\" class=\"data row3 col8\" >-0.564742</td>\n",
        "                        <td id=\"T_ebbdb750_38ab_11eb_a9f3_525400dd3525row3_col9\" class=\"data row3 col9\" >-0.287622</td>\n",
        "                        <td id=\"T_ebbdb750_38ab_11eb_a9f3_525400dd3525row3_col10\" class=\"data row3 col10\" >-0.371264</td>\n",
        "                        <td id=\"T_ebbdb750_38ab_11eb_a9f3_525400dd3525row3_col11\" class=\"data row3 col11\" >-0.407710</td>\n",
        "                        <td id=\"T_ebbdb750_38ab_11eb_a9f3_525400dd3525row3_col12\" class=\"data row3 col12\" >-0.557725</td>\n",
        "                        <td id=\"T_ebbdb750_38ab_11eb_a9f3_525400dd3525row3_col13\" class=\"data row3 col13\" >-0.390071</td>\n",
        "                        <td id=\"T_ebbdb750_38ab_11eb_a9f3_525400dd3525row3_col14\" class=\"data row3 col14\" >-0.370214</td>\n",
        "                        <td id=\"T_ebbdb750_38ab_11eb_a9f3_525400dd3525row3_col15\" class=\"data row3 col15\" >-0.325667</td>\n",
        "                        <td id=\"T_ebbdb750_38ab_11eb_a9f3_525400dd3525row3_col16\" class=\"data row3 col16\" >-0.510758</td>\n",
        "            </tr>\n",
        "            <tr>\n",
        "                        <th id=\"T_ebbdb750_38ab_11eb_a9f3_525400dd3525level0_row4\" class=\"row_heading level0 row4\" >sigma</th>\n",
        "                        <td id=\"T_ebbdb750_38ab_11eb_a9f3_525400dd3525row4_col0\" class=\"data row4 col0\" >-0.825839</td>\n",
        "                        <td id=\"T_ebbdb750_38ab_11eb_a9f3_525400dd3525row4_col1\" class=\"data row4 col1\" >0.268473</td>\n",
        "                        <td id=\"T_ebbdb750_38ab_11eb_a9f3_525400dd3525row4_col2\" class=\"data row4 col2\" >0.100308</td>\n",
        "                        <td id=\"T_ebbdb750_38ab_11eb_a9f3_525400dd3525row4_col3\" class=\"data row4 col3\" >-0.725779</td>\n",
        "                        <td id=\"T_ebbdb750_38ab_11eb_a9f3_525400dd3525row4_col4\" class=\"data row4 col4\" >1.000000</td>\n",
        "                        <td id=\"T_ebbdb750_38ab_11eb_a9f3_525400dd3525row4_col5\" class=\"data row4 col5\" >0.490538</td>\n",
        "                        <td id=\"T_ebbdb750_38ab_11eb_a9f3_525400dd3525row4_col6\" class=\"data row4 col6\" >0.606369</td>\n",
        "                        <td id=\"T_ebbdb750_38ab_11eb_a9f3_525400dd3525row4_col7\" class=\"data row4 col7\" >0.656584</td>\n",
        "                        <td id=\"T_ebbdb750_38ab_11eb_a9f3_525400dd3525row4_col8\" class=\"data row4 col8\" >0.755784</td>\n",
        "                        <td id=\"T_ebbdb750_38ab_11eb_a9f3_525400dd3525row4_col9\" class=\"data row4 col9\" >0.250178</td>\n",
        "                        <td id=\"T_ebbdb750_38ab_11eb_a9f3_525400dd3525row4_col10\" class=\"data row4 col10\" >0.503272</td>\n",
        "                        <td id=\"T_ebbdb750_38ab_11eb_a9f3_525400dd3525row4_col11\" class=\"data row4 col11\" >0.529739</td>\n",
        "                        <td id=\"T_ebbdb750_38ab_11eb_a9f3_525400dd3525row4_col12\" class=\"data row4 col12\" >0.553986</td>\n",
        "                        <td id=\"T_ebbdb750_38ab_11eb_a9f3_525400dd3525row4_col13\" class=\"data row4 col13\" >0.544017</td>\n",
        "                        <td id=\"T_ebbdb750_38ab_11eb_a9f3_525400dd3525row4_col14\" class=\"data row4 col14\" >0.484126</td>\n",
        "                        <td id=\"T_ebbdb750_38ab_11eb_a9f3_525400dd3525row4_col15\" class=\"data row4 col15\" >0.307167</td>\n",
        "                        <td id=\"T_ebbdb750_38ab_11eb_a9f3_525400dd3525row4_col16\" class=\"data row4 col16\" >0.635219</td>\n",
        "            </tr>\n",
        "            <tr>\n",
        "                        <th id=\"T_ebbdb750_38ab_11eb_a9f3_525400dd3525level0_row5\" class=\"row_heading level0 row5\" >School_closing</th>\n",
        "                        <td id=\"T_ebbdb750_38ab_11eb_a9f3_525400dd3525row5_col0\" class=\"data row5 col0\" >-0.458107</td>\n",
        "                        <td id=\"T_ebbdb750_38ab_11eb_a9f3_525400dd3525row5_col1\" class=\"data row5 col1\" >0.417450</td>\n",
        "                        <td id=\"T_ebbdb750_38ab_11eb_a9f3_525400dd3525row5_col2\" class=\"data row5 col2\" >0.326104</td>\n",
        "                        <td id=\"T_ebbdb750_38ab_11eb_a9f3_525400dd3525row5_col3\" class=\"data row5 col3\" >-0.436146</td>\n",
        "                        <td id=\"T_ebbdb750_38ab_11eb_a9f3_525400dd3525row5_col4\" class=\"data row5 col4\" >0.490538</td>\n",
        "                        <td id=\"T_ebbdb750_38ab_11eb_a9f3_525400dd3525row5_col5\" class=\"data row5 col5\" >1.000000</td>\n",
        "                        <td id=\"T_ebbdb750_38ab_11eb_a9f3_525400dd3525row5_col6\" class=\"data row5 col6\" >0.789525</td>\n",
        "                        <td id=\"T_ebbdb750_38ab_11eb_a9f3_525400dd3525row5_col7\" class=\"data row5 col7\" >0.627098</td>\n",
        "                        <td id=\"T_ebbdb750_38ab_11eb_a9f3_525400dd3525row5_col8\" class=\"data row5 col8\" >0.577958</td>\n",
        "                        <td id=\"T_ebbdb750_38ab_11eb_a9f3_525400dd3525row5_col9\" class=\"data row5 col9\" >0.484820</td>\n",
        "                        <td id=\"T_ebbdb750_38ab_11eb_a9f3_525400dd3525row5_col10\" class=\"data row5 col10\" >0.737317</td>\n",
        "                        <td id=\"T_ebbdb750_38ab_11eb_a9f3_525400dd3525row5_col11\" class=\"data row5 col11\" >0.637328</td>\n",
        "                        <td id=\"T_ebbdb750_38ab_11eb_a9f3_525400dd3525row5_col12\" class=\"data row5 col12\" >0.377436</td>\n",
        "                        <td id=\"T_ebbdb750_38ab_11eb_a9f3_525400dd3525row5_col13\" class=\"data row5 col13\" >0.459586</td>\n",
        "                        <td id=\"T_ebbdb750_38ab_11eb_a9f3_525400dd3525row5_col14\" class=\"data row5 col14\" >-0.098560</td>\n",
        "                        <td id=\"T_ebbdb750_38ab_11eb_a9f3_525400dd3525row5_col15\" class=\"data row5 col15\" >-0.083455</td>\n",
        "                        <td id=\"T_ebbdb750_38ab_11eb_a9f3_525400dd3525row5_col16\" class=\"data row5 col16\" >0.839179</td>\n",
        "            </tr>\n",
        "            <tr>\n",
        "                        <th id=\"T_ebbdb750_38ab_11eb_a9f3_525400dd3525level0_row6\" class=\"row_heading level0 row6\" >Workplace_closing</th>\n",
        "                        <td id=\"T_ebbdb750_38ab_11eb_a9f3_525400dd3525row6_col0\" class=\"data row6 col0\" >-0.628864</td>\n",
        "                        <td id=\"T_ebbdb750_38ab_11eb_a9f3_525400dd3525row6_col1\" class=\"data row6 col1\" >0.342339</td>\n",
        "                        <td id=\"T_ebbdb750_38ab_11eb_a9f3_525400dd3525row6_col2\" class=\"data row6 col2\" >0.248902</td>\n",
        "                        <td id=\"T_ebbdb750_38ab_11eb_a9f3_525400dd3525row6_col3\" class=\"data row6 col3\" >-0.461909</td>\n",
        "                        <td id=\"T_ebbdb750_38ab_11eb_a9f3_525400dd3525row6_col4\" class=\"data row6 col4\" >0.606369</td>\n",
        "                        <td id=\"T_ebbdb750_38ab_11eb_a9f3_525400dd3525row6_col5\" class=\"data row6 col5\" >0.789525</td>\n",
        "                        <td id=\"T_ebbdb750_38ab_11eb_a9f3_525400dd3525row6_col6\" class=\"data row6 col6\" >1.000000</td>\n",
        "                        <td id=\"T_ebbdb750_38ab_11eb_a9f3_525400dd3525row6_col7\" class=\"data row6 col7\" >0.794477</td>\n",
        "                        <td id=\"T_ebbdb750_38ab_11eb_a9f3_525400dd3525row6_col8\" class=\"data row6 col8\" >0.745130</td>\n",
        "                        <td id=\"T_ebbdb750_38ab_11eb_a9f3_525400dd3525row6_col9\" class=\"data row6 col9\" >0.423919</td>\n",
        "                        <td id=\"T_ebbdb750_38ab_11eb_a9f3_525400dd3525row6_col10\" class=\"data row6 col10\" >0.853945</td>\n",
        "                        <td id=\"T_ebbdb750_38ab_11eb_a9f3_525400dd3525row6_col11\" class=\"data row6 col11\" >0.633708</td>\n",
        "                        <td id=\"T_ebbdb750_38ab_11eb_a9f3_525400dd3525row6_col12\" class=\"data row6 col12\" >0.471969</td>\n",
        "                        <td id=\"T_ebbdb750_38ab_11eb_a9f3_525400dd3525row6_col13\" class=\"data row6 col13\" >0.554412</td>\n",
        "                        <td id=\"T_ebbdb750_38ab_11eb_a9f3_525400dd3525row6_col14\" class=\"data row6 col14\" >0.143601</td>\n",
        "                        <td id=\"T_ebbdb750_38ab_11eb_a9f3_525400dd3525row6_col15\" class=\"data row6 col15\" >0.002988</td>\n",
        "                        <td id=\"T_ebbdb750_38ab_11eb_a9f3_525400dd3525row6_col16\" class=\"data row6 col16\" >0.913075</td>\n",
        "            </tr>\n",
        "            <tr>\n",
        "                        <th id=\"T_ebbdb750_38ab_11eb_a9f3_525400dd3525level0_row7\" class=\"row_heading level0 row7\" >Cancel_events</th>\n",
        "                        <td id=\"T_ebbdb750_38ab_11eb_a9f3_525400dd3525row7_col0\" class=\"data row7 col0\" >-0.652920</td>\n",
        "                        <td id=\"T_ebbdb750_38ab_11eb_a9f3_525400dd3525row7_col1\" class=\"data row7 col1\" >0.289511</td>\n",
        "                        <td id=\"T_ebbdb750_38ab_11eb_a9f3_525400dd3525row7_col2\" class=\"data row7 col2\" >0.115463</td>\n",
        "                        <td id=\"T_ebbdb750_38ab_11eb_a9f3_525400dd3525row7_col3\" class=\"data row7 col3\" >-0.478968</td>\n",
        "                        <td id=\"T_ebbdb750_38ab_11eb_a9f3_525400dd3525row7_col4\" class=\"data row7 col4\" >0.656584</td>\n",
        "                        <td id=\"T_ebbdb750_38ab_11eb_a9f3_525400dd3525row7_col5\" class=\"data row7 col5\" >0.627098</td>\n",
        "                        <td id=\"T_ebbdb750_38ab_11eb_a9f3_525400dd3525row7_col6\" class=\"data row7 col6\" >0.794477</td>\n",
        "                        <td id=\"T_ebbdb750_38ab_11eb_a9f3_525400dd3525row7_col7\" class=\"data row7 col7\" >1.000000</td>\n",
        "                        <td id=\"T_ebbdb750_38ab_11eb_a9f3_525400dd3525row7_col8\" class=\"data row7 col8\" >0.777759</td>\n",
        "                        <td id=\"T_ebbdb750_38ab_11eb_a9f3_525400dd3525row7_col9\" class=\"data row7 col9\" >0.215726</td>\n",
        "                        <td id=\"T_ebbdb750_38ab_11eb_a9f3_525400dd3525row7_col10\" class=\"data row7 col10\" >0.636357</td>\n",
        "                        <td id=\"T_ebbdb750_38ab_11eb_a9f3_525400dd3525row7_col11\" class=\"data row7 col11\" >0.563054</td>\n",
        "                        <td id=\"T_ebbdb750_38ab_11eb_a9f3_525400dd3525row7_col12\" class=\"data row7 col12\" >0.540589</td>\n",
        "                        <td id=\"T_ebbdb750_38ab_11eb_a9f3_525400dd3525row7_col13\" class=\"data row7 col13\" >0.682772</td>\n",
        "                        <td id=\"T_ebbdb750_38ab_11eb_a9f3_525400dd3525row7_col14\" class=\"data row7 col14\" >0.345964</td>\n",
        "                        <td id=\"T_ebbdb750_38ab_11eb_a9f3_525400dd3525row7_col15\" class=\"data row7 col15\" >0.197761</td>\n",
        "                        <td id=\"T_ebbdb750_38ab_11eb_a9f3_525400dd3525row7_col16\" class=\"data row7 col16\" >0.862155</td>\n",
        "            </tr>\n",
        "            <tr>\n",
        "                        <th id=\"T_ebbdb750_38ab_11eb_a9f3_525400dd3525level0_row8\" class=\"row_heading level0 row8\" >Gatherings_restrictions</th>\n",
        "                        <td id=\"T_ebbdb750_38ab_11eb_a9f3_525400dd3525row8_col0\" class=\"data row8 col0\" >-0.815020</td>\n",
        "                        <td id=\"T_ebbdb750_38ab_11eb_a9f3_525400dd3525row8_col1\" class=\"data row8 col1\" >0.199629</td>\n",
        "                        <td id=\"T_ebbdb750_38ab_11eb_a9f3_525400dd3525row8_col2\" class=\"data row8 col2\" >0.077752</td>\n",
        "                        <td id=\"T_ebbdb750_38ab_11eb_a9f3_525400dd3525row8_col3\" class=\"data row8 col3\" >-0.564742</td>\n",
        "                        <td id=\"T_ebbdb750_38ab_11eb_a9f3_525400dd3525row8_col4\" class=\"data row8 col4\" >0.755784</td>\n",
        "                        <td id=\"T_ebbdb750_38ab_11eb_a9f3_525400dd3525row8_col5\" class=\"data row8 col5\" >0.577958</td>\n",
        "                        <td id=\"T_ebbdb750_38ab_11eb_a9f3_525400dd3525row8_col6\" class=\"data row8 col6\" >0.745130</td>\n",
        "                        <td id=\"T_ebbdb750_38ab_11eb_a9f3_525400dd3525row8_col7\" class=\"data row8 col7\" >0.777759</td>\n",
        "                        <td id=\"T_ebbdb750_38ab_11eb_a9f3_525400dd3525row8_col8\" class=\"data row8 col8\" >1.000000</td>\n",
        "                        <td id=\"T_ebbdb750_38ab_11eb_a9f3_525400dd3525row8_col9\" class=\"data row8 col9\" >0.412855</td>\n",
        "                        <td id=\"T_ebbdb750_38ab_11eb_a9f3_525400dd3525row8_col10\" class=\"data row8 col10\" >0.666452</td>\n",
        "                        <td id=\"T_ebbdb750_38ab_11eb_a9f3_525400dd3525row8_col11\" class=\"data row8 col11\" >0.749925</td>\n",
        "                        <td id=\"T_ebbdb750_38ab_11eb_a9f3_525400dd3525row8_col12\" class=\"data row8 col12\" >0.722285</td>\n",
        "                        <td id=\"T_ebbdb750_38ab_11eb_a9f3_525400dd3525row8_col13\" class=\"data row8 col13\" >0.688208</td>\n",
        "                        <td id=\"T_ebbdb750_38ab_11eb_a9f3_525400dd3525row8_col14\" class=\"data row8 col14\" >0.529472</td>\n",
        "                        <td id=\"T_ebbdb750_38ab_11eb_a9f3_525400dd3525row8_col15\" class=\"data row8 col15\" >0.364323</td>\n",
        "                        <td id=\"T_ebbdb750_38ab_11eb_a9f3_525400dd3525row8_col16\" class=\"data row8 col16\" >0.798150</td>\n",
        "            </tr>\n",
        "            <tr>\n",
        "                        <th id=\"T_ebbdb750_38ab_11eb_a9f3_525400dd3525level0_row9\" class=\"row_heading level0 row9\" >Transport_closing</th>\n",
        "                        <td id=\"T_ebbdb750_38ab_11eb_a9f3_525400dd3525row9_col0\" class=\"data row9 col0\" >-0.360725</td>\n",
        "                        <td id=\"T_ebbdb750_38ab_11eb_a9f3_525400dd3525row9_col1\" class=\"data row9 col1\" >0.355362</td>\n",
        "                        <td id=\"T_ebbdb750_38ab_11eb_a9f3_525400dd3525row9_col2\" class=\"data row9 col2\" >0.070434</td>\n",
        "                        <td id=\"T_ebbdb750_38ab_11eb_a9f3_525400dd3525row9_col3\" class=\"data row9 col3\" >-0.287622</td>\n",
        "                        <td id=\"T_ebbdb750_38ab_11eb_a9f3_525400dd3525row9_col4\" class=\"data row9 col4\" >0.250178</td>\n",
        "                        <td id=\"T_ebbdb750_38ab_11eb_a9f3_525400dd3525row9_col5\" class=\"data row9 col5\" >0.484820</td>\n",
        "                        <td id=\"T_ebbdb750_38ab_11eb_a9f3_525400dd3525row9_col6\" class=\"data row9 col6\" >0.423919</td>\n",
        "                        <td id=\"T_ebbdb750_38ab_11eb_a9f3_525400dd3525row9_col7\" class=\"data row9 col7\" >0.215726</td>\n",
        "                        <td id=\"T_ebbdb750_38ab_11eb_a9f3_525400dd3525row9_col8\" class=\"data row9 col8\" >0.412855</td>\n",
        "                        <td id=\"T_ebbdb750_38ab_11eb_a9f3_525400dd3525row9_col9\" class=\"data row9 col9\" >1.000000</td>\n",
        "                        <td id=\"T_ebbdb750_38ab_11eb_a9f3_525400dd3525row9_col10\" class=\"data row9 col10\" >0.552887</td>\n",
        "                        <td id=\"T_ebbdb750_38ab_11eb_a9f3_525400dd3525row9_col11\" class=\"data row9 col11\" >0.780135</td>\n",
        "                        <td id=\"T_ebbdb750_38ab_11eb_a9f3_525400dd3525row9_col12\" class=\"data row9 col12\" >0.177987</td>\n",
        "                        <td id=\"T_ebbdb750_38ab_11eb_a9f3_525400dd3525row9_col13\" class=\"data row9 col13\" >0.345742</td>\n",
        "                        <td id=\"T_ebbdb750_38ab_11eb_a9f3_525400dd3525row9_col14\" class=\"data row9 col14\" >0.004872</td>\n",
        "                        <td id=\"T_ebbdb750_38ab_11eb_a9f3_525400dd3525row9_col15\" class=\"data row9 col15\" >0.087785</td>\n",
        "                        <td id=\"T_ebbdb750_38ab_11eb_a9f3_525400dd3525row9_col16\" class=\"data row9 col16\" >0.513877</td>\n",
        "            </tr>\n",
        "            <tr>\n",
        "                        <th id=\"T_ebbdb750_38ab_11eb_a9f3_525400dd3525level0_row10\" class=\"row_heading level0 row10\" >Stay_home_restrictions</th>\n",
        "                        <td id=\"T_ebbdb750_38ab_11eb_a9f3_525400dd3525row10_col0\" class=\"data row10 col0\" >-0.521537</td>\n",
        "                        <td id=\"T_ebbdb750_38ab_11eb_a9f3_525400dd3525row10_col1\" class=\"data row10 col1\" >0.357657</td>\n",
        "                        <td id=\"T_ebbdb750_38ab_11eb_a9f3_525400dd3525row10_col2\" class=\"data row10 col2\" >0.195735</td>\n",
        "                        <td id=\"T_ebbdb750_38ab_11eb_a9f3_525400dd3525row10_col3\" class=\"data row10 col3\" >-0.371264</td>\n",
        "                        <td id=\"T_ebbdb750_38ab_11eb_a9f3_525400dd3525row10_col4\" class=\"data row10 col4\" >0.503272</td>\n",
        "                        <td id=\"T_ebbdb750_38ab_11eb_a9f3_525400dd3525row10_col5\" class=\"data row10 col5\" >0.737317</td>\n",
        "                        <td id=\"T_ebbdb750_38ab_11eb_a9f3_525400dd3525row10_col6\" class=\"data row10 col6\" >0.853945</td>\n",
        "                        <td id=\"T_ebbdb750_38ab_11eb_a9f3_525400dd3525row10_col7\" class=\"data row10 col7\" >0.636357</td>\n",
        "                        <td id=\"T_ebbdb750_38ab_11eb_a9f3_525400dd3525row10_col8\" class=\"data row10 col8\" >0.666452</td>\n",
        "                        <td id=\"T_ebbdb750_38ab_11eb_a9f3_525400dd3525row10_col9\" class=\"data row10 col9\" >0.552887</td>\n",
        "                        <td id=\"T_ebbdb750_38ab_11eb_a9f3_525400dd3525row10_col10\" class=\"data row10 col10\" >1.000000</td>\n",
        "                        <td id=\"T_ebbdb750_38ab_11eb_a9f3_525400dd3525row10_col11\" class=\"data row10 col11\" >0.719707</td>\n",
        "                        <td id=\"T_ebbdb750_38ab_11eb_a9f3_525400dd3525row10_col12\" class=\"data row10 col12\" >0.463882</td>\n",
        "                        <td id=\"T_ebbdb750_38ab_11eb_a9f3_525400dd3525row10_col13\" class=\"data row10 col13\" >0.519065</td>\n",
        "                        <td id=\"T_ebbdb750_38ab_11eb_a9f3_525400dd3525row10_col14\" class=\"data row10 col14\" >0.066628</td>\n",
        "                        <td id=\"T_ebbdb750_38ab_11eb_a9f3_525400dd3525row10_col15\" class=\"data row10 col15\" >0.019971</td>\n",
        "                        <td id=\"T_ebbdb750_38ab_11eb_a9f3_525400dd3525row10_col16\" class=\"data row10 col16\" >0.852604</td>\n",
        "            </tr>\n",
        "            <tr>\n",
        "                        <th id=\"T_ebbdb750_38ab_11eb_a9f3_525400dd3525level0_row11\" class=\"row_heading level0 row11\" >Internal_movement_restrictions</th>\n",
        "                        <td id=\"T_ebbdb750_38ab_11eb_a9f3_525400dd3525row11_col0\" class=\"data row11 col0\" >-0.627844</td>\n",
        "                        <td id=\"T_ebbdb750_38ab_11eb_a9f3_525400dd3525row11_col1\" class=\"data row11 col1\" >0.377485</td>\n",
        "                        <td id=\"T_ebbdb750_38ab_11eb_a9f3_525400dd3525row11_col2\" class=\"data row11 col2\" >0.056283</td>\n",
        "                        <td id=\"T_ebbdb750_38ab_11eb_a9f3_525400dd3525row11_col3\" class=\"data row11 col3\" >-0.407710</td>\n",
        "                        <td id=\"T_ebbdb750_38ab_11eb_a9f3_525400dd3525row11_col4\" class=\"data row11 col4\" >0.529739</td>\n",
        "                        <td id=\"T_ebbdb750_38ab_11eb_a9f3_525400dd3525row11_col5\" class=\"data row11 col5\" >0.637328</td>\n",
        "                        <td id=\"T_ebbdb750_38ab_11eb_a9f3_525400dd3525row11_col6\" class=\"data row11 col6\" >0.633708</td>\n",
        "                        <td id=\"T_ebbdb750_38ab_11eb_a9f3_525400dd3525row11_col7\" class=\"data row11 col7\" >0.563054</td>\n",
        "                        <td id=\"T_ebbdb750_38ab_11eb_a9f3_525400dd3525row11_col8\" class=\"data row11 col8\" >0.749925</td>\n",
        "                        <td id=\"T_ebbdb750_38ab_11eb_a9f3_525400dd3525row11_col9\" class=\"data row11 col9\" >0.780135</td>\n",
        "                        <td id=\"T_ebbdb750_38ab_11eb_a9f3_525400dd3525row11_col10\" class=\"data row11 col10\" >0.719707</td>\n",
        "                        <td id=\"T_ebbdb750_38ab_11eb_a9f3_525400dd3525row11_col11\" class=\"data row11 col11\" >1.000000</td>\n",
        "                        <td id=\"T_ebbdb750_38ab_11eb_a9f3_525400dd3525row11_col12\" class=\"data row11 col12\" >0.428368</td>\n",
        "                        <td id=\"T_ebbdb750_38ab_11eb_a9f3_525400dd3525row11_col13\" class=\"data row11 col13\" >0.552946</td>\n",
        "                        <td id=\"T_ebbdb750_38ab_11eb_a9f3_525400dd3525row11_col14\" class=\"data row11 col14\" >0.227056</td>\n",
        "                        <td id=\"T_ebbdb750_38ab_11eb_a9f3_525400dd3525row11_col15\" class=\"data row11 col15\" >0.219413</td>\n",
        "                        <td id=\"T_ebbdb750_38ab_11eb_a9f3_525400dd3525row11_col16\" class=\"data row11 col16\" >0.742131</td>\n",
        "            </tr>\n",
        "            <tr>\n",
        "                        <th id=\"T_ebbdb750_38ab_11eb_a9f3_525400dd3525level0_row12\" class=\"row_heading level0 row12\" >International_movement_restrictions</th>\n",
        "                        <td id=\"T_ebbdb750_38ab_11eb_a9f3_525400dd3525row12_col0\" class=\"data row12 col0\" >-0.595739</td>\n",
        "                        <td id=\"T_ebbdb750_38ab_11eb_a9f3_525400dd3525row12_col1\" class=\"data row12 col1\" >0.045418</td>\n",
        "                        <td id=\"T_ebbdb750_38ab_11eb_a9f3_525400dd3525row12_col2\" class=\"data row12 col2\" >-0.145793</td>\n",
        "                        <td id=\"T_ebbdb750_38ab_11eb_a9f3_525400dd3525row12_col3\" class=\"data row12 col3\" >-0.557725</td>\n",
        "                        <td id=\"T_ebbdb750_38ab_11eb_a9f3_525400dd3525row12_col4\" class=\"data row12 col4\" >0.553986</td>\n",
        "                        <td id=\"T_ebbdb750_38ab_11eb_a9f3_525400dd3525row12_col5\" class=\"data row12 col5\" >0.377436</td>\n",
        "                        <td id=\"T_ebbdb750_38ab_11eb_a9f3_525400dd3525row12_col6\" class=\"data row12 col6\" >0.471969</td>\n",
        "                        <td id=\"T_ebbdb750_38ab_11eb_a9f3_525400dd3525row12_col7\" class=\"data row12 col7\" >0.540589</td>\n",
        "                        <td id=\"T_ebbdb750_38ab_11eb_a9f3_525400dd3525row12_col8\" class=\"data row12 col8\" >0.722285</td>\n",
        "                        <td id=\"T_ebbdb750_38ab_11eb_a9f3_525400dd3525row12_col9\" class=\"data row12 col9\" >0.177987</td>\n",
        "                        <td id=\"T_ebbdb750_38ab_11eb_a9f3_525400dd3525row12_col10\" class=\"data row12 col10\" >0.463882</td>\n",
        "                        <td id=\"T_ebbdb750_38ab_11eb_a9f3_525400dd3525row12_col11\" class=\"data row12 col11\" >0.428368</td>\n",
        "                        <td id=\"T_ebbdb750_38ab_11eb_a9f3_525400dd3525row12_col12\" class=\"data row12 col12\" >1.000000</td>\n",
        "                        <td id=\"T_ebbdb750_38ab_11eb_a9f3_525400dd3525row12_col13\" class=\"data row12 col13\" >0.583745</td>\n",
        "                        <td id=\"T_ebbdb750_38ab_11eb_a9f3_525400dd3525row12_col14\" class=\"data row12 col14\" >0.529271</td>\n",
        "                        <td id=\"T_ebbdb750_38ab_11eb_a9f3_525400dd3525row12_col15\" class=\"data row12 col15\" >0.510662</td>\n",
        "                        <td id=\"T_ebbdb750_38ab_11eb_a9f3_525400dd3525row12_col16\" class=\"data row12 col16\" >0.602963</td>\n",
        "            </tr>\n",
        "            <tr>\n",
        "                        <th id=\"T_ebbdb750_38ab_11eb_a9f3_525400dd3525level0_row13\" class=\"row_heading level0 row13\" >Information_campaigns</th>\n",
        "                        <td id=\"T_ebbdb750_38ab_11eb_a9f3_525400dd3525row13_col0\" class=\"data row13 col0\" >-0.663309</td>\n",
        "                        <td id=\"T_ebbdb750_38ab_11eb_a9f3_525400dd3525row13_col1\" class=\"data row13 col1\" >0.119442</td>\n",
        "                        <td id=\"T_ebbdb750_38ab_11eb_a9f3_525400dd3525row13_col2\" class=\"data row13 col2\" >0.175904</td>\n",
        "                        <td id=\"T_ebbdb750_38ab_11eb_a9f3_525400dd3525row13_col3\" class=\"data row13 col3\" >-0.390071</td>\n",
        "                        <td id=\"T_ebbdb750_38ab_11eb_a9f3_525400dd3525row13_col4\" class=\"data row13 col4\" >0.544017</td>\n",
        "                        <td id=\"T_ebbdb750_38ab_11eb_a9f3_525400dd3525row13_col5\" class=\"data row13 col5\" >0.459586</td>\n",
        "                        <td id=\"T_ebbdb750_38ab_11eb_a9f3_525400dd3525row13_col6\" class=\"data row13 col6\" >0.554412</td>\n",
        "                        <td id=\"T_ebbdb750_38ab_11eb_a9f3_525400dd3525row13_col7\" class=\"data row13 col7\" >0.682772</td>\n",
        "                        <td id=\"T_ebbdb750_38ab_11eb_a9f3_525400dd3525row13_col8\" class=\"data row13 col8\" >0.688208</td>\n",
        "                        <td id=\"T_ebbdb750_38ab_11eb_a9f3_525400dd3525row13_col9\" class=\"data row13 col9\" >0.345742</td>\n",
        "                        <td id=\"T_ebbdb750_38ab_11eb_a9f3_525400dd3525row13_col10\" class=\"data row13 col10\" >0.519065</td>\n",
        "                        <td id=\"T_ebbdb750_38ab_11eb_a9f3_525400dd3525row13_col11\" class=\"data row13 col11\" >0.552946</td>\n",
        "                        <td id=\"T_ebbdb750_38ab_11eb_a9f3_525400dd3525row13_col12\" class=\"data row13 col12\" >0.583745</td>\n",
        "                        <td id=\"T_ebbdb750_38ab_11eb_a9f3_525400dd3525row13_col13\" class=\"data row13 col13\" >1.000000</td>\n",
        "                        <td id=\"T_ebbdb750_38ab_11eb_a9f3_525400dd3525row13_col14\" class=\"data row13 col14\" >0.568816</td>\n",
        "                        <td id=\"T_ebbdb750_38ab_11eb_a9f3_525400dd3525row13_col15\" class=\"data row13 col15\" >0.558838</td>\n",
        "                        <td id=\"T_ebbdb750_38ab_11eb_a9f3_525400dd3525row13_col16\" class=\"data row13 col16\" >0.712871</td>\n",
        "            </tr>\n",
        "            <tr>\n",
        "                        <th id=\"T_ebbdb750_38ab_11eb_a9f3_525400dd3525level0_row14\" class=\"row_heading level0 row14\" >Testing_policy</th>\n",
        "                        <td id=\"T_ebbdb750_38ab_11eb_a9f3_525400dd3525row14_col0\" class=\"data row14 col0\" >-0.570346</td>\n",
        "                        <td id=\"T_ebbdb750_38ab_11eb_a9f3_525400dd3525row14_col1\" class=\"data row14 col1\" >-0.291446</td>\n",
        "                        <td id=\"T_ebbdb750_38ab_11eb_a9f3_525400dd3525row14_col2\" class=\"data row14 col2\" >-0.187403</td>\n",
        "                        <td id=\"T_ebbdb750_38ab_11eb_a9f3_525400dd3525row14_col3\" class=\"data row14 col3\" >-0.370214</td>\n",
        "                        <td id=\"T_ebbdb750_38ab_11eb_a9f3_525400dd3525row14_col4\" class=\"data row14 col4\" >0.484126</td>\n",
        "                        <td id=\"T_ebbdb750_38ab_11eb_a9f3_525400dd3525row14_col5\" class=\"data row14 col5\" >-0.098560</td>\n",
        "                        <td id=\"T_ebbdb750_38ab_11eb_a9f3_525400dd3525row14_col6\" class=\"data row14 col6\" >0.143601</td>\n",
        "                        <td id=\"T_ebbdb750_38ab_11eb_a9f3_525400dd3525row14_col7\" class=\"data row14 col7\" >0.345964</td>\n",
        "                        <td id=\"T_ebbdb750_38ab_11eb_a9f3_525400dd3525row14_col8\" class=\"data row14 col8\" >0.529472</td>\n",
        "                        <td id=\"T_ebbdb750_38ab_11eb_a9f3_525400dd3525row14_col9\" class=\"data row14 col9\" >0.004872</td>\n",
        "                        <td id=\"T_ebbdb750_38ab_11eb_a9f3_525400dd3525row14_col10\" class=\"data row14 col10\" >0.066628</td>\n",
        "                        <td id=\"T_ebbdb750_38ab_11eb_a9f3_525400dd3525row14_col11\" class=\"data row14 col11\" >0.227056</td>\n",
        "                        <td id=\"T_ebbdb750_38ab_11eb_a9f3_525400dd3525row14_col12\" class=\"data row14 col12\" >0.529271</td>\n",
        "                        <td id=\"T_ebbdb750_38ab_11eb_a9f3_525400dd3525row14_col13\" class=\"data row14 col13\" >0.568816</td>\n",
        "                        <td id=\"T_ebbdb750_38ab_11eb_a9f3_525400dd3525row14_col14\" class=\"data row14 col14\" >1.000000</td>\n",
        "                        <td id=\"T_ebbdb750_38ab_11eb_a9f3_525400dd3525row14_col15\" class=\"data row14 col15\" >0.741213</td>\n",
        "                        <td id=\"T_ebbdb750_38ab_11eb_a9f3_525400dd3525row14_col16\" class=\"data row14 col16\" >0.185725</td>\n",
        "            </tr>\n",
        "            <tr>\n",
        "                        <th id=\"T_ebbdb750_38ab_11eb_a9f3_525400dd3525level0_row15\" class=\"row_heading level0 row15\" >Contact_tracing</th>\n",
        "                        <td id=\"T_ebbdb750_38ab_11eb_a9f3_525400dd3525row15_col0\" class=\"data row15 col0\" >-0.394909</td>\n",
        "                        <td id=\"T_ebbdb750_38ab_11eb_a9f3_525400dd3525row15_col1\" class=\"data row15 col1\" >-0.111956</td>\n",
        "                        <td id=\"T_ebbdb750_38ab_11eb_a9f3_525400dd3525row15_col2\" class=\"data row15 col2\" >-0.274800</td>\n",
        "                        <td id=\"T_ebbdb750_38ab_11eb_a9f3_525400dd3525row15_col3\" class=\"data row15 col3\" >-0.325667</td>\n",
        "                        <td id=\"T_ebbdb750_38ab_11eb_a9f3_525400dd3525row15_col4\" class=\"data row15 col4\" >0.307167</td>\n",
        "                        <td id=\"T_ebbdb750_38ab_11eb_a9f3_525400dd3525row15_col5\" class=\"data row15 col5\" >-0.083455</td>\n",
        "                        <td id=\"T_ebbdb750_38ab_11eb_a9f3_525400dd3525row15_col6\" class=\"data row15 col6\" >0.002988</td>\n",
        "                        <td id=\"T_ebbdb750_38ab_11eb_a9f3_525400dd3525row15_col7\" class=\"data row15 col7\" >0.197761</td>\n",
        "                        <td id=\"T_ebbdb750_38ab_11eb_a9f3_525400dd3525row15_col8\" class=\"data row15 col8\" >0.364323</td>\n",
        "                        <td id=\"T_ebbdb750_38ab_11eb_a9f3_525400dd3525row15_col9\" class=\"data row15 col9\" >0.087785</td>\n",
        "                        <td id=\"T_ebbdb750_38ab_11eb_a9f3_525400dd3525row15_col10\" class=\"data row15 col10\" >0.019971</td>\n",
        "                        <td id=\"T_ebbdb750_38ab_11eb_a9f3_525400dd3525row15_col11\" class=\"data row15 col11\" >0.219413</td>\n",
        "                        <td id=\"T_ebbdb750_38ab_11eb_a9f3_525400dd3525row15_col12\" class=\"data row15 col12\" >0.510662</td>\n",
        "                        <td id=\"T_ebbdb750_38ab_11eb_a9f3_525400dd3525row15_col13\" class=\"data row15 col13\" >0.558838</td>\n",
        "                        <td id=\"T_ebbdb750_38ab_11eb_a9f3_525400dd3525row15_col14\" class=\"data row15 col14\" >0.741213</td>\n",
        "                        <td id=\"T_ebbdb750_38ab_11eb_a9f3_525400dd3525row15_col15\" class=\"data row15 col15\" >1.000000</td>\n",
        "                        <td id=\"T_ebbdb750_38ab_11eb_a9f3_525400dd3525row15_col16\" class=\"data row15 col16\" >0.127003</td>\n",
        "            </tr>\n",
        "            <tr>\n",
        "                        <th id=\"T_ebbdb750_38ab_11eb_a9f3_525400dd3525level0_row16\" class=\"row_heading level0 row16\" >Stringency_index</th>\n",
        "                        <td id=\"T_ebbdb750_38ab_11eb_a9f3_525400dd3525row16_col0\" class=\"data row16 col0\" >-0.657217</td>\n",
        "                        <td id=\"T_ebbdb750_38ab_11eb_a9f3_525400dd3525row16_col1\" class=\"data row16 col1\" >0.389907</td>\n",
        "                        <td id=\"T_ebbdb750_38ab_11eb_a9f3_525400dd3525row16_col2\" class=\"data row16 col2\" >0.218844</td>\n",
        "                        <td id=\"T_ebbdb750_38ab_11eb_a9f3_525400dd3525row16_col3\" class=\"data row16 col3\" >-0.510758</td>\n",
        "                        <td id=\"T_ebbdb750_38ab_11eb_a9f3_525400dd3525row16_col4\" class=\"data row16 col4\" >0.635219</td>\n",
        "                        <td id=\"T_ebbdb750_38ab_11eb_a9f3_525400dd3525row16_col5\" class=\"data row16 col5\" >0.839179</td>\n",
        "                        <td id=\"T_ebbdb750_38ab_11eb_a9f3_525400dd3525row16_col6\" class=\"data row16 col6\" >0.913075</td>\n",
        "                        <td id=\"T_ebbdb750_38ab_11eb_a9f3_525400dd3525row16_col7\" class=\"data row16 col7\" >0.862155</td>\n",
        "                        <td id=\"T_ebbdb750_38ab_11eb_a9f3_525400dd3525row16_col8\" class=\"data row16 col8\" >0.798150</td>\n",
        "                        <td id=\"T_ebbdb750_38ab_11eb_a9f3_525400dd3525row16_col9\" class=\"data row16 col9\" >0.513877</td>\n",
        "                        <td id=\"T_ebbdb750_38ab_11eb_a9f3_525400dd3525row16_col10\" class=\"data row16 col10\" >0.852604</td>\n",
        "                        <td id=\"T_ebbdb750_38ab_11eb_a9f3_525400dd3525row16_col11\" class=\"data row16 col11\" >0.742131</td>\n",
        "                        <td id=\"T_ebbdb750_38ab_11eb_a9f3_525400dd3525row16_col12\" class=\"data row16 col12\" >0.602963</td>\n",
        "                        <td id=\"T_ebbdb750_38ab_11eb_a9f3_525400dd3525row16_col13\" class=\"data row16 col13\" >0.712871</td>\n",
        "                        <td id=\"T_ebbdb750_38ab_11eb_a9f3_525400dd3525row16_col14\" class=\"data row16 col14\" >0.185725</td>\n",
        "                        <td id=\"T_ebbdb750_38ab_11eb_a9f3_525400dd3525row16_col15\" class=\"data row16 col15\" >0.127003</td>\n",
        "                        <td id=\"T_ebbdb750_38ab_11eb_a9f3_525400dd3525row16_col16\" class=\"data row16 col16\" >1.000000</td>\n",
        "            </tr>\n",
        "    </tbody></table>"
       ],
       "output_type": "pyout",
       "prompt_number": 21,
       "text": [
        "<pandas.io.formats.style.Styler at 0x7fcc4b501a90>"
       ]
      }
     ],
     "prompt_number": 21
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "# Scatter plot of Stringency index and Rt\n",
      "df = track_df.copy()\n",
      "sns.scatterplot(data=df, x=\"Stringency_index\", y=\"Rt\", hue=\"Country\", legend=\"brief\", marker=\"+\")\n",
      "bbox_to_anchor=(1.02, 0)\n",
      "bbox_loc=\"lower left\"\n",
      "plt.legend(bbox_to_anchor=bbox_to_anchor, loc=bbox_loc, borderaxespad=0)\n",
      "plt.title(\"Relationship of Stringency index and reproduction number\")\n",
      "plt.ylabel(\"Reproduction number\")\n",
      "plt.xlabel(\"Stringency index\")\n",
      "plt.show()"
     ],
     "language": "python",
     "metadata": {},
     "outputs": [
      {
       "output_type": "display_data",
       "png": "\n",
       "text": [
        "<Figure size 432x288 with 1 Axes>"
       ]
      }
     ],
     "prompt_number": 22
    }
   ],
   "metadata": {}
  }
 ]
}
