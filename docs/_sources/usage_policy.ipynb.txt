{
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3.8.2 64-bit ('.venv': venv)",
   "name": "python_defaultSpec_1597669925034"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.8.2-final"
  },
  "name": ""
 },
 "nbformat": 3,
 "nbformat_minor": 0,
 "worksheets": [
  {
   "cells": [
    {
     "cell_type": "markdown",
     "metadata": {},
     "source": [
      "# Usage (details: policy measures)\n",
      "Here, we will analyse the relationship of policy measures and parameter values of SIR-derived ODE models. Policy measures are tracked by [Oxford Covid-19 Government Response Tracker (OxCGRT)](https://github.com/OxCGRT/covid-policy-tracker)."
     ]
    },
    {
     "cell_type": "heading",
     "level": 2,
     "metadata": {},
     "source": [
      "Preparation"
     ]
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "# Standard users\n",
      "# !pip install covsirphy\n",
      "# Developers (Note: this notebook is in example directory)\n",
      "import os\n",
      "os.chdir(\"../\")"
     ],
     "language": "python",
     "metadata": {},
     "outputs": [],
     "prompt_number": 1
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "from pprint import pprint"
     ],
     "language": "python",
     "metadata": {},
     "outputs": [],
     "prompt_number": 2
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "import covsirphy as cs\n",
      "cs.__version__"
     ],
     "language": "python",
     "metadata": {},
     "outputs": [
      {
       "output_type": "pyout",
       "prompt_number": 3,
       "text": [
        "'2.8.3'"
       ]
      }
     ],
     "prompt_number": 3
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "# Standard users and developers\n",
      "data_loader = cs.DataLoader(\"input\")\n",
      "# The number of cases (JHU style)\n",
      "jhu_data = data_loader.jhu(verbose=False)\n",
      "# Population in each country\n",
      "population_data = data_loader.population(verbose=False)\n",
      "# Government Response Tracker (OxCGRT)\n",
      "oxcgrt_data = data_loader.oxcgrt(verbose=False)\n",
      "# Description/citation\n",
      "print(oxcgrt_data.citation)"
     ],
     "language": "python",
     "metadata": {
      "tags": []
     },
     "outputs": [
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "(Secondary source) Guidotti, E., Ardia, D., (2020), \"COVID-19 Data Hub\", Journal of Open Source Software 5(51):2376, doi: 10.21105/joss.02376.\n",
        "We can get Citation list of primary sources with DataLoader(...).covid19dh_citation"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      }
     ],
     "prompt_number": 4
    },
    {
     "cell_type": "markdown",
     "metadata": {},
     "source": [
      "## Class for policy measure analysis\n",
      "We will `PolicyMeasures` class to find relationship of policy measures and parameter values of SIR-derived ODE models."
     ]
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "# Create analyser with tau value 360 [min] (can be changed)\n",
      "analyser = cs.PolicyMeasures(jhu_data, population_data, oxcgrt_data, tau=360)\n",
      "# The number of registerd countries\n",
      "len(analyser.countries)"
     ],
     "language": "python",
     "metadata": {
      "tags": []
     },
     "outputs": [
      {
       "output_type": "pyout",
       "prompt_number": 5,
       "text": [
        "184"
       ]
      }
     ],
     "prompt_number": 5
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "# We can get Scenario instance for detailed scenario analysis\n",
      "type(analyser.scenario(\"Japan\"))"
     ],
     "language": "python",
     "metadata": {},
     "outputs": [
      {
       "output_type": "pyout",
       "prompt_number": 6,
       "text": [
        "covsirphy.analysis.scenario.Scenario"
       ]
      }
     ],
     "prompt_number": 6
    },
    {
     "cell_type": "markdown",
     "metadata": {},
     "source": [
      "## Set phases with S-R trend analysis\n",
      "We will perform S-R trend analysis to set phases in all countries. Countries which do not have **12th phases** will be un-registered for the next analysis. This number will be adjusted for your analysis."
     ]
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "# Show the number of phases of all countries\n",
      "analyser.trend()\n",
      "pprint(analyser.phase_len(), compact=True)"
     ],
     "language": "python",
     "metadata": {},
     "outputs": [
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "{"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "4"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ": "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "['Georgia', 'Tanzania', 'Myanmar']"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        " "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "5"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ": "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "["
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Grenada'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Papua New Guinea'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Uganda'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Mauritius'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        "     "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Antigua and Barbuda'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Brunei'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Belize'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Trinidad and Tobago'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Fiji'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        "     "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Libya'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Dominica'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Jamaica'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Tunisia'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "]"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        " "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "6"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ": "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "["
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Kosovo'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Sao Tome and Principe'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Monaco'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Equatorial Guinea'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        "     "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Burundi'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Guyana'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Czech Republic'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Seychelles'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Yemen'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Cambodia'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        "     "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Lebanon'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Namibia'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Kyrgyzstan'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Jordan'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Netherlands'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Ireland'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "]"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        " "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "7"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ": "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "["
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Australia'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Saint Vincent and the Grenadines'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Malawi'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Ethiopia'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        "     "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'San Marino'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Vietnam'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Lesotho'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Spain'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Cyprus'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Eritrea'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        "     "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Paraguay'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Syria'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Zimbabwe'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Zambia'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Rwanda'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Norway'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Iceland'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        "     "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Bahamas'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Afghanistan'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Central African Republic'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'New Zealand'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        "     "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Kazakhstan'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Bhutan'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Mongolia'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Nepal'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Angola'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Guinea-Bissau'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        "     "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Colombia'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Gambia'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Slovakia'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'South Sudan'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Croatia'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Hungary'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        "     "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Comoros'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Madagascar'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Botswana'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Palestine'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "]"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        " "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "8"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ": "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "["
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Malta'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Costa Rica'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Barbados'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Niger'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Suriname'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Philippines'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        "     "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Argentina'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Taiwan'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Saint Lucia'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Sri Lanka'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Morocco'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        "     "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Liechtenstein'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Kenya'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Slovenia'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Thailand'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Israel'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Ghana'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        "     "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Andorra'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Mozambique'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Uruguay'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Montenegro'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Venezuela'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        "     "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Guatemala'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "]"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        " "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "9"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ": "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "["
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Chad'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Oman'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Indonesia'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Sudan'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'China'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Bermuda'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Denmark'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        "     "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Cuba'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Qatar'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Congo'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Tajikistan'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Djibouti'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Austria'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Cameroon'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        "     "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Gabon'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Japan'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Maldives'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Somalia'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Korea, South'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Benin'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        "     "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Mauritania'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Greece'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'South Africa'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Pakistan'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Ukraine'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'India'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        "     "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Uzbekistan'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Liberia'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Cape Verde'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Haiti'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "]"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        " "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "10"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ": "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "["
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Lithuania'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Finland'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Sierra Leone'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Swaziland'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Algeria'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        "      "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Bosnia and Herzegovina'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Chile'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Togo'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Moldova'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Germany'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        "      "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Albania'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Malaysia'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Serbia'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Burkina Faso'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Mali'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Iraq'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        "      "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Belarus'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Canada'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Romania'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Poland'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Saudi Arabia'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Bulgaria'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        "      "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Nicaragua'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Singapore'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Armenia'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Honduras'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'El Salvador'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Senegal'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        "      "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Ecuador'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Luxembourg'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Azerbaijan'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "]"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        " "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "11"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ": "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "["
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Bolivia'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Bangladesh'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Peru'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Panama'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Kuwait'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Dominican Republic'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        "      "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Latvia'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Belgium'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Estonia'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Macedonia'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Guinea'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Egypt'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Mexico'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        "      "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Turkey'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Switzerland'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "]"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        " "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "12"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ": "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "["
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'France'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Bahrain'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Portugal'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'United Arab Emirates'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'United States'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        "      "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Brazil'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Iran'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Nigeria'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Italy'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "]"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        " "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "13"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ": "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "['Russia']"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "}"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      }
     ],
     "prompt_number": 7
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "# Set phases with S-R trend analysis\n",
      "analyser.trend(min_len=12)\n",
      "# The number of countries\n",
      "len(analyser.countries)"
     ],
     "language": "python",
     "metadata": {},
     "outputs": [
      {
       "output_type": "pyout",
       "prompt_number": 8,
       "text": [
        "10"
       ]
      }
     ],
     "prompt_number": 8
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "phase_len_dict = analyser.phase_len()\n",
      "pprint(phase_len_dict, compact=True)"
     ],
     "language": "python",
     "metadata": {
      "tags": []
     },
     "outputs": [
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "{"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "12"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ": "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "["
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'France'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Bahrain'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Portugal'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'United Arab Emirates'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'United States'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        "      "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Brazil'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Iran'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Nigeria'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Italy'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "]"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        " "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "13"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ": "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "['Russia']"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "}"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      }
     ],
     "prompt_number": 9
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "# Here, only show the countries which have the most phases\n",
      "countries_show = max(phase_len_dict.items(), key=lambda x: x[0])[1]\n",
      "# Show summary\n",
      "analyser.summary(countries=countries_show)"
     ],
     "language": "python",
     "metadata": {
      "tags": []
     },
     "outputs": [
      {
       "html": [
        "<div>\n",
        "<style scoped>\n",
        "    .dataframe tbody tr th:only-of-type {\n",
        "        vertical-align: middle;\n",
        "    }\n",
        "\n",
        "    .dataframe tbody tr th {\n",
        "        vertical-align: top;\n",
        "    }\n",
        "\n",
        "    .dataframe thead th {\n",
        "        text-align: right;\n",
        "    }\n",
        "</style>\n",
        "<table border=\"1\" class=\"dataframe\">\n",
        "  <thead>\n",
        "    <tr style=\"text-align: right;\">\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th>Type</th>\n",
        "      <th>Start</th>\n",
        "      <th>End</th>\n",
        "      <th>Population</th>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>Country</th>\n",
        "      <th>Phase</th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "    </tr>\n",
        "  </thead>\n",
        "  <tbody>\n",
        "    <tr>\n",
        "      <th rowspan=\"13\" valign=\"top\">Russia</th>\n",
        "      <th>0th</th>\n",
        "      <td>Past</td>\n",
        "      <td>12Feb2020</td>\n",
        "      <td>06May2020</td>\n",
        "      <td>330457362</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>1st</th>\n",
        "      <td>Past</td>\n",
        "      <td>07May2020</td>\n",
        "      <td>16May2020</td>\n",
        "      <td>330457362</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>2nd</th>\n",
        "      <td>Past</td>\n",
        "      <td>17May2020</td>\n",
        "      <td>26May2020</td>\n",
        "      <td>330457362</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>3rd</th>\n",
        "      <td>Past</td>\n",
        "      <td>27May2020</td>\n",
        "      <td>04Jun2020</td>\n",
        "      <td>330457362</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>4th</th>\n",
        "      <td>Past</td>\n",
        "      <td>05Jun2020</td>\n",
        "      <td>13Jun2020</td>\n",
        "      <td>330457362</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>5th</th>\n",
        "      <td>Past</td>\n",
        "      <td>14Jun2020</td>\n",
        "      <td>23Jun2020</td>\n",
        "      <td>330457362</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>6th</th>\n",
        "      <td>Past</td>\n",
        "      <td>24Jun2020</td>\n",
        "      <td>05Jul2020</td>\n",
        "      <td>330457362</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>7th</th>\n",
        "      <td>Past</td>\n",
        "      <td>06Jul2020</td>\n",
        "      <td>17Jul2020</td>\n",
        "      <td>330457362</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>8th</th>\n",
        "      <td>Past</td>\n",
        "      <td>18Jul2020</td>\n",
        "      <td>31Jul2020</td>\n",
        "      <td>330457362</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>9th</th>\n",
        "      <td>Past</td>\n",
        "      <td>01Aug2020</td>\n",
        "      <td>14Aug2020</td>\n",
        "      <td>330457362</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>10th</th>\n",
        "      <td>Past</td>\n",
        "      <td>15Aug2020</td>\n",
        "      <td>31Aug2020</td>\n",
        "      <td>330457362</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>11th</th>\n",
        "      <td>Past</td>\n",
        "      <td>01Sep2020</td>\n",
        "      <td>16Sep2020</td>\n",
        "      <td>330457362</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>12th</th>\n",
        "      <td>Past</td>\n",
        "      <td>17Sep2020</td>\n",
        "      <td>01Oct2020</td>\n",
        "      <td>330457362</td>\n",
        "    </tr>\n",
        "  </tbody>\n",
        "</table>\n",
        "</div>"
       ],
       "output_type": "pyout",
       "prompt_number": 10,
       "text": [
        "               Type      Start        End  Population\n",
        "Country Phase                                        \n",
        "Russia  0th    Past  12Feb2020  06May2020   330457362\n",
        "        1st    Past  07May2020  16May2020   330457362\n",
        "        2nd    Past  17May2020  26May2020   330457362\n",
        "        3rd    Past  27May2020  04Jun2020   330457362\n",
        "        4th    Past  05Jun2020  13Jun2020   330457362\n",
        "        5th    Past  14Jun2020  23Jun2020   330457362\n",
        "        6th    Past  24Jun2020  05Jul2020   330457362\n",
        "        7th    Past  06Jul2020  17Jul2020   330457362\n",
        "        8th    Past  18Jul2020  31Jul2020   330457362\n",
        "        9th    Past  01Aug2020  14Aug2020   330457362\n",
        "        10th   Past  15Aug2020  31Aug2020   330457362\n",
        "        11th   Past  01Sep2020  16Sep2020   330457362\n",
        "        12th   Past  17Sep2020  01Oct2020   330457362"
       ]
      }
     ],
     "prompt_number": 10
    },
    {
     "cell_type": "markdown",
     "metadata": {},
     "source": [
      "## Parameter estimation\n",
      "we will estimate the parameter values with SIR-derived ODE models in each country."
     ]
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "# Parameter estimation with SIR-F model\n",
      "analyser.estimate(cs.SIRF)"
     ],
     "language": "python",
     "metadata": {
      "tags": []
     },
     "outputs": [
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n",
        "<SIR-F model: parameter estimation>"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "Running optimization with 4 CPUs..."
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tARE,  8th phase (16Aug2020 - 02Sep2020): finished  649 trials in 0 min 25 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tBRA,  6th phase (29Jul2020 - 05Aug2020): finished 1255 trials in 0 min 55 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tBHR,  1st phase (12May2020 - 31May2020): finished 1316 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tPRT, 10th phase (12Sep2020 - 21Sep2020): finished 1311 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tRUS,  6th phase (24Jun2020 - 05Jul2020): finished 1344 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tBRA,  2nd phase (14Jun2020 - 26Jun2020): finished 1141 trials in 0 min 50 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tBRA,  5th phase (21Jul2020 - 28Jul2020): finished 1325 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tITA,  0th phase (24Feb2020 - 20Mar2020): finished 1298 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tUSA,  9th phase (21Aug2020 - 02Sep2020): finished  148 trials in 0 min  5 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tBRA,  4th phase (09Jul2020 - 20Jul2020): finished  404 trials in 0 min 15 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tFRA,  3rd phase (13Apr2020 - 21Apr2020): finished 1307 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tPRT,  4th phase (13Jun2020 - 25Jun2020): finished 1296 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tUSA,  4th phase (26Jun2020 - 07Jul2020): finished 1302 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tBHR,  3rd phase (14Jun2020 - 24Jun2020): finished 1294 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tARE,  1st phase (28Apr2020 - 14May2020): finished 1290 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tARE,  4th phase (06Jun2020 - 19Jun2020): finished 1019 trials in 0 min 45 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tRUS,  2nd phase (17May2020 - 26May2020): finished 1287 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tNGA,  4th phase (26Jun2020 - 03Jul2020): finished  287 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tFRA,  0th phase (12Feb2020 - 23Mar2020): finished 1263 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tUSA,  1st phase (20Apr2020 - 12May2020): finished 1285 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tIRN,  1st phase (30Mar2020 - 17Apr2020): finished 1284 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tFRA,  4th phase (22Apr2020 - 04May2020): finished 1303 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tITA,  6th phase (10May2020 - 21May2020): finished  148 trials in 0 min  5 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tRUS,  9th phase (01Aug2020 - 14Aug2020): finished 1299 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tRUS,  8th phase (18Jul2020 - 31Jul2020): finished 1296 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tUSA,  3rd phase (05Jun2020 - 25Jun2020): finished 1285 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tRUS, 10th phase (15Aug2020 - 31Aug2020): finished 1279 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tNGA,  9th phase (08Aug2020 - 18Aug2020): finished  407 trials in 0 min 15 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tPRT,  2nd phase (15May2020 - 30May2020): finished 1285 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tBHR, 11th phase (21Sep2020 - 01Oct2020): finished  272 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tIRN, 10th phase (02Sep2020 - 17Sep2020): finished 1292 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tFRA, 11th phase (17Sep2020 - 01Oct2020): finished  495 trials in 0 min 20 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tPRT,  6th phase (09Jul2020 - 22Jul2020): finished 1257 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tFRA,  1st phase (24Mar2020 - 02Apr2020): finished 1260 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tBHR,  2nd phase (01Jun2020 - 13Jun2020): finished 1263 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tBRA,  8th phase (15Aug2020 - 24Aug2020): finished  264 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tNGA,  2nd phase (08Jun2020 - 17Jun2020): finished 1273 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tPRT,  7th phase (23Jul2020 - 11Aug2020): finished 1278 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tUSA,  2nd phase (13May2020 - 04Jun2020): finished 1279 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tRUS,  0th phase (12Feb2020 - 06May2020): finished 1311 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tPRT,  8th phase (12Aug2020 - 30Aug2020): finished 1290 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tRUS,  1st phase (07May2020 - 16May2020): finished 1308 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tUSA, 10th phase (03Sep2020 - 17Sep2020): finished  751 trials in 0 min 30 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tUSA,  7th phase (29Jul2020 - 07Aug2020): finished 1129 trials in 0 min 50 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tNGA, 10th phase (19Aug2020 - 02Sep2020): finished  415 trials in 0 min 15 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tPRT,  3rd phase (31May2020 - 12Jun2020): finished 1325 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tIRN,  4th phase (02Jun2020 - 16Jun2020): finished  841 trials in 0 min 35 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tIRN,  9th phase (15Aug2020 - 01Sep2020): finished 1312 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tBHR, 10th phase (13Sep2020 - 20Sep2020): finished 1300 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tARE,  5th phase (20Jun2020 - 03Jul2020): finished 1000 trials in 0 min 45 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tPRT,  1st phase (29Apr2020 - 14May2020): finished 1304 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tITA,  5th phase (01May2020 - 09May2020): finished  663 trials in 0 min 25 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tUSA,  5th phase (08Jul2020 - 17Jul2020): finished  427 trials in 0 min 15 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tBRA, 11th phase (16Sep2020 - 01Oct2020): finished 1375 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tITA, 11th phase (19Sep2020 - 01Oct2020): finished  439 trials in 0 min 15 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tARE,  0th phase (12Feb2020 - 27Apr2020): finished 1350 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tFRA,  9th phase (24Aug2020 - 07Sep2020): finished 1046 trials in 0 min 40 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tFRA, 10th phase (08Sep2020 - 16Sep2020): finished  428 trials in 0 min 15 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tBHR,  8th phase (18Aug2020 - 03Sep2020): finished  576 trials in 0 min 20 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tPRT,  5th phase (26Jun2020 - 08Jul2020): finished 1392 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tBHR,  6th phase (19Jul2020 - 03Aug2020): finished  151 trials in 0 min  5 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tFRA,  8th phase (03Aug2020 - 23Aug2020): finished 1365 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tBRA,  1st phase (27May2020 - 13Jun2020): finished 1346 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tRUS,  7th phase (06Jul2020 - 17Jul2020): finished 1316 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tARE,  7th phase (21Jul2020 - 15Aug2020): finished 1031 trials in 0 min 45 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tUSA,  6th phase (18Jul2020 - 28Jul2020): finished  279 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tARE,  3rd phase (25May2020 - 05Jun2020): finished 1309 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tNGA,  0th phase (18Mar2020 - 21May2020): finished 1231 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tPRT,  0th phase (14Mar2020 - 28Apr2020): finished 1248 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tARE,  6th phase (04Jul2020 - 20Jul2020): finished 1291 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tBRA,  3rd phase (27Jun2020 - 08Jul2020): finished 1278 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tIRN,  6th phase (02Jul2020 - 15Jul2020): finished  144 trials in 0 min  5 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tITA,  9th phase (04Aug2020 - 31Aug2020): finished 1325 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tITA,  8th phase (16Jun2020 - 03Aug2020): finished  619 trials in 0 min 25 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tBRA,  0th phase (16Mar2020 - 26May2020): finished 1290 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tFRA,  5th phase (05May2020 - 28May2020): finished 1286 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tPRT,  9th phase (31Aug2020 - 11Sep2020): finished 1273 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tIRN,  0th phase (26Feb2020 - 29Mar2020): finished 1235 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tBHR,  0th phase (06Mar2020 - 11May2020): finished 1164 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tUSA,  0th phase (09Feb2020 - 19Apr2020): finished 1205 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tARE,  2nd phase (15May2020 - 24May2020): finished 1291 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tIRN,  8th phase (30Jul2020 - 14Aug2020): finished 1368 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tRUS,  4th phase (05Jun2020 - 13Jun2020): finished 1430 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tFRA,  2nd phase (03Apr2020 - 12Apr2020): finished 1426 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tNGA, 11th phase (03Sep2020 - 01Oct2020): finished 1415 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tITA,  3rd phase (09Apr2020 - 18Apr2020): finished  310 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tBRA,  9th phase (25Aug2020 - 02Sep2020): finished  323 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tNGA,  3rd phase (18Jun2020 - 25Jun2020): finished  323 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tIRN,  5th phase (17Jun2020 - 01Jul2020): finished 1440 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tBHR,  9th phase (04Sep2020 - 12Sep2020): finished 1443 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tITA,  7th phase (22May2020 - 15Jun2020): finished  317 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tRUS,  3rd phase (27May2020 - 04Jun2020): finished 1401 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tUSA,  8th phase (08Aug2020 - 20Aug2020): finished  569 trials in 0 min 20 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tBRA, 10th phase (03Sep2020 - 15Sep2020): finished 1352 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tNGA,  1st phase (22May2020 - 07Jun2020): finished 1346 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tITA,  1st phase (21Mar2020 - 28Mar2020): finished 1329 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tBHR,  5th phase (07Jul2020 - 18Jul2020): finished 1263 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tITA,  2nd phase (29Mar2020 - 08Apr2020): finished 1204 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tPRT, 11th phase (22Sep2020 - 01Oct2020): finished 1269 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tRUS, 11th phase (01Sep2020 - 16Sep2020): finished 1336 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tITA,  4th phase (19Apr2020 - 30Apr2020): finished  359 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tIRN,  7th phase (16Jul2020 - 29Jul2020): finished 1373 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tNGA,  5th phase (04Jul2020 - 11Jul2020): finished  376 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tBHR,  7th phase (04Aug2020 - 17Aug2020): finished 1078 trials in 0 min 35 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tIRN,  3rd phase (14May2020 - 01Jun2020): finished  554 trials in 0 min 15 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tITA, 10th phase (01Sep2020 - 18Sep2020): finished  228 trials in 0 min  5 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tNGA,  6th phase (12Jul2020 - 20Jul2020): finished  607 trials in 0 min 15 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tUSA, 11th phase (18Sep2020 - 01Oct2020): finished  972 trials in 0 min 25 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tBRA,  7th phase (06Aug2020 - 14Aug2020): finished  663 trials in 0 min 15 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tIRN,  2nd phase (18Apr2020 - 13May2020): finished  233 trials in 0 min  5 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tFRA,  6th phase (29May2020 - 01Jul2020): finished 1908 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tARE,  9th phase (03Sep2020 - 11Sep2020): finished 1961 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tRUS,  5th phase (14Jun2020 - 23Jun2020): finished 1961 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tFRA,  7th phase (02Jul2020 - 02Aug2020): finished 1963 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tBHR,  4th phase (25Jun2020 - 06Jul2020): finished  676 trials in 0 min 15 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "Completed optimization. Total: 24 min  2 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      }
     ],
     "prompt_number": 11
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "# Show summary\n",
      "analyser.summary(countries=countries_show)"
     ],
     "language": "python",
     "metadata": {},
     "outputs": [
      {
       "html": [
        "<div>\n",
        "<style scoped>\n",
        "    .dataframe tbody tr th:only-of-type {\n",
        "        vertical-align: middle;\n",
        "    }\n",
        "\n",
        "    .dataframe tbody tr th {\n",
        "        vertical-align: top;\n",
        "    }\n",
        "\n",
        "    .dataframe thead th {\n",
        "        text-align: right;\n",
        "    }\n",
        "</style>\n",
        "<table border=\"1\" class=\"dataframe\">\n",
        "  <thead>\n",
        "    <tr style=\"text-align: right;\">\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th>Type</th>\n",
        "      <th>Start</th>\n",
        "      <th>End</th>\n",
        "      <th>Population</th>\n",
        "      <th>ODE</th>\n",
        "      <th>Rt</th>\n",
        "      <th>theta</th>\n",
        "      <th>kappa</th>\n",
        "      <th>rho</th>\n",
        "      <th>sigma</th>\n",
        "      <th>tau</th>\n",
        "      <th>1/beta [day]</th>\n",
        "      <th>1/gamma [day]</th>\n",
        "      <th>alpha1 [-]</th>\n",
        "      <th>1/alpha2 [day]</th>\n",
        "      <th>RMSLE</th>\n",
        "      <th>Trials</th>\n",
        "      <th>Runtime</th>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>Country</th>\n",
        "      <th>Phase</th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "    </tr>\n",
        "  </thead>\n",
        "  <tbody>\n",
        "    <tr>\n",
        "      <th rowspan=\"13\" valign=\"top\">Russia</th>\n",
        "      <th>0th</th>\n",
        "      <td>Past</td>\n",
        "      <td>12Feb2020</td>\n",
        "      <td>06May2020</td>\n",
        "      <td>330457362</td>\n",
        "      <td>SIR-F</td>\n",
        "      <td>0.02</td>\n",
        "      <td>0.602763</td>\n",
        "      <td>0.544883</td>\n",
        "      <td>0.0340813</td>\n",
        "      <td>0.00229851</td>\n",
        "      <td>360</td>\n",
        "      <td>7</td>\n",
        "      <td>108</td>\n",
        "      <td>0.603</td>\n",
        "      <td>0</td>\n",
        "      <td>18.9667</td>\n",
        "      <td>1311</td>\n",
        "      <td>1 min  0 sec</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>1st</th>\n",
        "      <td>Past</td>\n",
        "      <td>07May2020</td>\n",
        "      <td>16May2020</td>\n",
        "      <td>330457362</td>\n",
        "      <td>SIR-F</td>\n",
        "      <td>2.51</td>\n",
        "      <td>0.000729031</td>\n",
        "      <td>0.000119717</td>\n",
        "      <td>0.0129583</td>\n",
        "      <td>0.00504465</td>\n",
        "      <td>360</td>\n",
        "      <td>19</td>\n",
        "      <td>49</td>\n",
        "      <td>0.001</td>\n",
        "      <td>2088</td>\n",
        "      <td>0.0742295</td>\n",
        "      <td>1308</td>\n",
        "      <td>1 min  0 sec</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>2nd</th>\n",
        "      <td>Past</td>\n",
        "      <td>17May2020</td>\n",
        "      <td>26May2020</td>\n",
        "      <td>330457362</td>\n",
        "      <td>SIR-F</td>\n",
        "      <td>1.59</td>\n",
        "      <td>0.000437993</td>\n",
        "      <td>9.8046e-05</td>\n",
        "      <td>0.00703411</td>\n",
        "      <td>0.00431289</td>\n",
        "      <td>360</td>\n",
        "      <td>35</td>\n",
        "      <td>57</td>\n",
        "      <td>0</td>\n",
        "      <td>2549</td>\n",
        "      <td>0.0869176</td>\n",
        "      <td>1287</td>\n",
        "      <td>1 min  0 sec</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>3rd</th>\n",
        "      <td>Past</td>\n",
        "      <td>27May2020</td>\n",
        "      <td>04Jun2020</td>\n",
        "      <td>330457362</td>\n",
        "      <td>SIR-F</td>\n",
        "      <td>1.03</td>\n",
        "      <td>0.000708362</td>\n",
        "      <td>0.000116581</td>\n",
        "      <td>0.00547912</td>\n",
        "      <td>0.00519557</td>\n",
        "      <td>360</td>\n",
        "      <td>45</td>\n",
        "      <td>48</td>\n",
        "      <td>0.001</td>\n",
        "      <td>2144</td>\n",
        "      <td>0.0672237</td>\n",
        "      <td>1401</td>\n",
        "      <td>1 min  0 sec</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>4th</th>\n",
        "      <td>Past</td>\n",
        "      <td>05Jun2020</td>\n",
        "      <td>13Jun2020</td>\n",
        "      <td>330457362</td>\n",
        "      <td>SIR-F</td>\n",
        "      <td>1.25</td>\n",
        "      <td>0.000825421</td>\n",
        "      <td>8.45185e-05</td>\n",
        "      <td>0.00464652</td>\n",
        "      <td>0.00362314</td>\n",
        "      <td>360</td>\n",
        "      <td>53</td>\n",
        "      <td>69</td>\n",
        "      <td>0.001</td>\n",
        "      <td>2957</td>\n",
        "      <td>0.0483449</td>\n",
        "      <td>1430</td>\n",
        "      <td>1 min  0 sec</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>5th</th>\n",
        "      <td>Past</td>\n",
        "      <td>14Jun2020</td>\n",
        "      <td>23Jun2020</td>\n",
        "      <td>330457362</td>\n",
        "      <td>SIR-F</td>\n",
        "      <td>0.82</td>\n",
        "      <td>0.000348462</td>\n",
        "      <td>7.90578e-05</td>\n",
        "      <td>0.00346657</td>\n",
        "      <td>0.0041384</td>\n",
        "      <td>360</td>\n",
        "      <td>72</td>\n",
        "      <td>60</td>\n",
        "      <td>0</td>\n",
        "      <td>3162</td>\n",
        "      <td>0.0638472</td>\n",
        "      <td>1961</td>\n",
        "      <td>1 min  0 sec</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>6th</th>\n",
        "      <td>Past</td>\n",
        "      <td>24Jun2020</td>\n",
        "      <td>05Jul2020</td>\n",
        "      <td>330457362</td>\n",
        "      <td>SIR-F</td>\n",
        "      <td>0.77</td>\n",
        "      <td>0.0048605</td>\n",
        "      <td>4.57342e-05</td>\n",
        "      <td>0.00256363</td>\n",
        "      <td>0.00328876</td>\n",
        "      <td>360</td>\n",
        "      <td>97</td>\n",
        "      <td>76</td>\n",
        "      <td>0.005</td>\n",
        "      <td>5466</td>\n",
        "      <td>0.0679173</td>\n",
        "      <td>1344</td>\n",
        "      <td>1 min  0 sec</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>7th</th>\n",
        "      <td>Past</td>\n",
        "      <td>06Jul2020</td>\n",
        "      <td>17Jul2020</td>\n",
        "      <td>330457362</td>\n",
        "      <td>SIR-F</td>\n",
        "      <td>0.73</td>\n",
        "      <td>0.0235908</td>\n",
        "      <td>1.03671e-05</td>\n",
        "      <td>0.00226026</td>\n",
        "      <td>0.00301415</td>\n",
        "      <td>360</td>\n",
        "      <td>110</td>\n",
        "      <td>82</td>\n",
        "      <td>0.024</td>\n",
        "      <td>24114</td>\n",
        "      <td>0.0608681</td>\n",
        "      <td>1316</td>\n",
        "      <td>1 min  0 sec</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>8th</th>\n",
        "      <td>Past</td>\n",
        "      <td>18Jul2020</td>\n",
        "      <td>31Jul2020</td>\n",
        "      <td>330457362</td>\n",
        "      <td>SIR-F</td>\n",
        "      <td>0.76</td>\n",
        "      <td>3.08038e-05</td>\n",
        "      <td>4.07714e-05</td>\n",
        "      <td>0.00183396</td>\n",
        "      <td>0.00237691</td>\n",
        "      <td>360</td>\n",
        "      <td>136</td>\n",
        "      <td>105</td>\n",
        "      <td>0</td>\n",
        "      <td>6131</td>\n",
        "      <td>0.060525</td>\n",
        "      <td>1296</td>\n",
        "      <td>1 min  0 sec</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>9th</th>\n",
        "      <td>Past</td>\n",
        "      <td>01Aug2020</td>\n",
        "      <td>14Aug2020</td>\n",
        "      <td>330457362</td>\n",
        "      <td>SIR-F</td>\n",
        "      <td>0.76</td>\n",
        "      <td>0.00141602</td>\n",
        "      <td>3.12519e-05</td>\n",
        "      <td>0.00146767</td>\n",
        "      <td>0.00188923</td>\n",
        "      <td>360</td>\n",
        "      <td>170</td>\n",
        "      <td>132</td>\n",
        "      <td>0.001</td>\n",
        "      <td>7999</td>\n",
        "      <td>0.0489869</td>\n",
        "      <td>1299</td>\n",
        "      <td>1 min  0 sec</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>10th</th>\n",
        "      <td>Past</td>\n",
        "      <td>15Aug2020</td>\n",
        "      <td>31Aug2020</td>\n",
        "      <td>330457362</td>\n",
        "      <td>SIR-F</td>\n",
        "      <td>1.08</td>\n",
        "      <td>0.000862738</td>\n",
        "      <td>2.12556e-05</td>\n",
        "      <td>0.00126163</td>\n",
        "      <td>0.00114409</td>\n",
        "      <td>360</td>\n",
        "      <td>198</td>\n",
        "      <td>218</td>\n",
        "      <td>0.001</td>\n",
        "      <td>11761</td>\n",
        "      <td>0.0416372</td>\n",
        "      <td>1279</td>\n",
        "      <td>1 min  0 sec</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>11th</th>\n",
        "      <td>Past</td>\n",
        "      <td>01Sep2020</td>\n",
        "      <td>16Sep2020</td>\n",
        "      <td>330457362</td>\n",
        "      <td>SIR-F</td>\n",
        "      <td>0.89</td>\n",
        "      <td>0.0230617</td>\n",
        "      <td>1.10626e-05</td>\n",
        "      <td>0.0012713</td>\n",
        "      <td>0.00139048</td>\n",
        "      <td>360</td>\n",
        "      <td>196</td>\n",
        "      <td>179</td>\n",
        "      <td>0.023</td>\n",
        "      <td>22598</td>\n",
        "      <td>0.0495388</td>\n",
        "      <td>1336</td>\n",
        "      <td>1 min  0 sec</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>12th</th>\n",
        "      <td>Past</td>\n",
        "      <td>17Sep2020</td>\n",
        "      <td>01Oct2020</td>\n",
        "      <td>330457362</td>\n",
        "      <td>-</td>\n",
        "      <td>-</td>\n",
        "      <td>-</td>\n",
        "      <td>-</td>\n",
        "      <td>-</td>\n",
        "      <td>-</td>\n",
        "      <td>-</td>\n",
        "      <td>-</td>\n",
        "      <td>-</td>\n",
        "      <td>-</td>\n",
        "      <td>-</td>\n",
        "      <td>-</td>\n",
        "      <td>-</td>\n",
        "      <td>-</td>\n",
        "    </tr>\n",
        "  </tbody>\n",
        "</table>\n",
        "</div>"
       ],
       "output_type": "pyout",
       "prompt_number": 12,
       "text": [
        "               Type      Start        End  Population    ODE    Rt  \\\n",
        "Country Phase                                                        \n",
        "Russia  0th    Past  12Feb2020  06May2020   330457362  SIR-F  0.02   \n",
        "        1st    Past  07May2020  16May2020   330457362  SIR-F  2.51   \n",
        "        2nd    Past  17May2020  26May2020   330457362  SIR-F  1.59   \n",
        "        3rd    Past  27May2020  04Jun2020   330457362  SIR-F  1.03   \n",
        "        4th    Past  05Jun2020  13Jun2020   330457362  SIR-F  1.25   \n",
        "        5th    Past  14Jun2020  23Jun2020   330457362  SIR-F  0.82   \n",
        "        6th    Past  24Jun2020  05Jul2020   330457362  SIR-F  0.77   \n",
        "        7th    Past  06Jul2020  17Jul2020   330457362  SIR-F  0.73   \n",
        "        8th    Past  18Jul2020  31Jul2020   330457362  SIR-F  0.76   \n",
        "        9th    Past  01Aug2020  14Aug2020   330457362  SIR-F  0.76   \n",
        "        10th   Past  15Aug2020  31Aug2020   330457362  SIR-F  1.08   \n",
        "        11th   Past  01Sep2020  16Sep2020   330457362  SIR-F  0.89   \n",
        "        12th   Past  17Sep2020  01Oct2020   330457362      -     -   \n",
        "\n",
        "                     theta        kappa         rho       sigma  tau  \\\n",
        "Country Phase                                                          \n",
        "Russia  0th       0.602763     0.544883   0.0340813  0.00229851  360   \n",
        "        1st    0.000729031  0.000119717   0.0129583  0.00504465  360   \n",
        "        2nd    0.000437993   9.8046e-05  0.00703411  0.00431289  360   \n",
        "        3rd    0.000708362  0.000116581  0.00547912  0.00519557  360   \n",
        "        4th    0.000825421  8.45185e-05  0.00464652  0.00362314  360   \n",
        "        5th    0.000348462  7.90578e-05  0.00346657   0.0041384  360   \n",
        "        6th      0.0048605  4.57342e-05  0.00256363  0.00328876  360   \n",
        "        7th      0.0235908  1.03671e-05  0.00226026  0.00301415  360   \n",
        "        8th    3.08038e-05  4.07714e-05  0.00183396  0.00237691  360   \n",
        "        9th     0.00141602  3.12519e-05  0.00146767  0.00188923  360   \n",
        "        10th   0.000862738  2.12556e-05  0.00126163  0.00114409  360   \n",
        "        11th     0.0230617  1.10626e-05   0.0012713  0.00139048  360   \n",
        "        12th             -            -           -           -    -   \n",
        "\n",
        "              1/beta [day] 1/gamma [day] alpha1 [-] 1/alpha2 [day]      RMSLE  \\\n",
        "Country Phase                                                                   \n",
        "Russia  0th              7           108      0.603              0    18.9667   \n",
        "        1st             19            49      0.001           2088  0.0742295   \n",
        "        2nd             35            57          0           2549  0.0869176   \n",
        "        3rd             45            48      0.001           2144  0.0672237   \n",
        "        4th             53            69      0.001           2957  0.0483449   \n",
        "        5th             72            60          0           3162  0.0638472   \n",
        "        6th             97            76      0.005           5466  0.0679173   \n",
        "        7th            110            82      0.024          24114  0.0608681   \n",
        "        8th            136           105          0           6131   0.060525   \n",
        "        9th            170           132      0.001           7999  0.0489869   \n",
        "        10th           198           218      0.001          11761  0.0416372   \n",
        "        11th           196           179      0.023          22598  0.0495388   \n",
        "        12th             -             -          -              -          -   \n",
        "\n",
        "              Trials       Runtime  \n",
        "Country Phase                       \n",
        "Russia  0th     1311  1 min  0 sec  \n",
        "        1st     1308  1 min  0 sec  \n",
        "        2nd     1287  1 min  0 sec  \n",
        "        3rd     1401  1 min  0 sec  \n",
        "        4th     1430  1 min  0 sec  \n",
        "        5th     1961  1 min  0 sec  \n",
        "        6th     1344  1 min  0 sec  \n",
        "        7th     1316  1 min  0 sec  \n",
        "        8th     1296  1 min  0 sec  \n",
        "        9th     1299  1 min  0 sec  \n",
        "        10th    1279  1 min  0 sec  \n",
        "        11th    1336  1 min  0 sec  \n",
        "        12th       -             -  "
       ]
      }
     ],
     "prompt_number": 12
    },
    {
     "cell_type": "markdown",
     "metadata": {},
     "source": [
      "## Compare the history of parameters\n",
      "Here, compare the history of parameter values if countries."
     ]
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "# All parameter/day parameter/Rt/OxCGRT\n",
      "analyser.track().head()"
     ],
     "language": "python",
     "metadata": {},
     "outputs": [
      {
       "html": [
        "<div>\n",
        "<style scoped>\n",
        "    .dataframe tbody tr th:only-of-type {\n",
        "        vertical-align: middle;\n",
        "    }\n",
        "\n",
        "    .dataframe tbody tr th {\n",
        "        vertical-align: top;\n",
        "    }\n",
        "\n",
        "    .dataframe thead th {\n",
        "        text-align: right;\n",
        "    }\n",
        "</style>\n",
        "<table border=\"1\" class=\"dataframe\">\n",
        "  <thead>\n",
        "    <tr style=\"text-align: right;\">\n",
        "      <th></th>\n",
        "      <th>Date</th>\n",
        "      <th>Country</th>\n",
        "      <th>theta</th>\n",
        "      <th>kappa</th>\n",
        "      <th>rho</th>\n",
        "      <th>sigma</th>\n",
        "      <th>alpha1 [-]</th>\n",
        "      <th>1/alpha2 [day]</th>\n",
        "      <th>1/beta [day]</th>\n",
        "      <th>1/gamma [day]</th>\n",
        "      <th>...</th>\n",
        "      <th>Cancel_events</th>\n",
        "      <th>Gatherings_restrictions</th>\n",
        "      <th>Transport_closing</th>\n",
        "      <th>Stay_home_restrictions</th>\n",
        "      <th>Internal_movement_restrictions</th>\n",
        "      <th>International_movement_restrictions</th>\n",
        "      <th>Information_campaigns</th>\n",
        "      <th>Testing_policy</th>\n",
        "      <th>Contact_tracing</th>\n",
        "      <th>Stringency_index</th>\n",
        "    </tr>\n",
        "  </thead>\n",
        "  <tbody>\n",
        "    <tr>\n",
        "      <th>0</th>\n",
        "      <td>2020-02-12</td>\n",
        "      <td>France</td>\n",
        "      <td>0.0167899</td>\n",
        "      <td>0.000334095</td>\n",
        "      <td>0.0200938</td>\n",
        "      <td>0.00361132</td>\n",
        "      <td>0.017</td>\n",
        "      <td>748</td>\n",
        "      <td>12</td>\n",
        "      <td>69</td>\n",
        "      <td>...</td>\n",
        "      <td>0</td>\n",
        "      <td>0</td>\n",
        "      <td>0</td>\n",
        "      <td>0</td>\n",
        "      <td>0</td>\n",
        "      <td>2</td>\n",
        "      <td>2</td>\n",
        "      <td>0</td>\n",
        "      <td>0</td>\n",
        "      <td>13.89</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>1</th>\n",
        "      <td>2020-02-12</td>\n",
        "      <td>France</td>\n",
        "      <td>0.0167899</td>\n",
        "      <td>0.000334095</td>\n",
        "      <td>0.0200938</td>\n",
        "      <td>0.00361132</td>\n",
        "      <td>0.017</td>\n",
        "      <td>748</td>\n",
        "      <td>12</td>\n",
        "      <td>69</td>\n",
        "      <td>...</td>\n",
        "      <td>0</td>\n",
        "      <td>0</td>\n",
        "      <td>0</td>\n",
        "      <td>0</td>\n",
        "      <td>0</td>\n",
        "      <td>0</td>\n",
        "      <td>0</td>\n",
        "      <td>0</td>\n",
        "      <td>0</td>\n",
        "      <td>0.00</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>2</th>\n",
        "      <td>2020-02-12</td>\n",
        "      <td>France</td>\n",
        "      <td>0.0167899</td>\n",
        "      <td>0.000334095</td>\n",
        "      <td>0.0200938</td>\n",
        "      <td>0.00361132</td>\n",
        "      <td>0.017</td>\n",
        "      <td>748</td>\n",
        "      <td>12</td>\n",
        "      <td>69</td>\n",
        "      <td>...</td>\n",
        "      <td>0</td>\n",
        "      <td>0</td>\n",
        "      <td>0</td>\n",
        "      <td>0</td>\n",
        "      <td>0</td>\n",
        "      <td>1</td>\n",
        "      <td>2</td>\n",
        "      <td>0</td>\n",
        "      <td>0</td>\n",
        "      <td>11.11</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>3</th>\n",
        "      <td>2020-02-12</td>\n",
        "      <td>France</td>\n",
        "      <td>0.0167899</td>\n",
        "      <td>0.000334095</td>\n",
        "      <td>0.0200938</td>\n",
        "      <td>0.00361132</td>\n",
        "      <td>0.017</td>\n",
        "      <td>748</td>\n",
        "      <td>12</td>\n",
        "      <td>69</td>\n",
        "      <td>...</td>\n",
        "      <td>0</td>\n",
        "      <td>0</td>\n",
        "      <td>0</td>\n",
        "      <td>0</td>\n",
        "      <td>0</td>\n",
        "      <td>0</td>\n",
        "      <td>0</td>\n",
        "      <td>0</td>\n",
        "      <td>0</td>\n",
        "      <td>0.00</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>4</th>\n",
        "      <td>2020-02-12</td>\n",
        "      <td>France</td>\n",
        "      <td>0.0167899</td>\n",
        "      <td>0.000334095</td>\n",
        "      <td>0.0200938</td>\n",
        "      <td>0.00361132</td>\n",
        "      <td>0.017</td>\n",
        "      <td>748</td>\n",
        "      <td>12</td>\n",
        "      <td>69</td>\n",
        "      <td>...</td>\n",
        "      <td>0</td>\n",
        "      <td>0</td>\n",
        "      <td>0</td>\n",
        "      <td>0</td>\n",
        "      <td>0</td>\n",
        "      <td>0</td>\n",
        "      <td>0</td>\n",
        "      <td>0</td>\n",
        "      <td>0</td>\n",
        "      <td>0.00</td>\n",
        "    </tr>\n",
        "  </tbody>\n",
        "</table>\n",
        "<p>5 rows \u00d7 23 columns</p>\n",
        "</div>"
       ],
       "output_type": "pyout",
       "prompt_number": 13,
       "text": [
        "        Date Country      theta        kappa        rho       sigma  \\\n",
        "0 2020-02-12  France  0.0167899  0.000334095  0.0200938  0.00361132   \n",
        "1 2020-02-12  France  0.0167899  0.000334095  0.0200938  0.00361132   \n",
        "2 2020-02-12  France  0.0167899  0.000334095  0.0200938  0.00361132   \n",
        "3 2020-02-12  France  0.0167899  0.000334095  0.0200938  0.00361132   \n",
        "4 2020-02-12  France  0.0167899  0.000334095  0.0200938  0.00361132   \n",
        "\n",
        "  alpha1 [-] 1/alpha2 [day] 1/beta [day] 1/gamma [day]  ... Cancel_events  \\\n",
        "0      0.017            748           12            69  ...             0   \n",
        "1      0.017            748           12            69  ...             0   \n",
        "2      0.017            748           12            69  ...             0   \n",
        "3      0.017            748           12            69  ...             0   \n",
        "4      0.017            748           12            69  ...             0   \n",
        "\n",
        "   Gatherings_restrictions  Transport_closing  Stay_home_restrictions  \\\n",
        "0                        0                  0                       0   \n",
        "1                        0                  0                       0   \n",
        "2                        0                  0                       0   \n",
        "3                        0                  0                       0   \n",
        "4                        0                  0                       0   \n",
        "\n",
        "   Internal_movement_restrictions  International_movement_restrictions  \\\n",
        "0                               0                                    2   \n",
        "1                               0                                    0   \n",
        "2                               0                                    1   \n",
        "3                               0                                    0   \n",
        "4                               0                                    0   \n",
        "\n",
        "   Information_campaigns  Testing_policy  Contact_tracing  Stringency_index  \n",
        "0                      2               0                0             13.89  \n",
        "1                      0               0                0              0.00  \n",
        "2                      2               0                0             11.11  \n",
        "3                      0               0                0              0.00  \n",
        "4                      0               0                0              0.00  \n",
        "\n",
        "[5 rows x 23 columns]"
       ]
      }
     ],
     "prompt_number": 13
    },
    {
     "cell_type": "heading",
     "level": 3,
     "metadata": {},
     "source": [
      "$Rt$: Reprodcution number $\\mathrm{[-]}$"
     ]
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "analyser.param_history(\"Rt\", roll_window=None).tail()"
     ],
     "language": "python",
     "metadata": {},
     "outputs": [
      {
       "output_type": "display_data",
       "png": "\n",
       "text": [
        "<Figure size 648x432 with 1 Axes>"
       ]
      },
      {
       "html": [
        "<div>\n",
        "<style scoped>\n",
        "    .dataframe tbody tr th:only-of-type {\n",
        "        vertical-align: middle;\n",
        "    }\n",
        "\n",
        "    .dataframe tbody tr th {\n",
        "        vertical-align: top;\n",
        "    }\n",
        "\n",
        "    .dataframe thead th {\n",
        "        text-align: right;\n",
        "    }\n",
        "</style>\n",
        "<table border=\"1\" class=\"dataframe\">\n",
        "  <thead>\n",
        "    <tr style=\"text-align: right;\">\n",
        "      <th>Country</th>\n",
        "      <th>Bahrain</th>\n",
        "      <th>Brazil</th>\n",
        "      <th>France</th>\n",
        "      <th>Iran</th>\n",
        "      <th>Italy</th>\n",
        "      <th>Nigeria</th>\n",
        "      <th>Portugal</th>\n",
        "      <th>Russia</th>\n",
        "      <th>United Arab Emirates</th>\n",
        "      <th>United States</th>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>Date</th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "    </tr>\n",
        "  </thead>\n",
        "  <tbody>\n",
        "    <tr>\n",
        "      <th>2020-09-27</th>\n",
        "      <td>0.81</td>\n",
        "      <td>0.93</td>\n",
        "      <td>21.23</td>\n",
        "      <td>1.14</td>\n",
        "      <td>1.86</td>\n",
        "      <td>0.79</td>\n",
        "      <td>2.59</td>\n",
        "      <td>0.89</td>\n",
        "      <td>1.27</td>\n",
        "      <td>1.86</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>2020-09-28</th>\n",
        "      <td>0.81</td>\n",
        "      <td>0.93</td>\n",
        "      <td>21.23</td>\n",
        "      <td>1.14</td>\n",
        "      <td>1.86</td>\n",
        "      <td>0.79</td>\n",
        "      <td>2.59</td>\n",
        "      <td>0.89</td>\n",
        "      <td>1.27</td>\n",
        "      <td>1.86</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>2020-09-29</th>\n",
        "      <td>0.81</td>\n",
        "      <td>0.93</td>\n",
        "      <td>21.23</td>\n",
        "      <td>1.14</td>\n",
        "      <td>1.86</td>\n",
        "      <td>0.79</td>\n",
        "      <td>2.59</td>\n",
        "      <td>0.89</td>\n",
        "      <td>1.27</td>\n",
        "      <td>1.86</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>2020-09-30</th>\n",
        "      <td>0.81</td>\n",
        "      <td>0.93</td>\n",
        "      <td>21.23</td>\n",
        "      <td>1.14</td>\n",
        "      <td>1.86</td>\n",
        "      <td>0.79</td>\n",
        "      <td>2.59</td>\n",
        "      <td>0.89</td>\n",
        "      <td>1.27</td>\n",
        "      <td>1.86</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>2020-10-01</th>\n",
        "      <td>0.81</td>\n",
        "      <td>0.93</td>\n",
        "      <td>21.23</td>\n",
        "      <td>1.14</td>\n",
        "      <td>1.86</td>\n",
        "      <td>0.79</td>\n",
        "      <td>2.59</td>\n",
        "      <td>0.89</td>\n",
        "      <td>1.27</td>\n",
        "      <td>1.86</td>\n",
        "    </tr>\n",
        "  </tbody>\n",
        "</table>\n",
        "</div>"
       ],
       "output_type": "pyout",
       "prompt_number": 14,
       "text": [
        "Country     Bahrain  Brazil  France  Iran  Italy  Nigeria  Portugal  Russia  \\\n",
        "Date                                                                          \n",
        "2020-09-27     0.81    0.93   21.23  1.14   1.86     0.79      2.59    0.89   \n",
        "2020-09-28     0.81    0.93   21.23  1.14   1.86     0.79      2.59    0.89   \n",
        "2020-09-29     0.81    0.93   21.23  1.14   1.86     0.79      2.59    0.89   \n",
        "2020-09-30     0.81    0.93   21.23  1.14   1.86     0.79      2.59    0.89   \n",
        "2020-10-01     0.81    0.93   21.23  1.14   1.86     0.79      2.59    0.89   \n",
        "\n",
        "Country     United Arab Emirates  United States  \n",
        "Date                                             \n",
        "2020-09-27                  1.27           1.86  \n",
        "2020-09-28                  1.27           1.86  \n",
        "2020-09-29                  1.27           1.86  \n",
        "2020-09-30                  1.27           1.86  \n",
        "2020-10-01                  1.27           1.86  "
       ]
      }
     ],
     "prompt_number": 14
    },
    {
     "cell_type": "heading",
     "level": 3,
     "metadata": {},
     "source": [
      "$\\rho$: Effective contact rate $\\mathrm{[-]}$"
     ]
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "analyser.param_history(\"rho\", roll_window=None).tail()"
     ],
     "language": "python",
     "metadata": {},
     "outputs": [
      {
       "output_type": "display_data",
       "png": "\n",
       "text": [
        "<Figure size 648x432 with 1 Axes>"
       ]
      },
      {
       "html": [
        "<div>\n",
        "<style scoped>\n",
        "    .dataframe tbody tr th:only-of-type {\n",
        "        vertical-align: middle;\n",
        "    }\n",
        "\n",
        "    .dataframe tbody tr th {\n",
        "        vertical-align: top;\n",
        "    }\n",
        "\n",
        "    .dataframe thead th {\n",
        "        text-align: right;\n",
        "    }\n",
        "</style>\n",
        "<table border=\"1\" class=\"dataframe\">\n",
        "  <thead>\n",
        "    <tr style=\"text-align: right;\">\n",
        "      <th>Country</th>\n",
        "      <th>Bahrain</th>\n",
        "      <th>Brazil</th>\n",
        "      <th>France</th>\n",
        "      <th>Iran</th>\n",
        "      <th>Italy</th>\n",
        "      <th>Nigeria</th>\n",
        "      <th>Portugal</th>\n",
        "      <th>Russia</th>\n",
        "      <th>United Arab Emirates</th>\n",
        "      <th>United States</th>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>Date</th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "    </tr>\n",
        "  </thead>\n",
        "  <tbody>\n",
        "    <tr>\n",
        "      <th>2020-09-27</th>\n",
        "      <td>0.021276</td>\n",
        "      <td>0.014777</td>\n",
        "      <td>0.007337</td>\n",
        "      <td>0.017741</td>\n",
        "      <td>0.008214</td>\n",
        "      <td>0.003801</td>\n",
        "      <td>0.002675</td>\n",
        "      <td>0.001271</td>\n",
        "      <td>0.017528</td>\n",
        "      <td>0.002775</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>2020-09-28</th>\n",
        "      <td>0.021276</td>\n",
        "      <td>0.014777</td>\n",
        "      <td>0.007337</td>\n",
        "      <td>0.017741</td>\n",
        "      <td>0.008214</td>\n",
        "      <td>0.003801</td>\n",
        "      <td>0.002675</td>\n",
        "      <td>0.001271</td>\n",
        "      <td>0.017528</td>\n",
        "      <td>0.002775</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>2020-09-29</th>\n",
        "      <td>0.021276</td>\n",
        "      <td>0.014777</td>\n",
        "      <td>0.007337</td>\n",
        "      <td>0.017741</td>\n",
        "      <td>0.008214</td>\n",
        "      <td>0.003801</td>\n",
        "      <td>0.002675</td>\n",
        "      <td>0.001271</td>\n",
        "      <td>0.017528</td>\n",
        "      <td>0.002775</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>2020-09-30</th>\n",
        "      <td>0.021276</td>\n",
        "      <td>0.014777</td>\n",
        "      <td>0.007337</td>\n",
        "      <td>0.017741</td>\n",
        "      <td>0.008214</td>\n",
        "      <td>0.003801</td>\n",
        "      <td>0.002675</td>\n",
        "      <td>0.001271</td>\n",
        "      <td>0.017528</td>\n",
        "      <td>0.002775</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>2020-10-01</th>\n",
        "      <td>0.021276</td>\n",
        "      <td>0.014777</td>\n",
        "      <td>0.007337</td>\n",
        "      <td>0.017741</td>\n",
        "      <td>0.008214</td>\n",
        "      <td>0.003801</td>\n",
        "      <td>0.002675</td>\n",
        "      <td>0.001271</td>\n",
        "      <td>0.017528</td>\n",
        "      <td>0.002775</td>\n",
        "    </tr>\n",
        "  </tbody>\n",
        "</table>\n",
        "</div>"
       ],
       "output_type": "pyout",
       "prompt_number": 15,
       "text": [
        "Country      Bahrain    Brazil    France      Iran     Italy   Nigeria  \\\n",
        "Date                                                                     \n",
        "2020-09-27  0.021276  0.014777  0.007337  0.017741  0.008214  0.003801   \n",
        "2020-09-28  0.021276  0.014777  0.007337  0.017741  0.008214  0.003801   \n",
        "2020-09-29  0.021276  0.014777  0.007337  0.017741  0.008214  0.003801   \n",
        "2020-09-30  0.021276  0.014777  0.007337  0.017741  0.008214  0.003801   \n",
        "2020-10-01  0.021276  0.014777  0.007337  0.017741  0.008214  0.003801   \n",
        "\n",
        "Country     Portugal    Russia  United Arab Emirates  United States  \n",
        "Date                                                                 \n",
        "2020-09-27  0.002675  0.001271              0.017528       0.002775  \n",
        "2020-09-28  0.002675  0.001271              0.017528       0.002775  \n",
        "2020-09-29  0.002675  0.001271              0.017528       0.002775  \n",
        "2020-09-30  0.002675  0.001271              0.017528       0.002775  \n",
        "2020-10-01  0.002675  0.001271              0.017528       0.002775  "
       ]
      }
     ],
     "prompt_number": 15
    },
    {
     "cell_type": "heading",
     "level": 3,
     "metadata": {},
     "source": [
      "$\\sigma$: Recovery rate $\\mathrm{[-]}$"
     ]
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "analyser.param_history(\"sigma\", roll_window=None).tail()"
     ],
     "language": "python",
     "metadata": {},
     "outputs": [
      {
       "output_type": "display_data",
       "png": "\n",
       "text": [
        "<Figure size 648x432 with 1 Axes>"
       ]
      },
      {
       "html": [
        "<div>\n",
        "<style scoped>\n",
        "    .dataframe tbody tr th:only-of-type {\n",
        "        vertical-align: middle;\n",
        "    }\n",
        "\n",
        "    .dataframe tbody tr th {\n",
        "        vertical-align: top;\n",
        "    }\n",
        "\n",
        "    .dataframe thead th {\n",
        "        text-align: right;\n",
        "    }\n",
        "</style>\n",
        "<table border=\"1\" class=\"dataframe\">\n",
        "  <thead>\n",
        "    <tr style=\"text-align: right;\">\n",
        "      <th>Country</th>\n",
        "      <th>Bahrain</th>\n",
        "      <th>Brazil</th>\n",
        "      <th>France</th>\n",
        "      <th>Iran</th>\n",
        "      <th>Italy</th>\n",
        "      <th>Nigeria</th>\n",
        "      <th>Portugal</th>\n",
        "      <th>Russia</th>\n",
        "      <th>United Arab Emirates</th>\n",
        "      <th>United States</th>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>Date</th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "    </tr>\n",
        "  </thead>\n",
        "  <tbody>\n",
        "    <tr>\n",
        "      <th>2020-09-27</th>\n",
        "      <td>0.026077</td>\n",
        "      <td>0.015413</td>\n",
        "      <td>0.000308</td>\n",
        "      <td>0.014571</td>\n",
        "      <td>0.004327</td>\n",
        "      <td>0.004725</td>\n",
        "      <td>0.001019</td>\n",
        "      <td>0.00139</td>\n",
        "      <td>0.013719</td>\n",
        "      <td>0.001445</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>2020-09-28</th>\n",
        "      <td>0.026077</td>\n",
        "      <td>0.015413</td>\n",
        "      <td>0.000308</td>\n",
        "      <td>0.014571</td>\n",
        "      <td>0.004327</td>\n",
        "      <td>0.004725</td>\n",
        "      <td>0.001019</td>\n",
        "      <td>0.00139</td>\n",
        "      <td>0.013719</td>\n",
        "      <td>0.001445</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>2020-09-29</th>\n",
        "      <td>0.026077</td>\n",
        "      <td>0.015413</td>\n",
        "      <td>0.000308</td>\n",
        "      <td>0.014571</td>\n",
        "      <td>0.004327</td>\n",
        "      <td>0.004725</td>\n",
        "      <td>0.001019</td>\n",
        "      <td>0.00139</td>\n",
        "      <td>0.013719</td>\n",
        "      <td>0.001445</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>2020-09-30</th>\n",
        "      <td>0.026077</td>\n",
        "      <td>0.015413</td>\n",
        "      <td>0.000308</td>\n",
        "      <td>0.014571</td>\n",
        "      <td>0.004327</td>\n",
        "      <td>0.004725</td>\n",
        "      <td>0.001019</td>\n",
        "      <td>0.00139</td>\n",
        "      <td>0.013719</td>\n",
        "      <td>0.001445</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>2020-10-01</th>\n",
        "      <td>0.026077</td>\n",
        "      <td>0.015413</td>\n",
        "      <td>0.000308</td>\n",
        "      <td>0.014571</td>\n",
        "      <td>0.004327</td>\n",
        "      <td>0.004725</td>\n",
        "      <td>0.001019</td>\n",
        "      <td>0.00139</td>\n",
        "      <td>0.013719</td>\n",
        "      <td>0.001445</td>\n",
        "    </tr>\n",
        "  </tbody>\n",
        "</table>\n",
        "</div>"
       ],
       "output_type": "pyout",
       "prompt_number": 16,
       "text": [
        "Country      Bahrain    Brazil    France      Iran     Italy   Nigeria  \\\n",
        "Date                                                                     \n",
        "2020-09-27  0.026077  0.015413  0.000308  0.014571  0.004327  0.004725   \n",
        "2020-09-28  0.026077  0.015413  0.000308  0.014571  0.004327  0.004725   \n",
        "2020-09-29  0.026077  0.015413  0.000308  0.014571  0.004327  0.004725   \n",
        "2020-09-30  0.026077  0.015413  0.000308  0.014571  0.004327  0.004725   \n",
        "2020-10-01  0.026077  0.015413  0.000308  0.014571  0.004327  0.004725   \n",
        "\n",
        "Country     Portugal   Russia  United Arab Emirates  United States  \n",
        "Date                                                                \n",
        "2020-09-27  0.001019  0.00139              0.013719       0.001445  \n",
        "2020-09-28  0.001019  0.00139              0.013719       0.001445  \n",
        "2020-09-29  0.001019  0.00139              0.013719       0.001445  \n",
        "2020-09-30  0.001019  0.00139              0.013719       0.001445  \n",
        "2020-10-01  0.001019  0.00139              0.013719       0.001445  "
       ]
      }
     ],
     "prompt_number": 16
    },
    {
     "cell_type": "heading",
     "level": 3,
     "metadata": {},
     "source": [
      "$\\kappa$: Mortality rate of infected cases $\\mathrm{[-]}$"
     ]
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "analyser.param_history(\"kappa\", roll_window=None).tail()"
     ],
     "language": "python",
     "metadata": {},
     "outputs": [
      {
       "output_type": "display_data",
       "png": "\n",
       "text": [
        "<Figure size 648x432 with 1 Axes>"
       ]
      },
      {
       "html": [
        "<div>\n",
        "<style scoped>\n",
        "    .dataframe tbody tr th:only-of-type {\n",
        "        vertical-align: middle;\n",
        "    }\n",
        "\n",
        "    .dataframe tbody tr th {\n",
        "        vertical-align: top;\n",
        "    }\n",
        "\n",
        "    .dataframe thead th {\n",
        "        text-align: right;\n",
        "    }\n",
        "</style>\n",
        "<table border=\"1\" class=\"dataframe\">\n",
        "  <thead>\n",
        "    <tr style=\"text-align: right;\">\n",
        "      <th>Country</th>\n",
        "      <th>Bahrain</th>\n",
        "      <th>Brazil</th>\n",
        "      <th>France</th>\n",
        "      <th>Iran</th>\n",
        "      <th>Italy</th>\n",
        "      <th>Nigeria</th>\n",
        "      <th>Portugal</th>\n",
        "      <th>Russia</th>\n",
        "      <th>United Arab Emirates</th>\n",
        "      <th>United States</th>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>Date</th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "    </tr>\n",
        "  </thead>\n",
        "  <tbody>\n",
        "    <tr>\n",
        "      <th>2020-09-27</th>\n",
        "      <td>0.000096</td>\n",
        "      <td>0.000148</td>\n",
        "      <td>0.000037</td>\n",
        "      <td>0.000649</td>\n",
        "      <td>0.000087</td>\n",
        "      <td>0.000072</td>\n",
        "      <td>0.00001</td>\n",
        "      <td>0.000011</td>\n",
        "      <td>0.000024</td>\n",
        "      <td>0.000046</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>2020-09-28</th>\n",
        "      <td>0.000096</td>\n",
        "      <td>0.000148</td>\n",
        "      <td>0.000037</td>\n",
        "      <td>0.000649</td>\n",
        "      <td>0.000087</td>\n",
        "      <td>0.000072</td>\n",
        "      <td>0.00001</td>\n",
        "      <td>0.000011</td>\n",
        "      <td>0.000024</td>\n",
        "      <td>0.000046</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>2020-09-29</th>\n",
        "      <td>0.000096</td>\n",
        "      <td>0.000148</td>\n",
        "      <td>0.000037</td>\n",
        "      <td>0.000649</td>\n",
        "      <td>0.000087</td>\n",
        "      <td>0.000072</td>\n",
        "      <td>0.00001</td>\n",
        "      <td>0.000011</td>\n",
        "      <td>0.000024</td>\n",
        "      <td>0.000046</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>2020-09-30</th>\n",
        "      <td>0.000096</td>\n",
        "      <td>0.000148</td>\n",
        "      <td>0.000037</td>\n",
        "      <td>0.000649</td>\n",
        "      <td>0.000087</td>\n",
        "      <td>0.000072</td>\n",
        "      <td>0.00001</td>\n",
        "      <td>0.000011</td>\n",
        "      <td>0.000024</td>\n",
        "      <td>0.000046</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>2020-10-01</th>\n",
        "      <td>0.000096</td>\n",
        "      <td>0.000148</td>\n",
        "      <td>0.000037</td>\n",
        "      <td>0.000649</td>\n",
        "      <td>0.000087</td>\n",
        "      <td>0.000072</td>\n",
        "      <td>0.00001</td>\n",
        "      <td>0.000011</td>\n",
        "      <td>0.000024</td>\n",
        "      <td>0.000046</td>\n",
        "    </tr>\n",
        "  </tbody>\n",
        "</table>\n",
        "</div>"
       ],
       "output_type": "pyout",
       "prompt_number": 17,
       "text": [
        "Country      Bahrain    Brazil    France      Iran     Italy   Nigeria  \\\n",
        "Date                                                                     \n",
        "2020-09-27  0.000096  0.000148  0.000037  0.000649  0.000087  0.000072   \n",
        "2020-09-28  0.000096  0.000148  0.000037  0.000649  0.000087  0.000072   \n",
        "2020-09-29  0.000096  0.000148  0.000037  0.000649  0.000087  0.000072   \n",
        "2020-09-30  0.000096  0.000148  0.000037  0.000649  0.000087  0.000072   \n",
        "2020-10-01  0.000096  0.000148  0.000037  0.000649  0.000087  0.000072   \n",
        "\n",
        "Country     Portugal    Russia  United Arab Emirates  United States  \n",
        "Date                                                                 \n",
        "2020-09-27   0.00001  0.000011              0.000024       0.000046  \n",
        "2020-09-28   0.00001  0.000011              0.000024       0.000046  \n",
        "2020-09-29   0.00001  0.000011              0.000024       0.000046  \n",
        "2020-09-30   0.00001  0.000011              0.000024       0.000046  \n",
        "2020-10-01   0.00001  0.000011              0.000024       0.000046  "
       ]
      }
     ],
     "prompt_number": 17
    },
    {
     "cell_type": "heading",
     "level": 3,
     "metadata": {},
     "source": [
      "$\\theta$: Mortality rate of S$^\\ast$ cases $\\mathrm{[-]}$"
     ]
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "analyser.param_history(\"theta\", roll_window=None).tail()"
     ],
     "language": "python",
     "metadata": {},
     "outputs": [
      {
       "output_type": "display_data",
       "png": "\n",
       "text": [
        "<Figure size 648x432 with 1 Axes>"
       ]
      },
      {
       "html": [
        "<div>\n",
        "<style scoped>\n",
        "    .dataframe tbody tr th:only-of-type {\n",
        "        vertical-align: middle;\n",
        "    }\n",
        "\n",
        "    .dataframe tbody tr th {\n",
        "        vertical-align: top;\n",
        "    }\n",
        "\n",
        "    .dataframe thead th {\n",
        "        text-align: right;\n",
        "    }\n",
        "</style>\n",
        "<table border=\"1\" class=\"dataframe\">\n",
        "  <thead>\n",
        "    <tr style=\"text-align: right;\">\n",
        "      <th>Country</th>\n",
        "      <th>Bahrain</th>\n",
        "      <th>Brazil</th>\n",
        "      <th>France</th>\n",
        "      <th>Iran</th>\n",
        "      <th>Italy</th>\n",
        "      <th>Nigeria</th>\n",
        "      <th>Portugal</th>\n",
        "      <th>Russia</th>\n",
        "      <th>United Arab Emirates</th>\n",
        "      <th>United States</th>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>Date</th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "    </tr>\n",
        "  </thead>\n",
        "  <tbody>\n",
        "    <tr>\n",
        "      <th>2020-09-27</th>\n",
        "      <td>0.000693</td>\n",
        "      <td>0.018529</td>\n",
        "      <td>0.000679</td>\n",
        "      <td>0.020019</td>\n",
        "      <td>0.000435</td>\n",
        "      <td>0.000868</td>\n",
        "      <td>0.00224</td>\n",
        "      <td>0.023062</td>\n",
        "      <td>0.000965</td>\n",
        "      <td>0.001332</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>2020-09-28</th>\n",
        "      <td>0.000693</td>\n",
        "      <td>0.018529</td>\n",
        "      <td>0.000679</td>\n",
        "      <td>0.020019</td>\n",
        "      <td>0.000435</td>\n",
        "      <td>0.000868</td>\n",
        "      <td>0.00224</td>\n",
        "      <td>0.023062</td>\n",
        "      <td>0.000965</td>\n",
        "      <td>0.001332</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>2020-09-29</th>\n",
        "      <td>0.000693</td>\n",
        "      <td>0.018529</td>\n",
        "      <td>0.000679</td>\n",
        "      <td>0.020019</td>\n",
        "      <td>0.000435</td>\n",
        "      <td>0.000868</td>\n",
        "      <td>0.00224</td>\n",
        "      <td>0.023062</td>\n",
        "      <td>0.000965</td>\n",
        "      <td>0.001332</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>2020-09-30</th>\n",
        "      <td>0.000693</td>\n",
        "      <td>0.018529</td>\n",
        "      <td>0.000679</td>\n",
        "      <td>0.020019</td>\n",
        "      <td>0.000435</td>\n",
        "      <td>0.000868</td>\n",
        "      <td>0.00224</td>\n",
        "      <td>0.023062</td>\n",
        "      <td>0.000965</td>\n",
        "      <td>0.001332</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>2020-10-01</th>\n",
        "      <td>0.000693</td>\n",
        "      <td>0.018529</td>\n",
        "      <td>0.000679</td>\n",
        "      <td>0.020019</td>\n",
        "      <td>0.000435</td>\n",
        "      <td>0.000868</td>\n",
        "      <td>0.00224</td>\n",
        "      <td>0.023062</td>\n",
        "      <td>0.000965</td>\n",
        "      <td>0.001332</td>\n",
        "    </tr>\n",
        "  </tbody>\n",
        "</table>\n",
        "</div>"
       ],
       "output_type": "pyout",
       "prompt_number": 18,
       "text": [
        "Country      Bahrain    Brazil    France      Iran     Italy   Nigeria  \\\n",
        "Date                                                                     \n",
        "2020-09-27  0.000693  0.018529  0.000679  0.020019  0.000435  0.000868   \n",
        "2020-09-28  0.000693  0.018529  0.000679  0.020019  0.000435  0.000868   \n",
        "2020-09-29  0.000693  0.018529  0.000679  0.020019  0.000435  0.000868   \n",
        "2020-09-30  0.000693  0.018529  0.000679  0.020019  0.000435  0.000868   \n",
        "2020-10-01  0.000693  0.018529  0.000679  0.020019  0.000435  0.000868   \n",
        "\n",
        "Country     Portugal    Russia  United Arab Emirates  United States  \n",
        "Date                                                                 \n",
        "2020-09-27   0.00224  0.023062              0.000965       0.001332  \n",
        "2020-09-28   0.00224  0.023062              0.000965       0.001332  \n",
        "2020-09-29   0.00224  0.023062              0.000965       0.001332  \n",
        "2020-09-30   0.00224  0.023062              0.000965       0.001332  \n",
        "2020-10-01   0.00224  0.023062              0.000965       0.001332  "
       ]
      }
     ],
     "prompt_number": 18
    },
    {
     "cell_type": "markdown",
     "metadata": {},
     "source": [
      "## (Experimental): Relationship of OxCGRT index and parameter values\n",
      "Government responses will impact on parameter values of ODE models about 14 days later. Here, we will investigate on the relationship of [stringency index (from OxCGRT)](https://github.com/OxCGRT/covid-policy-tracker/blob/master/documentation/index_methodology.md) and reproduction number/model parameters.\n"
     ]
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "%matplotlib inline\n",
      "from matplotlib import pyplot as plt\n",
      "import seaborn as sns\n",
      "import pandas as pd"
     ],
     "language": "python",
     "metadata": {},
     "outputs": [],
     "prompt_number": 19
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "df = analyser.track()\n",
      "param_cols = [\"Rt\", *cs.SIRF.PARAMETERS]\n",
      "oxcgrt_cols = oxcgrt_data.OXCGRT_VARS[:]\n",
      "cols = param_cols + oxcgrt_cols\n",
      "delay = 14\n",
      "\n",
      "for col in param_cols:\n",
      "    df[col] = pd.to_numeric(df[col], errors=\"coerce\")\n",
      "    df[col] = df.groupby(\"Country\")[col].shift(0 - delay)\n",
      "\n",
      "df = df.dropna(how=\"any\")\n",
      "df = df.loc[:, [\"Date\", \"Country\", *cols]]\n",
      "track_df = df.copy()\n",
      "track_df.info()"
     ],
     "language": "python",
     "metadata": {},
     "outputs": [
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "<class 'pandas.core.frame.DataFrame'>\n",
        "Int64Index: 46713 entries, 0 to 46838\n",
        "Data columns (total 19 columns):\n",
        " #   Column                               Non-Null Count  Dtype         \n",
        "---  ------                               --------------  -----         \n",
        " 0   Date                                 46713 non-null  datetime64[ns]\n",
        " 1   Country                              46713 non-null  object        \n",
        " 2   Rt                                   46713 non-null  float64       \n",
        " 3   theta                                46713 non-null  float64       \n",
        " 4   kappa                                46713 non-null  float64       \n",
        " 5   rho                                  46713 non-null  float64       \n",
        " 6   sigma                                46713 non-null  float64       \n",
        " 7   School_closing                       46713 non-null  int64         \n",
        " 8   Workplace_closing                    46713 non-null  int64         \n",
        " 9   Cancel_events                        46713 non-null  int64         \n",
        " 10  Gatherings_restrictions              46713 non-null  int64         \n",
        " 11  Transport_closing                    46713 non-null  int64         \n",
        " 12  Stay_home_restrictions               46713 non-null  int64         \n",
        " 13  Internal_movement_restrictions       46713 non-null  int64         \n",
        " 14  International_movement_restrictions  46713 non-null  int64         \n",
        " 15  Information_campaigns                46713 non-null  int64         \n",
        " 16  Testing_policy                       46713 non-null  int64         \n",
        " 17  Contact_tracing                      46713 non-null  int64         \n",
        " 18  Stringency_index                     46713 non-null  float64       \n",
        "dtypes: datetime64[ns](1), float64(6), int64(11), object(1)\n",
        "memory usage: 7.1+ MB\n"
       ]
      }
     ],
     "prompt_number": 20
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "# Correlation\n",
      "df = track_df.copy()\n",
      "df.corr().style.background_gradient(axis=None)"
     ],
     "language": "python",
     "metadata": {},
     "outputs": [
      {
       "html": [
        "<style  type=\"text/css\" >\n",
        "#T_70b78d2c_03fb_11eb_b74f_52540082c6bdrow0_col0,#T_70b78d2c_03fb_11eb_b74f_52540082c6bdrow1_col1,#T_70b78d2c_03fb_11eb_b74f_52540082c6bdrow2_col2,#T_70b78d2c_03fb_11eb_b74f_52540082c6bdrow3_col3,#T_70b78d2c_03fb_11eb_b74f_52540082c6bdrow4_col4,#T_70b78d2c_03fb_11eb_b74f_52540082c6bdrow5_col5,#T_70b78d2c_03fb_11eb_b74f_52540082c6bdrow6_col6,#T_70b78d2c_03fb_11eb_b74f_52540082c6bdrow7_col7,#T_70b78d2c_03fb_11eb_b74f_52540082c6bdrow8_col8,#T_70b78d2c_03fb_11eb_b74f_52540082c6bdrow9_col9,#T_70b78d2c_03fb_11eb_b74f_52540082c6bdrow10_col10,#T_70b78d2c_03fb_11eb_b74f_52540082c6bdrow11_col11,#T_70b78d2c_03fb_11eb_b74f_52540082c6bdrow12_col12,#T_70b78d2c_03fb_11eb_b74f_52540082c6bdrow13_col13,#T_70b78d2c_03fb_11eb_b74f_52540082c6bdrow14_col14,#T_70b78d2c_03fb_11eb_b74f_52540082c6bdrow15_col15,#T_70b78d2c_03fb_11eb_b74f_52540082c6bdrow16_col16{\n",
        "            background-color:  #023858;\n",
        "            color:  #f1f1f1;\n",
        "        }#T_70b78d2c_03fb_11eb_b74f_52540082c6bdrow0_col1,#T_70b78d2c_03fb_11eb_b74f_52540082c6bdrow0_col4,#T_70b78d2c_03fb_11eb_b74f_52540082c6bdrow1_col0,#T_70b78d2c_03fb_11eb_b74f_52540082c6bdrow2_col9,#T_70b78d2c_03fb_11eb_b74f_52540082c6bdrow4_col0,#T_70b78d2c_03fb_11eb_b74f_52540082c6bdrow9_col2{\n",
        "            background-color:  #e1dfed;\n",
        "            color:  #000000;\n",
        "        }#T_70b78d2c_03fb_11eb_b74f_52540082c6bdrow0_col2,#T_70b78d2c_03fb_11eb_b74f_52540082c6bdrow1_col5,#T_70b78d2c_03fb_11eb_b74f_52540082c6bdrow2_col0,#T_70b78d2c_03fb_11eb_b74f_52540082c6bdrow5_col1{\n",
        "            background-color:  #e0deed;\n",
        "            color:  #000000;\n",
        "        }#T_70b78d2c_03fb_11eb_b74f_52540082c6bdrow0_col3,#T_70b78d2c_03fb_11eb_b74f_52540082c6bdrow3_col0{\n",
        "            background-color:  #8eb3d5;\n",
        "            color:  #000000;\n",
        "        }#T_70b78d2c_03fb_11eb_b74f_52540082c6bdrow0_col5,#T_70b78d2c_03fb_11eb_b74f_52540082c6bdrow0_col13,#T_70b78d2c_03fb_11eb_b74f_52540082c6bdrow4_col8,#T_70b78d2c_03fb_11eb_b74f_52540082c6bdrow5_col0,#T_70b78d2c_03fb_11eb_b74f_52540082c6bdrow8_col4,#T_70b78d2c_03fb_11eb_b74f_52540082c6bdrow13_col0{\n",
        "            background-color:  #bfc9e1;\n",
        "            color:  #000000;\n",
        "        }#T_70b78d2c_03fb_11eb_b74f_52540082c6bdrow0_col6,#T_70b78d2c_03fb_11eb_b74f_52540082c6bdrow3_col4,#T_70b78d2c_03fb_11eb_b74f_52540082c6bdrow4_col3,#T_70b78d2c_03fb_11eb_b74f_52540082c6bdrow6_col0{\n",
        "            background-color:  #abbfdc;\n",
        "            color:  #000000;\n",
        "        }#T_70b78d2c_03fb_11eb_b74f_52540082c6bdrow0_col7,#T_70b78d2c_03fb_11eb_b74f_52540082c6bdrow7_col0{\n",
        "            background-color:  #d4d4e8;\n",
        "            color:  #000000;\n",
        "        }#T_70b78d2c_03fb_11eb_b74f_52540082c6bdrow0_col8,#T_70b78d2c_03fb_11eb_b74f_52540082c6bdrow2_col11,#T_70b78d2c_03fb_11eb_b74f_52540082c6bdrow4_col9,#T_70b78d2c_03fb_11eb_b74f_52540082c6bdrow8_col0,#T_70b78d2c_03fb_11eb_b74f_52540082c6bdrow9_col4,#T_70b78d2c_03fb_11eb_b74f_52540082c6bdrow11_col2{\n",
        "            background-color:  #b4c4df;\n",
        "            color:  #000000;\n",
        "        }#T_70b78d2c_03fb_11eb_b74f_52540082c6bdrow0_col9,#T_70b78d2c_03fb_11eb_b74f_52540082c6bdrow4_col12,#T_70b78d2c_03fb_11eb_b74f_52540082c6bdrow9_col0,#T_70b78d2c_03fb_11eb_b74f_52540082c6bdrow12_col4{\n",
        "            background-color:  #c8cde4;\n",
        "            color:  #000000;\n",
        "        }#T_70b78d2c_03fb_11eb_b74f_52540082c6bdrow0_col10,#T_70b78d2c_03fb_11eb_b74f_52540082c6bdrow3_col16,#T_70b78d2c_03fb_11eb_b74f_52540082c6bdrow10_col0,#T_70b78d2c_03fb_11eb_b74f_52540082c6bdrow16_col3{\n",
        "            background-color:  #d0d1e6;\n",
        "            color:  #000000;\n",
        "        }#T_70b78d2c_03fb_11eb_b74f_52540082c6bdrow0_col11,#T_70b78d2c_03fb_11eb_b74f_52540082c6bdrow11_col0{\n",
        "            background-color:  #cacee5;\n",
        "            color:  #000000;\n",
        "        }#T_70b78d2c_03fb_11eb_b74f_52540082c6bdrow0_col12,#T_70b78d2c_03fb_11eb_b74f_52540082c6bdrow3_col8,#T_70b78d2c_03fb_11eb_b74f_52540082c6bdrow8_col3,#T_70b78d2c_03fb_11eb_b74f_52540082c6bdrow12_col0{\n",
        "            background-color:  #d9d8ea;\n",
        "            color:  #000000;\n",
        "        }#T_70b78d2c_03fb_11eb_b74f_52540082c6bdrow0_col14,#T_70b78d2c_03fb_11eb_b74f_52540082c6bdrow14_col0{\n",
        "            background-color:  #cccfe5;\n",
        "            color:  #000000;\n",
        "        }#T_70b78d2c_03fb_11eb_b74f_52540082c6bdrow0_col15,#T_70b78d2c_03fb_11eb_b74f_52540082c6bdrow15_col0{\n",
        "            background-color:  #dddbec;\n",
        "            color:  #000000;\n",
        "        }#T_70b78d2c_03fb_11eb_b74f_52540082c6bdrow0_col16,#T_70b78d2c_03fb_11eb_b74f_52540082c6bdrow16_col0{\n",
        "            background-color:  #c2cbe2;\n",
        "            color:  #000000;\n",
        "        }#T_70b78d2c_03fb_11eb_b74f_52540082c6bdrow1_col2,#T_70b78d2c_03fb_11eb_b74f_52540082c6bdrow2_col1{\n",
        "            background-color:  #023b5d;\n",
        "            color:  #f1f1f1;\n",
        "        }#T_70b78d2c_03fb_11eb_b74f_52540082c6bdrow1_col3,#T_70b78d2c_03fb_11eb_b74f_52540082c6bdrow3_col1{\n",
        "            background-color:  #045f95;\n",
        "            color:  #f1f1f1;\n",
        "        }#T_70b78d2c_03fb_11eb_b74f_52540082c6bdrow1_col4,#T_70b78d2c_03fb_11eb_b74f_52540082c6bdrow4_col1{\n",
        "            background-color:  #c4cbe3;\n",
        "            color:  #000000;\n",
        "        }#T_70b78d2c_03fb_11eb_b74f_52540082c6bdrow1_col6,#T_70b78d2c_03fb_11eb_b74f_52540082c6bdrow2_col16,#T_70b78d2c_03fb_11eb_b74f_52540082c6bdrow6_col1,#T_70b78d2c_03fb_11eb_b74f_52540082c6bdrow16_col2{\n",
        "            background-color:  #d3d4e7;\n",
        "            color:  #000000;\n",
        "        }#T_70b78d2c_03fb_11eb_b74f_52540082c6bdrow1_col7,#T_70b78d2c_03fb_11eb_b74f_52540082c6bdrow7_col1{\n",
        "            background-color:  #ebe6f2;\n",
        "            color:  #000000;\n",
        "        }#T_70b78d2c_03fb_11eb_b74f_52540082c6bdrow1_col8,#T_70b78d2c_03fb_11eb_b74f_52540082c6bdrow1_col9,#T_70b78d2c_03fb_11eb_b74f_52540082c6bdrow2_col8,#T_70b78d2c_03fb_11eb_b74f_52540082c6bdrow8_col1,#T_70b78d2c_03fb_11eb_b74f_52540082c6bdrow8_col2,#T_70b78d2c_03fb_11eb_b74f_52540082c6bdrow9_col1{\n",
        "            background-color:  #dfddec;\n",
        "            color:  #000000;\n",
        "        }#T_70b78d2c_03fb_11eb_b74f_52540082c6bdrow1_col10,#T_70b78d2c_03fb_11eb_b74f_52540082c6bdrow10_col1{\n",
        "            background-color:  #80aed2;\n",
        "            color:  #000000;\n",
        "        }#T_70b78d2c_03fb_11eb_b74f_52540082c6bdrow1_col11,#T_70b78d2c_03fb_11eb_b74f_52540082c6bdrow11_col1{\n",
        "            background-color:  #b0c2de;\n",
        "            color:  #000000;\n",
        "        }#T_70b78d2c_03fb_11eb_b74f_52540082c6bdrow1_col12,#T_70b78d2c_03fb_11eb_b74f_52540082c6bdrow11_col15,#T_70b78d2c_03fb_11eb_b74f_52540082c6bdrow12_col1,#T_70b78d2c_03fb_11eb_b74f_52540082c6bdrow15_col11{\n",
        "            background-color:  #88b1d4;\n",
        "            color:  #000000;\n",
        "        }#T_70b78d2c_03fb_11eb_b74f_52540082c6bdrow1_col13,#T_70b78d2c_03fb_11eb_b74f_52540082c6bdrow13_col1{\n",
        "            background-color:  #f4eef6;\n",
        "            color:  #000000;\n",
        "        }#T_70b78d2c_03fb_11eb_b74f_52540082c6bdrow1_col14,#T_70b78d2c_03fb_11eb_b74f_52540082c6bdrow14_col1{\n",
        "            background-color:  #f6eff7;\n",
        "            color:  #000000;\n",
        "        }#T_70b78d2c_03fb_11eb_b74f_52540082c6bdrow1_col15,#T_70b78d2c_03fb_11eb_b74f_52540082c6bdrow15_col1{\n",
        "            background-color:  #bcc7e1;\n",
        "            color:  #000000;\n",
        "        }#T_70b78d2c_03fb_11eb_b74f_52540082c6bdrow1_col16,#T_70b78d2c_03fb_11eb_b74f_52540082c6bdrow16_col1{\n",
        "            background-color:  #cdd0e5;\n",
        "            color:  #000000;\n",
        "        }#T_70b78d2c_03fb_11eb_b74f_52540082c6bdrow2_col3,#T_70b78d2c_03fb_11eb_b74f_52540082c6bdrow3_col2,#T_70b78d2c_03fb_11eb_b74f_52540082c6bdrow5_col7,#T_70b78d2c_03fb_11eb_b74f_52540082c6bdrow7_col5{\n",
        "            background-color:  #046097;\n",
        "            color:  #f1f1f1;\n",
        "        }#T_70b78d2c_03fb_11eb_b74f_52540082c6bdrow2_col4,#T_70b78d2c_03fb_11eb_b74f_52540082c6bdrow4_col2{\n",
        "            background-color:  #ced0e6;\n",
        "            color:  #000000;\n",
        "        }#T_70b78d2c_03fb_11eb_b74f_52540082c6bdrow2_col5,#T_70b78d2c_03fb_11eb_b74f_52540082c6bdrow5_col2{\n",
        "            background-color:  #e4e1ef;\n",
        "            color:  #000000;\n",
        "        }#T_70b78d2c_03fb_11eb_b74f_52540082c6bdrow2_col6,#T_70b78d2c_03fb_11eb_b74f_52540082c6bdrow6_col2{\n",
        "            background-color:  #dad9ea;\n",
        "            color:  #000000;\n",
        "        }#T_70b78d2c_03fb_11eb_b74f_52540082c6bdrow2_col7,#T_70b78d2c_03fb_11eb_b74f_52540082c6bdrow7_col2{\n",
        "            background-color:  #ede8f3;\n",
        "            color:  #000000;\n",
        "        }#T_70b78d2c_03fb_11eb_b74f_52540082c6bdrow2_col10,#T_70b78d2c_03fb_11eb_b74f_52540082c6bdrow3_col10,#T_70b78d2c_03fb_11eb_b74f_52540082c6bdrow4_col5,#T_70b78d2c_03fb_11eb_b74f_52540082c6bdrow5_col4,#T_70b78d2c_03fb_11eb_b74f_52540082c6bdrow10_col2,#T_70b78d2c_03fb_11eb_b74f_52540082c6bdrow10_col3{\n",
        "            background-color:  #84b0d3;\n",
        "            color:  #000000;\n",
        "        }#T_70b78d2c_03fb_11eb_b74f_52540082c6bdrow2_col12,#T_70b78d2c_03fb_11eb_b74f_52540082c6bdrow12_col2{\n",
        "            background-color:  #81aed2;\n",
        "            color:  #000000;\n",
        "        }#T_70b78d2c_03fb_11eb_b74f_52540082c6bdrow2_col13,#T_70b78d2c_03fb_11eb_b74f_52540082c6bdrow13_col2{\n",
        "            background-color:  #f5eff6;\n",
        "            color:  #000000;\n",
        "        }#T_70b78d2c_03fb_11eb_b74f_52540082c6bdrow2_col14,#T_70b78d2c_03fb_11eb_b74f_52540082c6bdrow14_col2{\n",
        "            background-color:  #f0eaf4;\n",
        "            color:  #000000;\n",
        "        }#T_70b78d2c_03fb_11eb_b74f_52540082c6bdrow2_col15,#T_70b78d2c_03fb_11eb_b74f_52540082c6bdrow15_col2{\n",
        "            background-color:  #bbc7e0;\n",
        "            color:  #000000;\n",
        "        }#T_70b78d2c_03fb_11eb_b74f_52540082c6bdrow3_col5,#T_70b78d2c_03fb_11eb_b74f_52540082c6bdrow5_col3{\n",
        "            background-color:  #d8d7e9;\n",
        "            color:  #000000;\n",
        "        }#T_70b78d2c_03fb_11eb_b74f_52540082c6bdrow3_col6,#T_70b78d2c_03fb_11eb_b74f_52540082c6bdrow6_col3{\n",
        "            background-color:  #d1d2e6;\n",
        "            color:  #000000;\n",
        "        }#T_70b78d2c_03fb_11eb_b74f_52540082c6bdrow3_col7,#T_70b78d2c_03fb_11eb_b74f_52540082c6bdrow7_col3{\n",
        "            background-color:  #f1ebf5;\n",
        "            color:  #000000;\n",
        "        }#T_70b78d2c_03fb_11eb_b74f_52540082c6bdrow3_col9,#T_70b78d2c_03fb_11eb_b74f_52540082c6bdrow9_col3{\n",
        "            background-color:  #e2dfee;\n",
        "            color:  #000000;\n",
        "        }#T_70b78d2c_03fb_11eb_b74f_52540082c6bdrow3_col11,#T_70b78d2c_03fb_11eb_b74f_52540082c6bdrow11_col3{\n",
        "            background-color:  #b5c4df;\n",
        "            color:  #000000;\n",
        "        }#T_70b78d2c_03fb_11eb_b74f_52540082c6bdrow3_col12,#T_70b78d2c_03fb_11eb_b74f_52540082c6bdrow12_col3{\n",
        "            background-color:  #b1c2de;\n",
        "            color:  #000000;\n",
        "        }#T_70b78d2c_03fb_11eb_b74f_52540082c6bdrow3_col13,#T_70b78d2c_03fb_11eb_b74f_52540082c6bdrow13_col3{\n",
        "            background-color:  #f8f1f8;\n",
        "            color:  #000000;\n",
        "        }#T_70b78d2c_03fb_11eb_b74f_52540082c6bdrow3_col14,#T_70b78d2c_03fb_11eb_b74f_52540082c6bdrow14_col3{\n",
        "            background-color:  #fff7fb;\n",
        "            color:  #000000;\n",
        "        }#T_70b78d2c_03fb_11eb_b74f_52540082c6bdrow3_col15,#T_70b78d2c_03fb_11eb_b74f_52540082c6bdrow15_col3{\n",
        "            background-color:  #d6d6e9;\n",
        "            color:  #000000;\n",
        "        }#T_70b78d2c_03fb_11eb_b74f_52540082c6bdrow4_col6,#T_70b78d2c_03fb_11eb_b74f_52540082c6bdrow6_col4,#T_70b78d2c_03fb_11eb_b74f_52540082c6bdrow9_col15,#T_70b78d2c_03fb_11eb_b74f_52540082c6bdrow15_col9{\n",
        "            background-color:  #afc1dd;\n",
        "            color:  #000000;\n",
        "        }#T_70b78d2c_03fb_11eb_b74f_52540082c6bdrow4_col7,#T_70b78d2c_03fb_11eb_b74f_52540082c6bdrow7_col4{\n",
        "            background-color:  #9fbad9;\n",
        "            color:  #000000;\n",
        "        }#T_70b78d2c_03fb_11eb_b74f_52540082c6bdrow4_col10,#T_70b78d2c_03fb_11eb_b74f_52540082c6bdrow10_col4{\n",
        "            background-color:  #a5bddb;\n",
        "            color:  #000000;\n",
        "        }#T_70b78d2c_03fb_11eb_b74f_52540082c6bdrow4_col11,#T_70b78d2c_03fb_11eb_b74f_52540082c6bdrow11_col4{\n",
        "            background-color:  #b9c6e0;\n",
        "            color:  #000000;\n",
        "        }#T_70b78d2c_03fb_11eb_b74f_52540082c6bdrow4_col13,#T_70b78d2c_03fb_11eb_b74f_52540082c6bdrow13_col4{\n",
        "            background-color:  #a7bddb;\n",
        "            color:  #000000;\n",
        "        }#T_70b78d2c_03fb_11eb_b74f_52540082c6bdrow4_col14,#T_70b78d2c_03fb_11eb_b74f_52540082c6bdrow14_col4{\n",
        "            background-color:  #d5d5e8;\n",
        "            color:  #000000;\n",
        "        }#T_70b78d2c_03fb_11eb_b74f_52540082c6bdrow4_col15,#T_70b78d2c_03fb_11eb_b74f_52540082c6bdrow15_col4{\n",
        "            background-color:  #8fb4d6;\n",
        "            color:  #000000;\n",
        "        }#T_70b78d2c_03fb_11eb_b74f_52540082c6bdrow4_col16,#T_70b78d2c_03fb_11eb_b74f_52540082c6bdrow16_col4{\n",
        "            background-color:  #97b7d7;\n",
        "            color:  #000000;\n",
        "        }#T_70b78d2c_03fb_11eb_b74f_52540082c6bdrow5_col6,#T_70b78d2c_03fb_11eb_b74f_52540082c6bdrow6_col5,#T_70b78d2c_03fb_11eb_b74f_52540082c6bdrow9_col11,#T_70b78d2c_03fb_11eb_b74f_52540082c6bdrow11_col9{\n",
        "            background-color:  #05659f;\n",
        "            color:  #f1f1f1;\n",
        "        }#T_70b78d2c_03fb_11eb_b74f_52540082c6bdrow5_col8,#T_70b78d2c_03fb_11eb_b74f_52540082c6bdrow8_col5{\n",
        "            background-color:  #0c74b2;\n",
        "            color:  #f1f1f1;\n",
        "        }#T_70b78d2c_03fb_11eb_b74f_52540082c6bdrow5_col9,#T_70b78d2c_03fb_11eb_b74f_52540082c6bdrow9_col5{\n",
        "            background-color:  #157ab5;\n",
        "            color:  #000000;\n",
        "        }#T_70b78d2c_03fb_11eb_b74f_52540082c6bdrow5_col10,#T_70b78d2c_03fb_11eb_b74f_52540082c6bdrow10_col5,#T_70b78d2c_03fb_11eb_b74f_52540082c6bdrow13_col15,#T_70b78d2c_03fb_11eb_b74f_52540082c6bdrow15_col13{\n",
        "            background-color:  #197db7;\n",
        "            color:  #000000;\n",
        "        }#T_70b78d2c_03fb_11eb_b74f_52540082c6bdrow5_col11,#T_70b78d2c_03fb_11eb_b74f_52540082c6bdrow7_col12,#T_70b78d2c_03fb_11eb_b74f_52540082c6bdrow11_col5,#T_70b78d2c_03fb_11eb_b74f_52540082c6bdrow12_col7{\n",
        "            background-color:  #2383ba;\n",
        "            color:  #000000;\n",
        "        }#T_70b78d2c_03fb_11eb_b74f_52540082c6bdrow5_col12,#T_70b78d2c_03fb_11eb_b74f_52540082c6bdrow12_col5,#T_70b78d2c_03fb_11eb_b74f_52540082c6bdrow15_col16,#T_70b78d2c_03fb_11eb_b74f_52540082c6bdrow16_col15{\n",
        "            background-color:  #3f93c2;\n",
        "            color:  #000000;\n",
        "        }#T_70b78d2c_03fb_11eb_b74f_52540082c6bdrow5_col13,#T_70b78d2c_03fb_11eb_b74f_52540082c6bdrow13_col5{\n",
        "            background-color:  #056aa6;\n",
        "            color:  #f1f1f1;\n",
        "        }#T_70b78d2c_03fb_11eb_b74f_52540082c6bdrow5_col14,#T_70b78d2c_03fb_11eb_b74f_52540082c6bdrow6_col12,#T_70b78d2c_03fb_11eb_b74f_52540082c6bdrow12_col6,#T_70b78d2c_03fb_11eb_b74f_52540082c6bdrow14_col5{\n",
        "            background-color:  #2f8bbe;\n",
        "            color:  #000000;\n",
        "        }#T_70b78d2c_03fb_11eb_b74f_52540082c6bdrow5_col15,#T_70b78d2c_03fb_11eb_b74f_52540082c6bdrow8_col15,#T_70b78d2c_03fb_11eb_b74f_52540082c6bdrow15_col5,#T_70b78d2c_03fb_11eb_b74f_52540082c6bdrow15_col8{\n",
        "            background-color:  #79abd0;\n",
        "            color:  #000000;\n",
        "        }#T_70b78d2c_03fb_11eb_b74f_52540082c6bdrow5_col16,#T_70b78d2c_03fb_11eb_b74f_52540082c6bdrow10_col11,#T_70b78d2c_03fb_11eb_b74f_52540082c6bdrow11_col10,#T_70b78d2c_03fb_11eb_b74f_52540082c6bdrow16_col5{\n",
        "            background-color:  #045b8e;\n",
        "            color:  #f1f1f1;\n",
        "        }#T_70b78d2c_03fb_11eb_b74f_52540082c6bdrow6_col7,#T_70b78d2c_03fb_11eb_b74f_52540082c6bdrow7_col6{\n",
        "            background-color:  #04649e;\n",
        "            color:  #f1f1f1;\n",
        "        }#T_70b78d2c_03fb_11eb_b74f_52540082c6bdrow6_col8,#T_70b78d2c_03fb_11eb_b74f_52540082c6bdrow8_col6,#T_70b78d2c_03fb_11eb_b74f_52540082c6bdrow8_col13,#T_70b78d2c_03fb_11eb_b74f_52540082c6bdrow13_col8{\n",
        "            background-color:  #056ba7;\n",
        "            color:  #f1f1f1;\n",
        "        }#T_70b78d2c_03fb_11eb_b74f_52540082c6bdrow6_col9,#T_70b78d2c_03fb_11eb_b74f_52540082c6bdrow9_col6{\n",
        "            background-color:  #056faf;\n",
        "            color:  #f1f1f1;\n",
        "        }#T_70b78d2c_03fb_11eb_b74f_52540082c6bdrow6_col10,#T_70b78d2c_03fb_11eb_b74f_52540082c6bdrow10_col6{\n",
        "            background-color:  #0d75b3;\n",
        "            color:  #f1f1f1;\n",
        "        }#T_70b78d2c_03fb_11eb_b74f_52540082c6bdrow6_col11,#T_70b78d2c_03fb_11eb_b74f_52540082c6bdrow11_col6,#T_70b78d2c_03fb_11eb_b74f_52540082c6bdrow12_col14,#T_70b78d2c_03fb_11eb_b74f_52540082c6bdrow14_col12{\n",
        "            background-color:  #187cb6;\n",
        "            color:  #000000;\n",
        "        }#T_70b78d2c_03fb_11eb_b74f_52540082c6bdrow6_col13,#T_70b78d2c_03fb_11eb_b74f_52540082c6bdrow8_col9,#T_70b78d2c_03fb_11eb_b74f_52540082c6bdrow9_col8,#T_70b78d2c_03fb_11eb_b74f_52540082c6bdrow10_col16,#T_70b78d2c_03fb_11eb_b74f_52540082c6bdrow13_col6,#T_70b78d2c_03fb_11eb_b74f_52540082c6bdrow16_col10{\n",
        "            background-color:  #045e93;\n",
        "            color:  #f1f1f1;\n",
        "        }#T_70b78d2c_03fb_11eb_b74f_52540082c6bdrow6_col14,#T_70b78d2c_03fb_11eb_b74f_52540082c6bdrow7_col10,#T_70b78d2c_03fb_11eb_b74f_52540082c6bdrow10_col7,#T_70b78d2c_03fb_11eb_b74f_52540082c6bdrow14_col6{\n",
        "            background-color:  #2d8abd;\n",
        "            color:  #000000;\n",
        "        }#T_70b78d2c_03fb_11eb_b74f_52540082c6bdrow6_col15,#T_70b78d2c_03fb_11eb_b74f_52540082c6bdrow11_col14,#T_70b78d2c_03fb_11eb_b74f_52540082c6bdrow14_col11,#T_70b78d2c_03fb_11eb_b74f_52540082c6bdrow15_col6{\n",
        "            background-color:  #60a1ca;\n",
        "            color:  #000000;\n",
        "        }#T_70b78d2c_03fb_11eb_b74f_52540082c6bdrow6_col16,#T_70b78d2c_03fb_11eb_b74f_52540082c6bdrow16_col6{\n",
        "            background-color:  #03517e;\n",
        "            color:  #f1f1f1;\n",
        "        }#T_70b78d2c_03fb_11eb_b74f_52540082c6bdrow7_col8,#T_70b78d2c_03fb_11eb_b74f_52540082c6bdrow8_col7{\n",
        "            background-color:  #056ead;\n",
        "            color:  #f1f1f1;\n",
        "        }#T_70b78d2c_03fb_11eb_b74f_52540082c6bdrow7_col9,#T_70b78d2c_03fb_11eb_b74f_52540082c6bdrow8_col12,#T_70b78d2c_03fb_11eb_b74f_52540082c6bdrow8_col14,#T_70b78d2c_03fb_11eb_b74f_52540082c6bdrow9_col7,#T_70b78d2c_03fb_11eb_b74f_52540082c6bdrow12_col8,#T_70b78d2c_03fb_11eb_b74f_52540082c6bdrow14_col8{\n",
        "            background-color:  #2484ba;\n",
        "            color:  #000000;\n",
        "        }#T_70b78d2c_03fb_11eb_b74f_52540082c6bdrow7_col11,#T_70b78d2c_03fb_11eb_b74f_52540082c6bdrow11_col7{\n",
        "            background-color:  #2987bc;\n",
        "            color:  #000000;\n",
        "        }#T_70b78d2c_03fb_11eb_b74f_52540082c6bdrow7_col13,#T_70b78d2c_03fb_11eb_b74f_52540082c6bdrow13_col7{\n",
        "            background-color:  #045382;\n",
        "            color:  #f1f1f1;\n",
        "        }#T_70b78d2c_03fb_11eb_b74f_52540082c6bdrow7_col14,#T_70b78d2c_03fb_11eb_b74f_52540082c6bdrow14_col7{\n",
        "            background-color:  #0872b1;\n",
        "            color:  #f1f1f1;\n",
        "        }#T_70b78d2c_03fb_11eb_b74f_52540082c6bdrow7_col15,#T_70b78d2c_03fb_11eb_b74f_52540082c6bdrow15_col7{\n",
        "            background-color:  #1b7eb7;\n",
        "            color:  #000000;\n",
        "        }#T_70b78d2c_03fb_11eb_b74f_52540082c6bdrow7_col16,#T_70b78d2c_03fb_11eb_b74f_52540082c6bdrow16_col7{\n",
        "            background-color:  #045a8d;\n",
        "            color:  #f1f1f1;\n",
        "        }#T_70b78d2c_03fb_11eb_b74f_52540082c6bdrow8_col10,#T_70b78d2c_03fb_11eb_b74f_52540082c6bdrow10_col8{\n",
        "            background-color:  #056ba9;\n",
        "            color:  #f1f1f1;\n",
        "        }#T_70b78d2c_03fb_11eb_b74f_52540082c6bdrow8_col11,#T_70b78d2c_03fb_11eb_b74f_52540082c6bdrow11_col8{\n",
        "            background-color:  #04639b;\n",
        "            color:  #f1f1f1;\n",
        "        }#T_70b78d2c_03fb_11eb_b74f_52540082c6bdrow8_col16,#T_70b78d2c_03fb_11eb_b74f_52540082c6bdrow16_col8{\n",
        "            background-color:  #045280;\n",
        "            color:  #f1f1f1;\n",
        "        }#T_70b78d2c_03fb_11eb_b74f_52540082c6bdrow9_col10,#T_70b78d2c_03fb_11eb_b74f_52540082c6bdrow10_col9{\n",
        "            background-color:  #056dab;\n",
        "            color:  #f1f1f1;\n",
        "        }#T_70b78d2c_03fb_11eb_b74f_52540082c6bdrow9_col12,#T_70b78d2c_03fb_11eb_b74f_52540082c6bdrow12_col9{\n",
        "            background-color:  #3b92c1;\n",
        "            color:  #000000;\n",
        "        }#T_70b78d2c_03fb_11eb_b74f_52540082c6bdrow9_col13,#T_70b78d2c_03fb_11eb_b74f_52540082c6bdrow13_col9{\n",
        "            background-color:  #2a88bc;\n",
        "            color:  #000000;\n",
        "        }#T_70b78d2c_03fb_11eb_b74f_52540082c6bdrow9_col14,#T_70b78d2c_03fb_11eb_b74f_52540082c6bdrow14_col9{\n",
        "            background-color:  #348ebf;\n",
        "            color:  #000000;\n",
        "        }#T_70b78d2c_03fb_11eb_b74f_52540082c6bdrow9_col16,#T_70b78d2c_03fb_11eb_b74f_52540082c6bdrow11_col16,#T_70b78d2c_03fb_11eb_b74f_52540082c6bdrow16_col9,#T_70b78d2c_03fb_11eb_b74f_52540082c6bdrow16_col11{\n",
        "            background-color:  #046096;\n",
        "            color:  #f1f1f1;\n",
        "        }#T_70b78d2c_03fb_11eb_b74f_52540082c6bdrow10_col12,#T_70b78d2c_03fb_11eb_b74f_52540082c6bdrow12_col10{\n",
        "            background-color:  #1e80b8;\n",
        "            color:  #000000;\n",
        "        }#T_70b78d2c_03fb_11eb_b74f_52540082c6bdrow10_col13,#T_70b78d2c_03fb_11eb_b74f_52540082c6bdrow13_col10{\n",
        "            background-color:  #4c99c5;\n",
        "            color:  #000000;\n",
        "        }#T_70b78d2c_03fb_11eb_b74f_52540082c6bdrow10_col14,#T_70b78d2c_03fb_11eb_b74f_52540082c6bdrow14_col10{\n",
        "            background-color:  #73a9cf;\n",
        "            color:  #000000;\n",
        "        }#T_70b78d2c_03fb_11eb_b74f_52540082c6bdrow10_col15,#T_70b78d2c_03fb_11eb_b74f_52540082c6bdrow15_col10{\n",
        "            background-color:  #6fa7ce;\n",
        "            color:  #000000;\n",
        "        }#T_70b78d2c_03fb_11eb_b74f_52540082c6bdrow11_col12,#T_70b78d2c_03fb_11eb_b74f_52540082c6bdrow12_col11,#T_70b78d2c_03fb_11eb_b74f_52540082c6bdrow12_col13,#T_70b78d2c_03fb_11eb_b74f_52540082c6bdrow13_col12,#T_70b78d2c_03fb_11eb_b74f_52540082c6bdrow14_col16,#T_70b78d2c_03fb_11eb_b74f_52540082c6bdrow16_col14{\n",
        "            background-color:  #2c89bd;\n",
        "            color:  #000000;\n",
        "        }#T_70b78d2c_03fb_11eb_b74f_52540082c6bdrow11_col13,#T_70b78d2c_03fb_11eb_b74f_52540082c6bdrow13_col11{\n",
        "            background-color:  #3790c0;\n",
        "            color:  #000000;\n",
        "        }#T_70b78d2c_03fb_11eb_b74f_52540082c6bdrow12_col15,#T_70b78d2c_03fb_11eb_b74f_52540082c6bdrow15_col12{\n",
        "            background-color:  #2685bb;\n",
        "            color:  #000000;\n",
        "        }#T_70b78d2c_03fb_11eb_b74f_52540082c6bdrow12_col16,#T_70b78d2c_03fb_11eb_b74f_52540082c6bdrow16_col12{\n",
        "            background-color:  #0771b1;\n",
        "            color:  #f1f1f1;\n",
        "        }#T_70b78d2c_03fb_11eb_b74f_52540082c6bdrow13_col14,#T_70b78d2c_03fb_11eb_b74f_52540082c6bdrow14_col13{\n",
        "            background-color:  #056caa;\n",
        "            color:  #f1f1f1;\n",
        "        }#T_70b78d2c_03fb_11eb_b74f_52540082c6bdrow13_col16,#T_70b78d2c_03fb_11eb_b74f_52540082c6bdrow16_col13{\n",
        "            background-color:  #045c90;\n",
        "            color:  #f1f1f1;\n",
        "        }#T_70b78d2c_03fb_11eb_b74f_52540082c6bdrow14_col15,#T_70b78d2c_03fb_11eb_b74f_52540082c6bdrow15_col14{\n",
        "            background-color:  #4697c4;\n",
        "            color:  #000000;\n",
        "        }</style><table id=\"T_70b78d2c_03fb_11eb_b74f_52540082c6bd\" ><thead>    <tr>        <th class=\"blank level0\" ></th>        <th class=\"col_heading level0 col0\" >Rt</th>        <th class=\"col_heading level0 col1\" >theta</th>        <th class=\"col_heading level0 col2\" >kappa</th>        <th class=\"col_heading level0 col3\" >rho</th>        <th class=\"col_heading level0 col4\" >sigma</th>        <th class=\"col_heading level0 col5\" >School_closing</th>        <th class=\"col_heading level0 col6\" >Workplace_closing</th>        <th class=\"col_heading level0 col7\" >Cancel_events</th>        <th class=\"col_heading level0 col8\" >Gatherings_restrictions</th>        <th class=\"col_heading level0 col9\" >Transport_closing</th>        <th class=\"col_heading level0 col10\" >Stay_home_restrictions</th>        <th class=\"col_heading level0 col11\" >Internal_movement_restrictions</th>        <th class=\"col_heading level0 col12\" >International_movement_restrictions</th>        <th class=\"col_heading level0 col13\" >Information_campaigns</th>        <th class=\"col_heading level0 col14\" >Testing_policy</th>        <th class=\"col_heading level0 col15\" >Contact_tracing</th>        <th class=\"col_heading level0 col16\" >Stringency_index</th>    </tr></thead><tbody>\n",
        "                <tr>\n",
        "                        <th id=\"T_70b78d2c_03fb_11eb_b74f_52540082c6bdlevel0_row0\" class=\"row_heading level0 row0\" >Rt</th>\n",
        "                        <td id=\"T_70b78d2c_03fb_11eb_b74f_52540082c6bdrow0_col0\" class=\"data row0 col0\" >1.000000</td>\n",
        "                        <td id=\"T_70b78d2c_03fb_11eb_b74f_52540082c6bdrow0_col1\" class=\"data row0 col1\" >-0.204402</td>\n",
        "                        <td id=\"T_70b78d2c_03fb_11eb_b74f_52540082c6bdrow0_col2\" class=\"data row0 col2\" >-0.201129</td>\n",
        "                        <td id=\"T_70b78d2c_03fb_11eb_b74f_52540082c6bdrow0_col3\" class=\"data row0 col3\" >0.175262</td>\n",
        "                        <td id=\"T_70b78d2c_03fb_11eb_b74f_52540082c6bdrow0_col4\" class=\"data row0 col4\" >-0.206562</td>\n",
        "                        <td id=\"T_70b78d2c_03fb_11eb_b74f_52540082c6bdrow0_col5\" class=\"data row0 col5\" >-0.018561</td>\n",
        "                        <td id=\"T_70b78d2c_03fb_11eb_b74f_52540082c6bdrow0_col6\" class=\"data row0 col6\" >0.069033</td>\n",
        "                        <td id=\"T_70b78d2c_03fb_11eb_b74f_52540082c6bdrow0_col7\" class=\"data row0 col7\" >-0.121006</td>\n",
        "                        <td id=\"T_70b78d2c_03fb_11eb_b74f_52540082c6bdrow0_col8\" class=\"data row0 col8\" >0.027706</td>\n",
        "                        <td id=\"T_70b78d2c_03fb_11eb_b74f_52540082c6bdrow0_col9\" class=\"data row0 col9\" >-0.058614</td>\n",
        "                        <td id=\"T_70b78d2c_03fb_11eb_b74f_52540082c6bdrow0_col10\" class=\"data row0 col10\" >-0.090467</td>\n",
        "                        <td id=\"T_70b78d2c_03fb_11eb_b74f_52540082c6bdrow0_col11\" class=\"data row0 col11\" >-0.069377</td>\n",
        "                        <td id=\"T_70b78d2c_03fb_11eb_b74f_52540082c6bdrow0_col12\" class=\"data row0 col12\" >-0.147316</td>\n",
        "                        <td id=\"T_70b78d2c_03fb_11eb_b74f_52540082c6bdrow0_col13\" class=\"data row0 col13\" >-0.014682</td>\n",
        "                        <td id=\"T_70b78d2c_03fb_11eb_b74f_52540082c6bdrow0_col14\" class=\"data row0 col14\" >-0.075060</td>\n",
        "                        <td id=\"T_70b78d2c_03fb_11eb_b74f_52540082c6bdrow0_col15\" class=\"data row0 col15\" >-0.176672</td>\n",
        "                        <td id=\"T_70b78d2c_03fb_11eb_b74f_52540082c6bdrow0_col16\" class=\"data row0 col16\" >-0.031346</td>\n",
        "            </tr>\n",
        "            <tr>\n",
        "                        <th id=\"T_70b78d2c_03fb_11eb_b74f_52540082c6bdlevel0_row1\" class=\"row_heading level0 row1\" >theta</th>\n",
        "                        <td id=\"T_70b78d2c_03fb_11eb_b74f_52540082c6bdrow1_col0\" class=\"data row1 col0\" >-0.204402</td>\n",
        "                        <td id=\"T_70b78d2c_03fb_11eb_b74f_52540082c6bdrow1_col1\" class=\"data row1 col1\" >1.000000</td>\n",
        "                        <td id=\"T_70b78d2c_03fb_11eb_b74f_52540082c6bdrow1_col2\" class=\"data row1 col2\" >0.981750</td>\n",
        "                        <td id=\"T_70b78d2c_03fb_11eb_b74f_52540082c6bdrow1_col3\" class=\"data row1 col3\" >0.777015</td>\n",
        "                        <td id=\"T_70b78d2c_03fb_11eb_b74f_52540082c6bdrow1_col4\" class=\"data row1 col4\" >-0.039700</td>\n",
        "                        <td id=\"T_70b78d2c_03fb_11eb_b74f_52540082c6bdrow1_col5\" class=\"data row1 col5\" >-0.197732</td>\n",
        "                        <td id=\"T_70b78d2c_03fb_11eb_b74f_52540082c6bdrow1_col6\" class=\"data row1 col6\" >-0.114023</td>\n",
        "                        <td id=\"T_70b78d2c_03fb_11eb_b74f_52540082c6bdrow1_col7\" class=\"data row1 col7\" >-0.269944</td>\n",
        "                        <td id=\"T_70b78d2c_03fb_11eb_b74f_52540082c6bdrow1_col8\" class=\"data row1 col8\" >-0.188003</td>\n",
        "                        <td id=\"T_70b78d2c_03fb_11eb_b74f_52540082c6bdrow1_col9\" class=\"data row1 col9\" >-0.186600</td>\n",
        "                        <td id=\"T_70b78d2c_03fb_11eb_b74f_52540082c6bdrow1_col10\" class=\"data row1 col10\" >0.228071</td>\n",
        "                        <td id=\"T_70b78d2c_03fb_11eb_b74f_52540082c6bdrow1_col11\" class=\"data row1 col11\" >0.045493</td>\n",
        "                        <td id=\"T_70b78d2c_03fb_11eb_b74f_52540082c6bdrow1_col12\" class=\"data row1 col12\" >0.200566</td>\n",
        "                        <td id=\"T_70b78d2c_03fb_11eb_b74f_52540082c6bdrow1_col13\" class=\"data row1 col13\" >-0.353713</td>\n",
        "                        <td id=\"T_70b78d2c_03fb_11eb_b74f_52540082c6bdrow1_col14\" class=\"data row1 col14\" >-0.370775</td>\n",
        "                        <td id=\"T_70b78d2c_03fb_11eb_b74f_52540082c6bdrow1_col15\" class=\"data row1 col15\" >-0.004960</td>\n",
        "                        <td id=\"T_70b78d2c_03fb_11eb_b74f_52540082c6bdrow1_col16\" class=\"data row1 col16\" >-0.077019</td>\n",
        "            </tr>\n",
        "            <tr>\n",
        "                        <th id=\"T_70b78d2c_03fb_11eb_b74f_52540082c6bdlevel0_row2\" class=\"row_heading level0 row2\" >kappa</th>\n",
        "                        <td id=\"T_70b78d2c_03fb_11eb_b74f_52540082c6bdrow2_col0\" class=\"data row2 col0\" >-0.201129</td>\n",
        "                        <td id=\"T_70b78d2c_03fb_11eb_b74f_52540082c6bdrow2_col1\" class=\"data row2 col1\" >0.981750</td>\n",
        "                        <td id=\"T_70b78d2c_03fb_11eb_b74f_52540082c6bdrow2_col2\" class=\"data row2 col2\" >1.000000</td>\n",
        "                        <td id=\"T_70b78d2c_03fb_11eb_b74f_52540082c6bdrow2_col3\" class=\"data row2 col3\" >0.766023</td>\n",
        "                        <td id=\"T_70b78d2c_03fb_11eb_b74f_52540082c6bdrow2_col4\" class=\"data row2 col4\" >-0.087622</td>\n",
        "                        <td id=\"T_70b78d2c_03fb_11eb_b74f_52540082c6bdrow2_col5\" class=\"data row2 col5\" >-0.221751</td>\n",
        "                        <td id=\"T_70b78d2c_03fb_11eb_b74f_52540082c6bdrow2_col6\" class=\"data row2 col6\" >-0.156748</td>\n",
        "                        <td id=\"T_70b78d2c_03fb_11eb_b74f_52540082c6bdrow2_col7\" class=\"data row2 col7\" >-0.283657</td>\n",
        "                        <td id=\"T_70b78d2c_03fb_11eb_b74f_52540082c6bdrow2_col8\" class=\"data row2 col8\" >-0.186390</td>\n",
        "                        <td id=\"T_70b78d2c_03fb_11eb_b74f_52540082c6bdrow2_col9\" class=\"data row2 col9\" >-0.203787</td>\n",
        "                        <td id=\"T_70b78d2c_03fb_11eb_b74f_52540082c6bdrow2_col10\" class=\"data row2 col10\" >0.210469</td>\n",
        "                        <td id=\"T_70b78d2c_03fb_11eb_b74f_52540082c6bdrow2_col11\" class=\"data row2 col11\" >0.027121</td>\n",
        "                        <td id=\"T_70b78d2c_03fb_11eb_b74f_52540082c6bdrow2_col12\" class=\"data row2 col12\" >0.222331</td>\n",
        "                        <td id=\"T_70b78d2c_03fb_11eb_b74f_52540082c6bdrow2_col13\" class=\"data row2 col13\" >-0.362474</td>\n",
        "                        <td id=\"T_70b78d2c_03fb_11eb_b74f_52540082c6bdrow2_col14\" class=\"data row2 col14\" >-0.314360</td>\n",
        "                        <td id=\"T_70b78d2c_03fb_11eb_b74f_52540082c6bdrow2_col15\" class=\"data row2 col15\" >0.002379</td>\n",
        "                        <td id=\"T_70b78d2c_03fb_11eb_b74f_52540082c6bdrow2_col16\" class=\"data row2 col16\" >-0.112741</td>\n",
        "            </tr>\n",
        "            <tr>\n",
        "                        <th id=\"T_70b78d2c_03fb_11eb_b74f_52540082c6bdlevel0_row3\" class=\"row_heading level0 row3\" >rho</th>\n",
        "                        <td id=\"T_70b78d2c_03fb_11eb_b74f_52540082c6bdrow3_col0\" class=\"data row3 col0\" >0.175262</td>\n",
        "                        <td id=\"T_70b78d2c_03fb_11eb_b74f_52540082c6bdrow3_col1\" class=\"data row3 col1\" >0.777015</td>\n",
        "                        <td id=\"T_70b78d2c_03fb_11eb_b74f_52540082c6bdrow3_col2\" class=\"data row3 col2\" >0.766023</td>\n",
        "                        <td id=\"T_70b78d2c_03fb_11eb_b74f_52540082c6bdrow3_col3\" class=\"data row3 col3\" >1.000000</td>\n",
        "                        <td id=\"T_70b78d2c_03fb_11eb_b74f_52540082c6bdrow3_col4\" class=\"data row3 col4\" >0.069206</td>\n",
        "                        <td id=\"T_70b78d2c_03fb_11eb_b74f_52540082c6bdrow3_col5\" class=\"data row3 col5\" >-0.141563</td>\n",
        "                        <td id=\"T_70b78d2c_03fb_11eb_b74f_52540082c6bdrow3_col6\" class=\"data row3 col6\" >-0.095147</td>\n",
        "                        <td id=\"T_70b78d2c_03fb_11eb_b74f_52540082c6bdrow3_col7\" class=\"data row3 col7\" >-0.324811</td>\n",
        "                        <td id=\"T_70b78d2c_03fb_11eb_b74f_52540082c6bdrow3_col8\" class=\"data row3 col8\" >-0.151795</td>\n",
        "                        <td id=\"T_70b78d2c_03fb_11eb_b74f_52540082c6bdrow3_col9\" class=\"data row3 col9\" >-0.208883</td>\n",
        "                        <td id=\"T_70b78d2c_03fb_11eb_b74f_52540082c6bdrow3_col10\" class=\"data row3 col10\" >0.211349</td>\n",
        "                        <td id=\"T_70b78d2c_03fb_11eb_b74f_52540082c6bdrow3_col11\" class=\"data row3 col11\" >0.023896</td>\n",
        "                        <td id=\"T_70b78d2c_03fb_11eb_b74f_52540082c6bdrow3_col12\" class=\"data row3 col12\" >0.042173</td>\n",
        "                        <td id=\"T_70b78d2c_03fb_11eb_b74f_52540082c6bdrow3_col13\" class=\"data row3 col13\" >-0.390503</td>\n",
        "                        <td id=\"T_70b78d2c_03fb_11eb_b74f_52540082c6bdrow3_col14\" class=\"data row3 col14\" >-0.458260</td>\n",
        "                        <td id=\"T_70b78d2c_03fb_11eb_b74f_52540082c6bdrow3_col15\" class=\"data row3 col15\" >-0.130574</td>\n",
        "                        <td id=\"T_70b78d2c_03fb_11eb_b74f_52540082c6bdrow3_col16\" class=\"data row3 col16\" >-0.092111</td>\n",
        "            </tr>\n",
        "            <tr>\n",
        "                        <th id=\"T_70b78d2c_03fb_11eb_b74f_52540082c6bdlevel0_row4\" class=\"row_heading level0 row4\" >sigma</th>\n",
        "                        <td id=\"T_70b78d2c_03fb_11eb_b74f_52540082c6bdrow4_col0\" class=\"data row4 col0\" >-0.206562</td>\n",
        "                        <td id=\"T_70b78d2c_03fb_11eb_b74f_52540082c6bdrow4_col1\" class=\"data row4 col1\" >-0.039700</td>\n",
        "                        <td id=\"T_70b78d2c_03fb_11eb_b74f_52540082c6bdrow4_col2\" class=\"data row4 col2\" >-0.087622</td>\n",
        "                        <td id=\"T_70b78d2c_03fb_11eb_b74f_52540082c6bdrow4_col3\" class=\"data row4 col3\" >0.069206</td>\n",
        "                        <td id=\"T_70b78d2c_03fb_11eb_b74f_52540082c6bdrow4_col4\" class=\"data row4 col4\" >1.000000</td>\n",
        "                        <td id=\"T_70b78d2c_03fb_11eb_b74f_52540082c6bdrow4_col5\" class=\"data row4 col5\" >0.213318</td>\n",
        "                        <td id=\"T_70b78d2c_03fb_11eb_b74f_52540082c6bdrow4_col6\" class=\"data row4 col6\" >0.051953</td>\n",
        "                        <td id=\"T_70b78d2c_03fb_11eb_b74f_52540082c6bdrow4_col7\" class=\"data row4 col7\" >0.111839</td>\n",
        "                        <td id=\"T_70b78d2c_03fb_11eb_b74f_52540082c6bdrow4_col8\" class=\"data row4 col8\" >-0.018809</td>\n",
        "                        <td id=\"T_70b78d2c_03fb_11eb_b74f_52540082c6bdrow4_col9\" class=\"data row4 col9\" >0.026610</td>\n",
        "                        <td id=\"T_70b78d2c_03fb_11eb_b74f_52540082c6bdrow4_col10\" class=\"data row4 col10\" >0.094175</td>\n",
        "                        <td id=\"T_70b78d2c_03fb_11eb_b74f_52540082c6bdrow4_col11\" class=\"data row4 col11\" >0.003810</td>\n",
        "                        <td id=\"T_70b78d2c_03fb_11eb_b74f_52540082c6bdrow4_col12\" class=\"data row4 col12\" >-0.056521</td>\n",
        "                        <td id=\"T_70b78d2c_03fb_11eb_b74f_52540082c6bdrow4_col13\" class=\"data row4 col13\" >0.086938</td>\n",
        "                        <td id=\"T_70b78d2c_03fb_11eb_b74f_52540082c6bdrow4_col14\" class=\"data row4 col14\" >-0.124528</td>\n",
        "                        <td id=\"T_70b78d2c_03fb_11eb_b74f_52540082c6bdrow4_col15\" class=\"data row4 col15\" >0.169879</td>\n",
        "                        <td id=\"T_70b78d2c_03fb_11eb_b74f_52540082c6bdrow4_col16\" class=\"data row4 col16\" >0.144661</td>\n",
        "            </tr>\n",
        "            <tr>\n",
        "                        <th id=\"T_70b78d2c_03fb_11eb_b74f_52540082c6bdlevel0_row5\" class=\"row_heading level0 row5\" >School_closing</th>\n",
        "                        <td id=\"T_70b78d2c_03fb_11eb_b74f_52540082c6bdrow5_col0\" class=\"data row5 col0\" >-0.018561</td>\n",
        "                        <td id=\"T_70b78d2c_03fb_11eb_b74f_52540082c6bdrow5_col1\" class=\"data row5 col1\" >-0.197732</td>\n",
        "                        <td id=\"T_70b78d2c_03fb_11eb_b74f_52540082c6bdrow5_col2\" class=\"data row5 col2\" >-0.221751</td>\n",
        "                        <td id=\"T_70b78d2c_03fb_11eb_b74f_52540082c6bdrow5_col3\" class=\"data row5 col3\" >-0.141563</td>\n",
        "                        <td id=\"T_70b78d2c_03fb_11eb_b74f_52540082c6bdrow5_col4\" class=\"data row5 col4\" >0.213318</td>\n",
        "                        <td id=\"T_70b78d2c_03fb_11eb_b74f_52540082c6bdrow5_col5\" class=\"data row5 col5\" >1.000000</td>\n",
        "                        <td id=\"T_70b78d2c_03fb_11eb_b74f_52540082c6bdrow5_col6\" class=\"data row5 col6\" >0.724014</td>\n",
        "                        <td id=\"T_70b78d2c_03fb_11eb_b74f_52540082c6bdrow5_col7\" class=\"data row5 col7\" >0.764884</td>\n",
        "                        <td id=\"T_70b78d2c_03fb_11eb_b74f_52540082c6bdrow5_col8\" class=\"data row5 col8\" >0.612322</td>\n",
        "                        <td id=\"T_70b78d2c_03fb_11eb_b74f_52540082c6bdrow5_col9\" class=\"data row5 col9\" >0.577282</td>\n",
        "                        <td id=\"T_70b78d2c_03fb_11eb_b74f_52540082c6bdrow5_col10\" class=\"data row5 col10\" >0.558669</td>\n",
        "                        <td id=\"T_70b78d2c_03fb_11eb_b74f_52540082c6bdrow5_col11\" class=\"data row5 col11\" >0.525034</td>\n",
        "                        <td id=\"T_70b78d2c_03fb_11eb_b74f_52540082c6bdrow5_col12\" class=\"data row5 col12\" >0.429308</td>\n",
        "                        <td id=\"T_70b78d2c_03fb_11eb_b74f_52540082c6bdrow5_col13\" class=\"data row5 col13\" >0.684723</td>\n",
        "                        <td id=\"T_70b78d2c_03fb_11eb_b74f_52540082c6bdrow5_col14\" class=\"data row5 col14\" >0.478099</td>\n",
        "                        <td id=\"T_70b78d2c_03fb_11eb_b74f_52540082c6bdrow5_col15\" class=\"data row5 col15\" >0.251690</td>\n",
        "                        <td id=\"T_70b78d2c_03fb_11eb_b74f_52540082c6bdrow5_col16\" class=\"data row5 col16\" >0.808940</td>\n",
        "            </tr>\n",
        "            <tr>\n",
        "                        <th id=\"T_70b78d2c_03fb_11eb_b74f_52540082c6bdlevel0_row6\" class=\"row_heading level0 row6\" >Workplace_closing</th>\n",
        "                        <td id=\"T_70b78d2c_03fb_11eb_b74f_52540082c6bdrow6_col0\" class=\"data row6 col0\" >0.069033</td>\n",
        "                        <td id=\"T_70b78d2c_03fb_11eb_b74f_52540082c6bdrow6_col1\" class=\"data row6 col1\" >-0.114023</td>\n",
        "                        <td id=\"T_70b78d2c_03fb_11eb_b74f_52540082c6bdrow6_col2\" class=\"data row6 col2\" >-0.156748</td>\n",
        "                        <td id=\"T_70b78d2c_03fb_11eb_b74f_52540082c6bdrow6_col3\" class=\"data row6 col3\" >-0.095147</td>\n",
        "                        <td id=\"T_70b78d2c_03fb_11eb_b74f_52540082c6bdrow6_col4\" class=\"data row6 col4\" >0.051953</td>\n",
        "                        <td id=\"T_70b78d2c_03fb_11eb_b74f_52540082c6bdrow6_col5\" class=\"data row6 col5\" >0.724014</td>\n",
        "                        <td id=\"T_70b78d2c_03fb_11eb_b74f_52540082c6bdrow6_col6\" class=\"data row6 col6\" >1.000000</td>\n",
        "                        <td id=\"T_70b78d2c_03fb_11eb_b74f_52540082c6bdrow6_col7\" class=\"data row6 col7\" >0.731343</td>\n",
        "                        <td id=\"T_70b78d2c_03fb_11eb_b74f_52540082c6bdrow6_col8\" class=\"data row6 col8\" >0.678768</td>\n",
        "                        <td id=\"T_70b78d2c_03fb_11eb_b74f_52540082c6bdrow6_col9\" class=\"data row6 col9\" >0.637513</td>\n",
        "                        <td id=\"T_70b78d2c_03fb_11eb_b74f_52540082c6bdrow6_col10\" class=\"data row6 col10\" >0.606275</td>\n",
        "                        <td id=\"T_70b78d2c_03fb_11eb_b74f_52540082c6bdrow6_col11\" class=\"data row6 col11\" >0.566861</td>\n",
        "                        <td id=\"T_70b78d2c_03fb_11eb_b74f_52540082c6bdrow6_col12\" class=\"data row6 col12\" >0.477841</td>\n",
        "                        <td id=\"T_70b78d2c_03fb_11eb_b74f_52540082c6bdrow6_col13\" class=\"data row6 col13\" >0.783612</td>\n",
        "                        <td id=\"T_70b78d2c_03fb_11eb_b74f_52540082c6bdrow6_col14\" class=\"data row6 col14\" >0.483587</td>\n",
        "                        <td id=\"T_70b78d2c_03fb_11eb_b74f_52540082c6bdrow6_col15\" class=\"data row6 col15\" >0.328364</td>\n",
        "                        <td id=\"T_70b78d2c_03fb_11eb_b74f_52540082c6bdrow6_col16\" class=\"data row6 col16\" >0.864444</td>\n",
        "            </tr>\n",
        "            <tr>\n",
        "                        <th id=\"T_70b78d2c_03fb_11eb_b74f_52540082c6bdlevel0_row7\" class=\"row_heading level0 row7\" >Cancel_events</th>\n",
        "                        <td id=\"T_70b78d2c_03fb_11eb_b74f_52540082c6bdrow7_col0\" class=\"data row7 col0\" >-0.121006</td>\n",
        "                        <td id=\"T_70b78d2c_03fb_11eb_b74f_52540082c6bdrow7_col1\" class=\"data row7 col1\" >-0.269944</td>\n",
        "                        <td id=\"T_70b78d2c_03fb_11eb_b74f_52540082c6bdrow7_col2\" class=\"data row7 col2\" >-0.283657</td>\n",
        "                        <td id=\"T_70b78d2c_03fb_11eb_b74f_52540082c6bdrow7_col3\" class=\"data row7 col3\" >-0.324811</td>\n",
        "                        <td id=\"T_70b78d2c_03fb_11eb_b74f_52540082c6bdrow7_col4\" class=\"data row7 col4\" >0.111839</td>\n",
        "                        <td id=\"T_70b78d2c_03fb_11eb_b74f_52540082c6bdrow7_col5\" class=\"data row7 col5\" >0.764884</td>\n",
        "                        <td id=\"T_70b78d2c_03fb_11eb_b74f_52540082c6bdrow7_col6\" class=\"data row7 col6\" >0.731343</td>\n",
        "                        <td id=\"T_70b78d2c_03fb_11eb_b74f_52540082c6bdrow7_col7\" class=\"data row7 col7\" >1.000000</td>\n",
        "                        <td id=\"T_70b78d2c_03fb_11eb_b74f_52540082c6bdrow7_col8\" class=\"data row7 col8\" >0.651685</td>\n",
        "                        <td id=\"T_70b78d2c_03fb_11eb_b74f_52540082c6bdrow7_col9\" class=\"data row7 col9\" >0.517301</td>\n",
        "                        <td id=\"T_70b78d2c_03fb_11eb_b74f_52540082c6bdrow7_col10\" class=\"data row7 col10\" >0.482564</td>\n",
        "                        <td id=\"T_70b78d2c_03fb_11eb_b74f_52540082c6bdrow7_col11\" class=\"data row7 col11\" >0.500661</td>\n",
        "                        <td id=\"T_70b78d2c_03fb_11eb_b74f_52540082c6bdrow7_col12\" class=\"data row7 col12\" >0.523363</td>\n",
        "                        <td id=\"T_70b78d2c_03fb_11eb_b74f_52540082c6bdrow7_col13\" class=\"data row7 col13\" >0.854123</td>\n",
        "                        <td id=\"T_70b78d2c_03fb_11eb_b74f_52540082c6bdrow7_col14\" class=\"data row7 col14\" >0.622333</td>\n",
        "                        <td id=\"T_70b78d2c_03fb_11eb_b74f_52540082c6bdrow7_col15\" class=\"data row7 col15\" >0.552844</td>\n",
        "                        <td id=\"T_70b78d2c_03fb_11eb_b74f_52540082c6bdrow7_col16\" class=\"data row7 col16\" >0.816242</td>\n",
        "            </tr>\n",
        "            <tr>\n",
        "                        <th id=\"T_70b78d2c_03fb_11eb_b74f_52540082c6bdlevel0_row8\" class=\"row_heading level0 row8\" >Gatherings_restrictions</th>\n",
        "                        <td id=\"T_70b78d2c_03fb_11eb_b74f_52540082c6bdrow8_col0\" class=\"data row8 col0\" >0.027706</td>\n",
        "                        <td id=\"T_70b78d2c_03fb_11eb_b74f_52540082c6bdrow8_col1\" class=\"data row8 col1\" >-0.188003</td>\n",
        "                        <td id=\"T_70b78d2c_03fb_11eb_b74f_52540082c6bdrow8_col2\" class=\"data row8 col2\" >-0.186390</td>\n",
        "                        <td id=\"T_70b78d2c_03fb_11eb_b74f_52540082c6bdrow8_col3\" class=\"data row8 col3\" >-0.151795</td>\n",
        "                        <td id=\"T_70b78d2c_03fb_11eb_b74f_52540082c6bdrow8_col4\" class=\"data row8 col4\" >-0.018809</td>\n",
        "                        <td id=\"T_70b78d2c_03fb_11eb_b74f_52540082c6bdrow8_col5\" class=\"data row8 col5\" >0.612322</td>\n",
        "                        <td id=\"T_70b78d2c_03fb_11eb_b74f_52540082c6bdrow8_col6\" class=\"data row8 col6\" >0.678768</td>\n",
        "                        <td id=\"T_70b78d2c_03fb_11eb_b74f_52540082c6bdrow8_col7\" class=\"data row8 col7\" >0.651685</td>\n",
        "                        <td id=\"T_70b78d2c_03fb_11eb_b74f_52540082c6bdrow8_col8\" class=\"data row8 col8\" >1.000000</td>\n",
        "                        <td id=\"T_70b78d2c_03fb_11eb_b74f_52540082c6bdrow8_col9\" class=\"data row8 col9\" >0.787210</td>\n",
        "                        <td id=\"T_70b78d2c_03fb_11eb_b74f_52540082c6bdrow8_col10\" class=\"data row8 col10\" >0.672756</td>\n",
        "                        <td id=\"T_70b78d2c_03fb_11eb_b74f_52540082c6bdrow8_col11\" class=\"data row8 col11\" >0.740543</td>\n",
        "                        <td id=\"T_70b78d2c_03fb_11eb_b74f_52540082c6bdrow8_col12\" class=\"data row8 col12\" >0.517170</td>\n",
        "                        <td id=\"T_70b78d2c_03fb_11eb_b74f_52540082c6bdrow8_col13\" class=\"data row8 col13\" >0.678634</td>\n",
        "                        <td id=\"T_70b78d2c_03fb_11eb_b74f_52540082c6bdrow8_col14\" class=\"data row8 col14\" >0.517067</td>\n",
        "                        <td id=\"T_70b78d2c_03fb_11eb_b74f_52540082c6bdrow8_col15\" class=\"data row8 col15\" >0.248554</td>\n",
        "                        <td id=\"T_70b78d2c_03fb_11eb_b74f_52540082c6bdrow8_col16\" class=\"data row8 col16\" >0.859128</td>\n",
        "            </tr>\n",
        "            <tr>\n",
        "                        <th id=\"T_70b78d2c_03fb_11eb_b74f_52540082c6bdlevel0_row9\" class=\"row_heading level0 row9\" >Transport_closing</th>\n",
        "                        <td id=\"T_70b78d2c_03fb_11eb_b74f_52540082c6bdrow9_col0\" class=\"data row9 col0\" >-0.058614</td>\n",
        "                        <td id=\"T_70b78d2c_03fb_11eb_b74f_52540082c6bdrow9_col1\" class=\"data row9 col1\" >-0.186600</td>\n",
        "                        <td id=\"T_70b78d2c_03fb_11eb_b74f_52540082c6bdrow9_col2\" class=\"data row9 col2\" >-0.203787</td>\n",
        "                        <td id=\"T_70b78d2c_03fb_11eb_b74f_52540082c6bdrow9_col3\" class=\"data row9 col3\" >-0.208883</td>\n",
        "                        <td id=\"T_70b78d2c_03fb_11eb_b74f_52540082c6bdrow9_col4\" class=\"data row9 col4\" >0.026610</td>\n",
        "                        <td id=\"T_70b78d2c_03fb_11eb_b74f_52540082c6bdrow9_col5\" class=\"data row9 col5\" >0.577282</td>\n",
        "                        <td id=\"T_70b78d2c_03fb_11eb_b74f_52540082c6bdrow9_col6\" class=\"data row9 col6\" >0.637513</td>\n",
        "                        <td id=\"T_70b78d2c_03fb_11eb_b74f_52540082c6bdrow9_col7\" class=\"data row9 col7\" >0.517301</td>\n",
        "                        <td id=\"T_70b78d2c_03fb_11eb_b74f_52540082c6bdrow9_col8\" class=\"data row9 col8\" >0.787210</td>\n",
        "                        <td id=\"T_70b78d2c_03fb_11eb_b74f_52540082c6bdrow9_col9\" class=\"data row9 col9\" >1.000000</td>\n",
        "                        <td id=\"T_70b78d2c_03fb_11eb_b74f_52540082c6bdrow9_col10\" class=\"data row9 col10\" >0.658925</td>\n",
        "                        <td id=\"T_70b78d2c_03fb_11eb_b74f_52540082c6bdrow9_col11\" class=\"data row9 col11\" >0.721367</td>\n",
        "                        <td id=\"T_70b78d2c_03fb_11eb_b74f_52540082c6bdrow9_col12\" class=\"data row9 col12\" >0.437912</td>\n",
        "                        <td id=\"T_70b78d2c_03fb_11eb_b74f_52540082c6bdrow9_col13\" class=\"data row9 col13\" >0.497474</td>\n",
        "                        <td id=\"T_70b78d2c_03fb_11eb_b74f_52540082c6bdrow9_col14\" class=\"data row9 col14\" >0.463909</td>\n",
        "                        <td id=\"T_70b78d2c_03fb_11eb_b74f_52540082c6bdrow9_col15\" class=\"data row9 col15\" >0.050185</td>\n",
        "                        <td id=\"T_70b78d2c_03fb_11eb_b74f_52540082c6bdrow9_col16\" class=\"data row9 col16\" >0.770358</td>\n",
        "            </tr>\n",
        "            <tr>\n",
        "                        <th id=\"T_70b78d2c_03fb_11eb_b74f_52540082c6bdlevel0_row10\" class=\"row_heading level0 row10\" >Stay_home_restrictions</th>\n",
        "                        <td id=\"T_70b78d2c_03fb_11eb_b74f_52540082c6bdrow10_col0\" class=\"data row10 col0\" >-0.090467</td>\n",
        "                        <td id=\"T_70b78d2c_03fb_11eb_b74f_52540082c6bdrow10_col1\" class=\"data row10 col1\" >0.228071</td>\n",
        "                        <td id=\"T_70b78d2c_03fb_11eb_b74f_52540082c6bdrow10_col2\" class=\"data row10 col2\" >0.210469</td>\n",
        "                        <td id=\"T_70b78d2c_03fb_11eb_b74f_52540082c6bdrow10_col3\" class=\"data row10 col3\" >0.211349</td>\n",
        "                        <td id=\"T_70b78d2c_03fb_11eb_b74f_52540082c6bdrow10_col4\" class=\"data row10 col4\" >0.094175</td>\n",
        "                        <td id=\"T_70b78d2c_03fb_11eb_b74f_52540082c6bdrow10_col5\" class=\"data row10 col5\" >0.558669</td>\n",
        "                        <td id=\"T_70b78d2c_03fb_11eb_b74f_52540082c6bdrow10_col6\" class=\"data row10 col6\" >0.606275</td>\n",
        "                        <td id=\"T_70b78d2c_03fb_11eb_b74f_52540082c6bdrow10_col7\" class=\"data row10 col7\" >0.482564</td>\n",
        "                        <td id=\"T_70b78d2c_03fb_11eb_b74f_52540082c6bdrow10_col8\" class=\"data row10 col8\" >0.672756</td>\n",
        "                        <td id=\"T_70b78d2c_03fb_11eb_b74f_52540082c6bdrow10_col9\" class=\"data row10 col9\" >0.658925</td>\n",
        "                        <td id=\"T_70b78d2c_03fb_11eb_b74f_52540082c6bdrow10_col10\" class=\"data row10 col10\" >1.000000</td>\n",
        "                        <td id=\"T_70b78d2c_03fb_11eb_b74f_52540082c6bdrow10_col11\" class=\"data row10 col11\" >0.811282</td>\n",
        "                        <td id=\"T_70b78d2c_03fb_11eb_b74f_52540082c6bdrow10_col12\" class=\"data row10 col12\" >0.538682</td>\n",
        "                        <td id=\"T_70b78d2c_03fb_11eb_b74f_52540082c6bdrow10_col13\" class=\"data row10 col13\" >0.385620</td>\n",
        "                        <td id=\"T_70b78d2c_03fb_11eb_b74f_52540082c6bdrow10_col14\" class=\"data row10 col14\" >0.271062</td>\n",
        "                        <td id=\"T_70b78d2c_03fb_11eb_b74f_52540082c6bdrow10_col15\" class=\"data row10 col15\" >0.286787</td>\n",
        "                        <td id=\"T_70b78d2c_03fb_11eb_b74f_52540082c6bdrow10_col16\" class=\"data row10 col16\" >0.784873</td>\n",
        "            </tr>\n",
        "            <tr>\n",
        "                        <th id=\"T_70b78d2c_03fb_11eb_b74f_52540082c6bdlevel0_row11\" class=\"row_heading level0 row11\" >Internal_movement_restrictions</th>\n",
        "                        <td id=\"T_70b78d2c_03fb_11eb_b74f_52540082c6bdrow11_col0\" class=\"data row11 col0\" >-0.069377</td>\n",
        "                        <td id=\"T_70b78d2c_03fb_11eb_b74f_52540082c6bdrow11_col1\" class=\"data row11 col1\" >0.045493</td>\n",
        "                        <td id=\"T_70b78d2c_03fb_11eb_b74f_52540082c6bdrow11_col2\" class=\"data row11 col2\" >0.027121</td>\n",
        "                        <td id=\"T_70b78d2c_03fb_11eb_b74f_52540082c6bdrow11_col3\" class=\"data row11 col3\" >0.023896</td>\n",
        "                        <td id=\"T_70b78d2c_03fb_11eb_b74f_52540082c6bdrow11_col4\" class=\"data row11 col4\" >0.003810</td>\n",
        "                        <td id=\"T_70b78d2c_03fb_11eb_b74f_52540082c6bdrow11_col5\" class=\"data row11 col5\" >0.525034</td>\n",
        "                        <td id=\"T_70b78d2c_03fb_11eb_b74f_52540082c6bdrow11_col6\" class=\"data row11 col6\" >0.566861</td>\n",
        "                        <td id=\"T_70b78d2c_03fb_11eb_b74f_52540082c6bdrow11_col7\" class=\"data row11 col7\" >0.500661</td>\n",
        "                        <td id=\"T_70b78d2c_03fb_11eb_b74f_52540082c6bdrow11_col8\" class=\"data row11 col8\" >0.740543</td>\n",
        "                        <td id=\"T_70b78d2c_03fb_11eb_b74f_52540082c6bdrow11_col9\" class=\"data row11 col9\" >0.721367</td>\n",
        "                        <td id=\"T_70b78d2c_03fb_11eb_b74f_52540082c6bdrow11_col10\" class=\"data row11 col10\" >0.811282</td>\n",
        "                        <td id=\"T_70b78d2c_03fb_11eb_b74f_52540082c6bdrow11_col11\" class=\"data row11 col11\" >1.000000</td>\n",
        "                        <td id=\"T_70b78d2c_03fb_11eb_b74f_52540082c6bdrow11_col12\" class=\"data row11 col12\" >0.491919</td>\n",
        "                        <td id=\"T_70b78d2c_03fb_11eb_b74f_52540082c6bdrow11_col13\" class=\"data row11 col13\" >0.448009</td>\n",
        "                        <td id=\"T_70b78d2c_03fb_11eb_b74f_52540082c6bdrow11_col14\" class=\"data row11 col14\" >0.332997</td>\n",
        "                        <td id=\"T_70b78d2c_03fb_11eb_b74f_52540082c6bdrow11_col15\" class=\"data row11 col15\" >0.198130</td>\n",
        "                        <td id=\"T_70b78d2c_03fb_11eb_b74f_52540082c6bdrow11_col16\" class=\"data row11 col16\" >0.768751</td>\n",
        "            </tr>\n",
        "            <tr>\n",
        "                        <th id=\"T_70b78d2c_03fb_11eb_b74f_52540082c6bdlevel0_row12\" class=\"row_heading level0 row12\" >International_movement_restrictions</th>\n",
        "                        <td id=\"T_70b78d2c_03fb_11eb_b74f_52540082c6bdrow12_col0\" class=\"data row12 col0\" >-0.147316</td>\n",
        "                        <td id=\"T_70b78d2c_03fb_11eb_b74f_52540082c6bdrow12_col1\" class=\"data row12 col1\" >0.200566</td>\n",
        "                        <td id=\"T_70b78d2c_03fb_11eb_b74f_52540082c6bdrow12_col2\" class=\"data row12 col2\" >0.222331</td>\n",
        "                        <td id=\"T_70b78d2c_03fb_11eb_b74f_52540082c6bdrow12_col3\" class=\"data row12 col3\" >0.042173</td>\n",
        "                        <td id=\"T_70b78d2c_03fb_11eb_b74f_52540082c6bdrow12_col4\" class=\"data row12 col4\" >-0.056521</td>\n",
        "                        <td id=\"T_70b78d2c_03fb_11eb_b74f_52540082c6bdrow12_col5\" class=\"data row12 col5\" >0.429308</td>\n",
        "                        <td id=\"T_70b78d2c_03fb_11eb_b74f_52540082c6bdrow12_col6\" class=\"data row12 col6\" >0.477841</td>\n",
        "                        <td id=\"T_70b78d2c_03fb_11eb_b74f_52540082c6bdrow12_col7\" class=\"data row12 col7\" >0.523363</td>\n",
        "                        <td id=\"T_70b78d2c_03fb_11eb_b74f_52540082c6bdrow12_col8\" class=\"data row12 col8\" >0.517170</td>\n",
        "                        <td id=\"T_70b78d2c_03fb_11eb_b74f_52540082c6bdrow12_col9\" class=\"data row12 col9\" >0.437912</td>\n",
        "                        <td id=\"T_70b78d2c_03fb_11eb_b74f_52540082c6bdrow12_col10\" class=\"data row12 col10\" >0.538682</td>\n",
        "                        <td id=\"T_70b78d2c_03fb_11eb_b74f_52540082c6bdrow12_col11\" class=\"data row12 col11\" >0.491919</td>\n",
        "                        <td id=\"T_70b78d2c_03fb_11eb_b74f_52540082c6bdrow12_col12\" class=\"data row12 col12\" >1.000000</td>\n",
        "                        <td id=\"T_70b78d2c_03fb_11eb_b74f_52540082c6bdrow12_col13\" class=\"data row12 col13\" >0.491362</td>\n",
        "                        <td id=\"T_70b78d2c_03fb_11eb_b74f_52540082c6bdrow12_col14\" class=\"data row12 col14\" >0.561638</td>\n",
        "                        <td id=\"T_70b78d2c_03fb_11eb_b74f_52540082c6bdrow12_col15\" class=\"data row12 col15\" >0.510776</td>\n",
        "                        <td id=\"T_70b78d2c_03fb_11eb_b74f_52540082c6bdrow12_col16\" class=\"data row12 col16\" >0.628655</td>\n",
        "            </tr>\n",
        "            <tr>\n",
        "                        <th id=\"T_70b78d2c_03fb_11eb_b74f_52540082c6bdlevel0_row13\" class=\"row_heading level0 row13\" >Information_campaigns</th>\n",
        "                        <td id=\"T_70b78d2c_03fb_11eb_b74f_52540082c6bdrow13_col0\" class=\"data row13 col0\" >-0.014682</td>\n",
        "                        <td id=\"T_70b78d2c_03fb_11eb_b74f_52540082c6bdrow13_col1\" class=\"data row13 col1\" >-0.353713</td>\n",
        "                        <td id=\"T_70b78d2c_03fb_11eb_b74f_52540082c6bdrow13_col2\" class=\"data row13 col2\" >-0.362474</td>\n",
        "                        <td id=\"T_70b78d2c_03fb_11eb_b74f_52540082c6bdrow13_col3\" class=\"data row13 col3\" >-0.390503</td>\n",
        "                        <td id=\"T_70b78d2c_03fb_11eb_b74f_52540082c6bdrow13_col4\" class=\"data row13 col4\" >0.086938</td>\n",
        "                        <td id=\"T_70b78d2c_03fb_11eb_b74f_52540082c6bdrow13_col5\" class=\"data row13 col5\" >0.684723</td>\n",
        "                        <td id=\"T_70b78d2c_03fb_11eb_b74f_52540082c6bdrow13_col6\" class=\"data row13 col6\" >0.783612</td>\n",
        "                        <td id=\"T_70b78d2c_03fb_11eb_b74f_52540082c6bdrow13_col7\" class=\"data row13 col7\" >0.854123</td>\n",
        "                        <td id=\"T_70b78d2c_03fb_11eb_b74f_52540082c6bdrow13_col8\" class=\"data row13 col8\" >0.678634</td>\n",
        "                        <td id=\"T_70b78d2c_03fb_11eb_b74f_52540082c6bdrow13_col9\" class=\"data row13 col9\" >0.497474</td>\n",
        "                        <td id=\"T_70b78d2c_03fb_11eb_b74f_52540082c6bdrow13_col10\" class=\"data row13 col10\" >0.385620</td>\n",
        "                        <td id=\"T_70b78d2c_03fb_11eb_b74f_52540082c6bdrow13_col11\" class=\"data row13 col11\" >0.448009</td>\n",
        "                        <td id=\"T_70b78d2c_03fb_11eb_b74f_52540082c6bdrow13_col12\" class=\"data row13 col12\" >0.491362</td>\n",
        "                        <td id=\"T_70b78d2c_03fb_11eb_b74f_52540082c6bdrow13_col13\" class=\"data row13 col13\" >1.000000</td>\n",
        "                        <td id=\"T_70b78d2c_03fb_11eb_b74f_52540082c6bdrow13_col14\" class=\"data row13 col14\" >0.664929</td>\n",
        "                        <td id=\"T_70b78d2c_03fb_11eb_b74f_52540082c6bdrow13_col15\" class=\"data row13 col15\" >0.560506</td>\n",
        "                        <td id=\"T_70b78d2c_03fb_11eb_b74f_52540082c6bdrow13_col16\" class=\"data row13 col16\" >0.796435</td>\n",
        "            </tr>\n",
        "            <tr>\n",
        "                        <th id=\"T_70b78d2c_03fb_11eb_b74f_52540082c6bdlevel0_row14\" class=\"row_heading level0 row14\" >Testing_policy</th>\n",
        "                        <td id=\"T_70b78d2c_03fb_11eb_b74f_52540082c6bdrow14_col0\" class=\"data row14 col0\" >-0.075060</td>\n",
        "                        <td id=\"T_70b78d2c_03fb_11eb_b74f_52540082c6bdrow14_col1\" class=\"data row14 col1\" >-0.370775</td>\n",
        "                        <td id=\"T_70b78d2c_03fb_11eb_b74f_52540082c6bdrow14_col2\" class=\"data row14 col2\" >-0.314360</td>\n",
        "                        <td id=\"T_70b78d2c_03fb_11eb_b74f_52540082c6bdrow14_col3\" class=\"data row14 col3\" >-0.458260</td>\n",
        "                        <td id=\"T_70b78d2c_03fb_11eb_b74f_52540082c6bdrow14_col4\" class=\"data row14 col4\" >-0.124528</td>\n",
        "                        <td id=\"T_70b78d2c_03fb_11eb_b74f_52540082c6bdrow14_col5\" class=\"data row14 col5\" >0.478099</td>\n",
        "                        <td id=\"T_70b78d2c_03fb_11eb_b74f_52540082c6bdrow14_col6\" class=\"data row14 col6\" >0.483587</td>\n",
        "                        <td id=\"T_70b78d2c_03fb_11eb_b74f_52540082c6bdrow14_col7\" class=\"data row14 col7\" >0.622333</td>\n",
        "                        <td id=\"T_70b78d2c_03fb_11eb_b74f_52540082c6bdrow14_col8\" class=\"data row14 col8\" >0.517067</td>\n",
        "                        <td id=\"T_70b78d2c_03fb_11eb_b74f_52540082c6bdrow14_col9\" class=\"data row14 col9\" >0.463909</td>\n",
        "                        <td id=\"T_70b78d2c_03fb_11eb_b74f_52540082c6bdrow14_col10\" class=\"data row14 col10\" >0.271062</td>\n",
        "                        <td id=\"T_70b78d2c_03fb_11eb_b74f_52540082c6bdrow14_col11\" class=\"data row14 col11\" >0.332997</td>\n",
        "                        <td id=\"T_70b78d2c_03fb_11eb_b74f_52540082c6bdrow14_col12\" class=\"data row14 col12\" >0.561638</td>\n",
        "                        <td id=\"T_70b78d2c_03fb_11eb_b74f_52540082c6bdrow14_col13\" class=\"data row14 col13\" >0.664929</td>\n",
        "                        <td id=\"T_70b78d2c_03fb_11eb_b74f_52540082c6bdrow14_col14\" class=\"data row14 col14\" >1.000000</td>\n",
        "                        <td id=\"T_70b78d2c_03fb_11eb_b74f_52540082c6bdrow14_col15\" class=\"data row14 col15\" >0.402778</td>\n",
        "                        <td id=\"T_70b78d2c_03fb_11eb_b74f_52540082c6bdrow14_col16\" class=\"data row14 col16\" >0.489044</td>\n",
        "            </tr>\n",
        "            <tr>\n",
        "                        <th id=\"T_70b78d2c_03fb_11eb_b74f_52540082c6bdlevel0_row15\" class=\"row_heading level0 row15\" >Contact_tracing</th>\n",
        "                        <td id=\"T_70b78d2c_03fb_11eb_b74f_52540082c6bdrow15_col0\" class=\"data row15 col0\" >-0.176672</td>\n",
        "                        <td id=\"T_70b78d2c_03fb_11eb_b74f_52540082c6bdrow15_col1\" class=\"data row15 col1\" >-0.004960</td>\n",
        "                        <td id=\"T_70b78d2c_03fb_11eb_b74f_52540082c6bdrow15_col2\" class=\"data row15 col2\" >0.002379</td>\n",
        "                        <td id=\"T_70b78d2c_03fb_11eb_b74f_52540082c6bdrow15_col3\" class=\"data row15 col3\" >-0.130574</td>\n",
        "                        <td id=\"T_70b78d2c_03fb_11eb_b74f_52540082c6bdrow15_col4\" class=\"data row15 col4\" >0.169879</td>\n",
        "                        <td id=\"T_70b78d2c_03fb_11eb_b74f_52540082c6bdrow15_col5\" class=\"data row15 col5\" >0.251690</td>\n",
        "                        <td id=\"T_70b78d2c_03fb_11eb_b74f_52540082c6bdrow15_col6\" class=\"data row15 col6\" >0.328364</td>\n",
        "                        <td id=\"T_70b78d2c_03fb_11eb_b74f_52540082c6bdrow15_col7\" class=\"data row15 col7\" >0.552844</td>\n",
        "                        <td id=\"T_70b78d2c_03fb_11eb_b74f_52540082c6bdrow15_col8\" class=\"data row15 col8\" >0.248554</td>\n",
        "                        <td id=\"T_70b78d2c_03fb_11eb_b74f_52540082c6bdrow15_col9\" class=\"data row15 col9\" >0.050185</td>\n",
        "                        <td id=\"T_70b78d2c_03fb_11eb_b74f_52540082c6bdrow15_col10\" class=\"data row15 col10\" >0.286787</td>\n",
        "                        <td id=\"T_70b78d2c_03fb_11eb_b74f_52540082c6bdrow15_col11\" class=\"data row15 col11\" >0.198130</td>\n",
        "                        <td id=\"T_70b78d2c_03fb_11eb_b74f_52540082c6bdrow15_col12\" class=\"data row15 col12\" >0.510776</td>\n",
        "                        <td id=\"T_70b78d2c_03fb_11eb_b74f_52540082c6bdrow15_col13\" class=\"data row15 col13\" >0.560506</td>\n",
        "                        <td id=\"T_70b78d2c_03fb_11eb_b74f_52540082c6bdrow15_col14\" class=\"data row15 col14\" >0.402778</td>\n",
        "                        <td id=\"T_70b78d2c_03fb_11eb_b74f_52540082c6bdrow15_col15\" class=\"data row15 col15\" >1.000000</td>\n",
        "                        <td id=\"T_70b78d2c_03fb_11eb_b74f_52540082c6bdrow15_col16\" class=\"data row15 col16\" >0.424790</td>\n",
        "            </tr>\n",
        "            <tr>\n",
        "                        <th id=\"T_70b78d2c_03fb_11eb_b74f_52540082c6bdlevel0_row16\" class=\"row_heading level0 row16\" >Stringency_index</th>\n",
        "                        <td id=\"T_70b78d2c_03fb_11eb_b74f_52540082c6bdrow16_col0\" class=\"data row16 col0\" >-0.031346</td>\n",
        "                        <td id=\"T_70b78d2c_03fb_11eb_b74f_52540082c6bdrow16_col1\" class=\"data row16 col1\" >-0.077019</td>\n",
        "                        <td id=\"T_70b78d2c_03fb_11eb_b74f_52540082c6bdrow16_col2\" class=\"data row16 col2\" >-0.112741</td>\n",
        "                        <td id=\"T_70b78d2c_03fb_11eb_b74f_52540082c6bdrow16_col3\" class=\"data row16 col3\" >-0.092111</td>\n",
        "                        <td id=\"T_70b78d2c_03fb_11eb_b74f_52540082c6bdrow16_col4\" class=\"data row16 col4\" >0.144661</td>\n",
        "                        <td id=\"T_70b78d2c_03fb_11eb_b74f_52540082c6bdrow16_col5\" class=\"data row16 col5\" >0.808940</td>\n",
        "                        <td id=\"T_70b78d2c_03fb_11eb_b74f_52540082c6bdrow16_col6\" class=\"data row16 col6\" >0.864444</td>\n",
        "                        <td id=\"T_70b78d2c_03fb_11eb_b74f_52540082c6bdrow16_col7\" class=\"data row16 col7\" >0.816242</td>\n",
        "                        <td id=\"T_70b78d2c_03fb_11eb_b74f_52540082c6bdrow16_col8\" class=\"data row16 col8\" >0.859128</td>\n",
        "                        <td id=\"T_70b78d2c_03fb_11eb_b74f_52540082c6bdrow16_col9\" class=\"data row16 col9\" >0.770358</td>\n",
        "                        <td id=\"T_70b78d2c_03fb_11eb_b74f_52540082c6bdrow16_col10\" class=\"data row16 col10\" >0.784873</td>\n",
        "                        <td id=\"T_70b78d2c_03fb_11eb_b74f_52540082c6bdrow16_col11\" class=\"data row16 col11\" >0.768751</td>\n",
        "                        <td id=\"T_70b78d2c_03fb_11eb_b74f_52540082c6bdrow16_col12\" class=\"data row16 col12\" >0.628655</td>\n",
        "                        <td id=\"T_70b78d2c_03fb_11eb_b74f_52540082c6bdrow16_col13\" class=\"data row16 col13\" >0.796435</td>\n",
        "                        <td id=\"T_70b78d2c_03fb_11eb_b74f_52540082c6bdrow16_col14\" class=\"data row16 col14\" >0.489044</td>\n",
        "                        <td id=\"T_70b78d2c_03fb_11eb_b74f_52540082c6bdrow16_col15\" class=\"data row16 col15\" >0.424790</td>\n",
        "                        <td id=\"T_70b78d2c_03fb_11eb_b74f_52540082c6bdrow16_col16\" class=\"data row16 col16\" >1.000000</td>\n",
        "            </tr>\n",
        "    </tbody></table>"
       ],
       "output_type": "pyout",
       "prompt_number": 21,
       "text": [
        "<pandas.io.formats.style.Styler at 0x7f74275b2b80>"
       ]
      }
     ],
     "prompt_number": 21
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "# Scatter plot of Stringency index and Rt\n",
      "df = track_df.copy()\n",
      "sns.scatterplot(data=df, x=\"Stringency_index\", y=\"Rt\", hue=\"Country\", legend=\"brief\", marker=\"+\")\n",
      "bbox_to_anchor=(1.02, 0)\n",
      "bbox_loc=\"lower left\"\n",
      "plt.legend(bbox_to_anchor=bbox_to_anchor, loc=bbox_loc, borderaxespad=0)\n",
      "plt.title(\"Relationship of Stringency index and reproduction number\")\n",
      "plt.ylabel(\"Reproduction number\")\n",
      "plt.xlabel(\"Stringency index\")\n",
      "plt.show()"
     ],
     "language": "python",
     "metadata": {},
     "outputs": [
      {
       "output_type": "display_data",
       "png": "\n",
       "text": [
        "<Figure size 432x288 with 1 Axes>"
       ]
      }
     ],
     "prompt_number": 22
    }
   ],
   "metadata": {}
  }
 ]
}
