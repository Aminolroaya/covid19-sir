{
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3.8.2 64-bit ('.venv': venv)",
   "name": "python_defaultSpec_1597669925034"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.8.2-final"
  },
  "name": ""
 },
 "nbformat": 3,
 "nbformat_minor": 0,
 "worksheets": [
  {
   "cells": [
    {
     "cell_type": "markdown",
     "metadata": {},
     "source": [
      "# Usage (details: policy measures)\n",
      "Here, we will analyse the relationship of policy measures and parameter values of SIR-derived ODE models. Policy measures are tracked by [Oxford Covid-19 Government Response Tracker (OxCGRT)](https://github.com/OxCGRT/covid-policy-tracker)."
     ]
    },
    {
     "cell_type": "heading",
     "level": 2,
     "metadata": {},
     "source": [
      "Preparation"
     ]
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "# Standard users\n",
      "# !pip install covsirphy\n",
      "# Developers (Note: this notebook is in example directory)\n",
      "import os\n",
      "os.chdir(\"../\")"
     ],
     "language": "python",
     "metadata": {},
     "outputs": [],
     "prompt_number": 1
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "from pprint import pprint"
     ],
     "language": "python",
     "metadata": {},
     "outputs": [],
     "prompt_number": 2
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "import covsirphy as cs\n",
      "cs.__version__"
     ],
     "language": "python",
     "metadata": {},
     "outputs": [
      {
       "output_type": "pyout",
       "prompt_number": 3,
       "text": [
        "'2.9.1'"
       ]
      }
     ],
     "prompt_number": 3
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "# Standard users and developers\n",
      "data_loader = cs.DataLoader(\"input\")\n",
      "# The number of cases (JHU style)\n",
      "jhu_data = data_loader.jhu(verbose=False)\n",
      "# Population in each country\n",
      "population_data = data_loader.population(verbose=False)\n",
      "# Government Response Tracker (OxCGRT)\n",
      "oxcgrt_data = data_loader.oxcgrt(verbose=False)\n",
      "# Description/citation\n",
      "print(oxcgrt_data.citation)"
     ],
     "language": "python",
     "metadata": {
      "tags": []
     },
     "outputs": [
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "(Secondary source) Guidotti, E., Ardia, D., (2020), \"COVID-19 Data Hub\", Journal of Open Source Software 5(51):2376, doi: 10.21105/joss.02376.\n",
        "We can get Citation list of primary sources with DataLoader(...).covid19dh_citation\n"
       ]
      }
     ],
     "prompt_number": 4
    },
    {
     "cell_type": "markdown",
     "metadata": {},
     "source": [
      "## Class for policy measure analysis\n",
      "We will `PolicyMeasures` class to find relationship of policy measures and parameter values of SIR-derived ODE models."
     ]
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "# Create analyser with tau value 360 [min] (can be changed)\n",
      "analyser = cs.PolicyMeasures(jhu_data, population_data, oxcgrt_data, tau=360)\n",
      "# The number of registerd countries\n",
      "len(analyser.countries)"
     ],
     "language": "python",
     "metadata": {
      "tags": []
     },
     "outputs": [
      {
       "output_type": "pyout",
       "prompt_number": 5,
       "text": [
        "185"
       ]
      }
     ],
     "prompt_number": 5
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "# We can get Scenario instance for detailed scenario analysis\n",
      "type(analyser.scenario(\"Japan\"))"
     ],
     "language": "python",
     "metadata": {},
     "outputs": [
      {
       "output_type": "pyout",
       "prompt_number": 6,
       "text": [
        "covsirphy.analysis.scenario.Scenario"
       ]
      }
     ],
     "prompt_number": 6
    },
    {
     "cell_type": "markdown",
     "metadata": {},
     "source": [
      "## Set phases with S-R trend analysis\n",
      "We will perform S-R trend analysis to set phases in all countries. Countries which do not have **12th phases** will be un-registered for the next analysis. This number will be adjusted for your analysis."
     ]
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "# Show the number of phases of all countries\n",
      "analyser.trend()\n",
      "pprint(analyser.phase_len(), compact=True)"
     ],
     "language": "python",
     "metadata": {},
     "outputs": [
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "{4: ['Tanzania', 'Holy See'],\n",
        " 5: ['Georgia', 'Myanmar', 'Fiji', 'Brunei', 'Grenada', 'Hungary', 'Slovenia'],\n",
        " 6: ['Libya', 'Mauritius', 'Kazakhstan', 'Yemen', 'Cambodia', 'Jamaica',\n",
        "     'Ireland', 'Tunisia', 'Czech Republic', 'Slovakia', 'Andorra', 'Belize',\n",
        "     'Papua New Guinea', 'Cyprus', 'Spain', 'Dominica', 'Jordan',\n",
        "     'Seychelles'],\n",
        " 7: ['Uganda', 'Iceland', 'Australia', 'Equatorial Guinea',\n",
        "     'Trinidad and Tobago', 'Sao Tome and Principe', 'Paraguay', 'Botswana',\n",
        "     'Lebanon', 'Colombia', 'Bahamas', 'Poland', 'Montenegro',\n",
        "     'Central African Republic', 'Liechtenstein', 'Zimbabwe', 'South Sudan',\n",
        "     'Angola', 'Mongolia', 'Lithuania', 'Gambia'],\n",
        " 8: ['Malta', 'Rwanda', 'Netherlands', 'Zambia', 'Monaco',\n",
        "     'Saint Vincent and the Grenadines', 'Ukraine', 'Kyrgyzstan', 'Austria',\n",
        "     'Guyana', 'Israel', 'Guinea-Bissau', 'Antigua and Barbuda', 'New Zealand',\n",
        "     'Nicaragua', 'Niger', 'Morocco', 'Mozambique', 'Vietnam', 'Madagascar',\n",
        "     'Namibia', 'Malaysia', 'Lesotho', 'Romania', 'Benin', 'Luxembourg',\n",
        "     'Cameroon', 'Malawi', 'Saint Lucia', 'Comoros', 'Ghana', 'Djibouti',\n",
        "     'San Marino', 'Thailand'],\n",
        " 9: ['Mauritania', 'Burkina Faso', 'Tajikistan', 'Sri Lanka', 'Greece', 'Nepal',\n",
        "     'Kenya', 'Sudan', 'Taiwan', 'Uruguay', 'Eritrea', 'Argentina', 'Serbia',\n",
        "     'Estonia', 'Afghanistan', 'Bermuda', 'Gabon', 'Denmark', 'Suriname',\n",
        "     'Maldives', 'Croatia', 'China', 'Haiti', 'Barbados', 'South Africa',\n",
        "     'Chad', 'Burundi'],\n",
        " 10: ['Ethiopia', 'Bhutan', 'Japan', 'Portugal', 'Venezuela', 'Kosovo',\n",
        "      'Ecuador', 'Indonesia', 'Qatar', 'Sierra Leone', 'Swaziland', 'Singapore',\n",
        "      'Palestine', 'Oman', 'Cape Verde', 'Korea, South', 'Senegal', 'Liberia',\n",
        "      'Philippines', 'Guatemala', 'Saudi Arabia', 'El Salvador', 'Switzerland',\n",
        "      'Norway', 'Syria'],\n",
        " 11: ['Canada', 'United Arab Emirates', 'Belgium', 'Costa Rica', 'Mexico',\n",
        "      'Congo', 'Germany', 'Albania', 'Somalia', 'Finland', 'Panama', 'Togo',\n",
        "      'Azerbaijan', 'Armenia', 'Cuba', 'Honduras', 'Mali',\n",
        "      'Bosnia and Herzegovina', 'Macedonia', 'Guinea', 'Moldova', 'Chile',\n",
        "      'Bulgaria', 'Uzbekistan', 'India', 'Pakistan'],\n",
        " 12: ['Brazil', 'Dominican Republic', 'Latvia', 'Nigeria', 'Bolivia', 'Belarus',\n",
        "      'United States', 'Algeria', 'Turkey', 'Bangladesh', 'Kuwait', 'Egypt',\n",
        "      'Iran', 'Peru', 'Bahrain', 'France', 'Iraq', 'Italy'],\n",
        " 14: ['Russia']}\n"
       ]
      }
     ],
     "prompt_number": 7
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "# Set phases with S-R trend analysis\n",
      "analyser.trend(min_len=12)\n",
      "# The number of countries\n",
      "len(analyser.countries)"
     ],
     "language": "python",
     "metadata": {},
     "outputs": [
      {
       "output_type": "pyout",
       "prompt_number": 8,
       "text": [
        "19"
       ]
      }
     ],
     "prompt_number": 8
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "phase_len_dict = analyser.phase_len()\n",
      "pprint(phase_len_dict, compact=True)"
     ],
     "language": "python",
     "metadata": {
      "tags": []
     },
     "outputs": [
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "{12: ['Brazil', 'Dominican Republic', 'Latvia', 'Nigeria', 'Bolivia', 'Belarus',\n",
        "      'United States', 'Algeria', 'Turkey', 'Bangladesh', 'Kuwait', 'Egypt',\n",
        "      'Iran', 'Peru', 'Bahrain', 'France', 'Iraq', 'Italy'],\n",
        " 14: ['Russia']}\n"
       ]
      }
     ],
     "prompt_number": 9
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "# Here, only show the countries which have the most phases\n",
      "countries_show = max(phase_len_dict.items(), key=lambda x: x[0])[1]\n",
      "# Show summary\n",
      "analyser.summary(countries=countries_show)"
     ],
     "language": "python",
     "metadata": {
      "tags": []
     },
     "outputs": [
      {
       "html": [
        "<div>\n",
        "<style scoped>\n",
        "    .dataframe tbody tr th:only-of-type {\n",
        "        vertical-align: middle;\n",
        "    }\n",
        "\n",
        "    .dataframe tbody tr th {\n",
        "        vertical-align: top;\n",
        "    }\n",
        "\n",
        "    .dataframe thead th {\n",
        "        text-align: right;\n",
        "    }\n",
        "</style>\n",
        "<table border=\"1\" class=\"dataframe\">\n",
        "  <thead>\n",
        "    <tr style=\"text-align: right;\">\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th>Type</th>\n",
        "      <th>Start</th>\n",
        "      <th>End</th>\n",
        "      <th>Population</th>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>Country</th>\n",
        "      <th>Phase</th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "    </tr>\n",
        "  </thead>\n",
        "  <tbody>\n",
        "    <tr>\n",
        "      <th rowspan=\"14\" valign=\"top\">Russia</th>\n",
        "      <th>0th</th>\n",
        "      <td>Past</td>\n",
        "      <td>12Feb2020</td>\n",
        "      <td>07May2020</td>\n",
        "      <td>330457362</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>1st</th>\n",
        "      <td>Past</td>\n",
        "      <td>08May2020</td>\n",
        "      <td>18May2020</td>\n",
        "      <td>330457362</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>2nd</th>\n",
        "      <td>Past</td>\n",
        "      <td>19May2020</td>\n",
        "      <td>30May2020</td>\n",
        "      <td>330457362</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>3rd</th>\n",
        "      <td>Past</td>\n",
        "      <td>31May2020</td>\n",
        "      <td>12Jun2020</td>\n",
        "      <td>330457362</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>4th</th>\n",
        "      <td>Past</td>\n",
        "      <td>13Jun2020</td>\n",
        "      <td>25Jun2020</td>\n",
        "      <td>330457362</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>5th</th>\n",
        "      <td>Past</td>\n",
        "      <td>26Jun2020</td>\n",
        "      <td>10Jul2020</td>\n",
        "      <td>330457362</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>6th</th>\n",
        "      <td>Past</td>\n",
        "      <td>11Jul2020</td>\n",
        "      <td>24Jul2020</td>\n",
        "      <td>330457362</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>7th</th>\n",
        "      <td>Past</td>\n",
        "      <td>25Jul2020</td>\n",
        "      <td>10Aug2020</td>\n",
        "      <td>330457362</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>8th</th>\n",
        "      <td>Past</td>\n",
        "      <td>11Aug2020</td>\n",
        "      <td>28Aug2020</td>\n",
        "      <td>330457362</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>9th</th>\n",
        "      <td>Past</td>\n",
        "      <td>29Aug2020</td>\n",
        "      <td>16Sep2020</td>\n",
        "      <td>330457362</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>10th</th>\n",
        "      <td>Past</td>\n",
        "      <td>17Sep2020</td>\n",
        "      <td>30Sep2020</td>\n",
        "      <td>330457362</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>11th</th>\n",
        "      <td>Past</td>\n",
        "      <td>01Oct2020</td>\n",
        "      <td>09Oct2020</td>\n",
        "      <td>330457362</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>12th</th>\n",
        "      <td>Past</td>\n",
        "      <td>10Oct2020</td>\n",
        "      <td>17Oct2020</td>\n",
        "      <td>330457362</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>13th</th>\n",
        "      <td>Past</td>\n",
        "      <td>18Oct2020</td>\n",
        "      <td>26Oct2020</td>\n",
        "      <td>330457362</td>\n",
        "    </tr>\n",
        "  </tbody>\n",
        "</table>\n",
        "</div>"
       ],
       "output_type": "pyout",
       "prompt_number": 10,
       "text": [
        "               Type      Start        End  Population\n",
        "Country Phase                                        \n",
        "Russia  0th    Past  12Feb2020  07May2020   330457362\n",
        "        1st    Past  08May2020  18May2020   330457362\n",
        "        2nd    Past  19May2020  30May2020   330457362\n",
        "        3rd    Past  31May2020  12Jun2020   330457362\n",
        "        4th    Past  13Jun2020  25Jun2020   330457362\n",
        "        5th    Past  26Jun2020  10Jul2020   330457362\n",
        "        6th    Past  11Jul2020  24Jul2020   330457362\n",
        "        7th    Past  25Jul2020  10Aug2020   330457362\n",
        "        8th    Past  11Aug2020  28Aug2020   330457362\n",
        "        9th    Past  29Aug2020  16Sep2020   330457362\n",
        "        10th   Past  17Sep2020  30Sep2020   330457362\n",
        "        11th   Past  01Oct2020  09Oct2020   330457362\n",
        "        12th   Past  10Oct2020  17Oct2020   330457362\n",
        "        13th   Past  18Oct2020  26Oct2020   330457362"
       ]
      }
     ],
     "prompt_number": 10
    },
    {
     "cell_type": "markdown",
     "metadata": {},
     "source": [
      "## Parameter estimation\n",
      "we will estimate the parameter values with SIR-derived ODE models in each country."
     ]
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "# Parameter estimation with SIR-F model\n",
      "analyser.estimate(cs.SIRF)"
     ],
     "language": "python",
     "metadata": {
      "tags": []
     },
     "outputs": [
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n",
        "<SIR-F model: parameter estimation>\n",
        "Running optimization with 4 CPUs...\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tIRQ,  7th phase (05Sep2020 - 13Sep2020): finished  133 trials in 0 min  5 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tEGY,  8th phase (11Aug2020 - 27Aug2020): finished  263 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tBGD,  6th phase (30Jul2020 - 11Aug2020): finished  386 trials in 0 min 15 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tLVA,  7th phase (10Jul2020 - 07Aug2020): finished 1378 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tKWT,  2nd phase (28May2020 - 08Jun2020): finished 1223 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tBHR, 10th phase (25Sep2020 - 06Oct2020): finished  229 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tIRQ,  1st phase (24Jun2020 - 09Jul2020): finished 1177 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tEGY, 11th phase (29Sep2020 - 26Oct2020): finished 1168 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tIRN,  7th phase (13Aug2020 - 03Sep2020): finished  347 trials in 0 min 15 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tDOM,  2nd phase (10Jun2020 - 01Jul2020): finished 1121 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tPER,  7th phase (18Aug2020 - 28Aug2020): finished 1152 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tBHR, 11th phase (07Oct2020 - 26Oct2020): finished 1115 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tBRA,  1st phase (28May2020 - 15Jun2020): finished 1087 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tRUS, 12th phase (10Oct2020 - 17Oct2020): finished  999 trials in 0 min 55 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tBRA,  4th phase (09Jul2020 - 21Jul2020): finished 1052 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tIRN,  4th phase (17Jun2020 - 04Jul2020): finished 1064 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tITA, 10th phase (07Oct2020 - 17Oct2020): finished 1063 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tDOM,  7th phase (12Aug2020 - 20Aug2020): finished  406 trials in 0 min 15 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tBHR,  1st phase (07May2020 - 31May2020): finished 1127 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tNGA,  7th phase (28Jul2020 - 07Aug2020): finished 1186 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tBLR, 11th phase (17Oct2020 - 26Oct2020): finished 1181 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tIRQ, 10th phase (02Oct2020 - 13Oct2020): finished  247 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tNGA, 10th phase (03Sep2020 - 29Sep2020): finished 1230 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tNGA,  3rd phase (19Jun2020 - 28Jun2020): finished 1229 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tBOL,  8th phase (26Aug2020 - 03Sep2020): finished  284 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tBHR,  0th phase (06Mar2020 - 06May2020): finished 1215 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tRUS,  1st phase (08May2020 - 18May2020): finished 1260 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tBHR,  6th phase (23Jul2020 - 11Aug2020): finished  273 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tKWT,  8th phase (24Aug2020 - 07Sep2020): finished 1220 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tNGA,  5th phase (08Jul2020 - 17Jul2020): finished 1062 trials in 0 min 50 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tBLR,  1st phase (29Apr2020 - 08May2020): finished 1240 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tTUR,  7th phase (25Jul2020 - 18Aug2020): finished 1211 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tPER,  2nd phase (30May2020 - 18Jun2020): finished 1220 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tBLR,  0th phase (09Mar2020 - 28Apr2020): finished 1166 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tNGA,  1st phase (22May2020 - 08Jun2020): finished 1212 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tKWT, 10th phase (24Sep2020 - 11Oct2020): finished  357 trials in 0 min 15 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tTUR,  9th phase (06Sep2020 - 22Sep2020): finished  249 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tITA,  0th phase (24Feb2020 - 20Mar2020): finished 1194 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tRUS,  3rd phase (31May2020 - 12Jun2020): finished 1272 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tBLR,  9th phase (05Sep2020 - 01Oct2020): finished 1399 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tUSA,  1st phase (04May2020 - 12Jun2020): finished 1354 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tTUR, 11th phase (11Oct2020 - 26Oct2020): finished  179 trials in 0 min  5 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tBRA, 10th phase (11Sep2020 - 24Sep2020): finished 1440 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tBGD,  8th phase (24Aug2020 - 03Sep2020): finished  313 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tFRA,  9th phase (19Sep2020 - 02Oct2020): finished  540 trials in 0 min 20 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tBGD,  0th phase (16Mar2020 - 04Jun2020): finished 1387 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tIRN,  3rd phase (31May2020 - 16Jun2020): finished 1359 trials in 0 min 55 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tLVA, 10th phase (18Sep2020 - 27Sep2020): finished 1568 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tDOM,  5th phase (24Jul2020 - 01Aug2020): finished 1327 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tTUR,  4th phase (22May2020 - 13Jun2020): finished 1327 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tDZA,  6th phase (27Jul2020 - 04Aug2020): finished  254 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tPER,  9th phase (09Sep2020 - 20Sep2020): finished 1295 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tBOL,  6th phase (01Aug2020 - 10Aug2020): finished  143 trials in 0 min  5 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tIRN, 10th phase (05Oct2020 - 15Oct2020): finished  245 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tKWT,  1st phase (14May2020 - 27May2020): finished 1183 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tIRQ,  3rd phase (25Jul2020 - 06Aug2020): finished  917 trials in 0 min 45 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tEGY,  7th phase (28Jul2020 - 10Aug2020): finished  316 trials in 0 min 15 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tITA,  6th phase (04Jun2020 - 17Aug2020): finished 1092 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tBOL,  7th phase (11Aug2020 - 25Aug2020): finished 1194 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tNGA, 11th phase (30Sep2020 - 26Oct2020): finished 1143 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tUSA,  6th phase (07Aug2020 - 19Aug2020): finished  791 trials in 0 min 35 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tLVA,  9th phase (30Aug2020 - 17Sep2020): finished 1387 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tDZA,  7th phase (05Aug2020 - 12Aug2020): finished  231 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tITA,  1st phase (21Mar2020 - 29Mar2020): finished 1194 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tRUS,  5th phase (26Jun2020 - 10Jul2020): finished 1150 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tNGA,  4th phase (29Jun2020 - 07Jul2020): finished  237 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tBRA, 11th phase (25Sep2020 - 26Oct2020): finished 1112 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tBGD,  4th phase (07Jul2020 - 17Jul2020): finished 1156 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tBGD,  7th phase (12Aug2020 - 23Aug2020): finished 1132 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tFRA,  6th phase (10Aug2020 - 27Aug2020): finished 1100 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tPER,  0th phase (16Mar2020 - 09May2020): finished 1050 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tIRN,  8th phase (04Sep2020 - 21Sep2020): finished 1087 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tFRA,  3rd phase (26Apr2020 - 26May2020): finished 1073 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tFRA, 10th phase (03Oct2020 - 15Oct2020): finished  458 trials in 0 min 20 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tITA,  8th phase (10Sep2020 - 25Sep2020): finished  354 trials in 0 min 15 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tRUS,  9th phase (29Aug2020 - 16Sep2020): finished 1153 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tRUS,  2nd phase (19May2020 - 30May2020): finished 1169 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tIRQ,  8th phase (14Sep2020 - 22Sep2020): finished  128 trials in 0 min  5 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tBHR,  8th phase (04Sep2020 - 14Sep2020): finished 1180 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tTUR,  2nd phase (27Apr2020 - 06May2020): finished  300 trials in 0 min 15 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tUSA,  0th phase (09Feb2020 - 03May2020): finished 1062 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tBLR,  7th phase (04Jul2020 - 29Jul2020): finished  422 trials in 0 min 20 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tIRQ,  2nd phase (10Jul2020 - 24Jul2020): finished 1105 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tKWT,  5th phase (07Jul2020 - 22Jul2020): finished 1103 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tNGA,  9th phase (19Aug2020 - 02Sep2020): finished  420 trials in 0 min 20 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tUSA,  8th phase (03Sep2020 - 17Sep2020): finished  739 trials in 0 min 30 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tRUS,  0th phase (12Feb2020 - 07May2020): finished 1195 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tDOM,  9th phase (04Sep2020 - 17Sep2020): finished 1201 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tBOL,  0th phase (01Apr2020 - 13Jun2020): finished 1165 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tIRN,  0th phase (26Feb2020 - 30Mar2020): finished 1294 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tLVA,  8th phase (08Aug2020 - 29Aug2020): finished 1523 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tDOM,  1st phase (11May2020 - 09Jun2020): finished 1355 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tLVA,  2nd phase (18Apr2020 - 29Apr2020): finished 1585 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tDZA,  5th phase (19Jul2020 - 26Jul2020): finished  780 trials in 0 min 30 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tNGA,  8th phase (08Aug2020 - 18Aug2020): finished  394 trials in 0 min 15 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tEGY,  5th phase (03Jul2020 - 14Jul2020): finished  289 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tBGD,  2nd phase (20Jun2020 - 27Jun2020): finished 1278 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tNGA,  2nd phase (09Jun2020 - 18Jun2020): finished 1227 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tIRN,  1st phase (31Mar2020 - 04May2020): finished 1187 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tBLR,  4th phase (31May2020 - 13Jun2020): finished 1213 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tEGY,  2nd phase (28May2020 - 04Jun2020): finished  260 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tBLR,  2nd phase (09May2020 - 16May2020): finished 1270 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tDOM,  0th phase (24Mar2020 - 10May2020): finished 1240 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tFRA,  0th phase (12Feb2020 - 28Mar2020): finished 1125 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tPER,  6th phase (08Aug2020 - 17Aug2020): finished 1268 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tPER, 10th phase (21Sep2020 - 05Oct2020): finished 1212 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tIRQ,  5th phase (18Aug2020 - 27Aug2020): finished  160 trials in 0 min  5 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tDZA,  2nd phase (24May2020 - 25Jun2020): finished 1191 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tBRA,  2nd phase (16Jun2020 - 26Jun2020): finished 1214 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tBRA,  7th phase (11Aug2020 - 19Aug2020): finished 1241 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tITA,  7th phase (18Aug2020 - 09Sep2020): finished 1230 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tITA,  3rd phase (12Apr2020 - 27Apr2020): finished 1202 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tTUR,  8th phase (19Aug2020 - 05Sep2020): finished  586 trials in 0 min 25 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tNGA,  6th phase (18Jul2020 - 27Jul2020): finished  391 trials in 0 min 15 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tLVA,  1st phase (06Apr2020 - 17Apr2020): finished 1401 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tUSA,  5th phase (28Jul2020 - 06Aug2020): finished  488 trials in 0 min 20 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tEGY,  9th phase (28Aug2020 - 10Sep2020): finished  243 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tPER,  1st phase (10May2020 - 29May2020): finished 1214 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tEGY,  0th phase (28Feb2020 - 12May2020): finished 1234 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tBGD,  5th phase (18Jul2020 - 29Jul2020): finished  507 trials in 0 min 20 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tBHR,  9th phase (15Sep2020 - 24Sep2020): finished 1273 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tDZA,  0th phase (12Mar2020 - 01May2020): finished 1228 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tDOM,  6th phase (02Aug2020 - 11Aug2020): finished 1253 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tKWT, 11th phase (12Oct2020 - 26Oct2020): finished 1052 trials in 0 min 50 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tEGY,  3rd phase (05Jun2020 - 18Jun2020): finished 1234 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tBRA,  9th phase (31Aug2020 - 10Sep2020): finished  157 trials in 0 min  5 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tDZA,  9th phase (25Aug2020 - 07Sep2020): finished 1206 trials in 0 min 55 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tBOL,  1st phase (14Jun2020 - 25Jun2020): finished 1370 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tUSA,  9th phase (18Sep2020 - 01Oct2020): finished  828 trials in 0 min 30 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tTUR,  0th phase (24Mar2020 - 16Apr2020): finished 1394 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tRUS,  8th phase (11Aug2020 - 28Aug2020): finished 1389 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tUSA,  3rd phase (04Jul2020 - 15Jul2020): finished  699 trials in 0 min 25 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tRUS, 10th phase (17Sep2020 - 30Sep2020): finished 1436 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tTUR,  1st phase (17Apr2020 - 26Apr2020): finished 1432 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tUSA,  7th phase (20Aug2020 - 02Sep2020): finished  153 trials in 0 min  5 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tBOL, 10th phase (13Sep2020 - 27Sep2020): finished  335 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tIRN,  9th phase (22Sep2020 - 04Oct2020): finished  294 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tDZA, 10th phase (08Sep2020 - 27Sep2020): finished  437 trials in 0 min 15 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tBRA,  3rd phase (27Jun2020 - 08Jul2020): finished 1468 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tIRN, 11th phase (16Oct2020 - 26Oct2020): finished  163 trials in 0 min  5 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tFRA,  5th phase (10Jul2020 - 09Aug2020): finished 1395 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tITA,  9th phase (26Sep2020 - 06Oct2020): finished  169 trials in 0 min  5 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tPER,  4th phase (11Jul2020 - 27Jul2020): finished 1409 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tIRN,  2nd phase (05May2020 - 30May2020): finished 1429 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tDZA,  4th phase (09Jul2020 - 18Jul2020): finished  335 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tLVA,  4th phase (08May2020 - 15May2020): finished 1429 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tLVA,  6th phase (29May2020 - 09Jul2020): finished 1368 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tTUR,  5th phase (14Jun2020 - 01Jul2020): finished 1439 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tDZA,  1st phase (02May2020 - 23May2020): finished 1415 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tFRA,  2nd phase (13Apr2020 - 25Apr2020): finished 1450 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tRUS,  4th phase (13Jun2020 - 25Jun2020): finished 1383 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tBOL,  5th phase (24Jul2020 - 31Jul2020): finished  580 trials in 0 min 20 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tNGA,  0th phase (18Mar2020 - 21May2020): finished 1360 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tBHR,  4th phase (26Jun2020 - 07Jul2020): finished  298 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tUSA, 11th phase (15Oct2020 - 26Oct2020): finished  557 trials in 0 min 20 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tEGY, 10th phase (11Sep2020 - 28Sep2020): finished  321 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tBHR,  7th phase (12Aug2020 - 03Sep2020): finished 1441 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tDOM, 10th phase (18Sep2020 - 05Oct2020): finished  161 trials in 0 min  5 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tBRA,  8th phase (20Aug2020 - 30Aug2020): finished 1371 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tBRA,  6th phase (31Jul2020 - 10Aug2020): finished 1039 trials in 0 min 40 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tUSA, 10th phase (02Oct2020 - 14Oct2020): finished  590 trials in 0 min 20 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tLVA,  5th phase (16May2020 - 28May2020): finished 1649 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tDOM, 11th phase (06Oct2020 - 26Oct2020): finished 1433 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tBLR, 10th phase (02Oct2020 - 16Oct2020): finished 1429 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tRUS,  6th phase (11Jul2020 - 24Jul2020): finished 1411 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tIRQ,  4th phase (07Aug2020 - 17Aug2020): finished  456 trials in 0 min 15 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tITA,  4th phase (28Apr2020 - 10May2020): finished  154 trials in 0 min  5 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tPER,  3rd phase (19Jun2020 - 10Jul2020): finished 1439 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tRUS, 11th phase (01Oct2020 - 09Oct2020): finished 1422 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tBLR,  3rd phase (17May2020 - 30May2020): finished  707 trials in 0 min 25 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tKWT,  7th phase (09Aug2020 - 23Aug2020): finished 1378 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tKWT,  0th phase (08Mar2020 - 13May2020): finished 1157 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tKWT,  6th phase (23Jul2020 - 08Aug2020): finished 1033 trials in 0 min 40 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tBOL,  4th phase (16Jul2020 - 23Jul2020): finished  298 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tBHR,  2nd phase (01Jun2020 - 13Jun2020): finished 1403 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tRUS, 13th phase (18Oct2020 - 26Oct2020): finished 1398 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tBLR,  6th phase (22Jun2020 - 03Jul2020): finished 1251 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tBLR,  8th phase (30Jul2020 - 04Sep2020): finished 1169 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tKWT,  4th phase (24Jun2020 - 06Jul2020): finished 1139 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tIRN,  5th phase (05Jul2020 - 24Jul2020): finished  468 trials in 0 min 20 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tLVA, 11th phase (28Sep2020 - 26Oct2020): finished 1247 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tDZA,  8th phase (13Aug2020 - 24Aug2020): finished  332 trials in 0 min 20 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tBRA,  5th phase (22Jul2020 - 30Jul2020): finished 1043 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tFRA,  8th phase (11Sep2020 - 18Sep2020): finished  524 trials in 0 min 25 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tDOM,  3rd phase (02Jul2020 - 13Jul2020): finished 1009 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tTUR,  6th phase (02Jul2020 - 24Jul2020): finished  131 trials in 0 min  5 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tDOM,  8th phase (21Aug2020 - 03Sep2020): finished 1004 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tIRQ, 11th phase (14Oct2020 - 26Oct2020): finished  254 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tIRN,  6th phase (25Jul2020 - 12Aug2020): finished  124 trials in 0 min  5 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tUSA,  4th phase (16Jul2020 - 27Jul2020): finished  360 trials in 0 min 15 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tLVA,  3rd phase (30Apr2020 - 07May2020): finished 1343 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tIRQ,  9th phase (23Sep2020 - 01Oct2020): finished  238 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tKWT,  3rd phase (09Jun2020 - 23Jun2020): finished 1184 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tIRQ,  0th phase (09Mar2020 - 23Jun2020): finished 1087 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tITA,  5th phase (11May2020 - 03Jun2020): finished  352 trials in 0 min 15 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tEGY,  4th phase (19Jun2020 - 02Jul2020): finished  209 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tBOL,  9th phase (04Sep2020 - 12Sep2020): finished 1071 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tEGY,  6th phase (15Jul2020 - 27Jul2020): finished 1020 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tTUR,  3rd phase (07May2020 - 21May2020): finished  997 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tDZA,  3rd phase (26Jun2020 - 08Jul2020): finished  994 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tTUR, 10th phase (23Sep2020 - 10Oct2020): finished  228 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tKWT,  9th phase (08Sep2020 - 23Sep2020): finished 1126 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tDOM,  4th phase (14Jul2020 - 23Jul2020): finished 1244 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tBLR,  5th phase (14Jun2020 - 21Jun2020): finished  733 trials in 0 min 30 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tRUS,  7th phase (25Jul2020 - 10Aug2020): finished 1273 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tIRQ,  6th phase (28Aug2020 - 04Sep2020): finished  136 trials in 0 min  5 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tLVA,  0th phase (10Mar2020 - 05Apr2020): finished 1611 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tBRA,  0th phase (16Mar2020 - 27May2020): finished 1407 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tPER,  8th phase (29Aug2020 - 08Sep2020): finished 1485 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tUSA,  2nd phase (13Jun2020 - 03Jul2020): finished 1600 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tITA,  2nd phase (30Mar2020 - 11Apr2020): finished 1639 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tFRA,  1st phase (29Mar2020 - 12Apr2020): finished 1663 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tBGD,  1st phase (05Jun2020 - 19Jun2020): finished 1775 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tEGY,  1st phase (13May2020 - 27May2020): finished 1756 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tFRA,  4th phase (27May2020 - 09Jul2020): finished 1241 trials in 0 min 45 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tBOL,  3rd phase (06Jul2020 - 15Jul2020): finished 1624 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tBGD,  3rd phase (28Jun2020 - 06Jul2020): finished  563 trials in 0 min 20 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tBOL,  2nd phase (26Jun2020 - 05Jul2020): finished  322 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tBHR,  5th phase (08Jul2020 - 22Jul2020): finished 1386 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "Completed optimization. Total: 43 min 23 sec\n"
       ]
      }
     ],
     "prompt_number": 11
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "# Show summary\n",
      "analyser.summary(countries=countries_show)"
     ],
     "language": "python",
     "metadata": {},
     "outputs": [
      {
       "html": [
        "<div>\n",
        "<style scoped>\n",
        "    .dataframe tbody tr th:only-of-type {\n",
        "        vertical-align: middle;\n",
        "    }\n",
        "\n",
        "    .dataframe tbody tr th {\n",
        "        vertical-align: top;\n",
        "    }\n",
        "\n",
        "    .dataframe thead th {\n",
        "        text-align: right;\n",
        "    }\n",
        "</style>\n",
        "<table border=\"1\" class=\"dataframe\">\n",
        "  <thead>\n",
        "    <tr style=\"text-align: right;\">\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th>Type</th>\n",
        "      <th>Start</th>\n",
        "      <th>End</th>\n",
        "      <th>Population</th>\n",
        "      <th>ODE</th>\n",
        "      <th>Rt</th>\n",
        "      <th>theta</th>\n",
        "      <th>kappa</th>\n",
        "      <th>rho</th>\n",
        "      <th>sigma</th>\n",
        "      <th>tau</th>\n",
        "      <th>1/beta [day]</th>\n",
        "      <th>1/gamma [day]</th>\n",
        "      <th>alpha1 [-]</th>\n",
        "      <th>1/alpha2 [day]</th>\n",
        "      <th>RMSLE</th>\n",
        "      <th>Trials</th>\n",
        "      <th>Runtime</th>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>Country</th>\n",
        "      <th>Phase</th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "    </tr>\n",
        "  </thead>\n",
        "  <tbody>\n",
        "    <tr>\n",
        "      <th rowspan=\"14\" valign=\"top\">Russia</th>\n",
        "      <th>0th</th>\n",
        "      <td>Past</td>\n",
        "      <td>12Feb2020</td>\n",
        "      <td>07May2020</td>\n",
        "      <td>330457362</td>\n",
        "      <td>SIR-F</td>\n",
        "      <td>0.02</td>\n",
        "      <td>0.602763</td>\n",
        "      <td>0.544883</td>\n",
        "      <td>0.033660</td>\n",
        "      <td>0.002318</td>\n",
        "      <td>360</td>\n",
        "      <td>7</td>\n",
        "      <td>107</td>\n",
        "      <td>0.603</td>\n",
        "      <td>0</td>\n",
        "      <td>19.313273</td>\n",
        "      <td>1195</td>\n",
        "      <td>1 min  0 sec</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>1st</th>\n",
        "      <td>Past</td>\n",
        "      <td>08May2020</td>\n",
        "      <td>18May2020</td>\n",
        "      <td>330457362</td>\n",
        "      <td>SIR-F</td>\n",
        "      <td>2.40</td>\n",
        "      <td>0.000593</td>\n",
        "      <td>0.000114</td>\n",
        "      <td>0.011793</td>\n",
        "      <td>0.004805</td>\n",
        "      <td>360</td>\n",
        "      <td>21</td>\n",
        "      <td>52</td>\n",
        "      <td>0.001</td>\n",
        "      <td>2200</td>\n",
        "      <td>0.090432</td>\n",
        "      <td>1260</td>\n",
        "      <td>1 min  0 sec</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>2nd</th>\n",
        "      <td>Past</td>\n",
        "      <td>19May2020</td>\n",
        "      <td>30May2020</td>\n",
        "      <td>330457362</td>\n",
        "      <td>SIR-F</td>\n",
        "      <td>1.04</td>\n",
        "      <td>0.000327</td>\n",
        "      <td>0.000113</td>\n",
        "      <td>0.006214</td>\n",
        "      <td>0.005850</td>\n",
        "      <td>360</td>\n",
        "      <td>40</td>\n",
        "      <td>42</td>\n",
        "      <td>0.000</td>\n",
        "      <td>2208</td>\n",
        "      <td>0.129970</td>\n",
        "      <td>1169</td>\n",
        "      <td>1 min  0 sec</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>3rd</th>\n",
        "      <td>Past</td>\n",
        "      <td>31May2020</td>\n",
        "      <td>12Jun2020</td>\n",
        "      <td>330457362</td>\n",
        "      <td>SIR-F</td>\n",
        "      <td>0.95</td>\n",
        "      <td>0.000560</td>\n",
        "      <td>0.000098</td>\n",
        "      <td>0.004550</td>\n",
        "      <td>0.004708</td>\n",
        "      <td>360</td>\n",
        "      <td>54</td>\n",
        "      <td>53</td>\n",
        "      <td>0.001</td>\n",
        "      <td>2550</td>\n",
        "      <td>0.115890</td>\n",
        "      <td>1272</td>\n",
        "      <td>1 min  0 sec</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>4th</th>\n",
        "      <td>Past</td>\n",
        "      <td>13Jun2020</td>\n",
        "      <td>25Jun2020</td>\n",
        "      <td>330457362</td>\n",
        "      <td>SIR-F</td>\n",
        "      <td>0.95</td>\n",
        "      <td>0.001067</td>\n",
        "      <td>0.000069</td>\n",
        "      <td>0.003467</td>\n",
        "      <td>0.003584</td>\n",
        "      <td>360</td>\n",
        "      <td>72</td>\n",
        "      <td>69</td>\n",
        "      <td>0.001</td>\n",
        "      <td>3612</td>\n",
        "      <td>0.085231</td>\n",
        "      <td>1383</td>\n",
        "      <td>1 min  0 sec</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>5th</th>\n",
        "      <td>Past</td>\n",
        "      <td>26Jun2020</td>\n",
        "      <td>10Jul2020</td>\n",
        "      <td>330457362</td>\n",
        "      <td>SIR-F</td>\n",
        "      <td>0.92</td>\n",
        "      <td>0.017242</td>\n",
        "      <td>0.000024</td>\n",
        "      <td>0.002524</td>\n",
        "      <td>0.002682</td>\n",
        "      <td>360</td>\n",
        "      <td>99</td>\n",
        "      <td>93</td>\n",
        "      <td>0.017</td>\n",
        "      <td>10521</td>\n",
        "      <td>0.078261</td>\n",
        "      <td>1150</td>\n",
        "      <td>1 min  0 sec</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>6th</th>\n",
        "      <td>Past</td>\n",
        "      <td>11Jul2020</td>\n",
        "      <td>24Jul2020</td>\n",
        "      <td>330457362</td>\n",
        "      <td>SIR-F</td>\n",
        "      <td>0.87</td>\n",
        "      <td>0.017656</td>\n",
        "      <td>0.000019</td>\n",
        "      <td>0.002092</td>\n",
        "      <td>0.002344</td>\n",
        "      <td>360</td>\n",
        "      <td>119</td>\n",
        "      <td>106</td>\n",
        "      <td>0.018</td>\n",
        "      <td>13298</td>\n",
        "      <td>0.060639</td>\n",
        "      <td>1411</td>\n",
        "      <td>1 min  0 sec</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>7th</th>\n",
        "      <td>Past</td>\n",
        "      <td>25Jul2020</td>\n",
        "      <td>10Aug2020</td>\n",
        "      <td>330457362</td>\n",
        "      <td>SIR-F</td>\n",
        "      <td>1.25</td>\n",
        "      <td>0.017324</td>\n",
        "      <td>0.000011</td>\n",
        "      <td>0.001529</td>\n",
        "      <td>0.001187</td>\n",
        "      <td>360</td>\n",
        "      <td>163</td>\n",
        "      <td>210</td>\n",
        "      <td>0.017</td>\n",
        "      <td>22591</td>\n",
        "      <td>0.055585</td>\n",
        "      <td>1273</td>\n",
        "      <td>1 min  0 sec</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>8th</th>\n",
        "      <td>Past</td>\n",
        "      <td>11Aug2020</td>\n",
        "      <td>28Aug2020</td>\n",
        "      <td>330457362</td>\n",
        "      <td>SIR-F</td>\n",
        "      <td>0.77</td>\n",
        "      <td>0.060249</td>\n",
        "      <td>0.000002</td>\n",
        "      <td>0.001278</td>\n",
        "      <td>0.001558</td>\n",
        "      <td>360</td>\n",
        "      <td>195</td>\n",
        "      <td>160</td>\n",
        "      <td>0.060</td>\n",
        "      <td>132403</td>\n",
        "      <td>0.110930</td>\n",
        "      <td>1389</td>\n",
        "      <td>1 min  0 sec</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>9th</th>\n",
        "      <td>Past</td>\n",
        "      <td>29Aug2020</td>\n",
        "      <td>16Sep2020</td>\n",
        "      <td>330457362</td>\n",
        "      <td>SIR-F</td>\n",
        "      <td>0.97</td>\n",
        "      <td>0.023057</td>\n",
        "      <td>0.000004</td>\n",
        "      <td>0.001262</td>\n",
        "      <td>0.001273</td>\n",
        "      <td>360</td>\n",
        "      <td>198</td>\n",
        "      <td>196</td>\n",
        "      <td>0.023</td>\n",
        "      <td>68271</td>\n",
        "      <td>0.054286</td>\n",
        "      <td>1153</td>\n",
        "      <td>1 min  0 sec</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>10th</th>\n",
        "      <td>Past</td>\n",
        "      <td>17Sep2020</td>\n",
        "      <td>30Sep2020</td>\n",
        "      <td>330457362</td>\n",
        "      <td>SIR-F</td>\n",
        "      <td>1.60</td>\n",
        "      <td>0.016591</td>\n",
        "      <td>0.000001</td>\n",
        "      <td>0.001551</td>\n",
        "      <td>0.000950</td>\n",
        "      <td>360</td>\n",
        "      <td>161</td>\n",
        "      <td>263</td>\n",
        "      <td>0.017</td>\n",
        "      <td>173810</td>\n",
        "      <td>0.023129</td>\n",
        "      <td>1436</td>\n",
        "      <td>1 min  0 sec</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>11th</th>\n",
        "      <td>Past</td>\n",
        "      <td>01Oct2020</td>\n",
        "      <td>09Oct2020</td>\n",
        "      <td>330457362</td>\n",
        "      <td>SIR-F</td>\n",
        "      <td>1.69</td>\n",
        "      <td>0.001491</td>\n",
        "      <td>0.000031</td>\n",
        "      <td>0.002217</td>\n",
        "      <td>0.001281</td>\n",
        "      <td>360</td>\n",
        "      <td>112</td>\n",
        "      <td>195</td>\n",
        "      <td>0.001</td>\n",
        "      <td>7999</td>\n",
        "      <td>0.016231</td>\n",
        "      <td>1422</td>\n",
        "      <td>1 min  0 sec</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>12th</th>\n",
        "      <td>Past</td>\n",
        "      <td>10Oct2020</td>\n",
        "      <td>17Oct2020</td>\n",
        "      <td>330457362</td>\n",
        "      <td>SIR-F</td>\n",
        "      <td>1.94</td>\n",
        "      <td>0.002368</td>\n",
        "      <td>0.000024</td>\n",
        "      <td>0.002649</td>\n",
        "      <td>0.001338</td>\n",
        "      <td>360</td>\n",
        "      <td>94</td>\n",
        "      <td>186</td>\n",
        "      <td>0.002</td>\n",
        "      <td>10521</td>\n",
        "      <td>0.007910</td>\n",
        "      <td>999</td>\n",
        "      <td>0 min 55 sec</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>13th</th>\n",
        "      <td>Past</td>\n",
        "      <td>18Oct2020</td>\n",
        "      <td>26Oct2020</td>\n",
        "      <td>330457362</td>\n",
        "      <td>SIR-F</td>\n",
        "      <td>1.67</td>\n",
        "      <td>0.000019</td>\n",
        "      <td>0.000041</td>\n",
        "      <td>0.003010</td>\n",
        "      <td>0.001757</td>\n",
        "      <td>360</td>\n",
        "      <td>83</td>\n",
        "      <td>142</td>\n",
        "      <td>0.000</td>\n",
        "      <td>6138</td>\n",
        "      <td>0.015653</td>\n",
        "      <td>1398</td>\n",
        "      <td>1 min  0 sec</td>\n",
        "    </tr>\n",
        "  </tbody>\n",
        "</table>\n",
        "</div>"
       ],
       "output_type": "pyout",
       "prompt_number": 12,
       "text": [
        "               Type      Start        End  Population    ODE    Rt     theta  \\\n",
        "Country Phase                                                                  \n",
        "Russia  0th    Past  12Feb2020  07May2020   330457362  SIR-F  0.02  0.602763   \n",
        "        1st    Past  08May2020  18May2020   330457362  SIR-F  2.40  0.000593   \n",
        "        2nd    Past  19May2020  30May2020   330457362  SIR-F  1.04  0.000327   \n",
        "        3rd    Past  31May2020  12Jun2020   330457362  SIR-F  0.95  0.000560   \n",
        "        4th    Past  13Jun2020  25Jun2020   330457362  SIR-F  0.95  0.001067   \n",
        "        5th    Past  26Jun2020  10Jul2020   330457362  SIR-F  0.92  0.017242   \n",
        "        6th    Past  11Jul2020  24Jul2020   330457362  SIR-F  0.87  0.017656   \n",
        "        7th    Past  25Jul2020  10Aug2020   330457362  SIR-F  1.25  0.017324   \n",
        "        8th    Past  11Aug2020  28Aug2020   330457362  SIR-F  0.77  0.060249   \n",
        "        9th    Past  29Aug2020  16Sep2020   330457362  SIR-F  0.97  0.023057   \n",
        "        10th   Past  17Sep2020  30Sep2020   330457362  SIR-F  1.60  0.016591   \n",
        "        11th   Past  01Oct2020  09Oct2020   330457362  SIR-F  1.69  0.001491   \n",
        "        12th   Past  10Oct2020  17Oct2020   330457362  SIR-F  1.94  0.002368   \n",
        "        13th   Past  18Oct2020  26Oct2020   330457362  SIR-F  1.67  0.000019   \n",
        "\n",
        "                  kappa       rho     sigma  tau  1/beta [day]  1/gamma [day]  \\\n",
        "Country Phase                                                                   \n",
        "Russia  0th    0.544883  0.033660  0.002318  360             7            107   \n",
        "        1st    0.000114  0.011793  0.004805  360            21             52   \n",
        "        2nd    0.000113  0.006214  0.005850  360            40             42   \n",
        "        3rd    0.000098  0.004550  0.004708  360            54             53   \n",
        "        4th    0.000069  0.003467  0.003584  360            72             69   \n",
        "        5th    0.000024  0.002524  0.002682  360            99             93   \n",
        "        6th    0.000019  0.002092  0.002344  360           119            106   \n",
        "        7th    0.000011  0.001529  0.001187  360           163            210   \n",
        "        8th    0.000002  0.001278  0.001558  360           195            160   \n",
        "        9th    0.000004  0.001262  0.001273  360           198            196   \n",
        "        10th   0.000001  0.001551  0.000950  360           161            263   \n",
        "        11th   0.000031  0.002217  0.001281  360           112            195   \n",
        "        12th   0.000024  0.002649  0.001338  360            94            186   \n",
        "        13th   0.000041  0.003010  0.001757  360            83            142   \n",
        "\n",
        "               alpha1 [-]  1/alpha2 [day]      RMSLE  Trials       Runtime  \n",
        "Country Phase                                                               \n",
        "Russia  0th         0.603               0  19.313273    1195  1 min  0 sec  \n",
        "        1st         0.001            2200   0.090432    1260  1 min  0 sec  \n",
        "        2nd         0.000            2208   0.129970    1169  1 min  0 sec  \n",
        "        3rd         0.001            2550   0.115890    1272  1 min  0 sec  \n",
        "        4th         0.001            3612   0.085231    1383  1 min  0 sec  \n",
        "        5th         0.017           10521   0.078261    1150  1 min  0 sec  \n",
        "        6th         0.018           13298   0.060639    1411  1 min  0 sec  \n",
        "        7th         0.017           22591   0.055585    1273  1 min  0 sec  \n",
        "        8th         0.060          132403   0.110930    1389  1 min  0 sec  \n",
        "        9th         0.023           68271   0.054286    1153  1 min  0 sec  \n",
        "        10th        0.017          173810   0.023129    1436  1 min  0 sec  \n",
        "        11th        0.001            7999   0.016231    1422  1 min  0 sec  \n",
        "        12th        0.002           10521   0.007910     999  0 min 55 sec  \n",
        "        13th        0.000            6138   0.015653    1398  1 min  0 sec  "
       ]
      }
     ],
     "prompt_number": 12
    },
    {
     "cell_type": "markdown",
     "metadata": {},
     "source": [
      "## Compare the history of parameters\n",
      "Here, compare the history of parameter values if countries."
     ]
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "# All parameter/day parameter/Rt/OxCGRT\n",
      "analyser.track().head()"
     ],
     "language": "python",
     "metadata": {},
     "outputs": [
      {
       "html": [
        "<div>\n",
        "<style scoped>\n",
        "    .dataframe tbody tr th:only-of-type {\n",
        "        vertical-align: middle;\n",
        "    }\n",
        "\n",
        "    .dataframe tbody tr th {\n",
        "        vertical-align: top;\n",
        "    }\n",
        "\n",
        "    .dataframe thead th {\n",
        "        text-align: right;\n",
        "    }\n",
        "</style>\n",
        "<table border=\"1\" class=\"dataframe\">\n",
        "  <thead>\n",
        "    <tr style=\"text-align: right;\">\n",
        "      <th></th>\n",
        "      <th>Date</th>\n",
        "      <th>Country</th>\n",
        "      <th>theta</th>\n",
        "      <th>kappa</th>\n",
        "      <th>rho</th>\n",
        "      <th>sigma</th>\n",
        "      <th>alpha1 [-]</th>\n",
        "      <th>1/alpha2 [day]</th>\n",
        "      <th>1/beta [day]</th>\n",
        "      <th>1/gamma [day]</th>\n",
        "      <th>...</th>\n",
        "      <th>Cancel_events</th>\n",
        "      <th>Gatherings_restrictions</th>\n",
        "      <th>Transport_closing</th>\n",
        "      <th>Stay_home_restrictions</th>\n",
        "      <th>Internal_movement_restrictions</th>\n",
        "      <th>International_movement_restrictions</th>\n",
        "      <th>Information_campaigns</th>\n",
        "      <th>Testing_policy</th>\n",
        "      <th>Contact_tracing</th>\n",
        "      <th>Stringency_index</th>\n",
        "    </tr>\n",
        "  </thead>\n",
        "  <tbody>\n",
        "    <tr>\n",
        "      <th>0</th>\n",
        "      <td>2020-03-16</td>\n",
        "      <td>Brazil</td>\n",
        "      <td>0.115877</td>\n",
        "      <td>0.000483116</td>\n",
        "      <td>0.0302063</td>\n",
        "      <td>0.000337689</td>\n",
        "      <td>0.116</td>\n",
        "      <td>517</td>\n",
        "      <td>8</td>\n",
        "      <td>740</td>\n",
        "      <td>...</td>\n",
        "      <td>2</td>\n",
        "      <td>2</td>\n",
        "      <td>0</td>\n",
        "      <td>1</td>\n",
        "      <td>0</td>\n",
        "      <td>2</td>\n",
        "      <td>2</td>\n",
        "      <td>1</td>\n",
        "      <td>0</td>\n",
        "      <td>42.13</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>1</th>\n",
        "      <td>2020-03-17</td>\n",
        "      <td>Brazil</td>\n",
        "      <td>0.115877</td>\n",
        "      <td>0.000483116</td>\n",
        "      <td>0.0302063</td>\n",
        "      <td>0.000337689</td>\n",
        "      <td>0.116</td>\n",
        "      <td>517</td>\n",
        "      <td>8</td>\n",
        "      <td>740</td>\n",
        "      <td>...</td>\n",
        "      <td>2</td>\n",
        "      <td>2</td>\n",
        "      <td>0</td>\n",
        "      <td>1</td>\n",
        "      <td>2</td>\n",
        "      <td>2</td>\n",
        "      <td>2</td>\n",
        "      <td>1</td>\n",
        "      <td>0</td>\n",
        "      <td>57.87</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>2</th>\n",
        "      <td>2020-03-18</td>\n",
        "      <td>Brazil</td>\n",
        "      <td>0.115877</td>\n",
        "      <td>0.000483116</td>\n",
        "      <td>0.0302063</td>\n",
        "      <td>0.000337689</td>\n",
        "      <td>0.116</td>\n",
        "      <td>517</td>\n",
        "      <td>8</td>\n",
        "      <td>740</td>\n",
        "      <td>...</td>\n",
        "      <td>2</td>\n",
        "      <td>3</td>\n",
        "      <td>0</td>\n",
        "      <td>1</td>\n",
        "      <td>2</td>\n",
        "      <td>2</td>\n",
        "      <td>2</td>\n",
        "      <td>1</td>\n",
        "      <td>0</td>\n",
        "      <td>60.65</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>3</th>\n",
        "      <td>2020-03-19</td>\n",
        "      <td>Brazil</td>\n",
        "      <td>0.115877</td>\n",
        "      <td>0.000483116</td>\n",
        "      <td>0.0302063</td>\n",
        "      <td>0.000337689</td>\n",
        "      <td>0.116</td>\n",
        "      <td>517</td>\n",
        "      <td>8</td>\n",
        "      <td>740</td>\n",
        "      <td>...</td>\n",
        "      <td>2</td>\n",
        "      <td>3</td>\n",
        "      <td>1</td>\n",
        "      <td>1</td>\n",
        "      <td>2</td>\n",
        "      <td>3</td>\n",
        "      <td>2</td>\n",
        "      <td>1</td>\n",
        "      <td>0</td>\n",
        "      <td>66.20</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>4</th>\n",
        "      <td>2020-03-20</td>\n",
        "      <td>Brazil</td>\n",
        "      <td>0.115877</td>\n",
        "      <td>0.000483116</td>\n",
        "      <td>0.0302063</td>\n",
        "      <td>0.000337689</td>\n",
        "      <td>0.116</td>\n",
        "      <td>517</td>\n",
        "      <td>8</td>\n",
        "      <td>740</td>\n",
        "      <td>...</td>\n",
        "      <td>2</td>\n",
        "      <td>3</td>\n",
        "      <td>1</td>\n",
        "      <td>1</td>\n",
        "      <td>2</td>\n",
        "      <td>3</td>\n",
        "      <td>2</td>\n",
        "      <td>1</td>\n",
        "      <td>0</td>\n",
        "      <td>66.20</td>\n",
        "    </tr>\n",
        "  </tbody>\n",
        "</table>\n",
        "<p>5 rows \u00d7 23 columns</p>\n",
        "</div>"
       ],
       "output_type": "pyout",
       "prompt_number": 13,
       "text": [
        "        Date Country     theta        kappa        rho        sigma  \\\n",
        "0 2020-03-16  Brazil  0.115877  0.000483116  0.0302063  0.000337689   \n",
        "1 2020-03-17  Brazil  0.115877  0.000483116  0.0302063  0.000337689   \n",
        "2 2020-03-18  Brazil  0.115877  0.000483116  0.0302063  0.000337689   \n",
        "3 2020-03-19  Brazil  0.115877  0.000483116  0.0302063  0.000337689   \n",
        "4 2020-03-20  Brazil  0.115877  0.000483116  0.0302063  0.000337689   \n",
        "\n",
        "  alpha1 [-] 1/alpha2 [day] 1/beta [day] 1/gamma [day]  ... Cancel_events  \\\n",
        "0      0.116            517            8           740  ...             2   \n",
        "1      0.116            517            8           740  ...             2   \n",
        "2      0.116            517            8           740  ...             2   \n",
        "3      0.116            517            8           740  ...             2   \n",
        "4      0.116            517            8           740  ...             2   \n",
        "\n",
        "   Gatherings_restrictions  Transport_closing  Stay_home_restrictions  \\\n",
        "0                        2                  0                       1   \n",
        "1                        2                  0                       1   \n",
        "2                        3                  0                       1   \n",
        "3                        3                  1                       1   \n",
        "4                        3                  1                       1   \n",
        "\n",
        "   Internal_movement_restrictions  International_movement_restrictions  \\\n",
        "0                               0                                    2   \n",
        "1                               2                                    2   \n",
        "2                               2                                    2   \n",
        "3                               2                                    3   \n",
        "4                               2                                    3   \n",
        "\n",
        "   Information_campaigns  Testing_policy  Contact_tracing  Stringency_index  \n",
        "0                      2               1                0             42.13  \n",
        "1                      2               1                0             57.87  \n",
        "2                      2               1                0             60.65  \n",
        "3                      2               1                0             66.20  \n",
        "4                      2               1                0             66.20  \n",
        "\n",
        "[5 rows x 23 columns]"
       ]
      }
     ],
     "prompt_number": 13
    },
    {
     "cell_type": "heading",
     "level": 3,
     "metadata": {},
     "source": [
      "$Rt$: Reprodcution number $\\mathrm{[-]}$"
     ]
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "analyser.history(\"Rt\", roll_window=None).tail()"
     ],
     "language": "python",
     "metadata": {},
     "outputs": [
      {
       "output_type": "display_data",
       "png": "\n",
       "text": [
        "<Figure size 648x432 with 1 Axes>"
       ]
      },
      {
       "html": [
        "<div>\n",
        "<style scoped>\n",
        "    .dataframe tbody tr th:only-of-type {\n",
        "        vertical-align: middle;\n",
        "    }\n",
        "\n",
        "    .dataframe tbody tr th {\n",
        "        vertical-align: top;\n",
        "    }\n",
        "\n",
        "    .dataframe thead th {\n",
        "        text-align: right;\n",
        "    }\n",
        "</style>\n",
        "<table border=\"1\" class=\"dataframe\">\n",
        "  <thead>\n",
        "    <tr style=\"text-align: right;\">\n",
        "      <th>Country</th>\n",
        "      <th>Algeria</th>\n",
        "      <th>Bahrain</th>\n",
        "      <th>Bangladesh</th>\n",
        "      <th>Belarus</th>\n",
        "      <th>Bolivia</th>\n",
        "      <th>Brazil</th>\n",
        "      <th>Dominican Republic</th>\n",
        "      <th>Egypt</th>\n",
        "      <th>France</th>\n",
        "      <th>Iran</th>\n",
        "      <th>Iraq</th>\n",
        "      <th>Italy</th>\n",
        "      <th>Kuwait</th>\n",
        "      <th>Latvia</th>\n",
        "      <th>Nigeria</th>\n",
        "      <th>Peru</th>\n",
        "      <th>Russia</th>\n",
        "      <th>Turkey</th>\n",
        "      <th>United States</th>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>Date</th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "    </tr>\n",
        "  </thead>\n",
        "  <tbody>\n",
        "    <tr>\n",
        "      <th>2020-10-22</th>\n",
        "      <td>1.48</td>\n",
        "      <td>0.87</td>\n",
        "      <td>0.7</td>\n",
        "      <td>1.56</td>\n",
        "      <td>0.68</td>\n",
        "      <td>1.33</td>\n",
        "      <td>0.81</td>\n",
        "      <td>0.95</td>\n",
        "      <td>29.33</td>\n",
        "      <td>1.23</td>\n",
        "      <td>1.12</td>\n",
        "      <td>4.41</td>\n",
        "      <td>1.11</td>\n",
        "      <td>311.88</td>\n",
        "      <td>0.65</td>\n",
        "      <td>0.55</td>\n",
        "      <td>1.67</td>\n",
        "      <td>1.27</td>\n",
        "      <td>2.71</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>2020-10-23</th>\n",
        "      <td>1.48</td>\n",
        "      <td>0.87</td>\n",
        "      <td>0.7</td>\n",
        "      <td>1.56</td>\n",
        "      <td>0.68</td>\n",
        "      <td>1.33</td>\n",
        "      <td>0.81</td>\n",
        "      <td>0.95</td>\n",
        "      <td>29.33</td>\n",
        "      <td>1.23</td>\n",
        "      <td>1.12</td>\n",
        "      <td>4.41</td>\n",
        "      <td>1.11</td>\n",
        "      <td>311.88</td>\n",
        "      <td>0.65</td>\n",
        "      <td>0.55</td>\n",
        "      <td>1.67</td>\n",
        "      <td>1.27</td>\n",
        "      <td>2.71</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>2020-10-24</th>\n",
        "      <td>1.48</td>\n",
        "      <td>0.87</td>\n",
        "      <td>0.7</td>\n",
        "      <td>1.56</td>\n",
        "      <td>0.68</td>\n",
        "      <td>1.33</td>\n",
        "      <td>0.81</td>\n",
        "      <td>0.95</td>\n",
        "      <td>29.33</td>\n",
        "      <td>1.23</td>\n",
        "      <td>1.12</td>\n",
        "      <td>4.41</td>\n",
        "      <td>1.11</td>\n",
        "      <td>311.88</td>\n",
        "      <td>0.65</td>\n",
        "      <td>0.55</td>\n",
        "      <td>1.67</td>\n",
        "      <td>1.27</td>\n",
        "      <td>2.71</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>2020-10-25</th>\n",
        "      <td>1.48</td>\n",
        "      <td>0.87</td>\n",
        "      <td>0.7</td>\n",
        "      <td>1.56</td>\n",
        "      <td>0.68</td>\n",
        "      <td>1.33</td>\n",
        "      <td>0.81</td>\n",
        "      <td>0.95</td>\n",
        "      <td>29.33</td>\n",
        "      <td>1.23</td>\n",
        "      <td>1.12</td>\n",
        "      <td>4.41</td>\n",
        "      <td>1.11</td>\n",
        "      <td>311.88</td>\n",
        "      <td>0.65</td>\n",
        "      <td>0.55</td>\n",
        "      <td>1.67</td>\n",
        "      <td>1.27</td>\n",
        "      <td>2.71</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>2020-10-26</th>\n",
        "      <td>1.48</td>\n",
        "      <td>0.87</td>\n",
        "      <td>0.7</td>\n",
        "      <td>1.56</td>\n",
        "      <td>0.68</td>\n",
        "      <td>1.33</td>\n",
        "      <td>0.81</td>\n",
        "      <td>0.95</td>\n",
        "      <td>29.33</td>\n",
        "      <td>1.23</td>\n",
        "      <td>1.12</td>\n",
        "      <td>4.41</td>\n",
        "      <td>1.11</td>\n",
        "      <td>311.88</td>\n",
        "      <td>0.65</td>\n",
        "      <td>0.55</td>\n",
        "      <td>1.67</td>\n",
        "      <td>1.27</td>\n",
        "      <td>2.71</td>\n",
        "    </tr>\n",
        "  </tbody>\n",
        "</table>\n",
        "</div>"
       ],
       "output_type": "pyout",
       "prompt_number": 14,
       "text": [
        "Country     Algeria  Bahrain  Bangladesh  Belarus  Bolivia  Brazil  \\\n",
        "Date                                                                 \n",
        "2020-10-22     1.48     0.87         0.7     1.56     0.68    1.33   \n",
        "2020-10-23     1.48     0.87         0.7     1.56     0.68    1.33   \n",
        "2020-10-24     1.48     0.87         0.7     1.56     0.68    1.33   \n",
        "2020-10-25     1.48     0.87         0.7     1.56     0.68    1.33   \n",
        "2020-10-26     1.48     0.87         0.7     1.56     0.68    1.33   \n",
        "\n",
        "Country     Dominican Republic  Egypt  France  Iran  Iraq  Italy  Kuwait  \\\n",
        "Date                                                                       \n",
        "2020-10-22                0.81   0.95   29.33  1.23  1.12   4.41    1.11   \n",
        "2020-10-23                0.81   0.95   29.33  1.23  1.12   4.41    1.11   \n",
        "2020-10-24                0.81   0.95   29.33  1.23  1.12   4.41    1.11   \n",
        "2020-10-25                0.81   0.95   29.33  1.23  1.12   4.41    1.11   \n",
        "2020-10-26                0.81   0.95   29.33  1.23  1.12   4.41    1.11   \n",
        "\n",
        "Country     Latvia  Nigeria  Peru  Russia  Turkey  United States  \n",
        "Date                                                              \n",
        "2020-10-22  311.88     0.65  0.55    1.67    1.27           2.71  \n",
        "2020-10-23  311.88     0.65  0.55    1.67    1.27           2.71  \n",
        "2020-10-24  311.88     0.65  0.55    1.67    1.27           2.71  \n",
        "2020-10-25  311.88     0.65  0.55    1.67    1.27           2.71  \n",
        "2020-10-26  311.88     0.65  0.55    1.67    1.27           2.71  "
       ]
      }
     ],
     "prompt_number": 14
    },
    {
     "cell_type": "heading",
     "level": 3,
     "metadata": {},
     "source": [
      "$\\rho$: Effective contact rate $\\mathrm{[-]}$"
     ]
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "analyser.history(\"rho\", roll_window=None).tail()"
     ],
     "language": "python",
     "metadata": {},
     "outputs": [
      {
       "output_type": "display_data",
       "png": "iVBORw0KGgoAAAANSUhEUgAAAn0AAAGmCAYAAAAJYjK8AAAAOXRFWHRTb2Z0d2FyZQBNYXRwbG90bGliIHZlcnNpb24zLjMuMiwgaHR0cHM6Ly9tYXRwbG90bGliLm9yZy8vihELAAAACXBIWXMAAAsTAAALEwEAmpwYAADvmUlEQVR4nOydd5hjZdn/P/c5SSbTZ3tfloWl996L2EVR5IfAK4io+IrlRcWKBTuv4is2bCjYABUbIih1pZcFFrYAC9v77O70lkly7t8f5ySTmUnPyUwy83yua65JzjnPc560k2/uKqqKwWAwGAwGg2FiY433AgwGg8FgMBgM5ceIPoPBYDAYDIZJgBF9BoPBYDAYDJMAI/oMBoPBYDAYJgFG9BkMBoPBYDBMAozoMxgMBoPBYJgEGNFnqChEZJWI/Nd4r6NURORoEVkuIt0icnMB4zaIyKU+r6VHRE71c04/EZGlInLNeK/DYDAYJjqB8V6AYXIgIkuBpap6zYjtNwOo6qXe/4PznO8M4EFVFf9W6Svfwn28R4z3QlS1YbzXMNHwROoZqnrGOC/FYDAY8mZSW/pE5BQReUJEHhORT473egxjj4gEyzT1YmB5AeuwRMQu01oM44CIBESkUn+UGAyGScikFn3AOuA0VT0JOFtE6sZ7QZOdVPemiLSIyG0isltEukRkjYicJyILgbu9Y3q8v4959w8WkXtEZI+IbBSR60QkPGL+L4vIvSLSDXxWRPpE5KQR6/htNresiJwjIs+JSKeIrBaR93nbbRHpwRV9P/XW9s404xeJiIrI+0RkJdAHHOjtnicid3uu4VdE5JwRYz8gIi96z8lzIvLWHM+pepZRROQM7/47vOezS0T+LSJzcsxxiYg87z3eVSJyQcq+OSLyTxFp9eZ7WkReM2L8wSJyp4jsFJEOEXlYRKalHNIkIrd44zeLyOU51rNQRG4Vka3empaJyP7evloR+a73+u/x3g8HpYy9eeRrO9LF7D1HV3g/CHtE5IXEe0Tc8IPPA6emvP+OTHluLxCRV3Ff0w+LyMsjztXkjTkj22M0GAwG31FV8+e2orsPCI/3OibqH7AUuCbN9puBm1PubwAu9W5/A/gn0AgIsBdwkLfvDPftO2yuJmC7Ny4MLMK1tv1gxPzbgOO9OeuAm0asYQrQD5yQ4bGcAESAtwM2cBrQCZyb7nFkmGMRoMBDwHzcUIuQN24DcCTuj7JPeXM3eOPOB9qBU70x7/DWckyWcymuKzL5vAG/AZqBFuBx4JdZxl/qrelob02neGs6xds/31tHvfcYvuDtn+7tnw20AV/1XssAcCLQmPLeaPfWZnmPMQbsnWE9dcCrwI3ANG/M4cBcb/8NwLPe+yUMXAtsTTnfzamvd7r3p/ccPQvs4633h8DalP3X4LrvU+dIPLe3A1O9czcCXYnn3zvuQ8CL4/2ZNH/mz/xNvr+qs/R5lpv13i/qQ0bs209EHvcsGI+LyJI853wd7gV9oCyLNiT4rGflSf4BF2U5fhD3S/0AQFR1o6quznL8W7z/X1LVAVXdgCtA3i8yzM32S1V9Ul36gJ8A54tIs7f/EmCNqj6R4TzvBf6uqn9T1biqPgT8AshqncrAV1R1i6rGVHXQ2/ZzVX1OVR1vbU3A/t6+9wG/UNWHvTF/Bf4BvL/A835WVTtVtQP4PXBclmM/AXxNVZ9RVUdVHwFuwRWDeOv/q6r2quqgqn4dV/wc642/GNikql9S1W5v3Y+ranfKOf6kqku9+f8IdABHZVjPW3Cfkw+p6h5vzPOquk1ELNzX5wve+2UAuBpXnL8lw3yZuE5V16pqDPgZsHiEdTITn1HVNu892A38juHvjQ8APy9wLQaDwVAyFSX6RCQsInuN2NYgInNTNv0N17KyMc0UPwV+rKr7AT/GvVAjIgd57pvUv896++YDnwNMTF/5uVZVW1L/cMVDJr4D3INr0dktIn8UkcVZjl8AbFTVeMq2V4FaYEbKtvWpg1T1KeBF4N3epg/gvXeynGfdiG2vAguzjMnE+jTbtqWsrce72ejnuVV1W8rdnpT507EE+P4IsX4xMBdARKaKyK/EdZ13efubgJne+EXAy6OnHca2EfezrWkRsF5Vo2n2Tce1sCWfI+/9sIHCX5+RzxFZ1pTKyNf0J8C5IjJNRI7BdeP/usC1GAwGQ8lUlOgDDgbuTYnNacb90n9z4gBVfURVN48cKCIzcS0Dt3qbbgWOEpEZqrpaVc8Y8XetiNTguno+lPLlaqgQVLXPsw4dDuwLxHFdsQBOmiGbgb08a0+CfXBdtbtStqUb+xPgA17c1iJc60wmNgN7j9i2D7Apy5hMpFtLNvw8d77sAC4fIdgbVDXxubzWW9PJuC7jKbguzYR1dQOwn4/r2QDsLemTcHYDA6Q8R+ImyOzF0HPUjeuKTmUuhZHxdfMstKn3VwDLcC3IlwO3q2pbgeczGAyGkqko0aeqz+BaWf4pIqcA9wK3qeqNeQxfAGxNWHm8/9u87Zm4CDgI+Jln/ZtX0gMw+IqIvM1LAAjgBsX34wo/cIUIiR8IHv/EFRpfEZEaz2r8NeBXqqo5Tncrrtj7Ie57rivLsTcDbxeRt4qbuHEK7vs2n/dpqfwKV5ye7J37HOBt3vZycT3wZRE5Rtws4xoROVZEjvb2N+O+Nu24VravA6llYn6DK8a/7FnuAyJyoojkYzVLx524ovJHnpXREpHDRGSuJ7huBr7mJXuEcWMJFff9Aa4AO8sLBwmKyJWMFtK52OE9ppo8j/8JbizfhWS3IhsMBkPZqCjRB6Cq/wE+DTyMGyj9gzKe6yZVnZti/dtarnMZimJvXHd+B24g/ixccYWqrsEVaI94LsePeELtdbhJAtvx3kO4yRBZUdVe4Le41uKsX8qq+jjul/fXcIXOjcCnVfX2Qh9goajqH3AzR3/pnfsrwLs8F3W5zvl9XOH0M9yEjK24rveEteyLuMJvF64bdyewJWX8TtyQjBNwrXS7gG8DRZXLUdV+4Cxci+Jq3OfhVwwJzU/ivvaPMJS08/qUGMLfA38CnsC1nLYAjxa4jD/gutW3e++/I3Icf7u33k1eTKTBYDCMOZLbADK2iMgsXAvfP3C/WC9I94UmIhuAs1V1pXd/JrAGmKaqcc+lswdYoqq7Ro43GEYiIh8HLlHVI8d7LYaJh4g8j5tEVLYfsgaDwZCNirL0iVsr7D7gf1X1auD/AbfJiBpq6VDVVtzyHBd6my4EnjOCz5APIjId+AiuK9Ng8BURORc3rvDmcV6KwWCYxFSUpc/LzDxMVf+Wsu0wYLaq3uPd/wFwLm7tr93AHvVad4nIAbhZcVNwXT6XqGqurEHDJEdEvg18GNeVfMmI7F+DoSREZDtuyZiPeOVoDAaDYVyoKNFnMBgMBoPBYCgPFeXeNRgMBoPBYDCUByP6DAaDwWAwGCYBgfFeAMD06dN10aJF470Mg8FgMBh845lnntmtqjNyH2kwjA0VIfoWLVrEsmXLxnsZBoPBYDD4hoikaxdqMIwbxr1rMBgMBoPBMAkwos9gMBgMBoNhEmBEn8FgMBgMBsMkwIg+g8FgMBgMhkmAEX0Gg8FgMBgMkwAj+gwGg8FgMBgmAUb0GQwGg8FgMEwCjOgzGAwGg8FgmAQY0WcwGAwGg8EwCTCiz2AwGAwGg2ESYESfwWAwGAwGwyTAiD6DwWAwGAyGSYARfQaDwWAwGAyTACP6DAaDwWAwGCYBgfFewJiw/mFY8afxXkV+hOrhjM9CuHm8V2IwGAwGg2ECMTlEX8cmWPPv8V5FbuKD0N8G+7wGlrxuvFdjMBgMBoNhAjE5RN+R/+X+VTpbn4VfnAnqjPdKDAaDwWAwTDBMTF8lId7L4cTHdx0Gg8FgMBgmHEb0VRIJ0WcsfQaDwWAwGHzGiL5Kwog+g8FgMBgMZcKIvkrCiD6DwWAwGAxlwoi+SsKIPoPBYDAYDGXCiL5KwrLd/0b0GQwGg8Fg8Bkj+ioJY+kzGAwGg8FQJozoqyRE3P9G9BkMBoPBYPAZI/oqCWPpMxgMBoPBUCaM6KskjOgzGAwGg8FQJozoqySM6DMYDAaDwVAmjOirJIzoMxgMBoPBUCaM6KskxJRsMRgMBoPBUB6M6KskEpY+Jz6+6zAYDAaDwTDhMKKvkki6d3V812EwGAwGg2HCYURfJWHq9BkMBoPBYCgTRvRVEiaRw2AwGAwGQ5kwoq+SMKLPYDAYDAZDmTCir5Iwos9gMBgMBkOZMKKvkrBMyRaDwWAwGAzlwYi+SiJp6TMlWwwGg8FgMPiLEX2VhHHvGgwGg8FgKBNG9FUSpk6fwWAwGAyGMmFEXyVhLH0Gg8FgMBjKRGC8F2BIwRRnNhgMY0y8s5Pozp3jvYy8kUCA0KJFiGVsFgZDoRjRV2mIZUSfwWAYM9affz7RjZvGexkFMfuaa5hywbvGexkGQ9VhRF+lIbYRfQaDYcyIt7VTf/pptLzj3PFeSk40HmPbJ68i3tEx3ksxGKoSI/oqDbHAMSVbDAbD2KDxODWL96HpjW8Y76XkRGOu6DM/jA2G4jBBEZWGce8aDIaxJBZDAvZ4ryI/vDg+jZtrpMFQDEb0VRpG9BkMhjFE43Gwq0P0JZM3HHONNBiKwYi+SkMsU6fPYDCMCaoK8ThiV1Gkj2Wh5oexwVAURvRVGsbSZzAYxoq4Gz9cNe5dcF28xr1rMBSFEX2VhmVEn8FgGBvUE31UkaVPzDXSYCgaI/oqDWPpMxgMY4RGYwBIlcT0Aa5718T0GQxFYURfpSEWqCnZYjAYxoC4J/qqyL0rxr1rMBSNEX2VhrH0GQyGMaIa3bsmBMZgKB4j+ioNI/oMBsMYobGEpa+6RJ86psKBwVAMRvRVGkb0GQyGsaIKs3dd964JgTEYisGIvkrD1OkzGAxjRLW6d02dPoOhOMr+SReRDcCA9wfwGVX9d7nPW7UYS5/BYBgrYtWXyIFlgXHvGgxFMVY/785T1ZVjdK7qxog+g8EwRiQsfdVUskUsCxzj3jUYiqEibPq7du3imGOOSd6//PLLufzyy8dxReOImAuawWAYGzRWpe5dU6fPYCiKsfqk/15EBHgE+LyqdqTunDFjBsuWLRujpVQ4xtJnMBjGiiqs04clpk6fwVAkY5HIcaqqHg4cCwjwozE4Z/ViRJ/BYBgjhhI5qkf0iWWba6TBUCRlF32qutn7HwFuAE4u9zmrGiP6DAbDGJGs01d17l2TyGEwFENZRZ+I1ItIs3dbgAuA5eU8Z9VjRJ/BYBgrqrFOn4ip02cwFEm5f97NAv4sIjZgA6uBK8p8zurGMnX6DAbD2DCUyFE9og/bNnX6DIYiKavoU9V1wJHlPMeEw1j6DAbDGKHxamzDJqZOn8FQJKYjR6UhFqhxXRgMhjGgKuv02aaslcFQJFX0884f4qrcv6drvJeRkePjSjQyyLO7O4ueY0owwLHN9T6uymAwTESqt06fsfQZDMVQRZ90f4g4yiUr1o/3MjJyZ98g3YO9Ja/xyRMOZK/aGp9WZTAYJiJarXX6THFmg6EoJp3oq7GEfx2933gvIyP7vlKPBmqLXuMj7d18fd12+kzxUoPBkIsqde+qce8aDEUx6USfLcIRTXXjvYzMBAJgU/Qat0UGAdeNbTAYDNmoVveuSeQwGIrDJHJUGmKXVLLFFgHA2PkMBkNOqtC9K2LcuwZDsRjRV2mIlFSyRbz/5oewwWDIRcLSV03uXWzj3jUYisWIvkpDrJLKESQtfca9azAYcpBI5MDU6TOkICJTRKRfRL6fsu0aEbmuDOe6S0T28XteQ3qM6Ks0SizOnHhBjfPDYDDkpBoTOcQy7t3ycxHwBHChiITKcQIRsUREVPXNqrq2HOcwjKaKft5NEkoVfZ6lzyRyGAyGXFRtG7ZodLxXURYWffaf1wNHlGn65RuufcuVeR57GfBp4HPAOcCfUnd6QvBHwBlAK7AcmK2q53n7PwO8E1djbAU+oKo7ROQa4GCgGVgInCgizwFnq+pKEfkkcIE3bgD4kKouL+7hGtJhLH2VRomiz/aC+szvYIPBkItqbMMmpk5fWRGRw4BpwAPATbgCcCQfxBVtBwGvBY5JGf9uYB/gBFU9CrgL+G7K2OOBi1T1AFVtHzHvb1T1WFU9Evgi8FN/HpUhQfV80icLJYq+oUQOY+kzGAw5qEL3LmJN2ESOAixx5eR9uOJLReQvwA9FZN6IY84EfquqMSAmIrcCp3r73oYrAp8V1/MUAFJbTN2lqrsznPtoEfk8MBXXdlG5RXWrFCP6Kg3L9sW9a+KcDQZDLpLu3Sqy9GGbOn3lwnPbXgREROQSb3MQuLSQaYCvq+qvMuzvyXLu24HTVPVZEZmL6xo2+Ihx71YaYpVWp8/7b5wfBoMhF0n3bhVZ+kwiR1k5B3hZVeer6iJVXQS8ntGibynwXyISEJEw8K6UfXcAV4jIFAARqRGRw/M4dxjXELXZu39F0Y/CkJEq+nk3SRABLd51YZmSLQaDIV8Slj6rin7/WxZqRF+5uAz4feoGVX1cRCzgdOAZb/NPgcOB1cBu4MWU438rItOB/3juXQu4AXg+24lVtUtEvgQ8LSJ7cK1+Bp8xoq/SKDl71/0/MSNeDAaDn2gsBoEA3pdzdWAbS1+5UNU3Zdi+z4j7gyJypap2i0gNrnXvTyn7vwd8L80816TZtijl9reBb6fs/laBD8GQAyP6Ko2S6/QZS5/BYMgPjceqyrULxr1bQdznCb4wcB9w8/gux5APRvRVGj5Z+kycs8FgyEksXnWiz23DZkTfeKOqx4/3GgyFU0WBHJOEkuv0eZY+jOozGAzZ0XgcgsHxXkZBmDp9BkPxGNFXaUiJJVu8/8bSZzAYclGN7l2Me9dgKBoj+iqNEi9oyTZsxtJnMBhyUZXuXZO9azAUixF9lUbJiRwuJo/DYDDkQuPx6irMjEnkMBhKwYi+SkPEn5ItRvUZDIZcVKN717LQEq6RhuyIyAYReUlElnv/fyEiWQM/RWSpiJztw7nfJiLfKXUeQ2aM6Ks0fEvkMBgMhuxolbp3iZsrXJk5T1WPAA72/s71Y1IRyWpWVtU7VPVTfpzLkB4j+iqNEkVfosSqSeQwGAy5MO5dQw7C3l+7iJwlIo+LyHMiskJELhhx7Oki8oiIrBORaxMbPSvg9SLyBHCH17rt3yKyTERWichNXt9dRORSEbndu32GZ238mYi8ICLPi8iBY/XAJyrV9WmfDJRcp88kchgMhjypWvfuBL2+XdN8PXBEmWZfzjWdV+Z57O0iMgDsA9yjqvd4vXRPUdW4iMwCnhGRf6tquzdmIXAa0AisFZFfquor3r7F3tiYuO1fLlLVPd7tX+O2f/tpmnUcDLxXVT8oIlcDXwD+q/CHbkhgLH2VhlVayZbE5XuiXhMNBoN/aCwOgeoSfWJbEDeNJstMwr07AwiLyJXe7dtFZCXwb2AqsH/KmD+pqqOqnbi9eFNbt92iqjHvtgVcJSLLgReA15BZ6L6sqs95t58YMaehCIylr9IQC7T4C5plijMbDIY8cev0VdnXwER27+ZviRsTVHVARO4Ezgbeittj91xVVRFZg+v6TTCQcjvOcH3Rk3L7IuAU4FSvd+/ngf0yLCHbnIYiMJa+SkOsksx0djJ716f1GAyGiUs1JnJYpk7fWCEiFnA6sAZoATZ4gu91wL5FTtsC7PYEXzOuCDSMEUY1VxolJ3J4lj7j3zUYDDlwEzmqS/SJNYEtfZVDIqYvBKwEvgocA9wgIl8BnsZ1zRbDb4BzROQloBV4GKgtfcmGfDCir9LwqU6fuSQaDIZcVKV7dyInclQAqroow657gSUZxpyR6X6afZ3AazPMczNws3d7Ka7QJN19Q3EY926lUWqdPu+/sfQZDIacVKV7V0wih8FQJEb0VRo+lWwxdfoMBkMuqtO9axv3rsFQJEb0VRpSWsmWZBs2n5ZjMBgmLsa9azBMLqrs016ZtH73uwxu2OjLXE21z9FYG2PrRz9W1PgBy4a3v4f2v/+dLWtW+LKm8cCeNpXZX/xi9bmeDIZqIhZHqs3SZ+r0GQxFY0SfD0S372BwwwZf5orP6UTqYHDDeoaaquVPzBNJ0Y5O39Y01sS7uojt3Mm097+f0Pz5470cg2HCovE4VJulzytrpaqIFH6NNBgmM1X2aa9M5l33Hf8mW/q/sPSbLP7738Eq3PsecxT+8zwtF7+bxV+8yr91jSEdf/sb2z/7ORO3YzCUm1g1tmHzhJ6qW+3AYDDkjYnpqzTEe0mKjOtLlmyp4pCXxJeQGheOwVBWNF6N7l1vveb6YDAUjBF9lUbil2uRoi/xuzdezW3YEsLXWPoMhrJSte5dMMkcZUJENojISyKy3Pv/CxEJlulcS0Xk7CLXeEiR5zxDRJYVM3YiYERfpVGipU9EsCipk9u4I7YRfQbDmFDN7l1zfSgn56nqEcDB3t+547scg19U2U+8SYDlXYBLLNtS1ZfDxC95c1E3GMpK1dbpgwnp3j3014deDxxRpumXr3jPiisLHBP2/tpF5Czg6979APANVb0NXIsdbmu2E4G5wB9V9bPevoOAm4B6YDluz96vq+qdqScSkYuA/8Ft/QZwlare7+07FbjB2/4fUrIcRWR/4Hpgujf2elW9SUTqgF/jitYo8LKqnu8NC4jIz7z1KnCBqr5Y4HNTlRjRV2kkLX3FX9BsEeLVbOozlj6DYUzQeLwq6/SBce+WmUTv3X2Ae1T1HhGZApyiqnERmQU8IyL/VtV2b8xC4DSgEVgrIr9U1VeA3wLfU9XficgxwJMZzvlv4FZVVU/I3Q/MF5Ea4Dbgv1R1qYicD3wYQEQCwC3evpdEpBFYJiKPAwcCTap6kHfslJRzHQy8V1U/KCJXA18A/suH563iqbJP+ySgRPcuuD77qk7kSFzU40b0GQxlpQrduzKB3btFWOLKxXmqulJEwsCfReRK4C7gVyKyBIgBU4H9gSe8MX9SVQfoFJEXgX1EZCdwCK4wQ1WXicgLGc65D3CriMzDtczNFpHZwEygz+u9i6r+UUR+7o3ZD1fc3ZZSvqfG2/Y8cKCI/BhYCvwz5Vwvq+pz3u0ngLcW+gRVK0b0VRo+iD4Rqe5EDqv058BgMOSmGt27iRAYk91fflR1QETuBM7GFUZ3AOd61rg1uK7eBAMpt+MM1xf5fCHdCnxSVf8mIhbQN2L+YUvz/guw24s/HIWIHAycBbwJ+KaIHJrHWic0JpGj0kiKvuJFm13a8HEnYembiDE7BkMlUZ3u3ZQ6fYay4omv04E1QAuwwRN8r8ONzcuKqnYBq4ALvfmOAg7NcHgLsN67fRmuxQ7gZaDWi+tDRM7zjk3s6xORi1PWfICINInIfCCuqn8DPg7MwLVOTmqq7NM+CfDDvSuCU9WWPu+XfDX7qA2GCkdVIRqtvjp95kfhWJCI6QsBK4GvAscAN4jIV3CTNjK5aUdyCa5b+HPACu+vM81xVwJ/E5F24F/AHgBVjYjIhd65FXgI2OTti4nIW4HrReRTuDaPncD5uOLyWs/tawPfUtVtIrJfQc/EBMOIvkrDB9FnC8SrWC8NlWwxF3WDoWwkYuKqLKbP/CgsL6q6KMOue4ElGcackeX+BuB4z0J4EG583cqRx6nqb3GTPhJ8PmXfwwy3EH4kZd8rwFvSLOtu72/kWpfiCti09yc6RvRVGn7E9CE41ez6MIkcBkPZScTEVa9711wfqoSTgO/IUKbFB1Iyfg1jTJV92icBUrqVq+rr9JlEDoOh/MRiAEiwur4GjHu3ulDVe4B7xnsdBheTyFFp+OHerXJL31DJFnNRNxjKRfLzVa3u3Sq+xhkM44URfZWGL4kc1W7p876ETMyOwVA2NGHpqzL37kSu02cwlBsj+ioNn0RfNXfkGLqoG0ufwVA2EjF9VZa9a+r0GQzFMyaiT0S+LCIqIoeMxfmqGl86ckh1G8nsRHae+SVvMJSL6nXvmjp9BkOxlF30ecUYTwA2lvtcE4KEa7OEC5ol+ZU/r1iSySxG9BkMZaNq3bvm+lBORGSDiLwkIsu9/78QkWCOMTeLyEeyHWOoDMoq+rxGyT8GPpTtuF27dnHMMcck/37+859nO3xiI6WXI7CR6nbvenX6jKXPYCgfWvXuXXN9KCPnea3NDvb+zvX7BCJSXb82JgjlftK/CvxOVTekNEMexYwZM1i2bFmZl1IlJN27k7lki/clZC7qBkPZ0FjCvVtl372mTt9YEvb+2kUkBHwDty1bDW5Hjg+pak/qABE5C/i6Ny4AfENVb/P2LQWW43r/2kTk28B1qnqMt/+MxH0R2R+4GajD7ahxs6peV8bHOiko26ddRE7ErXL92XKdY0LiU3Hmqrb0mYu6wVB+4p57t8osfRPZvfviAQdeDxxRpumXH/jSi1fmeWyiDds+wD2qeo+IfAHoVNXjAETkf4HPAVePGPsscIqqxkVkFvCMiPw7pSDzYm9/zBN5mbgCuENVv+Wdb0qeazdkoZw/8U4HDgTWe1a++cC/ReS9XrFGQzp8asNWxZpvKJHDWPoMhrJRvYkcpmPPGHCeqq4UkTDwZxG5Engb0CQi53nH1ADPpxk7A7fX7hIgBkwF9gee8PbfoqqxPNbwEPBtEakDHvT+DCVSNtGnqtcC1ybui8gG4GxVXVmuc04IfKvTV8WqT0zJFoOh3CTcu1WbyDEBPQEFWOLGBFUdEJE7gbMBAa5Q1QdyDPsJcAdwrtdvdw2uqzdBqjs4xvDcguRxqvpnEXkceD2ux/Ay4N1FPxgDYOr0VR4+deSIV7PmMyVbDIbyU6XuXSawe7fSEBEL12u3BlfIfUJEar19jSJyYJphLcAGT/C9Dtg3yynWAYtFZIrXm/fClHPvC+xQ1ZuBrwDH+fCQJj1j9hNPVReN1bmqGkmUbCkhpk+qvJlFsremuagbDOWi6t27RvSVk0RMXwhYiZuU2QNcAzwtIg5uZbCvAC+OGPtZ4AYR+QrwNG7CR1pUdZuIfBd4BtgJ/Ac3WxjgfOC/RGTQO9f/+PPQJjfVZdefDCQtfSXU6UOq2r07kd03BkOlUL1t2Iylr5zkMNBczejEDVT10pTb9wJLMsx9RpptXwO+lmb7N4Fv5lqvoTCMe7fS8CGezZ4glj4TqG0wlJFqrdMn5vpgMBSLEX2Vhi+JHNVt6cNY+gyGsjNUp6+6RF+ieLu5PhgMhWNEX6XhS+9dJkYih2mobjCUDU0mclSXe9ckchgMxWNEX6Xhl6Wvmgv1JS/qVfwYDIZKJ+HerTJLn3HvGgzFY0RfpeGTpa+a5dJQoLax9BkM5aJa27AZ967BUDxG9FUaVuklW2yp7jZsJpHDYBgDqrxOnynZYjAUjhF9lYZvHTmqF1OyxWAoP1qt7l0T02cwFI0RfZWGD6JPwFj6DAZDVpLu3SpL5DB1+sqLiGwQkZdEZLn3/xciEswxZqmInO3d/qqIvCuP8yxPdPcwjB3V9WmfDCTq9JXo3q1mzZcsIWEu6gZD+Ui4d6vU0mfcu2XlPFVdKSI28DBwLvCHfAaq6pfyPO6I4pdnKBYj+ioN495N/pJXk8hhMJSNqq3TN4EtfT/+7weuB44o0/TLP/zT11xZ4Jiw99cuIg3AD4FjvX2/UdVvjxwgIjcDy4BfAZuAA1R1t7fvOqBbVb8iIgo0qmqPt/103LZvu4HLVHVjoQ/QkBvj3q00fBB9NhMjkcOUbDEYyoep02fIwu0ishzYAaxX1XuAL+JqhkOBk4D3iMibMk2gqn3A34CLAEQk4N3+dZrDr1XVY1X1cOBW4H/9eyiGVKrs0z4J8COmb4JY+kzJFoOhjFRrIkeiTt8E/FFYhCWuXCTcu2HgzyJyJfBa4H9UVYEuEbnV23Z3lnluBn7g/b0JeElVN6Q57k0i8mGgAaNLyoqx9FUaUnrJFosqL84MYFkmZsdgKCNVX6fP/CgsO6o6ANwJvK7I8Y8AjSJyKHApcNPIY0RkL+B7wIWqeghwGa5L2VAGquvTXkV88W8reXZTe8HjFsQ38VPgW3et5pH7phZ17nULwvTV2rzlBw8XNb4SuBbhj09u5O6Ux9BcG+RnFx9NYzhrIpnBYMgDjZk6fYbsiIiFG2u3BlgJvE9EHsW1yF0AXJXHNL8GPgmcBlycZn8TMAjs8M733z4s3ZABI/rKxNT6EHOaC/+xMn0wDJ0wtdZmTkNxP3a2B20ilhR1/opBLJpCVvIx7OqO8NjaPWzc08ch85rHeXEGwwSgWrN3EyEwpqRTObldRAZwEytWAl8FosCPgBXeMb9V1X/lMddvgPXATV6c3zBUdYWI/AlYjZvEcReuQDSUASP6ysTHX7dfcQN3T4EfwQdP3ZsPHnZs7uPT8JHVG3mqs5cbX39kcWuoAF66PsAbDprFJe9xn4MHXtrJZTcvIz4B43gMhvGgarN3TRu2sqKqi7LsvjTDmDNSbl86Yt8mYNSbTFUl5fb/AP+TsvvL+azVUDgmpq/S8KFOn1uypbrFkYgMi9mxPZdOzIg+g8EXNB4DyxpKnKoWjHvXYCiaKvu0TwL8qNNHlRdnBrDtYdl5AcsVw8bSZzD4RDxefeVaYOiHsRF9BkPBVOEnfoKTQfTt3LmTbdu25TVFzfY25vUO8Nxzg36vLiOzZ89mzpw5vs0nlpUsKQFgiRF9BoOfaCxedS3YYCgG0Vj6DIbCqb5P/ETHSl+y5ZVXXuG+++7La4pa4Cjg76v8XVo2pk+fzkc+8hH/JrQsNOU5CNhG9BkMfqLxWPUlcYAp3m4wlIARfZVGBkvfMcccw8EHH5zXFNeu284Dbd3cc0yRySQFcs899+Rthcwb2x6WnWd77t2Y+XVvMPhDLF6Vok+S7l1Tp89gKBQj+iqNpOgbfkELh8OEw/mVYLEae+ntjzNlyhS/V5eWcDiM47MYE5Fhwtf2LvRVX3TaULHEe3qTZUwmA05/f1W6dzHuXYOhaKrwEz/B8SWRY2w9HyKC+i3GbBtNZ+mLG9Fn8J+eRx5l8wc+QPVnQBVGcO7c8V5C4Yhx75YTEdkADHh/YeBh4ApVjfow99uAU1X1UyJyBnCdqh5T6ryG/DGir9JIir7iL2i2CPEx/PKyLMt3Sx+WDEvkMDF9hnIS3bYVVJn+kY9gNzWO93LGjPCBB473EgrGtGEbExK9d21c0Xcu8IfETq9zhmqBv/ZV9Q7gDl9XaigII/oqDR8sfSIwlo6Pclj6xLKHJXIk3LtjKWYNkwjvx0TL+f+P4MyZ47wYQ1aSdfrMtWAMCHt/7SJyDXAw0AwsBE4Ukatx27SFcLtpXKaqG0Xk/UAis0+Aw4AjgCOBs1X1vLF8EIYhjOirNPwozszYxr6Vx9JnpU3kMJY+Q1nwPm9VV6h4EiITuE7fd9919vW44qgcLP/kH+68Ms9jE23Y9gHuUdV7ROQk4HjgKFXdDSAi16rqVd7t9wP/C1ygqjcCN3rbvwG8itu+rXrbRE0QjOirNCR9yZZCsEUmgKXPGvYcBBIdOUxMn6EMJONHjeirfJKJHMa9W0YS7t0w8GcRudLbfldC8Hm8SUQ+DDSQRk+IyPuA1wCvUVUnKdgN44YRfePAqt2r0Axt0qzBPg4CtndvZc/ulUXNv6c/TlyVlUWOL5S2SBtxJ+7r+SyiRPraaffm3Nk1gBXezOa+MCt3d/h2nkpDEPabsh9BOzjeS5lcOMbSVzVM4Dp9BVjixgRVHRCRO4GzgaeBnsQ+EdkL+B5wrKqu9yyBt6Tsfz3wKdzEjf6xXbkhE0b0jQPv+dd7iMQjafeFHYengVtf/D03bf9HUfP3Nr+TWNPbuPCfF5awyvw5pO0Q9o3t6+v5ruuJsX37Nr6bMmf93vDLde7fROb9h76f/znqf3IfaPAPnYSWvsFe2P586fNM3x/qp5U+T55MZPdupeElbJwOrEmzuwkYBHZ4x/13yrhDgZ8Bb1DVXWOxVkN+GNE3DnzvjO8lLX3925XB9pRfrE6MV1/+LifUncaSOScWNf9jPUGe2BLjE3N+6Mdyc7J1cB07OjfxTR/PF5z1Z+a3NPDNOW8AoG8wzk2PbeC0/aZz6Nxm385TDKGpQu3s8rgpPvvwZ+mMdJZlbkNmJqV7976vwFM/K32efV4DF/+19HkKwbaNe7e8JGL6QsBK4KvAsF+iqrpCRP4ErMZN4rgLOM3b/Qlcl+8fU1y67xqDdRtyUJGir3/1HmK7J641+Aj2Tt5e+9wudqxL/ZIP8CqfgZUQLNJbejpRTqfkkkp5Y4cFaiH4T//mHJz/TmBozmZsrmQfeA73LwuOwqZBh3J9JYQbgrzvulPLMnetXYtTQjynoUgmYyJHz05oXgDn/Kj4OR74BvTuzn2c31jWhHTvVgKquijDrmvSHPs/DBeDX/a2vzfDHC8DN3vHLAVMjb4xpiJFX9+zO+lfuWe8lzEmTAem11ZfK6RUBm2LrcDBtRZCZQTqHnP+EuzF/lsEn79vM2ue3un7vAlsyybmTJ6uEJVCsrvDZBJ9gz1QPwMWn1H8HMtugtbVvi0pX0TE1OkzGIqgIkXf1Hftj/6/8V7FOOE4cO18OPUqOPUTRU1xw6ZWvrthBy+ecgihMfgSe/XRODy0ntlfOgHbp16eGy++BLu5mfk/cl3GfZEYx37zPq56/X689+TFGcfFWvto/fFyGppC1M1t8GUtqdQ2hcpaH8wSy1j6xoPJ6N6N9EBNiZ+RYC1EB/xZTwbi8ThbtmwhnlKsfcesWfRGY/Ssm+ABvgaDz1Sk6JOgXSH2ovHABhkAOwY1xQkoDVn0BwQN2Vh2+b/E7KC3zqBgBf0RfSJxiEewvOcgYEE/MGhZyW1pxyX2lalOoWVJWUWfLTYxNZa+MWcyuncHe6Bur9LmCIQhVt5QnJUrV/LXv46IGTz5JIgMwG9+U9ZzGwwTjYoUfZMesUCLd11YXuCsk6EsjN8kAnV9rdVnWcMaqg8VZ85hBUv8WiiTsUwsQdV9rOWoOWVbtrH0jQOT0r0b6a4KS18k4lY6uPDCCwmHwwBs+sAHaDjtNKZefHFZz10qX/nKV8Z7CQbDMIzoq0TEKrkjB4xd73jL+6L0tSuHbQ0ryZBowxbLYWUTTxyWyxqX0ATqKGKXQfSJEX3jQsK9O5mKx0a6IVSi6BsDS1/iurJgwQLq6uoAGOjsohlh9l4lWioNhknGJPpZW0WUKPoSWmSs+tSWw9In1vCSDJYlbk/hXGIuWcOrPI89ISpzrqNIbDGJHOOBqgOWVRbrbcUy6FNMnxODePnes4nrSupr4yZymB9HBkOhGNFXiZRq6Uu6d8eGslj60pRkCFiS09KXULx+t4VLMGRJLMv0JpFjvHB0crl2Y4MQH4RQY2nzBGq8+crn4k0n+tzwD5O9azAUyiS6ylURJYq+xKVxrNrUlsfSZ0F8+EXdtoR4Lvdu0tLn21KGYZXZfWwSOcYJJz75rHxQuqUvUOv+HwPRZ6WKctvU6SsXIrJBRF4SkedF5FUR+bvXYs3v8ywXkdo8jrtLRPbx+/xpznOGiPR561opIv8RkQPKeL5rROS6XPtE5G0i8h2/zmtEXyUiVkkBeYn4t0z9ff0m8WXpt6VvpIi0JbfoK3dAY9ndu5bt7/NoyAt1HPCp3FBVEOl2/5ca0xd0EyuIli+uL/F5GO7eLe2HsSEn56nq4aq6L/Br4C4ROd7PE6jqEfn05FXVN6vqWj/PnYXV3roOAZ7A7S08rqjqHar6Kb/mM4kclYjYviRyjNUP4cQvcF9dqnZ6S19O925C8JbJzDkWlj7j3h0HJpt7twotfcMssbY91DpvArHlsw9fDxxRpumXz7/21CsLHaSqfxGR44CrgP8nIg3AD4FjvUN+o6rfBhCRpcAzwHHAIuD7wFbgo8Bc4FOq+ifvWAUaVbVHRDYAvwFeB8wBrlPVH3nHbQDOVtWVIjIP+AGwxDv3rar6LRG5CLczSMjbfpWq3p8yPu3cOVgKnJ24IyLvAa7A1U2dwIdU9WURuRT4L9yqYvsCO4CLVXWriFwDNKjqVd4cw+4DC0XkAe+5WQVcpqrD+nB685+tqud59y9jqAvKoLcv744BRvRVIiVWm09Y+sY6kcNPC5WI5QbXpxCwrdzu3UQWS5Va+iyxjHt3PJhs7t2IJ/pKjekbA0ufSeSoCJ4E3ubd/iKubeFQoBF4XERWqOrd3v75wOnAbOBV4HuqepInHP8C/CnDOepU9UQRWQSsFJGbVbVnxDG/A+5S1XcCiMh0b/u/cQWgisj+wP3eOgqZO4mIWMA5wG3e/VOB84HTVDUiIm8CfgWc7A05BTjCE4FfxhW752WaP4VTvXE7ReRXuM/tVZkOFpEzgM8Dp6jqDk+AF/SFYURfJVJqTF95w9pGUR5Lnz1URiNxHpHcQrbaY/osm8H4YFnmNmRGHZ1c7t1Bz71bRZa+YTF91sR07xZjiRsjUn8RvRb4H3VfmC4RudXblhB9f1L3F/s2EdkDJCprPwPME5GwqqZ7w9wGoKobRKQdV7S9lFyAK3BOwrXY4R2baPy8D3CrZwmMArNFZLaq7shn7hQOEpHlwDygC9diCfBW4HDgSe/HhwBTUsY9oqove7dvBFakmTsdd6ZY6X6Ja0HNxltwLas7vMeTUbhmYhL5M6oIn+r0VbWlz7JGWTsDlhDP4baVRB29sln63P9OmdzHttjESyjMbSgSx5mclr6a6rT0YVsT0r1bwRwLrMzz2FRBF0/cV01e2DIZm0aOK8QodStwg6oeDByFa/0KFzH3alU9Alf0PQ/8xNsuwK+8eL8jvHjHhXmsK8ZwnRXOdOBYYURfJVJynb5EIsfYUBZLn2WNsqYVEtNXroDGpKWvXG3exCJuSlGMOerEJ2dMX8nFmctv6XPSCHIRy7h3xwgROQf4EPBdb9N9wPvEpRG4ALi33OvwrFqPAR9PWVvCvdsCrPduXwbUlHiuQdzH/EYRORL4B3CJiMz3zmuLyNEpQ04WkUSc4XuBB7zbrwJHi4jlPVdnM5y3iMiMNOMy8U9vHbO8dTSISEFCchJd5aoInyx9Y5XIUZaSLRkSOZxc57DGpjhzuTxLAQmYRI7xYLK5d6vM0jfKCmuNjvk1+MrtiZItwPuAN6vqk96+r+FavlYAjwO/VdV/jdG63o0rsFaKyPPe2gCuBP4mIs8Ci4E9pZ7Ic7teB3xZVR8Crgbu8M67EjfmL8GjwHUishp4DUOJFn8B2oAXvdvPjDjNw8BtIvISMBX3uc22pqXAt4D7vHU8ADQX8rhMTF8lYpWYvTvGiRxlKc6cLpEjL0uf+69cMXfJRI5yZQebRI7xYbK5dwd9KtkS8ERfmWP6rBFWWPdHoRF95UBVF+XY3wNcmmHfGdnmUlXJcHvkcYsy3N4KvD3NeX8L/DZl0+fzmXvE9qXAMSO2fTXl9u+B36cbC3QmsmtHjB8E3pHhfNdkmGvYPlW9Gbg55f4vceP/isJY+iqREuv0JY1dPi0nF+Ww9JHmou4WZ87+qETEfVeXSe+W271r6vSND5POvRvpATsEgVDuY7MRGCdLn6nTZzAURd6WPhE5CDjTu/uAqr5YniUZEIESgvktz9yV0xXqE+Ww9KWL2cmnI4c3uPy9d00iR2XTtQ1+c85QEeJcrAB6ge/6WIDfDsJ5N8P8o3MeOuYM9pRu5QO39y6MeUwflknkMFQGIy1xlU5eok9ELgauBe7yNn1ORD7jmTsNflNyIof7v7otfbbbJSF1U56iTywpm3t3TBI5jOgrnZV/ht1r4Ij/csMlcvHsKiTYDktO8ef86sBzv4MND1em6Iv0lF6uBcbMvTsqkcMyiRwGQzHka+m7Cjg6URtGRGbjFkM0oq8clJzIUf2WPqzRxVfziulLjq3O4swByyRy+MKL/4DZh8Lbb8jrcH3409C6HN6Wq0xWgWvo3OzffH4y2FN6YWZIce+OregziRwGQ3Hk7d5NKXKIVwk65xgR+RuwN67RqQf4qKouL3iVE4wNLzyX9VfqvMFBIm272b18ZKJPfuwaBLDZ8vKLNI5Bqk5r6y4Atq95Cadtly9z7unvoT9oEUx5DqZ2rKe212bD8uyWG9uJ09XaSsfyDl/WksquzVEAtr30EgOd2Z/cupYpzFy0uKD5jaXPB7q2w+Yn4cyr8x/jOK71yE+aF0JHhYq+SLc/lj7LArsGYuWN6RuZyIFlEjkMhmLIVxKsFZGvAD/z7n8AWJfHuPck+sh5tX5+hVs4cVLz929/jVg0c9eFSxfvYfe2Ae6878tFzb9u4X7w5ku4/9c/Z3Xr1mKXmTexukbYa3+W/v4mAn15xlDlw/R6nvzW0HNwiPf/z89mH/b2hR9l0zMv8ew9/peOsgILCDX+P5b+7ldoLPtzK5bFh395GzV1dXnPb4tt6vSVykt3uv8PfFv241JRx/9EjpYF0L7B3zn9YrAHwi3+zBUMl9XSl7ZOn3HvGgxFka/o+2/cJscvePfvBT6Ya9CIxsHNjF2YWUVz9sc/m9U1Yd3/YaY2LOCciz5b1PxPDzj8u72L0y98DweGyp+RuHNPG/c+/hQnvevdzJk+zZc522/7A33LljHvuu8kt33n3y+hCp9+Y/Zg+9A/ouy97zEsOPp4AMINjaMtBUWye3OEh//Uxlnv/RAzFmau//nq00/w9B1/JhoZKFz0TXRL37bl8NgPy5d9uWUZTFsCM/bPe4jGyyH6FsL6h9xM/EorBxPpgeb5uY/Lh0Bt2S19xr07dojIBtwOFqlK/u2qusHn85wBhFT1Hj/nNWQnL9Gnqq24VbcLRkRuBF6PW0HtjemO2bVrF8ccM1Qe5/LLL+fyyy8v5nRVwZ3fuzarpQ/mADF46OtFn+NDwBrvr9zEahtg0QE89sffE+jt8m/iWc0s+87Qc7Cf9//vOboavnXBFex4YR1PP+DWCz3stW/kdR/4iC9LEqsDaGPq3IXM3W9qxuP2bHXdek6ssJp7k8K9u+JPbqLFtH3LM3+gBk7+WGFCqyzu3QWuRa2/Heoyv1fGBb9i+qDslr6MiRzGvVtOzlPVfNuuFcsZQANgRN8YUkjJlrNwmxonx6hqzihpVX2/N/5i4DvAm0ceM2PGDJYtW5bvUqqe17zvv0dlpg5j6bfdL4nj3l/U/K/0DvCzzbu4YuFMFteV1I0mL9q6uln6/CqOfNNbmT11Su4BedB19930PfMss78wFJf1q0c2MBCNc8WZ+2QdW/NwLfMWHkTLufvy5F//SE9bycXZk+SbyGHb7sckHi9M9AWswMSv0xfphoZZ8NHK+cxrudy74CZzVJro8yt7F8bE0pc2pm+if04qDBF5J/ANoB/4k3e7EdfGsEhVP+wdNwvXK7g38GngIGA6MBdYhdsmbSGuB9ESkdcCt6nqtWP6gCYp+ZZsuRm3UvWzuM2KocDyt6r6WxH5uYhMU1X/voWrkEPPfH32A175BjQF4Ky0htGcdLV388Lytcw4Yh8Om+LTr/ksbN26laXPr2Kvw45i//3zd6llY+eyF2jveJgDUp6Drs1Ps6s7wmFnZS+rsX3ZUzTOamafs/Zn5QP34sT9s5xZdqINW/a3vxVwP1pOrLBzTwpLX6Sr9PZffuOo/6Kv2RN9HZthzuH+zl0Kqm5HDj/q9MG4xPS5dfom3ufkmmuuuR44okzTL7/mmmuuzPPY20Uk8aLGgLcAPwdOUNVXROTjKcf+EljtlXHrAS4HblHVPu91OxU4QlV3isivgC+q6lUi8lOgQVWv8uGxGfIkX0vfScDBqhrNd2IRaQCmqOpm7/5bcXvQtRW8yslGyXX6PGHi13pyUJY6fWlKtliSZ3FmS5JrEcvyVfQlHmvelr5Y3h8Zd9xkiOmLdFee6IvH/Xfvtix0/1da2ZZov3t98c3SFx6XOn0TUfRVEMPcuyLyNuBZVX3F2/Qr4P8AVLVNRO4ALhaRX+Amep6VMtedXh9bcAWij3WRDIWSr+gr5qpVD/xJROpxrYNtwFu1XFVtJxIl1+lzKVMpudHnK0dHDmt0ceZAvsWZUzpyWGmKPJe2rnwtfW5ZmUIFp20Z0TcelMW9WzcNgnXQscnfeUtlsMf975elLxDOv/NJEUymRI4CLHGVxg9x6/a2Ai+miENDhZFV9InIFd7NNcD9Xt295E+6bDF9nrI/wYc1Tj5KFX3eBTI+Rvq6PJa+NG3YbCGWj4CzUkWfRbzAZIrsyyrM0ucUGNNniTXxS7ZEuqFh5nivYjiODjWt9gsR18VbaaIvIdD8Et7BWuj1pz5nOtLH9JWvALshLU8CN4nIPqq6FnhP6k5VXSEie4DrgQ+PGPsWEZmhqruA9wIPeNu7gHnlXbZhJLksfcem3F4LHJpy33ziyoVll+be9f6P1e/gslj6bAtGWMlskbyu86maWSwbJx7xb13ed0++MX2FCk5bbBRNb92YKAx0QU3TeK9iOE4cyaddW6G0LKg89245LH3RsS3ZIpY96vpg8JXUmD6A9+MmXtwlIn3AnUAU6Es55kbgm96+VB4GbhORecBq4JPe9r8Cl4jIckwix5iRVfSp6ntFxAa+pKrFVQo2FE6Jlr5k3FlVW/rcL2BNKaXhtmHL43kRcYPVcd27jo+lHfJO5LA9926BiRy2uOPiGicgY9BOZTyoRPduORI5wLX0bX0G+jv8n7tYur3wKr9i+oK1ZY3py5jIYSKFyoKqLkq3XUReVtU/ebffCzylw33sZwI/0tF+982q+q4051lP+ZJWDBnI+a2iqnEReRNgRF8GPvWn51nT2uPbfN/o6Eax+MKPHy1qfH88Tqh3gG8838mPguUXDqF4HwcD37v3Zdoe9ie2J9Y6h9hpHyN8w2PJemub9/TSHYlxTo7n5dO7HXrae7nhx49y0KZOwgNdOcfkS3hQOQ24/t5X2PZM5qY00YF+9sw5l3v/tZOah/M/966+mfT2XsG5NzyOSBlESB5cetJevONInwr3jkS1QrN30wgLP5iyyK3T9797+T93qfjVkWMcEjnSJXoZys7HROT/4eqGNtyEDURkLvAgsAP42Pgtz5AP+SqCf4rIVcBvcHvoAqCqfZmHTB4aw0FaaoO+zWd32QhO0XMGYhY6OEhdOEBLyL91ZT6fe466oIXj0/MQtZXBaB/14UDSAtMatOmJxHI+L2IPErKgpTZI0LaxRX17fYK2AwxSH7SzzjlIlB4nQmNQqCvg3L1xRQb6aaoNJK1+Y8kzG9u5a8WOYaIvEouzs9MfF7kM9rIAZcCuJ+zLjP6gThyxy/AD6ahL3GQOx7+4Ul8IN8Hsw/yZK1g7DsWZbZjosa8Vhqp+A7c238jt24C0tbpU9ZoyL8tQIPle5RJWvm/jxvKJ978s30rr1/+Qjo7KKdyai7fOB5qjhL7rT8JSqMvtavHpppHxsJkJBqcQqnGD4/vicVZ097OkPszULJY+Kxxmzje/QXDWrJLW29nZyfe+t5TLTl7E0UcfXdJcCXb//Hl23Xoj+//kw1hhVx5c/dcV/HvVDn592XFZx7b+5HkkaPHryw7lH997gN2be/lCjjH50tsZ4eblj3LpSYs45LTMMci7Nm3gNw9dx1sv+iz7nZD/uX+96kWuW3YTP73wchr8irkqgPN+8hi9keEC5cO/f5b7Xmz1Zf5ZtPFkGK5bup3PnOIQtMfHmjkKRyFYBktf3VQ4fuJ2FwI8S19/2drNZSrOnCvEwmAwjCbfNmxjemWOOxHi8d6xPGXpODHU9uciJLaCkvd8cacfx4lTE3RFiFgWsUAUDQSQYHork9PTQ+8zzzCwalXJoq8cMX2SEAMpwdpuTF8+mRyMKNnif52+XF84diKRo9CSLSkxfeNBQzhAW+/wFoE7uyIcMLuRD5y6uOT5G7vXwlLYGQny4vYuDpvfUvKcvuA44+ZOr3qCYTcGOR6FQMj36dPF9IklJpHDYCiCiowU33efKi3QfYZP8/z2HW6w+/vvy+vwlas+TlfX8xx64k0ArOkd4JNPvcRPD9qLo2elb4s2sHo16899py8FTsuRvZtIk00VkpYlxON51OmzJCnKLJ+LMycSOXKVbLESJVsKzd61xln01QTYtGd41EbMUeZPqeOdR/sQ57dlByyFbupYtqG9YkSfOg7YY+9OnxAEat3/sf6yiL70MX32hKzTZzCUm4oUfRXNq/fDYJmtkL273bIKq+/I63C7q5V4pC15vB0LAHNxtjwDezKEXW7c7v1/ElaXVm5BBtyuE7r9BVi9o6S5knPuWu3eWH0nNNQBcHDHFvboLlidJb5sr5PcIO+Y+4UgPmfv5l2c2RMQxZRsAcatVl9jOED3CPdu3HEI2j657SJu6EK4oYVnNrZz2Sl7+zNvqTiO/3X6JgsBr793dADCzb5PnzmRw7h3DYZCMaKvUO7+NOx5dWzO9ceL8zrMXlxPfHZN8ngrPA+OvwXnyZ9C671px0hnAJgJj/0QtpQWhC3UAFfgPPc7eO65kuZKsqYeaEb/+t9Q417czwPOs4A/Zhl39KVgfSBRscUt2eKjgMq7OHOi926BVkbLs3COl6WvPhQYFdMXcxTbL0E04Iq+vebO5m8b2yqnHqFx7xZPMMXSVwbSxfSJjK7jaTAYcmNEX6FceBvE/Cv2m5a7P+1WuD/vprwOt1t/T3z3n9APPoKIYA0qrI0Tf82XoOWa9IM2bYW7r0Rfcw289tSSlmtFonDT39ETPwaH71fSXEn++i949pdwyT9hims9uPmx9fzxmS3c9dEM673tQhjocmPJy+TeLbQ4s1NE710AZ5xcVw3hAH2DceIpQi8WVwJ+iT6vG8R+C+ew86V2trT3s2BqnT9zl4Bx75ZAwMvDLlMGr+M4oxM5bNvU6SsTIrIBt/NW4gV9UFU/Pn4rMviJEX2FMn1J+c8RbnEtIrMPyetwO7IIdivOzCXYdhhrYBDWrsZpngezp6UdIxGvTlrj3LzPkwmJRIC/49TPLHmu5JxT3F7fOm0JzHSzktsaQ6yOW+isg9Nbh0KNEB8c5vpJ18O3pHXl6d61E+7dInrvwvi5dxtq3EtCTyRGs1dqxhWAPlnBPNF30N7zgXaWbWyrCNGH4yRfW0OBjIGlz9TpG3POU9WV6XaIiK060RuET1yM6KtERArqyGHb7kU3Hu91RZ+3PesPYU+UqA/xbolf4b7+8k6a1IbmTFibHIXUELOOaIxH2nvQ5mMg2Mze3TFqBmM81dpBayTGYCzGP1o7fFlWQuy91D3A9ixzxuMxXl58MCJhdqQcNzVoc/KUzIWJxzt7tzE8WvTFfI3p8yx9C+bSUPMi3/jni/zsP5mLXGfjtP1m8Pk3H+jPutQZes8ZCqPMlr5Mdfr8zMqvFO5/YJ/rKV+XiuVnvWbtlYUOEpFLgXcD3cAS4N0ichZwAa6GGAA+pKrLveMVuBp4BzAN+JSq/tnbdyLwHSBxEfyUqt4jIvvj9u2dDoSA61U1P1eXoSCM6KtECmzDZtuupSQe7wOmJePR41naIydam2m89KKxybZvfvfehWFxO0l3o+MkLWIAP9zUyo83tcLcywC4dlMfiwccPrBqA6e393BELMYHVm3wbW1fAO7c2c7SVTnc/K+/kDsARpz76RMPYkE4fZbjeIu+es/SlxrXF4v7GNMX6YJgPXYgwFWv34/H1u4pappV27q4Y/k230Sfxh2olJqB1cY4xPSZRI6yk9p79yfACcDhqroWQES2qup3vduvBX7qHZOgS1WPFZGTcaOw/ywiU3H77Z6rqo95LV6bRCQA3AL8l6q+JCKNwDIReVxVXxqLBzuZMKKvEilY9NUDCdEHNkMWsSyD3P8VbulLdaPaySSK4Yd2RuNMDdr8eeP3wHEIT7sKO9rHg8fuz0ublrFhlfLgsWkLxhfFg7c/wbtnT+PLxy7MetxvPvVRDn3N6znyTW8F4InOXj63Zgu7B2MZRd94J3Ik3LvdAymiz/Ezpm+oBdulJ+/NpScXl737lX+s4vZlW/xZE5hEjlIYg5i+0ZY+a0K6d4uxxJWJpHvXs/Q9khB8HkeLyOeBqYADjAzmvs37/wQwV0TCwInAalV9DNwWr0C7iBwEHAjclvI613jbjOjzGSP6KhHLLtK964q+xOcm2wyScO/64CIpR3HmpNUlZX2BFEtfajOYAcehwbY50OmAgQ72NAYYFOHAhlrawjWsjzsc2FDr29L+YwlTbTvnnLO69zB/sDd5XFcsPux/OhIWzPFK5Eh17yaIO0rALytYpNttAVYijTUBegZjOI4mM6pLQdVJtvszFEjS0jd27l18jtU15CTZflVEQsDtwGmq+qzXe3friOMHwBV23muXTWsIsFtVj/B1xYa0mKtcJVKqpc+7QMaziTAfLX0igoj4695NfAGnzGklHtcIE+aA4xC2LLdeWHzQ/YJIJnJYqDr+dguxBCeP+exAYFidvqaA+5xnFX3jXKevocaN4+tJsfRF446/2bs1mWMa86W+JoAq9EV9ep7izlBIgaEwEpa+MRV9JpFjHAnjirjN3v0r8hz3OHCQF9eHiNgiMgV4GegTkWSNMhE5QERK/3VoGIWx9FUiYkEB7r2Rlr58EjmGRJU/X5oi4q+lz0pYIocu7AE7k+hTwpaAHYTY8OxdK2Ue8akkh5XS8SP7QwjgxAsTfePu3g2PjumL+12nzwfRl7rOhEu6JByTyFE0CUtfdIzr9OUSfSv/AtuXl2VNkxlV7RKRLwFPi8geXKtfPuPaRORc4P9EpB7XGXWVqt4nIm8FrheRT+G6cXYC55fpIUxqjOirRAq09AWSlj73omsVYOnzI3sXvHp45UjkSJkzITxGib64Q9i2wPYsfZYkn76E0HPi8WSXjJLXZoHm0Q7Osm2cFIHX7Im+ziyiLyBefb/xqtMX8mL6PNGnqm5Mn5/u3cbSej3D8NjDWXnYA7YODPJqX+bEm617LyE8fTbT2rpLXttIZoYCvoYXVByJjhyP/QBW5PX9P5rj3g+HvDPtrrSWPjsP9+6dV0Kkx/0xaMgbVV004v7NwM0jtn0b+HbKpm+l7JMRx0rK7cdwY/tGnvMV4C3Fr9qQL0b0VSJi5ai3MhwrpWQLDEW7ZY3pq3RLXyKRI0WUJtzWsTTu3TrbAjvk1ekj+fwlhJ7fXTnySRy0A8Fh7t1628ICurNZ+rzXJeaUnlVdDPU17vOVcO8mHqe/7t3SW3U1pMkyzoSqct7yV1nfP5j5oHf/t/v/+bWZjymSgMDLpxxKfWCCFn8Ot8CR74b2jcWN3/48LL81o+hLn8iRw7072AsDnXDWl+HUTxS3Lj/4oqn9aKgsjOirRAqs0zfS0pcsoZKPpS+LACkEvy19yUQOzcPS5yhTg5bb7D0WcZ+/Ee5df7tySF4WUitgD3PvighNATurpW+8O3IEbIvaoE1PxO0kEvUep38lW/yJ6UstIp2LlT39rO8f5JOLZnF6hhqJmz98BXVHHc20972v5LWlcs+eLn60qZXOWHziij4ROOfHxY+/5QLo3Jxxd1pLXy73brfXA7xxTvHrMhgmIEb0VSIFuncta4Slb4yzd8F/S99QHcGU7N0MMX0RJ9W9G/XcuwlLnzuPn6IvX0ufZQdGdeRoCth5JXLEdHwsfeDGy/VE3DUmnmtfLH2OM6xkSynUFyD67trViQW8d94MpofSX/JaNqyjccli5rQ0lLy2VDYPuNbFPpN0kJmmObD5yYy707t3rezu3aTom+3DAg2GiYOJXK5EpLCSLZYVwLJCKYkc+Vv6/Mjeddfgs6UvS/buSPduv+MMJXLEI14ih7tP0iSElIrkmchhBwKjeu/mEn2JRI7xsvSBVw7FE1OJ59qXmL5oL6C+iL5kaZmB3KLvn7s6OaGlIaPgAyAeT75X/KTOe976fPqcTUga50J/W8Y6f2kTOXLV6eve7s1tLH0GQypG9FUiBVr6wC3bMpTI4W7LlmsgIiBS8Za+1At7wEoIopGJHDqsZMvwmD5vjI8xfWIJTr6JHAVa+gLW+CZygGtF6xlwxWrMEyu+WPq8Fmx+1OlLdg4ZzC76Xu0bYE3fAG+ekT2OUFXLUqevzvtxZURfFpo8Yda9Le3udDF9ibjnjNccY+kzGNJi3LuViFgFJ1jYVm3SvZv46nKytGFzB9kVbOkbnV2cbMMWH53IEba8RA51EHTIvZtmnpKXZuUncG17eJ0+gKaAxaYsCQUJS994JXKAGy+XsPTFHWUv2cHeO7fCyukFz/Xzvia+1Jsy7vT/QBfw4PLSF/qGeXx6oINP5zHXm6bnSB5xnKFfSz5iLH15kLDGdW2HqYtH7c7k3gXc1y1dVn73dgjUQrj0pCGDYSJhRF8lUoylL1A/LJFDyN2a0nWRVKalL/kFnFciR8K9m2ht5ozO3vU9kSMPS18ggDNK9FV2Ige4MX1b2t33UsxRfh78P/Z/fgs8X/hczx9wNVOnHsd7t/51aOORF0PzvNIWqfDDB1/lqIUtnLxvdjG6uLaGeRna3iUx7t3xo8l7LyRcsiNIJ/qGeQLSib6ena6Vb6RYNORERDYAZyfasBkmFkb0VSIFlmyB4ZY+GBbWlmWQXcF1+hIWutFt2FLrD8YcJaZ4iRyJL/a4p/t0qE6f3yVb8orps4lFh4u+5oBNdxYBmuzIMU7FmSER0+e6d7V9E/tbW3hxyeUc+LrCM1vbNg6yMK586ogPuRuCtTBlL1/W+fvfreCw6VP41N6lx22Vzb3rzWkSObKQcO92pXfvpovpG+rN7ZBW1nXvMK5dHxGRgOo4ZpcZfMOIvkqkqJi+uqSlD8Amd6swsSw07s/n2H9LX+KX/NCcQ5a+oecm4t12Y/pc0ScJuatDde/8tfSRf0eOgeHB6Y0Bm+6Yg6OaTEwZNsZb73i1YYNETJ/7vghtuB+ArQvexoEzDyh4ro5Na5hSa8PMfXxdIwx3Q5eM47i133zGWPryoKYJgvUZLX1p6/SlKd4+jO7tMPtQP1c56RCRpcBy4ASgTUTeBvwTmAbUAk8BH1TVQRG5FLgIaAcOATqAd6rqjjFfuCErRvRVIgXW6QNX9EUiO5P387L0BQIVG9OXrnh0upi+fk981VjilmwBwBvjaFnq9LmWvjyOCwSGdeQA19KnuAWam4OjP36JjhzjaelzS7a4Yqp244NsdmYw0Dw61iofOmIxFtXmcK0WSUOKOC0VdZxkHKmfGNGXByKuta9ra9rdGev0QRbRtwOWvN7HRY4Nsx9cfj1wRJmmX77jzCOuLHDMYuAUVY2J+yJcpKp7vNu/Bi4DfuodeyxwmKpuFpFfAB8FrvZp7QafMKKvErEKK9kCnqXP6RuaQiR7GzY8S1/FxvQlSq2ksfSlnGfAu+jXWiPcuwAp7l3fS7bkncgxvGRLY6L/btyhOU13qPHuvQuumIrGlchAP3VbHuGvzknMKLJkS3s0zpQ04tYPGmoCObN388YkcowvjXPcRI40ZEvkSPu5jnTDYI9x7/rDLSluXQu4SkTehNv4aQrQl3Lso6qaqLL9BPC6sVumIV+M6KtExIZYP3xrYd5DDnT6cYhDy11wwJtTq5ZkpoKzd5OuNidNTJ8zWvSF7RT3rieY1NGylGyxSijZkui/2xWLw6v3wZ7hbb/sqFvWxFn7IOzZyXjQuKMemELPff/LtFgfDzpHcGER8W5xVTpjcVqC5elEUV8ToKMvS2u1QnCcIeuyj9gi1FhiRF8umubBxkfT7spYpw/SW/qquBtHEZa4ctOTcvsi4BTgVFXtFpHPA/ul7E+NZYlj9EVFYl6USuSIi9x2YgVY+7ran2TKmmdhxwuu6BOI5yjZUtGWvjSJHFbCvZsi+iLe7eHZuwn3bmobtnEqzhwfncgB0BmNwa0XunUFU8fYNiycR3zln6C7l/GgIX4KcAU9T/2e5topPD5wEBcXYQXrirnvwCmBMln6wgE2t/flPjAHqur+QiqDexfcZA6TyJGDpjluHJ7jjEqoyebeTWvpSxZmNpY+n2kBdnuCrxlXBC4b3yUZCmXSi75HH32UzZsz930cPw4r6Oi6xl2czbO8uOI5Vuy4jdiMJby85hVue+aRjGMOHBig9dW1PHTbbaUulo6ODnp6erjNh7kA4l1d9J1yMrUrVxLY6Vq8OvujnBncw8qHdrPzOTd+b0MwDFMX8eTDD9PVth54K3NeXs8+zOUvf/4Lve1uRuB9995DzXNDNUcOPPBADj/88KLWJpbgxPLpvTu6Tl/Cvds9GHEF36lXwYkfHhoz0Ab/eAfx130N9n1HUesrlfqX2uCPL9P9ngd4XgP03/hssgVeIbRHXfE9pUyWvsaaAL15JnJs2rSJLVu2pN2njkPr/vtTP9BPw2OP+blEAA7ZvANndw2P7d6U9biamhqOPPLI0Zmqk4HGueDEoG83NMwctittceZsiRxVbOmrcH4DnCMiLwGtwMO4CR2GKmLSi77e3l7a29vHexmlI3HUgmh/j/t4pjn0RyJZH1scGBzo9+Xxx+NxVNW359IZGGCwvoFIfz+2N+dANE6jROjv6aI95r512+qaYCoMdHfR3hsBmmn2+p12dnTQ3+N6J7q7uujzLIHt7e309PQULfosa3QruLTHZXHvdka8TOu6aVA3Nbk/GbcYDA/bPpY0NrlfpL1Sl0wGsouw9HV45WpayhTTV19AIsedd95Ja2tr5gOOPAJ6euCee/xZXAoHe//zmXnWrFnMnz/f9zVUPMmyLVtHib6cdfpGYix9JaGqi7ybZ4zY3gm8NsOYm4GbM903VA6TXvS9/vXVl+GVjs2b63DW/I1DD96XI97yIW54dCUHLTyYD537xoxjXv3r35i1z76c+aEPlXz+G2+8kVAoxCWXXFLyXAADL7/M+nPezrzvf5+mN7iv0Us7unjj9Q9zw2uP4s2Hul8S9+3p4jcvrONdb387R3WugF99nZ5Dz6PjUbj0kvewY9tablv+BGe/5S0sOvwoAG655Ra6urqKXpvrFs8tNuxAcFRx5kbPbd01GHE3BIf/ULY9F+N4lmxp8Pra/mvVjmQc5UNrdrOlrT/bsFGs7u3H3tLLs3YrbbWdaY85cZ9pLJhaV9w6awL0DsZxHE26/jPR19fH4Ycfzpvf/OZR+5xIhFdOOpnpH/kI0957aVFrycY5z73CtECAXx26d8Zjdu3axY033kh7e/vkFH2Nc93/t7xr1GdCnbdjLbsRVn1yaONqL273F2dB/YjXvr/dLQHjQ49ng2GiMelF30TBtutQCzTq9d8lj44ctl2xMX3pSrakTeSIpyRy2G46rHgxxOqkdORInScQIBodnlVbCG6v9/wsfaPbsCVEnxfLFxwueCqhI8fs5jBBW7jp0Q3JbT/9z9rMA7IQBG5Y1ZFx/1sOm8OPLzqqqLkbUvrvNobTpEKnMDAwQH19PTU1NaP2OY5DMBajJmCn3V8q4VANvZB17hkzZgDQ2ZleHE945hwGx/+3K9hGoO2CNM2D2UM9m2XnDuAVmH0ktKR5XucdXcbFGgzVixF9EwTbrsMRQbwCzZZIzkQObMu37F0R8bf3bppSK3aycHGa7F3LGqrTp1Ggxq3Tl2aeYDBILFZ8qQ83kSP3cVaaRI6gJdTZFp0J0TnS0lcBHTlmNoZZdvXr6BmM8ciaXXzmLyv45XuO4YA5TbkHp3Db9j18Z/0O7j92/7Qu3o/d+hytXQNpRuZHwiLZG4lnFX2xWIxYLEY4HE5/QOK9IeWJpauzLXZHs7/fampqCIfDdHR0lGUNFY8dhDf976jNjuPAC19FDnornHHG0A79C/zlanjDN2Fe8S39BuOD4/oDy2AYa4zomyAkLX0x90s0L0uf5Z+lz++SLcmemamiT3Jk7wYSoi+lTl+ajhylW/rybcMWSMY6psYkNdk23d7rlMnSN56iD6C5Luj9uXGQs5vDzGspLGbbabeR2gAHTG9IvnapzG4K8+KO4t3s9Z6lz20Zl0HQ4Vr5gIyiL/mDoMhahLmosy36B3J/NlpaWiavpS8DCe/BqEQO73NdinfhX+v/xace+lTR4w2GasSIvglCwtJnJUSfCE5OS59/dfr8tvQliioPE31eBmmq4Op30rh3Ha9vbIqlL7Vkiz+Wvvzcu6i6/UFTmsI3BWw6E506Rlj6KqE4cyoJq2qwCEHUHo3THLDTCj6AqfUh2nuLr7PXmBR92Z+rXKIv8R4rR50+cEVfPnX6mpubJ0ZSmY9kEn3JNmwldNp5teNVBOF/jvqfoufIxft5f9nmNhiKwYi+CYJt1+JYQLwQS59/dfosyypL711N+bIMpKnTl4jpG96GzRN0Toqlb0RMX6miL7+YPq+lWjyWFJ/gZvB2D3jjM4i+SnE5xTxBVFT2bo7CzFPrQ3T0R4k7WtT8CfdurgzevC19ZXPv2nmJvpaWFtavX5++Lp1H12AXn1j6CboHu/1eZpIDpx7INSddU7b5CyFxTRlVxsZ7rbZ99nNIuAYUt9aiKjgOirrbHCe5XVH3oujd33bwTuoWCmd+8c7kOFCvbuOIsTo0zr3vDJ3TOy7dOQ2GSsOIvgmCbdcTF0FjblaoLYKT66Jj2xDzL5Gj3L13LUkkcgydZ8ATX8PasKnnutWhRI7UIs/BYBDHcYjH424x5AKxCijODLj9d1PazzYGLJZHA1xxwBdgZwA6Nw4b1z3tCv7Ssw+rVg/fXiwntTTw7rnTihqb6HMcKEKUtUdjtGQpzDy1PoQqtPcNMr2h8ASK+lDC0jdc9C39zY1sXr0ieb/PCkCokaU3/ZQn01lQYzEGlsyn8an/cN4F7yIQzJ4UUij5Fmdubm5mcHCQgYEBamvTu9KX7VjGk9uf5JhZx1AXLC7rORubujbxl1f+whdO+AIBa/y/HhLXlJEiuPawQ6k77jh0cBAdiLjhICLucSKIWO4PR0mMFe++gAAiDDS2U+cECc6dC5YMHScyfKxYyfndbSn3rZTzMjQuue3JJ8b4GTMYsjP+n2qDL9h2HVGLZIcHSyDX10xVWPqc0Za+kYkcIRFXECbasKW6dwMJ9+5wSx+4Af7FiD6x83Xvepa+Ef13XzutifUdu3mu8UDoBwaHd96IhhazLd5AX1fpHTnao3Hu3d3JhXOmZnSzZiPxXAeKdO9mK8w8td59vdp6ixN9jeH0om/V0vuoqa9n2ny3jWEsrjAIjU1NbuznCHRwkAFga+t2unbtZOpcf0um1NkWEUeJq2Z9DVpaWgC30Hkm0bd6z2pssbnhtTdQG/C/Lu4fXvoDX3/y67QPtDOjbobv8xdKJvduaK+92Os3vy5t8qWfoLlzPQtu+HFp82Tjy18u39xlQkQ2AGer6srxXovBf4zomyDYdh0qEB/soLX132h8Gn0DnbS2vpxxTNTpgoEeWlv/ndc5QqFptLQck3af723Y0hRfTcT0DU/kcAgnukWMtPSlxvSlikdP9EWj0aJKdFiSX8kWO43gBLhs/gwu2/Y3ePAquOqVUcVoj/v9pZy/3/lcdexVBa9tJH/e0caHX9zES70DHNxQuEhIPNfFWPo6YjEW12V+fqd5om9PzyDMKnj6ZCJHalcOdRwG+no54o1nc/L57wbgmWeeYeM//sGbr/g4zc3No+aJ7mzl0TvexDOL5xDp87/1XZ0nmPviTrIjSzoSa+vs7GTOnPTdJFbtWcU+LfuURfABTK+dDsCegT0VLfr8oGewpyzW0omIiARUtfiYGEPFYETfBMG261ErQGxgFytWXkGE/6NjYDsrOr+Tccy0/gAobFp5Rd7nOfWUJwmFpo/a7nf2rqSx9NmSztKnbrkWGCX6dFjJluHuXaDouD6xrfwsfQn3bjzNebx6iiNj+sCN6/MrkePY5noAnuzoKVL0lRDTF43TkkXkTG0YsvQVQ32NO3eqpS/S3weqhOsbkttyJ3LECXqPM9JXei/fkeQr+lItfelQVVbvWc1p80/ze4lJptW6YQC7+3eX7RyFkDGmzwd6Y700BBtyHziGLPrsP68HjijT9Ms3XPuWK/M9WESWAsuBE4A2EXkb8E9gGm77taeAD6rqoIiEgB8CrwF2A88BM1X1PD8fgKF0jOibIFhWgOZpJ0H3Vo477jc0rIzQXLM3xy35Z8Yxu6Z8GR0YZJ/jvpVz/t2772fduv8jFutNK/p8t/Ql3K4pAfDJFmUp5+mPO9QkvhBEwA4hKTF9mUq2AEWXbcnb0pd072YRfWksNrbYviVyLAiHmFMT5OnOXi6bX7jlptiYvrgqnbE83bt9xYm+moBNKGDxg/tf4RcPrwOgYbCTdwDfuG8D655xG58d6GxkCXDctx4kFLD5xXuO5YgFLUMTOQ4B7302WGZLX9bj6uoIBAIZy7bs6N1B20AbB087OO1+P0iIvj39e8p2jkLIFNPnB72DvcyqK8LEPLlYDJyiqjFxX4SLVHWPd/vXwGXAT4EPAnsDB+HWZH8I2DA+SzZkw4i+CYQdrAe1aWw4gKD9MpYdpLFhccbj24ONxCPdNDYckHPu3t5XAFBNL5TKZelLrYKcjOmLD4/pGxanZYcgnuLetdKXbIESLH35FmdOuJbTJctE+9y12qM/grbYvln6RIRjm+t5qrM4MVNsTF9nzC0NPiVL390pXg3Atp7iy7Z89W0H8+L2oVp/VpvCK3DkvnM4dL7X2mvzTqK7A3QOxIE4597wKAHbwhbBtgQbRc/8PDFbuOXuTsJLH8C2hIAlWJYMHTfyT4SA7caTDjvW9vZ527ZFogQ6uvnunheZHgoS8MZb3jmCtsV5R89nbkstLS0tGS19q/asAiiv6AtXpqWvLO7daE/FWfoKscSNEbekuHUt4CoReRNgA1OAhGn8TODX6n5BREXkd8ApY75aQ06M6JtI2KFkIofkkchRSEcOS9wvaMdJL/rKFdOnaSx9sRHu3dpU148dGuHeTV+yBUpx7+ZbnNkVl2ndu7GBtK5d8Ne9C3Bccz13tHawZWCQ+eFQ7gEpRD0hX6ilryPqrj+bezdoWzSFA7T1RgqaO5ULjls47P7GFTFu/xe898yDmX/QIQDcfvvLPL7L5pi9prBsYzvH7z2VwxdMwVElFleiXZ3svuNhNk1rZta8A5gybxpxxyGubqZ43FHiDqO2xRyHSEzd/d5cjioxR3G8bfG40hd3sAdj/GfPTlDXShxzho5Vhe6BKFe/5SCam5vZunUrS5cuHfVYl21fxkEdB9G6spWlMnp/sYgIhxxyCNOmTaMuWEddoI49A5Vh6Sun6OuN9lIfrPd93glGT8rti3CF3Kmq2i0inwf2G59lGYrFiL6JRIros5FhbtB0iGUPK2WSDctyBcyYW/pS5hQR17Wa8rgG4o5bmDmBHUIcT0SoJosiO/HRMX3Fu3fzzN71BE96925fWtcugG35594FV/QB/HhTK4cUGNe3LD5IbF4df9zZlmyDlw+bB9z3YTZLH8C0hhr2lFCgeSSRXvc7qqZhyILT2dNLRG3ecdQ8XtjSyeELpvDZNw1ZtyPr17P2a3/h7sP34YQz5nHy+YcXde5dfbu4a/1do167Tf0Rbt62h7fPmZY2seWXj6znkdZnuGnlAjrDnXR1daUVfQAHciAP/+fhotaXje7ubs4++2zAdfFWmqXP75g+Rx16o700hCrL0lfhtAC7PcHXjCsCl3n7HgAuFpE/4Lp3LwI2jcsqDVkxom8iYQeTrk1L8qgNatt5V7QX8axWTvov6LJZ+kaUlAlY1qg2bLV2ihUgEIKEN8Ih6d7VNNm7pVj6CinZkjGRI4OlzxabmONfotxB9bXMDAW4aWsRX+QWcMgUPv3K1qKG7lWb3bI4tT5UdCJHOgY80ZeayNHZ08egBthvViNNtQG6BkaIfVUE98dAKTF9t718Gz9/4edp9zUAf+vIMLAWOoH/e8a7vyjzOd536Pv42JEfK3qN6fjhD3+YTHYBN4O3rb/N13MUS7ksff2xfhStOPduhfMb4BwReQloBR7GTegA+DlwGPAibiLH0xSVk28oN0b0TSRSLH0WQjxHGzax8++9m7D0OWNk6UuXyOGeZ3SdvimpxXTtEHiWPnU0aSHw1dJXQO9dyBTT1z+q725yfrF8tfQFLOHxEw6kM1q4y/in/1nLb5/YyKOfeU3BY2ttK6elb2p9iM1t/mXMDvSMFn19/QMMYrPvjAaawkG6+ke87t57IxSsKSl7d0//HqaGp3L3uXcDbhKCOg7r+iK8Yflarlsyl3NmtIwa95P/rOMnD63nqc+eQThoY1lWxpZw5SgxEg6HiUSGXOzTwtNY37ne9/MUQ7kSOXoG3feJce+ORlUXeTfPGLG9E3hthjGDwOWJ+yJyKXB2WRZoKAkj+iYSKUkMtuRuw1ZITJ8k3LtjFNOXvMiPED8Byxol+mqGxfTVIAlrpNeGTWR4EeqSLX0CqCsqJUusWyKRI6N7N4OlL2AFiPtUNDtBvW1TX0Qh6loHglFlboGxgPkyrT7E85s7fJsv0tuDZQcIpNRfjEYGsAJNTKkP0VgbpGtE27aE1TYUCpVUp68j0sHU8FTqgnUM9Pbwq4++j0hvL931TXDxp7nnV79i54vLRo1bV7cYnfUGvvvhK5kxuIcFBx3K+V/OnVHvFzU1NcMsfdNqp/H0zqfH7PzZKJelrzfqvs7G0meYbBjRN5GwgyMSOZR1y3dldEXGOqM4fYOsfbY159SRmPvLeNuru+jYOPr47j0RYtF4XnPlg6rSOv0IBtrq6UyZc9+Ihb21P3me7v4Y0Whk6LzdhyF9MwgBO9Z24AzEQYQ927qTx/T2e49lbRsN8cLX27HTtQa9+mwrVhbR17bV7Y+69eXdxGIjzrNzAYgNaZ6vOTv3I9wzo6jncsbCRpqm+1e4Nx5XgkXU6MuXKfUh2vsGs/abLYSB3h7CDQ3D5nLiUerr3OekKRwYbenzfliEQjUM9hcv+toH2pkSngJA584dRHp7Oei01xCat5CfAvOPO4lTDj9o1LiFfcK/VsDM097G3C1PsXP9q0WvoRhqampob29P3p9WO43OSCfReJSg7W9LukIpV0xfT9S9BpjizOVBVW8Gbh7nZRjSYETfRGJEIkdUlXtvWkVsML0176C1XTR3DvDAz3N326lp3sLeb4Dn7llH99Ypo/b3NLYxWBvjX3nMlTeHfAA2Aylzvg4bnuvkX8+5tcy6z2mhdUsv/3omEXN2Pk0WnNkEz92zie1RRR1h3XM72fyyO48jUZgFKx/Zwrp7irdO3nPjqqz7ndhOAJbdvR47NPJL6+3uv1dGP19HeF6Rfz1a+HM5d0kL7/jkUQWPy0TM0aIKM+fLtPoQ0bjSNRCjubZ0gTHQ20tNims3Fotha5yWRteN11QbZFtH/7AxiWSmUE1p7t2OSAf7tOwDQG+nK6IOf92bmL7v/vCfF5hx0GEcv2j2qHFHxOJ8ZuW/YK9D2Ht6nK0vrSI6GCEYKrxbTDGMdO+mduWYXT96vWOJsfQZDP5iRN9Ewg65Vot4zCsgDOd9Jn3bNICu/72LweWbueCLx+WceiAyg5c2wEnnLWJK0+jjH368l1Uv785rrnxZd87baTnvPKZe/O7ktgt+/gQnLJ7Gla9dAsD3Xl3HwcdM4YI3e4WH//4RnEgjkZ3nc/K5+xLYbwq//1yQJcfP5Li3u2uLxqL89KbHOeysuSw+cF9u2fAbYhliFdNR9/J8ml7Yh53veBgNZHaPNwyGsG9WTj5vbxYdPuJ5ufVCmLoY3vCNUeM+8eAnmFE3g88d/7m81wTw8B/XMNDjTwLIc63P0RnpZEtkA1ZDB0s3ly5Ajpx5JM01w9ugpfbf9UP0RXp7CNcPxWlt3ePW8JvR7H65N4VHu3cTcRChmhq6e7oolo5IB1Nq3B9EfV6tvbrmKYQsi6BIxuLMNQGbhVPreHVXD6+b0wJAf1cnwekz0x7vNzU1NaNi+qAyRF+5YvoSos/E9BkmG2UVfSIyDfgtsA8wCLyC27ZlVznPO2lJuGLig1gIDg7T5mX+JRtprCGW45gE/f3NsAHqWyymzRl9fG1jCNC85sqX1kgrzaH+YXP2hIVIvZXcFnlFmdJUM3RMYxdR7WUn0Dilhrp5DdgBm5q6QPKYxBdJqM7iqcjD3L75D7TUtCDk98WyX++JHMk+PLrrEaKB9DXmBuID9Mf6OT80n7rm4Ojnxd4AU+ZBmuerv7mD/ro0Y3JQ2xiip734mncJtnRv4ZK7LxnaMAM++kDJ0/LOJe/kmpOuGbZtSPRF2Ht66V/AAz091DU1Je+/ss3NQp0z1d3WVJvNvRsm0rejqPM66tAR6aAl3AJAX5dria5vdu/X2VbWjhz7zmxgbWsvdQe4orivs5OmAkVfR98g96zamaytmA8HzG5Mir6Eiz1p6auArhzlsvQl3LumZIthslFuS58C31bVpQAi8h3gWuB9ZT7v5CTRezY+iCUQz+G5FDswrJRJ1mOTJVvGKHsX70I/IqHBtiRZsiWuSlR1eCJHoAZxXBddIpZRbHtY9q5lWdi2TSwWY3P3ZuoCdTz0rofy/mJ5/v7NPLL2Ff75jrsI16e3Tv1j7T/4/COfJxZwcMYokSMQtIhHh78GT//jLzz199sLmmdnQx8cCSevnUPL7hpijnLUGWdw+OveVPCaEnz7qW8nO0qkMq3etSBef98rzG7K0Bu3ANZEl1A72MTjf3oegB07trMPsHCmK6aawkEiMYeBaJyw1yIu6d4Nh4su2dIV6cJRZ8jS19lOsCZM0Ov3W2db9GX5fOwzo4GH1uwm1OAKvb6ujoLOv2lPH++56SnW7y5s/Y3hADecVY+qMjg4SE1NTUW1YjPuXYPBX8oq+lS1DViasukJ4EMjj9u1axfHHDPkhrz88su5/PLLRx5myEVS9EWxRHBylGxxs3f9Kdnie50+ANselYRip5RLGfAsJ8OLMwch7lm7vO9YV5AOf5zBYJBoNMqmrk0sbFpY0JeK5dUFdLKo6rqAGyAetTVz790sJVuK6cgRCNlEB4eP2/jCc9iBAEuOOzHveYTNwFqOWnQ826MhrC2rkVU7OfiC4tt/HTHzCH67+rejkgP2nlHPwXObWNvaw9rWniwz5Ee3TCcYrWHTq25NwqmOO+esKY2Am8gB0D0QS4q+REHLUE2YeCxGbHCQQKiwbOX2iBvDl7D09XZ0UNfSktxfZ2W39O0zs4HBuMPb/7CRgQWX8Pu/tRK46768z981EKUmYPO79x3PfrPyEzL3vriTq/+6krYB9/FHIhFX9FVQK7ayJXIMmkSOTIjIBtxyK8cAj6nqmjzG3AwsU9UflXd1hlIZs5g+EbFwBd8dI/fNmDGDZctGlzIwDBHvHiTemd11Z3XFCQCDW9tgQIjH4gxu6c54vNMXR3MckyDmCalYezeDjD5ee2I4jpPXXPliNy/EidQOm3PfuDC9J8bglm66vPp3wa7BoWMG5hL3YrZie/oZ3NKNqBDviQzLEA0EAq6lL7KZJVOWFLSuRJmWbCK31rPixQLOMCujNzCrpc+W4jpyBIIW8RFJO30d7cxavC9nXTbqt1ZmNt4PS//BaW//L378735C7e3095T2uu4/ZX+iTpR1nevYf+r+ye0NNQH++bFTS5o7gToO37vo7Rz/jv/Hye86B4DVq1fzxz+uJOxZ3Jq8uMGugSgzGr04Rc8CV+MdE+nrLVj0dUQ6AJhaMxWAvs4O6pqG4hfrbIuuWJzOaPqYy+OXTOOiExbSF4ny0iOrmDl3X2YsnJH3+QO2cOHxC9l7Rn6CL2RZvPbAWVz915Vs6HCTvxJxfeFAmIZgA49vf5xwoHTrazb2bt6bU+ZlbtFazpi+sB0maI1vdnKFcyluoeWcos9QPYxlIscPcfv4mV8CRdD37E46796Q9Zg6awdTQ7Dn5heIHb6IwTqL1juWZzx+YEUbTv8grT/KfEwCx4rAa6Hr0U0EN4w+vi+wEwKw80fP5R0bl4vaEz5JvJdh6/sKNnQM0Pqj5ewIC5zewOCDW2jdmigm+5bksd0Pbqb7wc1ob5zeVbvoX7mHukPdeKVgMMjA4ABb+rZw1sKzClpXokxLvpa+UR05YhFAM4s+q7iOHIGQTSzqDBO3vZ0dzN63sPaYvTEvyD1QT9zpJRasZaBnZ8HrSSUh9Na0rxkm+vxkcKAfVWdY9m6i/lxS9IU90ZcS15fo7xwKu69ZpK+P+pbRGerZaB8Ybunr6+qkeeZQEkRjwObBtm72fyRLRnYzgAXnJgphF2I5V3798gZ4Ob+jQyI8dPwBLJ5ez5pdvcyAYbX6Dph6AE/veJqnd5S3Xl/ACvDURU9lLA1Tzpg+k8SRlTNxLX0/EJGvA1cBO4EbgHogDPxcVa9PHSQiYWA9cJSqbve2/QDYoarfHLvlGzIxJqJPRK4DlgBvVfWx1cAkovbg6QRmZndF2BtfhSdgytv3IhxvworHmPaeRRmPb7tpOrFtwrT3jK4dNhLVGK/sgNqjpjLt9NHH16/qgZXrmXrxgb65YrZ+8irqjj2WKRe8K7nty39fxYzGGj7ymn3pjEVh9w6mnzyXabXeBfzpG3E2rKC974PUHz+b8AFTCXy/Bh10cHqG2n0FAgHaom3ENMZeTXsVtC7xHl62VmwJt1Es4Ix278a8kiFZ3LvRArKJE9hBd2HxmEMgaOM4cfq7ugoWMKmur2hckWAdA7u7c9bSi0ajtLamry0Y1CAzBmewet1qjgr7V1Jm2Lrb24iH6+hzlK1b3RI+ifUMWfrcS96wDF4dbukrJq4vYekbiunrYO6Sof6+X913Lo915Oe+fvzPt9EyazYHnnJGwevIh45YnP/bsJMnOno4fvE0Hn9+F2cIwzJ4f/H6X9AX869TSjru2XAPX3n8K2zq3pQsdTOSkkTfuqWwI73I7tn+HA3xGDxWYTaIa5qvB44o0+zLuabzyjyPfRC3r+51qnongIg0Aq9V1YiINABPici/VfXFxCBVHRCRX+N25/iKd9wFwCF+PhBD8ZRd9InIN4GjgbeoaumphZOUwPRaArmK7upUeALCe9UR3F2D0+tQe+C0zHPOqAfNfkxyalXYIdjTA9QuHn18aJcrumr2n5LseFEqTvvLiLVo2PpW3yfMqrfcbT39sHsHjQuaqE20t9rQTnzzswAEZ9ZRe+A07HAIHVQ0JckhEAjQ6hVMXtC4oKB1WXm4d4dZ+kaKvqgn+jK4zgISoF/70+7LRsATfbFBV/QNdHej6lDnZZDmS+LLviHUQNxRnFAYdRwifb3D2puN5O677+bZZ5/NuP80TqN/az+/ePQXBa2nIPY+iAeefYEHnn0huSkYDBLy3LXpLH0J924o7H6+iqnVl2rpS4jt1Ji+QxrrOKQxv/ix+tb1hPv38M4Lzy94HfkQV+Wnm3exorufExZP5e6ngZrhoi9gBWgKNWWexAcOnHYgAOs61+UUfUX9kPzLB6EnfTZ276wZ1Nk23HN14fNOXuqAn4jI4bgR03OBw3H77abyY+BhEfkG8G7gHlX1p2q/oWTKXbLlYOBzuDEBj3m/1tar6jvKed5Jy4js3Z64w4N7Mtcda4jEqI/Fsh6Tygo5mh29TWxKc/ymAdeKtnR3J3bQnziZrfsfTG3zDKamnK+7MYjWwIN7uni1z4tBsoYncojjuqkSNmUJ2Kg6w0RfMBhkd3w3CCxsWljQuiQf926KpW9UTF80t6UvpsW5d4FkBm9vZ4e7lubCLH290V4CEiBkhYg5SsBb50BPT1bR19HRwfTp03nd616Xdv8tL93CC7te4NpTry1oPfmya+N6Hv3DbznlgkuYvnBRcntLS0tSNKTG9CVIuHdraj3RV0RXjo5IB2E7TG2glt6Odldsp8T0FUJdcws97W1Fjc0HW4RDGmpZ0dPPx/ZdQFTd983ND7/C4IrBHKOHmNlYwydetz+1ocLb+wHs3bQ3AOs61kEGY3tJMX2DvXDs++GsL4/a1fvAh2kQgUvKbOn7SoHvgfwtcePBN4EdwKWqGhORe3DdvMNQ1c0isgw4B/gwKT15DeNPubN3V4FPAV6G3CTr9EVpDthsj0S58IV1GQ9/755u3u04WY8ZzufcsN7do48/fEc7JwLvXbGOaMCn4Oj3fNj9n7q+vdxrTOqap4dS3saBGoh7sUkpVgIHB40Nt/S1xdqorallRm3+AfOQksiRJVAhYemLBdL03o16liS/Ezm8rh+JDN5EgeD6Ai19PYM91AXrEBHijoOGPNHX3QWzMhfr7evrY+rUqey/f/qYvf2c/fhLx1/oaemhpaawNeVDZGc3PewiOLeGxfsuThsnNmTpS+PeTYi+Ity7bQNto2r0FSq2E9Q2NdO6cX3uA0vg0IZabt3RxvTGGl57yHx49QW2t3Wxpbsj7zk2tvWxZmcPP7/kaGoC+Qu/7licr63dRl/coSY0gz9uWsGK4Mb0x/b0se6Ao9mwq4+G/vTHgNt28gPzZ3BYqjU11g81TRAebbHsjQ+4hafT7DMk6cKLNPVoAV7wBN8hwKnALRnG/hD4HbBLVR8v6yoNBWE6ckwkUix91+w7j/NnT816ePCZ6Viq3Hnkvu5VMwfLn7+MKVNOYq+F7x+1bx2drF63ij8etjhZm6xUNn/4w4QPO5QZH/zv5LYv/HUllgVfPccNEam3LQ6oTzmfHQLPSpaIubNsGxUdZelrj7WzoHFBwVaEZCJHlpi+GrvGjc0LB9i0p40nn3xyaGfHRuBwWNcB3U8OGyciBAYDxSVyBIdb+vq8VmCpbsZ86Iv1JeuXReOKU5Ow9GXP4O3r62P27Myi8OBpbsmXS/91aUHrKYjT4G/LPsq7ut/FF074wqjd4aBF0Jbhlr6Ee7fWfZyDRbh303XjKFRsJ6hrbqG/s8O3fsTpOLSxll9udVjXF+F7Fx3DV796F+87cQFnnnlm3nP88enNfPrPL3Datx+kpTZEKGARCljUeP9DtkVN0Pb+e/cDFiv7Blja0cOUmgCis2htX8+uFTsQW8ASxBb3h5UlxDVOv91Md1uEQE8cSewPDHf3bokMUmtZfHt/T/TFY+DEMoZQ9Az20NBiavTl4OfAd0XkU7iJHF8Hfisi78P13j2UaaCq/kdEBnATPwwVhBF9E4kU0VdnWxzTnD07bVddmN3A0Q1hJI84vAFrM9MCOzgwzbyx2hpWA4c31lJX50/tq+Ztm6ifP4e5KeebMqjEHc382OwQgudOTVr6bFSiaHTIzRoIBOikk2MaM7epy8SQpS+z6BMR6gJ19DfUsmZXO2vuvnvEEa+BZeuA0VbT2rm1ODOLK9kCJHstD7l3Wwqapzfam3RPxx1Fa1wLWLayLapKX19f1tf+8BmH85PX/iTZDcFv1i57khcfXkrPGxby4OYHufr4q0eJJhFxW7GliekLhou39HUMdCStl8WK7QR1jU3EYzEG+/uoqStPhmnCIraip58l9WFCodCwmL58OP/YBdQELe5/sZXBmMNg3CESizMYc+iNxIjEHAZjDhHvbzAWT94O4pZyqJnZQnDKy3Q/1wpkjtvrGFEm6vsXHME5R8xL3n/90y+zeSDFNR3zrP3B9KKvN9prsnczoKqLvJsrgTtH7E6bkKGql6beF5G9cbN8M1kCDeOEEX0lcP/G+/nn+n+O9zKG6G+HmdPhxV/BltzrOmLjWo4FPvXgJ3GCud0ze/YMEGx7mqadnxi1L7glSC21fPGRL6Ihf4o095zRRWDKMsJLh863OdhG3FE+sfRPGRa5Fpk5lY9vhrvX3s2T8jLTezYRD8T5Ys+3CS11i/RuG9xGp9XJgqbCkjggP0sfuC7eWACm1dZw2Uc+NrRj7f3wlw/AxX+D2YcNG/OLX/yC3fHdRbl3bc+9G/PEbV9nB3YgULBwSP1CjDkKNe7t/u7Moi8ajRKLxbKKPhEZVpNt5/q1tK5fW9DastG/FiKtjSzY52y++sRXMyYINNUG6U7N3vVEnx0IEKqtLS6RI9LO/Mb5QIrYbmopeB4YEul9nR1lE31L6sLUWMIL3X2cO2sKNTU1w0q25Ms5R8wbJr5y8Vh7D+c+9wrf3W8B58xo4c9rurnu2Uf444cPYEpodlIUJsTjxs1beeA/D3PK6WdQ39jCYCzON+96idXbuoadd0FtiDW9KeuPeQI2k6Uv2mO6cZQJEfkqcBnwSVUtbwq4oWCM6CuBjkiHG4RcKcQGIBiAvh0Qz22tmB9xg8U3tq8nGsqdHdc36GDFegg7ox/ztIFpLGABGzs3EgsW7ppMx2BzHAn1EEx5jiPST1yUdR2d6QdFO8CzeHX2d7KuYx31TgwVh43OFuwOtyBvt3bTEmvh9PmnF7yufCx94CZzxKwYIUuor0/58rZiwAA0ToH64V/q4XAYiUlR7t2gF1AfS7p3O6hrnlKwi7A32pvM3IzFHaQ2t3u3zxNKhVh5//n9b9O+fWtBa8vF1LnzOWneSQA8tu2x9KIvHEjr3sWyCNXVF23pmxL23Ltdna7Yri9OsCUSQPo6O5kyJ39BVQhBSziwvpYH9nQzt6aVfjvASx1d/HxzeZMs79rVSVPQ5h1zplJnWxw6060hOSDbWTJrdJH0l2lnvd3Gmw+cxrx57nPxi4fXs7tneMLJgnCI+/d0DbnEY5kz5Afjg0SdqOm7WyZU9UvAl8Z7HYb0GNFXAu/c7528c793jvcyhtj1Mvz4ODjhG3DoeTkP37PnV7T+6zvc9uZbsBtyXwCfePJN1NXtzWGHjg7TWLZsGXduuZNfvv6XNDcXl7U4krVvfBPhgw5i3ge/m9z2vpufZmfvAH+7LEMXh2d/C3d8hC0C79rvfC5/w6f504qr6d/YzpV8mOlvd+PK/v3vf7Ns2TKOnnV0wevKp04fQNgO02F3EBypuZLZu6O/kGpqapABKc7Sl6jTl+LeLdS1C67om13vxubFHcUO2NTU1fsq+px4nM7WHRz5xrdyzFvPLXiNmahtbCRYE2ZR0yIe2/YYFx908ahjmmrTu3fFsqiprSs4pi/qROmOdg+5dzs6qG1uKToerzZh6Suw/26hnD61ke9v3MmXXt3G2+MQ6+jmzle3lfWcAB9ZOJM6r3Xi4ubFAKzvXM9p808bdWy6On3TG0Ls7hnuil4QDjHgKLsGY8ysCWa19CXCC4x71zAZMaJvIpGSvZvf8Z56KaD/rjrp506UxPC1/65lDVlhkpuELC1Mh+IahWRMn1gWijOqTl8sFisqWD5f925IQsQlTmBkZ4Vk9u5ogVRTU4PEpbiSLcHR2bsNU7Mn86RjpHs3aFuEGxt9FX3de3bhxOPM2GtvmqYXlj2dDyfOPZG/vvJXBuODhBLvCY/GcIDtnSmuwBRLX01dPZG+ntFldrLQ3u9azFtCzTjxOL2d7UUncQDUNQ9Z+srJZ/eezRUL3Of+L5tfIDIwwHdPKW8NXRGhMaVXdku4hanhqXz/2e/zs+d/Nur4uBMnujDKvx78F5b3a6uvIcZ64KRbhr6+oqpMizucfbtFQAQ0Dgvnw4rrYNX3h83peE25jXvXMBkxom8ikZLIkQ9iuy//SGGV8XgJ4WToFJEQTk6ec+V1PtsaJUgDlltGJCOBIdGXMJZZto0yOntXVYnH4wUXk87XvRsiRMyKYY8UwklL3+iSLTU1NUisOEvf6Dp97czce3HB8/RGe5NfiLG4g20J4frGrIkchYq+jp1u0dzUVmV+ctLck7j1pVs55nfHjBL1jipMhcN/421XRT9jI4+ci+7jPndf++0/8j6XAgg8+tOfs3XH7wFYfNSxRa894d7d/spLNM2YWfQ8lmUz74CDMvYRFhGag+57v6G2lp7OzuT9seTzx3+e5a3L0+7b07aHV9a8wmGLD0u+tx5+ZRdbO/o556Ch+ppt0Ri372znpKmN7FsXhp6dsPLPsP/pMGV0EcCQHeLUef70fDYYqgkj+iYSBYq+Yix9jpN+7vJY+tyiyqnYlrjJBZnwngOxgJSSLQ7OqOxdgFgsVrDoy9fSF9AAMYlhjxSpyY4c6UUfMYoTfcGhRA51HPo6Owpuwaaq9MX6hopLO0rAEmobG906fRkoVPR1trqiryVL3b9SOGXeKXzi6E+kzRR+9NXdvLClk8vPcOP9ImvW0H3/A0y56P8xoA4d2wt3cQYlyFmnHktY3Pff4qOPK3rtdiBIw9RprPrP/az6z/1FzwNw5qUf5Kg3vTXncTU1NQVn7/rFGxa9gTcsekPafStXruT2J27nioOuYOZMTwC3vcSNq9fx6WPfNNRjOh7n1w+t4JBFc/ifRbNgwyPw0C9hybtgceFxuwbDRMWIvolEge5dsVzLkGb1lw5hSZC4k749WOLi67d7d6Qv17aESNRh0570cVfhPmUmoCjdfVG69vQxEFPi6jA4EE+O646469y4q5vausIEVnu3++W4s2OAmq4BZjWlzxC047Zn6UtTnNkOgT3645cQfUXV6Uskcgw69Pd0o07hLdj6Y/046iTdu3FHCdhCuKGRjh3bM47r6+tDRJI9bnPRuXMHlm3TMC13C8BiCFgB3nvIe9Puk/ZXeOKZNdz/WAsicOSLA1zwkMN39j6E9ubMrmYBPnrWEs7cv3jrW7781zf+j67du0qa409fu5qu3fklZoyn6MtGupi+afUhonGlqz9Gc517zau3baYFA0NlWxIlWzJk7xoMkxUj+iYSxVr6nPwsfWIFcWLprT0JS5+v7l3LGoq38qgL2Wzt6Oe07zyYdsyJ1mpuDUFvNMa/nt3C9559lTe27mH/wSg72vr4f964fe1dnBKEd97wMD1aU9C6ZseEiwnzmT+/wLo7HG79wAmcuM9o8WLFLWISg1iaNmwZunHU1NSAgmZp8ZaJIUufa+WD4mr0AdQHhmL6bMsi3NBIf092S19tbW3ePVI7WnfSNGMmllVcC69SeM0Bs3hmY3vSYhwOuIKiriZAtCbzJfHJ9W3cs2rnmIi+hqnTaJhamiCub2mhr6M9r2NramqIRqPE43Fse+xfk0ykE30zGt3P6+7eSFL0ASwMh9g04AnXaPY6fYbMiMgG4GxVXSkidcBfgW3A+1U1/2DX/M/3VWCVqv5BRM4AQqp6j9/nMbgY0TeRsD3xUkZLn+aI6St3IsfHX7sfx+yVOTlhWlscHnU7L5yyoIX5R09n1z+W4WzoYHpNgO++7XAAOrauZfOzG/jcG5YQbizMBRrdPcCev27iXUfP51svbGJrR3rrJ1GIWTEifd20bkgpc7OrA6ItkLotMaTXdUe2dASHj8mbXXTutNn+ivvlV2hCQVL0hTzRF3eS7t1Iby+OE08r1HIVZh5J584dZYvny8VBc5u46b1D7teO2zez/W743oVHE5wzJ+O41/3ff2jvzb837XhT1zKF3jxFX8JCG4lEfCuu7gea0koxwbR6T/R1R9hnxlAyxoLaECu6PQ+AsfSVjIi0AP8EngY+rr5e3IfwSrwkOANoAIzoKxNG9E0kLBuQImL68nMlihXEyZG9W25L38ymMO88en7mQVtb4VEI6gCL+1dydOsK7h7cwiYnSigW4Z2tPwTgpW6L26jhzN2/Z25/Ydey3Z0N/IGTOa3734QCT3HQ89OgNU0Pz/Y9aL2ybf0r/PYzHxuxcyGM2gbR5mkwd2/OfGIav3149P58eOEeeMG73TitsMzY3thoS1/AFsI1blHrgZ6eZKJBKgWLvtYdzN7nlNwHjgGpdfqyMaU+RHtf9Yi++uYpdOzILz6xpsYVUpUm+hLXk2ElWxpdj8aeEQJ8YTjE3bs6iatilyj67mjt4LGO8nSOycahvz70euCIMk2/fMV7VlyZ57Ezgd8Cd6jql0XkUhE5W1XPAxCRS3GtgeeJyOPAx1T1aRG5AThdVQ8WkQCwA9gLWIzbkq0eCAM/V9XrvbluBpYB/wH+G7BE5LXAbap6rR8P3DCEEX0TCRHXxZt39m6hlr5QxpIt5bP0FehNaNkLWvZCdkbQPevh+VuR9vlofCYaF3j+VgAC8bnAG4mtuQ+swgrSWoNzgZOxtzzBufaj1GyzoXW0YHBCx0A9vHbxRhpHPox5x8LxHxg1ZvOOnTz07PMsO6SHr7/mmoLWBfDAb15k5sJGDjljPrUNTbTMzmy5SkfvoCf6UmP6LKG2Ibfom5pneZiB3h4GerrHzdI3ikRCTo7SPVPqgmzYXT0NBupbprD1pVV5HZsq+iqJ9DF9nqUvTa2+qCq3bN/DYe1tHA78q3OASDQ/a2eCe3d3cfvOdpoCXvmXyckfgRtU9ct5HHs/cBauRfAUoF9E5gCLgBdVtddzGb9WVSMi0gA8JSL/VtUXE5Oo6goR+SnQoKpX+fx4DB5G9E007FD+7t1E7E4hMX2aPXvXT0sftjX0hZwv9dPgyhfg2qdg8QFw/hexfv5DnMceBwLopzYithDcuBFuuonou/4A+4zu2pAN2dEL1zyJnv0jjv77s1x+4mI+/cYDRh3n/OBy4BVmf+4e5jbMzWtue906Hnr2eVpboiw57qSC1gXwxB3QML2ZJccdXPBYSOfeHYrpAxjo6QJGd4no6+tj/vwsFtgUOlt3AtBcpszdQkn8sJAcsWxT60M8u6ljDFbkD/UtU+jv7iIei2HnyFBPuHdvvfVWgsFg1mP9IBQKcf7559OSoz9xOtE3tT6ECKO6chzU4MbJfurlLXxwy3YOBz76yi66AxnCLzJgAVctms3HF83CLlH0FTq6AEtcubkLeJeI/FRVc5mL7weuFpHfA3twLXZnAXsDD3jH1AE/EZHDAQeYCxwOvDh6OkM5MaJvomEH83fvFhrTl8W9Ww5Ln8joOn15Y8lQyZaU0i8aiyN2YFjJloKntocea13Ipjcyeo5YLIYz4EAz9EXztw4lLC4BDeCokyxImy+BkJ1sw1YMo927bkxfuNEVfen676pqQe7dRLmWirP05XDvttSF6OgbLKqg93hQl9LZo3Hq9KzHzps3jyOPPHJMLH2RSIS1a9eybdu2vEVfakyfbQlT60Z35Ti2uZ6nTjiQfkeZ6jTDOvjncYeigcIStZoDNrNryi98K5xvA28FHhSRM4EYrh5OkOo3fww4CngLrgD8D27v3b0Zasf2TVxX76WqGhORe0bMYRgjjOibaBTg3i04ezdLIkd5LH02OlhcDJVYkmjI4dbpS4i+qAM1JK0Z0Wie3UtS504IXEdpqAnQOzj6+evp6SGg7serL1a46As6QeIaL1z0BS1igyWIvhT3ruMojkLAHnLvPn77rax8cHiMdVwVx3FY/9Rj/H35EznP0bmzvDX6CiZN3Fg6pta5pUJ6IjEaw5UvChI1Gvs6cou+mpoazjnnnLFYFp2dnXzve9+jvz+3BS6dpQ9gekMNe3pGC9SFtZ7Akxgg7NfUlNNtb0iPqn5L3Cf+QeC9wGEiUoNbj/w8oMM7LiIizwKfBS4AngF+CUwHEheEFuAFT/AdApwK3JLmtOldCQbfMKJvolGEe7diLX1psnfzH0xKcWZryNLnWcFKsfQNdeSA+ppAWktfd3c3Aad40RdwAsSdOEGrMHFhBy1iaURoviQtfcH6ZEmTgCU0Tp/OoiOOprdtT1K0JYiKBXVTGezupDOWn6XogJNPp6auMnqfJuNGc7h3W7zyIB190aoSfflm8I4VtbWuGzYf0ZcukQNgWkNolHt3GNF+N4kjT8EXd5Tv3btmlPVwsqOq3/SE3024rtpVuOVbngdSA4bvB44FnlbVuIi8CqxXTcYDfR34rYi8D1gDPJThlH8FLhGR5ZhEjrJgRN9EoyD3bmGWvmwlW8pi6StF9FmSbJMmlp2cZ6To6+3tpaensCy9fq8AbH/fAM1Bh/6+0XPs2bNnyNJXhHs36ASLbsUW6StcyCbojfZiiUVtoJYB77myLQs7EOSdn/tK2jFbtmzhxhtv5HXv/SD77bdf0eceN5KJHDmyd+vcrNG23kEWTK2cDNdM+C36+jo7aNu2peR5VN040dYtm9jy4koAZi5aTKh29HOazdL3wpaOzCeJRQqq0Xfv6p386MFXmd4QwrYmt2VQVReNuP8N4Bs5xnwL+FbK/TeP2P8ckLaxs6pemnJ7PeXLXjZgRN/Eo5js3ZHFgzMdb4VQjaHquPF2qfvKkb1rjy7Zki8yLKbPwvGEbUL0JcTVvffey7333lvY3PEg0zmRe++9l0Pq3S4V1133wKjj7ID7/BZi6Uu4nQMaIF5EHdRA0GJT5GX+9rfivpw7dnVwXPdx/P3vfycadzg5sI3ul9v4W8eKjGO6vTi/Sir1URCeuJYcX/ZT6l3RVy1lWxIxfX6Jvr9c+xV2rnvFl7mcfQ/jxccfZf1fXQ/fIWe+njf89+gSReli+iAPS1+sv6ByLTc+vI4FU2tZetWZvoo+udq3qQwGXzCib6JRZksfgGoUN7Qjdaoy1OkTi+jOHez68Y8LHhvbvS/OQBA4eHhMX2xI9F144YV0dnYWPndEee73vRx00ME82DuNPT2DfOQ1+44+LhzjnufuKcjSJyJYQcuN6Su0XA0gAYfd+go9L4WTwrYQYpEY0+LTWL9+PY4qc+wBIu39rO/bnXXc7NmzmT49e9xYpZIMb8jh3p2S4t6tBgKhEDX19b6IvoHeHnauf5VDz3oD+594asnz/fXe+2naay/Oev8HuP+XP6G3oy3tcdksfT2RGAPROOFgmtctFslb9D23qZ1lG9v50tkHTXorn2HiY0TfRKMgS5/78ucb0ydefJnjRLGs4YKiHJa+miX70rN0Kbt/+KOCx9ad/jl0Sx9O/4lu5xFVVBWNDgmp/fffv6h1RfpjPPf7h1i4YCHS1sDanjaOO+64Ucf1DPbAc24/20KwgpYb01eEpU8C7vP/mte8Ju2acvGJpZ9gbcdarn37tezqjnDsN+7ja288mItPXFTwXFVDvokc9UPu3WqhvnlKsiVfKWx7+UVQ5cCTT2fBwYeVPF/zsucA2OvQI2iYMpXBDPF9mWL6pje4r8XZP3yEQBqh9sXeLcyLx/nv6zOFjg2xu2eQxnCA849dUNBjMBiqESP6JhoFJXIUb+kbta8Mlr6Zn/wkMz7+8aLGbv/mUgbXvUJs504sz4Lj4CTdu6WQ+P5xktm76WPoagNuwHohlj4AO2gTjAaLE322l3yRoy5bJvqifcMKMwME7MIyiKuOROxkjpItTeEglkBHlbh3wY3r88PSt+WlVVh2gNlLivuhNJLa2lra2lzrXrC2lu496S3JmSx9p+03g7cdPpdIhtCUpsE4WLXsNS13yMFe0+p44yGzacjSd9lgmCiYd/lEww4O9Z3MeWxh2buplr5R+8oR04fXiq0IrJoQiEV0x87kHKr+iL5knT5HM2bvAtiWTdgOFxTTB67oC0QCRSVyJERfsQV2e6I9SdEXcxKJHBPb5ZWve9eyhJa6EG1VJPrqmlto3bC25Hm2vLiSWfvsSzBUeMhAOmpra5PZuzW1dezpT/8ZyST65jTX8oMLj8x8gptrwJnGzy4+xpf1GgwTBSP6Jhp2CCJdeR0qBcf0uS6VdKKvLNm7JSAhV/TFdu5IWvrUL0ufNST6GmoDRONKJBanJjBaNNQF64qz9Gl6S9/DWx7mB8/9ILMgHLA5lIP4v+f+j671+b0PUtnYtZFT5rk9cWPxoZItE5o83bvglm1pr5KYPvDH0hcdjLBz7ascffbb/VkUrujr6+tDVQnV1mZ072ZK5MhJbABCDaUu02CYcBjRN9EowL07ZOnLU/RZCffuaEtHuSx9xSLhIUufNX8WgBfT54Olz3usTlypD7nPYW8kveirDdQWbOkLhALJOn2pxJwY//v0/9If6+fAmv1weka/zjrgrqE5Ukdtb8rHO5ee8fbPCk7ljb2n0HXfRrR3kPcQYt6LHXS1O+4xknJw4p+kTCIj5xx+7LC7kvl4sYXaQ6djhct/iVJ1crp2E0ypC9FeRTF9dS1TGOzvZ8era7CLtP62bljH/2/vvOMkqcr9/bxVnSfP7MxszmxmWZZdQCQJilcFTChJETGLilf5KV69CqaLgl5U9BoQQURQEJQoSEbCwuacd2bz5Ny56/z+qOqZnpmeTtM9M7tTz+ez211V55w61WHq2+95gxGLMnVBbqX9ks7L5yMWixGJRHB6vESy9OlLSyQIRdXDnea4xKqTe6FSanMGbcuBTyulfpxB2xXAfyqlrhz2JG1yxhZ9xxu5RO9mKPpSLe+OOUufQ0ccTqINB9BmmDlE8+bTp5liRSkzOTNATyja6+ifSK6WvmSBHI/tfYz6znpuO/c2ljxcTqQxgDg1Mz8+ChQcNFp40rmWK+v/g0lU9u7vJaFt/3396WQ/TuBTeGBTG52bRj7BrxGOUfLWEUjOH8tO9B1qzy4wZzQpra4B4N5vfmVY42i6zuT5C/MxJaB/gma310c0Ek5aI3io5d20RIOQZfk1m5woB76GWbYtJUqp1YAt+EYZW/Qdb2QTvevILno3VSDHmLP0aYK43KalL27RVEbGOQnToYlgxFSv83f3EH59PoePnW07+cW6X2Q89lpZS2dpJ/dsvYcKT0Xv/kf3PMrCyoWcN/08jnS9TtHKWiref0K/vtsefg02QPmVS5i6cFbW16VUnyDccqiD9/7yFX515XIuWFSbXDxCb7m7vuNJRGXC56LfRyRxI2Gco7e8SaxthKojKCNj39EKn5PNh7JP8zNazDvtDNxf/w6xHMoNJlJSNQFPUf6WSxNFn8t6Hg4Gesv9xcm5znE0CFYglc3wEZFbgXMAF9AMXKOUqgd+CZRbFTT8mALwF0qpkxP6rga+imnGv1UptUJEHMDjQBXgBd4APqOSLSPZ5BVb9B1vZBO9m6VP37Fk6UMEcbqIHDhipmwBlOTH0gfm8qMyFL4ES18ylkxYwn3b7+OOTXdkPLZSClWm2LVzV78bnlNzcuMZN4KhMPxR9JLBlkXEWg4jtwAYSVhyjVn/HA6tL9I7WZ+czpQavcxNrGNkRJ8yMrf0VRa5jpnkzAC6w8ns5StHexqDSBR9zrjo8/uTir6s/fngmLX0bVuw8DYKV5Fi/cLt276cY9+blVLXA4jIJ4EfYdbZvRZYrZRaFm8oIsUislQptVFETgQqMMuunZMwXgy4QinVYpV5uxu4Bvh1jvOzyRBb9B1vZLO8m23tXcvSZxwDlj40QZxOokcbem8aSid/ok8TDKUodpuv4VCWvhtOvYEbTr0hq7HvfuJu9r2xjw985gMsnTQ4J1qsMwQKtCSiT1miD2P4aVaio5iyRS8fOdGXzfJuuc9FKGoQCMfwulJH+9oMTVz0+f1+3Fb5tXBw8LK5YRi5WfoiQXDalr488i4RuRYoJr1uuBu4GviK9Xi3UkoNeB814HoReRegYwrD7PxgbHLCFn3HG9ks72Zt6TNFhjIGjz/WLH0iIA4nsdbWvjxseRR9miaomOr16fOH87NsDOByma9zMJQ89U6syxTdenEK0aeGb3+LWj8GRiN6Vy9zE9o9Qn6EWSzvVhaZP3xa/WGmuGxRkSvxkn2BQIAij2XpSxLMMbzl3WPP0jcMS1zBEJEZwP8CK5VS+0TkDODPKbr8EXhdRP4LuBx4S5I2VwBnAmcppbqstsdg4e5jD1v0HW/ozhyid49DS58uYFUcobsHAOXIp6XPytPnSu3TlwtOl/k6h0KDLV2BrjDbXzlMdyhG0842HE39b5TNh800Lfs3thFIku/W5XUwb2Vt2jqz0JeceTTy9OllLmKdYVRMIXphz68MlZWlD+Dnz+yiMonoTsbkci8fPX1G6kZNO+DeS0wL1VjC4YEr7ofa/EXuwgCfvlqzfF84Sa6+nESfEQMjYvv05Y9SIAwcFbPo+mcTjnUCPhFxKKWiAEqp/SKyFfg5sNXy/RtIOdBsCb4yTBG4upAXYWNii77jjQJa+npTtqRIzjxWLH2I9JWZ67Ty1el9tXeHi6ZJb0UOGNqnLxfilr6j9UfZKTv7Hdv8ZCtHtlk3x6f2D+rrL2qFEtj68lFENSUdv3SCh0lzytPOI7686yyw6EqGXuYGBbGuMI7yAltsYrGMhcX82hLKfU4eXncos6GVImYo3r1kIlXFKa6jcRu074dF7wNvxdDtRpJwN2x6AI5szLvoczqdOBwOU/SlsfTllKMPjklL3xjiGRFJ/KP2ALAVM4jjCeBsAKVUq4jcC2wSkTal1BlW+7uAe4CPDjH+H4H3ish2oBF4GTOgw6bA2KLveEN3gRE1E86m+2MZt/RlGNEqKSx9vX5zY8TSJ5qAFcBhdHQB+ffpi1fkgPyKPl+xufS15dUtbHl1S+9+LeqhsnklQd9heooGCz4AJeZ72TxhFTIgxMIRLaK8bSmH9zdmJPr6LH2j49MHEOsIFVz0KWWkrcYRZ+aEItZ/+4KMx/7H+kNcd/962vzh1KIv/kPtvP+GCXMzHr+g9LSYoi/DZO/ZEk/Q7Or16cuTpS9uLR3Cp88wDF5//fXeiiA2/VFKzRzi0HUJz7+T0P5TScb4E/CnAfteAFZYzzuAtw9zqjY5YIu+4w3dSsBqREBLfbOU+I3uuLT0gYglajvbzX06qEieUrZYlj6XQ8Ola3SH8ufTVzahjKenPM2lcy9lWklfEfiOV7z4W+GkE8qoOHIS+y8ebNE9tOEILfubmbNkMUVz+gvw7sNBup6AzfXbKWmDeRWpXWgio+jT5yjrE30FJ4vl3WypsJaD01bxiFrX6chsyXhE8JSaj8HCiD6fz2elbLFEnz9PgRxpLH3bt2/n6aefzs1X0MbmGMcWfccbunXTiIXTL29kW3s3gzJsY8XShyYoQCspIXr4KABGLITRHSBcn8zFJN5Pwzl1atobgmjC3nVNNOx7nas6XHifaeDPq9rzMvWwEeFdXV+gcytsoc/HqyxYzM7q16loLaKYKXxny3cH9T2ldSWz1CwerX+SbcHX+h0rD1ZwGTeyet86fvPPm3nx0hdxakNXaRhdnz5L9LWPhOjLfHk3W+KirzVdFY+4pU8fQ6JPd5p+caHC5CWM19/ty9OXJ0tfr+hLbul78803KSsr47rrrsstHUwW3HjjjQUd38YmW2zRd7zRK/rSB3Pk6tNnpCjDNlYsfaIJGArn1Kn4X3sN5kwmsH0rQV8Pe/7vYyn71nzta1Rd8/GUbU5+x3QO7WwHYEOXH6dPp3Jy/pLXlkU9xFT/JWPRhXPe+X7KH+8Egb9d/LdB/V576nXqthzgyupPUL3gC/2OBQN+tqzvYL4sZXfjZl54dTXzU1j7uuq6qI7JqPj0iUdHXPqwLX2x7jDBba1Jq47EMaKT0SeupOeNo307NfAuqkLz5Va6LE6FFe3bni6331gUfWBa+wpk6fN6vTQ3N6PpOg6na0R8+pqamti3bx/nnXdewQWfjc1YxBZ9xxvx5d1Mgjmyjd5Nsbw7Fi19KMWUW35M6Ll/wbOP45w5DadjGpN//KMhuzX86MeEdmxPO/yJ507lxHOnAnDbbS8xvdLD169akrfpp+JocDXOyUXMSCLYNjk3o6FzcFUPB1f19DtmSBRDi0CTkwuPfo6d2wLsZEPKc30UN5HuKNTk9RLSIiLo5a5hW/o6Ht+Hf11jmlZLcM1ZQttDu/rtjb0jTOn504d1/uyXd8dY8IG7tKA+fZ2dnaxatYpo9STqmlrwrFrVr01jYyORSIRVA/anpP0AsAz2tkN3/3579uxB0zSWL18+7Pnb2ByL2KLveCNxeTcNWefpO5ZStoiZns89dy4l4SA8+zh6TSUSKKLs4nOH7Nb+wIOEDxzM6lRFbgc94fwFcqQj1hXGU5I8wjMWi1I2oYgPfvyUQceUUvzltucpLi5h89J/0RJs5ZZzhi6Z+cy6w3T86wgNm1tZOHvkI0r1MjfRztyrX8S6w/g3NlF06kRKUoi3hh/+kMCGjcz8y/19+36yBiOdUMsAn0vHpWvpq3jELfPjyNJXU1PD2rVrefLJJ6Gsmq6OHvY9+WTStk8OsX9o3gZr6oC6QUeWLVtGcXH+rPI2NscStug73ojfNPa9BCWTUrcNmTci1bADdj+bYkwnTDs9I0vfWFvehb6AFaWlD+RwTptGz8svZ3WuIreDjsDwBUImGOEYKhRLWo0DIBqN4nI7mTi7LPkAzhhGFFactJgfvfkjItWd/YJFEnE0d3BENyjf0AwXz8nXJWSMXuYmcjT3BM09bzZATFF85pTewJCkGAEw/P3aaB4dIw/BOSJCuc9Je0+az0csBAhoY+xPcgEtfaeffjonnXQSSin+etN/UVRRznu+9LV+bR577DEOHjzIZz/72SFGScK+F+GBq+GKB2Hq4B8/8RyBNjbjkTH2F8Zm2PiqzMd/XJu2qZndYzKsuxfCv0nd+KKfI8vNlEvHhKUvQfRpVhkxpam0KVtc06bS0dSEEQyieTwZnarYrXO4fWTSPxjdQ1fjAIhEIjidQ/uhaU6DWADOnno2P3rzR/xg1Q+YWTozadvtRzoJVFYx6dDJ/Pjp29Aqonx00UepLaod9nVkgl7mxugO07OuMaf6vj2vH8E9pwxnjS91wyQRouJxoIL5sd5W+DKo1xsPvBprEaWeUug8XLDh4wLM6/VghIK9lTri6LqOruuD9qdEN4AgFJdANv1sbMYBtug73ph7Pnzmpcwy+xsGPHANatlV8NH3DdEmAne9B3qaENEQcSQtwwamtW+sWPrQpFeAala+PrT0efqcU02rV+TQIdxzMrNu+VyOvObpS0Wsy3zt9ZLkwi4ajeJwDP211t0Ko0OYWjyNt055KxubNrKxaWPStuGogUzxcmbTSXQ+V0SDt46H17zCidWD6wGnonpaMfNOnZhVHwDnRB8oaPvLjqz7xil/b/r3UBmxQSlb8mXpA0xLX1qfvvDYW9qFglr6EnF5vXS3tQ7an1MgR8T6AWbX3s0JEakDuoGlSpk1LK19FwJfxqylm91ySOrzTQbuVUq9LV9j2gyNLfqON0Rg0kmZNY0/KZkE009L3kgpc8kp3G0N70xq6TOPyZix9IkIWPou7ruoNAUxhTLUkGXInFOnABA+cCBj0VfsduS1DFsqDEv0DbW8G4lEUi5fOTxCFCHYHeHXb/91ynPd8fJevv/4NuaunIhrg4PqzmlEm3Q2a5n7PBoxM+XGnOU16I7sbt7eJROY+PWVqFhunylxCI7yDKy1hgK9/9zE48AI5M/St6epO3WjWGhsij5PWcF8+hJxeX2EDw/+XBUiT59NRhRjVtO4O3GnUuqT+TyJVb7tMGALvhHCFn3jHV1PHb0rAq5iCJk3LU1zJs3TZx7T2L17N8FgbvVD58+fz7x5eaq5rQGGomdNA6o1wMzixbi6TetYyz1bzeXfJKgweE79LN2vBAkd2Ipe7EQvTX3zOPVIEIIaf7z1tZTt8sHkoMEC4GtPbqPbMfgaalu6iXQKz92dvIzltECQCcDX7l1H0Je6CkV9ixn9e85HF+D7hIOrnrwKTTTu+o+7Mp7vrtUNPH3HFloOdVMzozTjfmAKd0dFZkvsw8IwMEuK9qG5dWJt+amDW1Hkoq0+nU9fBnk1RwN3KUR6IBbtq2VdAFwe75ApW/Kdp28s88vPPncbsKxAw6+/9tfnfTnDtjcC3xGR+5Tqy9ElIi8AtyqlHhORKZjl1CYCezDtCE8ppW4XkVLgp8BSwAM8D3xFKRWzxlgPnA60isjngdVKqQnWOe4F5gNuYDdwjVIqd+dem37Yom+cI5qWPnrXXQJhUwCIOFFDWPpmz57NoUOH2LEj++W4QCBAQ0ND3kSfblnC2h4wa9eeVn0hNJjHgtsGLyMl4py8nFgXxLa0ZHSupcBSPNA8Mta+Jh12dQVRSe6F1bEoflFD+hhWWebPjrYgLeHUljenrvGuJRPxOk1xOL1kOq8efjWrudbONIVeY31X1qJvpFBJShZqHkfelncrfE7a/eHUAiYa7ku3NJaIV+UIdYKvsmCncXrzKPoitqUvD6wG1gCfA342RJufA88rpb4vIjOATcBT1rGfAi8qpT4p5i+qe4FrgN9Zx2cDZyqloiIyc8C41ymlmgFE5PvA14Eb8nNZNrboG++ks/QBuIogbNavTWXpu/zyy3OexkMPPcT+/cnryeZC0emT8CyoBEPR2dzEX7/7DZa87QImnbAgbd/mX9yOo7KCCcsvQzsUI/y+4VubNF1j6oIlOFzDX8KbIvD4EDfCW255nTMWTOGii85KevyhP3dwpAm+/Y4FnLAyu4CMGaUz+Meef+CP+PE5M3OQL6ny4Cl20ljXCWdPyep8I4ZhDF7edet5DeSIGoquUJRSzxDCLhYCfQyKFPfIiD6310c0HMKIxdAS6iAPKznzMejTl4UlbiT4FvC8iPx+iONvA74EoJSqF5HEFBAXA6eKyFetbR+QuH7/Z6XUUF+wq0TkSsAFFAE7c70Am8HYom+cI5pmLt2kInF5V1xJU7YMl6KiInp6etI3zJDEpUGPswx/rItV/3oA/pVBZx3oaGPJ+pdZWHY6f//xTXmZ03kf/wwn/8dFeRlrKNIFcngtC6i/K/v8d9NLzVx3+7v2s6AyvXgG832omVFKQ13h/cJyJtnyrkdHhY2U/p+ZUm5V9WjviaQQfZGxVXc3ToHr78bpK8UWwFPUl0Mvd58+GZs+kscQSqkdIvIE8JUcugvwPqXU3iGOJ3VyFZGzMK2LZyilmkTkCuDTOZzfZghs0TfeycTS5y7uW97VnEnLsA2XoqIiIpEIoVAItzu/Fg9faRnX/Oy3BLoyqyHaetfddD37LNM+9A7U6h4uv+lWJIn/XMYo+PO3vkqgq/DCJxPRp4jh78y+0kU8tUt9Z33Gog+gZmYJB7a2EAnFcLpT+xGOBsmWd8VjvoYqGEWGW4qttypHmOlVQ1hIo2M0kCPR0ldAXF7zdQkH/P1EX84+fQ7P2Et/c2xyI+Yyb7I/Ki8AHwN+KCLTgPOAuLXvEeAGEfmc5cc3AShRSu1Lc75yoANoERE35pKwTR6xRd84R3Q9vU+fqxi6zVJWmuYsiKUvniG/p6cn76IPoLx2IuW1maUNcc9fhPbgwzgOHyBCJZ7129Ccw4tKdjgcdG3cRFfV85ScV5hANcMwiMViKfP0eb1elNZGd3v2QQrxJM77O7Nbhq+dUYpS0LS/i8knlGd93oJjGH3VaSw0S5waoVje6u+mzNUXC4/N5d0RtvQZ+1fDP+8EZf5NOu/wYTMN1D1ZVORo3gXOEQgAGgcopQ6KyD3AV5Mcvg74o7UUuw94A1OwgZna5cfABhFRQMjal070/RP4COaSbjPwEnDq8K7CJhFb9I13MvLp61veTZWyZTgUFRUB0N3dTWVl7r5DhmHw+uuv5xxBDBDRhI4lS9A2PI9z0jLC/3geFfH3Hi/vaGdalqXatEUz6Hj1FQ4+8A/m/PNJXDNn5jy/oYhGzWX6VJY+t9uNoUVysvT5nD5qvDXUd9Zn1a/GCubY+PxBmvZ3ZX1egNpZpUNXGRkuamhLnxEcfjBHuWXpS5mrLxY2rVNjjZGy9HlM0efY+SjsfR4mnwyA0wiaaaBCWXxuSibCtCFSUNmkRSk1c8D29cD11ua5CYeagXdYwRiTgDcxhR9KqS7MZdpk4587YLsOmGA9jwCXDvMSbFJgi75xTmbRu8W9efpGwtI3HA4dOsTTTz89/AktWWw+qjqYP6vfIYeuc+7HP57VstO/f/BN3POr4OEniBw+XBDRF4mY70t60RfOyacPTL++/V3ZWfp8pS4mTCtmz9pG9qxtzOm8oglv//hC5q3MPslzOlQsWfSuVbovD/kXKxOWd4ckGjJz4o014nMquKXPXN7V2utgwnz45DMAPHH33cRiMa65xl7lG4OcgGnpE8AJ3KSUyj2Tus2IMCZEXzTaSVNTJh72NvnGvzCEUbkfR6rX39UKxUFo+hfRaBdRuvL+foXDfiqrDtDe/gJNTZlY0YSKitNwOEr67W1rM9M5XXvttVRXVw9rTsFdbTT/fjPVn12Ke6Z583v11Vd5+umnMSZMwJNhmTYAd1Exhs9sHznaMKx5DUXc0pdqedfj8WBoETobgjz9+y1Zn2NJ0zupj+3BeKdCyyLA4ZIbVhDJ0WoWixo8fccW/nXnVlY/UZ+xq5bDqXHBJ5dQVp0mijPZ8m4eLX2lXici0JbS0hcZ4z59mfnD5nwaq1xaoH49h8I+HrvivQB0T50LwP9a2zZjB6XURgqXU9CmQIwJ0RcI1LNxUxYFtW3yx2UA/+bgpn8P3UYHFvog4T0qxPu1eDH4Ay+wcVNm7WdM/zRz536937646CsvLx/2fCTBrytOfBm6p6cnK9Hn9HiJWtVKog1Hhz23ZGS6vBt2t+LSJtFYn731xtNTyfyeGi6+8xI6ijO32gnCtcuu5dIFua3cXPjFk1j1yF66WzJbto+EDfZvaeHo3o60ok8pAxmQeDj+3ucjbYuuCWVeM1ffkIzVihwOl7nsXGBLX9XU6ZzzkaupWPMq/klnsHKlKfJW1x9GBE5ZnlmVoTHHfY+M9gxsbPpRcNEnIrcCHwRmAicqpTYPbFNUNJdTV/610FOxScKBz30e97x51Pznl4dutOkBeOXncPXj7Dn0O1paX8zzLDSWL7+Pe+75C3PnzOGss5LnmEtk/YZPEI4MTrLc1tZGSUlJSmtXxrOK3/iTiL7u7m6qqqoyHsvp8RAO+NErKgpm6Ysv76a6drfbTcjbyPL3v5WTTsr+RrpjVz3P/GQPZxe9g8jMzJJXA/yr/l+8fOjlnEWf06Vz5iUnZNw+HIzyuy+/RE97Br6LMQOc/c2HvZa+vCVodqW29EXHaEUOGJH6u6JprHjrKbAmxrQz38u05VcBsOP3v8fhcHDmZVcV9PwF4/KPjfYMbGz6MRKWvr9jZvQeskCzpnkpKVk8AlOxGYi7yYunpiT16+9ZAz0xcE7hxBN/hd+/J2/nb2z8J3X1v8LnnY4mM+jqqsjos+BwlBGLDvb/a2tro6KiIi9zE9dg0Zer76HT7aGnrRXHxIlEGwq7vJvK0he3TuYa6DJn5lSelT2cW3wBp54+O+N+Df4GDnQdyOmcueDyOHC4dfwdGfguGgai9U8lI578WfrArMrxxKYjPL89uXX0Obp4cX0jN61/KunxRDxOjbuvOZXFk0fIB9BTOiL1d2m1/q5U9tW8zik5s42NzZAUXPQppf4NpHR6b2pqYsWKFb3bn/70p/n0p+18jCOCw5FZ9C5AqBu9fHpeBXp393YADCNIcXFxxmLK4SgiGhuc37OtrY1Zs2Yl6ZE9Wprl3WxweTxEQkGctbVERlH0xdPhhELZR+8COJw6pdVeWo9kd/1TS6by2uHXcsu7liNFZS56MohSVkoNjt51aqDlx6cP4KsXzOe5IQQfQPG6GDMry7l0xrSU4wQjMe5dtZ91+9tHTvSNgKUPgBYrj29Vn+jLKTmzjY3NkIwJn77q6mpWr05eIN6msGRcexd6EzTnE00zLU+xWJCioiKOHs3M303Xi4jF+s8nGo3S2dmZF38+SG7p81kO51lb+jxewsEgjinTCGzYkJf5DSST5V2Hw4Gu6zmLPoDKSUW0HvGnb5jA1OKpBGNBWoItTPBOyPnc2VBU5s5weTcGA4JSRARxOzDyZOl769wJvHVuiuveEGPl3EmsfOeilOPEDMX9bx7gSEfy2soFYSQtfa5iKO4rDziSPxJsTESkDghi5tbTge8rpe4f1UnZ5I0xIfpsRpFMa+9Cb/3dfKLppugzDFP0dXcnrc4zCF33ERng09fRYUYY5m1516GBLqhwn+jTdR2v15uD6PMQCZqWvlhbG0YohJbnJNSZWPrAXOIdTh7DiklF1G9qIRY10B2ZLb1NLZkKwMGugyMm+nxlLprq039mlRq8vAumpVflyacvLbFwRoEcuibUlrg5kkNy7Zxxl0JXYYKP+tGyBypn9aukUbtpE6WRKE3t7YU/v00ilyilNovIycCrIvKMUqo5XScRcaSoqWszBrBF3zjHrL2bQUUO6E3QnE/0uKXPCFFcXEwoFCISiaQNxHDoxUQH+PTFI3fzJfrAvPEPdObPRpzGcbo9RMMhtOoaAKKNjbimpV7Ky5ZMRZ/b7R62pc8wFB2NASonF2XUZ2qxJfq6D7KsZlnO586GojI3dZ0t6a1FxuDlXTCDOfK1vJsSwwAj85Qtk8q9HD5eLX0Tl/ZuRhobmf+MWdWr+cV8B4/ZZIJSap2IdAELReQ6YDrgBe5TSv0Qei2D92OWYdskIi8DFyqlLrGOX524bTO62KJvvKPrZu3RVLgt0VeQ5V3T2mXEAv385dIt0eqOwcu7hRB9ksTaU1RUlJNPH4BUmdVGokeP5l30ZbK8C/kRfQCtR3oyFn2TiycDpqVvpPCVuYiGYkSCMVzeFH/qYjEkSc5B8eh5C+RIScwKNnFkJvoml3vZeLC9cPMZiLsMgh0QKOA5jRi01cPi9/ft6ja/Y/s/+AEu+N73CnfuQqJnV2v6J5deeBuFy323/qt/eezL2XQQkbcBHuDbwPeUUi+JiAt4VkTeVErFE7aWKqVOtfpcncc52+SZkUjZ8nPgA8BE4BkRaVFK2aG6YwTT0pfmxha39IULYOnTrZqbRpCiItMKlonoc+hFxAYEcrS1taHrem+EbT4Ql44R7i/6iouLM/Y9jOO0ykypinKgMAmaR2x5d6IPhKyCOTwODzXemhEVfUVl5g+Kno5QStGnlAHJlnc9DmI5Vi7Jirjoy9DSN7nMw1NbgiPn7+argEgP/GhG4c9V1ZeWxwiYfqOG2z0oebZNwXlQRIJAJ/BR4EGgOuHzVgIsBOKi748jPkObnBiJ6N0vAV8q9HlsciTT2ruQXf3LDEkM5IiLtUyWTnW9CMMIYxgRNM0qaN/WRnl5eV5TPCTz6xqOpc8oMYNiCpGgOZMybGBa+oZT7s7h0imd4KV+UzMuT+aWjFMaLyDUEiN2moHuLPxNvKjMFFH+jjAVE1NYJA01KJADLCtv0wha+vTMfDwnlXkIRw1aesJMKB6B3H6nfNz060sX8DVcHG5YdHHvpvKbok+5xmDS6gKRrSWugFwSz6krIiWAAlZatXGTkfhHOwokfsHHYFHp8Yu9vDvOEV1P79Pn9IJoBY3eNYxQ7/Luyy+/zKZNqctyuN278RXBww/fh1JmRG19fT2TJ0/O6/zEraOCg0VfMBgkGo2mFVhxHJboi2mCVlxcUEtfJsu7LS0t/Pa3v839XEYNnfWlNGYQKBFnBisB2LOukXmn5r+G7kB8CZa+lBgGIsl8+gb7cxaEqDW/DJd3J5WbVuMj7cGREX1FE+C0zxT+PAMwApbfotvWDKOJUqrL8tO7AfgegIhMAyJKqWS/XncDS0XEjSkWLwHaR2i6NmmwRd94R9dR4TRLWCKmta8gy7vmTStmBCktLWX27Nl0dHQQCKR2VC8vD+IrgsamA0QjZn1Qr9fLokWpU15ki+bSiXT2f33i4tTv91NaWprROC63eaOOBAM4JtYWJEFzNBpFRNDT+BEtXboUvz+7lCsDUQt7INZ/jMZGMw/dtV/4QtI+d2y8g9Afp3FgZ+uIiL64pa8nTYJmZRhJfa/Ek7+ULSnJennX/Cwd7ghw4tQRytU3Chh+82+Aco8fS98Y5krgf0Uk/mu8C7gGGCT6lFKvi8gzwBbgMLABmDRSE7VJjS36xjmiaah0lj4wRV8Bonf7LH1BdF3nqqsyK7fU0PA4m7f8i49+5EMUF8/L+7ziDBXIAeYydKaiz2lZ+iKhEM7aiXS/8gp73/+BvM61efIkHDU1advNmTOHOXPmpG2XLU899RSrV6/GPYT/3LQJk3mlZB/1O4o40p17sI3X4aXcU562ncvrwOHU8Gdi6UuyvKu5dYgqVNQw0/cUiixF36Ry87N0uH0EI3hHgbilT+U5tZFNapRSM5PsOwpcnkX7/Bdnt8kLtugb72QSvQtmBG8BLH29oi+WXWCB7jCF18AI3nwjQ6RsgewSNMd9+iLBABOuuBwpwI0sGouhhUIowxgVx3ev10skEhly2Xt6yXQeLH2e6fsXcdH97yPkzM3aqIvOQxc/xOzy1GXgRARfmSutpQ/DMN0XBtBbfzcYRS8uoLWpN3o3s89EVZELl0PjSMcI5uobBeKBHLbos7HJH7boG+dklKcPzATNBRF9DkQcxIzsbmAO3Qz6iBZY9GluvV9yZsit/m48ejccDFJy/tspOf/8/E0yfo6f/Rz94AFCu3fjmVc46+dQeL3mNQYCAUqsgJVETqo+iQ+e9S4O3gtfnfItPHOzXzqNqig/eP0H/GPPP/jPU/4zbfuiMndaS5+5vDtY9IlVhq/r5UNoqVK+DIHoGkUra3vF45BEs7P0iQiTyjwjbunbvecWmpr+lb5hL8Ls2ddRW/PunM4XD+TAY/v02djkC1v0jXd0fVSXd8G09mVt6dMtS1+08JY+Yv2X+HKx9DkTLH2FQlWUo9fX4V+9elREn8e6xqFEn4jwntPP53d/eYnp/oW89YS5OZ3nhQMv8Pjex7lu+XVoSSx0ifjK3LQcSvO5HcIy6qzxgS50v5h7mhkVMyg9N00+xpglSjMUfWBG8I6kpc8wohw8eA9u96SM3Sk6Ozeye/fNVE94R2+EfVbntHz6SBOYZGNjkzm26BvniK5nlorBXQLtBwoyB133ZG/p613eLYwQjROvv2uEYr0lx1wuFw6Hg+bmZpqb01YmAiAaCWO43LS2d2TcJ1uCSqFrGoHVq+GKKwpyjlTELX2pcgA6nDq1M0vZv6WFmhmDhWEmnCcX8ZL/JdY0rGHlxJUp2xaVudi3PsBDt6wZsk1gxtXo7eW4rDbTl1Sx4l0zcU0rYcpNZ4BSKc8R9Ed44tebCQX6Wy5jrUH4+170Fw+nvqBwEDp+hvvP8J6vRPAUpRc5k8u8vLqnhebu3JNsD0WJx4Hb0T+wpbtnO7FYD7NmXsvEiRcP0bM/zc3Ps2HjJzl69O9MnvyhrOdhBAJEHQ7zb5SNjU1esEXfeCeTPH1gLe/mP08fWJa+LEVf3NI3Esu7gBnMYd2MRYTS0lLWrVvHunXrMh9szom8vH03L2+/vRBTBWCi14v/hRdHpVB94vJuKqYtrOSNR/fx9B1bcjyTixnL5vObDb9hR+uOlC2jVS60KcU0hof+fJUYYYQYulOjsyXImifqWHb+NBwuPaMAjtaGTo7u62TKvHI8xX2CLSIQbQngqfUmDRTppauLYFcHhw4pWg52M2V++iCXqRVejnYGWfH9Z9K2zZaZVT5e+H9v67evvf1NAMrLU4vsRKqqzqWkZAl1db8CEQQBNCs9jpiPoiHEt/sfD7TtwXAKur6T1tZX+tqKhsT7o/WNPeD40GNr5na640kfE4/b2Bx72KJvnJO5T1+hl3ezs1j0Le8OL/VIOuKWvoF+fZdeemlvipJMeerXP2PaohNZdPZ5eZvfQIrXrSP4wINE9u/HNWMEKigkkCj6enr2sGbtZcRiSQRgESy6NLX1bCDlJRcwY/L3iYRjPPij1ZzLRdx99FZWHV2VvvPU1IfveDBKz9nLOO/L93FgayuP/Hw9B7e3MXPphIzm5rdS+px16TyqpvRVgwnubqf5jk1UnT0F76KqoQfYVkfrvb/lvuZfpM8paHH1W2dRW+bBMLJ7HdPx4s4mntnWSCRm4Ezwc2xvX43HMxWPJ/PMGyLC7FnXsWHjp9i27etZz6X8sI7Lp+Fy/5J163+Zdf/Ck04U2lVEbMYetugb72QVvVsYq5quu7Ne3tU0NyJ6wZd345a+gRG8tbW11NbWZjXWK7EwFQ7hxBNPzNv8BhLyetkL7P/4NWhFmdXFFa+Xqf/7U5xTpgzr3Imir7NzH5FIK5MnX4bDMbyyeB0da2nveoqTJt6MphVRM6MU6VzMvz/+72GNG2fXbWfQGm4HYPK8cpwenX0bmzMWfYEus0iBt6S/T557Zini1AjubEst+mJhirRWIH1OwTiVRS6uPC3/ot5Q8My2RjoDEaqsxM9KKdrb36Sq6qysx5sw4TzOPHOV5bOrzJJ3GCilrEfD3I8CZaAwrEdF619/QrPaRjTyMU497bRBx/u21aCx+9olPx4/t8L62zfk2AZqOMfJYiXAxmYEsEXfOCcrS180YNbp1fP7sclleddMQlxU8OVdSVzeHSYuj4fwMGreZnSOOXOovPpqIocOZdTeCIfoefElet54k/L3D0/0ua3UGoFAgGDI9GObd8J/o+vDi75sanqajZs+R2fnJsrLVzB9USVrnqzDE/Ph9g3fyd+hNFrDbQDoDo3pi6qo29SMMlTqZVmLQFcYEfot7QKIQ8M9p5zgtha6a3xDn/9wA27xo2vQvq2V7iIHCHgWVeEoG9l0JeXW69meIPoCgToikRbKyzJf2k3E7cpMPA+kI+IirHmAE6jIYll5bHHjaE8ga0SkDggCIcAF/EQpdUcex/8s4FVK/W++xrTJHFv0jXeyid4FOLK+73meKOoOEzM6oXE7aA6ommNWAUmDrhcVPnrXldzSlwtOt5dIqLCiT0SovSHzpTQVibD95OWE6+qGfW5N0/B4PAQCAULBIzidlcMWfABlZSsA06+svHwF0xZVsvqJOg7uaGPOyemTUadDR+iIdOGP+PE5fcxaWsWetY3sXttIeQqxFqf1cA8ur4OWg6bVuantHgLRVxBNiM0KEy3yQwoNXtN6hDkCDlcbR1q2senQk+a8utw4qr3Dvr5sKPaHuf6ULg7uvoeOg+btIRIxBXF5+YoRnYsZyKHb/nOjwyVKqc0isgRYKyJPKKXSRCRlhlLq1/kYxyY3bNE3zhFdQ2USveuzlqfuyH9+uYXxJy+eZj6+91dw8pVp+zkcxSMXyBHOg+jzeIgU2NKXLeJ04poyJS+iD8wl3mAwSDB0OCv/r1S4XJUUFZ1AW/sqZvI5ameV4vLo7F7TSEllbqLSW+Lq7aspwRDF7vbdLK1eyowlE9B0yTrQ5K8/NIMdZr/rHpy+EOWVJyDFgtOXWjg6cMIRcJUEiGmlOGf6iBzpwYiFMYzC/Yk2uiPE2vt/Hj0KFmsKvaGTUILWKg+dTeevWunizYzG9syvpPzi4VV9MQIBorpjXIm+gze8fBuwrEDDr59681lfzqaDJfzagCkicggoUUp1A4iIAkoAA7gbWAxEgB1KqQ+LyHzgLsAH6MBdSqlbReRGoFgpdb2InAj8CigCPMBvlVK3DftKbYbEFn3jHV2HTKJ3F7/fTNsSy8znKBv2H/gDweAh5p3wLXjo09CyK6N+ul40IhU5ID/Lu06Ph2BX57DHyTeumTPzKvoCgQDB4BG83ul5GROgvPxUjh79O4YRRdcdTFtYye7VjexenV0wTRzdoXHNrWfi8jjQlMIQ2N66naXVS/EUO7nk6yvoas1MoL/28G50h8apF5kVQvY2Buk5vIK3v+N3mU0mcjts+SY1kxfR2hBmxcq/0vTbjaiYouZdJ+V0fZnQcs9Wgns78CREC/eEojyzrZHl08uZVjlArKZJNxgncribnrWNlF00e1iCTfn9RB06jlGoLmNjIiJvBZox6+cOxTuBUqXUIqtP/AP1eeARpdT/DNifSB3wdqVUSESKgTdE5Cml1LZ8XYNNf2zRN84RTc/Mp8/pgYUXFmQO3dprtLa1MW/JB+Bf34auQTW8k+LQi4hFRyeQIxdcbg+dTbmJlELimjmTnlWr8lK+rU/0Haai4vQ8zRAqyk/l0KF76eraTGnpiZx9xVzmn57b0m5DfSdrnthPR1OA6mkloBQO3cXOtp29baqnl1A9PbM8gq88uIvq6cXMXlaNUop9z3UT7PIQ6AoPCu5IivVDylfu4cBO8/OslbgIHyxMiqTe03aFcU0ppuqyBb37dH+Y7363nm8vncWyM2flNG7XK4foeHQvRncEPZPrHwLD7ydaUoxzHFn6srXEFZAHxVTsc4EPKaXCKQT8BmChiPwSeAF43Nr/EvBjEfEBz1v/BuID/k9ETsK0GE4GTgJs0VcgbNE33sk0ereAaLoXw7BSVZRMhK4jGfXTdR/hcGESHffi0ECDWHuQSNPw0sMU6eW0hAqT4Ho4uGbNRAWDRBsacE4a3pKs1+ulo+MosVg3Hnd+lnehLz/c6jUfHP5gxTDnwnLamx42RZ+hqPBV8WKanH9D4e+K4LPETSzWA2JgRHw0Hehieqqo3TiW6Csq8xIORImGY+jFTgwrKrhQxDrDuGeV9dtX4ukL5MgVZ7VpIYw2+Ycn+gIBohXl42p5dwwR9+n7EPAHEXkFiGHloRGRXr8KpdReEVkMnA+8C/ihiJyolPqbiLwGXADcAFwDfGTAeX4IHAWuVkpFReRpzGVemwJhi75xTsbRuwVET4zeLZkIzbsz6+cYgehdETSfk55VR+lZlZkFcijmsYS5xYuIdoRGPCozFa6ZMwEI19fnRfTFDFOIezyThzu1XtzuWhYv+imBwP5hj9XTfYCGpr/R2rwemA6xGJW+Cexs28lLB1/CoTlwak7zn+7se279c2iO3v1ENKKhGN5SUyxFIh0AxMI+mvZnKPqiIdAc+MrNe11PRxitxIUKxzDCMTRX/itSKKWIdYXRSvuLMl0TSj0OOoch+hw1ZvBJpCmAe3Z5zvPrrchhi75RQyn1gIh8GPgGsBtYCTwL9Jb8EZGpQKtS6u+WaDsMVFoWvr1KqbtEZBfwhySnKAc2WoJvCXAW8OeCXtQ4xxZ9452xYOnT3MRiQbOKRPFE2PdyRv10vbjgPn0AEz6+hOgwrXwAu194lcqjVUQOdY9N0VdXR9Hpw1uS9Xg8CGa0pztPgRxxJk58b17GCYdbaWj6Gz2BDSh1EQC1xRPxR7dy7bPXZjVWSbCSK/kOt2y+mbrW9UxzwWcrwQ88/NqTfC/41CDh6NAd/QTkRftXcZoIjxz5G8Us4g9v3MPsYBHLmc79q+8lWgZO3YlLc3HutHOp8mYgJNNg+KMQU0ktceU+F+3+3H139VI34tSINuVeZ1pFIhCLEdUdaLZP32jzDWANpo/eb0SkA/hrwvETgZstca4D/6OUOiwi/wVcKSJhQAHXJRn7+8A9IvIJYCfmkrBNAbFF3zhHdA0VidD+0MN5GEwoPvssHFXZ3ZQ03YOZLDWClEyEYDtEAuBMna7CoRcRLXDKFgDXlGJcU4afpiawIwRHIXykK3Wy3hHGUVODeDyE99UNeyyv14vLbfqledz5s/TlE5erklhgEkptBusHz7zK+fz9vV8iEA0QMSJEYhHzMf5vwHbUiBIxIoQPa8TWwelzVrB86my84f0QehKjyMmEpqnMLp9t9lURojGzjz/q7zfmGd1HCCqDl9ue510s4uWdr7HRFWA51/LwhgfZ7tvXO/eFOxZy/4X3o8nwhJDRZYq65KLPOazlXdEExwTvsH4oKb/Z17b0jTxKqZkDtncDcT+AexMO/ch6fNL6N3CcH2Iu3w7cf2PC83XAkmFN2CYrbNE3znFU10AsxpH/+q+8jFf+4Q8z6bs3ZdVH18xlrVgsiFZiWYe6jkJlakdy3VGEUmEMI4ym5e47NFI4ij34o124jxY2+CRbRNNwzZiRlwher9eL290D6Ljdw8+hVygkuhA8b6KiUXNb15lTnn2KkX2xJp5gE5ef/GFqZ5bS2PgUmzY/yclzT2X1Zo3/OfVH6RNIP/Il2PlPHrj0Pu5c/W++fdJ3WTCvnKbb13PHW3+NLCgmEovw3IHn+O5r3+WJfU9w4ezhBVXF4qKvdPD3pszrpN0/PH9CR42P8IHcA1EMq35zzM7TZ2OTV2zRN86p+OhHKHn7+ag81PA8+p3v4H8zszxeiWiW6DOMIJRYpc26G9KKPke8/m6s55gQfU6Ph45wA7JDZ9Ndr4zKHFweH6d/8DIczv5CxDVzJoF162j7y1+H6JkZsa4u3EV+HFolIvn3RcsXHsdSwq7n6O6uM3fkuIQYL8Hms8RTNGr69FVNngg08tJfduIrTb2UP/dAC2UhjTVP1YPAzjcaCDT4mQrUvdJE9y7T6jVJLeM9DR/nmb9sonuSD3eFULk8t3mX1EENGqu71xMdEFsU9eyhqcfPiweiOY0NUOGCilbhpX0vonK4y+j1R6jCtPTt69xH7MDo+h3b2Bwv2KJvnCMiOCfnZxmu6Iy30HjLrURbWrJa4tV086Zoir64pS99BK9uib5o1I/TmSwF1NiiZsYsdmp7qA5NZetLz434+Y2YQSQYYNriE5lx4rJ+x7xLl9L11FMc/c53hnUOf/UE3P8Zw2ga2zfp0tKTaY5AU8MbABmVW0uGv9O0mHlLrEAOS/RNnDmFkspO9q5rSjtGbVEHboew5aVDoKBpfydth7uZ6tNp2dXOrm1tvW1nqGWEYiEa90fRlYP/afwGAVf2FrUPNV/ANbyP61Z/hZCWxH+vDL4wjI/oOR2ncAOf4Janf0CdJ/tCDrOPKG7GFH2P7n6I3U2ZBXfZ2NikxhZ9NnnDd8opAPhXr6H0nRdk3C9xeZfE5d10/RxxS9/YWi4diolz51F8RQntD+3ms7fejSOhmkRfEfjExwFF6YcoUt9XTH5gG8Ma2yz+3t3SzN/+579paVpLZZert0A8gP7Bk6k5/5coFQOFVSxe9R878Xz0n2/8PNLdRXfDz4ju1gnt2oX7hBMK/rrmQmX1QhrqvBxp+ivOi6NEK1+kbU97VmMUF88n0DUfl0fH4TStmtFIByI6RSXlXPXDMzIb6P7fQWs5n/neuTxw82rcPgcXf2kZh7/7GiefXs1575vbr/mh7kPUbW9k/R1t3LLgF0xYmH2GC89zPRjtIW6e/JtBx17b28ybdW188by5CIPFsOhQvciD7hpaKGuNUfhjJ7cuuZno/Bys8Ou2wF3fIepw8LHFH+OEk8bm5ygdS2x3NZsxhi36bPKGZ9EixOvFv3p1VqJP082ADcMIQlEF6K6MRF98eXfHzptwOEow1YrqFTMqcTtBvAxq03vM6BM8g471tekVZJaYAgYd6z3XwH3KQL09xs71gCS2GxkWfAja+AFvZL8KnzFuN0Q6a2m54w4m/+hH6TuMAmXVPrr+vQJ91muE3m7Qo78O+zN/UZSKIaIT6f5zvwTMkWgnDkdZdn5osQjopqWwqMzFkd0dPHPXVgLdUbQ1jbjbB1viDMM85+Hno0T2ZH4uETjp/GlI5CBtKsKOhwdXiKnExTupZefDQ1sQqy+tZfHbhi7RYZTGOCyvUvR4NzyRvRU1eqSFAKalz/uCn7Ln2tL2AdB8TiZ8fDGuyfmtD25jc7xgiz6bvCEuF96TTsK/enVW/XotfUbIvCsVT8xI9BUXL6S09GSikXai0U5ArJutZloopO/RPNb3KOJE0EAkeZve/mab3n6Yx81+Wr/Hvv7x88aP9W0Tge5XD+OeXYF7elm/NvHzxueQOP9+jwPm1v+Y1vsa9J+j2ebZO/6PyinTOOXd70veBi3h/IPnH7/+odpEozF+85vfMS1Wxpa1r7Ljox/N6rMwEE8kQm1P/iO0FULD5C/ifXYBs9bdTe1/fYPKq67KuL8ZsPF5QtFd+Ern0rBvD2F/D437jtLjL+fAlo0ZjyWNQSb63DiAmSdOoPlgN4d3tWMEY6hgDH1Xe9J+mi50NAWIZFEtpqcthKYJi7pC9IRiLHjLRFZe2N939slNR/nBE9t44DNvYVL5YCvigzevpqk+9ZKy5tKpuGRezhG8gfV7CbwKMV3HO6eCkolTMurXs7qBtod3U/O5k3JesrexOZ6xRZ9NXvGtWEHzL39J+98eQhyZOfIH/fvw1mn0HHkerfgw7C+BQztA/weexYtxz52btJ/bXcPKFQ/mc/ojwuGHVuEpKafybfNH/Nx65CXa9xpUV2duic0WTZvMTqOHnW/NcHkzDZe1t1Och0CjgfjCARrKFhM5/7+ob5+HfueWzDvrbrRpEAhtwSWV/OmGRF9IN1v/ll00/Blz3bwFWHTmZBadafrYtty3ncjBLib+v5VJ+7zw5x3seuMoH/3eWzIWOI/8fD0N9V3MxcAfU8xZXkNpVf/USFU1Pjo1Rdit9Tv2xBNPsHnzZsLFUQ7VwZofP5bVNWbDtN27WIZp6fMtqaZsRWYl4Ry1RbT9ZQddLx7Ec0J5weZ3vCIiqwA34ALmAZutQ+uUUh/PoP/VwIVKqUsKNkmbYWGLPpu8UnzmW2m+/XaOfPObWfWrwEEXf6Cf/eCxG3AvXMjshx/K6xxHG2etD/+6RgKbW/I2pl7qouaLJ/fWCh6Ksupa6jenqp0+fD7/+c/T1TX8urFHjhzhH//4B44vfIGpQwj/4bDo0b3seKOBTiZAkwFNg5c6h8ZFbU0Zvqp6PIGTAHj3F6/nYMP/ojuKOGHuDRmP9K9bb+Bwx+D3TS92EkxRiq12ZilbXjpEW4OfyklFGZ2rZkYJa5/aT6RUJyIwdf7gAKhyX7wUW/9l5R07duDz+ajyVtJ8oJuFyyczzHSBQ1Laai7nLj31VObNm5dxP9+yavxvHqXzqTo6nyrM3I5nlFKnAYjITGC1UmpZpn1FxNYTxwD2m2STV7zLljH3pRdRwWDGffz+etZvuJoT5n6L6urz4YWbYfvjNEUupeflzKpzHEuUvmMGgYmZ3aQzweiJ4F/XSGhfB94FlanPXV1Dd2sLsWgE3ZEmf1yOFBUVUVQ0/Ovz+cwarq2trcMeKxmnXjSbUy+anXP/DRtX4K+oI7K3C013MP8tZ9H2xncpLZnJtMVLMx5ncmmEva26WZEmwRdQK05diq12VikADfs6sxB9pShD0R1VuKt9OJKMW+a1RF9Crj7DMOjs7OTMM89ketkSnt6yhdOXraR6eknG15kNzUeO0AS846KL0Lx91kbTPzY1lR9bRGhP+0i6yg7N2HRpzQoRUUCJUqp74Lb1/CbgPcA/gT0J/aYBDwM/Vkr9VUS+DnwQU3ccAj4FtAP7gOVKqSNWv58DR63kzjZ5xhZ9NnnHWZNdUt5YQCN2GGRSMa7J02HWHNjbjktrp7O9HbX6TxkvFQ+J7oQF70lb5WMkcM8oxT2jNG/jqUgM/8YmQnvbMxB9taAUXc3NlE/Mb5m0fFNSUoLT6aSlJX8W0XxSWnIizc3P0Xl4N5WTp6DpOtFoJw5nWfrOCdQWhdly1E13awslVRN69+vFpvgyuiNolYM//xW1PlxeB2v+Wce+DelTwwBEI6b/X1tMMXFm8s9gWa+lr0/0dXV1oZSirKyM6mmm0Gs60FUw0acCAdNf1NPnU/jMH7ayY5j1r8c6N954423AsgINv/7GG2/8cgHGDSilVkLv8i4ichLwJ+DzSqmXReQjwBzgdKWUISKfA36ilLpSRO4GPg3cJCLFwGXYVToKhi36bEYdswwbxAzLOli9AABH/aNAOdG/fAlnUR7yvl14G6xI65ZyzCFOHdf0EkJ7OtK2Las2BXlHU8OYF30iQmVlZcEsfcOltHQpoOjxb6Ny6qkopYhGO3E6shP0tb4AUELDvj39RJ9mRQU337kZcSRfR317hZNwMAYHMl+abhRojypOXpI8l2bc0teRUH+3s9Mcv7S0lLJqLw63TvOBwqVKMvwBxOvttXy2HO5mx6qjzFw6oWBCsyAMzohzPHL3gO2lwEOYvn3brH0XAyuAtdZ76gDif7B+CbwsIj8APgI8rZRqLPisxym26LMZdXQtITkzmBa5/9yK46WX4c2biF58L87FC4Z3kt+cA0c3DXOmYxf37HK6ntuP4Y+gpSj7VVptVjzpbDo2/qZWVVVx9OjYtO6Yog88k/ZSVjuV/QfuQKkY3T17OHDwnozHMaZ2MMFwcOjwvbgP7qS4eAEV5StxzyjFd3INRoro3JLK7HP0VW1royMUo3he8oTmboeOz6X3W97t6DDvz2VlZYgmTJhSTPPB4fttDoXh9/db1l331H4cbp3zr1qIp7gwbgljgQJZ4oZLDNAARCTZB26g+j8IlADnAnHRJ8D3lVJ3DuyslDogIquB9wLXYlr9bAqELfpsRp3eMmyxBD/Asik4Zp0IQDTkTFuSLS21i6Bx6/DGGMN45pTT9ex+Qvs68S4euhpKSdUERNPobGoYwdnlTmVlJdu2bSMWi6HrY6usm9NZgcc1l4o5u4nwGLt3m9Gszc1P09z8dOYDTYep0xuI8jg7dz6Orhdx1plvoHs9VF6a/wjvqY/v441H97HhxUNoQ0T9nh5xsf65A1z2wkEAauhkikzhK7esI4bGnJBGbUT42hefyfv8ABYf8lBe+hbu+OIzCDAtIjQ4FJ/59gsFOZ9NSnYDK4FngSsyaN8KvB94UkS8SqmfAo8A14nIw0qpNhFxAwuUUvGosl9gLgc3KaVey/8l2MSxRZ/NqKNpTkQcZp6+BBzV1QBEmzLzV0pJzSLY9CAoZeXUO75wTS8Bh4Z/XXoxN6dmOWp/mMCW9L5yepkL19TRW06rqqpCKUV7eztVWZT2GykqjOt5+u6fcPlNP8ZZ2sO69R9h4cIfMaHqbZkP8rOTebb7dA6267zvWx9n46bP0dLyAjU1/1GQOU9bWMmbj+3j1b8NXdrMrK2TaFGrBCoZmIRnRqQw36XumtPoBmYkBC9PjAoTcy8HnBG+6u1MXPlHRPJTRvCP/5uXYUabrwC/EZEOIKPi3EqpDhG5AHhMRIqUUt8TkQnAi9byrgb8CthgtX9RRILWPpsCYos+mzGBpnkwYoF++xxVlSCSH9FXuwhWd0DHQSgfupLAsYo4NDxzyghsbkmbCuYU7/nQAi33ZGD5FKj40iK0Ai6piabhKUpeQSEu9FpaWsak6Gs5dBgVcTNh6kI6usyk5F7PVFyuLOYaClFbVsHW7Yd4+ff/puRkD2tf+jGBvW9kPZ+SyirOu+azaNrQVtGJs8v41G3nYMSMjMf9298eoq2tlU9+8pNZzykXDn7hixh+P9Pv/D0AulPrLXVXSFav+TWBgKKqMgvRnnrEPI0zsiil6oAJ1vMngCcSDv8ooZ0M6HcXcJf1vBtziTd+7H+BpDJYRGYBRcCfhz97m1TYos9mTKBp7r5ADgtxONCrqvJk6VtsPjZuHbuiTyn460fhSG559CoNN9Gq6rTtXj1Qzp629FHMxY5y3lr7fv75rVuo696ctv1wqPKGmVsZ4IRKP9VF4d6Kr1MMxZdUB96H/oxyuws6h1xo2VFNucuBfvtyymIBzgi34l5/NWhZiORokNmzqtnRVkpPWweOI7V4pxygp70BFcv8T3QkFGDvmjdYfM7bmXRC6mVhp1sHMhdRXf52yipLcKfwFx3Iof/3NUK7dmXcPpHI/v14T1qa1fmGS3v7ajo61jDvhG8zbdrH8jTqLXka5/hFRL4LXAN8VSmVWwkXm4yxRZ/NmEDXPX2BHAk4qquJNuZD9C00Hxu2wLx3Dn+8QrD/ddj2KMx+G5RMzLq7hplGPx3LJ0UpOxRMn8ZMNRLr6OGkyQuYVXww6/lkSiRqUH80xBuHXaw6lF26k7HACVO9MGM2IX8dHR2d1NScCrov8wFmnk35GVdy+fvNz2h7+2rWrL2Uk6904/Fm/gMlEgqx5rEN7Np1C359cdI2IjoTay/G55uZ+fwwAzkmT56ccXvD76fz0Udxn3ACzunTszoXgHPKFMouunDI40opuru3DvqhOBz21d2O01nB5Mkf6rff8EfofuMoKpK5ZdQmc5RS3wa+PdrzGC/Yos9mTGAu74YG7XdUT8iPpc9bDqVTx3Ywx5t3gLsMLvszuLIQDVlSCpycYdvWB3cS2FTKnOuvQvT8l18wjAiHD/+F6kgbJ/aEObqtiUB7/2X+w4cPE41FcbnyZ+lzOBxUVVVa9YaHx+QTJ7K3tpjOjhAtrSVUn/0rcCRfrs6EsrLllBQv5mjDI1n3rV2uCPM8dXUvDNFCcejQfaw45a94MxSUkUgEv99PWVnmgjzSYPqWVn3yE5S9970Z98uUPXt+TP3+3+Z93FmzrkNPEOzKULTcv4PQzra8n8vGZjSwRZ/NmEDXPEl/tTuqqwlt256fk9QuMi19Y5HuRtj6D1j5yYIKvmzxLqjEv7qBUF0nnjnleR1bKYNt277O0YZ/9O2sAvcAd7hZc/J62rzT4oeWfeZzn28Wuj68aiQiGqeemr3gA3jxT3ey9olH+MKd9+P0DM6u0d29gzVrL2fN2ssoLV2KoINoiOiIaAg6Iv33BYMRZs3egO7oZPeeVQia1Saxj9avX/jgfnreGqO1ahs9RyK944poA/ol7CN+zuT7sPq0d7xJ/f7fMmnSJdTWDG0NTIbhjxBtSW4dFNEpCS4jsL0vL2RoVxuhnW2Uv38uxaflkNfyOKjIYXN8IZmUtSk0K1asUKtXH5sOrzb5YfWaS+noWIPW6wslgFD8D4Oif0LDLzXL0iQJx61nIv36JB43j5nPZ+5uYlp9G12lyXObpbf6DHFcMmiT5jyOSBSPP8iGs5cTLC7qHUeQhCElYQTruSS55t798a2EsQb1SZiTDB5fIi6q/v4RIhMaiFY19h4fPKdUzwfOydxjxAIEQ4cpn7CSqf9xccr8gvnkwIED3HnnnVx22WXMn5/vlCjSr5TaSFO3YS1/++G3+cA3bmLWslOStunoWM+uXd8nGutBKQOIoVQMpQyUioEyUPRtx2IRotEwDocGKLMNo7vUWV62kpNP/iOalolDg0msO0zDT9dg+LMLAfadXEPFh+fl9L6KyBql1IqsO9rYFAjb0mczJpgz+yu0tL5kBjMAoFAojBnbMdQqppR8ECnvE2sKRW9xTatPv32ovsPWk5iriZ7IK2gqsV0CasiNAecdCpX06cCx+s7etz/sgY7plTBhHp6B/Ya8vsT99Gsbf/0GjtN//on743VNB4yv+QlM3Yn3wDycTbVDXnmu+ORkZJ9Ge3AvVVcuzPv4yaiurgGE5uYWFizI/5L1aBGLxVDFpWgOB68/8hAH6+vQdB3RNDTNfBRdt55fizvxmENDND2hfV/bffV1vPrKq3zxS1/qjaA2PytGf7HYux2j9d57aP71r5n1xGNoPndfOyxRabVTGJAwRtJ9lgCN70OECVXnZiX4ANof24sRilF19WL0ogx/YGiCc1LRqAp5G5t8Yos+mzFBRcVpVFScNmh/56KnOcQqphddhueERcM/0eBTjBlKgfzLqjxQYDtF5/P76XyqnsDWFryLCp+Wxev1UlJSQlM+fEXHEG+88QZPPfUUXk8Rh7ds4PCW3KLAk1EC3PX5j6HpDjRdH/qfJRxjTc0YE6ez6bbfWMc0Js9fxFs//JFhzUMpRedT9XS2H8quX9QgsLmFkvOnp61PbWNzPGOLPpsxTV4TNNuMSUrOnkpgQxOt921Hy9QCkwWOKg8TrlnSLxClurr6uBN9u3btoqqqiv+4/HL87W0oI4YyDAwjhopZj4aBisUwDANlxDBiRl+7mHW893lfO5fTicftxojFBvyL9o4Ri0bN9rEYPQ1NxBxOHG43Khajs7mJA1v+yvJ3XYy3JLvaxImE9rTT9cIB9DIXDFGPeCg8i6oofdsYTdc0hhARBZRYefbi+5qBFVb+vlR9nwC+qJTaIyJXA68qpXbmMIcbgWKl1PVJjn0I+C9MrxEPsFYpdUVCvx8qpcID+yUZ58vAn8dbnV9b9NmMaRzVNYAt+o5nRNeovHIh3S8fQkXz6ytmhGIEt7TgX9tI0cq+NDjV1dWsXbsWpdRxsXQXiUSor69n5cqVnJB3P8Xsqbv0MqS0hhnf+j4Ah3du577/vp76TetZcMbZOY/b8/oRNJ+DidevRJzHz9L88YJS6t0Jm1cDzUDWom8oRGQSZtWO5VbNXgGWJTT5DnArkFb0AV8GngFs0WdjM1ZwVE8AEY586785+t3vIR4P4nahuT2I293vueZ2m/s81nNXwnO31c/jQVxuNI/VNuG5a/p09PLy0b7kcYmz2kfFB07I+7hKKRpvX0/nCwfwLa9FdFPgVVdXE4lE6OjooPw4eM/3799PLBZjzpyxEeocaWyk6NRTe7cnzj0BT1ExdRvW5iz6Yh0hAltbKD5z6nEr+J59bs5t9Bcx+WT9+eft+fJwBxGROuCPwDuAScCtSqnbE45diFmrdwXwcxH5PnC9UuoZEfk68EFM7XEI+JRS6qiIlAG/B5YAR4EDQLKakhOBCNACoEzn0nXWuX9ptXlVRAzMaiDvBq6jL4Xp9UqpZ0Xkm8Bk4EGr/NsVmDWGfwCcA7iBjcDnlFLdIvJp4D+BEGZK1A8rpfKUVmJksUWfzZhGc7uZ8tOfENq9BxUKYoTCqFCo73kwiAqHMIIhol1dvc9VKIQRMh9VMLMErq65c5j96KPHheXHxkREKH3bNFr+tI32x/bgnGBWIqlp87AoOpXWF+p6XQjyiXtOOc6Jw0vdkg179uxB13VmzJgxYucciuDuNvTqs8G3hPZH9/Tuf8vM99O9o4W2R/fklB0x0uAHBcWnZZ+43Cbv+JRSbxGRmcBmEbkrcTlYKfUHEfkYpiB8DEBEPgLMAU5XShki8jngJ8CVmMmZO5VSC6wavWtJXud3A/AGsF9EXgD+DdyjlGpRSl0rIp8HzojPRUSeAu5TSikRmQ88C0xVSv1ARD4FXKKU2my1/RbQoZQ61dr+EfAN4JuYpVUWKKWOiIibbMrZjDFs0Wcz5il917uG1V8phYpEegWgKRyD/YRhz6pVtPzfrwmsWYNvhZ1h4XjCs6gK59Riel470rtPA85gPrzeRTtdeT+nODUqP7IQ7/zCBg0opVBKsWfPHqZNm4bLlV1Ea74J7myj+e4tOGechRFy0LO6z1hTHZtEuauKnjePmHn4csC3vBZHVfoSgscq+bDEFZDE0P/7wazRKyJtwFQgneXrYkzr31rrh7UD6LCOvQ34ojVms4g8lHQCZo6h94nIEkyL3PuA/yciJyqlWpN0mQPcJyJTMC2EE0VkolLq6BDzKxWRS6xtN6bIBHgOuFtEHgUeV0rtTXOtYxZb9Nkc94gI4nKBywUlJUnbeJcupe2P99D+4N9s0XecIZpQ87llGMH++dluv/12qqoqmT9vPoYyUEqZgQgK69HcNgwDUP32xdvE9ynDMFMMGQZaVJi/txzjD5sJOWMJt8rBCX9Ub9qdgf+TkJInoa/qP0782VnMwufzcfQnA/KdJsunOMDM1t+wLUnb9NuXzBJu7Yoc9aOXarT/6WtM+enNlL7jnN4mXa3N/PZzV1Mzcw4lEyYkOUEG1GGXsy08TUAVELeWOYAya3+cxOWTGJlpCQG+r5S6c7gTtKxzm4FfishWzKXcZELxPsyavn8X85eGH0ieqNWc3+eVUs8lOfYBzCXr84DnReSzSqknh3kZo4It+mxsAM3no/Td76bjsceo/dY30YtzL6NlM/YQXQblZqudMYnt27ez++C+lH01TUNE+j0m25d47GhVE/M7a3AZDvNHB4AImpUY29RN0u+YWPvjCbkTH+MuB73trbaataVpGsUVFej6gFWnZGkl47kcVZImg1Vpkv5Dj+k8cQJ62WHa/+DHWds/AVFJ5QSWnv8fHNmzk85mOzBrDPMv4DOYEbIAnwZeV0r5sxynE1MsxnkEuE5EHlZKtVnLpAuUUhswLWkfB14RkSrg/cADAwe0LHbTlVKvWdtTgWog/iXuss4ZX2ouTzh2Dab1LtX8viIirymlAiJSgmnB3AXMUEq9AbwhInMwK1naos/G5lim/JIP0v7AA+x7/wfQvPlbQip5+/lUf+lLeRvPJj986EMfIhAIDCne4o822dF2/zoAHLWDs06+49NfGOnpjCof+/EvRnsKufBl4GcishGz9MoB4KM5jPNb4Cci8v8wAyjusfz1XrR+xGiYkbgbgO8Bd4rIdsxAjpeGGNMB3CQiM4CANca3lFLrrOM/AZ4TkQCm9e/LwN+tJeh/YgWAWPwc+IOI+DEDOW4GbgTetAJBFHATsBe4S0TKE16PG3J4PcYEdhk2GxsLpRRNP/kJ4fr6vI0ZPnSI0I6dzHnqKVxTp+RtXBubsUrjz35Gy29+y4KNGxDH+LYr2GXYbMYa4/sbaWOTgIhQc/2gXKDDInL0KLvfcQGtd93FxG99M69j24wNlFKEtm0j1tlllhgzDDCsknZWsmPLCdD04TMUKMM6ZpW7S+ynzPaJ2+YYgGFY2+Z4kKyd6r/d7xxWP6XMkmZGfF6Z9ku4hni/eDtrO7RrN44JE8a94LOxGYvY30obmwLinDiRsgsvpP3BBym76ELE4+3zlRfpc4rvfd7nSC+Djg143usblrrNoPMlbZeH88X9zuL7Uox1vKTFUeEwR7/3fdofGOR+NPqIgKaZ/oLx59ayNUNuixlZm6Sf+ZnU+rdL0s9RXU3xWWeN9tXb2NgkoaDLuyIyD7gbMxKoBbhKKbVrYLsZM2ao+jwuqQ2H3/72t3z6058e7WnklePlmo7V6wjt3s3eiy5O7hRvM7TITAhySNUu5zb9tq2n9O3v8fspigf0DNHGCAaJtbRQ9clPUHzOOf2FVlwsIaYoStgWLd5OM5/LUNsJ/bIRb9IX/BHnWP3+JONYuRYRqVdKzRztedjYxCm06HsOuFMp9ScrMeM1SqnzBrYrKipSPT09PProo1x00UUZj59N+0zbrlixgtWrVxd0LoVuP7Bt/JpGYy75bD/UdRTic5Dv9oH164k0NppLdL3fOcUNX7+Bm//nh+aWUn2RkcpaHow/t/KxrV+3nmXLliVEYPZvpxL2b9ywgaUnLu09V28KEKUS+vfNZ/PmTSxZvHhAu4T5JMwbpdi6dRsLFy4ABb+8/Rdce+0XUs5nx/YdzJ83b9C8h5rP7l27mDt3Tvr5KMXevXuYPXt2X5vE1ydh3vH51O+r60tk3Num/3we+ccjXHyxKdYPHDjAtKlTB7cDSt7+dkovuIBExtJ3Kt423d+BkZhLvtrn42/BSLQXEb9SauSydNvYpCOe3DPf/4AaoB3QrW3d2q4e2Nbn8ymllPrUpz6lsiGb9pm2PeWUUwo+l0K3H9g2fk2jMZd8th/qOgrxORip9unem+GMP5LXmsl1jIXvdzbtE69prH1ucnltMv2sjaW5D9U+H38LRqI90KMKdI+1/9n/cvlXMEufiJwC/FEptThh31bgI0qptQPaBjETPOrWYxNmoeZ0lNGX0TtfbSdY585m7GznUuj2A9vGr2k05pLP9kNdRyE+ByPVPt17M5zxR/JaM7mOkfzM56N94jWNtc9NLq9Npp+1sTT3odrn42/BSLSfr5RKnhHexmYUGBOBHEqpoTJk29jY2NjY2NjY5IFCZh49AEwRER3Aepxs7bexsbGxsbGxsRlBCib6lFKNwHrgcmvX5cA6pZRdf8fGxsbGxsbGZoQpdI2hzwJfFJGdwBet7VFDROpE5Ejc+mjtu1pElIgcs/WBRKRCRAIi8rPRnksuHK/vSxzr+paM9jzyRSbXM9av+Vj/zgxERD4kIutEZL2IbBeRP4/2nIaDiLhF5Ccisse6nnUi8r40fWaKyNjP42JjM4oUVPQppbYrpU5TSs2zHncU8nwZchh4Z8L21cDa5E2TIyJjwhcygSuA14HLRcSVTUcR0WRsZMod9vtiY5MFOX9nxhoiMgmzhunFSqllwELgllGd1PD5FWax+8VKqQWYtV9vF5GzU/SZCdiiz8YmBeOxmvhdmIICEZkNFAGbrO3zReQ161flJhG5LN5JRF4QkdtE5HXgkZGfdkquAb4PbATeCyAiN4rIX0XkOeuX8t9EpCzh2AMi8jSwFSgfrYkncBdZvi8islJENicOIiIbROSMEZ15hgy0fiVuW8+/a11n3bFg4Ux1PccAyb4zdyW+7onbIjJFRJ4VkS0i8oiIPDqG3qOJQASrmLwyWQcgIqeJyPMissb69x5r/0wRabasaRut79WYKKMhIjOAS4HPKaWCAEqpzcAPgO9Ybb5hzXmDiLwqIhrwS2CRZe18cLTmb2MzlhmPou8F4EQRqQA+Bvwx4dha4Eyl1MnA24FbrXZxZlvH3z1Sk02HiCzFrHjyHPAHzJtZnLOAy61fyh3AfyccOw24Qim1QCnVNlLzTcELZPm+KKXeBLpF5BwA66ZlKKVeHdmp5w2fUuotwLnAzSJSPMrzOS5J850Zip8Dz1spqL4InFO4GWbNBuANYL+IPCgiXxaRKhEpB36N+T0/BbgQ+I21H8zXYINSainmNd0nIu6Rn/4gTgR2K6VaB+x/HThJRD4GXAycoZQ6CbhIKWUA1wJblVLLlFKXjOyUbWyODcaj6FPAX4HLrH+Jvi/VwIOW9egpoBKYn3D8z0qp6EhNNEM+gZkPUQEPAaeJyBTr2GNKqQbr+e+BxGooTyilsskPV2hyfV9+Dnzeen4t5q/9Y5X7AZRSdUAb5vKWTf5J9Z0ZirdhCkSUUvXAs4WdYuYopQyl1Pswfyw8D7wH04L5bmAW8KSIrAeexPyezbW6hoE/WWO8AATo//dutEjnbnIh8H9KqS4ApVRL4adkY3N8MNZ800aKu4FVwEtKqZYEl7b/w1y6/YBSSokZgJKYQ7B7ZKeZGssX6QogJCJXWbudWMukaRhT12KRy/vyAPA/InIy5o05E6vNaBGl/w+tgfkpgwnPY4z972e66xlzpPnOHHPXk4i1BLoZ+KWYifAF2KiUGuQHJyIzR3h62bAJmCsilQOsfadjilkbG5scGY+WPpRSe4FvAt8bcKgcqLOExTvo+0U8VnkvsEMpNVUpNVOZhb0voE/0vUdEqq3nH8dczhqz5PK+KKUiwJ2YovBepZR/hKabC7uBlWD6KQK1ozudYXMsXk+q70zi9UzC/BER5wVMtwNEZBr9reajiuVv+JaE7amY1vGtwAki8raEYysTArfiAjjuGuEFto/YxIfAsnQ/APyfiHgALF/RbwI3AY8BnxOREutYldW1E7Niho2NzRCMdUtCwVBK/TbJ7huAX4nITcCbjP1fldcA9ybuUEq9Zjk1nwO8DNxvLV1tBb468lPMjhzflzswHbz/r8DTyxUHphXvv4G7ReSLmAJ8/6jOKneO5etJ9Z15DXinZSXbiWl1jnMd8EcRuRLYh+lDl005rkLiAG6yAiACmD/mv6WUWiciFwO3iMhtmCJvL3CR1a8FWCYiX8O0Cl6ulAqP+OyT83ngh8BWEQljft6uU0q9KCIvAVOA10UkgunXezbm34UdlhvIdtuvz8ZmMAWrvWszuojIjUCxUur60Z5LoRGRj2DesN4z2nMZiGUx2g5MVEoFRns+w+V4u55MEREvEFFKRa3X4E3g/DGShiprrOXd1UqpCaM9Fxsbm5Fj3Fr6bI4PROQpYA5mNN+YQkS+hGmxuP54EEjH2/VkyQmYlj7B9AG86VgVfDY2NuMX29JnY2NjY2NjYzMOOK4DOaxcVU+IyA4rkedD8cAGETndSuy5U0SeFpEaa/88K5npdhHZLCJ/sJZ24mNeZB3bLSJ/ERHfaF2fjY2NjY2NjU2mHNeiDzMn1Y+VUvOVUicCezCT3mqY+amuVUrNA14Cbrb6hIGvWAmNlwI+4HoAK1nu7zCTgc4FuuLHbGxsbGxsbGzGMse16FNKtVpJR+O8DswATgGCSql/W/t/DXzY6lMXL2FkZXl/w+oD8C5M5+ddCf0uLehF2NjY2NjY2NjkgeNa9CViWfc+h5nPbTpQHz9mVabQRKRyQB8vZoqHeK3dfv0wU1RMK+C0bWxsbGxsbGzywrgRfcAvMKtQ3J5JYxFxYJbFek4p9Ui69jY2NjY2NjY2Y5lxIfpE5FbMlAuXWku2++lbskVEJgBGvOSPiOiYCVzbgC8lDNWvH6bl70BhZ29jY2NjY2NjM3yOe9EnIj/E9OF7n1IqZO1eA3hF5Exr+7OYZX/iy8B3YdY+/YTqn9Pmn8BKETkhod9fC3sFNjY2NjY2NjbD57jO0yciizELkO/ELE8EsE8p9X4ROQP4DWZR9TrgI0qpBhF5D2Ztx82Ywg/gFaXUtdaY7wV+DOjAOuBqpVTPCF2SjY2NjY2NjU1OHNeiz8bGxsbGxsbGxuS4X961sbGxsbGxsbGxRZ+NjY2NjY2NzbjAFn02NjY2NjY2NuMAW/TZ2NjY2NjY2IwDbNFnY2NjY2NjYzMOsEWfjY2NjY2Njc04wBZ9NjY2NjY2NjbjAFv02djY2NjY2NiMA/4/zNCVQ2MuwIAAAAAASUVORK5CYII=\n",
       "text": [
        "<Figure size 648x432 with 1 Axes>"
       ]
      },
      {
       "html": [
        "<div>\n",
        "<style scoped>\n",
        "    .dataframe tbody tr th:only-of-type {\n",
        "        vertical-align: middle;\n",
        "    }\n",
        "\n",
        "    .dataframe tbody tr th {\n",
        "        vertical-align: top;\n",
        "    }\n",
        "\n",
        "    .dataframe thead th {\n",
        "        text-align: right;\n",
        "    }\n",
        "</style>\n",
        "<table border=\"1\" class=\"dataframe\">\n",
        "  <thead>\n",
        "    <tr style=\"text-align: right;\">\n",
        "      <th>Country</th>\n",
        "      <th>Algeria</th>\n",
        "      <th>Bahrain</th>\n",
        "      <th>Bangladesh</th>\n",
        "      <th>Belarus</th>\n",
        "      <th>Bolivia</th>\n",
        "      <th>Brazil</th>\n",
        "      <th>Dominican Republic</th>\n",
        "      <th>Egypt</th>\n",
        "      <th>France</th>\n",
        "      <th>Iran</th>\n",
        "      <th>Iraq</th>\n",
        "      <th>Italy</th>\n",
        "      <th>Kuwait</th>\n",
        "      <th>Latvia</th>\n",
        "      <th>Nigeria</th>\n",
        "      <th>Peru</th>\n",
        "      <th>Russia</th>\n",
        "      <th>Turkey</th>\n",
        "      <th>United States</th>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>Date</th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "    </tr>\n",
        "  </thead>\n",
        "  <tbody>\n",
        "    <tr>\n",
        "      <th>2020-10-22</th>\n",
        "      <td>0.003735</td>\n",
        "      <td>0.026172</td>\n",
        "      <td>0.005422</td>\n",
        "      <td>0.022647</td>\n",
        "      <td>0.003661</td>\n",
        "      <td>0.010589</td>\n",
        "      <td>0.004591</td>\n",
        "      <td>0.033303</td>\n",
        "      <td>0.007481</td>\n",
        "      <td>0.016884</td>\n",
        "      <td>0.016072</td>\n",
        "      <td>0.019308</td>\n",
        "      <td>0.022992</td>\n",
        "      <td>0.009531</td>\n",
        "      <td>0.004232</td>\n",
        "      <td>0.001246</td>\n",
        "      <td>0.00301</td>\n",
        "      <td>0.013448</td>\n",
        "      <td>0.00356</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>2020-10-23</th>\n",
        "      <td>0.003735</td>\n",
        "      <td>0.026172</td>\n",
        "      <td>0.005422</td>\n",
        "      <td>0.022647</td>\n",
        "      <td>0.003661</td>\n",
        "      <td>0.010589</td>\n",
        "      <td>0.004591</td>\n",
        "      <td>0.033303</td>\n",
        "      <td>0.007481</td>\n",
        "      <td>0.016884</td>\n",
        "      <td>0.016072</td>\n",
        "      <td>0.019308</td>\n",
        "      <td>0.022992</td>\n",
        "      <td>0.009531</td>\n",
        "      <td>0.004232</td>\n",
        "      <td>0.001246</td>\n",
        "      <td>0.00301</td>\n",
        "      <td>0.013448</td>\n",
        "      <td>0.00356</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>2020-10-24</th>\n",
        "      <td>0.003735</td>\n",
        "      <td>0.026172</td>\n",
        "      <td>0.005422</td>\n",
        "      <td>0.022647</td>\n",
        "      <td>0.003661</td>\n",
        "      <td>0.010589</td>\n",
        "      <td>0.004591</td>\n",
        "      <td>0.033303</td>\n",
        "      <td>0.007481</td>\n",
        "      <td>0.016884</td>\n",
        "      <td>0.016072</td>\n",
        "      <td>0.019308</td>\n",
        "      <td>0.022992</td>\n",
        "      <td>0.009531</td>\n",
        "      <td>0.004232</td>\n",
        "      <td>0.001246</td>\n",
        "      <td>0.00301</td>\n",
        "      <td>0.013448</td>\n",
        "      <td>0.00356</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>2020-10-25</th>\n",
        "      <td>0.003735</td>\n",
        "      <td>0.026172</td>\n",
        "      <td>0.005422</td>\n",
        "      <td>0.022647</td>\n",
        "      <td>0.003661</td>\n",
        "      <td>0.010589</td>\n",
        "      <td>0.004591</td>\n",
        "      <td>0.033303</td>\n",
        "      <td>0.007481</td>\n",
        "      <td>0.016884</td>\n",
        "      <td>0.016072</td>\n",
        "      <td>0.019308</td>\n",
        "      <td>0.022992</td>\n",
        "      <td>0.009531</td>\n",
        "      <td>0.004232</td>\n",
        "      <td>0.001246</td>\n",
        "      <td>0.00301</td>\n",
        "      <td>0.013448</td>\n",
        "      <td>0.00356</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>2020-10-26</th>\n",
        "      <td>0.003735</td>\n",
        "      <td>0.026172</td>\n",
        "      <td>0.005422</td>\n",
        "      <td>0.022647</td>\n",
        "      <td>0.003661</td>\n",
        "      <td>0.010589</td>\n",
        "      <td>0.004591</td>\n",
        "      <td>0.033303</td>\n",
        "      <td>0.007481</td>\n",
        "      <td>0.016884</td>\n",
        "      <td>0.016072</td>\n",
        "      <td>0.019308</td>\n",
        "      <td>0.022992</td>\n",
        "      <td>0.009531</td>\n",
        "      <td>0.004232</td>\n",
        "      <td>0.001246</td>\n",
        "      <td>0.00301</td>\n",
        "      <td>0.013448</td>\n",
        "      <td>0.00356</td>\n",
        "    </tr>\n",
        "  </tbody>\n",
        "</table>\n",
        "</div>"
       ],
       "output_type": "pyout",
       "prompt_number": 15,
       "text": [
        "Country      Algeria   Bahrain  Bangladesh   Belarus   Bolivia    Brazil  \\\n",
        "Date                                                                       \n",
        "2020-10-22  0.003735  0.026172    0.005422  0.022647  0.003661  0.010589   \n",
        "2020-10-23  0.003735  0.026172    0.005422  0.022647  0.003661  0.010589   \n",
        "2020-10-24  0.003735  0.026172    0.005422  0.022647  0.003661  0.010589   \n",
        "2020-10-25  0.003735  0.026172    0.005422  0.022647  0.003661  0.010589   \n",
        "2020-10-26  0.003735  0.026172    0.005422  0.022647  0.003661  0.010589   \n",
        "\n",
        "Country     Dominican Republic     Egypt    France      Iran      Iraq  \\\n",
        "Date                                                                     \n",
        "2020-10-22            0.004591  0.033303  0.007481  0.016884  0.016072   \n",
        "2020-10-23            0.004591  0.033303  0.007481  0.016884  0.016072   \n",
        "2020-10-24            0.004591  0.033303  0.007481  0.016884  0.016072   \n",
        "2020-10-25            0.004591  0.033303  0.007481  0.016884  0.016072   \n",
        "2020-10-26            0.004591  0.033303  0.007481  0.016884  0.016072   \n",
        "\n",
        "Country        Italy    Kuwait    Latvia   Nigeria      Peru   Russia  \\\n",
        "Date                                                                    \n",
        "2020-10-22  0.019308  0.022992  0.009531  0.004232  0.001246  0.00301   \n",
        "2020-10-23  0.019308  0.022992  0.009531  0.004232  0.001246  0.00301   \n",
        "2020-10-24  0.019308  0.022992  0.009531  0.004232  0.001246  0.00301   \n",
        "2020-10-25  0.019308  0.022992  0.009531  0.004232  0.001246  0.00301   \n",
        "2020-10-26  0.019308  0.022992  0.009531  0.004232  0.001246  0.00301   \n",
        "\n",
        "Country       Turkey  United States  \n",
        "Date                                 \n",
        "2020-10-22  0.013448        0.00356  \n",
        "2020-10-23  0.013448        0.00356  \n",
        "2020-10-24  0.013448        0.00356  \n",
        "2020-10-25  0.013448        0.00356  \n",
        "2020-10-26  0.013448        0.00356  "
       ]
      }
     ],
     "prompt_number": 15
    },
    {
     "cell_type": "heading",
     "level": 3,
     "metadata": {},
     "source": [
      "$\\sigma$: Recovery rate $\\mathrm{[-]}$"
     ]
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "analyser.history(\"sigma\", roll_window=None).tail()"
     ],
     "language": "python",
     "metadata": {},
     "outputs": [
      {
       "output_type": "display_data",
       "png": "\n",
       "text": [
        "<Figure size 648x432 with 1 Axes>"
       ]
      },
      {
       "html": [
        "<div>\n",
        "<style scoped>\n",
        "    .dataframe tbody tr th:only-of-type {\n",
        "        vertical-align: middle;\n",
        "    }\n",
        "\n",
        "    .dataframe tbody tr th {\n",
        "        vertical-align: top;\n",
        "    }\n",
        "\n",
        "    .dataframe thead th {\n",
        "        text-align: right;\n",
        "    }\n",
        "</style>\n",
        "<table border=\"1\" class=\"dataframe\">\n",
        "  <thead>\n",
        "    <tr style=\"text-align: right;\">\n",
        "      <th>Country</th>\n",
        "      <th>Algeria</th>\n",
        "      <th>Bahrain</th>\n",
        "      <th>Bangladesh</th>\n",
        "      <th>Belarus</th>\n",
        "      <th>Bolivia</th>\n",
        "      <th>Brazil</th>\n",
        "      <th>Dominican Republic</th>\n",
        "      <th>Egypt</th>\n",
        "      <th>France</th>\n",
        "      <th>Iran</th>\n",
        "      <th>Iraq</th>\n",
        "      <th>Italy</th>\n",
        "      <th>Kuwait</th>\n",
        "      <th>Latvia</th>\n",
        "      <th>Nigeria</th>\n",
        "      <th>Peru</th>\n",
        "      <th>Russia</th>\n",
        "      <th>Turkey</th>\n",
        "      <th>United States</th>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>Date</th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "    </tr>\n",
        "  </thead>\n",
        "  <tbody>\n",
        "    <tr>\n",
        "      <th>2020-10-22</th>\n",
        "      <td>0.002361</td>\n",
        "      <td>0.029768</td>\n",
        "      <td>0.007652</td>\n",
        "      <td>0.014445</td>\n",
        "      <td>0.005177</td>\n",
        "      <td>0.007688</td>\n",
        "      <td>0.005636</td>\n",
        "      <td>0.026682</td>\n",
        "      <td>0.000218</td>\n",
        "      <td>0.012883</td>\n",
        "      <td>0.014077</td>\n",
        "      <td>0.004274</td>\n",
        "      <td>0.02059</td>\n",
        "      <td>0.0</td>\n",
        "      <td>0.006457</td>\n",
        "      <td>0.002203</td>\n",
        "      <td>0.001757</td>\n",
        "      <td>0.010151</td>\n",
        "      <td>0.001276</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>2020-10-23</th>\n",
        "      <td>0.002361</td>\n",
        "      <td>0.029768</td>\n",
        "      <td>0.007652</td>\n",
        "      <td>0.014445</td>\n",
        "      <td>0.005177</td>\n",
        "      <td>0.007688</td>\n",
        "      <td>0.005636</td>\n",
        "      <td>0.026682</td>\n",
        "      <td>0.000218</td>\n",
        "      <td>0.012883</td>\n",
        "      <td>0.014077</td>\n",
        "      <td>0.004274</td>\n",
        "      <td>0.02059</td>\n",
        "      <td>0.0</td>\n",
        "      <td>0.006457</td>\n",
        "      <td>0.002203</td>\n",
        "      <td>0.001757</td>\n",
        "      <td>0.010151</td>\n",
        "      <td>0.001276</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>2020-10-24</th>\n",
        "      <td>0.002361</td>\n",
        "      <td>0.029768</td>\n",
        "      <td>0.007652</td>\n",
        "      <td>0.014445</td>\n",
        "      <td>0.005177</td>\n",
        "      <td>0.007688</td>\n",
        "      <td>0.005636</td>\n",
        "      <td>0.026682</td>\n",
        "      <td>0.000218</td>\n",
        "      <td>0.012883</td>\n",
        "      <td>0.014077</td>\n",
        "      <td>0.004274</td>\n",
        "      <td>0.02059</td>\n",
        "      <td>0.0</td>\n",
        "      <td>0.006457</td>\n",
        "      <td>0.002203</td>\n",
        "      <td>0.001757</td>\n",
        "      <td>0.010151</td>\n",
        "      <td>0.001276</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>2020-10-25</th>\n",
        "      <td>0.002361</td>\n",
        "      <td>0.029768</td>\n",
        "      <td>0.007652</td>\n",
        "      <td>0.014445</td>\n",
        "      <td>0.005177</td>\n",
        "      <td>0.007688</td>\n",
        "      <td>0.005636</td>\n",
        "      <td>0.026682</td>\n",
        "      <td>0.000218</td>\n",
        "      <td>0.012883</td>\n",
        "      <td>0.014077</td>\n",
        "      <td>0.004274</td>\n",
        "      <td>0.02059</td>\n",
        "      <td>0.0</td>\n",
        "      <td>0.006457</td>\n",
        "      <td>0.002203</td>\n",
        "      <td>0.001757</td>\n",
        "      <td>0.010151</td>\n",
        "      <td>0.001276</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>2020-10-26</th>\n",
        "      <td>0.002361</td>\n",
        "      <td>0.029768</td>\n",
        "      <td>0.007652</td>\n",
        "      <td>0.014445</td>\n",
        "      <td>0.005177</td>\n",
        "      <td>0.007688</td>\n",
        "      <td>0.005636</td>\n",
        "      <td>0.026682</td>\n",
        "      <td>0.000218</td>\n",
        "      <td>0.012883</td>\n",
        "      <td>0.014077</td>\n",
        "      <td>0.004274</td>\n",
        "      <td>0.02059</td>\n",
        "      <td>0.0</td>\n",
        "      <td>0.006457</td>\n",
        "      <td>0.002203</td>\n",
        "      <td>0.001757</td>\n",
        "      <td>0.010151</td>\n",
        "      <td>0.001276</td>\n",
        "    </tr>\n",
        "  </tbody>\n",
        "</table>\n",
        "</div>"
       ],
       "output_type": "pyout",
       "prompt_number": 16,
       "text": [
        "Country      Algeria   Bahrain  Bangladesh   Belarus   Bolivia    Brazil  \\\n",
        "Date                                                                       \n",
        "2020-10-22  0.002361  0.029768    0.007652  0.014445  0.005177  0.007688   \n",
        "2020-10-23  0.002361  0.029768    0.007652  0.014445  0.005177  0.007688   \n",
        "2020-10-24  0.002361  0.029768    0.007652  0.014445  0.005177  0.007688   \n",
        "2020-10-25  0.002361  0.029768    0.007652  0.014445  0.005177  0.007688   \n",
        "2020-10-26  0.002361  0.029768    0.007652  0.014445  0.005177  0.007688   \n",
        "\n",
        "Country     Dominican Republic     Egypt    France      Iran      Iraq  \\\n",
        "Date                                                                     \n",
        "2020-10-22            0.005636  0.026682  0.000218  0.012883  0.014077   \n",
        "2020-10-23            0.005636  0.026682  0.000218  0.012883  0.014077   \n",
        "2020-10-24            0.005636  0.026682  0.000218  0.012883  0.014077   \n",
        "2020-10-25            0.005636  0.026682  0.000218  0.012883  0.014077   \n",
        "2020-10-26            0.005636  0.026682  0.000218  0.012883  0.014077   \n",
        "\n",
        "Country        Italy   Kuwait  Latvia   Nigeria      Peru    Russia    Turkey  \\\n",
        "Date                                                                            \n",
        "2020-10-22  0.004274  0.02059     0.0  0.006457  0.002203  0.001757  0.010151   \n",
        "2020-10-23  0.004274  0.02059     0.0  0.006457  0.002203  0.001757  0.010151   \n",
        "2020-10-24  0.004274  0.02059     0.0  0.006457  0.002203  0.001757  0.010151   \n",
        "2020-10-25  0.004274  0.02059     0.0  0.006457  0.002203  0.001757  0.010151   \n",
        "2020-10-26  0.004274  0.02059     0.0  0.006457  0.002203  0.001757  0.010151   \n",
        "\n",
        "Country     United States  \n",
        "Date                       \n",
        "2020-10-22       0.001276  \n",
        "2020-10-23       0.001276  \n",
        "2020-10-24       0.001276  \n",
        "2020-10-25       0.001276  \n",
        "2020-10-26       0.001276  "
       ]
      }
     ],
     "prompt_number": 16
    },
    {
     "cell_type": "heading",
     "level": 3,
     "metadata": {},
     "source": [
      "$\\kappa$: Mortality rate of infected cases $\\mathrm{[-]}$"
     ]
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "analyser.history(\"kappa\", roll_window=None).tail()"
     ],
     "language": "python",
     "metadata": {},
     "outputs": [
      {
       "output_type": "display_data",
       "png": "\n",
       "text": [
        "<Figure size 648x432 with 1 Axes>"
       ]
      },
      {
       "html": [
        "<div>\n",
        "<style scoped>\n",
        "    .dataframe tbody tr th:only-of-type {\n",
        "        vertical-align: middle;\n",
        "    }\n",
        "\n",
        "    .dataframe tbody tr th {\n",
        "        vertical-align: top;\n",
        "    }\n",
        "\n",
        "    .dataframe thead th {\n",
        "        text-align: right;\n",
        "    }\n",
        "</style>\n",
        "<table border=\"1\" class=\"dataframe\">\n",
        "  <thead>\n",
        "    <tr style=\"text-align: right;\">\n",
        "      <th>Country</th>\n",
        "      <th>Algeria</th>\n",
        "      <th>Bahrain</th>\n",
        "      <th>Bangladesh</th>\n",
        "      <th>Belarus</th>\n",
        "      <th>Bolivia</th>\n",
        "      <th>Brazil</th>\n",
        "      <th>Dominican Republic</th>\n",
        "      <th>Egypt</th>\n",
        "      <th>France</th>\n",
        "      <th>Iran</th>\n",
        "      <th>Iraq</th>\n",
        "      <th>Italy</th>\n",
        "      <th>Kuwait</th>\n",
        "      <th>Latvia</th>\n",
        "      <th>Nigeria</th>\n",
        "      <th>Peru</th>\n",
        "      <th>Russia</th>\n",
        "      <th>Turkey</th>\n",
        "      <th>United States</th>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>Date</th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "    </tr>\n",
        "  </thead>\n",
        "  <tbody>\n",
        "    <tr>\n",
        "      <th>2020-10-22</th>\n",
        "      <td>0.000168</td>\n",
        "      <td>0.000181</td>\n",
        "      <td>0.000014</td>\n",
        "      <td>0.000113</td>\n",
        "      <td>0.00023</td>\n",
        "      <td>0.000001</td>\n",
        "      <td>0.000041</td>\n",
        "      <td>0.000707</td>\n",
        "      <td>0.000037</td>\n",
        "      <td>0.000093</td>\n",
        "      <td>0.000229</td>\n",
        "      <td>0.000104</td>\n",
        "      <td>0.000144</td>\n",
        "      <td>0.000031</td>\n",
        "      <td>0.000031</td>\n",
        "      <td>0.000011</td>\n",
        "      <td>0.000041</td>\n",
        "      <td>0.00015</td>\n",
        "      <td>0.000037</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>2020-10-23</th>\n",
        "      <td>0.000168</td>\n",
        "      <td>0.000181</td>\n",
        "      <td>0.000014</td>\n",
        "      <td>0.000113</td>\n",
        "      <td>0.00023</td>\n",
        "      <td>0.000001</td>\n",
        "      <td>0.000041</td>\n",
        "      <td>0.000707</td>\n",
        "      <td>0.000037</td>\n",
        "      <td>0.000093</td>\n",
        "      <td>0.000229</td>\n",
        "      <td>0.000104</td>\n",
        "      <td>0.000144</td>\n",
        "      <td>0.000031</td>\n",
        "      <td>0.000031</td>\n",
        "      <td>0.000011</td>\n",
        "      <td>0.000041</td>\n",
        "      <td>0.00015</td>\n",
        "      <td>0.000037</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>2020-10-24</th>\n",
        "      <td>0.000168</td>\n",
        "      <td>0.000181</td>\n",
        "      <td>0.000014</td>\n",
        "      <td>0.000113</td>\n",
        "      <td>0.00023</td>\n",
        "      <td>0.000001</td>\n",
        "      <td>0.000041</td>\n",
        "      <td>0.000707</td>\n",
        "      <td>0.000037</td>\n",
        "      <td>0.000093</td>\n",
        "      <td>0.000229</td>\n",
        "      <td>0.000104</td>\n",
        "      <td>0.000144</td>\n",
        "      <td>0.000031</td>\n",
        "      <td>0.000031</td>\n",
        "      <td>0.000011</td>\n",
        "      <td>0.000041</td>\n",
        "      <td>0.00015</td>\n",
        "      <td>0.000037</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>2020-10-25</th>\n",
        "      <td>0.000168</td>\n",
        "      <td>0.000181</td>\n",
        "      <td>0.000014</td>\n",
        "      <td>0.000113</td>\n",
        "      <td>0.00023</td>\n",
        "      <td>0.000001</td>\n",
        "      <td>0.000041</td>\n",
        "      <td>0.000707</td>\n",
        "      <td>0.000037</td>\n",
        "      <td>0.000093</td>\n",
        "      <td>0.000229</td>\n",
        "      <td>0.000104</td>\n",
        "      <td>0.000144</td>\n",
        "      <td>0.000031</td>\n",
        "      <td>0.000031</td>\n",
        "      <td>0.000011</td>\n",
        "      <td>0.000041</td>\n",
        "      <td>0.00015</td>\n",
        "      <td>0.000037</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>2020-10-26</th>\n",
        "      <td>0.000168</td>\n",
        "      <td>0.000181</td>\n",
        "      <td>0.000014</td>\n",
        "      <td>0.000113</td>\n",
        "      <td>0.00023</td>\n",
        "      <td>0.000001</td>\n",
        "      <td>0.000041</td>\n",
        "      <td>0.000707</td>\n",
        "      <td>0.000037</td>\n",
        "      <td>0.000093</td>\n",
        "      <td>0.000229</td>\n",
        "      <td>0.000104</td>\n",
        "      <td>0.000144</td>\n",
        "      <td>0.000031</td>\n",
        "      <td>0.000031</td>\n",
        "      <td>0.000011</td>\n",
        "      <td>0.000041</td>\n",
        "      <td>0.00015</td>\n",
        "      <td>0.000037</td>\n",
        "    </tr>\n",
        "  </tbody>\n",
        "</table>\n",
        "</div>"
       ],
       "output_type": "pyout",
       "prompt_number": 17,
       "text": [
        "Country      Algeria   Bahrain  Bangladesh   Belarus  Bolivia    Brazil  \\\n",
        "Date                                                                      \n",
        "2020-10-22  0.000168  0.000181    0.000014  0.000113  0.00023  0.000001   \n",
        "2020-10-23  0.000168  0.000181    0.000014  0.000113  0.00023  0.000001   \n",
        "2020-10-24  0.000168  0.000181    0.000014  0.000113  0.00023  0.000001   \n",
        "2020-10-25  0.000168  0.000181    0.000014  0.000113  0.00023  0.000001   \n",
        "2020-10-26  0.000168  0.000181    0.000014  0.000113  0.00023  0.000001   \n",
        "\n",
        "Country     Dominican Republic     Egypt    France      Iran      Iraq  \\\n",
        "Date                                                                     \n",
        "2020-10-22            0.000041  0.000707  0.000037  0.000093  0.000229   \n",
        "2020-10-23            0.000041  0.000707  0.000037  0.000093  0.000229   \n",
        "2020-10-24            0.000041  0.000707  0.000037  0.000093  0.000229   \n",
        "2020-10-25            0.000041  0.000707  0.000037  0.000093  0.000229   \n",
        "2020-10-26            0.000041  0.000707  0.000037  0.000093  0.000229   \n",
        "\n",
        "Country        Italy    Kuwait    Latvia   Nigeria      Peru    Russia  \\\n",
        "Date                                                                     \n",
        "2020-10-22  0.000104  0.000144  0.000031  0.000031  0.000011  0.000041   \n",
        "2020-10-23  0.000104  0.000144  0.000031  0.000031  0.000011  0.000041   \n",
        "2020-10-24  0.000104  0.000144  0.000031  0.000031  0.000011  0.000041   \n",
        "2020-10-25  0.000104  0.000144  0.000031  0.000031  0.000011  0.000041   \n",
        "2020-10-26  0.000104  0.000144  0.000031  0.000031  0.000011  0.000041   \n",
        "\n",
        "Country      Turkey  United States  \n",
        "Date                                \n",
        "2020-10-22  0.00015       0.000037  \n",
        "2020-10-23  0.00015       0.000037  \n",
        "2020-10-24  0.00015       0.000037  \n",
        "2020-10-25  0.00015       0.000037  \n",
        "2020-10-26  0.00015       0.000037  "
       ]
      }
     ],
     "prompt_number": 17
    },
    {
     "cell_type": "heading",
     "level": 3,
     "metadata": {},
     "source": [
      "$\\theta$: Mortality rate of S$^\\ast$ cases $\\mathrm{[-]}$"
     ]
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "analyser.history(\"theta\", roll_window=None).tail()"
     ],
     "language": "python",
     "metadata": {},
     "outputs": [
      {
       "output_type": "display_data",
       "png": "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\n",
       "text": [
        "<Figure size 648x432 with 1 Axes>"
       ]
      },
      {
       "html": [
        "<div>\n",
        "<style scoped>\n",
        "    .dataframe tbody tr th:only-of-type {\n",
        "        vertical-align: middle;\n",
        "    }\n",
        "\n",
        "    .dataframe tbody tr th {\n",
        "        vertical-align: top;\n",
        "    }\n",
        "\n",
        "    .dataframe thead th {\n",
        "        text-align: right;\n",
        "    }\n",
        "</style>\n",
        "<table border=\"1\" class=\"dataframe\">\n",
        "  <thead>\n",
        "    <tr style=\"text-align: right;\">\n",
        "      <th>Country</th>\n",
        "      <th>Algeria</th>\n",
        "      <th>Bahrain</th>\n",
        "      <th>Bangladesh</th>\n",
        "      <th>Belarus</th>\n",
        "      <th>Bolivia</th>\n",
        "      <th>Brazil</th>\n",
        "      <th>Dominican Republic</th>\n",
        "      <th>Egypt</th>\n",
        "      <th>France</th>\n",
        "      <th>Iran</th>\n",
        "      <th>Iraq</th>\n",
        "      <th>Italy</th>\n",
        "      <th>Kuwait</th>\n",
        "      <th>Latvia</th>\n",
        "      <th>Nigeria</th>\n",
        "      <th>Peru</th>\n",
        "      <th>Russia</th>\n",
        "      <th>Turkey</th>\n",
        "      <th>United States</th>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>Date</th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "    </tr>\n",
        "  </thead>\n",
        "  <tbody>\n",
        "    <tr>\n",
        "      <th>2020-10-22</th>\n",
        "      <td>0.000133</td>\n",
        "      <td>0.001528</td>\n",
        "      <td>0.01593</td>\n",
        "      <td>0.00023</td>\n",
        "      <td>0.000302</td>\n",
        "      <td>0.032814</td>\n",
        "      <td>0.000019</td>\n",
        "      <td>0.218639</td>\n",
        "      <td>0.000668</td>\n",
        "      <td>0.052795</td>\n",
        "      <td>0.000121</td>\n",
        "      <td>0.000122</td>\n",
        "      <td>0.001107</td>\n",
        "      <td>0.000463</td>\n",
        "      <td>0.000953</td>\n",
        "      <td>0.01686</td>\n",
        "      <td>0.000019</td>\n",
        "      <td>0.02342</td>\n",
        "      <td>0.001468</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>2020-10-23</th>\n",
        "      <td>0.000133</td>\n",
        "      <td>0.001528</td>\n",
        "      <td>0.01593</td>\n",
        "      <td>0.00023</td>\n",
        "      <td>0.000302</td>\n",
        "      <td>0.032814</td>\n",
        "      <td>0.000019</td>\n",
        "      <td>0.218639</td>\n",
        "      <td>0.000668</td>\n",
        "      <td>0.052795</td>\n",
        "      <td>0.000121</td>\n",
        "      <td>0.000122</td>\n",
        "      <td>0.001107</td>\n",
        "      <td>0.000463</td>\n",
        "      <td>0.000953</td>\n",
        "      <td>0.01686</td>\n",
        "      <td>0.000019</td>\n",
        "      <td>0.02342</td>\n",
        "      <td>0.001468</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>2020-10-24</th>\n",
        "      <td>0.000133</td>\n",
        "      <td>0.001528</td>\n",
        "      <td>0.01593</td>\n",
        "      <td>0.00023</td>\n",
        "      <td>0.000302</td>\n",
        "      <td>0.032814</td>\n",
        "      <td>0.000019</td>\n",
        "      <td>0.218639</td>\n",
        "      <td>0.000668</td>\n",
        "      <td>0.052795</td>\n",
        "      <td>0.000121</td>\n",
        "      <td>0.000122</td>\n",
        "      <td>0.001107</td>\n",
        "      <td>0.000463</td>\n",
        "      <td>0.000953</td>\n",
        "      <td>0.01686</td>\n",
        "      <td>0.000019</td>\n",
        "      <td>0.02342</td>\n",
        "      <td>0.001468</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>2020-10-25</th>\n",
        "      <td>0.000133</td>\n",
        "      <td>0.001528</td>\n",
        "      <td>0.01593</td>\n",
        "      <td>0.00023</td>\n",
        "      <td>0.000302</td>\n",
        "      <td>0.032814</td>\n",
        "      <td>0.000019</td>\n",
        "      <td>0.218639</td>\n",
        "      <td>0.000668</td>\n",
        "      <td>0.052795</td>\n",
        "      <td>0.000121</td>\n",
        "      <td>0.000122</td>\n",
        "      <td>0.001107</td>\n",
        "      <td>0.000463</td>\n",
        "      <td>0.000953</td>\n",
        "      <td>0.01686</td>\n",
        "      <td>0.000019</td>\n",
        "      <td>0.02342</td>\n",
        "      <td>0.001468</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>2020-10-26</th>\n",
        "      <td>0.000133</td>\n",
        "      <td>0.001528</td>\n",
        "      <td>0.01593</td>\n",
        "      <td>0.00023</td>\n",
        "      <td>0.000302</td>\n",
        "      <td>0.032814</td>\n",
        "      <td>0.000019</td>\n",
        "      <td>0.218639</td>\n",
        "      <td>0.000668</td>\n",
        "      <td>0.052795</td>\n",
        "      <td>0.000121</td>\n",
        "      <td>0.000122</td>\n",
        "      <td>0.001107</td>\n",
        "      <td>0.000463</td>\n",
        "      <td>0.000953</td>\n",
        "      <td>0.01686</td>\n",
        "      <td>0.000019</td>\n",
        "      <td>0.02342</td>\n",
        "      <td>0.001468</td>\n",
        "    </tr>\n",
        "  </tbody>\n",
        "</table>\n",
        "</div>"
       ],
       "output_type": "pyout",
       "prompt_number": 18,
       "text": [
        "Country      Algeria   Bahrain  Bangladesh  Belarus   Bolivia    Brazil  \\\n",
        "Date                                                                      \n",
        "2020-10-22  0.000133  0.001528     0.01593  0.00023  0.000302  0.032814   \n",
        "2020-10-23  0.000133  0.001528     0.01593  0.00023  0.000302  0.032814   \n",
        "2020-10-24  0.000133  0.001528     0.01593  0.00023  0.000302  0.032814   \n",
        "2020-10-25  0.000133  0.001528     0.01593  0.00023  0.000302  0.032814   \n",
        "2020-10-26  0.000133  0.001528     0.01593  0.00023  0.000302  0.032814   \n",
        "\n",
        "Country     Dominican Republic     Egypt    France      Iran      Iraq  \\\n",
        "Date                                                                     \n",
        "2020-10-22            0.000019  0.218639  0.000668  0.052795  0.000121   \n",
        "2020-10-23            0.000019  0.218639  0.000668  0.052795  0.000121   \n",
        "2020-10-24            0.000019  0.218639  0.000668  0.052795  0.000121   \n",
        "2020-10-25            0.000019  0.218639  0.000668  0.052795  0.000121   \n",
        "2020-10-26            0.000019  0.218639  0.000668  0.052795  0.000121   \n",
        "\n",
        "Country        Italy    Kuwait    Latvia   Nigeria     Peru    Russia  \\\n",
        "Date                                                                    \n",
        "2020-10-22  0.000122  0.001107  0.000463  0.000953  0.01686  0.000019   \n",
        "2020-10-23  0.000122  0.001107  0.000463  0.000953  0.01686  0.000019   \n",
        "2020-10-24  0.000122  0.001107  0.000463  0.000953  0.01686  0.000019   \n",
        "2020-10-25  0.000122  0.001107  0.000463  0.000953  0.01686  0.000019   \n",
        "2020-10-26  0.000122  0.001107  0.000463  0.000953  0.01686  0.000019   \n",
        "\n",
        "Country      Turkey  United States  \n",
        "Date                                \n",
        "2020-10-22  0.02342       0.001468  \n",
        "2020-10-23  0.02342       0.001468  \n",
        "2020-10-24  0.02342       0.001468  \n",
        "2020-10-25  0.02342       0.001468  \n",
        "2020-10-26  0.02342       0.001468  "
       ]
      }
     ],
     "prompt_number": 18
    },
    {
     "cell_type": "markdown",
     "metadata": {},
     "source": [
      "## (Experimental): Relationship of OxCGRT index and parameter values\n",
      "Government responses will impact on parameter values of ODE models about 14 days later. Here, we will investigate on the relationship of [stringency index (from OxCGRT)](https://github.com/OxCGRT/covid-policy-tracker/blob/master/documentation/index_methodology.md) and reproduction number/model parameters.\n"
     ]
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "%matplotlib inline\n",
      "from matplotlib import pyplot as plt\n",
      "import seaborn as sns\n",
      "import pandas as pd"
     ],
     "language": "python",
     "metadata": {},
     "outputs": [],
     "prompt_number": 19
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "df = analyser.track()\n",
      "param_cols = [\"Rt\", *cs.SIRF.PARAMETERS]\n",
      "oxcgrt_cols = oxcgrt_data.OXCGRT_VARS[:]\n",
      "cols = param_cols + oxcgrt_cols\n",
      "delay = 14\n",
      "\n",
      "for col in param_cols:\n",
      "    df[col] = pd.to_numeric(df[col], errors=\"coerce\")\n",
      "    df[col] = df.groupby(\"Country\")[col].shift(0 - delay)\n",
      "\n",
      "df = df.dropna(how=\"any\")\n",
      "df = df.loc[:, [\"Date\", \"Country\", *cols]]\n",
      "track_df = df.copy()\n",
      "track_df.info()"
     ],
     "language": "python",
     "metadata": {},
     "outputs": [
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "<class 'pandas.core.frame.DataFrame'>\n",
        "Int64Index: 85194 entries, 0 to 85445\n",
        "Data columns (total 19 columns):\n",
        " #   Column                               Non-Null Count  Dtype         \n",
        "---  ------                               --------------  -----         \n",
        " 0   Date                                 85194 non-null  datetime64[ns]\n",
        " 1   Country                              85194 non-null  object        \n",
        " 2   Rt                                   85194 non-null  float64       \n",
        " 3   theta                                85194 non-null  float64       \n",
        " 4   kappa                                85194 non-null  float64       \n",
        " 5   rho                                  85194 non-null  float64       \n",
        " 6   sigma                                85194 non-null  float64       \n",
        " 7   School_closing                       85194 non-null  int64         \n",
        " 8   Workplace_closing                    85194 non-null  int64         \n",
        " 9   Cancel_events                        85194 non-null  int64         \n",
        " 10  Gatherings_restrictions              85194 non-null  int64         \n",
        " 11  Transport_closing                    85194 non-null  int64         \n",
        " 12  Stay_home_restrictions               85194 non-null  int64         \n",
        " 13  Internal_movement_restrictions       85194 non-null  int64         \n",
        " 14  International_movement_restrictions  85194 non-null  int64         \n",
        " 15  Information_campaigns                85194 non-null  int64         \n",
        " 16  Testing_policy                       85194 non-null  int64         \n",
        " 17  Contact_tracing                      85194 non-null  int64         \n",
        " 18  Stringency_index                     85194 non-null  float64       \n",
        "dtypes: datetime64[ns](1), float64(6), int64(11), object(1)\n",
        "memory usage: 13.0+ MB\n"
       ]
      }
     ],
     "prompt_number": 20
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "# Correlation\n",
      "df = track_df.copy()\n",
      "df.corr().style.background_gradient(axis=None)"
     ],
     "language": "python",
     "metadata": {},
     "outputs": [
      {
       "html": [
        "<style  type=\"text/css\" >\n",
        "#T_206b1eae_17b2_11eb_afa8_5254004202adrow0_col0,#T_206b1eae_17b2_11eb_afa8_5254004202adrow1_col1,#T_206b1eae_17b2_11eb_afa8_5254004202adrow2_col2,#T_206b1eae_17b2_11eb_afa8_5254004202adrow3_col3,#T_206b1eae_17b2_11eb_afa8_5254004202adrow4_col4,#T_206b1eae_17b2_11eb_afa8_5254004202adrow5_col5,#T_206b1eae_17b2_11eb_afa8_5254004202adrow6_col6,#T_206b1eae_17b2_11eb_afa8_5254004202adrow7_col7,#T_206b1eae_17b2_11eb_afa8_5254004202adrow8_col8,#T_206b1eae_17b2_11eb_afa8_5254004202adrow9_col9,#T_206b1eae_17b2_11eb_afa8_5254004202adrow10_col10,#T_206b1eae_17b2_11eb_afa8_5254004202adrow11_col11,#T_206b1eae_17b2_11eb_afa8_5254004202adrow12_col12,#T_206b1eae_17b2_11eb_afa8_5254004202adrow13_col13,#T_206b1eae_17b2_11eb_afa8_5254004202adrow14_col14,#T_206b1eae_17b2_11eb_afa8_5254004202adrow15_col15,#T_206b1eae_17b2_11eb_afa8_5254004202adrow16_col16{\n",
        "            background-color:  #023858;\n",
        "            color:  #f1f1f1;\n",
        "        }#T_206b1eae_17b2_11eb_afa8_5254004202adrow0_col1,#T_206b1eae_17b2_11eb_afa8_5254004202adrow1_col0,#T_206b1eae_17b2_11eb_afa8_5254004202adrow1_col9,#T_206b1eae_17b2_11eb_afa8_5254004202adrow2_col5,#T_206b1eae_17b2_11eb_afa8_5254004202adrow2_col6,#T_206b1eae_17b2_11eb_afa8_5254004202adrow5_col2,#T_206b1eae_17b2_11eb_afa8_5254004202adrow6_col2,#T_206b1eae_17b2_11eb_afa8_5254004202adrow9_col1{\n",
        "            background-color:  #d7d6e9;\n",
        "            color:  #000000;\n",
        "        }#T_206b1eae_17b2_11eb_afa8_5254004202adrow0_col2,#T_206b1eae_17b2_11eb_afa8_5254004202adrow0_col7,#T_206b1eae_17b2_11eb_afa8_5254004202adrow2_col0,#T_206b1eae_17b2_11eb_afa8_5254004202adrow7_col0{\n",
        "            background-color:  #d2d2e7;\n",
        "            color:  #000000;\n",
        "        }#T_206b1eae_17b2_11eb_afa8_5254004202adrow0_col3,#T_206b1eae_17b2_11eb_afa8_5254004202adrow3_col0{\n",
        "            background-color:  #6ba5cd;\n",
        "            color:  #000000;\n",
        "        }#T_206b1eae_17b2_11eb_afa8_5254004202adrow0_col4,#T_206b1eae_17b2_11eb_afa8_5254004202adrow0_col10,#T_206b1eae_17b2_11eb_afa8_5254004202adrow0_col16,#T_206b1eae_17b2_11eb_afa8_5254004202adrow4_col0,#T_206b1eae_17b2_11eb_afa8_5254004202adrow10_col0,#T_206b1eae_17b2_11eb_afa8_5254004202adrow16_col0{\n",
        "            background-color:  #e0dded;\n",
        "            color:  #000000;\n",
        "        }#T_206b1eae_17b2_11eb_afa8_5254004202adrow0_col5,#T_206b1eae_17b2_11eb_afa8_5254004202adrow5_col0{\n",
        "            background-color:  #e3e0ee;\n",
        "            color:  #000000;\n",
        "        }#T_206b1eae_17b2_11eb_afa8_5254004202adrow0_col6,#T_206b1eae_17b2_11eb_afa8_5254004202adrow6_col0{\n",
        "            background-color:  #e7e3f0;\n",
        "            color:  #000000;\n",
        "        }#T_206b1eae_17b2_11eb_afa8_5254004202adrow0_col8,#T_206b1eae_17b2_11eb_afa8_5254004202adrow1_col8,#T_206b1eae_17b2_11eb_afa8_5254004202adrow8_col0,#T_206b1eae_17b2_11eb_afa8_5254004202adrow8_col1{\n",
        "            background-color:  #d9d8ea;\n",
        "            color:  #000000;\n",
        "        }#T_206b1eae_17b2_11eb_afa8_5254004202adrow0_col9,#T_206b1eae_17b2_11eb_afa8_5254004202adrow9_col0{\n",
        "            background-color:  #d6d6e9;\n",
        "            color:  #000000;\n",
        "        }#T_206b1eae_17b2_11eb_afa8_5254004202adrow0_col11,#T_206b1eae_17b2_11eb_afa8_5254004202adrow11_col0{\n",
        "            background-color:  #e9e5f1;\n",
        "            color:  #000000;\n",
        "        }#T_206b1eae_17b2_11eb_afa8_5254004202adrow0_col12,#T_206b1eae_17b2_11eb_afa8_5254004202adrow12_col0{\n",
        "            background-color:  #d0d1e6;\n",
        "            color:  #000000;\n",
        "        }#T_206b1eae_17b2_11eb_afa8_5254004202adrow0_col13,#T_206b1eae_17b2_11eb_afa8_5254004202adrow13_col0{\n",
        "            background-color:  #e2dfee;\n",
        "            color:  #000000;\n",
        "        }#T_206b1eae_17b2_11eb_afa8_5254004202adrow0_col14,#T_206b1eae_17b2_11eb_afa8_5254004202adrow14_col0{\n",
        "            background-color:  #f6eff7;\n",
        "            color:  #000000;\n",
        "        }#T_206b1eae_17b2_11eb_afa8_5254004202adrow0_col15,#T_206b1eae_17b2_11eb_afa8_5254004202adrow15_col0{\n",
        "            background-color:  #f1ebf4;\n",
        "            color:  #000000;\n",
        "        }#T_206b1eae_17b2_11eb_afa8_5254004202adrow1_col2,#T_206b1eae_17b2_11eb_afa8_5254004202adrow2_col1{\n",
        "            background-color:  #023e62;\n",
        "            color:  #f1f1f1;\n",
        "        }#T_206b1eae_17b2_11eb_afa8_5254004202adrow1_col3,#T_206b1eae_17b2_11eb_afa8_5254004202adrow3_col1{\n",
        "            background-color:  #0d75b3;\n",
        "            color:  #f1f1f1;\n",
        "        }#T_206b1eae_17b2_11eb_afa8_5254004202adrow1_col4,#T_206b1eae_17b2_11eb_afa8_5254004202adrow4_col1,#T_206b1eae_17b2_11eb_afa8_5254004202adrow4_col12,#T_206b1eae_17b2_11eb_afa8_5254004202adrow12_col4{\n",
        "            background-color:  #b5c4df;\n",
        "            color:  #000000;\n",
        "        }#T_206b1eae_17b2_11eb_afa8_5254004202adrow1_col5,#T_206b1eae_17b2_11eb_afa8_5254004202adrow2_col9,#T_206b1eae_17b2_11eb_afa8_5254004202adrow5_col1,#T_206b1eae_17b2_11eb_afa8_5254004202adrow9_col2{\n",
        "            background-color:  #d2d3e7;\n",
        "            color:  #000000;\n",
        "        }#T_206b1eae_17b2_11eb_afa8_5254004202adrow1_col6,#T_206b1eae_17b2_11eb_afa8_5254004202adrow4_col14,#T_206b1eae_17b2_11eb_afa8_5254004202adrow6_col1,#T_206b1eae_17b2_11eb_afa8_5254004202adrow14_col4{\n",
        "            background-color:  #ced0e6;\n",
        "            color:  #000000;\n",
        "        }#T_206b1eae_17b2_11eb_afa8_5254004202adrow1_col7,#T_206b1eae_17b2_11eb_afa8_5254004202adrow7_col1{\n",
        "            background-color:  #d3d4e7;\n",
        "            color:  #000000;\n",
        "        }#T_206b1eae_17b2_11eb_afa8_5254004202adrow1_col10,#T_206b1eae_17b2_11eb_afa8_5254004202adrow10_col1{\n",
        "            background-color:  #84b0d3;\n",
        "            color:  #000000;\n",
        "        }#T_206b1eae_17b2_11eb_afa8_5254004202adrow1_col11,#T_206b1eae_17b2_11eb_afa8_5254004202adrow7_col14,#T_206b1eae_17b2_11eb_afa8_5254004202adrow11_col1,#T_206b1eae_17b2_11eb_afa8_5254004202adrow14_col7{\n",
        "            background-color:  #9fbad9;\n",
        "            color:  #000000;\n",
        "        }#T_206b1eae_17b2_11eb_afa8_5254004202adrow1_col12,#T_206b1eae_17b2_11eb_afa8_5254004202adrow12_col1{\n",
        "            background-color:  #a2bcda;\n",
        "            color:  #000000;\n",
        "        }#T_206b1eae_17b2_11eb_afa8_5254004202adrow1_col13,#T_206b1eae_17b2_11eb_afa8_5254004202adrow3_col15,#T_206b1eae_17b2_11eb_afa8_5254004202adrow13_col1,#T_206b1eae_17b2_11eb_afa8_5254004202adrow15_col3{\n",
        "            background-color:  #f4eef6;\n",
        "            color:  #000000;\n",
        "        }#T_206b1eae_17b2_11eb_afa8_5254004202adrow1_col14,#T_206b1eae_17b2_11eb_afa8_5254004202adrow14_col1{\n",
        "            background-color:  #e4e1ef;\n",
        "            color:  #000000;\n",
        "        }#T_206b1eae_17b2_11eb_afa8_5254004202adrow1_col15,#T_206b1eae_17b2_11eb_afa8_5254004202adrow2_col4,#T_206b1eae_17b2_11eb_afa8_5254004202adrow4_col2,#T_206b1eae_17b2_11eb_afa8_5254004202adrow15_col1{\n",
        "            background-color:  #bcc7e1;\n",
        "            color:  #000000;\n",
        "        }#T_206b1eae_17b2_11eb_afa8_5254004202adrow1_col16,#T_206b1eae_17b2_11eb_afa8_5254004202adrow16_col1{\n",
        "            background-color:  #c2cbe2;\n",
        "            color:  #000000;\n",
        "        }#T_206b1eae_17b2_11eb_afa8_5254004202adrow2_col3,#T_206b1eae_17b2_11eb_afa8_5254004202adrow3_col2,#T_206b1eae_17b2_11eb_afa8_5254004202adrow8_col10,#T_206b1eae_17b2_11eb_afa8_5254004202adrow10_col8{\n",
        "            background-color:  #056fae;\n",
        "            color:  #f1f1f1;\n",
        "        }#T_206b1eae_17b2_11eb_afa8_5254004202adrow2_col7,#T_206b1eae_17b2_11eb_afa8_5254004202adrow7_col2{\n",
        "            background-color:  #cdd0e5;\n",
        "            color:  #000000;\n",
        "        }#T_206b1eae_17b2_11eb_afa8_5254004202adrow2_col8,#T_206b1eae_17b2_11eb_afa8_5254004202adrow8_col2{\n",
        "            background-color:  #d4d4e8;\n",
        "            color:  #000000;\n",
        "        }#T_206b1eae_17b2_11eb_afa8_5254004202adrow2_col10,#T_206b1eae_17b2_11eb_afa8_5254004202adrow4_col16,#T_206b1eae_17b2_11eb_afa8_5254004202adrow10_col2,#T_206b1eae_17b2_11eb_afa8_5254004202adrow16_col4{\n",
        "            background-color:  #86b0d3;\n",
        "            color:  #000000;\n",
        "        }#T_206b1eae_17b2_11eb_afa8_5254004202adrow2_col11,#T_206b1eae_17b2_11eb_afa8_5254004202adrow3_col11,#T_206b1eae_17b2_11eb_afa8_5254004202adrow11_col2,#T_206b1eae_17b2_11eb_afa8_5254004202adrow11_col3,#T_206b1eae_17b2_11eb_afa8_5254004202adrow14_col16,#T_206b1eae_17b2_11eb_afa8_5254004202adrow16_col14{\n",
        "            background-color:  #99b8d8;\n",
        "            color:  #000000;\n",
        "        }#T_206b1eae_17b2_11eb_afa8_5254004202adrow2_col12,#T_206b1eae_17b2_11eb_afa8_5254004202adrow3_col10,#T_206b1eae_17b2_11eb_afa8_5254004202adrow10_col3,#T_206b1eae_17b2_11eb_afa8_5254004202adrow12_col2{\n",
        "            background-color:  #94b6d7;\n",
        "            color:  #000000;\n",
        "        }#T_206b1eae_17b2_11eb_afa8_5254004202adrow2_col13,#T_206b1eae_17b2_11eb_afa8_5254004202adrow13_col2{\n",
        "            background-color:  #f7f0f7;\n",
        "            color:  #000000;\n",
        "        }#T_206b1eae_17b2_11eb_afa8_5254004202adrow2_col14,#T_206b1eae_17b2_11eb_afa8_5254004202adrow14_col2{\n",
        "            background-color:  #e1dfed;\n",
        "            color:  #000000;\n",
        "        }#T_206b1eae_17b2_11eb_afa8_5254004202adrow2_col15,#T_206b1eae_17b2_11eb_afa8_5254004202adrow2_col16,#T_206b1eae_17b2_11eb_afa8_5254004202adrow15_col2,#T_206b1eae_17b2_11eb_afa8_5254004202adrow16_col2{\n",
        "            background-color:  #c6cce3;\n",
        "            color:  #000000;\n",
        "        }#T_206b1eae_17b2_11eb_afa8_5254004202adrow3_col4,#T_206b1eae_17b2_11eb_afa8_5254004202adrow4_col3,#T_206b1eae_17b2_11eb_afa8_5254004202adrow11_col13,#T_206b1eae_17b2_11eb_afa8_5254004202adrow13_col11{\n",
        "            background-color:  #8eb3d5;\n",
        "            color:  #000000;\n",
        "        }#T_206b1eae_17b2_11eb_afa8_5254004202adrow3_col5,#T_206b1eae_17b2_11eb_afa8_5254004202adrow5_col3{\n",
        "            background-color:  #dad9ea;\n",
        "            color:  #000000;\n",
        "        }#T_206b1eae_17b2_11eb_afa8_5254004202adrow3_col6,#T_206b1eae_17b2_11eb_afa8_5254004202adrow6_col3{\n",
        "            background-color:  #dddbec;\n",
        "            color:  #000000;\n",
        "        }#T_206b1eae_17b2_11eb_afa8_5254004202adrow3_col7,#T_206b1eae_17b2_11eb_afa8_5254004202adrow3_col16,#T_206b1eae_17b2_11eb_afa8_5254004202adrow7_col3,#T_206b1eae_17b2_11eb_afa8_5254004202adrow16_col3{\n",
        "            background-color:  #c4cbe3;\n",
        "            color:  #000000;\n",
        "        }#T_206b1eae_17b2_11eb_afa8_5254004202adrow3_col8,#T_206b1eae_17b2_11eb_afa8_5254004202adrow8_col3,#T_206b1eae_17b2_11eb_afa8_5254004202adrow9_col15,#T_206b1eae_17b2_11eb_afa8_5254004202adrow15_col9{\n",
        "            background-color:  #cacee5;\n",
        "            color:  #000000;\n",
        "        }#T_206b1eae_17b2_11eb_afa8_5254004202adrow3_col9,#T_206b1eae_17b2_11eb_afa8_5254004202adrow9_col3{\n",
        "            background-color:  #cccfe5;\n",
        "            color:  #000000;\n",
        "        }#T_206b1eae_17b2_11eb_afa8_5254004202adrow3_col12,#T_206b1eae_17b2_11eb_afa8_5254004202adrow11_col15,#T_206b1eae_17b2_11eb_afa8_5254004202adrow12_col3,#T_206b1eae_17b2_11eb_afa8_5254004202adrow15_col11{\n",
        "            background-color:  #a9bfdc;\n",
        "            color:  #000000;\n",
        "        }#T_206b1eae_17b2_11eb_afa8_5254004202adrow3_col13,#T_206b1eae_17b2_11eb_afa8_5254004202adrow3_col14,#T_206b1eae_17b2_11eb_afa8_5254004202adrow13_col3,#T_206b1eae_17b2_11eb_afa8_5254004202adrow14_col3{\n",
        "            background-color:  #fff7fb;\n",
        "            color:  #000000;\n",
        "        }#T_206b1eae_17b2_11eb_afa8_5254004202adrow4_col5,#T_206b1eae_17b2_11eb_afa8_5254004202adrow5_col4{\n",
        "            background-color:  #80aed2;\n",
        "            color:  #000000;\n",
        "        }#T_206b1eae_17b2_11eb_afa8_5254004202adrow4_col6,#T_206b1eae_17b2_11eb_afa8_5254004202adrow6_col4{\n",
        "            background-color:  #bbc7e0;\n",
        "            color:  #000000;\n",
        "        }#T_206b1eae_17b2_11eb_afa8_5254004202adrow4_col7,#T_206b1eae_17b2_11eb_afa8_5254004202adrow7_col4{\n",
        "            background-color:  #7dacd1;\n",
        "            color:  #000000;\n",
        "        }#T_206b1eae_17b2_11eb_afa8_5254004202adrow4_col8,#T_206b1eae_17b2_11eb_afa8_5254004202adrow4_col15,#T_206b1eae_17b2_11eb_afa8_5254004202adrow8_col4,#T_206b1eae_17b2_11eb_afa8_5254004202adrow15_col4{\n",
        "            background-color:  #abbfdc;\n",
        "            color:  #000000;\n",
        "        }#T_206b1eae_17b2_11eb_afa8_5254004202adrow4_col9,#T_206b1eae_17b2_11eb_afa8_5254004202adrow4_col10,#T_206b1eae_17b2_11eb_afa8_5254004202adrow9_col4,#T_206b1eae_17b2_11eb_afa8_5254004202adrow10_col4,#T_206b1eae_17b2_11eb_afa8_5254004202adrow12_col15,#T_206b1eae_17b2_11eb_afa8_5254004202adrow15_col12{\n",
        "            background-color:  #93b5d6;\n",
        "            color:  #000000;\n",
        "        }#T_206b1eae_17b2_11eb_afa8_5254004202adrow4_col11,#T_206b1eae_17b2_11eb_afa8_5254004202adrow11_col4{\n",
        "            background-color:  #78abd0;\n",
        "            color:  #000000;\n",
        "        }#T_206b1eae_17b2_11eb_afa8_5254004202adrow4_col13,#T_206b1eae_17b2_11eb_afa8_5254004202adrow13_col4{\n",
        "            background-color:  #c8cde4;\n",
        "            color:  #000000;\n",
        "        }#T_206b1eae_17b2_11eb_afa8_5254004202adrow5_col6,#T_206b1eae_17b2_11eb_afa8_5254004202adrow6_col5,#T_206b1eae_17b2_11eb_afa8_5254004202adrow12_col16,#T_206b1eae_17b2_11eb_afa8_5254004202adrow16_col12{\n",
        "            background-color:  #0567a2;\n",
        "            color:  #f1f1f1;\n",
        "        }#T_206b1eae_17b2_11eb_afa8_5254004202adrow5_col7,#T_206b1eae_17b2_11eb_afa8_5254004202adrow7_col5{\n",
        "            background-color:  #0568a3;\n",
        "            color:  #f1f1f1;\n",
        "        }#T_206b1eae_17b2_11eb_afa8_5254004202adrow5_col8,#T_206b1eae_17b2_11eb_afa8_5254004202adrow8_col5,#T_206b1eae_17b2_11eb_afa8_5254004202adrow9_col10,#T_206b1eae_17b2_11eb_afa8_5254004202adrow10_col9{\n",
        "            background-color:  #0f76b3;\n",
        "            color:  #f1f1f1;\n",
        "        }#T_206b1eae_17b2_11eb_afa8_5254004202adrow5_col9,#T_206b1eae_17b2_11eb_afa8_5254004202adrow7_col9,#T_206b1eae_17b2_11eb_afa8_5254004202adrow9_col5,#T_206b1eae_17b2_11eb_afa8_5254004202adrow9_col7{\n",
        "            background-color:  #167bb6;\n",
        "            color:  #000000;\n",
        "        }#T_206b1eae_17b2_11eb_afa8_5254004202adrow5_col10,#T_206b1eae_17b2_11eb_afa8_5254004202adrow9_col11,#T_206b1eae_17b2_11eb_afa8_5254004202adrow10_col5,#T_206b1eae_17b2_11eb_afa8_5254004202adrow11_col9{\n",
        "            background-color:  #056dac;\n",
        "            color:  #f1f1f1;\n",
        "        }#T_206b1eae_17b2_11eb_afa8_5254004202adrow5_col11,#T_206b1eae_17b2_11eb_afa8_5254004202adrow11_col5{\n",
        "            background-color:  #187cb6;\n",
        "            color:  #000000;\n",
        "        }#T_206b1eae_17b2_11eb_afa8_5254004202adrow5_col12,#T_206b1eae_17b2_11eb_afa8_5254004202adrow12_col5{\n",
        "            background-color:  #3991c1;\n",
        "            color:  #000000;\n",
        "        }#T_206b1eae_17b2_11eb_afa8_5254004202adrow5_col13,#T_206b1eae_17b2_11eb_afa8_5254004202adrow13_col5{\n",
        "            background-color:  #1e80b8;\n",
        "            color:  #000000;\n",
        "        }#T_206b1eae_17b2_11eb_afa8_5254004202adrow5_col14,#T_206b1eae_17b2_11eb_afa8_5254004202adrow9_col13,#T_206b1eae_17b2_11eb_afa8_5254004202adrow13_col9,#T_206b1eae_17b2_11eb_afa8_5254004202adrow14_col5{\n",
        "            background-color:  #71a8ce;\n",
        "            color:  #000000;\n",
        "        }#T_206b1eae_17b2_11eb_afa8_5254004202adrow5_col15,#T_206b1eae_17b2_11eb_afa8_5254004202adrow15_col5{\n",
        "            background-color:  #75a9cf;\n",
        "            color:  #000000;\n",
        "        }#T_206b1eae_17b2_11eb_afa8_5254004202adrow5_col16,#T_206b1eae_17b2_11eb_afa8_5254004202adrow16_col5{\n",
        "            background-color:  #04598c;\n",
        "            color:  #f1f1f1;\n",
        "        }#T_206b1eae_17b2_11eb_afa8_5254004202adrow6_col7,#T_206b1eae_17b2_11eb_afa8_5254004202adrow7_col6{\n",
        "            background-color:  #1c7fb8;\n",
        "            color:  #000000;\n",
        "        }#T_206b1eae_17b2_11eb_afa8_5254004202adrow6_col8,#T_206b1eae_17b2_11eb_afa8_5254004202adrow8_col6{\n",
        "            background-color:  #0a73b2;\n",
        "            color:  #f1f1f1;\n",
        "        }#T_206b1eae_17b2_11eb_afa8_5254004202adrow6_col9,#T_206b1eae_17b2_11eb_afa8_5254004202adrow9_col6{\n",
        "            background-color:  #3790c0;\n",
        "            color:  #000000;\n",
        "        }#T_206b1eae_17b2_11eb_afa8_5254004202adrow6_col10,#T_206b1eae_17b2_11eb_afa8_5254004202adrow7_col12,#T_206b1eae_17b2_11eb_afa8_5254004202adrow10_col6,#T_206b1eae_17b2_11eb_afa8_5254004202adrow12_col7,#T_206b1eae_17b2_11eb_afa8_5254004202adrow13_col16,#T_206b1eae_17b2_11eb_afa8_5254004202adrow16_col13{\n",
        "            background-color:  #0872b1;\n",
        "            color:  #f1f1f1;\n",
        "        }#T_206b1eae_17b2_11eb_afa8_5254004202adrow6_col11,#T_206b1eae_17b2_11eb_afa8_5254004202adrow11_col6{\n",
        "            background-color:  #3f93c2;\n",
        "            color:  #000000;\n",
        "        }#T_206b1eae_17b2_11eb_afa8_5254004202adrow6_col12,#T_206b1eae_17b2_11eb_afa8_5254004202adrow12_col6,#T_206b1eae_17b2_11eb_afa8_5254004202adrow12_col13,#T_206b1eae_17b2_11eb_afa8_5254004202adrow13_col12{\n",
        "            background-color:  #4295c3;\n",
        "            color:  #000000;\n",
        "        }#T_206b1eae_17b2_11eb_afa8_5254004202adrow6_col13,#T_206b1eae_17b2_11eb_afa8_5254004202adrow13_col6{\n",
        "            background-color:  #04649d;\n",
        "            color:  #f1f1f1;\n",
        "        }#T_206b1eae_17b2_11eb_afa8_5254004202adrow6_col14,#T_206b1eae_17b2_11eb_afa8_5254004202adrow14_col6{\n",
        "            background-color:  #569dc8;\n",
        "            color:  #000000;\n",
        "        }#T_206b1eae_17b2_11eb_afa8_5254004202adrow6_col15,#T_206b1eae_17b2_11eb_afa8_5254004202adrow15_col6{\n",
        "            background-color:  #5a9ec9;\n",
        "            color:  #000000;\n",
        "        }#T_206b1eae_17b2_11eb_afa8_5254004202adrow6_col16,#T_206b1eae_17b2_11eb_afa8_5254004202adrow9_col16,#T_206b1eae_17b2_11eb_afa8_5254004202adrow16_col6,#T_206b1eae_17b2_11eb_afa8_5254004202adrow16_col9{\n",
        "            background-color:  #045e94;\n",
        "            color:  #f1f1f1;\n",
        "        }#T_206b1eae_17b2_11eb_afa8_5254004202adrow7_col8,#T_206b1eae_17b2_11eb_afa8_5254004202adrow8_col7{\n",
        "            background-color:  #056caa;\n",
        "            color:  #f1f1f1;\n",
        "        }#T_206b1eae_17b2_11eb_afa8_5254004202adrow7_col10,#T_206b1eae_17b2_11eb_afa8_5254004202adrow10_col7{\n",
        "            background-color:  #2484ba;\n",
        "            color:  #000000;\n",
        "        }#T_206b1eae_17b2_11eb_afa8_5254004202adrow7_col11,#T_206b1eae_17b2_11eb_afa8_5254004202adrow9_col12,#T_206b1eae_17b2_11eb_afa8_5254004202adrow11_col7,#T_206b1eae_17b2_11eb_afa8_5254004202adrow12_col9{\n",
        "            background-color:  #1379b5;\n",
        "            color:  #f1f1f1;\n",
        "        }#T_206b1eae_17b2_11eb_afa8_5254004202adrow7_col13,#T_206b1eae_17b2_11eb_afa8_5254004202adrow13_col7{\n",
        "            background-color:  #358fc0;\n",
        "            color:  #000000;\n",
        "        }#T_206b1eae_17b2_11eb_afa8_5254004202adrow7_col15,#T_206b1eae_17b2_11eb_afa8_5254004202adrow15_col7{\n",
        "            background-color:  #89b1d4;\n",
        "            color:  #000000;\n",
        "        }#T_206b1eae_17b2_11eb_afa8_5254004202adrow7_col16,#T_206b1eae_17b2_11eb_afa8_5254004202adrow16_col7{\n",
        "            background-color:  #045e93;\n",
        "            color:  #f1f1f1;\n",
        "        }#T_206b1eae_17b2_11eb_afa8_5254004202adrow8_col9,#T_206b1eae_17b2_11eb_afa8_5254004202adrow9_col8{\n",
        "            background-color:  #0567a1;\n",
        "            color:  #f1f1f1;\n",
        "        }#T_206b1eae_17b2_11eb_afa8_5254004202adrow8_col11,#T_206b1eae_17b2_11eb_afa8_5254004202adrow11_col8{\n",
        "            background-color:  #056ba9;\n",
        "            color:  #f1f1f1;\n",
        "        }#T_206b1eae_17b2_11eb_afa8_5254004202adrow8_col12,#T_206b1eae_17b2_11eb_afa8_5254004202adrow12_col8{\n",
        "            background-color:  #0c74b2;\n",
        "            color:  #f1f1f1;\n",
        "        }#T_206b1eae_17b2_11eb_afa8_5254004202adrow8_col13,#T_206b1eae_17b2_11eb_afa8_5254004202adrow13_col8{\n",
        "            background-color:  #197db7;\n",
        "            color:  #000000;\n",
        "        }#T_206b1eae_17b2_11eb_afa8_5254004202adrow8_col14,#T_206b1eae_17b2_11eb_afa8_5254004202adrow14_col8{\n",
        "            background-color:  #8bb2d4;\n",
        "            color:  #000000;\n",
        "        }#T_206b1eae_17b2_11eb_afa8_5254004202adrow8_col15,#T_206b1eae_17b2_11eb_afa8_5254004202adrow15_col8{\n",
        "            background-color:  #9cb9d9;\n",
        "            color:  #000000;\n",
        "        }#T_206b1eae_17b2_11eb_afa8_5254004202adrow8_col16,#T_206b1eae_17b2_11eb_afa8_5254004202adrow16_col8{\n",
        "            background-color:  #045687;\n",
        "            color:  #f1f1f1;\n",
        "        }#T_206b1eae_17b2_11eb_afa8_5254004202adrow9_col14,#T_206b1eae_17b2_11eb_afa8_5254004202adrow14_col9{\n",
        "            background-color:  #d1d2e6;\n",
        "            color:  #000000;\n",
        "        }#T_206b1eae_17b2_11eb_afa8_5254004202adrow10_col11,#T_206b1eae_17b2_11eb_afa8_5254004202adrow11_col10{\n",
        "            background-color:  #04629a;\n",
        "            color:  #f1f1f1;\n",
        "        }#T_206b1eae_17b2_11eb_afa8_5254004202adrow10_col12,#T_206b1eae_17b2_11eb_afa8_5254004202adrow12_col10{\n",
        "            background-color:  #2786bb;\n",
        "            color:  #000000;\n",
        "        }#T_206b1eae_17b2_11eb_afa8_5254004202adrow10_col13,#T_206b1eae_17b2_11eb_afa8_5254004202adrow13_col10{\n",
        "            background-color:  #62a2cb;\n",
        "            color:  #000000;\n",
        "        }#T_206b1eae_17b2_11eb_afa8_5254004202adrow10_col14,#T_206b1eae_17b2_11eb_afa8_5254004202adrow14_col10{\n",
        "            background-color:  #91b5d6;\n",
        "            color:  #000000;\n",
        "        }#T_206b1eae_17b2_11eb_afa8_5254004202adrow10_col15,#T_206b1eae_17b2_11eb_afa8_5254004202adrow15_col10{\n",
        "            background-color:  #79abd0;\n",
        "            color:  #000000;\n",
        "        }#T_206b1eae_17b2_11eb_afa8_5254004202adrow10_col16,#T_206b1eae_17b2_11eb_afa8_5254004202adrow16_col10{\n",
        "            background-color:  #045c90;\n",
        "            color:  #f1f1f1;\n",
        "        }#T_206b1eae_17b2_11eb_afa8_5254004202adrow11_col12,#T_206b1eae_17b2_11eb_afa8_5254004202adrow12_col11{\n",
        "            background-color:  #3d93c2;\n",
        "            color:  #000000;\n",
        "        }#T_206b1eae_17b2_11eb_afa8_5254004202adrow11_col14,#T_206b1eae_17b2_11eb_afa8_5254004202adrow14_col11{\n",
        "            background-color:  #8fb4d6;\n",
        "            color:  #000000;\n",
        "        }#T_206b1eae_17b2_11eb_afa8_5254004202adrow11_col16,#T_206b1eae_17b2_11eb_afa8_5254004202adrow16_col11{\n",
        "            background-color:  #0566a0;\n",
        "            color:  #f1f1f1;\n",
        "        }#T_206b1eae_17b2_11eb_afa8_5254004202adrow12_col14,#T_206b1eae_17b2_11eb_afa8_5254004202adrow14_col12{\n",
        "            background-color:  #adc1dd;\n",
        "            color:  #000000;\n",
        "        }#T_206b1eae_17b2_11eb_afa8_5254004202adrow13_col14,#T_206b1eae_17b2_11eb_afa8_5254004202adrow14_col13{\n",
        "            background-color:  #2987bc;\n",
        "            color:  #000000;\n",
        "        }#T_206b1eae_17b2_11eb_afa8_5254004202adrow13_col15,#T_206b1eae_17b2_11eb_afa8_5254004202adrow15_col13{\n",
        "            background-color:  #2081b9;\n",
        "            color:  #000000;\n",
        "        }#T_206b1eae_17b2_11eb_afa8_5254004202adrow14_col15,#T_206b1eae_17b2_11eb_afa8_5254004202adrow15_col14{\n",
        "            background-color:  #2182b9;\n",
        "            color:  #000000;\n",
        "        }#T_206b1eae_17b2_11eb_afa8_5254004202adrow15_col16,#T_206b1eae_17b2_11eb_afa8_5254004202adrow16_col15{\n",
        "            background-color:  #76aad0;\n",
        "            color:  #000000;\n",
        "        }</style><table id=\"T_206b1eae_17b2_11eb_afa8_5254004202ad\" ><thead>    <tr>        <th class=\"blank level0\" ></th>        <th class=\"col_heading level0 col0\" >Rt</th>        <th class=\"col_heading level0 col1\" >theta</th>        <th class=\"col_heading level0 col2\" >kappa</th>        <th class=\"col_heading level0 col3\" >rho</th>        <th class=\"col_heading level0 col4\" >sigma</th>        <th class=\"col_heading level0 col5\" >School_closing</th>        <th class=\"col_heading level0 col6\" >Workplace_closing</th>        <th class=\"col_heading level0 col7\" >Cancel_events</th>        <th class=\"col_heading level0 col8\" >Gatherings_restrictions</th>        <th class=\"col_heading level0 col9\" >Transport_closing</th>        <th class=\"col_heading level0 col10\" >Stay_home_restrictions</th>        <th class=\"col_heading level0 col11\" >Internal_movement_restrictions</th>        <th class=\"col_heading level0 col12\" >International_movement_restrictions</th>        <th class=\"col_heading level0 col13\" >Information_campaigns</th>        <th class=\"col_heading level0 col14\" >Testing_policy</th>        <th class=\"col_heading level0 col15\" >Contact_tracing</th>        <th class=\"col_heading level0 col16\" >Stringency_index</th>    </tr></thead><tbody>\n",
        "                <tr>\n",
        "                        <th id=\"T_206b1eae_17b2_11eb_afa8_5254004202adlevel0_row0\" class=\"row_heading level0 row0\" >Rt</th>\n",
        "                        <td id=\"T_206b1eae_17b2_11eb_afa8_5254004202adrow0_col0\" class=\"data row0 col0\" >1.000000</td>\n",
        "                        <td id=\"T_206b1eae_17b2_11eb_afa8_5254004202adrow0_col1\" class=\"data row0 col1\" >-0.105370</td>\n",
        "                        <td id=\"T_206b1eae_17b2_11eb_afa8_5254004202adrow0_col2\" class=\"data row0 col2\" >-0.070285</td>\n",
        "                        <td id=\"T_206b1eae_17b2_11eb_afa8_5254004202adrow0_col3\" class=\"data row0 col3\" >0.317387</td>\n",
        "                        <td id=\"T_206b1eae_17b2_11eb_afa8_5254004202adrow0_col4\" class=\"data row0 col4\" >-0.157868</td>\n",
        "                        <td id=\"T_206b1eae_17b2_11eb_afa8_5254004202adrow0_col5\" class=\"data row0 col5\" >-0.183281</td>\n",
        "                        <td id=\"T_206b1eae_17b2_11eb_afa8_5254004202adrow0_col6\" class=\"data row0 col6\" >-0.208202</td>\n",
        "                        <td id=\"T_206b1eae_17b2_11eb_afa8_5254004202adrow0_col7\" class=\"data row0 col7\" >-0.074517</td>\n",
        "                        <td id=\"T_206b1eae_17b2_11eb_afa8_5254004202adrow0_col8\" class=\"data row0 col8\" >-0.123324</td>\n",
        "                        <td id=\"T_206b1eae_17b2_11eb_afa8_5254004202adrow0_col9\" class=\"data row0 col9\" >-0.102269</td>\n",
        "                        <td id=\"T_206b1eae_17b2_11eb_afa8_5254004202adrow0_col10\" class=\"data row0 col10\" >-0.159584</td>\n",
        "                        <td id=\"T_206b1eae_17b2_11eb_afa8_5254004202adrow0_col11\" class=\"data row0 col11\" >-0.221368</td>\n",
        "                        <td id=\"T_206b1eae_17b2_11eb_afa8_5254004202adrow0_col12\" class=\"data row0 col12\" >-0.063204</td>\n",
        "                        <td id=\"T_206b1eae_17b2_11eb_afa8_5254004202adrow0_col13\" class=\"data row0 col13\" >-0.175577</td>\n",
        "                        <td id=\"T_206b1eae_17b2_11eb_afa8_5254004202adrow0_col14\" class=\"data row0 col14\" >-0.330478</td>\n",
        "                        <td id=\"T_206b1eae_17b2_11eb_afa8_5254004202adrow0_col15\" class=\"data row0 col15\" >-0.281420</td>\n",
        "                        <td id=\"T_206b1eae_17b2_11eb_afa8_5254004202adrow0_col16\" class=\"data row0 col16\" >-0.157930</td>\n",
        "            </tr>\n",
        "            <tr>\n",
        "                        <th id=\"T_206b1eae_17b2_11eb_afa8_5254004202adlevel0_row1\" class=\"row_heading level0 row1\" >theta</th>\n",
        "                        <td id=\"T_206b1eae_17b2_11eb_afa8_5254004202adrow1_col0\" class=\"data row1 col0\" >-0.105370</td>\n",
        "                        <td id=\"T_206b1eae_17b2_11eb_afa8_5254004202adrow1_col1\" class=\"data row1 col1\" >1.000000</td>\n",
        "                        <td id=\"T_206b1eae_17b2_11eb_afa8_5254004202adrow1_col2\" class=\"data row1 col2\" >0.963987</td>\n",
        "                        <td id=\"T_206b1eae_17b2_11eb_afa8_5254004202adrow1_col3\" class=\"data row1 col3\" >0.615772</td>\n",
        "                        <td id=\"T_206b1eae_17b2_11eb_afa8_5254004202adrow1_col4\" class=\"data row1 col4\" >0.049101</td>\n",
        "                        <td id=\"T_206b1eae_17b2_11eb_afa8_5254004202adrow1_col5\" class=\"data row1 col5\" >-0.078392</td>\n",
        "                        <td id=\"T_206b1eae_17b2_11eb_afa8_5254004202adrow1_col6\" class=\"data row1 col6\" >-0.057646</td>\n",
        "                        <td id=\"T_206b1eae_17b2_11eb_afa8_5254004202adrow1_col7\" class=\"data row1 col7\" >-0.081011</td>\n",
        "                        <td id=\"T_206b1eae_17b2_11eb_afa8_5254004202adrow1_col8\" class=\"data row1 col8\" >-0.120226</td>\n",
        "                        <td id=\"T_206b1eae_17b2_11eb_afa8_5254004202adrow1_col9\" class=\"data row1 col9\" >-0.103806</td>\n",
        "                        <td id=\"T_206b1eae_17b2_11eb_afa8_5254004202adrow1_col10\" class=\"data row1 col10\" >0.232452</td>\n",
        "                        <td id=\"T_206b1eae_17b2_11eb_afa8_5254004202adrow1_col11\" class=\"data row1 col11\" >0.136631</td>\n",
        "                        <td id=\"T_206b1eae_17b2_11eb_afa8_5254004202adrow1_col12\" class=\"data row1 col12\" >0.125518</td>\n",
        "                        <td id=\"T_206b1eae_17b2_11eb_afa8_5254004202adrow1_col13\" class=\"data row1 col13\" >-0.314730</td>\n",
        "                        <td id=\"T_206b1eae_17b2_11eb_afa8_5254004202adrow1_col14\" class=\"data row1 col14\" >-0.187385</td>\n",
        "                        <td id=\"T_206b1eae_17b2_11eb_afa8_5254004202adrow1_col15\" class=\"data row1 col15\" >0.022139</td>\n",
        "                        <td id=\"T_206b1eae_17b2_11eb_afa8_5254004202adrow1_col16\" class=\"data row1 col16\" >-0.006858</td>\n",
        "            </tr>\n",
        "            <tr>\n",
        "                        <th id=\"T_206b1eae_17b2_11eb_afa8_5254004202adlevel0_row2\" class=\"row_heading level0 row2\" >kappa</th>\n",
        "                        <td id=\"T_206b1eae_17b2_11eb_afa8_5254004202adrow2_col0\" class=\"data row2 col0\" >-0.070285</td>\n",
        "                        <td id=\"T_206b1eae_17b2_11eb_afa8_5254004202adrow2_col1\" class=\"data row2 col1\" >0.963987</td>\n",
        "                        <td id=\"T_206b1eae_17b2_11eb_afa8_5254004202adrow2_col2\" class=\"data row2 col2\" >1.000000</td>\n",
        "                        <td id=\"T_206b1eae_17b2_11eb_afa8_5254004202adrow2_col3\" class=\"data row2 col3\" >0.655985</td>\n",
        "                        <td id=\"T_206b1eae_17b2_11eb_afa8_5254004202adrow2_col4\" class=\"data row2 col4\" >0.021901</td>\n",
        "                        <td id=\"T_206b1eae_17b2_11eb_afa8_5254004202adrow2_col5\" class=\"data row2 col5\" >-0.107923</td>\n",
        "                        <td id=\"T_206b1eae_17b2_11eb_afa8_5254004202adrow2_col6\" class=\"data row2 col6\" >-0.104913</td>\n",
        "                        <td id=\"T_206b1eae_17b2_11eb_afa8_5254004202adrow2_col7\" class=\"data row2 col7\" >-0.048721</td>\n",
        "                        <td id=\"T_206b1eae_17b2_11eb_afa8_5254004202adrow2_col8\" class=\"data row2 col8\" >-0.086281</td>\n",
        "                        <td id=\"T_206b1eae_17b2_11eb_afa8_5254004202adrow2_col9\" class=\"data row2 col9\" >-0.080009</td>\n",
        "                        <td id=\"T_206b1eae_17b2_11eb_afa8_5254004202adrow2_col10\" class=\"data row2 col10\" >0.228924</td>\n",
        "                        <td id=\"T_206b1eae_17b2_11eb_afa8_5254004202adrow2_col11\" class=\"data row2 col11\" >0.161728</td>\n",
        "                        <td id=\"T_206b1eae_17b2_11eb_afa8_5254004202adrow2_col12\" class=\"data row2 col12\" >0.180011</td>\n",
        "                        <td id=\"T_206b1eae_17b2_11eb_afa8_5254004202adrow2_col13\" class=\"data row2 col13\" >-0.343068</td>\n",
        "                        <td id=\"T_206b1eae_17b2_11eb_afa8_5254004202adrow2_col14\" class=\"data row2 col14\" >-0.172341</td>\n",
        "                        <td id=\"T_206b1eae_17b2_11eb_afa8_5254004202adrow2_col15\" class=\"data row2 col15\" >-0.019664</td>\n",
        "                        <td id=\"T_206b1eae_17b2_11eb_afa8_5254004202adrow2_col16\" class=\"data row2 col16\" >-0.022875</td>\n",
        "            </tr>\n",
        "            <tr>\n",
        "                        <th id=\"T_206b1eae_17b2_11eb_afa8_5254004202adlevel0_row3\" class=\"row_heading level0 row3\" >rho</th>\n",
        "                        <td id=\"T_206b1eae_17b2_11eb_afa8_5254004202adrow3_col0\" class=\"data row3 col0\" >0.317387</td>\n",
        "                        <td id=\"T_206b1eae_17b2_11eb_afa8_5254004202adrow3_col1\" class=\"data row3 col1\" >0.615772</td>\n",
        "                        <td id=\"T_206b1eae_17b2_11eb_afa8_5254004202adrow3_col2\" class=\"data row3 col2\" >0.655985</td>\n",
        "                        <td id=\"T_206b1eae_17b2_11eb_afa8_5254004202adrow3_col3\" class=\"data row3 col3\" >1.000000</td>\n",
        "                        <td id=\"T_206b1eae_17b2_11eb_afa8_5254004202adrow3_col4\" class=\"data row3 col4\" >0.199688</td>\n",
        "                        <td id=\"T_206b1eae_17b2_11eb_afa8_5254004202adrow3_col5\" class=\"data row3 col5\" >-0.125302</td>\n",
        "                        <td id=\"T_206b1eae_17b2_11eb_afa8_5254004202adrow3_col6\" class=\"data row3 col6\" >-0.143846</td>\n",
        "                        <td id=\"T_206b1eae_17b2_11eb_afa8_5254004202adrow3_col7\" class=\"data row3 col7\" >-0.012065</td>\n",
        "                        <td id=\"T_206b1eae_17b2_11eb_afa8_5254004202adrow3_col8\" class=\"data row3 col8\" >-0.036719</td>\n",
        "                        <td id=\"T_206b1eae_17b2_11eb_afa8_5254004202adrow3_col9\" class=\"data row3 col9\" >-0.043709</td>\n",
        "                        <td id=\"T_206b1eae_17b2_11eb_afa8_5254004202adrow3_col10\" class=\"data row3 col10\" >0.180068</td>\n",
        "                        <td id=\"T_206b1eae_17b2_11eb_afa8_5254004202adrow3_col11\" class=\"data row3 col11\" >0.162582</td>\n",
        "                        <td id=\"T_206b1eae_17b2_11eb_afa8_5254004202adrow3_col12\" class=\"data row3 col12\" >0.101065</td>\n",
        "                        <td id=\"T_206b1eae_17b2_11eb_afa8_5254004202adrow3_col13\" class=\"data row3 col13\" >-0.418205</td>\n",
        "                        <td id=\"T_206b1eae_17b2_11eb_afa8_5254004202adrow3_col14\" class=\"data row3 col14\" >-0.414031</td>\n",
        "                        <td id=\"T_206b1eae_17b2_11eb_afa8_5254004202adrow3_col15\" class=\"data row3 col15\" >-0.314231</td>\n",
        "                        <td id=\"T_206b1eae_17b2_11eb_afa8_5254004202adrow3_col16\" class=\"data row3 col16\" >-0.008310</td>\n",
        "            </tr>\n",
        "            <tr>\n",
        "                        <th id=\"T_206b1eae_17b2_11eb_afa8_5254004202adlevel0_row4\" class=\"row_heading level0 row4\" >sigma</th>\n",
        "                        <td id=\"T_206b1eae_17b2_11eb_afa8_5254004202adrow4_col0\" class=\"data row4 col0\" >-0.157868</td>\n",
        "                        <td id=\"T_206b1eae_17b2_11eb_afa8_5254004202adrow4_col1\" class=\"data row4 col1\" >0.049101</td>\n",
        "                        <td id=\"T_206b1eae_17b2_11eb_afa8_5254004202adrow4_col2\" class=\"data row4 col2\" >0.021901</td>\n",
        "                        <td id=\"T_206b1eae_17b2_11eb_afa8_5254004202adrow4_col3\" class=\"data row4 col3\" >0.199688</td>\n",
        "                        <td id=\"T_206b1eae_17b2_11eb_afa8_5254004202adrow4_col4\" class=\"data row4 col4\" >1.000000</td>\n",
        "                        <td id=\"T_206b1eae_17b2_11eb_afa8_5254004202adrow4_col5\" class=\"data row4 col5\" >0.248797</td>\n",
        "                        <td id=\"T_206b1eae_17b2_11eb_afa8_5254004202adrow4_col6\" class=\"data row4 col6\" >0.026527</td>\n",
        "                        <td id=\"T_206b1eae_17b2_11eb_afa8_5254004202adrow4_col7\" class=\"data row4 col7\" >0.262545</td>\n",
        "                        <td id=\"T_206b1eae_17b2_11eb_afa8_5254004202adrow4_col8\" class=\"data row4 col8\" >0.093608</td>\n",
        "                        <td id=\"T_206b1eae_17b2_11eb_afa8_5254004202adrow4_col9\" class=\"data row4 col9\" >0.185537</td>\n",
        "                        <td id=\"T_206b1eae_17b2_11eb_afa8_5254004202adrow4_col10\" class=\"data row4 col10\" >0.183971</td>\n",
        "                        <td id=\"T_206b1eae_17b2_11eb_afa8_5254004202adrow4_col11\" class=\"data row4 col11\" >0.274283</td>\n",
        "                        <td id=\"T_206b1eae_17b2_11eb_afa8_5254004202adrow4_col12\" class=\"data row4 col12\" >0.049862</td>\n",
        "                        <td id=\"T_206b1eae_17b2_11eb_afa8_5254004202adrow4_col13\" class=\"data row4 col13\" >-0.025050</td>\n",
        "                        <td id=\"T_206b1eae_17b2_11eb_afa8_5254004202adrow4_col14\" class=\"data row4 col14\" >-0.056484</td>\n",
        "                        <td id=\"T_206b1eae_17b2_11eb_afa8_5254004202adrow4_col15\" class=\"data row4 col15\" >0.096720</td>\n",
        "                        <td id=\"T_206b1eae_17b2_11eb_afa8_5254004202adrow4_col16\" class=\"data row4 col16\" >0.224773</td>\n",
        "            </tr>\n",
        "            <tr>\n",
        "                        <th id=\"T_206b1eae_17b2_11eb_afa8_5254004202adlevel0_row5\" class=\"row_heading level0 row5\" >School_closing</th>\n",
        "                        <td id=\"T_206b1eae_17b2_11eb_afa8_5254004202adrow5_col0\" class=\"data row5 col0\" >-0.183281</td>\n",
        "                        <td id=\"T_206b1eae_17b2_11eb_afa8_5254004202adrow5_col1\" class=\"data row5 col1\" >-0.078392</td>\n",
        "                        <td id=\"T_206b1eae_17b2_11eb_afa8_5254004202adrow5_col2\" class=\"data row5 col2\" >-0.107923</td>\n",
        "                        <td id=\"T_206b1eae_17b2_11eb_afa8_5254004202adrow5_col3\" class=\"data row5 col3\" >-0.125302</td>\n",
        "                        <td id=\"T_206b1eae_17b2_11eb_afa8_5254004202adrow5_col4\" class=\"data row5 col4\" >0.248797</td>\n",
        "                        <td id=\"T_206b1eae_17b2_11eb_afa8_5254004202adrow5_col5\" class=\"data row5 col5\" >1.000000</td>\n",
        "                        <td id=\"T_206b1eae_17b2_11eb_afa8_5254004202adrow5_col6\" class=\"data row5 col6\" >0.713480</td>\n",
        "                        <td id=\"T_206b1eae_17b2_11eb_afa8_5254004202adrow5_col7\" class=\"data row5 col7\" >0.711384</td>\n",
        "                        <td id=\"T_206b1eae_17b2_11eb_afa8_5254004202adrow5_col8\" class=\"data row5 col8\" >0.607638</td>\n",
        "                        <td id=\"T_206b1eae_17b2_11eb_afa8_5254004202adrow5_col9\" class=\"data row5 col9\" >0.579603</td>\n",
        "                        <td id=\"T_206b1eae_17b2_11eb_afa8_5254004202adrow5_col10\" class=\"data row5 col10\" >0.666802</td>\n",
        "                        <td id=\"T_206b1eae_17b2_11eb_afa8_5254004202adrow5_col11\" class=\"data row5 col11\" >0.578246</td>\n",
        "                        <td id=\"T_206b1eae_17b2_11eb_afa8_5254004202adrow5_col12\" class=\"data row5 col12\" >0.461944</td>\n",
        "                        <td id=\"T_206b1eae_17b2_11eb_afa8_5254004202adrow5_col13\" class=\"data row5 col13\" >0.555668</td>\n",
        "                        <td id=\"T_206b1eae_17b2_11eb_afa8_5254004202adrow5_col14\" class=\"data row5 col14\" >0.297458</td>\n",
        "                        <td id=\"T_206b1eae_17b2_11eb_afa8_5254004202adrow5_col15\" class=\"data row5 col15\" >0.287991</td>\n",
        "                        <td id=\"T_206b1eae_17b2_11eb_afa8_5254004202adrow5_col16\" class=\"data row5 col16\" >0.827343</td>\n",
        "            </tr>\n",
        "            <tr>\n",
        "                        <th id=\"T_206b1eae_17b2_11eb_afa8_5254004202adlevel0_row6\" class=\"row_heading level0 row6\" >Workplace_closing</th>\n",
        "                        <td id=\"T_206b1eae_17b2_11eb_afa8_5254004202adrow6_col0\" class=\"data row6 col0\" >-0.208202</td>\n",
        "                        <td id=\"T_206b1eae_17b2_11eb_afa8_5254004202adrow6_col1\" class=\"data row6 col1\" >-0.057646</td>\n",
        "                        <td id=\"T_206b1eae_17b2_11eb_afa8_5254004202adrow6_col2\" class=\"data row6 col2\" >-0.104913</td>\n",
        "                        <td id=\"T_206b1eae_17b2_11eb_afa8_5254004202adrow6_col3\" class=\"data row6 col3\" >-0.143846</td>\n",
        "                        <td id=\"T_206b1eae_17b2_11eb_afa8_5254004202adrow6_col4\" class=\"data row6 col4\" >0.026527</td>\n",
        "                        <td id=\"T_206b1eae_17b2_11eb_afa8_5254004202adrow6_col5\" class=\"data row6 col5\" >0.713480</td>\n",
        "                        <td id=\"T_206b1eae_17b2_11eb_afa8_5254004202adrow6_col6\" class=\"data row6 col6\" >1.000000</td>\n",
        "                        <td id=\"T_206b1eae_17b2_11eb_afa8_5254004202adrow6_col7\" class=\"data row6 col7\" >0.557486</td>\n",
        "                        <td id=\"T_206b1eae_17b2_11eb_afa8_5254004202adrow6_col8\" class=\"data row6 col8\" >0.623580</td>\n",
        "                        <td id=\"T_206b1eae_17b2_11eb_afa8_5254004202adrow6_col9\" class=\"data row6 col9\" >0.465413</td>\n",
        "                        <td id=\"T_206b1eae_17b2_11eb_afa8_5254004202adrow6_col10\" class=\"data row6 col10\" >0.629324</td>\n",
        "                        <td id=\"T_206b1eae_17b2_11eb_afa8_5254004202adrow6_col11\" class=\"data row6 col11\" >0.440568</td>\n",
        "                        <td id=\"T_206b1eae_17b2_11eb_afa8_5254004202adrow6_col12\" class=\"data row6 col12\" >0.433588</td>\n",
        "                        <td id=\"T_206b1eae_17b2_11eb_afa8_5254004202adrow6_col13\" class=\"data row6 col13\" >0.740739</td>\n",
        "                        <td id=\"T_206b1eae_17b2_11eb_afa8_5254004202adrow6_col14\" class=\"data row6 col14\" >0.378088</td>\n",
        "                        <td id=\"T_206b1eae_17b2_11eb_afa8_5254004202adrow6_col15\" class=\"data row6 col15\" >0.367675</td>\n",
        "                        <td id=\"T_206b1eae_17b2_11eb_afa8_5254004202adrow6_col16\" class=\"data row6 col16\" >0.784943</td>\n",
        "            </tr>\n",
        "            <tr>\n",
        "                        <th id=\"T_206b1eae_17b2_11eb_afa8_5254004202adlevel0_row7\" class=\"row_heading level0 row7\" >Cancel_events</th>\n",
        "                        <td id=\"T_206b1eae_17b2_11eb_afa8_5254004202adrow7_col0\" class=\"data row7 col0\" >-0.074517</td>\n",
        "                        <td id=\"T_206b1eae_17b2_11eb_afa8_5254004202adrow7_col1\" class=\"data row7 col1\" >-0.081011</td>\n",
        "                        <td id=\"T_206b1eae_17b2_11eb_afa8_5254004202adrow7_col2\" class=\"data row7 col2\" >-0.048721</td>\n",
        "                        <td id=\"T_206b1eae_17b2_11eb_afa8_5254004202adrow7_col3\" class=\"data row7 col3\" >-0.012065</td>\n",
        "                        <td id=\"T_206b1eae_17b2_11eb_afa8_5254004202adrow7_col4\" class=\"data row7 col4\" >0.262545</td>\n",
        "                        <td id=\"T_206b1eae_17b2_11eb_afa8_5254004202adrow7_col5\" class=\"data row7 col5\" >0.711384</td>\n",
        "                        <td id=\"T_206b1eae_17b2_11eb_afa8_5254004202adrow7_col6\" class=\"data row7 col6\" >0.557486</td>\n",
        "                        <td id=\"T_206b1eae_17b2_11eb_afa8_5254004202adrow7_col7\" class=\"data row7 col7\" >1.000000</td>\n",
        "                        <td id=\"T_206b1eae_17b2_11eb_afa8_5254004202adrow7_col8\" class=\"data row7 col8\" >0.676382</td>\n",
        "                        <td id=\"T_206b1eae_17b2_11eb_afa8_5254004202adrow7_col9\" class=\"data row7 col9\" >0.583157</td>\n",
        "                        <td id=\"T_206b1eae_17b2_11eb_afa8_5254004202adrow7_col10\" class=\"data row7 col10\" >0.533571</td>\n",
        "                        <td id=\"T_206b1eae_17b2_11eb_afa8_5254004202adrow7_col11\" class=\"data row7 col11\" >0.593507</td>\n",
        "                        <td id=\"T_206b1eae_17b2_11eb_afa8_5254004202adrow7_col12\" class=\"data row7 col12\" >0.631281</td>\n",
        "                        <td id=\"T_206b1eae_17b2_11eb_afa8_5254004202adrow7_col13\" class=\"data row7 col13\" >0.470619</td>\n",
        "                        <td id=\"T_206b1eae_17b2_11eb_afa8_5254004202adrow7_col14\" class=\"data row7 col14\" >0.136480</td>\n",
        "                        <td id=\"T_206b1eae_17b2_11eb_afa8_5254004202adrow7_col15\" class=\"data row7 col15\" >0.216022</td>\n",
        "                        <td id=\"T_206b1eae_17b2_11eb_afa8_5254004202adrow7_col16\" class=\"data row7 col16\" >0.792602</td>\n",
        "            </tr>\n",
        "            <tr>\n",
        "                        <th id=\"T_206b1eae_17b2_11eb_afa8_5254004202adlevel0_row8\" class=\"row_heading level0 row8\" >Gatherings_restrictions</th>\n",
        "                        <td id=\"T_206b1eae_17b2_11eb_afa8_5254004202adrow8_col0\" class=\"data row8 col0\" >-0.123324</td>\n",
        "                        <td id=\"T_206b1eae_17b2_11eb_afa8_5254004202adrow8_col1\" class=\"data row8 col1\" >-0.120226</td>\n",
        "                        <td id=\"T_206b1eae_17b2_11eb_afa8_5254004202adrow8_col2\" class=\"data row8 col2\" >-0.086281</td>\n",
        "                        <td id=\"T_206b1eae_17b2_11eb_afa8_5254004202adrow8_col3\" class=\"data row8 col3\" >-0.036719</td>\n",
        "                        <td id=\"T_206b1eae_17b2_11eb_afa8_5254004202adrow8_col4\" class=\"data row8 col4\" >0.093608</td>\n",
        "                        <td id=\"T_206b1eae_17b2_11eb_afa8_5254004202adrow8_col5\" class=\"data row8 col5\" >0.607638</td>\n",
        "                        <td id=\"T_206b1eae_17b2_11eb_afa8_5254004202adrow8_col6\" class=\"data row8 col6\" >0.623580</td>\n",
        "                        <td id=\"T_206b1eae_17b2_11eb_afa8_5254004202adrow8_col7\" class=\"data row8 col7\" >0.676382</td>\n",
        "                        <td id=\"T_206b1eae_17b2_11eb_afa8_5254004202adrow8_col8\" class=\"data row8 col8\" >1.000000</td>\n",
        "                        <td id=\"T_206b1eae_17b2_11eb_afa8_5254004202adrow8_col9\" class=\"data row8 col9\" >0.719947</td>\n",
        "                        <td id=\"T_206b1eae_17b2_11eb_afa8_5254004202adrow8_col10\" class=\"data row8 col10\" >0.653482</td>\n",
        "                        <td id=\"T_206b1eae_17b2_11eb_afa8_5254004202adrow8_col11\" class=\"data row8 col11\" >0.681982</td>\n",
        "                        <td id=\"T_206b1eae_17b2_11eb_afa8_5254004202adrow8_col12\" class=\"data row8 col12\" >0.621575</td>\n",
        "                        <td id=\"T_206b1eae_17b2_11eb_afa8_5254004202adrow8_col13\" class=\"data row8 col13\" >0.569692</td>\n",
        "                        <td id=\"T_206b1eae_17b2_11eb_afa8_5254004202adrow8_col14\" class=\"data row8 col14\" >0.210293</td>\n",
        "                        <td id=\"T_206b1eae_17b2_11eb_afa8_5254004202adrow8_col15\" class=\"data row8 col15\" >0.150363</td>\n",
        "                        <td id=\"T_206b1eae_17b2_11eb_afa8_5254004202adrow8_col16\" class=\"data row8 col16\" >0.841867</td>\n",
        "            </tr>\n",
        "            <tr>\n",
        "                        <th id=\"T_206b1eae_17b2_11eb_afa8_5254004202adlevel0_row9\" class=\"row_heading level0 row9\" >Transport_closing</th>\n",
        "                        <td id=\"T_206b1eae_17b2_11eb_afa8_5254004202adrow9_col0\" class=\"data row9 col0\" >-0.102269</td>\n",
        "                        <td id=\"T_206b1eae_17b2_11eb_afa8_5254004202adrow9_col1\" class=\"data row9 col1\" >-0.103806</td>\n",
        "                        <td id=\"T_206b1eae_17b2_11eb_afa8_5254004202adrow9_col2\" class=\"data row9 col2\" >-0.080009</td>\n",
        "                        <td id=\"T_206b1eae_17b2_11eb_afa8_5254004202adrow9_col3\" class=\"data row9 col3\" >-0.043709</td>\n",
        "                        <td id=\"T_206b1eae_17b2_11eb_afa8_5254004202adrow9_col4\" class=\"data row9 col4\" >0.185537</td>\n",
        "                        <td id=\"T_206b1eae_17b2_11eb_afa8_5254004202adrow9_col5\" class=\"data row9 col5\" >0.579603</td>\n",
        "                        <td id=\"T_206b1eae_17b2_11eb_afa8_5254004202adrow9_col6\" class=\"data row9 col6\" >0.465413</td>\n",
        "                        <td id=\"T_206b1eae_17b2_11eb_afa8_5254004202adrow9_col7\" class=\"data row9 col7\" >0.583157</td>\n",
        "                        <td id=\"T_206b1eae_17b2_11eb_afa8_5254004202adrow9_col8\" class=\"data row9 col8\" >0.719947</td>\n",
        "                        <td id=\"T_206b1eae_17b2_11eb_afa8_5254004202adrow9_col9\" class=\"data row9 col9\" >1.000000</td>\n",
        "                        <td id=\"T_206b1eae_17b2_11eb_afa8_5254004202adrow9_col10\" class=\"data row9 col10\" >0.608978</td>\n",
        "                        <td id=\"T_206b1eae_17b2_11eb_afa8_5254004202adrow9_col11\" class=\"data row9 col11\" >0.664730</td>\n",
        "                        <td id=\"T_206b1eae_17b2_11eb_afa8_5254004202adrow9_col12\" class=\"data row9 col12\" >0.594150</td>\n",
        "                        <td id=\"T_206b1eae_17b2_11eb_afa8_5254004202adrow9_col13\" class=\"data row9 col13\" >0.301113</td>\n",
        "                        <td id=\"T_206b1eae_17b2_11eb_afa8_5254004202adrow9_col14\" class=\"data row9 col14\" >-0.068495</td>\n",
        "                        <td id=\"T_206b1eae_17b2_11eb_afa8_5254004202adrow9_col15\" class=\"data row9 col15\" >-0.039077</td>\n",
        "                        <td id=\"T_206b1eae_17b2_11eb_afa8_5254004202adrow9_col16\" class=\"data row9 col16\" >0.786486</td>\n",
        "            </tr>\n",
        "            <tr>\n",
        "                        <th id=\"T_206b1eae_17b2_11eb_afa8_5254004202adlevel0_row10\" class=\"row_heading level0 row10\" >Stay_home_restrictions</th>\n",
        "                        <td id=\"T_206b1eae_17b2_11eb_afa8_5254004202adrow10_col0\" class=\"data row10 col0\" >-0.159584</td>\n",
        "                        <td id=\"T_206b1eae_17b2_11eb_afa8_5254004202adrow10_col1\" class=\"data row10 col1\" >0.232452</td>\n",
        "                        <td id=\"T_206b1eae_17b2_11eb_afa8_5254004202adrow10_col2\" class=\"data row10 col2\" >0.228924</td>\n",
        "                        <td id=\"T_206b1eae_17b2_11eb_afa8_5254004202adrow10_col3\" class=\"data row10 col3\" >0.180068</td>\n",
        "                        <td id=\"T_206b1eae_17b2_11eb_afa8_5254004202adrow10_col4\" class=\"data row10 col4\" >0.183971</td>\n",
        "                        <td id=\"T_206b1eae_17b2_11eb_afa8_5254004202adrow10_col5\" class=\"data row10 col5\" >0.666802</td>\n",
        "                        <td id=\"T_206b1eae_17b2_11eb_afa8_5254004202adrow10_col6\" class=\"data row10 col6\" >0.629324</td>\n",
        "                        <td id=\"T_206b1eae_17b2_11eb_afa8_5254004202adrow10_col7\" class=\"data row10 col7\" >0.533571</td>\n",
        "                        <td id=\"T_206b1eae_17b2_11eb_afa8_5254004202adrow10_col8\" class=\"data row10 col8\" >0.653482</td>\n",
        "                        <td id=\"T_206b1eae_17b2_11eb_afa8_5254004202adrow10_col9\" class=\"data row10 col9\" >0.608978</td>\n",
        "                        <td id=\"T_206b1eae_17b2_11eb_afa8_5254004202adrow10_col10\" class=\"data row10 col10\" >1.000000</td>\n",
        "                        <td id=\"T_206b1eae_17b2_11eb_afa8_5254004202adrow10_col11\" class=\"data row10 col11\" >0.753332</td>\n",
        "                        <td id=\"T_206b1eae_17b2_11eb_afa8_5254004202adrow10_col12\" class=\"data row10 col12\" >0.518519</td>\n",
        "                        <td id=\"T_206b1eae_17b2_11eb_afa8_5254004202adrow10_col13\" class=\"data row10 col13\" >0.341796</td>\n",
        "                        <td id=\"T_206b1eae_17b2_11eb_afa8_5254004202adrow10_col14\" class=\"data row10 col14\" >0.188059</td>\n",
        "                        <td id=\"T_206b1eae_17b2_11eb_afa8_5254004202adrow10_col15\" class=\"data row10 col15\" >0.268855</td>\n",
        "                        <td id=\"T_206b1eae_17b2_11eb_afa8_5254004202adrow10_col16\" class=\"data row10 col16\" >0.802874</td>\n",
        "            </tr>\n",
        "            <tr>\n",
        "                        <th id=\"T_206b1eae_17b2_11eb_afa8_5254004202adlevel0_row11\" class=\"row_heading level0 row11\" >Internal_movement_restrictions</th>\n",
        "                        <td id=\"T_206b1eae_17b2_11eb_afa8_5254004202adrow11_col0\" class=\"data row11 col0\" >-0.221368</td>\n",
        "                        <td id=\"T_206b1eae_17b2_11eb_afa8_5254004202adrow11_col1\" class=\"data row11 col1\" >0.136631</td>\n",
        "                        <td id=\"T_206b1eae_17b2_11eb_afa8_5254004202adrow11_col2\" class=\"data row11 col2\" >0.161728</td>\n",
        "                        <td id=\"T_206b1eae_17b2_11eb_afa8_5254004202adrow11_col3\" class=\"data row11 col3\" >0.162582</td>\n",
        "                        <td id=\"T_206b1eae_17b2_11eb_afa8_5254004202adrow11_col4\" class=\"data row11 col4\" >0.274283</td>\n",
        "                        <td id=\"T_206b1eae_17b2_11eb_afa8_5254004202adrow11_col5\" class=\"data row11 col5\" >0.578246</td>\n",
        "                        <td id=\"T_206b1eae_17b2_11eb_afa8_5254004202adrow11_col6\" class=\"data row11 col6\" >0.440568</td>\n",
        "                        <td id=\"T_206b1eae_17b2_11eb_afa8_5254004202adrow11_col7\" class=\"data row11 col7\" >0.593507</td>\n",
        "                        <td id=\"T_206b1eae_17b2_11eb_afa8_5254004202adrow11_col8\" class=\"data row11 col8\" >0.681982</td>\n",
        "                        <td id=\"T_206b1eae_17b2_11eb_afa8_5254004202adrow11_col9\" class=\"data row11 col9\" >0.664730</td>\n",
        "                        <td id=\"T_206b1eae_17b2_11eb_afa8_5254004202adrow11_col10\" class=\"data row11 col10\" >0.753332</td>\n",
        "                        <td id=\"T_206b1eae_17b2_11eb_afa8_5254004202adrow11_col11\" class=\"data row11 col11\" >1.000000</td>\n",
        "                        <td id=\"T_206b1eae_17b2_11eb_afa8_5254004202adrow11_col12\" class=\"data row11 col12\" >0.450671</td>\n",
        "                        <td id=\"T_206b1eae_17b2_11eb_afa8_5254004202adrow11_col13\" class=\"data row11 col13\" >0.199701</td>\n",
        "                        <td id=\"T_206b1eae_17b2_11eb_afa8_5254004202adrow11_col14\" class=\"data row11 col14\" >0.192605</td>\n",
        "                        <td id=\"T_206b1eae_17b2_11eb_afa8_5254004202adrow11_col15\" class=\"data row11 col15\" >0.100181</td>\n",
        "                        <td id=\"T_206b1eae_17b2_11eb_afa8_5254004202adrow11_col16\" class=\"data row11 col16\" >0.723235</td>\n",
        "            </tr>\n",
        "            <tr>\n",
        "                        <th id=\"T_206b1eae_17b2_11eb_afa8_5254004202adlevel0_row12\" class=\"row_heading level0 row12\" >International_movement_restrictions</th>\n",
        "                        <td id=\"T_206b1eae_17b2_11eb_afa8_5254004202adrow12_col0\" class=\"data row12 col0\" >-0.063204</td>\n",
        "                        <td id=\"T_206b1eae_17b2_11eb_afa8_5254004202adrow12_col1\" class=\"data row12 col1\" >0.125518</td>\n",
        "                        <td id=\"T_206b1eae_17b2_11eb_afa8_5254004202adrow12_col2\" class=\"data row12 col2\" >0.180011</td>\n",
        "                        <td id=\"T_206b1eae_17b2_11eb_afa8_5254004202adrow12_col3\" class=\"data row12 col3\" >0.101065</td>\n",
        "                        <td id=\"T_206b1eae_17b2_11eb_afa8_5254004202adrow12_col4\" class=\"data row12 col4\" >0.049862</td>\n",
        "                        <td id=\"T_206b1eae_17b2_11eb_afa8_5254004202adrow12_col5\" class=\"data row12 col5\" >0.461944</td>\n",
        "                        <td id=\"T_206b1eae_17b2_11eb_afa8_5254004202adrow12_col6\" class=\"data row12 col6\" >0.433588</td>\n",
        "                        <td id=\"T_206b1eae_17b2_11eb_afa8_5254004202adrow12_col7\" class=\"data row12 col7\" >0.631281</td>\n",
        "                        <td id=\"T_206b1eae_17b2_11eb_afa8_5254004202adrow12_col8\" class=\"data row12 col8\" >0.621575</td>\n",
        "                        <td id=\"T_206b1eae_17b2_11eb_afa8_5254004202adrow12_col9\" class=\"data row12 col9\" >0.594150</td>\n",
        "                        <td id=\"T_206b1eae_17b2_11eb_afa8_5254004202adrow12_col10\" class=\"data row12 col10\" >0.518519</td>\n",
        "                        <td id=\"T_206b1eae_17b2_11eb_afa8_5254004202adrow12_col11\" class=\"data row12 col11\" >0.450671</td>\n",
        "                        <td id=\"T_206b1eae_17b2_11eb_afa8_5254004202adrow12_col12\" class=\"data row12 col12\" >1.000000</td>\n",
        "                        <td id=\"T_206b1eae_17b2_11eb_afa8_5254004202adrow12_col13\" class=\"data row12 col13\" >0.434519</td>\n",
        "                        <td id=\"T_206b1eae_17b2_11eb_afa8_5254004202adrow12_col14\" class=\"data row12 col14\" >0.084418</td>\n",
        "                        <td id=\"T_206b1eae_17b2_11eb_afa8_5254004202adrow12_col15\" class=\"data row12 col15\" >0.182324</td>\n",
        "                        <td id=\"T_206b1eae_17b2_11eb_afa8_5254004202adrow12_col16\" class=\"data row12 col16\" >0.717459</td>\n",
        "            </tr>\n",
        "            <tr>\n",
        "                        <th id=\"T_206b1eae_17b2_11eb_afa8_5254004202adlevel0_row13\" class=\"row_heading level0 row13\" >Information_campaigns</th>\n",
        "                        <td id=\"T_206b1eae_17b2_11eb_afa8_5254004202adrow13_col0\" class=\"data row13 col0\" >-0.175577</td>\n",
        "                        <td id=\"T_206b1eae_17b2_11eb_afa8_5254004202adrow13_col1\" class=\"data row13 col1\" >-0.314730</td>\n",
        "                        <td id=\"T_206b1eae_17b2_11eb_afa8_5254004202adrow13_col2\" class=\"data row13 col2\" >-0.343068</td>\n",
        "                        <td id=\"T_206b1eae_17b2_11eb_afa8_5254004202adrow13_col3\" class=\"data row13 col3\" >-0.418205</td>\n",
        "                        <td id=\"T_206b1eae_17b2_11eb_afa8_5254004202adrow13_col4\" class=\"data row13 col4\" >-0.025050</td>\n",
        "                        <td id=\"T_206b1eae_17b2_11eb_afa8_5254004202adrow13_col5\" class=\"data row13 col5\" >0.555668</td>\n",
        "                        <td id=\"T_206b1eae_17b2_11eb_afa8_5254004202adrow13_col6\" class=\"data row13 col6\" >0.740739</td>\n",
        "                        <td id=\"T_206b1eae_17b2_11eb_afa8_5254004202adrow13_col7\" class=\"data row13 col7\" >0.470619</td>\n",
        "                        <td id=\"T_206b1eae_17b2_11eb_afa8_5254004202adrow13_col8\" class=\"data row13 col8\" >0.569692</td>\n",
        "                        <td id=\"T_206b1eae_17b2_11eb_afa8_5254004202adrow13_col9\" class=\"data row13 col9\" >0.301113</td>\n",
        "                        <td id=\"T_206b1eae_17b2_11eb_afa8_5254004202adrow13_col10\" class=\"data row13 col10\" >0.341796</td>\n",
        "                        <td id=\"T_206b1eae_17b2_11eb_afa8_5254004202adrow13_col11\" class=\"data row13 col11\" >0.199701</td>\n",
        "                        <td id=\"T_206b1eae_17b2_11eb_afa8_5254004202adrow13_col12\" class=\"data row13 col12\" >0.434519</td>\n",
        "                        <td id=\"T_206b1eae_17b2_11eb_afa8_5254004202adrow13_col13\" class=\"data row13 col13\" >1.000000</td>\n",
        "                        <td id=\"T_206b1eae_17b2_11eb_afa8_5254004202adrow13_col14\" class=\"data row13 col14\" >0.516368</td>\n",
        "                        <td id=\"T_206b1eae_17b2_11eb_afa8_5254004202adrow13_col15\" class=\"data row13 col15\" >0.545792</td>\n",
        "                        <td id=\"T_206b1eae_17b2_11eb_afa8_5254004202adrow13_col16\" class=\"data row13 col16\" >0.632336</td>\n",
        "            </tr>\n",
        "            <tr>\n",
        "                        <th id=\"T_206b1eae_17b2_11eb_afa8_5254004202adlevel0_row14\" class=\"row_heading level0 row14\" >Testing_policy</th>\n",
        "                        <td id=\"T_206b1eae_17b2_11eb_afa8_5254004202adrow14_col0\" class=\"data row14 col0\" >-0.330478</td>\n",
        "                        <td id=\"T_206b1eae_17b2_11eb_afa8_5254004202adrow14_col1\" class=\"data row14 col1\" >-0.187385</td>\n",
        "                        <td id=\"T_206b1eae_17b2_11eb_afa8_5254004202adrow14_col2\" class=\"data row14 col2\" >-0.172341</td>\n",
        "                        <td id=\"T_206b1eae_17b2_11eb_afa8_5254004202adrow14_col3\" class=\"data row14 col3\" >-0.414031</td>\n",
        "                        <td id=\"T_206b1eae_17b2_11eb_afa8_5254004202adrow14_col4\" class=\"data row14 col4\" >-0.056484</td>\n",
        "                        <td id=\"T_206b1eae_17b2_11eb_afa8_5254004202adrow14_col5\" class=\"data row14 col5\" >0.297458</td>\n",
        "                        <td id=\"T_206b1eae_17b2_11eb_afa8_5254004202adrow14_col6\" class=\"data row14 col6\" >0.378088</td>\n",
        "                        <td id=\"T_206b1eae_17b2_11eb_afa8_5254004202adrow14_col7\" class=\"data row14 col7\" >0.136480</td>\n",
        "                        <td id=\"T_206b1eae_17b2_11eb_afa8_5254004202adrow14_col8\" class=\"data row14 col8\" >0.210293</td>\n",
        "                        <td id=\"T_206b1eae_17b2_11eb_afa8_5254004202adrow14_col9\" class=\"data row14 col9\" >-0.068495</td>\n",
        "                        <td id=\"T_206b1eae_17b2_11eb_afa8_5254004202adrow14_col10\" class=\"data row14 col10\" >0.188059</td>\n",
        "                        <td id=\"T_206b1eae_17b2_11eb_afa8_5254004202adrow14_col11\" class=\"data row14 col11\" >0.192605</td>\n",
        "                        <td id=\"T_206b1eae_17b2_11eb_afa8_5254004202adrow14_col12\" class=\"data row14 col12\" >0.084418</td>\n",
        "                        <td id=\"T_206b1eae_17b2_11eb_afa8_5254004202adrow14_col13\" class=\"data row14 col13\" >0.516368</td>\n",
        "                        <td id=\"T_206b1eae_17b2_11eb_afa8_5254004202adrow14_col14\" class=\"data row14 col14\" >1.000000</td>\n",
        "                        <td id=\"T_206b1eae_17b2_11eb_afa8_5254004202adrow14_col15\" class=\"data row14 col15\" >0.542921</td>\n",
        "                        <td id=\"T_206b1eae_17b2_11eb_afa8_5254004202adrow14_col16\" class=\"data row14 col16\" >0.163326</td>\n",
        "            </tr>\n",
        "            <tr>\n",
        "                        <th id=\"T_206b1eae_17b2_11eb_afa8_5254004202adlevel0_row15\" class=\"row_heading level0 row15\" >Contact_tracing</th>\n",
        "                        <td id=\"T_206b1eae_17b2_11eb_afa8_5254004202adrow15_col0\" class=\"data row15 col0\" >-0.281420</td>\n",
        "                        <td id=\"T_206b1eae_17b2_11eb_afa8_5254004202adrow15_col1\" class=\"data row15 col1\" >0.022139</td>\n",
        "                        <td id=\"T_206b1eae_17b2_11eb_afa8_5254004202adrow15_col2\" class=\"data row15 col2\" >-0.019664</td>\n",
        "                        <td id=\"T_206b1eae_17b2_11eb_afa8_5254004202adrow15_col3\" class=\"data row15 col3\" >-0.314231</td>\n",
        "                        <td id=\"T_206b1eae_17b2_11eb_afa8_5254004202adrow15_col4\" class=\"data row15 col4\" >0.096720</td>\n",
        "                        <td id=\"T_206b1eae_17b2_11eb_afa8_5254004202adrow15_col5\" class=\"data row15 col5\" >0.287991</td>\n",
        "                        <td id=\"T_206b1eae_17b2_11eb_afa8_5254004202adrow15_col6\" class=\"data row15 col6\" >0.367675</td>\n",
        "                        <td id=\"T_206b1eae_17b2_11eb_afa8_5254004202adrow15_col7\" class=\"data row15 col7\" >0.216022</td>\n",
        "                        <td id=\"T_206b1eae_17b2_11eb_afa8_5254004202adrow15_col8\" class=\"data row15 col8\" >0.150363</td>\n",
        "                        <td id=\"T_206b1eae_17b2_11eb_afa8_5254004202adrow15_col9\" class=\"data row15 col9\" >-0.039077</td>\n",
        "                        <td id=\"T_206b1eae_17b2_11eb_afa8_5254004202adrow15_col10\" class=\"data row15 col10\" >0.268855</td>\n",
        "                        <td id=\"T_206b1eae_17b2_11eb_afa8_5254004202adrow15_col11\" class=\"data row15 col11\" >0.100181</td>\n",
        "                        <td id=\"T_206b1eae_17b2_11eb_afa8_5254004202adrow15_col12\" class=\"data row15 col12\" >0.182324</td>\n",
        "                        <td id=\"T_206b1eae_17b2_11eb_afa8_5254004202adrow15_col13\" class=\"data row15 col13\" >0.545792</td>\n",
        "                        <td id=\"T_206b1eae_17b2_11eb_afa8_5254004202adrow15_col14\" class=\"data row15 col14\" >0.542921</td>\n",
        "                        <td id=\"T_206b1eae_17b2_11eb_afa8_5254004202adrow15_col15\" class=\"data row15 col15\" >1.000000</td>\n",
        "                        <td id=\"T_206b1eae_17b2_11eb_afa8_5254004202adrow15_col16\" class=\"data row15 col16\" >0.279908</td>\n",
        "            </tr>\n",
        "            <tr>\n",
        "                        <th id=\"T_206b1eae_17b2_11eb_afa8_5254004202adlevel0_row16\" class=\"row_heading level0 row16\" >Stringency_index</th>\n",
        "                        <td id=\"T_206b1eae_17b2_11eb_afa8_5254004202adrow16_col0\" class=\"data row16 col0\" >-0.157930</td>\n",
        "                        <td id=\"T_206b1eae_17b2_11eb_afa8_5254004202adrow16_col1\" class=\"data row16 col1\" >-0.006858</td>\n",
        "                        <td id=\"T_206b1eae_17b2_11eb_afa8_5254004202adrow16_col2\" class=\"data row16 col2\" >-0.022875</td>\n",
        "                        <td id=\"T_206b1eae_17b2_11eb_afa8_5254004202adrow16_col3\" class=\"data row16 col3\" >-0.008310</td>\n",
        "                        <td id=\"T_206b1eae_17b2_11eb_afa8_5254004202adrow16_col4\" class=\"data row16 col4\" >0.224773</td>\n",
        "                        <td id=\"T_206b1eae_17b2_11eb_afa8_5254004202adrow16_col5\" class=\"data row16 col5\" >0.827343</td>\n",
        "                        <td id=\"T_206b1eae_17b2_11eb_afa8_5254004202adrow16_col6\" class=\"data row16 col6\" >0.784943</td>\n",
        "                        <td id=\"T_206b1eae_17b2_11eb_afa8_5254004202adrow16_col7\" class=\"data row16 col7\" >0.792602</td>\n",
        "                        <td id=\"T_206b1eae_17b2_11eb_afa8_5254004202adrow16_col8\" class=\"data row16 col8\" >0.841867</td>\n",
        "                        <td id=\"T_206b1eae_17b2_11eb_afa8_5254004202adrow16_col9\" class=\"data row16 col9\" >0.786486</td>\n",
        "                        <td id=\"T_206b1eae_17b2_11eb_afa8_5254004202adrow16_col10\" class=\"data row16 col10\" >0.802874</td>\n",
        "                        <td id=\"T_206b1eae_17b2_11eb_afa8_5254004202adrow16_col11\" class=\"data row16 col11\" >0.723235</td>\n",
        "                        <td id=\"T_206b1eae_17b2_11eb_afa8_5254004202adrow16_col12\" class=\"data row16 col12\" >0.717459</td>\n",
        "                        <td id=\"T_206b1eae_17b2_11eb_afa8_5254004202adrow16_col13\" class=\"data row16 col13\" >0.632336</td>\n",
        "                        <td id=\"T_206b1eae_17b2_11eb_afa8_5254004202adrow16_col14\" class=\"data row16 col14\" >0.163326</td>\n",
        "                        <td id=\"T_206b1eae_17b2_11eb_afa8_5254004202adrow16_col15\" class=\"data row16 col15\" >0.279908</td>\n",
        "                        <td id=\"T_206b1eae_17b2_11eb_afa8_5254004202adrow16_col16\" class=\"data row16 col16\" >1.000000</td>\n",
        "            </tr>\n",
        "    </tbody></table>"
       ],
       "output_type": "pyout",
       "prompt_number": 21,
       "text": [
        "<pandas.io.formats.style.Styler at 0x7f8d33429bb0>"
       ]
      }
     ],
     "prompt_number": 21
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "# Scatter plot of Stringency index and Rt\n",
      "df = track_df.copy()\n",
      "sns.scatterplot(data=df, x=\"Stringency_index\", y=\"Rt\", hue=\"Country\", legend=\"brief\", marker=\"+\")\n",
      "bbox_to_anchor=(1.02, 0)\n",
      "bbox_loc=\"lower left\"\n",
      "plt.legend(bbox_to_anchor=bbox_to_anchor, loc=bbox_loc, borderaxespad=0)\n",
      "plt.title(\"Relationship of Stringency index and reproduction number\")\n",
      "plt.ylabel(\"Reproduction number\")\n",
      "plt.xlabel(\"Stringency index\")\n",
      "plt.show()"
     ],
     "language": "python",
     "metadata": {},
     "outputs": [
      {
       "output_type": "display_data",
       "png": "iVBORw0KGgoAAAANSUhEUgAAAhUAAAFJCAYAAAAsQN9vAAAAOXRFWHRTb2Z0d2FyZQBNYXRwbG90bGliIHZlcnNpb24zLjMuMiwgaHR0cHM6Ly9tYXRwbG90bGliLm9yZy8vihELAAAACXBIWXMAAAsTAAALEwEAmpwYAABUsklEQVR4nO3debyc4/3/8ddbgkSsIVVbRWtJrakEoUostVVLS2trJajQH6VVtX3bopvuSrVK7C1FraEtTRF7kBCxkxJiaQQRQoIkn98f1zU595mcZU5m5qzv5+NxHuee696umTlz7s9c13VfH0UEZmZmZtVaoqMrYGZmZt2DgwozMzOrCQcVZmZmVhMOKszMzKwmHFSYmZlZTTioMDMzs5pwUGFmZmY14aDCzMzMasJBhZmZmdWEgwozMzOrCQcVZmbWKUmaL2mSpEclPSxpmxod9wJJG+blqZJWqcVxDeTcH2Zm1hlJmh0Ry+blXYFTImL7sm16R8S8Ks4xFRgaEW9UVVkDoHdHV8DMzLq+ucf96kDg58AngJeAU/r87oQraniK5YGZAJKGAz/JjwcB60u6AVgL6AOcFRHnS/oS8OO8f19gqYhYR9I44PiImFDD+hkOKszMrEo5oBgNLJOL1gZGzz3uV1QZWPSVNIkUKKwG7FhYtzmwcUS8kB8fGhFvSeoLPCTp2ogYA4wBkHQ1cGcVdbEKeEyFmZlV6+c0BBQly+TyasyJiMERMQjYDbhMkvK6BwsBBcAxkh4FxpNaLNYrrZB0Qj7WH6usj7XCLRVmZlatT7SxvM0i4v48oHJALnqvtC53h+wMbB0R7+fujT553c7AV4HtalUXa55bKszMrFovtbG8zSQNAnoBbzaxegVgZg4oBgHD8j5rA38EvhoRc2pVF2ueWyrMzKxap9B4TAXA+7m8GqUxFQACRkTE/IYekIVuAY6U9BTwDKkLBGAksDJwQ97n1YjYo8o6WQt8S6mZmVWtHe7+sC7AQYWZmZnVhMdUmJmZWU04qDAzM7OacFBhZmZmNeGgwszMzGrCQYWZmZnVhIMKMzPrlAqpz5/I6c+/J6km1y1JP86zbba0zZcknVSL8zVz/JGSZuTn+LSk79bpHOc0s252/r26pGtqcj7fUmpmZp1RWerzjwFXAPdGxKkdW7PakDSSlHb9aEkrkybu+kxETKvHOZpYt/D1rRW3VJiZWdXmnviFA+ee+IWpc0/8woL8+8BaHj8iXgdGAUcr6SPpYkmPSXpE0g6w8Jv5DZLGSpoq6WhJx+Vtxkvqn7e7RNK+eXmqpNMlPZyPN6hwrHPy8qqSrs8tJo9K2iaX3yBpYm5NGVWqr6TZkn6Wtx0vadVWnt+bwBRSNlYkfV3Sg7kV4zxJvQrHPTOf7zZJA3L5OElD8/IqkqYWDr9WXv+cpEUCMkkDJT2el3tJ+o2kxyVNlvTttrxPDirMzKwqOYAYTUp5Lkqpz2sfWDxPyv/xMeCoVBSbAAcAl0rqkzfdGPgKsAXwM+D9iPgMcD9wcDOHfyMiNgfOBY5vYv3ZwJ0RsRkp7foTufzQiBgCDCVlSl05l/cDxuft7wIOb+m5SfoEKQnaZEmfBvYDPhsRg4H5wEGF406IiI1IqdwrabXZEtgH2BT4ain4aMYoYCAwOCI2BS6v4PgLOagwM7Nq1Sv1eUu2Bf4KEBFPAy8C6+d1d0TEuxExA5gF3JTLHyNdMJtyXf49sZltdiQFHETE/IiYlcubS7n+IXBzK8cE2E/SZFIrxZ8iYi6wEzAEeCjnPtkJ+GTefgFwVV7+K+l1aM3YiHgzJ1W7rpV9dgbOi4h5+bm+VcHxF3JCMTMzq1bdU58DSPok6Vv7661s+kFheUHh8QKav+6Vtpnfwjbl9RlOMynXgY+iYdBiS8e8Ko+pGAr8W9IYUmvPpRFxcgXVKJ1jHg0NBX2a2aa5xzXjlgozM6tWe6Q+HwD8GTgnX6zvJncJSFqfFMA8U6vzNeE24Fv5fL0krUAzKdcXR0RMAP4CHJvPtW8enIqk/jmNO6Tr9r55+UDgnrw8ldS6QWF9yefzMfoCewP3tlCVscARknqXzt2W5+GgwszMqnUKKdV5Uc1Sn0t6AvgP8G/g9LzuT8ASkh4jdQeMjIgPmjlOLRwL7JDPNxHYkJRyvbdSyvVf0JByfXH9EjgEmAb8gNRyMZl0oV8tb/MesGUeWLkj8ONc/hvgW5IeAVYpO+6DwLXAZODaHMA05wJSMDg5d+u0aVyMbyk1M7Oq5UGZjVOf//IfTn1eY/W4DbSWHFSYmZl1EQ4qzMzMrEfwmAozMzOrCQcVZmZmVhMOKszMzKwmHFSYmZlZTTioMDOzTqmUmrvCbYeXkny1sl2rKc9t8XmabjMz6w6GA7OB+1raKCJ+1C616aF8S6mZmVXt2V8PWWTyq/W/P7Gqya+ampNB0hdJs00uBbxJmqq7L2k2y/nADNLsl5cB60TEAkn9gKdJSblGAzdHxDWSfgR8Me9/H3BE+KJYFXd/mJlZVXJAsUjq81xea/cAw3Iq8yuBEyJiKikvyJkRMTgi7gQmAdvnffYEbo2Ij8qOdU5EbBERG5MCiz3rUN8exUGFmZlVqz1Tn68J3JpzcHwf2KiZ7a4C9svL+9OQLrxoB0kP5GPt2MKxrEIOKszMrFrtkvo8+wOphWET4AgWTfNdMgbYLWfZHALcXlwpqQ8pKdm++VijWziWVchBhZmZVavuqc8LVgBeycsjCuXvAsuVHkTEbOAh4CzSGIr5ZccpBRBvSFqWRdOF22JwUGFmZtWqV+rzZSS9XPg5DjgN+LukicAbhW1vAr6cU6V/LpddBXydJro+IuJtUuvE48CtpADEquS7P8zMrGr1uPvDuh4HFWZmZlYT7v4wMzOzmnBQYWZmZjXhoMLMzMxqwkGFmZmZ1YSDCjMzM6sJBxVmZtYpSQpJvy08Pl7SaXn5SEkH1/BcLWY3tco4qDAzs87qA+ArklYpXxERf46Iy6o9gaTe+XjbVHssg94dXQEzM+v6xp276ORXw79V9eRX84Dzge8C/1dckVssZkfEbyRtAVwILADGArtHxMaSegG/AIYDSwN/jIjzJA0HfgLMBAYB65fSrOcpu28EVgKWBH4QETdW+Tx6DLdUmJlZVXJAsUjq81xerT8CB0laoYVtLgaOiIjBQDHHx2HArIjYAtgCOFzSOnnd5sCxEbF+2bHmAl+OiM2BHYDfSlINnkeP4KDCzMyqVbfU5xHxDnAZcExT6yWtCCwXEffnomLryC7AwZImAQ8AKwPr5XUPRsQLTR0S+LmkycB/gDWAVat8Gj2Guz/MzKxa9U59/nvgYVKLRFsI+HZE3NqoMHV/vNfMPgcBA4AhEfGRpKk4JXrFekRLhaRxkr65mPt+QtLs3DdXF5JOk/TXFtY/kT8EtT7vqpLukvRucYR1jc9xkKR/1+PY7U3S5yQ9U8X+IWndWtapliQNzHXsEl82JE2VtHMdjvtnST+s9XHbU2v/U+qgrqnPI+It4GpSd0b5ureBdyVtlYv2L6y+FfiWpCUBJK0vqV8rp1sBeD0HFDuQunKsQl0mqMj/QObkC/z/JF2SB9TU4zwL/1FFxEsRsWxEzG9pv3qKiI0iYlwdDj2KlDp4+Yj4XvlKSWtKulbSG5JmSXpc0si8rqILUERcHhG71KHu7S4i7o6IDTq6HlY7kkZKuqdYFhFHRsRPOqpOXVS9Up8X/RZY5C6Q7DBgdO7m6AfMyuUXAE8CD0t6HDiP1lvoLweGSnoMOBh4usp69yhd4htJwRcj4j+SPk6KQE+mbESwtcnawJPRfKravwCP5u0+ADYBPl7pwSX1joh5VdfSOp1av7f+W+m8Knlvhn9r4hXjzh0CNb77IyKWLSxPpzBuIyJOK2z6RERsmut7EjAhb7OAFNiUBzfj8s8i54qIN4Ctq6l3jxYRXeIHmArsXHj8K+AfhcfDgPuAt0kXwuGFdeOAb+blTwG3A2+SvqVfDqyY1/2FdEvSHGA2cAIwEAigd95mdWAM8BYwBTi8cJ7TSE10lwHvAk8AQwvrTwReyeueAXaqcL+Fzz1vew1wVd72YWCzFl63bYCHSJH7Q8A2ufwS4CPgw/xcd25i39nA4GaO+1J+XWbnn62BkcC9wJn59f1pLrunsF8ARwLP5ffqj4Dyul6kbyNvAC8AR5e99iuQbht7Lb+OPwV65XUjgXuA35BuE3uBdFtZ6bz9Sf2xr+b1N+Tyx0nBamm7JfP5P9PEcx4OvFz2vhwPTM6v71VAn8L67+e6vgocmp/Lunnd0rmuLwHTgT8DffO6fwK/LRznSuCiZt6HLYH782v5GnAOsFQbXu/f5Of7PHBU8fVu5jN4Yn6+H5C+lLT2uTsDeBB4h3SbXv+8bmA+12H5NbiL1HL6A+BF4HXS52GFwvG+kde9SfoyMZWGz8UlwE9beK/WAq4DZuT9zwE+TRrpP5/0N/x2M8c6nPRZf4v02V+9kte3idfvNFr+nC/8+yivR+n5kP4nvZ7f672BPYBnc91OKTtXs/8nSP/Hrs2vxwvAMU3s+9f8vn2zvf7PL+4PsB8wifR5/gcwoKPr1FN/OrwCFVe08T+QNYHHgLPy4zXyP4o98j+mz+fHA/L6cTQEFevm9UuTBuPcBfy+qfPkxwNpfGG7C/gTaeDO4Pyh3DGvOy3/k9qD9A/7DGB8XrcBMK30Dykf91Ot7dfEcz+NFAzsS7oAHp//KSzZxGvWn3QB/QbpAnBAfrxyXn8JhX+eTez/H1KQsD/wibJ1jV6XXDaSdF/5t/P5+tJ0UHEzsCLpG80MYLe87khSU+WapHvE/1P22l9Par7sB3yMdLE6onDuj0gXgF7At0gX89IF9B+kf7Cle8+3z+UnAFcV6rcX8Fgzr8dwFg0qHiT9g+4PPAUcmdftRgoWNs71vYLGQcWZpAtUf2A54CbgjLzu46QLx46kQWPPk0a3N1WnIaQLe+/8njwFfKcNr/fTpAtuf+CO8ve0ic/gpLx9Xyr73L1SeA2uBf5a9vdzWV7XlxR4TQE+CSxLCgL+krffkHTh34702f0d6W+t1aAi/z08ml/zfqTP7raFv5t7yp7nwmPl9+AN0u2HSwN/AO6q5PVt4vU7jZY/560FFfOAH5H+fg/P57qC9PezEenL0Dqt/Z/I79XEfKyl8uv9PLBr2b575237dvT/f/90nZ8Or0DFFU3/0GaTou4AbqOhheHE0j+fwva3AiPy8jiaibbzB+eRsvM0GVSQ/pnOp/APPv9juCQvnwb8p7BuQ2BOXl6XdKHYmbIAoKX9yuuUty3+I1qC9K3lc008t2+Qbpsqlt0PjMzLC/9pNfParESaOOaJ/LwnAVuUvy6F7UcCL5UdYySLBhXbFh5fDZyUl28nBwn58c6F135V0rfjvoX1BwB3FM4zpbBumbzvx4HVSC1QKzXxHFfPf1PL58fXACc083oMZ9Gg4uuFx78C/pyXLwJ+UVi3fq7PuqQR6e+Rg8q8fmvghcLjfUhB6BvF16uCz8l3gOvb8HofWVi3S/l72sRn8NDC40o+d8XXYENSy1ivwt/PJwvrbwP+X+HxBqSLW2/SBfDKwrp++ViVBBVbky7AizwvWg8qLgR+VVi3bK7TwNZe3ybOdRotf85bCyrm0NAyt1zefqvC9hOBvVv7PwFsxaKf05OBiwv73tXUc/CPf1r76TIDNbO9I2I50gdsEA2DdtYGvirp7dIPsC3pYtJIvuPhSkmvSHqH1MTX3OCfcqsDb0XEu4WyF0nf2Er+V1h+H+iT+ySnkP7hnwa8nuuwemv7NVOPaaWFSH2GL+e6NVXfF8vKyuvbrIiYGREnRcRGpIv6JOCGViaCmdbCupLy51rqN129bP/i8tqkb1mvFd7j80gtFoscNyJKg8aWJQWDb0XEzPKKRMSrpNaYffL97ruTusQqVelzKb4PA0hBz8TCc7kll5fcRLr4PhMRjQYSFuXR7DfnwcvvkPq0y/+eF6eOzSl/T1r73JUff8my+hXXl/+9vkhDQNmorhHxHqlVpBJrAS/G4o3ZaFSniJidz9vSZ76lAeRt+ZyXezMaBozPyb+nF9bPKTt3c/8n1gZWL3vfTqHxXAyVfI7NFtHVggoAIuJOUhT/m1w0jfSNacXCT7+I+EUTu/+cFOFvEhHLA18nfXNcePgWTv0q0F/ScoWyT5CaeCup9xURsS3pQx3ALyvZrwlrlRYkLUHqLni1mfquXVZWcX2LIg1e+g0NTf3NvU4tvX6teY30XErWKixPI7VUrFJ4j5fPAU9rppHetxWbWX8p6e/gq8D9EdHm16cJr9G4/sX79d8gXQA2KjyXFaIwKA34GakrYzVJB7RwnnNJXRjr5b/nU2j897y4dWxO8f2t5HNXfvyPSM+/qeOV/71+gtTkP728rpKWIU1kVPIejSdfKg4ongZ8opmLd2t/r43qlG9HXJnF+AxV4H2afw6Lo7n/E9NIrWLF9225iNijsG81n2PrwbpkUJH9Hvi8pM1IrQ1flLSrpF6S+kgaLmnNJvZbjtSNMkvSGqTBdEXTSX2Mi4iIaaRBaWfkc2xKGmjW6v3gkjaQtKOkpUn9qnNITfKLY4ikr+R/kt8hXWzHN7HdP0lz2h8oqbek/UhNrjdXchJJv5S0cd53OdI4hSkR8SapOXkBzbxWi+lq4FhJa+QA4MTSioh4Dfg3acrc5SUtIelTkrZv7aB5338Bf5K0kqQlJW1X2OQG8pS9pD7+Wj2XkZI2zBfAUwv1WUCa0vhMSR8DyM9517y8HXAI6Xa2EcAf8t9qU5YjDaabLWkQ6T1qSx2PybcOrwSc1KZnWNnn7uuF1+DHwDXR/O3ZfwO+K2mdfLv4z0njXeaRuqX2lLStpKXysYr/vyYBe0jqn+8O+05h3YOkoOQXkvrlen42r5sOrJmP2VydDpE0OH92fw48EBFTK3h92moScGB+LXcDWv3bbkVz/yceJM3rcKKkvvl8GyvlzzCrSpcNKiJiBukC8KN8sd+L9C1tBikS/z5NP7/TSReQWaTBe9eVrT8D+EFuFjy+if0PIPUHv0oaOHhqRPyngiovTRqf8AapCfRjpH7MxXEjabTzTNK4ia9ExEflG+WL/57A90hNticAe+ZWh0osQ3qOb5MGcq0NfCkf+33St+l782s1bDGfS9FoUuAwGXiEFBTNo2Eu/4NJA8ueJD33a2iii6sZ3yB9S36aNLblO6UVETGHNIhwHRb9e1gsEfEvUuB7O2nw4e1lm5yYy8fnbov/ABtIWp70d310RLwSEXeT+vUvbqbb6XjgQNK4kNGkwaiVGk0aA/Eo6e6ANj33Cj93fyG1Kv6PNECyyamWs4vy9neRBhXOJQ36JSKeIN2dcgUpQJhJas4vnudR0riPf1N4HXIQ80XSeJaX8n775dW3k8YM/U/SIp+L/Nn+Ienv4zXS3WP7l29XI8fmer5NGqB7Q5XHa/L/RH499iQNNH+B9D/pAtLdVZ2KpPmSJkl6VNLDklrMJKo0f87jeXmopLNb2b6m6dOtYWS8dRFKmfnWjYivd3Rd6k3S7qSBj+VdOPU414+A9XvC69peJI0j3e1xQUfXxbom5cyheXlX0m2zzbbgSBoI3BwRG7dTFa1MV5v8yroxSX1JWQH/TRo0diqppaTe5+1P6sb6Rr3PZdZdXX3x5oukPv/aIQ9Xm/q8aHlSqwu51e5XpIHVQbpLplErnVJqg+NJravPk+bceTuve440qPhbNKRPP5w0y/BSpFbEbxQGfFuFumz3h3VLInVPzSR1fzxFupWwfidM/0imAf+KiLvqeS6z7ioHFIukPs/l1eibuz+eJnXRlKZP/wqp+2Yz0q3nv5bUZFdoHsN0I/BlAKUcIS9GmqGz6LqI2CIiNiP971kkz4i1rq5BhaTvKiXDelzS3/IAqXUkPSBpiqSrSgOkJC2dH0/J6wcWjnNyLn+mNJitp4qI07prE31EvJ8/1MtFxMci4pBIaY/rec7R+Y6FI+t5np4oIoa766PHqFfq8zkRMTgiBpEmlLsst1JsC/wtIubn4OBOoKWBplfRMI5mf5oee7SxpLuVcn4cRJpQzNqobkFFHq1+DGka2o1J99zvT7qN8syIWJf0jbQUDR4GzMzlZ+btkLRh3m8j0h/Vn1THjKFmZtZm9U59TkTcT5rjZEBr2zbhfmBdSQNIEx42NSj5EtIA6U1ILaZOd74Y6j2mojep+eojUtT6Gmna21KT2KWkyaDOJY0iPy2XXwOckyPSvUgz6X0AvCBpCg35DhZaZZVVYuDAgfV8LmZm3c7EiRPfiIjFuVAXvUTTKcJrkvocIN8y3Yt0J9vdwBGSLiXNm7Md6c6jJgOBiAhJ15Omd38q3xlXbjnS5HpLkloq6jEXSbdXt6AiIl6RVEqYNIc0+G4iKWlPaWa7l2mYmW4N8ixuETFP0izSJDNr0HgOhuI+Cw0cOJAJEybU46mYmXVbkiqZSbU1p5DGVBS7QGqR+ryvUjpzSGM1RkTE/BwgbE26jThIU+v/r9ht3oSrSEkVRzaz/ofAA6Tbox8gBRnWRnULKvJkOnuR7v1/G/g7qfuiLmbMmMHQoUMXPh41ahSjRo2q1+nMzCz72iEPX3H1xZtDje/+iIgmu7ojzYXwfcomL8yTkm2cl8dRSG8eERMom202CunTI+JcUqu5VaGe3R87k6aCnQEg6Trgs8CKSrkw5pGmjS01Mb1Cmlb25TwD3AqkZq5SeUlxn4UGDBjglgozsw6SA4ha3kJqXVA97/54CRgmaZk8NmIn0kyId5DS8UKagvjGvDwmPyavvz1Ho2OA/fPdIesA65GmmTUzM7NOpJ5jKh6QdA1p+t95pHkHzidNjX2lpJ/msgvzLhcCf8kDMd8iT4UbEU9IupoUkMwDjmohd4CZmZl1kG4zTffQoUPD3R9mZm0jaWJEDG19S7PW9fgZNZ/99RCe/fWQup7j/Zcf4f2XH2lxm5kPX8XMh9uSC8o6m9be5+m3/Ybpt/2mqnO05e+1Fn/b7fH5MLPuo8cHFWZmZlYbPbb7o7lvX+t/f2KtqrTwW+uc/Lvvmp8BYJn8G1jYOjF7yp0ALLtuSsC30ub7YV1Da+9zqXXivefvBqDfJz8HwKo7HV/xOdry91qLv+32+HxY59CZuz8kzQceI90KOp804+V9reyzMLOptT9nKTUzs85qTkQMhoWpz88Amk193lb5zkTlpGNWAz22paKk9I2snt/ASt9kiy0U5UotFm6h6Lpae59LLRZtaaEo15a/11r8bbfH58M6Vq1aKs66YtHU58ceWN3kV8VWB0lfBQ6KiL3z4+8DXwOWBq6PiFOL+0haljRlwUrAksAPIuLGPOvmraRZM4cAewBPFM6zL7BnRIzM5zyV1EoyKyK2q+b59ARuqTAzs6rkgKI4TffawOizrticKgOL0jTdfYDVSLmjkLQLac6iLUldI2MkbRcRdxX2nQt8OSLekbQKMF7SmLxuPdKU3+Pz8Zo7/4+AXXPaiRWreB49Ro9vqTAz68lq0VJx1hWbT6XphGIvHnvgwwMX97hlLRVbAxeQpuH+NWmSxLfzpssCZ0TEhYWWiiVJGa+3AxYAG5DSRvQB7oiIdZo5T7Gl4s/Ap4CrgeuaSURmBW6pMDOzarVL6vPc4jCA1DpxRkSc18IuB+Vth0TER5Km0pDF9L3ywxeWF2Y6jYgjJW0FfAGYKGmIA4uW+ZZSMzOrVnMpzuuV+vxW4NA8bgJJa0j6WNkuKwCv54BiB5puSSmZLunTkpYAvlw456ci4oGI+BEpe+lazR7BALdUmJlZ9do19Tnwb0mfBu7P4yFmA18HXi/sezlwk6THgAnA0y2c5yTgZlLgMIHUnQLwa0nr5XPfRkq1bi3wmAozsx6sM9/9YV2Pgwozsx6sM09+ZV2Px1SYmZlZTTioMDMzs5pwUGFmZmY14aDCzMzMasJBhZmZmdVE3YIKSRtImlT4eUfSdyT1lzRW0nP590p5e0k6W9IUSZMlbV441oi8/XOSRtSrzmZm1jlIGijp8bKy0yS1mJFP0lBJZ+fl4ZK2WYxzT82zd5aXHyrpsXyNelzSXrl8pKTVKzhuRdt1ZXULKiLimYgYnNPWDiFNhHI9aZKR2yJiPdJkIiflXXYnJXlZDxgFnAsgqT8pS9xWpOQxp5YCETMzs6KImBARx+SHw4E2BxVNkbQm8H/AthGxKTAMmJxXjwQqCRYq3a7Laq8ZNXcC/hsRL+bIbnguvxQYB5wI7AVcFmnijPGSVpS0Wt52bES8BSBpLLAb8Ld2qruZmbXiW9ctOvnVuV+p3+RXksaR0pfvAKwIHBYRd0saDhwPHA0cCcyX9HXg26RZNf9MQ06S70TEvZJWJl1T1gDuJ82gWe5jwLuk2TuJiNnA7JyAbChwuaQ5wNbA94EvAn2B+4AjgH2a2G5D4HekGTzfAEZGxGuSjsl1nwc8GRH7V/lytZv2GlOxPw1BwKoR8Vpe/h+wal5eA5hW2OflXNZceSMzZsxg6NChC3/OP//8WtbfzMyakQOK0aT8Gsq/R+fyeuodEVsC3yG1aC8UEVNJAcSZudX8buCs/HgL0kX+grz5qcA9EbERqUW9qURojwLTgRckXSzpi/k815Cm9j4on2cOcE5EbBERG5MCiz3LtyMFDH8A9o2IIcBFwM/yuU4CPpNbRI6s6hVqZ3VvqZC0FPAl4OTydRERkmoypeeAAQPwjJpmZh3i5zTO+0F+/HNgcVsrmrs2FMuvy78nAgMrOObOwIY5XwjA8jkp2XbAVwAi4h+SZi5y0oj5knYDtiC1vp+Zs5ae1sR5dpB0Auk16A88AdxUts0GpDTuY3N9egGlL9yTSS0aNwA3VPC8Oo326P7YHXg4Iqbnx9MlrZabeFajIQHMKzTOALdmLnuFhu6SUvm4utbYzMzaoh6pz98EysfP9QdeKDz+IP+eT2XXsyWAYRExt1hYCDJalLvnHwQezF3xFwOnlR2rD/AnYGhETJN0GoV06sVNgSciYusm1n2BFOh8Efg/SZtExLyKKtnB2qP74wAaj38YA5Tu4BgB3FgoPzjfBTIMmJW7SW4FdpG0Uh6guUsuMzOzzqHmqc/zmIXXJO0ICwft7wbc04bDvAssV3j8b9LYCvIxB+fFu4ADc9nuLBrMIGn14l2JwGDgxSbOUwog3sitIPs2U59ngAGSts7HX1LSRjn9+loRcQdpvOEKNGRN7fTq2lIhqR/wedIglZJfAFdLOoz0hnwtl/8T2AOYQrpT5BCAiHhL0k+Ah/J2Py4N2jQzs06hXqnPDwb+KOl3+fHpEfHfNux/E3BNvkHg28Ax+XiTSde/u0hjFk4H/ibpCdLAyqaCoSWB3+RbQueS0qSXxjtcAvy5MABzNPA4adzgQ4VjlG+3L3C2pBVyfX4PPAv8NZcJODsi3m7Dc+5QzlJqZtaD1SpLaXvf/WGdU3vdUmpmZt1YDiAcRPRwnqbbzMzMasJBhZmZmdWEgwozMzOrCQcVZmZmVhMOKszMzKwmHFSYmVmnJWlvSSFpUH68SEr0Ko//Y0k71+p4PZ2DCjMz68wOIM2ieUCtDyypV0T8KCL+U+tj91Sep8LMzKo25KYRi0x+NfGLl1Y1b0We5npbUnrzmyjLRCppGdIslRuTpr1eHTgqIiZI2oU0U+bSwH+BQyJitqSpwFWk2Z5/lZOE3RwR10j6EWUpy6O7zBDZTtxSYWZmVckBxSKpz3N5NfYCbomIZ4E3JQ0pW///gJkRsSHwQ2AIgKRVgB8AO0fE5qSU48cV9nszIjaPiCvLjrdIyvIq69/jOKgwM7NqtZT6vBoHAKUL/5Us2gWybWl9RDxOShkOMAzYELhX0iRS8sq1C/td1cz5dpD0gKTHgB2Bjaqsf4/j7g8zM6tWzVOf56ykOwKbSAqgFxDAHyvZHRgbEc2Nw3ivifNVmrLcWuCWCjMzq1bNU5+TMnj+JSLWjoiBEbEW8AKwVmGbe8mZriVtCGySy8cDn5W0bl7XT9L6rZyvpZTlViEHFWZmVq1TSKnOi6pNfX4AcH1Z2bXAyYXHfwIGSHoS+CnwBDArImYAI0npzCcD9wODWjpZTi9eSll+K41TlluFnPrczKwHq1Xq83rc/dEaSb2AJSNirqRPAf8BNoiID+t5Xmuex1SYmVnVcgDR3qnPlwHukLQkaRzF/3NA0bEcVJiZWZcUEe8CVbeyWO3UdUyFpBUlXSPpaUlPSdpaUn9JYyU9l3+vlLeVpLMlTZE0WdLmheOMyNs/J2lEPetsZmZmi6feAzXPIk1cMgjYDHgKOAm4LSLWA27LjwF2B9bLP6OAc2HhbUWnAlsBWwKnlgIRMzMz6zzqFlRIWgHYDrgQICI+zKNr9wIuzZtdCuydl/cCLotkPLCipNWAXUn3G78VETOBscBu9aq3mZmZLZ56tlSsA8wALpb0iKQLJPUDVo2I1/I2/wNWzctrANMK+7+cy5orb2TGjBkMHTp04c/5559f46djZmZmLannQM3ewObAtyPiAUln0dDVAUBERJ4prWoDBgzAt5SamXUPklYmdZEDfByYT/qiCrBlS3d5SBpIShK2cV0raYuoZ0vFy8DLEfFAfnwNKciYnrs1yL9fz+tfofFMaWvmsubKzcysm4qINyNicEQMBv4MnFl63EpA4bsaO1CLQYWkXpKeXpwDR8T/gGmSNshFOwFPAmNIyV3Iv2/My2OAg/NdIMNIs6K9RprZbBdJK+UBmrvkMjMz6yS2uOGMA7e44YypW9xwxoL8u9oMpYuQdImkfQuPZ+ffwyXdLWkM6TpT3OeTuQt+C0mfknSLpIl5+0GSlpP0Qp7rAknLFx9b27QY0UXEfEnPSPpERCzOHO7fBi6XtBTwPHAIKZC5WtJhwIvkeduBfwJ7AFNI07sekuvwlqSf0DBl6o8j4q3FqIuZmdVBDiBG05CpdG1g9BY3nMFDe5/cXhNibQ5sHBEv5O4P8pfaK4GREfGopNuAIyPiOUlbAX+KiB0ljQO+ANwA7A9cFxEftVO9u5VKmolWAp6Q9CCFzG4R8aXWdoyISTQ9MclOTWwbwFHNHOci4KIK6mpmZu2vpdTn7RVUPBgRLxQeDyC1hH8lIp7MScK2Af4uqbTN0vn3BcAJpKDiEODwdqlxN1RJUPHDutfCzMy6spqnPm/GPHK3vaQlgKUK68rTmc8i5SDZltQlsgTwdh6j0UhE3CtpoKThQK+IeLzG9e4xWh2oGRF3AlNJSVvuJHVDPFznepmZWddRj9TnTZkKDMnLXwJaGvfwIfBl0li9AyPiHeAFSV+FhbM4b1bY/jJSq8rFNa5zj9JqUCHpcNKdG+flojVITURmZmZQn9TnTRkNbC/pUWBrFm2daCQi3gP2BL4r6UvAQcBhef8nSJMullxO6u7/W43r3KO0mvpc0iTS9NgPRMRnctljEbFJ/atXOac+NzNru1qlPs+DNRulPm/HQZpVy3eV7BUR3+jounRllYyp+CAiPiwNbMn3ANdkwiozM+secgDRZYKIIkl/IOWf2qOj69LVVRJU3CnpFKCvpM8D/w+4qb7VMjMzax8R8e2OrkN3UcmMmieRpkZ9DDiCNJ/ED+pZKTMzM+t6Wm2piIgFki4FHiB1ezwTrQ3EMDMzsx6n1aBC0hdI867/FxCwjqQjIuJf9a6cmZmZdR2VjKn4LbBDREwBkPQp4B+AgwozMzNbqJIxFe+WAorseeDdOtXHzMwMAEnzJU2S9KikhyVtU4dzDJd0cxv3GSepzbfhlidE646abamQ9JW8OEHSP4GrSWMqvkpDci8zM7N6mVOaVlvSrsAZwPYdWiNrUUvdH18sLE+n4Y2cAfStW43MzKzL2fL6CxeZ/OrBLx9Wy3krlgdmAuTkYDeSZsBcEvhBRNyYs5P+C7iHlDzsFdKEVnMkbQFcCCwAxgK7R8TGxRNI2hI4C+gDzAEOiYhnJPUlTd+9GfA0hWugpF2A00nJyf6b95kt6RekqcTnAf+OiOPzLttJOg74OHBCRFxTw9eowzUbVETEIe1ZETMz65pyQLFI6vMtr7+QKgOLvnlW5z7AasCOuXwu8OWIeEfSKsB4SWPyuvWAAyLicElXA/sAfyUFBYdHxP35gt+Up4HPRcQ8STuTgqR9gG8B70fEpyVtSs5/lc/9A2DniHhP0onAcZL+SMo7MigiQtKKhXOsRkpyNggYQ0qD0W1UcvfHOsC3gYHF7StJfW5mZj1CvVKfF7s/tgYuk7Qx6U7En0vajtTysAawat7nhYiYlJcnAgPzRX25iLg/l19ByglSbgXgUknrkbr7SwnLtgPOBoiIyZIm5/JhwIbAvXnW6aWA+0kZUucCF+bxGsUxGzdExALgSUmr0s1UcvfHDaQmo5tIb56ZmVlR3VOf5xaGVYABpOm0BwBDIuIjSVNJrRkAHxR2m0/buut/AtwREV/OXSnjWtlewNiIOGCRFakrZSdgX+BoGlpZivVTG+rWJVQSVMyNiLPrXhMzM+uqXiJ1eTRVXhOSBgG9gDdJLQqv54Bih2bOvVBEvC3pXUlbRcQDwP7NbLoCaRwGwMhC+V3AgcDtuaVk01w+HvijpHUjYoqkfqRWk1eBZSLin5LuJd012SNUckvpWZJOlbS1pM1LP5UcXNJUSY/lW4Im5LL+ksZKei7/XimXS9LZkqZImlw8h6QRefvnJI1YrGdqZmb1Uq/U533z9WMScBUwIiLmk9KUD5X0GHAwaSxEaw4DRudj9SN1UZT7FXCGpEdo/KX7XGBZSU8BPyZ1qxARM0jBx99yl8j9pLESywE357J7gOPa8qS7skpSn58BfIM0qrXU/RERsWPzey3cdyowNCLeKJT9CngrIn4h6SRgpYg4UdIepLEbewBbAWdFxFaS+gMTgKGkPq6JpCavmcVzOfW5mVnb1Sr1eTvc/VEVSctGxOy8fBKwWkQc28HV6nYq6f74KvDJiPiwRufcCxiely8l9VmdmMsvy3lFxktaUdJqeduxEfEWgKSxwG7A32pUHzMzq1IOIDpNENGEL0g6mXTde5HG3RtWI5UEFY8DKwKvL8bxA/i3pADOi4jzgVUj4rW8/n80jNhdA5hW2PflXNZceSMzZsxg6NCGYHvUqFGMGjVqMapsZmbdTURcRepCsTqqJKhYEXha0kMURq1WeEvpthHxiqSPAWMlNer3yvfv1iTj6YABA3D3h5mZWcepJKg4dXEPHhGv5N+vS7oe2BKYLmm1iHgtd2+UWkBeAdYq7L5mLnuFhu6SUvm4xa2TmZmZ1Uerd39ExJ1N/bS2n6R+kpYrLQO7kLpSxgClOzhGkKZaJZcfnO8CGQbMyt0ktwK7SFop3ymySy4zMzOzTqSSGTXfJY2NgDRb2JLAexGxfCu7rgpcn2cZ6w1cERG35G6UqyUdRhos87W8/T9Jd35MId2KdAhARLwl6Sc0JDH7cWnQppmZmXUerQYVEbFcaVkpQtiLNDVpa/s9T0q+Ul7+JmmWsfLyAI5q5lgXARe1dk4zM+s+JM2OiGXz8h7A74HPR8SLNT7Pl4AN81QHewPPRsSTtTxHT1HJ5FcLRXIDsGt9qmNmZtaYpJ1IuTd2r3VAARARYyKilGRsb1I+D1sMlXR/fKXwcAnSJFRz61YjMzPrcra69tpFJr96YJ99qp63IicNGw3sERH/zTk5bi6lLZd0PLAs8CfgXxExRNJmwCRg7Yh4SdJ/gU1IreQ/IHXlvwkcFBHTJY0kXduuIKUr317SD4B9IuK/1T6HnqSSloovFn52Bd4ldYGYmZmVAorRpBwcyr9H5/JqLE1Karl3RLQ4FXdEvA70kbQ88DnSTMyfk7Q2KU/I+6Qps4dFxGeAK4ETyo5xH+mmge9HxGAHFG1XyZiKQ9qjImZm1mXVK/X5R8B9pLwdlUypfR/wWVKq8p+TZl8WcHdevyZwVZ7OYCnghSrqZk2opPtjAHA4MLC4fUQcWr9qmZlZF1Kv1OcLSHcI3ibplIj4OTCPxq3sfQrLd5FaKdYmTVdwIunuxX/k9X8AfhcRYyQNB06rsn5WppLujxtJ6WD/Q3pjSj9mZmbQfIrzqlOf526LLwAH5akIpgMfk7SypKWBPQub3w18HXguIhYAb5GmKrgnry+mNm8u4/W7pCyjthgqmVFzmYg4se41MTOzruoU0piKYhdILVKfAwvnK9qN1BIxg5R+/EFSgPB0YbupeeqDu3LRPcCahazWpwF/lzQTuB1Yp4nTXUlKkX4MsK/HVbRNJanPfwrcFxH/bJ8qLR6nPjcza7tapT6v190f1rVUElS8C/QjJRP7iDToJSqYUbNdOagwM2u7WgUVZtDGGTXNzMzMmtOmGTXNzMzMmuOgwszMzGrCQYWZmZnVRCW3lCKpFymVeXHyq6rvPzYzM7Puo5IZNb8NnEqacGRBLg5g0zrWy8zMejhJ84HHCkVXFrKJ1uL4g4HVO/uUCV1JJS0VxwIbRMSb9a6MmZlZwZyIGFzH4w8mZSd1UFEjlYypmAbMWtwTSOol6RFJN+fH60h6QNIUSVdJWiqXL50fT8nrBxaOcXIuf0bSrotbFzMzq49hf7/9wGF/v33qsL/fviD/rjZDabMk7SHpaUkTJZ0t6WZJS0h6LuerIj+eImmApEsk/VnSBEnPStozX3t+DOwnaZKk/epV356kkqDieWBcvrAfV/ppwzmOBZ4qPP4lcGZErAvMJGWfI/+emcvPzNshaUNgf2AjUsa5P+UxHmZm1gnkAGKR1Oc1CCz65gt+6Wc/SX2A84DdI2IIMAAg5/r4K3BQ3ndn4NGImJEfDwS2JOUR+TPp+vcj4Kqc5vyqKutqVBZUvASMJaWJXa7w0ypJa5LewAvyYwE7AtfkTS4F9s7Le+XH5PU75e33IvWjfRARLwBTSH8YZmbWObSU+rwac/IFf3Dhwj8IeD5fDwD+Vtj+IuDgvHwocHFh3dURsSAiniN9WR5UZd2sCZXMqHk6gKRl8+PZbTj+74ETaAhCVgbejoh5+fHLwBp5eQ1SVwsRMU/SrLz9GsD4wjGL+5iZWcerV+rzNomIaZKmS9qR9OXzoOLq8s3br2Y9R6stFZI2lvQI8ATwRO7D2qiC/fYEXo+IiTWoZ6tmzJjB0KFDF/6cf/757XFaMzOrY+rzJjwDfLIw7q58LMQFpG6Qv0fE/EL5V/M4i08Bn8zHcZrzGqvk7o/zgeMi4g4AScNJfWfbtLLfZ4EvSdoD6AMsD5wFrCipd26tWJOG3PavAGsBL0vqTcp7/2ahvKS4z0IDBgzACcXMzDpEvVKf95U0qfD4log4SdL/A26R9B7wUNk+Y0jdHheXlb9ESpe+PHBkRMyVdAdwUj7HGR5XUb1KxlT0KwUUABExjpS1tEURcXJErBkRA0kDLW+PiIOAO4B982YjgBvz8pj8mLz+9kgpVMcA++e7Q9YB1iP9YZiZWScw/qs7XgEcDrxI6lZ4ETg8ly+2iOhVNqbipLzqjogYRLoddAFQ/Ea5GWmA5tNlh/tPRAyNiPUj4uZ8/LciYgsP1KydSloqnpf0Q+Av+fHXSYNcFteJwJWSfgo8AlyYyy8E/iJpCvAWKRAhIp6QdDXwJDAPOKqsScvMzDpYDiCqCiLa4HBJI0g3EDxCuhsESScB36LxWAprR0qNAS1sIK0EnA5sm4vuBk6LiJl1rlubDB06NNz9YWbWNpImRsTQjq6HdQ+V3P0xEzimHepiZmZmXVizQYWk30fEdyTdRBO33kTEl+paMzMzM+tSWmqpKI2h+E17VMTMzMy6tmaDisL8EoMj4qziOknHAnfWs2JmZmbWtVRyS+mIJspG1rgeZmZmjUhqywzO1gm0NKbiAOBAYB1JYwqrliPd8mlmZtauCpMnWifU0piK+4DXgFWA3xbK3wUm17NSZmbWtWxz5RMHkhKIfYI0e+Up9+2/UU3mrcgzOf+ElNl6ELC+pBtIsy33Ac6KiPPztrNJszfvCcwB9oqI6bWoh7Wu2e6PiHgxz555EPBARNwZEXeS0piv2U71MzOzTi4HFIukPs/ltbI5cGxErJ8fH5pTnw8FjpG0ci7vB4yPiM2Au0gzfVo7qWRMxdWkaVBL5gN/r091zMysC6pX6vOiBwvpziEFEo+SslivRUrhAPAhcHNenggMrGEdrBWVTNPdOyI+LD2IiA8lLVXHOpmZWdfSHqnP3yst5O6QnYGtI+J9SeNI3SAAH0XDVNHzqew6ZzVSSUvFDEkLJ7qStBfwRv2qZGZmXUx7pj6HlMV6Zg4oBgHD6nQea6NKgoojgVMkvSRpGikh2BH1rZaZmXUhp5BSnRfVIvV5c24Bekt6CvgFqQvEOoFWE4ot3FBaFiAiOuV9w04oZmbWdrVKKFbPuz+s62i1r0nSj8oeAxARP65TnczMrIvJAYSDiB6ukgEs7xWW+5Du/X2qPtUxMzOzrqqS1OfFia+Q9Bvg1rrVyMzMzLqkSgZqllsGT35lZmZmZVoNKiQ9Jmly/nkCeAb4fQX79ZH0oKRHJT0h6fRcvo6kByRNkXRVac4LSUvnx1Py+oGFY52cy5+RtOviPlkzMzOrn0rGVOxZWJ4HTK8wmcsHwI4RMVvSksA9kv4FHAecGRFXSvozcBhwbv49MyLWlbQ/8EtgP0kbAvsDGwGrA/+RtH5EzK/0SZqZmVn9NdtSIam/pP6kBGKlnznA8rm8RZGUbj9dMv8EsCNwTS6/FNg7L++VH5PX76R0q8lewJUR8UGeonUKsGXFz9DMzLokSfMlTZL0uKSbJK1Yw2NfkL+0Wg211P0xEZiQf88AngWey8sTKzm4pF6SJgGvA2OB/wJvF1o6XgbWyMtrANMA8vpZwMrF8ib2WWjGjBkMHTp04c/5559fSRXNzKzzmhMRgyNiY+At4KhaHTgivhkRT9bqeJY02/0REesASBoNXB8R/8yPd6ehdaFFuYticI4uryelrK2LAQMG4MmvzMw6xr6XvLfI5FfXjOxXy3kr7gc2Bci5Po6PiAmSVgEmRMRASRsBFwNLkb407wO8SkqMuSbQC/hJRFxVdoxzgS2AvsA1EXFqDevdo1Ry98ewUkABEBH/ArZpy0ki4m3gDmBrYEVJpWBmTeCVvPwKKdMcef0KwJvF8ib2MTOzDpYDikVSn+fyqknqBewEjGll0yOBsyJiMCkl+svAbsCrEbFZbvG4pYn9/i/PKropsL2kTWtR756okqDiVUk/kDQw//wfKfJrkaQBpf4vSX2Bz5MmzboD2DdvNgK4MS+PyY/J62/PmebGAPvnu0PWIaW3fbCiZ2dmZu2hXqnP++Yu9P8Bq5K60VtyPylX1YnA2hExB3gM+LykX0r6XETMamK/r0l6GHiEdFOAx1ospkqCigOAAaTui+uBj+Wy1qwG3CFpMvAQMDYibiYlJDtO0hTSmIkL8/YXAivn8uOAkwAi4glS09WTpAjzKN/5YWbWqdQr9fmc3OpQagEpjamYR8P1q5TynIi4AvgS6aaCf0raMSKeBTYnBRc/bSL1xDrA8cBOEbEp8I/iMa1tKplR8y3gWEnLpYeVJRSLiMnAZ5oof54m7t6IiLnAV5s51s+An1VyXjMza3cvkS78TZVXLac4Pwa4QdKfgKnAEFKrdanlG0mfBJ6PiLMlfQLYVNLTwFsR8VdJbwPfLDv88qR0FLMkrQrsDoyrRb17okomv9pE0iPA48ATkiZK2rj+VTMzsy6i7qnPI+IRYDKppfw3wLfytWmVwmZfAx7PXSYbA5cBmwAP5rJTgZ+WHfdRUrfH06SEaPfWqs49UaupzyXdRxrEckd+PBz4eUS0abBmvTn1uZlZ29Uq9Xk73P1hXUAlM2r2KwUUABExTlK/OtbJzMy6mBxAOIjo4SoJKp6X9EPgL/nx14Hn61clMzMz64oqufvjUNLdH9cB15L6rw6tZ6XMzMys62mxpSJPOHJdROzQTvUxMzOzLqrFloo8H8QCSSu0U33MzMysi6pkTMVs4DFJY0n38gIQEcfUrVZmZmbW5VQSVFyXf8zMzNqNpPmkmTB7k9I8jIiI8vkwrBOpZEbNSyUtRcowGsAzEfFh3WtmZmY9XWmabiRdTkoY9rvWdpLUOyLm1blu1oRWgwpJewDnAf8lzb2+jqQjcrZSMzMzzjtr0cmvjji2ppNf3U2adrsf8AfSjJlLAqdFxI2SRgJfAZYFekk6lZTafE8ASeeQUqRfUsM6WZlKbin9HbBDRAyPiO2BHYAz61stMzPrKnJAsUjq81xeNUm9STk5HgP+j5TFekvS9ejXhQkZNwf2zdcq6wCVBBXvRsSUwuPngXfrVB8zM+t66p36fAKp9eNCYBfgpFw+jpRRtJQNdWxOgmkdpJKBmhMk/ZOUfjxImUQfkvQVgIjwIE4zs56t3qnPF5IkYJ+IeKasfCsKdyjSOD06OJ15u6ikpaIPMB3YHhgOzAD6Al8E9qxbzczMrKtoLsV5TVKfl7kV+HYOLpD0mWa2exHYUNLSklYEdqpDXaxMJXd/HNIeFTEzsy7rFNKYimIXSE1Tnxf8BPg9MFnSEsALNPEFNyKmSboaeDxv80gd6mJlKkl9vj5wLrBqRGwsaVPgSxHx0xZ3bGdOfW5m1na1Sn3eDnd/WBdQSVBxJ/B94LyI+EwuezwiNm5lv7WAy4BVSWMxzo+IsyT1B64CBgJTga9FxMzclHUWsAcpwh0ZEQ/nY40AfpAP/dOIuLT8fA4qzMzarlZBhRlUNqZimYh4sKyskklF5gHfi4gNgWHAUZI2BE4CbouI9YDb8mNItwutl39GkVpHyEHIqcBWwJbAqZJWquD8ZmZm1o4qCSrekPQpUmsDkvYFXmttp4h4rdTSEBHvkqZYXQPYCyi1NFwK7J2X9wIui2Q8sKKk1YBdybcJRcRMYCywW4XPz8zMzNpJJbeUHgWcDwyS9AppwMtBbTmJpIHAZ4AHSGMzSkHJ/0jdI5ACjmmF3V7OZc2VNzJjxgyGDm1owRs1ahSjRo1qSzXNzMysCpXc/fE8sHOesWwJ0niH/Um367RK0rLAtcB3IuKdfBdQ6dghqeVBHRUaMGAAHlNhZmbWcZrt/pC0vKSTJZ0j6fOkYGIEMAX4WiUHl7QkKaC4vDBJ1vTcrUH+/XoufwVYq7D7mrmsuXIzMzPrRFoaU/EXYAPSXOuHA3eQZtP8ckTs1dqB890cFwJPRUQxq9wYUnBC/n1jofxgJcOAWbmb5FZgF0kr5QGau+QyMzPrxiTNlzRJ0qOSHpa0TSvbD5T0eJXn/JKkk1rf0prSUvfHJyNiEwBJF5AGZ34iIuZWeOzPAt8AHstztEOaCOUXwNWSDiN1oZRaPf5Jup10CqlV5BCAiHhL0k+Ah/J2P/bc7mZmPUIx9fmuwBmk2Z2r0lJq9IgYQ/qSa4uhpaDio9JCRMyX9HIbAgoi4h5StrqmLDJdaqQJM45q5lgXARdVem4zM2tf95666ORXnz29ppNfLQ/MhIVj9W4EViKlP/9BRJRavXtJGg1sQ+oq3ysi5kgaB0wCtgX+JulZ0vxHSwFvAgdFxPScQn1oRBwt6RLgHWAo8HHghIi4pobPqdtpKajYTNI7eVmkbHHv5OWIiOXrXjszM+v0ckBRnKZ7bWD0vae+R5WBRSlLaR9gNWDHXD6X1BX/jqRVgPGSSq0L6wEHRMTheZrufYC/5nVLlSb6yt3pw/INA98ETgC+10QdViMFIoNILRgOKlrQbFAREb3asyJmZtZltZT6vJqgotj9sTVwmaSNSV9ufy5pO2ABaZqB0vQEL0TEpLw8kTR7c8lVheU1gavyDQNLkaZLaMoNEbEAeFLSqs1sY1klk1+ZmZm1pF6pzxeKiPuBVYABpLmSBgBDctAxnYbU5h8UdptP4y/PxdTofwDOyWMHj6D51OjF4zXXpW+ZgwozM6tW3VOfSxoE9CKNf1gBeD0iPpK0A6m7pa1WoGF6ghEtbWiVq2RGTTMzs5bUK/V538LdgwJG5BsHLgdukvQYMAF4ejGOfRrwd0kzgduBdaqsq1FBltKuwllKzczarlZZStvh7g/rAtxSYWZmVcsBhIOIHs5jKszMzKwmHFSYmZlZTTioMDMzs5pwUGFmZmY14aDCzMzMasJ3f5iZWackaT7wWKFo74iY2kHVsQo4qDAzs85qYe6PcpJEmmtpQftWyVri7g8zM6va2yPfO/Dtke9NfXvkewvy7wNrfQ5JAyU9I+ky4HFgLUnnSpog6QlJpxe2nSrpdEkPS3osT/ONpGUlXZzLJkvaJ5fvIun+vP3fc3p1ayMHFWZmVpUcQIwm5eBQ/j26BoFFX0mT8s/1uWw94E8RsVFEvAj8X54RdFNge0mbFvZ/IyI2B84Fjs9lPwRmRcQmEbEpcHtOn/4DYOe8/QTguCrr3iO5+8PMzKpV99TnkFoqgBcjYnxhm69JGkW6nq0GbAhMzuuuy78nAl/JyzsD+5d2joiZkvbM+92belVYCri/inr3WHVrqZB0kaTXJT1eKOsvaayk5/LvlXK5JJ0taUpujtq8sM+IvP1zkpxJzsys86l76vOChenLJa1DaoHYKbc6/IPGKcxLacvLU6CXEzA2Igbnnw0j4rAa17tHqGf3xyXAbmVlJwG3RcR6wG35McDupCat9YBRpKYqJPUHTgW2ArYETi0FImZm1mnUPfV5M5YnBRmzJK1Kupa0ZixwVOlBvqaMBz4rad1c1k/S+nWob7dXt6AiIu4C3ior3gu4NC9fCuxdKL8skvHAipJWA3YlRY9vRcRM0h9DeaBiZmYd6xRSqvOiWqQ+b1FEPAo8Qkp9fgVwbwW7/RRYSdLjkh4FdoiIGcBI4G+SJpO6PgbVp9bdW3uPqVg1Il7Ly/8DVs3LawDTCtu9nMuaK1/EjBkzGDq0IXvvqFGjGDVqVI2qbWZmzVnxkn5XvD3yPShLfb7iJdWlPo+IZcseTwU2Lisb2cy+AwvLE4DheXk2sEhXekTcDmxRTX2tAwdqRkRIilodb8CAAUyYMKFWhzMzszbIAYRTn/dw7X1L6fTcrUH+/XoufwVYq7DdmrmsuXIzMzPrZNo7qBhDQ7PTCODGQvnB+S6QYaR7iF8DbgV2kbRSHkyzSy4zMzOzTqZu3R+S/kbqw1pF0sukuzh+AVwt6TDgReBrefN/AnsAU0iDew4BiIi3JP0EeChv9+OIKB/8aWZmZp2AImo2rKFDDR06NDymwsysbSRNzDNSmlXN03SbmZlZTTioMDOzTknS7I6ug7WNgwozM+syJDlnVSfmN8fMzKr2/qhHD6Rs8qtlzt+sJvNWSBoO/ASYSZrpcn1JN5CmHOgDnBUR5+dtDwFOBt4GHgU+iIija1EPa52DCjNr1rO/HgLA+t+f2ME1sc4sBxSjachUujYw+v1Rj1KrwALYHNg4Il7Ijw/Ndwj2BR6SdC0pu+jpwBBgFnAHaRpvayfu/rAu79lfD1l48Ssum1m7aSn1ea08WAgoAI7JuTvGk1os1iMlnxwXETMi4kPgqhqe3yrglgozW0R5YOYWC2tFe6Q+L6Y8Hw7sDGwdEe9LGkfjlOfWQRxUWJfV3IWvuOyLoFm7eInU5dFUeT2sAMzMAcUgYFgufwA4S9LKwDvAV0njKqydOKjogjryglk8d2v18IW96yq9Z34PrUKn0HhMBdQ39fktwJGSngKeIXWBEBGvSTqNlLr8bWBSnc5vzfCYCuuy1v/+xEYXu/JlXwjN2kcejHk4Kf1C5N+HVztIs5T6PCLGRcSehfIPImL3iPh0ROwdEcMjYlxed3FErB8RWwL3VXN+aztP092FNDcAsT0unpUMfiz/dtvc+vaokwMKs8p052m6JY0EhvqW0vbj7g/rdhxQmBlARFwCXNLB1ehR3FLRBXlMRcecx6w76s4tFdb+PKbCupVazFPhuS7MzBaPuz+6oI78Rt7cwMjWtq0nt1CYmXUODiqsW6jFZE2VHqMndbf0pOdqZtXrMkGFpN2As4BewAUR8YtaHPeNkbMAWOWSFRb7GN+6bnMAzv3Kw02u3/eSdI5rRjZ/jtbqMWPkWwAMuKR/s8d4e2SacG7FS/otLDvzkWcB+O5n1uesK9IF4tgDJ/K5K+8E4O79t2/0HGa8c3eua8MxmvLyY2n22zU32a/F7Ur+/tzLANz+2Jf42qNjWWKJ3mx/anqu+17yXqNz/m7yeAC++M49AKy37fGNjrXvJbOYB6z6qX9y3ucOAGClZ/4KwMwNvk7/J24HYNRwWOKS95jHPF7v8zL/vGUg85i38DjTfvMR8errDF52ObZ58C1irYv4y7RDWe3Fk2Fe/mj0nsd+l75HBJyyBww8AVbr80Mgvd577v4sq8z5JL3pzcUTxgLwv/2nsN62x/P2yPfo1WcsvXtD33P25t2jbwBgudLyPPhg7g4svewdAOw6bB0AVp+37sJjnbDjj/nV7afQm970PWdvZr04H4AV1u7FNn9Nc/rcs01/PvjdROblY3w8pnHR7TswL+bxxNrwuRHvMG/iHG6eBRMH9eFn235i4d/kxRPSuZf69Pt8+FSaYmDJdW8DYO6kX9Cf29n1i7ew5XWb86t//2hhndYb9Cvue3gLmAfDht3M7c9dzpU3nQGAlkkzKU85bQg/u7n/wte89zy44J7ezGMeRw6Hi+6bSjCPjz5cFyC9DgHvsgGr//HT/PGsVMeNltqZ7318faA39969EcdsuBErvT+U/y6/LL+cNB2Ar+10OgC95m3HiJf2pTcw4sXzuHDtIwA46tgVePfI9PpP3OwnnPSxNH3CTWMHAjDgz0MWrn9k818DsN2oe9nippGs8eZZANwwsuEYy/15b7a6Kn0GLr9vUwDWPevTnJfrfMSxKzDn6BuYxzy+sMd/uPmGbwGw/Pmb8e7R16S/v6UHA7Dhb9el6J1Rjy7cdu6JXwCgzy//QVO2uvZaAB7YZ58m13d1kmZHxLKSBgLbRESLt6jm7W6OiI3bo362qC4xpkJSL+CPwO7AhsABkjbs2FpZZ7JU/0+wVP/GMwLX+o972t++2Sgomcc8mDevhT26rpc+uq/Rc6V7Pk3rOgYCB3Z0Jax1XeLuD0lbA6dFxK758ckAEXFGaZu23v1RahlYIl96FrAAaFuLRenbfblSi0Xp22DD5S2do9hi0Vo9Si0UvVgSgPl8BDRusSi1UBTNYx5/OXY69772Bm+/O43VFzwFBC9ox3yc/vm46firzh1cVtclcl0bt1iUWijenJpaOlYemFo6mmuxKLVQnD/pJk5+fH8gWDI/l3n5uf5xnVKDWbpyzV0pnePTc9M33lFrrAzAyVMOZx6NX6szxkOvJefwsdnLQaTn3bC+aMHC8oaStMUXdpuKWIKx9/wX5sESZdHIgsYHWri+UXnvwrs8r+ltl+jdsL5ReWm5cN7iX0zDs10A9OaX62/OC33ngJbgz5OeaLx9PvdHc3cCQEvMAoK5y7zPC8t+wCMrrATAwa9MbOY8ix5jyT63Nfm8RwxL6y+56/m0fqkX8jkbP58RQ3fi/HENz6v3Es83Ol70fmHR4/eCdxnEjeuvsfB9mtBvHB97fxiD3pnLHq++zwe9erP8Rx+wQGLm0n0BuGWdlRv9fSzBEnz9qabrP5e16LtgCVjiRaKJ9d8YtkOu8xJcOr7pY0xfegMGzE2fyRl9lgTEqvOfbnhtF6RtlV/bhedZouF1ntYvfale8933Gvaj4e93qZUaJqUstViUWijKLU6LRa3u/phz9A2LpD7ve87eVU1+VWipGA98GngBuBS4HvgLUPoHdXRE3FdsqZB0F3BMREzKx7oHOCoiPG13HXWJlgpgDWBa4fHLuWyhGTNmMHTo0IU/559/frtW0Mysp8oBxWhS/g/l36NzeS2cBNwdEYMj4kzgdeDzEbE5sB9wdhP7XAiMBJC0PtDHAUX9dZWWin2B3SLim/nxN4CtirOkLe48FR5T0T3GVMw6IR1jhV/14+2R7y3st4feFY+pABi/f+7zXjimAr65xecbjano1SeNd5g/9/PdfkzFPOalMRX6pcdUdNMxFbVoqZhz9A1TaTqh2It9z9l74OIet9BSMRw4vjRVt6QVgHOAwcB8YP2IWKaspWIZYDKpheMnwMsRcc7i1sUq01UGar4CrFV4vGYuM6u53vT2EAKztmmP1OdF3wWmA5uRWtznlm+QM5iOBfYCvgZ48pl20FVaKnoDzwI7kYKJh4ADI+KJ0jY9aUZNM7Na6SItFUOA30XE9rn8TFLLw28lHQJcFBEqv/sj73cTqeuksmZVq0qXGFMREfOAo4FbgaeAq4sBhZmZdahTSKnOi2qZ+nwyMF/So5K+C/wJGCHpUWAQsOhodSAiJgLvABfXqB7Wii7RUlEJt1SYmbVdZ777o1qSVgfGAYMiYkErm1sNdJUxFWZm1onlAKJDg4giSQcDPwOOc0DRfrpE90e99cTbT/2cewY/5+6vpz3fSkXEZRGxVkT8vaPr0pM4qKBnfij9nHsGP+fur6c9X+vcHFSYmZlZTXSbgZqSZgAvLubuqwBv1LA6XYGfc8/g59z9Vft8146IAbWqjPVs3SaoMDMzs47l7g8zMzOrCQcVZmZmVhMOKszMzKwmenxQIWk3Sc9ImiLppI6uT61JWkvSHZKelPSEpGNzeX9JYyU9l3+v1NF1rTVJvSQ9Iunm/HgdSQ/k9/oqSUt1dB1rSdKKkq6R9LSkpyRt3d3fZ0nfzX/Xj0v6m6Q+3e19lnSRpNclPV4oa/J9VXJ2fu6TJW3ecTW3nqhHBxWSegF/BHYHNgQOkLRhx9aq5uYB34uIDYFhwFH5OZ4E3BYR6wG35cfdzbGkXDElvwTOjIh1gZnAYR1Sq/o5C7glIgaRsjc+RTd+nyWtARwDDM0JpHoB+9P93udLgN3Kypp7X3cH1ss/o4Bz26mOZkAPDyqALYEpEfF8RHwIXElKk9ttRMRrEfFwXn6XdKFZg/Q8L82bXQrs3SEVrBNJawJfAC7IjwXsCFyTN+lWz1nSCsB2wIUAEfFhRLxNN3+fSakG+uZMxssAr9HN3ueIuAt4q6y4ufd1L+CySMYDK0parV0qaoaDijWAaYXHL+eybimnBf4M8ACwakS8llf9D1i1o+pVJ78HTgBKc/6vDLydM95C93uv1wFmABfnLp8LJPWjG7/PEfEK8BtS8qrXgFnARLr3+1zS3Pvao/6nWefT04OKHkPSssC1wHci4p3iukiTlXSbCUsk7Qm8ntMe9xS9gc2BcyPiM6RU0I26Orrh+7wS6Zv5OsDqQD8W7Sbo9rrb+2pdW08PKl4B1io8XjOXdSuSliQFFJdHxHW5eHqpWTT/fr2j6lcHnwW+JGkqqUtrR9J4gxVzMzl0v/f6ZeDliHggP76GFGR05/d5Z+CFiJgRER8B15He++78Ppc09772iP9p1nn19KDiIWC9PFp8KdIgrzEdXKeaymMJLgSeiojfFVaNAUbk5RHAje1dt3qJiJMjYs2IGEh6T2+PiIOAO4B982bd7Tn/D5gmaYNctBPwJN34fSZ1ewyTtEz+Oy895277Phc0976OAQ7Od4EMA2YVuknM6q7HT9MtaQ9S/3sv4KKI+FnH1qi2JG0L3A08RsP4glNI4yquBj5BypnytYgoHwzW5UkaDhwfEXtK+iSp5aI/8Ajw9Yj4oAOrV1OSBpMGpi4FPA8cQvri0G3fZ0mnA/uR7nJ6BPgmaQxBt3mfJf0NGE7K8TEdOBW4gSbe1xxcnUPqBnofOCQiJnRAta2H6vFBhZmZmdVGT+/+MDMzsxpxUGFmZmY14aDCzMzMasJBhZmZmdWEgwozMzOrCQcV1qVJ+r+cpXKypEmStsrl35G0TAv7XdAVksdJWl3SNa1v2WifkZLOqVedzMya07v1Tcw6J0lbA3sCm0fEB5JWIc3RAPAd4K+ke/XL9+sVEd9st4pWISJepWEiJzOzTs0tFdaVrQa8UZrYKCLeiIhXJR1DygVxh6Q7ACTNlvRbSY8CW0saJ2loYd3PJD0qabykVXP5p/LjxyT9VNLs0oklfV/SQ7mF5PRcNlDSU5JG59aTf0vqm9etK+k/+RwP52NfJmnvwjEvl9QoS24+5uN5eaSk6yTdIuk5Sb8qbHeIpGclPUiaqrpUPkDStbmuD0n6bC6/UdLBefkISZfX6k0xs57LQYV1Zf8G1soX0z9J2h4gIs4GXgV2iIgd8rb9gAciYrOIuKfsOP2A8RGxGXAXcHguPws4KyI2IeXWAEDSLsB6wJbAYGCIpO3y6vWAP0bERsDbwD65/PJcvhmwDSmr5oXAyHzMFXL5P1p5zoNJM0huAuwnaa2c++F0UjCxLVDs1jkLODMitsh1uSCXjwJ+JOlzwPeAb7dyXjOzVjmosC4rImYDQ0gXyBnAVZJGNrP5fFJStaZ8CNyclycCA/Py1sDf8/IVhe13yT+PAA8Dg0jBBKQEV5OKx5K0HLBGRFyf6z03It6PiDtJuWcGAAcA1xZSdjfntoiYFRFzSXku1ga2AsblxFofAlcVtt8ZOEfSJFJeiOUlLRsR04EfkfJkfK87Td1tZh3HYyqsS4uI+cA4YJykx0jJlS5pYtO5edumfBQN89XPp/XPhYAzIuK8RoXSQKCYY2I+0LeVY10GfJ2U+OyQVralieO3VtclgGE5CCm3CfAmqavIzKxqbqmwLkvSBpLWKxQNJiVXAngXWK7KU4ynofti/0L5rcChkpbN9VhD0seaO0hEvAu8XBo/IWnpwp0pl5AGlRIRTy5mPR8Atpe0slKa+68W1v2bQtdGTjqGpC2B3YHPAMdLWmcxz21mtpCDCuvKlgUulfSkpMmksQSn5XXnA7eUBmoupu8Ax+VjrwvMAoiIf5O6Q+7PrSPX0HoA8w3gmHys+4CP52NNB54CLl7cSubU1qcB9wP35uOVHAMMzQNKnwSOlLQ0MBo4NN9d8j3gopzh0sxssTlLqVkzcmvCnIgISfsDB0TEXq3ttxjneIx0W+ysWh7bzKy9eUyFWfOGkAY5inQnx6G1PLiknUl3gJzpgMLMugO3VJiZmVlNeEyFmZmZ1YSDCjMzM6sJBxVmZmZWEw4qzMzMrCYcVJiZmVlN/H9DtkTJFwI11gAAAABJRU5ErkJggg==\n",
       "text": [
        "<Figure size 432x288 with 1 Axes>"
       ]
      }
     ],
     "prompt_number": 22
    }
   ],
   "metadata": {}
  }
 ]
}
