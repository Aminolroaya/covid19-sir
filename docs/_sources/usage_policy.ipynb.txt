{
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3.8.2 64-bit ('.venv': venv)",
   "name": "python_defaultSpec_1597669925034"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.8.2-final"
  },
  "name": ""
 },
 "nbformat": 3,
 "nbformat_minor": 0,
 "worksheets": [
  {
   "cells": [
    {
     "cell_type": "markdown",
     "metadata": {},
     "source": [
      "# Usage (details: policy measures)\n",
      "Here, we will analyse the relationship of policy measures and parameter values of SIR-derived ODE models. Policy measures are tracked by [Oxford Covid-19 Government Response Tracker (OxCGRT)](https://github.com/OxCGRT/covid-policy-tracker)."
     ]
    },
    {
     "cell_type": "heading",
     "level": 2,
     "metadata": {},
     "source": [
      "Preparation"
     ]
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "# Standard users\n",
      "# !pip install covsirphy\n",
      "# Developers (Note: this notebook is in example directory)\n",
      "import os\n",
      "os.chdir(\"../\")"
     ],
     "language": "python",
     "metadata": {},
     "outputs": [],
     "prompt_number": 1
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "from pprint import pprint"
     ],
     "language": "python",
     "metadata": {},
     "outputs": [],
     "prompt_number": 2
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "import covsirphy as cs\n",
      "cs.__version__"
     ],
     "language": "python",
     "metadata": {},
     "outputs": [
      {
       "output_type": "pyout",
       "prompt_number": 3,
       "text": [
        "'2.8.2'"
       ]
      }
     ],
     "prompt_number": 3
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "# Standard users and developers\n",
      "data_loader = cs.DataLoader(\"input\")\n",
      "# The number of cases (JHU style)\n",
      "jhu_data = data_loader.jhu(verbose=False)\n",
      "# Population in each country\n",
      "population_data = data_loader.population(verbose=False)\n",
      "# Government Response Tracker (OxCGRT)\n",
      "oxcgrt_data = data_loader.oxcgrt(verbose=False)\n",
      "# Description/citation\n",
      "print(oxcgrt_data.citation)"
     ],
     "language": "python",
     "metadata": {
      "tags": []
     },
     "outputs": [
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "(Secondary source) Guidotti, E., Ardia, D., (2020), \"COVID-19 Data Hub\", Journal of Open Source Software 5(51):2376, doi: 10.21105/joss.02376.\n",
        "We can get Citation list of primary sources with DataLoader(...).covid19dh_citation"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      }
     ],
     "prompt_number": 4
    },
    {
     "cell_type": "markdown",
     "metadata": {},
     "source": [
      "## Class for policy measure analysis\n",
      "We will `PolicyMeasures` class to find relationship of policy measures and parameter values of SIR-derived ODE models."
     ]
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "# Create analyser with tau value 360 [min] (can be changed)\n",
      "analyser = cs.PolicyMeasures(jhu_data, population_data, oxcgrt_data, tau=360)\n",
      "# The number of registerd countries\n",
      "len(analyser.countries)"
     ],
     "language": "python",
     "metadata": {
      "tags": []
     },
     "outputs": [
      {
       "output_type": "pyout",
       "prompt_number": 5,
       "text": [
        "184"
       ]
      }
     ],
     "prompt_number": 5
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "# We can get Scenario instance for detailed scenario analysis\n",
      "type(analyser.scenario(\"Japan\"))"
     ],
     "language": "python",
     "metadata": {},
     "outputs": [
      {
       "output_type": "pyout",
       "prompt_number": 6,
       "text": [
        "covsirphy.analysis.scenario.Scenario"
       ]
      }
     ],
     "prompt_number": 6
    },
    {
     "cell_type": "markdown",
     "metadata": {},
     "source": [
      "## Set phases with S-R trend analysis\n",
      "We will perform S-R trend analysis to set phases in all countries. Countries which do not have **9th phases** will be un-registered for the next analysis. This number will be adjusted for your analysis."
     ]
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "# Show the number of phases of all countries\n",
      "analyser.trend()\n",
      "pprint(analyser.phase_len(), compact=True)"
     ],
     "language": "python",
     "metadata": {},
     "outputs": [
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "{"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "3"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ": "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "['Dominica', 'Tanzania']"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        " "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "4"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ": "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "["
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Brunei'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Lesotho'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Mauritius'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Papua New Guinea'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        "     "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Antigua and Barbuda'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Seychelles'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Trinidad and Tobago'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Belize'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        "     "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Myanmar'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Bahamas'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "]"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        " "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "5"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ": "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "["
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Fiji'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Eritrea'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Malta'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Botswana'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Gambia'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Grenada'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Kyrgyzstan'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        "     "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Libya'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Namibia'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Guyana'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "]"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        " "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "6"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ": "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "["
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Liechtenstein'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Ethiopia'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Vietnam'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Norway'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Philippines'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        "     "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Venezuela'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Equatorial Guinea'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Paraguay'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Uganda'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Lebanon'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        "     "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Cambodia'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Yemen'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Zimbabwe'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Mongolia'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Israel'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Spain'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Syria'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        "     "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Netherlands'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Zambia'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'South Sudan'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Angola'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Morocco'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Montenegro'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        "     "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'New Zealand'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Iceland'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Central African Republic'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        "     "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Sao Tome and Principe'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Guatemala'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Ireland'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Jordan'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        "     "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Saint Vincent and the Grenadines'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "]"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        " "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "7"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ": "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "["
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Kazakhstan'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Nepal'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Taiwan'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Chad'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Kosovo'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Monaco'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Afghanistan'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        "     "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Saint Lucia'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Australia'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Palestine'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Slovakia'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Japan'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Madagascar'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        "     "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Costa Rica'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Burundi'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Cyprus'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'San Marino'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Nicaragua'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Malawi'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        "     "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Colombia'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Argentina'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Mozambique'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'India'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Rwanda'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "]"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        " "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "8"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ": "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "["
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Panama'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Slovenia'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Iraq'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Comoros'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Somalia'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Djibouti'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        "     "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Uzbekistan'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Ghana'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Sri Lanka'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Jamaica'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Cameroon'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Croatia'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        "     "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Oman'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Niger'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Kenya'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Swaziland'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Mauritania'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'South Africa'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        "     "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Ecuador'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Luxembourg'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Greece'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Suriname'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Bosnia and Herzegovina'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        "     "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Bhutan'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Barbados'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Congo'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Tajikistan'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Albania'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Thailand'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        "     "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Andorra'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Bermuda'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Finland'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Maldives'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Tunisia'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'China'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        "     "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Guinea-Bissau'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'El Salvador'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Sudan'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Pakistan'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "]"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        " "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "9"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ": "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "["
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Ukraine'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Honduras'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Moldova'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Uruguay'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Belarus'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Mali'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Belgium'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        "     "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Togo'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Liberia'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Indonesia'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Singapore'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Bulgaria'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Armenia'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        "     "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Haiti'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Cape Verde'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Canada'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Chile'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Gabon'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Austria'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        "     "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Czech Republic'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Malaysia'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Sierra Leone'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Azerbaijan'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Qatar'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        "     "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Germany'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Benin'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Korea, South'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Cuba'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "]"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        " "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "10"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ": "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "["
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Switzerland'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Bolivia'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Saudi Arabia'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Peru'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Algeria'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Denmark'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        "      "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Estonia'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Hungary'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Portugal'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Nigeria'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Egypt'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Romania'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Serbia'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        "      "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Latvia'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Poland'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Macedonia'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Senegal'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Lithuania'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Brazil'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        "      "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Burkina Faso'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Turkey'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "]"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        " "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "11"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ": "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "["
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Italy'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Georgia'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Kuwait'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Dominican Republic'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Iran'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Bangladesh'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        "      "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'France'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'United States'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Mexico'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Guinea'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "]"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        " "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "12"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ": "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "['United Arab Emirates', 'Bahrain', 'Russia']"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "}"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      }
     ],
     "prompt_number": 7
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "# Set phases with S-R trend analysis\n",
      "analyser.trend(min_len=11)\n",
      "# The number of countries\n",
      "len(analyser.countries)"
     ],
     "language": "python",
     "metadata": {},
     "outputs": [
      {
       "output_type": "pyout",
       "prompt_number": 8,
       "text": [
        "13"
       ]
      }
     ],
     "prompt_number": 8
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "phase_len_dict = analyser.phase_len()\n",
      "pprint(phase_len_dict, compact=True)"
     ],
     "language": "python",
     "metadata": {
      "tags": []
     },
     "outputs": [
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "{"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "11"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ": "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "["
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Italy'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Georgia'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Kuwait'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Dominican Republic'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Iran'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Bangladesh'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        "      "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'France'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'United States'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Mexico'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Guinea'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "]"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        " "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "12"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ": "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "['United Arab Emirates', 'Bahrain', 'Russia']"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "}"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      }
     ],
     "prompt_number": 9
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "# Here, only show the countries which have the most phases\n",
      "countries_show = max(phase_len_dict.items(), key=lambda x: x[0])[1]\n",
      "# Show summary\n",
      "analyser.summary(countries=countries_show)"
     ],
     "language": "python",
     "metadata": {
      "tags": []
     },
     "outputs": [
      {
       "html": [
        "<div>\n",
        "<style scoped>\n",
        "    .dataframe tbody tr th:only-of-type {\n",
        "        vertical-align: middle;\n",
        "    }\n",
        "\n",
        "    .dataframe tbody tr th {\n",
        "        vertical-align: top;\n",
        "    }\n",
        "\n",
        "    .dataframe thead th {\n",
        "        text-align: right;\n",
        "    }\n",
        "</style>\n",
        "<table border=\"1\" class=\"dataframe\">\n",
        "  <thead>\n",
        "    <tr style=\"text-align: right;\">\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th>Type</th>\n",
        "      <th>Start</th>\n",
        "      <th>End</th>\n",
        "      <th>Population</th>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>Country</th>\n",
        "      <th>Phase</th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "    </tr>\n",
        "  </thead>\n",
        "  <tbody>\n",
        "    <tr>\n",
        "      <th rowspan=\"12\" valign=\"top\">United Arab Emirates</th>\n",
        "      <th>0th</th>\n",
        "      <td>Past</td>\n",
        "      <td>12Feb2020</td>\n",
        "      <td>27Apr2020</td>\n",
        "      <td>9630959</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>1st</th>\n",
        "      <td>Past</td>\n",
        "      <td>28Apr2020</td>\n",
        "      <td>12May2020</td>\n",
        "      <td>9630959</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>2nd</th>\n",
        "      <td>Past</td>\n",
        "      <td>13May2020</td>\n",
        "      <td>20May2020</td>\n",
        "      <td>9630959</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>3rd</th>\n",
        "      <td>Past</td>\n",
        "      <td>21May2020</td>\n",
        "      <td>28May2020</td>\n",
        "      <td>9630959</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>4th</th>\n",
        "      <td>Past</td>\n",
        "      <td>29May2020</td>\n",
        "      <td>06Jun2020</td>\n",
        "      <td>9630959</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>5th</th>\n",
        "      <td>Past</td>\n",
        "      <td>07Jun2020</td>\n",
        "      <td>18Jun2020</td>\n",
        "      <td>9630959</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>6th</th>\n",
        "      <td>Past</td>\n",
        "      <td>19Jun2020</td>\n",
        "      <td>01Jul2020</td>\n",
        "      <td>9630959</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>7th</th>\n",
        "      <td>Past</td>\n",
        "      <td>02Jul2020</td>\n",
        "      <td>10Jul2020</td>\n",
        "      <td>9630959</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>8th</th>\n",
        "      <td>Past</td>\n",
        "      <td>11Jul2020</td>\n",
        "      <td>26Jul2020</td>\n",
        "      <td>9630959</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>9th</th>\n",
        "      <td>Past</td>\n",
        "      <td>27Jul2020</td>\n",
        "      <td>16Aug2020</td>\n",
        "      <td>9630959</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>10th</th>\n",
        "      <td>Past</td>\n",
        "      <td>17Aug2020</td>\n",
        "      <td>31Aug2020</td>\n",
        "      <td>9630959</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>11th</th>\n",
        "      <td>Past</td>\n",
        "      <td>01Sep2020</td>\n",
        "      <td>10Sep2020</td>\n",
        "      <td>9630959</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th rowspan=\"12\" valign=\"top\">Bahrain</th>\n",
        "      <th>0th</th>\n",
        "      <td>Past</td>\n",
        "      <td>06Mar2020</td>\n",
        "      <td>06May2020</td>\n",
        "      <td>1569439</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>1st</th>\n",
        "      <td>Past</td>\n",
        "      <td>07May2020</td>\n",
        "      <td>31May2020</td>\n",
        "      <td>1569439</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>2nd</th>\n",
        "      <td>Past</td>\n",
        "      <td>01Jun2020</td>\n",
        "      <td>11Jun2020</td>\n",
        "      <td>1569439</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>3rd</th>\n",
        "      <td>Past</td>\n",
        "      <td>12Jun2020</td>\n",
        "      <td>20Jun2020</td>\n",
        "      <td>1569439</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>4th</th>\n",
        "      <td>Past</td>\n",
        "      <td>21Jun2020</td>\n",
        "      <td>28Jun2020</td>\n",
        "      <td>1569439</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>5th</th>\n",
        "      <td>Past</td>\n",
        "      <td>29Jun2020</td>\n",
        "      <td>07Jul2020</td>\n",
        "      <td>1569439</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>6th</th>\n",
        "      <td>Past</td>\n",
        "      <td>08Jul2020</td>\n",
        "      <td>15Jul2020</td>\n",
        "      <td>1569439</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>7th</th>\n",
        "      <td>Past</td>\n",
        "      <td>16Jul2020</td>\n",
        "      <td>26Jul2020</td>\n",
        "      <td>1569439</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>8th</th>\n",
        "      <td>Past</td>\n",
        "      <td>27Jul2020</td>\n",
        "      <td>08Aug2020</td>\n",
        "      <td>1569439</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>9th</th>\n",
        "      <td>Past</td>\n",
        "      <td>09Aug2020</td>\n",
        "      <td>20Aug2020</td>\n",
        "      <td>1569439</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>10th</th>\n",
        "      <td>Past</td>\n",
        "      <td>21Aug2020</td>\n",
        "      <td>01Sep2020</td>\n",
        "      <td>1569439</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>11th</th>\n",
        "      <td>Past</td>\n",
        "      <td>02Sep2020</td>\n",
        "      <td>10Sep2020</td>\n",
        "      <td>1569439</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th rowspan=\"12\" valign=\"top\">Russia</th>\n",
        "      <th>0th</th>\n",
        "      <td>Past</td>\n",
        "      <td>12Feb2020</td>\n",
        "      <td>06May2020</td>\n",
        "      <td>330457362</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>1st</th>\n",
        "      <td>Past</td>\n",
        "      <td>07May2020</td>\n",
        "      <td>15May2020</td>\n",
        "      <td>330457362</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>2nd</th>\n",
        "      <td>Past</td>\n",
        "      <td>16May2020</td>\n",
        "      <td>23May2020</td>\n",
        "      <td>330457362</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>3rd</th>\n",
        "      <td>Past</td>\n",
        "      <td>24May2020</td>\n",
        "      <td>01Jun2020</td>\n",
        "      <td>330457362</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>4th</th>\n",
        "      <td>Past</td>\n",
        "      <td>02Jun2020</td>\n",
        "      <td>11Jun2020</td>\n",
        "      <td>330457362</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>5th</th>\n",
        "      <td>Past</td>\n",
        "      <td>12Jun2020</td>\n",
        "      <td>20Jun2020</td>\n",
        "      <td>330457362</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>6th</th>\n",
        "      <td>Past</td>\n",
        "      <td>21Jun2020</td>\n",
        "      <td>30Jun2020</td>\n",
        "      <td>330457362</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>7th</th>\n",
        "      <td>Past</td>\n",
        "      <td>01Jul2020</td>\n",
        "      <td>12Jul2020</td>\n",
        "      <td>330457362</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>8th</th>\n",
        "      <td>Past</td>\n",
        "      <td>13Jul2020</td>\n",
        "      <td>24Jul2020</td>\n",
        "      <td>330457362</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>9th</th>\n",
        "      <td>Past</td>\n",
        "      <td>25Jul2020</td>\n",
        "      <td>07Aug2020</td>\n",
        "      <td>330457362</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>10th</th>\n",
        "      <td>Past</td>\n",
        "      <td>08Aug2020</td>\n",
        "      <td>23Aug2020</td>\n",
        "      <td>330457362</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>11th</th>\n",
        "      <td>Past</td>\n",
        "      <td>24Aug2020</td>\n",
        "      <td>10Sep2020</td>\n",
        "      <td>330457362</td>\n",
        "    </tr>\n",
        "  </tbody>\n",
        "</table>\n",
        "</div>"
       ],
       "output_type": "pyout",
       "prompt_number": 10,
       "text": [
        "                            Type      Start        End  Population\n",
        "Country              Phase                                        \n",
        "United Arab Emirates 0th    Past  12Feb2020  27Apr2020     9630959\n",
        "                     1st    Past  28Apr2020  12May2020     9630959\n",
        "                     2nd    Past  13May2020  20May2020     9630959\n",
        "                     3rd    Past  21May2020  28May2020     9630959\n",
        "                     4th    Past  29May2020  06Jun2020     9630959\n",
        "                     5th    Past  07Jun2020  18Jun2020     9630959\n",
        "                     6th    Past  19Jun2020  01Jul2020     9630959\n",
        "                     7th    Past  02Jul2020  10Jul2020     9630959\n",
        "                     8th    Past  11Jul2020  26Jul2020     9630959\n",
        "                     9th    Past  27Jul2020  16Aug2020     9630959\n",
        "                     10th   Past  17Aug2020  31Aug2020     9630959\n",
        "                     11th   Past  01Sep2020  10Sep2020     9630959\n",
        "Bahrain              0th    Past  06Mar2020  06May2020     1569439\n",
        "                     1st    Past  07May2020  31May2020     1569439\n",
        "                     2nd    Past  01Jun2020  11Jun2020     1569439\n",
        "                     3rd    Past  12Jun2020  20Jun2020     1569439\n",
        "                     4th    Past  21Jun2020  28Jun2020     1569439\n",
        "                     5th    Past  29Jun2020  07Jul2020     1569439\n",
        "                     6th    Past  08Jul2020  15Jul2020     1569439\n",
        "                     7th    Past  16Jul2020  26Jul2020     1569439\n",
        "                     8th    Past  27Jul2020  08Aug2020     1569439\n",
        "                     9th    Past  09Aug2020  20Aug2020     1569439\n",
        "                     10th   Past  21Aug2020  01Sep2020     1569439\n",
        "                     11th   Past  02Sep2020  10Sep2020     1569439\n",
        "Russia               0th    Past  12Feb2020  06May2020   330457362\n",
        "                     1st    Past  07May2020  15May2020   330457362\n",
        "                     2nd    Past  16May2020  23May2020   330457362\n",
        "                     3rd    Past  24May2020  01Jun2020   330457362\n",
        "                     4th    Past  02Jun2020  11Jun2020   330457362\n",
        "                     5th    Past  12Jun2020  20Jun2020   330457362\n",
        "                     6th    Past  21Jun2020  30Jun2020   330457362\n",
        "                     7th    Past  01Jul2020  12Jul2020   330457362\n",
        "                     8th    Past  13Jul2020  24Jul2020   330457362\n",
        "                     9th    Past  25Jul2020  07Aug2020   330457362\n",
        "                     10th   Past  08Aug2020  23Aug2020   330457362\n",
        "                     11th   Past  24Aug2020  10Sep2020   330457362"
       ]
      }
     ],
     "prompt_number": 10
    },
    {
     "cell_type": "markdown",
     "metadata": {},
     "source": [
      "## Parameter estimation\n",
      "we will estimate the parameter values with SIR-derived ODE models in each country."
     ]
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "# Parameter estimation with SIR-F model\n",
      "analyser.estimate(cs.SIRF)"
     ],
     "language": "python",
     "metadata": {
      "tags": []
     },
     "outputs": [
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n",
        "<SIR-F model: parameter estimation>"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "Running optimization with 4 CPUs..."
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tBHR, 10th phase (21Aug2020 - 01Sep2020): finished  446 trials in 0 min 15 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tUSA,  5th phase (08Jul2020 - 17Jul2020): finished  433 trials in 0 min 15 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tUSA,  9th phase (15Aug2020 - 26Aug2020): finished  301 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tGEO,  8th phase (08Aug2020 - 17Aug2020): finished 1385 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tDOM,  4th phase (08Jul2020 - 16Jul2020): finished 1369 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tIRN,  3rd phase (13May2020 - 31May2020): finished  161 trials in 0 min  5 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tMEX,  5th phase (09Jul2020 - 17Jul2020): finished 1373 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tARE,  1st phase (28Apr2020 - 12May2020): finished 1361 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tBGD,  9th phase (17Aug2020 - 27Aug2020): finished  441 trials in 0 min 15 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tIRN,  8th phase (28Jul2020 - 09Aug2020): finished 1321 trials in 0 min 55 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tBGD,  2nd phase (11Jun2020 - 19Jun2020): finished 1415 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tKWT,  5th phase (04Jul2020 - 14Jul2020): finished  302 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tITA,  7th phase (20May2020 - 05Jun2020): finished  171 trials in 0 min  5 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tKWT,  2nd phase (28May2020 - 07Jun2020): finished 1390 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tBGD,  1st phase (27May2020 - 10Jun2020): finished 1401 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tMEX,  2nd phase (06Jun2020 - 18Jun2020): finished  158 trials in 0 min  5 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tGIN,  9th phase (17Aug2020 - 28Aug2020): finished 1410 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tBHR,  2nd phase (01Jun2020 - 11Jun2020): finished 1411 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tRUS,  4th phase (02Jun2020 - 11Jun2020): finished 1405 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tIRN,  9th phase (10Aug2020 - 23Aug2020): finished  306 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tBHR,  5th phase (29Jun2020 - 07Jul2020): finished 1423 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tITA,  5th phase (01May2020 - 09May2020): finished  565 trials in 0 min 20 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tGIN,  1st phase (01May2020 - 12May2020): finished 1419 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tFRA,  3rd phase (13Apr2020 - 24Apr2020): finished 1435 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tRUS,  6th phase (21Jun2020 - 30Jun2020): finished 1424 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tITA,  3rd phase (10Apr2020 - 18Apr2020): finished  410 trials in 0 min 15 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tFRA,  4th phase (25Apr2020 - 04May2020): finished 1402 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tBGD,  4th phase (29Jun2020 - 06Jul2020): finished  775 trials in 0 min 30 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tBHR,  1st phase (07May2020 - 31May2020): finished 1366 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tARE, 10th phase (17Aug2020 - 31Aug2020): finished  565 trials in 0 min 20 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tFRA,  9th phase (06Aug2020 - 24Aug2020): finished  561 trials in 0 min 20 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tUSA,  7th phase (27Jul2020 - 04Aug2020): finished  154 trials in 0 min  5 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tARE,  9th phase (27Jul2020 - 16Aug2020): finished  545 trials in 0 min 20 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tITA,  9th phase (10Jul2020 - 15Aug2020): finished 1363 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tMEX,  3rd phase (19Jun2020 - 29Jun2020): finished 1295 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tITA,  6th phase (10May2020 - 19May2020): finished  215 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tIRN, 10th phase (24Aug2020 - 10Sep2020): finished  305 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tRUS,  1st phase (07May2020 - 15May2020): finished 1208 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tGIN,  6th phase (09Jul2020 - 23Jul2020): finished 1168 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tFRA, 10th phase (25Aug2020 - 10Sep2020): finished 1177 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tMEX,  0th phase (03Mar2020 - 20May2020): finished 1282 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tBGD,  5th phase (07Jul2020 - 15Jul2020): finished 1371 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tGIN,  5th phase (20Jun2020 - 08Jul2020): finished  259 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tIRN,  0th phase (26Feb2020 - 29Mar2020): finished 1352 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tARE,  2nd phase (13May2020 - 20May2020): finished 1362 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tIRN,  2nd phase (18Apr2020 - 12May2020): finished  382 trials in 0 min 15 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tIRN,  5th phase (16Jun2020 - 29Jun2020): finished 1347 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tBHR,  9th phase (09Aug2020 - 20Aug2020): finished 1361 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tRUS,  8th phase (13Jul2020 - 24Jul2020): finished 1383 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tDOM,  9th phase (20Aug2020 - 31Aug2020): finished  351 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tITA,  0th phase (24Feb2020 - 20Mar2020): finished 1461 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tUSA,  0th phase (09Feb2020 - 17Apr2020): finished 1426 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tGIN,  2nd phase (13May2020 - 26May2020): finished 1465 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tARE,  0th phase (12Feb2020 - 27Apr2020): finished 1395 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tGEO,  3rd phase (14May2020 - 29May2020): finished 1420 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tARE,  8th phase (11Jul2020 - 26Jul2020): finished  304 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tKWT,  3rd phase (08Jun2020 - 21Jun2020): finished  240 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tGEO,  2nd phase (29Apr2020 - 13May2020): finished 1362 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tGEO,  6th phase (07Jul2020 - 21Jul2020): finished 1302 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tUSA,  8th phase (05Aug2020 - 14Aug2020): finished  503 trials in 0 min 20 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tARE,  7th phase (02Jul2020 - 10Jul2020): finished 1325 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tIRN,  4th phase (01Jun2020 - 15Jun2020): finished 1380 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tMEX,  6th phase (18Jul2020 - 28Jul2020): finished 1387 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tGEO,  1st phase (12Apr2020 - 28Apr2020): finished 1404 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tUSA,  1st phase (18Apr2020 - 10May2020): finished 1369 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tARE,  5th phase (07Jun2020 - 18Jun2020): finished  985 trials in 0 min 40 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tKWT,  4th phase (22Jun2020 - 03Jul2020): finished 1344 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tGIN,  8th phase (06Aug2020 - 16Aug2020): finished 1364 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tGEO,  9th phase (18Aug2020 - 31Aug2020): finished 1383 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tDOM,  2nd phase (05Jun2020 - 24Jun2020): finished 1389 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tRUS,  2nd phase (16May2020 - 23May2020): finished 1391 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tFRA,  5th phase (05May2020 - 26May2020): finished 1383 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tITA, 10th phase (16Aug2020 - 10Sep2020): finished  166 trials in 0 min  5 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tITA,  2nd phase (29Mar2020 - 09Apr2020): finished 1389 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tRUS,  7th phase (01Jul2020 - 12Jul2020): finished 1383 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tDOM,  0th phase (24Mar2020 - 08May2020): finished 1350 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tGIN,  3rd phase (27May2020 - 06Jun2020): finished 1378 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tKWT,  1st phase (14May2020 - 27May2020): finished 1378 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tDOM,  5th phase (17Jul2020 - 24Jul2020): finished  708 trials in 0 min 25 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tRUS, 10th phase (08Aug2020 - 23Aug2020): finished 1419 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tGIN, 10th phase (29Aug2020 - 10Sep2020): finished  452 trials in 0 min 15 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tGEO,  7th phase (22Jul2020 - 07Aug2020): finished  320 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tMEX,  7th phase (29Jul2020 - 06Aug2020): finished 1428 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tFRA,  0th phase (12Feb2020 - 24Mar2020): finished 1231 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tFRA,  7th phase (22Jun2020 - 17Jul2020): finished  670 trials in 0 min 25 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tBHR,  7th phase (16Jul2020 - 26Jul2020): finished 1409 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tDOM,  7th phase (02Aug2020 - 10Aug2020): finished 1064 trials in 0 min 45 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tARE, 11th phase (01Sep2020 - 10Sep2020): finished 1307 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tUSA,  2nd phase (11May2020 - 04Jun2020): finished 1268 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tBHR, 11th phase (02Sep2020 - 10Sep2020): finished 1285 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tDOM,  8th phase (11Aug2020 - 19Aug2020): finished  280 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tUSA, 10th phase (27Aug2020 - 10Sep2020): finished  812 trials in 0 min 30 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tBHR,  4th phase (21Jun2020 - 28Jun2020): finished 1381 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tUSA,  6th phase (18Jul2020 - 26Jul2020): finished  463 trials in 0 min 15 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tRUS,  0th phase (12Feb2020 - 06May2020): finished 1376 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tGEO,  5th phase (13Jun2020 - 06Jul2020): finished 1358 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tFRA,  6th phase (27May2020 - 21Jun2020): finished 1197 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tMEX,  1st phase (21May2020 - 05Jun2020): finished 1211 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tIRN,  6th phase (30Jun2020 - 12Jul2020): finished  149 trials in 0 min  5 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tGIN,  4th phase (07Jun2020 - 19Jun2020): finished 1279 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tGEO,  4th phase (30May2020 - 12Jun2020): finished 1323 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tFRA,  1st phase (25Mar2020 - 02Apr2020): finished 1425 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tBGD,  0th phase (16Mar2020 - 26May2020): finished 1375 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tRUS,  9th phase (25Jul2020 - 07Aug2020): finished 1375 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tARE,  4th phase (29May2020 - 06Jun2020): finished 1427 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tBGD,  8th phase (07Aug2020 - 16Aug2020): finished  312 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tITA,  4th phase (19Apr2020 - 30Apr2020): finished  428 trials in 0 min 15 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tBGD,  3rd phase (20Jun2020 - 28Jun2020): finished 1406 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tFRA,  2nd phase (03Apr2020 - 12Apr2020): finished 1401 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tARE,  6th phase (19Jun2020 - 01Jul2020): finished  991 trials in 0 min 40 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tMEX,  4th phase (30Jun2020 - 08Jul2020): finished  167 trials in 0 min  5 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tITA,  8th phase (06Jun2020 - 09Jul2020): finished  696 trials in 0 min 25 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tDOM,  1st phase (09May2020 - 04Jun2020): finished  564 trials in 0 min 20 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tDOM,  6th phase (25Jul2020 - 01Aug2020): finished 1067 trials in 0 min 40 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tBGD,  7th phase (26Jul2020 - 06Aug2020): finished  413 trials in 0 min 15 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tBHR,  0th phase (06Mar2020 - 06May2020): finished 1304 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tDOM,  3rd phase (25Jun2020 - 07Jul2020): finished 1349 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tIRN,  7th phase (13Jul2020 - 27Jul2020): finished  170 trials in 0 min  5 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tKWT,  9th phase (20Aug2020 - 30Aug2020): finished  322 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tGEO,  0th phase (16Mar2020 - 11Apr2020): finished 1346 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tKWT,  0th phase (08Mar2020 - 13May2020): finished 1211 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tBHR,  3rd phase (12Jun2020 - 20Jun2020): finished  170 trials in 0 min  5 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tRUS,  3rd phase (24May2020 - 01Jun2020): finished 1487 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tKWT, 10th phase (31Aug2020 - 10Sep2020): finished 1499 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tFRA,  8th phase (18Jul2020 - 05Aug2020): finished  723 trials in 0 min 25 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tIRN,  1st phase (30Mar2020 - 17Apr2020): finished 1453 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tARE,  3rd phase (21May2020 - 28May2020): finished 1426 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tKWT,  7th phase (27Jul2020 - 08Aug2020): finished 1403 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tGIN,  7th phase (24Jul2020 - 05Aug2020): finished  339 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tITA,  1st phase (21Mar2020 - 28Mar2020): finished 1456 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tBGD, 10th phase (28Aug2020 - 10Sep2020): finished  502 trials in 0 min 15 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tGIN,  0th phase (03Apr2020 - 30Apr2020): finished 1486 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tBGD,  6th phase (16Jul2020 - 25Jul2020): finished  186 trials in 0 min  5 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tBHR,  6th phase (08Jul2020 - 15Jul2020): finished 1846 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tKWT,  8th phase (09Aug2020 - 19Aug2020): finished 1703 trials in 0 min 55 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tKWT,  6th phase (15Jul2020 - 26Jul2020): finished  435 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "Completed optimization. Total: 27 min 27 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      }
     ],
     "prompt_number": 11
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "# Show summary\n",
      "analyser.summary(countries=countries_show)"
     ],
     "language": "python",
     "metadata": {},
     "outputs": [
      {
       "html": [
        "<div>\n",
        "<style scoped>\n",
        "    .dataframe tbody tr th:only-of-type {\n",
        "        vertical-align: middle;\n",
        "    }\n",
        "\n",
        "    .dataframe tbody tr th {\n",
        "        vertical-align: top;\n",
        "    }\n",
        "\n",
        "    .dataframe thead th {\n",
        "        text-align: right;\n",
        "    }\n",
        "</style>\n",
        "<table border=\"1\" class=\"dataframe\">\n",
        "  <thead>\n",
        "    <tr style=\"text-align: right;\">\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th>Type</th>\n",
        "      <th>Start</th>\n",
        "      <th>End</th>\n",
        "      <th>Population</th>\n",
        "      <th>ODE</th>\n",
        "      <th>Rt</th>\n",
        "      <th>theta</th>\n",
        "      <th>kappa</th>\n",
        "      <th>rho</th>\n",
        "      <th>sigma</th>\n",
        "      <th>tau</th>\n",
        "      <th>alpha1 [-]</th>\n",
        "      <th>1/gamma [day]</th>\n",
        "      <th>1/beta [day]</th>\n",
        "      <th>1/alpha2 [day]</th>\n",
        "      <th>RMSLE</th>\n",
        "      <th>Trials</th>\n",
        "      <th>Runtime</th>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>Country</th>\n",
        "      <th>Phase</th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "    </tr>\n",
        "  </thead>\n",
        "  <tbody>\n",
        "    <tr>\n",
        "      <th rowspan=\"12\" valign=\"top\">United Arab Emirates</th>\n",
        "      <th>0th</th>\n",
        "      <td>Past</td>\n",
        "      <td>12Feb2020</td>\n",
        "      <td>27Apr2020</td>\n",
        "      <td>9630959</td>\n",
        "      <td>SIR-F</td>\n",
        "      <td>1.35</td>\n",
        "      <td>0.00126835</td>\n",
        "      <td>0.00040644</td>\n",
        "      <td>0.00555763</td>\n",
        "      <td>0.0037045</td>\n",
        "      <td>360</td>\n",
        "      <td>0.001</td>\n",
        "      <td>67</td>\n",
        "      <td>44</td>\n",
        "      <td>615</td>\n",
        "      <td>9.31954</td>\n",
        "      <td>1395</td>\n",
        "      <td>1 min  0 sec</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>1st</th>\n",
        "      <td>Past</td>\n",
        "      <td>28Apr2020</td>\n",
        "      <td>12May2020</td>\n",
        "      <td>9630959</td>\n",
        "      <td>SIR-F</td>\n",
        "      <td>2.66</td>\n",
        "      <td>0.00112211</td>\n",
        "      <td>0.000161783</td>\n",
        "      <td>0.013316</td>\n",
        "      <td>0.004843</td>\n",
        "      <td>360</td>\n",
        "      <td>0.001</td>\n",
        "      <td>51</td>\n",
        "      <td>18</td>\n",
        "      <td>1545</td>\n",
        "      <td>0.0895587</td>\n",
        "      <td>1361</td>\n",
        "      <td>1 min  0 sec</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>2nd</th>\n",
        "      <td>Past</td>\n",
        "      <td>13May2020</td>\n",
        "      <td>20May2020</td>\n",
        "      <td>9630959</td>\n",
        "      <td>SIR-F</td>\n",
        "      <td>1.29</td>\n",
        "      <td>0.000158845</td>\n",
        "      <td>5.96006e-05</td>\n",
        "      <td>0.0134786</td>\n",
        "      <td>0.0104185</td>\n",
        "      <td>360</td>\n",
        "      <td>0</td>\n",
        "      <td>23</td>\n",
        "      <td>18</td>\n",
        "      <td>4194</td>\n",
        "      <td>0.0367868</td>\n",
        "      <td>1362</td>\n",
        "      <td>1 min  0 sec</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>3rd</th>\n",
        "      <td>Past</td>\n",
        "      <td>21May2020</td>\n",
        "      <td>28May2020</td>\n",
        "      <td>9630959</td>\n",
        "      <td>SIR-F</td>\n",
        "      <td>1.59</td>\n",
        "      <td>0.00125237</td>\n",
        "      <td>4.57341e-05</td>\n",
        "      <td>0.0136915</td>\n",
        "      <td>0.00857704</td>\n",
        "      <td>360</td>\n",
        "      <td>0.001</td>\n",
        "      <td>29</td>\n",
        "      <td>18</td>\n",
        "      <td>5466</td>\n",
        "      <td>0.0338072</td>\n",
        "      <td>1426</td>\n",
        "      <td>1 min  0 sec</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>4th</th>\n",
        "      <td>Past</td>\n",
        "      <td>29May2020</td>\n",
        "      <td>06Jun2020</td>\n",
        "      <td>9630959</td>\n",
        "      <td>SIR-F</td>\n",
        "      <td>1.48</td>\n",
        "      <td>0.000678913</td>\n",
        "      <td>2.12702e-05</td>\n",
        "      <td>0.00952923</td>\n",
        "      <td>0.0064027</td>\n",
        "      <td>360</td>\n",
        "      <td>0.001</td>\n",
        "      <td>39</td>\n",
        "      <td>26</td>\n",
        "      <td>11753</td>\n",
        "      <td>0.0110623</td>\n",
        "      <td>1427</td>\n",
        "      <td>1 min  0 sec</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>5th</th>\n",
        "      <td>Past</td>\n",
        "      <td>07Jun2020</td>\n",
        "      <td>18Jun2020</td>\n",
        "      <td>9630959</td>\n",
        "      <td>SIR-F</td>\n",
        "      <td>0.6</td>\n",
        "      <td>0.000682643</td>\n",
        "      <td>2.12553e-05</td>\n",
        "      <td>0.00763791</td>\n",
        "      <td>0.0126261</td>\n",
        "      <td>360</td>\n",
        "      <td>0.001</td>\n",
        "      <td>19</td>\n",
        "      <td>32</td>\n",
        "      <td>11761</td>\n",
        "      <td>0.0184546</td>\n",
        "      <td>985</td>\n",
        "      <td>0 min 40 sec</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>6th</th>\n",
        "      <td>Past</td>\n",
        "      <td>19Jun2020</td>\n",
        "      <td>01Jul2020</td>\n",
        "      <td>9630959</td>\n",
        "      <td>SIR-F</td>\n",
        "      <td>0.7</td>\n",
        "      <td>0.000678967</td>\n",
        "      <td>2.12578e-05</td>\n",
        "      <td>0.0097663</td>\n",
        "      <td>0.0139428</td>\n",
        "      <td>360</td>\n",
        "      <td>0.001</td>\n",
        "      <td>17</td>\n",
        "      <td>25</td>\n",
        "      <td>11760</td>\n",
        "      <td>0.0178067</td>\n",
        "      <td>991</td>\n",
        "      <td>0 min 40 sec</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>7th</th>\n",
        "      <td>Past</td>\n",
        "      <td>02Jul2020</td>\n",
        "      <td>10Jul2020</td>\n",
        "      <td>9630959</td>\n",
        "      <td>SIR-F</td>\n",
        "      <td>1.07</td>\n",
        "      <td>0.000158678</td>\n",
        "      <td>5.96767e-05</td>\n",
        "      <td>0.014062</td>\n",
        "      <td>0.0130271</td>\n",
        "      <td>360</td>\n",
        "      <td>0</td>\n",
        "      <td>19</td>\n",
        "      <td>17</td>\n",
        "      <td>4189</td>\n",
        "      <td>0.0359739</td>\n",
        "      <td>1325</td>\n",
        "      <td>1 min  0 sec</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>8th</th>\n",
        "      <td>Past</td>\n",
        "      <td>11Jul2020</td>\n",
        "      <td>26Jul2020</td>\n",
        "      <td>9630959</td>\n",
        "      <td>SIR-F</td>\n",
        "      <td>0.65</td>\n",
        "      <td>0.00341762</td>\n",
        "      <td>1.85682e-06</td>\n",
        "      <td>0.0101174</td>\n",
        "      <td>0.0155432</td>\n",
        "      <td>360</td>\n",
        "      <td>0.003</td>\n",
        "      <td>16</td>\n",
        "      <td>24</td>\n",
        "      <td>134638</td>\n",
        "      <td>0.0502542</td>\n",
        "      <td>304</td>\n",
        "      <td>0 min 10 sec</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>9th</th>\n",
        "      <td>Past</td>\n",
        "      <td>27Jul2020</td>\n",
        "      <td>16Aug2020</td>\n",
        "      <td>9630959</td>\n",
        "      <td>SIR-F</td>\n",
        "      <td>0.89</td>\n",
        "      <td>0.000659568</td>\n",
        "      <td>3.69124e-05</td>\n",
        "      <td>0.0110426</td>\n",
        "      <td>0.0123334</td>\n",
        "      <td>360</td>\n",
        "      <td>0.001</td>\n",
        "      <td>20</td>\n",
        "      <td>22</td>\n",
        "      <td>6772</td>\n",
        "      <td>0.039708</td>\n",
        "      <td>545</td>\n",
        "      <td>0 min 20 sec</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>10th</th>\n",
        "      <td>Past</td>\n",
        "      <td>17Aug2020</td>\n",
        "      <td>31Aug2020</td>\n",
        "      <td>9630959</td>\n",
        "      <td>SIR-F</td>\n",
        "      <td>1.82</td>\n",
        "      <td>0.000663328</td>\n",
        "      <td>3.68971e-05</td>\n",
        "      <td>0.0130926</td>\n",
        "      <td>0.00715663</td>\n",
        "      <td>360</td>\n",
        "      <td>0.001</td>\n",
        "      <td>34</td>\n",
        "      <td>19</td>\n",
        "      <td>6775</td>\n",
        "      <td>0.0565318</td>\n",
        "      <td>565</td>\n",
        "      <td>0 min 20 sec</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>11th</th>\n",
        "      <td>Past</td>\n",
        "      <td>01Sep2020</td>\n",
        "      <td>10Sep2020</td>\n",
        "      <td>9630959</td>\n",
        "      <td>SIR-F</td>\n",
        "      <td>1.27</td>\n",
        "      <td>0.00125504</td>\n",
        "      <td>1.43666e-06</td>\n",
        "      <td>0.0184096</td>\n",
        "      <td>0.0144581</td>\n",
        "      <td>360</td>\n",
        "      <td>0.001</td>\n",
        "      <td>17</td>\n",
        "      <td>13</td>\n",
        "      <td>174014</td>\n",
        "      <td>0.115597</td>\n",
        "      <td>1307</td>\n",
        "      <td>1 min  0 sec</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th rowspan=\"12\" valign=\"top\">Bahrain</th>\n",
        "      <th>0th</th>\n",
        "      <td>Past</td>\n",
        "      <td>06Mar2020</td>\n",
        "      <td>06May2020</td>\n",
        "      <td>1569439</td>\n",
        "      <td>SIR-F</td>\n",
        "      <td>1.68</td>\n",
        "      <td>0.000408827</td>\n",
        "      <td>0.000256613</td>\n",
        "      <td>0.0276043</td>\n",
        "      <td>0.0161614</td>\n",
        "      <td>360</td>\n",
        "      <td>0</td>\n",
        "      <td>15</td>\n",
        "      <td>9</td>\n",
        "      <td>974</td>\n",
        "      <td>1.56863</td>\n",
        "      <td>1304</td>\n",
        "      <td>1 min  0 sec</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>1st</th>\n",
        "      <td>Past</td>\n",
        "      <td>07May2020</td>\n",
        "      <td>31May2020</td>\n",
        "      <td>1569439</td>\n",
        "      <td>SIR-F</td>\n",
        "      <td>2.06</td>\n",
        "      <td>0.00111161</td>\n",
        "      <td>1.03769e-05</td>\n",
        "      <td>0.0168814</td>\n",
        "      <td>0.00818862</td>\n",
        "      <td>360</td>\n",
        "      <td>0.001</td>\n",
        "      <td>30</td>\n",
        "      <td>14</td>\n",
        "      <td>24092</td>\n",
        "      <td>0.287163</td>\n",
        "      <td>1366</td>\n",
        "      <td>1 min  0 sec</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>2nd</th>\n",
        "      <td>Past</td>\n",
        "      <td>01Jun2020</td>\n",
        "      <td>11Jun2020</td>\n",
        "      <td>1569439</td>\n",
        "      <td>SIR-F</td>\n",
        "      <td>1.14</td>\n",
        "      <td>0.000158383</td>\n",
        "      <td>5.96667e-05</td>\n",
        "      <td>0.0224897</td>\n",
        "      <td>0.0197021</td>\n",
        "      <td>360</td>\n",
        "      <td>0</td>\n",
        "      <td>12</td>\n",
        "      <td>11</td>\n",
        "      <td>4189</td>\n",
        "      <td>0.0589083</td>\n",
        "      <td>1411</td>\n",
        "      <td>1 min  0 sec</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>3rd</th>\n",
        "      <td>Past</td>\n",
        "      <td>12Jun2020</td>\n",
        "      <td>20Jun2020</td>\n",
        "      <td>1569439</td>\n",
        "      <td>SIR-F</td>\n",
        "      <td>1.1</td>\n",
        "      <td>0.00220653</td>\n",
        "      <td>9.34559e-05</td>\n",
        "      <td>0.0234495</td>\n",
        "      <td>0.0211901</td>\n",
        "      <td>360</td>\n",
        "      <td>0.002</td>\n",
        "      <td>11</td>\n",
        "      <td>10</td>\n",
        "      <td>2675</td>\n",
        "      <td>0.0266207</td>\n",
        "      <td>170</td>\n",
        "      <td>0 min  5 sec</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>4th</th>\n",
        "      <td>Past</td>\n",
        "      <td>21Jun2020</td>\n",
        "      <td>28Jun2020</td>\n",
        "      <td>1569439</td>\n",
        "      <td>SIR-F</td>\n",
        "      <td>1.1</td>\n",
        "      <td>0.00034297</td>\n",
        "      <td>7.91242e-05</td>\n",
        "      <td>0.0295616</td>\n",
        "      <td>0.0268356</td>\n",
        "      <td>360</td>\n",
        "      <td>0</td>\n",
        "      <td>9</td>\n",
        "      <td>8</td>\n",
        "      <td>3159</td>\n",
        "      <td>0.0304475</td>\n",
        "      <td>1381</td>\n",
        "      <td>1 min  0 sec</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>5th</th>\n",
        "      <td>Past</td>\n",
        "      <td>29Jun2020</td>\n",
        "      <td>07Jul2020</td>\n",
        "      <td>1569439</td>\n",
        "      <td>SIR-F</td>\n",
        "      <td>0.9</td>\n",
        "      <td>0.000433256</td>\n",
        "      <td>9.80641e-05</td>\n",
        "      <td>0.0273549</td>\n",
        "      <td>0.0301332</td>\n",
        "      <td>360</td>\n",
        "      <td>0</td>\n",
        "      <td>8</td>\n",
        "      <td>9</td>\n",
        "      <td>2549</td>\n",
        "      <td>0.0250595</td>\n",
        "      <td>1423</td>\n",
        "      <td>1 min  0 sec</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>6th</th>\n",
        "      <td>Past</td>\n",
        "      <td>08Jul2020</td>\n",
        "      <td>15Jul2020</td>\n",
        "      <td>1569439</td>\n",
        "      <td>SIR-F</td>\n",
        "      <td>0.87</td>\n",
        "      <td>0.000491057</td>\n",
        "      <td>0.000105726</td>\n",
        "      <td>0.0307505</td>\n",
        "      <td>0.0350343</td>\n",
        "      <td>360</td>\n",
        "      <td>0</td>\n",
        "      <td>7</td>\n",
        "      <td>8</td>\n",
        "      <td>2364</td>\n",
        "      <td>0.0176851</td>\n",
        "      <td>1846</td>\n",
        "      <td>1 min  0 sec</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>7th</th>\n",
        "      <td>Past</td>\n",
        "      <td>16Jul2020</td>\n",
        "      <td>26Jul2020</td>\n",
        "      <td>1569439</td>\n",
        "      <td>SIR-F</td>\n",
        "      <td>0.85</td>\n",
        "      <td>0.00046404</td>\n",
        "      <td>8.39734e-05</td>\n",
        "      <td>0.0279484</td>\n",
        "      <td>0.0329592</td>\n",
        "      <td>360</td>\n",
        "      <td>0</td>\n",
        "      <td>7</td>\n",
        "      <td>8</td>\n",
        "      <td>2977</td>\n",
        "      <td>0.0169771</td>\n",
        "      <td>1409</td>\n",
        "      <td>1 min  0 sec</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>8th</th>\n",
        "      <td>Past</td>\n",
        "      <td>27Jul2020</td>\n",
        "      <td>08Aug2020</td>\n",
        "      <td>1569439</td>\n",
        "      <td>-</td>\n",
        "      <td>-</td>\n",
        "      <td>-</td>\n",
        "      <td>-</td>\n",
        "      <td>-</td>\n",
        "      <td>-</td>\n",
        "      <td>-</td>\n",
        "      <td>-</td>\n",
        "      <td>-</td>\n",
        "      <td>-</td>\n",
        "      <td>-</td>\n",
        "      <td>-</td>\n",
        "      <td>-</td>\n",
        "      <td>-</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>9th</th>\n",
        "      <td>Past</td>\n",
        "      <td>09Aug2020</td>\n",
        "      <td>20Aug2020</td>\n",
        "      <td>1569439</td>\n",
        "      <td>SIR-F</td>\n",
        "      <td>1.27</td>\n",
        "      <td>0.000773339</td>\n",
        "      <td>7.74819e-05</td>\n",
        "      <td>0.0302769</td>\n",
        "      <td>0.0237384</td>\n",
        "      <td>360</td>\n",
        "      <td>0.001</td>\n",
        "      <td>10</td>\n",
        "      <td>8</td>\n",
        "      <td>3226</td>\n",
        "      <td>0.0328754</td>\n",
        "      <td>1361</td>\n",
        "      <td>1 min  0 sec</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>10th</th>\n",
        "      <td>Past</td>\n",
        "      <td>21Aug2020</td>\n",
        "      <td>01Sep2020</td>\n",
        "      <td>1569439</td>\n",
        "      <td>SIR-F</td>\n",
        "      <td>0.9</td>\n",
        "      <td>0.000420538</td>\n",
        "      <td>7.93641e-05</td>\n",
        "      <td>0.0289548</td>\n",
        "      <td>0.0320197</td>\n",
        "      <td>360</td>\n",
        "      <td>0</td>\n",
        "      <td>7</td>\n",
        "      <td>8</td>\n",
        "      <td>3150</td>\n",
        "      <td>0.0275449</td>\n",
        "      <td>446</td>\n",
        "      <td>0 min 15 sec</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>11th</th>\n",
        "      <td>Past</td>\n",
        "      <td>02Sep2020</td>\n",
        "      <td>10Sep2020</td>\n",
        "      <td>1569439</td>\n",
        "      <td>SIR-F</td>\n",
        "      <td>2.19</td>\n",
        "      <td>0.00065854</td>\n",
        "      <td>3.69154e-05</td>\n",
        "      <td>0.0431042</td>\n",
        "      <td>0.0196001</td>\n",
        "      <td>360</td>\n",
        "      <td>0.001</td>\n",
        "      <td>12</td>\n",
        "      <td>5</td>\n",
        "      <td>6772</td>\n",
        "      <td>0.0262521</td>\n",
        "      <td>1285</td>\n",
        "      <td>1 min  0 sec</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th rowspan=\"12\" valign=\"top\">Russia</th>\n",
        "      <th>0th</th>\n",
        "      <td>Past</td>\n",
        "      <td>12Feb2020</td>\n",
        "      <td>06May2020</td>\n",
        "      <td>330457362</td>\n",
        "      <td>SIR-F</td>\n",
        "      <td>0.02</td>\n",
        "      <td>0.602763</td>\n",
        "      <td>0.544883</td>\n",
        "      <td>0.0340813</td>\n",
        "      <td>0.00229851</td>\n",
        "      <td>360</td>\n",
        "      <td>0.603</td>\n",
        "      <td>108</td>\n",
        "      <td>7</td>\n",
        "      <td>0</td>\n",
        "      <td>18.9667</td>\n",
        "      <td>1376</td>\n",
        "      <td>1 min  0 sec</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>1st</th>\n",
        "      <td>Past</td>\n",
        "      <td>07May2020</td>\n",
        "      <td>15May2020</td>\n",
        "      <td>330457362</td>\n",
        "      <td>SIR-F</td>\n",
        "      <td>2.46</td>\n",
        "      <td>0.000638701</td>\n",
        "      <td>0.000116581</td>\n",
        "      <td>0.0130188</td>\n",
        "      <td>0.00517845</td>\n",
        "      <td>360</td>\n",
        "      <td>0.001</td>\n",
        "      <td>48</td>\n",
        "      <td>19</td>\n",
        "      <td>2144</td>\n",
        "      <td>0.0663921</td>\n",
        "      <td>1208</td>\n",
        "      <td>1 min  0 sec</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>2nd</th>\n",
        "      <td>Past</td>\n",
        "      <td>16May2020</td>\n",
        "      <td>23May2020</td>\n",
        "      <td>330457362</td>\n",
        "      <td>SIR-F</td>\n",
        "      <td>1.51</td>\n",
        "      <td>0.000440065</td>\n",
        "      <td>9.8046e-05</td>\n",
        "      <td>0.00763724</td>\n",
        "      <td>0.00494162</td>\n",
        "      <td>360</td>\n",
        "      <td>0</td>\n",
        "      <td>50</td>\n",
        "      <td>32</td>\n",
        "      <td>2549</td>\n",
        "      <td>0.0570082</td>\n",
        "      <td>1391</td>\n",
        "      <td>1 min  0 sec</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>3rd</th>\n",
        "      <td>Past</td>\n",
        "      <td>24May2020</td>\n",
        "      <td>01Jun2020</td>\n",
        "      <td>330457362</td>\n",
        "      <td>SIR-F</td>\n",
        "      <td>1.08</td>\n",
        "      <td>0.000343538</td>\n",
        "      <td>0.000113249</td>\n",
        "      <td>0.00557086</td>\n",
        "      <td>0.00505496</td>\n",
        "      <td>360</td>\n",
        "      <td>0</td>\n",
        "      <td>49</td>\n",
        "      <td>44</td>\n",
        "      <td>2207</td>\n",
        "      <td>0.0763248</td>\n",
        "      <td>1487</td>\n",
        "      <td>1 min  0 sec</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>4th</th>\n",
        "      <td>Past</td>\n",
        "      <td>02Jun2020</td>\n",
        "      <td>11Jun2020</td>\n",
        "      <td>330457362</td>\n",
        "      <td>SIR-F</td>\n",
        "      <td>0.98</td>\n",
        "      <td>0.0181654</td>\n",
        "      <td>9.96754e-06</td>\n",
        "      <td>0.00479178</td>\n",
        "      <td>0.00480376</td>\n",
        "      <td>360</td>\n",
        "      <td>0.018</td>\n",
        "      <td>52</td>\n",
        "      <td>52</td>\n",
        "      <td>25081</td>\n",
        "      <td>0.0727387</td>\n",
        "      <td>1405</td>\n",
        "      <td>1 min  0 sec</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>5th</th>\n",
        "      <td>Past</td>\n",
        "      <td>12Jun2020</td>\n",
        "      <td>20Jun2020</td>\n",
        "      <td>330457362</td>\n",
        "      <td>-</td>\n",
        "      <td>-</td>\n",
        "      <td>-</td>\n",
        "      <td>-</td>\n",
        "      <td>-</td>\n",
        "      <td>-</td>\n",
        "      <td>-</td>\n",
        "      <td>-</td>\n",
        "      <td>-</td>\n",
        "      <td>-</td>\n",
        "      <td>-</td>\n",
        "      <td>-</td>\n",
        "      <td>-</td>\n",
        "      <td>-</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>6th</th>\n",
        "      <td>Past</td>\n",
        "      <td>21Jun2020</td>\n",
        "      <td>30Jun2020</td>\n",
        "      <td>330457362</td>\n",
        "      <td>SIR-F</td>\n",
        "      <td>0.9</td>\n",
        "      <td>0.021825</td>\n",
        "      <td>1.88817e-06</td>\n",
        "      <td>0.00276866</td>\n",
        "      <td>0.00301643</td>\n",
        "      <td>360</td>\n",
        "      <td>0.022</td>\n",
        "      <td>82</td>\n",
        "      <td>90</td>\n",
        "      <td>132403</td>\n",
        "      <td>0.0496409</td>\n",
        "      <td>1424</td>\n",
        "      <td>1 min  0 sec</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>7th</th>\n",
        "      <td>Past</td>\n",
        "      <td>01Jul2020</td>\n",
        "      <td>12Jul2020</td>\n",
        "      <td>330457362</td>\n",
        "      <td>SIR-F</td>\n",
        "      <td>1.02</td>\n",
        "      <td>0.0184678</td>\n",
        "      <td>9.96754e-06</td>\n",
        "      <td>0.00244199</td>\n",
        "      <td>0.002334</td>\n",
        "      <td>360</td>\n",
        "      <td>0.018</td>\n",
        "      <td>107</td>\n",
        "      <td>102</td>\n",
        "      <td>25081</td>\n",
        "      <td>0.0485799</td>\n",
        "      <td>1383</td>\n",
        "      <td>1 min  0 sec</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>8th</th>\n",
        "      <td>Past</td>\n",
        "      <td>13Jul2020</td>\n",
        "      <td>24Jul2020</td>\n",
        "      <td>330457362</td>\n",
        "      <td>SIR-F</td>\n",
        "      <td>0.69</td>\n",
        "      <td>0.0186914</td>\n",
        "      <td>1.87985e-05</td>\n",
        "      <td>0.00196764</td>\n",
        "      <td>0.00278424</td>\n",
        "      <td>360</td>\n",
        "      <td>0.019</td>\n",
        "      <td>89</td>\n",
        "      <td>127</td>\n",
        "      <td>13298</td>\n",
        "      <td>0.0574393</td>\n",
        "      <td>1383</td>\n",
        "      <td>1 min  0 sec</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>9th</th>\n",
        "      <td>Past</td>\n",
        "      <td>25Jul2020</td>\n",
        "      <td>07Aug2020</td>\n",
        "      <td>330457362</td>\n",
        "      <td>SIR-F</td>\n",
        "      <td>0.78</td>\n",
        "      <td>0.0205683</td>\n",
        "      <td>3.65782e-06</td>\n",
        "      <td>0.0016005</td>\n",
        "      <td>0.0020129</td>\n",
        "      <td>360</td>\n",
        "      <td>0.021</td>\n",
        "      <td>124</td>\n",
        "      <td>156</td>\n",
        "      <td>68346</td>\n",
        "      <td>0.0522163</td>\n",
        "      <td>1375</td>\n",
        "      <td>1 min  0 sec</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>10th</th>\n",
        "      <td>Past</td>\n",
        "      <td>08Aug2020</td>\n",
        "      <td>23Aug2020</td>\n",
        "      <td>330457362</td>\n",
        "      <td>SIR-F</td>\n",
        "      <td>0.91</td>\n",
        "      <td>0.0110153</td>\n",
        "      <td>5.69528e-05</td>\n",
        "      <td>0.00132496</td>\n",
        "      <td>0.00138234</td>\n",
        "      <td>360</td>\n",
        "      <td>0.011</td>\n",
        "      <td>180</td>\n",
        "      <td>188</td>\n",
        "      <td>4389</td>\n",
        "      <td>0.0808545</td>\n",
        "      <td>1419</td>\n",
        "      <td>1 min  0 sec</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>11th</th>\n",
        "      <td>Past</td>\n",
        "      <td>24Aug2020</td>\n",
        "      <td>10Sep2020</td>\n",
        "      <td>330457362</td>\n",
        "      <td>-</td>\n",
        "      <td>-</td>\n",
        "      <td>-</td>\n",
        "      <td>-</td>\n",
        "      <td>-</td>\n",
        "      <td>-</td>\n",
        "      <td>-</td>\n",
        "      <td>-</td>\n",
        "      <td>-</td>\n",
        "      <td>-</td>\n",
        "      <td>-</td>\n",
        "      <td>-</td>\n",
        "      <td>-</td>\n",
        "      <td>-</td>\n",
        "    </tr>\n",
        "  </tbody>\n",
        "</table>\n",
        "</div>"
       ],
       "output_type": "pyout",
       "prompt_number": 12,
       "text": [
        "                            Type      Start        End  Population    ODE  \\\n",
        "Country              Phase                                                  \n",
        "United Arab Emirates 0th    Past  12Feb2020  27Apr2020     9630959  SIR-F   \n",
        "                     1st    Past  28Apr2020  12May2020     9630959  SIR-F   \n",
        "                     2nd    Past  13May2020  20May2020     9630959  SIR-F   \n",
        "                     3rd    Past  21May2020  28May2020     9630959  SIR-F   \n",
        "                     4th    Past  29May2020  06Jun2020     9630959  SIR-F   \n",
        "                     5th    Past  07Jun2020  18Jun2020     9630959  SIR-F   \n",
        "                     6th    Past  19Jun2020  01Jul2020     9630959  SIR-F   \n",
        "                     7th    Past  02Jul2020  10Jul2020     9630959  SIR-F   \n",
        "                     8th    Past  11Jul2020  26Jul2020     9630959  SIR-F   \n",
        "                     9th    Past  27Jul2020  16Aug2020     9630959  SIR-F   \n",
        "                     10th   Past  17Aug2020  31Aug2020     9630959  SIR-F   \n",
        "                     11th   Past  01Sep2020  10Sep2020     9630959  SIR-F   \n",
        "Bahrain              0th    Past  06Mar2020  06May2020     1569439  SIR-F   \n",
        "                     1st    Past  07May2020  31May2020     1569439  SIR-F   \n",
        "                     2nd    Past  01Jun2020  11Jun2020     1569439  SIR-F   \n",
        "                     3rd    Past  12Jun2020  20Jun2020     1569439  SIR-F   \n",
        "                     4th    Past  21Jun2020  28Jun2020     1569439  SIR-F   \n",
        "                     5th    Past  29Jun2020  07Jul2020     1569439  SIR-F   \n",
        "                     6th    Past  08Jul2020  15Jul2020     1569439  SIR-F   \n",
        "                     7th    Past  16Jul2020  26Jul2020     1569439  SIR-F   \n",
        "                     8th    Past  27Jul2020  08Aug2020     1569439      -   \n",
        "                     9th    Past  09Aug2020  20Aug2020     1569439  SIR-F   \n",
        "                     10th   Past  21Aug2020  01Sep2020     1569439  SIR-F   \n",
        "                     11th   Past  02Sep2020  10Sep2020     1569439  SIR-F   \n",
        "Russia               0th    Past  12Feb2020  06May2020   330457362  SIR-F   \n",
        "                     1st    Past  07May2020  15May2020   330457362  SIR-F   \n",
        "                     2nd    Past  16May2020  23May2020   330457362  SIR-F   \n",
        "                     3rd    Past  24May2020  01Jun2020   330457362  SIR-F   \n",
        "                     4th    Past  02Jun2020  11Jun2020   330457362  SIR-F   \n",
        "                     5th    Past  12Jun2020  20Jun2020   330457362      -   \n",
        "                     6th    Past  21Jun2020  30Jun2020   330457362  SIR-F   \n",
        "                     7th    Past  01Jul2020  12Jul2020   330457362  SIR-F   \n",
        "                     8th    Past  13Jul2020  24Jul2020   330457362  SIR-F   \n",
        "                     9th    Past  25Jul2020  07Aug2020   330457362  SIR-F   \n",
        "                     10th   Past  08Aug2020  23Aug2020   330457362  SIR-F   \n",
        "                     11th   Past  24Aug2020  10Sep2020   330457362      -   \n",
        "\n",
        "                              Rt        theta        kappa         rho  \\\n",
        "Country              Phase                                               \n",
        "United Arab Emirates 0th    1.35   0.00126835   0.00040644  0.00555763   \n",
        "                     1st    2.66   0.00112211  0.000161783    0.013316   \n",
        "                     2nd    1.29  0.000158845  5.96006e-05   0.0134786   \n",
        "                     3rd    1.59   0.00125237  4.57341e-05   0.0136915   \n",
        "                     4th    1.48  0.000678913  2.12702e-05  0.00952923   \n",
        "                     5th     0.6  0.000682643  2.12553e-05  0.00763791   \n",
        "                     6th     0.7  0.000678967  2.12578e-05   0.0097663   \n",
        "                     7th    1.07  0.000158678  5.96767e-05    0.014062   \n",
        "                     8th    0.65   0.00341762  1.85682e-06   0.0101174   \n",
        "                     9th    0.89  0.000659568  3.69124e-05   0.0110426   \n",
        "                     10th   1.82  0.000663328  3.68971e-05   0.0130926   \n",
        "                     11th   1.27   0.00125504  1.43666e-06   0.0184096   \n",
        "Bahrain              0th    1.68  0.000408827  0.000256613   0.0276043   \n",
        "                     1st    2.06   0.00111161  1.03769e-05   0.0168814   \n",
        "                     2nd    1.14  0.000158383  5.96667e-05   0.0224897   \n",
        "                     3rd     1.1   0.00220653  9.34559e-05   0.0234495   \n",
        "                     4th     1.1   0.00034297  7.91242e-05   0.0295616   \n",
        "                     5th     0.9  0.000433256  9.80641e-05   0.0273549   \n",
        "                     6th    0.87  0.000491057  0.000105726   0.0307505   \n",
        "                     7th    0.85   0.00046404  8.39734e-05   0.0279484   \n",
        "                     8th       -            -            -           -   \n",
        "                     9th    1.27  0.000773339  7.74819e-05   0.0302769   \n",
        "                     10th    0.9  0.000420538  7.93641e-05   0.0289548   \n",
        "                     11th   2.19   0.00065854  3.69154e-05   0.0431042   \n",
        "Russia               0th    0.02     0.602763     0.544883   0.0340813   \n",
        "                     1st    2.46  0.000638701  0.000116581   0.0130188   \n",
        "                     2nd    1.51  0.000440065   9.8046e-05  0.00763724   \n",
        "                     3rd    1.08  0.000343538  0.000113249  0.00557086   \n",
        "                     4th    0.98    0.0181654  9.96754e-06  0.00479178   \n",
        "                     5th       -            -            -           -   \n",
        "                     6th     0.9     0.021825  1.88817e-06  0.00276866   \n",
        "                     7th    1.02    0.0184678  9.96754e-06  0.00244199   \n",
        "                     8th    0.69    0.0186914  1.87985e-05  0.00196764   \n",
        "                     9th    0.78    0.0205683  3.65782e-06   0.0016005   \n",
        "                     10th   0.91    0.0110153  5.69528e-05  0.00132496   \n",
        "                     11th      -            -            -           -   \n",
        "\n",
        "                                 sigma  tau alpha1 [-] 1/gamma [day]  \\\n",
        "Country              Phase                                             \n",
        "United Arab Emirates 0th     0.0037045  360      0.001            67   \n",
        "                     1st      0.004843  360      0.001            51   \n",
        "                     2nd     0.0104185  360          0            23   \n",
        "                     3rd    0.00857704  360      0.001            29   \n",
        "                     4th     0.0064027  360      0.001            39   \n",
        "                     5th     0.0126261  360      0.001            19   \n",
        "                     6th     0.0139428  360      0.001            17   \n",
        "                     7th     0.0130271  360          0            19   \n",
        "                     8th     0.0155432  360      0.003            16   \n",
        "                     9th     0.0123334  360      0.001            20   \n",
        "                     10th   0.00715663  360      0.001            34   \n",
        "                     11th    0.0144581  360      0.001            17   \n",
        "Bahrain              0th     0.0161614  360          0            15   \n",
        "                     1st    0.00818862  360      0.001            30   \n",
        "                     2nd     0.0197021  360          0            12   \n",
        "                     3rd     0.0211901  360      0.002            11   \n",
        "                     4th     0.0268356  360          0             9   \n",
        "                     5th     0.0301332  360          0             8   \n",
        "                     6th     0.0350343  360          0             7   \n",
        "                     7th     0.0329592  360          0             7   \n",
        "                     8th             -    -          -             -   \n",
        "                     9th     0.0237384  360      0.001            10   \n",
        "                     10th    0.0320197  360          0             7   \n",
        "                     11th    0.0196001  360      0.001            12   \n",
        "Russia               0th    0.00229851  360      0.603           108   \n",
        "                     1st    0.00517845  360      0.001            48   \n",
        "                     2nd    0.00494162  360          0            50   \n",
        "                     3rd    0.00505496  360          0            49   \n",
        "                     4th    0.00480376  360      0.018            52   \n",
        "                     5th             -    -          -             -   \n",
        "                     6th    0.00301643  360      0.022            82   \n",
        "                     7th      0.002334  360      0.018           107   \n",
        "                     8th    0.00278424  360      0.019            89   \n",
        "                     9th     0.0020129  360      0.021           124   \n",
        "                     10th   0.00138234  360      0.011           180   \n",
        "                     11th            -    -          -             -   \n",
        "\n",
        "                           1/beta [day] 1/alpha2 [day]      RMSLE Trials  \\\n",
        "Country              Phase                                                 \n",
        "United Arab Emirates 0th             44            615    9.31954   1395   \n",
        "                     1st             18           1545  0.0895587   1361   \n",
        "                     2nd             18           4194  0.0367868   1362   \n",
        "                     3rd             18           5466  0.0338072   1426   \n",
        "                     4th             26          11753  0.0110623   1427   \n",
        "                     5th             32          11761  0.0184546    985   \n",
        "                     6th             25          11760  0.0178067    991   \n",
        "                     7th             17           4189  0.0359739   1325   \n",
        "                     8th             24         134638  0.0502542    304   \n",
        "                     9th             22           6772   0.039708    545   \n",
        "                     10th            19           6775  0.0565318    565   \n",
        "                     11th            13         174014   0.115597   1307   \n",
        "Bahrain              0th              9            974    1.56863   1304   \n",
        "                     1st             14          24092   0.287163   1366   \n",
        "                     2nd             11           4189  0.0589083   1411   \n",
        "                     3rd             10           2675  0.0266207    170   \n",
        "                     4th              8           3159  0.0304475   1381   \n",
        "                     5th              9           2549  0.0250595   1423   \n",
        "                     6th              8           2364  0.0176851   1846   \n",
        "                     7th              8           2977  0.0169771   1409   \n",
        "                     8th              -              -          -      -   \n",
        "                     9th              8           3226  0.0328754   1361   \n",
        "                     10th             8           3150  0.0275449    446   \n",
        "                     11th             5           6772  0.0262521   1285   \n",
        "Russia               0th              7              0    18.9667   1376   \n",
        "                     1st             19           2144  0.0663921   1208   \n",
        "                     2nd             32           2549  0.0570082   1391   \n",
        "                     3rd             44           2207  0.0763248   1487   \n",
        "                     4th             52          25081  0.0727387   1405   \n",
        "                     5th              -              -          -      -   \n",
        "                     6th             90         132403  0.0496409   1424   \n",
        "                     7th            102          25081  0.0485799   1383   \n",
        "                     8th            127          13298  0.0574393   1383   \n",
        "                     9th            156          68346  0.0522163   1375   \n",
        "                     10th           188           4389  0.0808545   1419   \n",
        "                     11th             -              -          -      -   \n",
        "\n",
        "                                 Runtime  \n",
        "Country              Phase                \n",
        "United Arab Emirates 0th    1 min  0 sec  \n",
        "                     1st    1 min  0 sec  \n",
        "                     2nd    1 min  0 sec  \n",
        "                     3rd    1 min  0 sec  \n",
        "                     4th    1 min  0 sec  \n",
        "                     5th    0 min 40 sec  \n",
        "                     6th    0 min 40 sec  \n",
        "                     7th    1 min  0 sec  \n",
        "                     8th    0 min 10 sec  \n",
        "                     9th    0 min 20 sec  \n",
        "                     10th   0 min 20 sec  \n",
        "                     11th   1 min  0 sec  \n",
        "Bahrain              0th    1 min  0 sec  \n",
        "                     1st    1 min  0 sec  \n",
        "                     2nd    1 min  0 sec  \n",
        "                     3rd    0 min  5 sec  \n",
        "                     4th    1 min  0 sec  \n",
        "                     5th    1 min  0 sec  \n",
        "                     6th    1 min  0 sec  \n",
        "                     7th    1 min  0 sec  \n",
        "                     8th               -  \n",
        "                     9th    1 min  0 sec  \n",
        "                     10th   0 min 15 sec  \n",
        "                     11th   1 min  0 sec  \n",
        "Russia               0th    1 min  0 sec  \n",
        "                     1st    1 min  0 sec  \n",
        "                     2nd    1 min  0 sec  \n",
        "                     3rd    1 min  0 sec  \n",
        "                     4th    1 min  0 sec  \n",
        "                     5th               -  \n",
        "                     6th    1 min  0 sec  \n",
        "                     7th    1 min  0 sec  \n",
        "                     8th    1 min  0 sec  \n",
        "                     9th    1 min  0 sec  \n",
        "                     10th   1 min  0 sec  \n",
        "                     11th              -  "
       ]
      }
     ],
     "prompt_number": 12
    },
    {
     "cell_type": "markdown",
     "metadata": {},
     "source": [
      "## Compare the history of parameters\n",
      "Here, compare the history of parameter values if countries."
     ]
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "# All parameter/day parameter/Rt/OxCGRT\n",
      "analyser.track().head()"
     ],
     "language": "python",
     "metadata": {},
     "outputs": [
      {
       "html": [
        "<div>\n",
        "<style scoped>\n",
        "    .dataframe tbody tr th:only-of-type {\n",
        "        vertical-align: middle;\n",
        "    }\n",
        "\n",
        "    .dataframe tbody tr th {\n",
        "        vertical-align: top;\n",
        "    }\n",
        "\n",
        "    .dataframe thead th {\n",
        "        text-align: right;\n",
        "    }\n",
        "</style>\n",
        "<table border=\"1\" class=\"dataframe\">\n",
        "  <thead>\n",
        "    <tr style=\"text-align: right;\">\n",
        "      <th></th>\n",
        "      <th>Date</th>\n",
        "      <th>Country</th>\n",
        "      <th>theta</th>\n",
        "      <th>kappa</th>\n",
        "      <th>rho</th>\n",
        "      <th>sigma</th>\n",
        "      <th>alpha1 [-]</th>\n",
        "      <th>1/alpha2 [day]</th>\n",
        "      <th>1/beta [day]</th>\n",
        "      <th>1/gamma [day]</th>\n",
        "      <th>...</th>\n",
        "      <th>Cancel_events</th>\n",
        "      <th>Gatherings_restrictions</th>\n",
        "      <th>Transport_closing</th>\n",
        "      <th>Stay_home_restrictions</th>\n",
        "      <th>Internal_movement_restrictions</th>\n",
        "      <th>International_movement_restrictions</th>\n",
        "      <th>Information_campaigns</th>\n",
        "      <th>Testing_policy</th>\n",
        "      <th>Contact_tracing</th>\n",
        "      <th>Stringency_index</th>\n",
        "    </tr>\n",
        "  </thead>\n",
        "  <tbody>\n",
        "    <tr>\n",
        "      <th>0</th>\n",
        "      <td>2020-02-12</td>\n",
        "      <td>United Arab Emirates</td>\n",
        "      <td>0.00126835</td>\n",
        "      <td>0.00040644</td>\n",
        "      <td>0.00555763</td>\n",
        "      <td>0.0037045</td>\n",
        "      <td>0.001</td>\n",
        "      <td>615</td>\n",
        "      <td>44</td>\n",
        "      <td>67</td>\n",
        "      <td>...</td>\n",
        "      <td>0</td>\n",
        "      <td>0</td>\n",
        "      <td>0</td>\n",
        "      <td>0</td>\n",
        "      <td>0</td>\n",
        "      <td>1</td>\n",
        "      <td>0</td>\n",
        "      <td>0</td>\n",
        "      <td>2</td>\n",
        "      <td>2.78</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>1</th>\n",
        "      <td>2020-02-13</td>\n",
        "      <td>United Arab Emirates</td>\n",
        "      <td>0.00126835</td>\n",
        "      <td>0.00040644</td>\n",
        "      <td>0.00555763</td>\n",
        "      <td>0.0037045</td>\n",
        "      <td>0.001</td>\n",
        "      <td>615</td>\n",
        "      <td>44</td>\n",
        "      <td>67</td>\n",
        "      <td>...</td>\n",
        "      <td>0</td>\n",
        "      <td>0</td>\n",
        "      <td>0</td>\n",
        "      <td>0</td>\n",
        "      <td>0</td>\n",
        "      <td>1</td>\n",
        "      <td>0</td>\n",
        "      <td>0</td>\n",
        "      <td>2</td>\n",
        "      <td>2.78</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>2</th>\n",
        "      <td>2020-02-14</td>\n",
        "      <td>United Arab Emirates</td>\n",
        "      <td>0.00126835</td>\n",
        "      <td>0.00040644</td>\n",
        "      <td>0.00555763</td>\n",
        "      <td>0.0037045</td>\n",
        "      <td>0.001</td>\n",
        "      <td>615</td>\n",
        "      <td>44</td>\n",
        "      <td>67</td>\n",
        "      <td>...</td>\n",
        "      <td>0</td>\n",
        "      <td>0</td>\n",
        "      <td>0</td>\n",
        "      <td>0</td>\n",
        "      <td>0</td>\n",
        "      <td>1</td>\n",
        "      <td>0</td>\n",
        "      <td>0</td>\n",
        "      <td>2</td>\n",
        "      <td>2.78</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>3</th>\n",
        "      <td>2020-02-15</td>\n",
        "      <td>United Arab Emirates</td>\n",
        "      <td>0.00126835</td>\n",
        "      <td>0.00040644</td>\n",
        "      <td>0.00555763</td>\n",
        "      <td>0.0037045</td>\n",
        "      <td>0.001</td>\n",
        "      <td>615</td>\n",
        "      <td>44</td>\n",
        "      <td>67</td>\n",
        "      <td>...</td>\n",
        "      <td>0</td>\n",
        "      <td>0</td>\n",
        "      <td>0</td>\n",
        "      <td>0</td>\n",
        "      <td>0</td>\n",
        "      <td>1</td>\n",
        "      <td>0</td>\n",
        "      <td>0</td>\n",
        "      <td>2</td>\n",
        "      <td>2.78</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>4</th>\n",
        "      <td>2020-02-16</td>\n",
        "      <td>United Arab Emirates</td>\n",
        "      <td>0.00126835</td>\n",
        "      <td>0.00040644</td>\n",
        "      <td>0.00555763</td>\n",
        "      <td>0.0037045</td>\n",
        "      <td>0.001</td>\n",
        "      <td>615</td>\n",
        "      <td>44</td>\n",
        "      <td>67</td>\n",
        "      <td>...</td>\n",
        "      <td>0</td>\n",
        "      <td>0</td>\n",
        "      <td>0</td>\n",
        "      <td>0</td>\n",
        "      <td>0</td>\n",
        "      <td>1</td>\n",
        "      <td>0</td>\n",
        "      <td>0</td>\n",
        "      <td>2</td>\n",
        "      <td>2.78</td>\n",
        "    </tr>\n",
        "  </tbody>\n",
        "</table>\n",
        "<p>5 rows \u00d7 23 columns</p>\n",
        "</div>"
       ],
       "output_type": "pyout",
       "prompt_number": 13,
       "text": [
        "        Date               Country       theta       kappa         rho  \\\n",
        "0 2020-02-12  United Arab Emirates  0.00126835  0.00040644  0.00555763   \n",
        "1 2020-02-13  United Arab Emirates  0.00126835  0.00040644  0.00555763   \n",
        "2 2020-02-14  United Arab Emirates  0.00126835  0.00040644  0.00555763   \n",
        "3 2020-02-15  United Arab Emirates  0.00126835  0.00040644  0.00555763   \n",
        "4 2020-02-16  United Arab Emirates  0.00126835  0.00040644  0.00555763   \n",
        "\n",
        "       sigma alpha1 [-] 1/alpha2 [day] 1/beta [day] 1/gamma [day]  ...  \\\n",
        "0  0.0037045      0.001            615           44            67  ...   \n",
        "1  0.0037045      0.001            615           44            67  ...   \n",
        "2  0.0037045      0.001            615           44            67  ...   \n",
        "3  0.0037045      0.001            615           44            67  ...   \n",
        "4  0.0037045      0.001            615           44            67  ...   \n",
        "\n",
        "  Cancel_events  Gatherings_restrictions  Transport_closing  \\\n",
        "0             0                        0                  0   \n",
        "1             0                        0                  0   \n",
        "2             0                        0                  0   \n",
        "3             0                        0                  0   \n",
        "4             0                        0                  0   \n",
        "\n",
        "   Stay_home_restrictions  Internal_movement_restrictions  \\\n",
        "0                       0                               0   \n",
        "1                       0                               0   \n",
        "2                       0                               0   \n",
        "3                       0                               0   \n",
        "4                       0                               0   \n",
        "\n",
        "   International_movement_restrictions  Information_campaigns  Testing_policy  \\\n",
        "0                                    1                      0               0   \n",
        "1                                    1                      0               0   \n",
        "2                                    1                      0               0   \n",
        "3                                    1                      0               0   \n",
        "4                                    1                      0               0   \n",
        "\n",
        "   Contact_tracing  Stringency_index  \n",
        "0                2              2.78  \n",
        "1                2              2.78  \n",
        "2                2              2.78  \n",
        "3                2              2.78  \n",
        "4                2              2.78  \n",
        "\n",
        "[5 rows x 23 columns]"
       ]
      }
     ],
     "prompt_number": 13
    },
    {
     "cell_type": "heading",
     "level": 3,
     "metadata": {},
     "source": [
      "$Rt$: Reprodcution number $\\mathrm{[-]}$"
     ]
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "analyser.param_history(\"Rt\", roll_window=None).tail()"
     ],
     "language": "python",
     "metadata": {},
     "outputs": [
      {
       "output_type": "display_data",
       "png": "\n",
       "text": [
        "<Figure size 648x432 with 1 Axes>"
       ]
      },
      {
       "html": [
        "<div>\n",
        "<style scoped>\n",
        "    .dataframe tbody tr th:only-of-type {\n",
        "        vertical-align: middle;\n",
        "    }\n",
        "\n",
        "    .dataframe tbody tr th {\n",
        "        vertical-align: top;\n",
        "    }\n",
        "\n",
        "    .dataframe thead th {\n",
        "        text-align: right;\n",
        "    }\n",
        "</style>\n",
        "<table border=\"1\" class=\"dataframe\">\n",
        "  <thead>\n",
        "    <tr style=\"text-align: right;\">\n",
        "      <th>Country</th>\n",
        "      <th>Bahrain</th>\n",
        "      <th>Bangladesh</th>\n",
        "      <th>Dominican Republic</th>\n",
        "      <th>France</th>\n",
        "      <th>Georgia</th>\n",
        "      <th>Guinea</th>\n",
        "      <th>Iran</th>\n",
        "      <th>Italy</th>\n",
        "      <th>Kuwait</th>\n",
        "      <th>Mexico</th>\n",
        "      <th>Russia</th>\n",
        "      <th>United Arab Emirates</th>\n",
        "      <th>United States</th>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>Date</th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "    </tr>\n",
        "  </thead>\n",
        "  <tbody>\n",
        "    <tr>\n",
        "      <th>2020-09-06</th>\n",
        "      <td>2.19</td>\n",
        "      <td>0.74</td>\n",
        "      <td>0.44</td>\n",
        "      <td>32.95</td>\n",
        "      <td>0.96</td>\n",
        "      <td>0.8</td>\n",
        "      <td>1.08</td>\n",
        "      <td>3.42</td>\n",
        "      <td>1.41</td>\n",
        "      <td>0.92</td>\n",
        "      <td>0.91</td>\n",
        "      <td>1.27</td>\n",
        "      <td>1.98</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>2020-09-07</th>\n",
        "      <td>2.19</td>\n",
        "      <td>0.74</td>\n",
        "      <td>0.44</td>\n",
        "      <td>32.95</td>\n",
        "      <td>0.96</td>\n",
        "      <td>0.8</td>\n",
        "      <td>1.08</td>\n",
        "      <td>3.42</td>\n",
        "      <td>1.41</td>\n",
        "      <td>0.92</td>\n",
        "      <td>0.91</td>\n",
        "      <td>1.27</td>\n",
        "      <td>1.98</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>2020-09-08</th>\n",
        "      <td>2.19</td>\n",
        "      <td>0.74</td>\n",
        "      <td>0.44</td>\n",
        "      <td>32.95</td>\n",
        "      <td>0.96</td>\n",
        "      <td>0.8</td>\n",
        "      <td>1.08</td>\n",
        "      <td>3.42</td>\n",
        "      <td>1.41</td>\n",
        "      <td>0.92</td>\n",
        "      <td>0.91</td>\n",
        "      <td>1.27</td>\n",
        "      <td>1.98</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>2020-09-09</th>\n",
        "      <td>2.19</td>\n",
        "      <td>0.74</td>\n",
        "      <td>0.44</td>\n",
        "      <td>32.95</td>\n",
        "      <td>0.96</td>\n",
        "      <td>0.8</td>\n",
        "      <td>1.08</td>\n",
        "      <td>3.42</td>\n",
        "      <td>1.41</td>\n",
        "      <td>0.92</td>\n",
        "      <td>0.91</td>\n",
        "      <td>1.27</td>\n",
        "      <td>1.98</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>2020-09-10</th>\n",
        "      <td>2.19</td>\n",
        "      <td>0.74</td>\n",
        "      <td>0.44</td>\n",
        "      <td>32.95</td>\n",
        "      <td>0.96</td>\n",
        "      <td>0.8</td>\n",
        "      <td>1.08</td>\n",
        "      <td>3.42</td>\n",
        "      <td>1.41</td>\n",
        "      <td>0.92</td>\n",
        "      <td>0.91</td>\n",
        "      <td>1.27</td>\n",
        "      <td>1.98</td>\n",
        "    </tr>\n",
        "  </tbody>\n",
        "</table>\n",
        "</div>"
       ],
       "output_type": "pyout",
       "prompt_number": 14,
       "text": [
        "Country     Bahrain  Bangladesh  Dominican Republic  France  Georgia  Guinea  \\\n",
        "Date                                                                           \n",
        "2020-09-06     2.19        0.74                0.44   32.95     0.96     0.8   \n",
        "2020-09-07     2.19        0.74                0.44   32.95     0.96     0.8   \n",
        "2020-09-08     2.19        0.74                0.44   32.95     0.96     0.8   \n",
        "2020-09-09     2.19        0.74                0.44   32.95     0.96     0.8   \n",
        "2020-09-10     2.19        0.74                0.44   32.95     0.96     0.8   \n",
        "\n",
        "Country     Iran  Italy  Kuwait  Mexico  Russia  United Arab Emirates  \\\n",
        "Date                                                                    \n",
        "2020-09-06  1.08   3.42    1.41    0.92    0.91                  1.27   \n",
        "2020-09-07  1.08   3.42    1.41    0.92    0.91                  1.27   \n",
        "2020-09-08  1.08   3.42    1.41    0.92    0.91                  1.27   \n",
        "2020-09-09  1.08   3.42    1.41    0.92    0.91                  1.27   \n",
        "2020-09-10  1.08   3.42    1.41    0.92    0.91                  1.27   \n",
        "\n",
        "Country     United States  \n",
        "Date                       \n",
        "2020-09-06           1.98  \n",
        "2020-09-07           1.98  \n",
        "2020-09-08           1.98  \n",
        "2020-09-09           1.98  \n",
        "2020-09-10           1.98  "
       ]
      }
     ],
     "prompt_number": 14
    },
    {
     "cell_type": "heading",
     "level": 3,
     "metadata": {},
     "source": [
      "$\\rho$: Effective contact rate $\\mathrm{[-]}$"
     ]
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "analyser.param_history(\"rho\", roll_window=None).tail()"
     ],
     "language": "python",
     "metadata": {},
     "outputs": [
      {
       "output_type": "display_data",
       "png": "\n",
       "text": [
        "<Figure size 648x432 with 1 Axes>"
       ]
      },
      {
       "html": [
        "<div>\n",
        "<style scoped>\n",
        "    .dataframe tbody tr th:only-of-type {\n",
        "        vertical-align: middle;\n",
        "    }\n",
        "\n",
        "    .dataframe tbody tr th {\n",
        "        vertical-align: top;\n",
        "    }\n",
        "\n",
        "    .dataframe thead th {\n",
        "        text-align: right;\n",
        "    }\n",
        "</style>\n",
        "<table border=\"1\" class=\"dataframe\">\n",
        "  <thead>\n",
        "    <tr style=\"text-align: right;\">\n",
        "      <th>Country</th>\n",
        "      <th>Bahrain</th>\n",
        "      <th>Bangladesh</th>\n",
        "      <th>Dominican Republic</th>\n",
        "      <th>France</th>\n",
        "      <th>Georgia</th>\n",
        "      <th>Guinea</th>\n",
        "      <th>Iran</th>\n",
        "      <th>Italy</th>\n",
        "      <th>Kuwait</th>\n",
        "      <th>Mexico</th>\n",
        "      <th>Russia</th>\n",
        "      <th>United Arab Emirates</th>\n",
        "      <th>United States</th>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>Date</th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "    </tr>\n",
        "  </thead>\n",
        "  <tbody>\n",
        "    <tr>\n",
        "      <th>2020-09-06</th>\n",
        "      <td>0.043104</td>\n",
        "      <td>0.005007</td>\n",
        "      <td>0.004032</td>\n",
        "      <td>0.009224</td>\n",
        "      <td>0.008581</td>\n",
        "      <td>0.0147</td>\n",
        "      <td>0.016525</td>\n",
        "      <td>0.012066</td>\n",
        "      <td>0.02227</td>\n",
        "      <td>0.036002</td>\n",
        "      <td>0.001325</td>\n",
        "      <td>0.01841</td>\n",
        "      <td>0.002621</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>2020-09-07</th>\n",
        "      <td>0.043104</td>\n",
        "      <td>0.005007</td>\n",
        "      <td>0.004032</td>\n",
        "      <td>0.009224</td>\n",
        "      <td>0.008581</td>\n",
        "      <td>0.0147</td>\n",
        "      <td>0.016525</td>\n",
        "      <td>0.012066</td>\n",
        "      <td>0.02227</td>\n",
        "      <td>0.036002</td>\n",
        "      <td>0.001325</td>\n",
        "      <td>0.01841</td>\n",
        "      <td>0.002621</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>2020-09-08</th>\n",
        "      <td>0.043104</td>\n",
        "      <td>0.005007</td>\n",
        "      <td>0.004032</td>\n",
        "      <td>0.009224</td>\n",
        "      <td>0.008581</td>\n",
        "      <td>0.0147</td>\n",
        "      <td>0.016525</td>\n",
        "      <td>0.012066</td>\n",
        "      <td>0.02227</td>\n",
        "      <td>0.036002</td>\n",
        "      <td>0.001325</td>\n",
        "      <td>0.01841</td>\n",
        "      <td>0.002621</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>2020-09-09</th>\n",
        "      <td>0.043104</td>\n",
        "      <td>0.005007</td>\n",
        "      <td>0.004032</td>\n",
        "      <td>0.009224</td>\n",
        "      <td>0.008581</td>\n",
        "      <td>0.0147</td>\n",
        "      <td>0.016525</td>\n",
        "      <td>0.012066</td>\n",
        "      <td>0.02227</td>\n",
        "      <td>0.036002</td>\n",
        "      <td>0.001325</td>\n",
        "      <td>0.01841</td>\n",
        "      <td>0.002621</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>2020-09-10</th>\n",
        "      <td>0.043104</td>\n",
        "      <td>0.005007</td>\n",
        "      <td>0.004032</td>\n",
        "      <td>0.009224</td>\n",
        "      <td>0.008581</td>\n",
        "      <td>0.0147</td>\n",
        "      <td>0.016525</td>\n",
        "      <td>0.012066</td>\n",
        "      <td>0.02227</td>\n",
        "      <td>0.036002</td>\n",
        "      <td>0.001325</td>\n",
        "      <td>0.01841</td>\n",
        "      <td>0.002621</td>\n",
        "    </tr>\n",
        "  </tbody>\n",
        "</table>\n",
        "</div>"
       ],
       "output_type": "pyout",
       "prompt_number": 15,
       "text": [
        "Country      Bahrain  Bangladesh  Dominican Republic    France   Georgia  \\\n",
        "Date                                                                       \n",
        "2020-09-06  0.043104    0.005007            0.004032  0.009224  0.008581   \n",
        "2020-09-07  0.043104    0.005007            0.004032  0.009224  0.008581   \n",
        "2020-09-08  0.043104    0.005007            0.004032  0.009224  0.008581   \n",
        "2020-09-09  0.043104    0.005007            0.004032  0.009224  0.008581   \n",
        "2020-09-10  0.043104    0.005007            0.004032  0.009224  0.008581   \n",
        "\n",
        "Country     Guinea      Iran     Italy   Kuwait    Mexico    Russia  \\\n",
        "Date                                                                  \n",
        "2020-09-06  0.0147  0.016525  0.012066  0.02227  0.036002  0.001325   \n",
        "2020-09-07  0.0147  0.016525  0.012066  0.02227  0.036002  0.001325   \n",
        "2020-09-08  0.0147  0.016525  0.012066  0.02227  0.036002  0.001325   \n",
        "2020-09-09  0.0147  0.016525  0.012066  0.02227  0.036002  0.001325   \n",
        "2020-09-10  0.0147  0.016525  0.012066  0.02227  0.036002  0.001325   \n",
        "\n",
        "Country     United Arab Emirates  United States  \n",
        "Date                                             \n",
        "2020-09-06               0.01841       0.002621  \n",
        "2020-09-07               0.01841       0.002621  \n",
        "2020-09-08               0.01841       0.002621  \n",
        "2020-09-09               0.01841       0.002621  \n",
        "2020-09-10               0.01841       0.002621  "
       ]
      }
     ],
     "prompt_number": 15
    },
    {
     "cell_type": "heading",
     "level": 3,
     "metadata": {},
     "source": [
      "$\\sigma$: Recovery rate $\\mathrm{[-]}$"
     ]
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "analyser.param_history(\"sigma\", roll_window=None).tail()"
     ],
     "language": "python",
     "metadata": {},
     "outputs": [
      {
       "output_type": "display_data",
       "png": "\n",
       "text": [
        "<Figure size 648x432 with 1 Axes>"
       ]
      },
      {
       "html": [
        "<div>\n",
        "<style scoped>\n",
        "    .dataframe tbody tr th:only-of-type {\n",
        "        vertical-align: middle;\n",
        "    }\n",
        "\n",
        "    .dataframe tbody tr th {\n",
        "        vertical-align: top;\n",
        "    }\n",
        "\n",
        "    .dataframe thead th {\n",
        "        text-align: right;\n",
        "    }\n",
        "</style>\n",
        "<table border=\"1\" class=\"dataframe\">\n",
        "  <thead>\n",
        "    <tr style=\"text-align: right;\">\n",
        "      <th>Country</th>\n",
        "      <th>Bahrain</th>\n",
        "      <th>Bangladesh</th>\n",
        "      <th>Dominican Republic</th>\n",
        "      <th>France</th>\n",
        "      <th>Georgia</th>\n",
        "      <th>Guinea</th>\n",
        "      <th>Iran</th>\n",
        "      <th>Italy</th>\n",
        "      <th>Kuwait</th>\n",
        "      <th>Mexico</th>\n",
        "      <th>Russia</th>\n",
        "      <th>United Arab Emirates</th>\n",
        "      <th>United States</th>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>Date</th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "    </tr>\n",
        "  </thead>\n",
        "  <tbody>\n",
        "    <tr>\n",
        "      <th>2020-09-06</th>\n",
        "      <td>0.0196</td>\n",
        "      <td>0.006722</td>\n",
        "      <td>0.00898</td>\n",
        "      <td>0.000278</td>\n",
        "      <td>0.00874</td>\n",
        "      <td>0.018363</td>\n",
        "      <td>0.014463</td>\n",
        "      <td>0.003377</td>\n",
        "      <td>0.015698</td>\n",
        "      <td>0.035384</td>\n",
        "      <td>0.001382</td>\n",
        "      <td>0.014458</td>\n",
        "      <td>0.001283</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>2020-09-07</th>\n",
        "      <td>0.0196</td>\n",
        "      <td>0.006722</td>\n",
        "      <td>0.00898</td>\n",
        "      <td>0.000278</td>\n",
        "      <td>0.00874</td>\n",
        "      <td>0.018363</td>\n",
        "      <td>0.014463</td>\n",
        "      <td>0.003377</td>\n",
        "      <td>0.015698</td>\n",
        "      <td>0.035384</td>\n",
        "      <td>0.001382</td>\n",
        "      <td>0.014458</td>\n",
        "      <td>0.001283</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>2020-09-08</th>\n",
        "      <td>0.0196</td>\n",
        "      <td>0.006722</td>\n",
        "      <td>0.00898</td>\n",
        "      <td>0.000278</td>\n",
        "      <td>0.00874</td>\n",
        "      <td>0.018363</td>\n",
        "      <td>0.014463</td>\n",
        "      <td>0.003377</td>\n",
        "      <td>0.015698</td>\n",
        "      <td>0.035384</td>\n",
        "      <td>0.001382</td>\n",
        "      <td>0.014458</td>\n",
        "      <td>0.001283</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>2020-09-09</th>\n",
        "      <td>0.0196</td>\n",
        "      <td>0.006722</td>\n",
        "      <td>0.00898</td>\n",
        "      <td>0.000278</td>\n",
        "      <td>0.00874</td>\n",
        "      <td>0.018363</td>\n",
        "      <td>0.014463</td>\n",
        "      <td>0.003377</td>\n",
        "      <td>0.015698</td>\n",
        "      <td>0.035384</td>\n",
        "      <td>0.001382</td>\n",
        "      <td>0.014458</td>\n",
        "      <td>0.001283</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>2020-09-10</th>\n",
        "      <td>0.0196</td>\n",
        "      <td>0.006722</td>\n",
        "      <td>0.00898</td>\n",
        "      <td>0.000278</td>\n",
        "      <td>0.00874</td>\n",
        "      <td>0.018363</td>\n",
        "      <td>0.014463</td>\n",
        "      <td>0.003377</td>\n",
        "      <td>0.015698</td>\n",
        "      <td>0.035384</td>\n",
        "      <td>0.001382</td>\n",
        "      <td>0.014458</td>\n",
        "      <td>0.001283</td>\n",
        "    </tr>\n",
        "  </tbody>\n",
        "</table>\n",
        "</div>"
       ],
       "output_type": "pyout",
       "prompt_number": 16,
       "text": [
        "Country     Bahrain  Bangladesh  Dominican Republic    France  Georgia  \\\n",
        "Date                                                                     \n",
        "2020-09-06   0.0196    0.006722             0.00898  0.000278  0.00874   \n",
        "2020-09-07   0.0196    0.006722             0.00898  0.000278  0.00874   \n",
        "2020-09-08   0.0196    0.006722             0.00898  0.000278  0.00874   \n",
        "2020-09-09   0.0196    0.006722             0.00898  0.000278  0.00874   \n",
        "2020-09-10   0.0196    0.006722             0.00898  0.000278  0.00874   \n",
        "\n",
        "Country       Guinea      Iran     Italy    Kuwait    Mexico    Russia  \\\n",
        "Date                                                                     \n",
        "2020-09-06  0.018363  0.014463  0.003377  0.015698  0.035384  0.001382   \n",
        "2020-09-07  0.018363  0.014463  0.003377  0.015698  0.035384  0.001382   \n",
        "2020-09-08  0.018363  0.014463  0.003377  0.015698  0.035384  0.001382   \n",
        "2020-09-09  0.018363  0.014463  0.003377  0.015698  0.035384  0.001382   \n",
        "2020-09-10  0.018363  0.014463  0.003377  0.015698  0.035384  0.001382   \n",
        "\n",
        "Country     United Arab Emirates  United States  \n",
        "Date                                             \n",
        "2020-09-06              0.014458       0.001283  \n",
        "2020-09-07              0.014458       0.001283  \n",
        "2020-09-08              0.014458       0.001283  \n",
        "2020-09-09              0.014458       0.001283  \n",
        "2020-09-10              0.014458       0.001283  "
       ]
      }
     ],
     "prompt_number": 16
    },
    {
     "cell_type": "heading",
     "level": 3,
     "metadata": {},
     "source": [
      "$\\kappa$: Mortality rate of infected cases $\\mathrm{[-]}$"
     ]
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "analyser.param_history(\"kappa\", roll_window=None).tail()"
     ],
     "language": "python",
     "metadata": {},
     "outputs": [
      {
       "output_type": "display_data",
       "png": "\n",
       "text": [
        "<Figure size 648x432 with 1 Axes>"
       ]
      },
      {
       "html": [
        "<div>\n",
        "<style scoped>\n",
        "    .dataframe tbody tr th:only-of-type {\n",
        "        vertical-align: middle;\n",
        "    }\n",
        "\n",
        "    .dataframe tbody tr th {\n",
        "        vertical-align: top;\n",
        "    }\n",
        "\n",
        "    .dataframe thead th {\n",
        "        text-align: right;\n",
        "    }\n",
        "</style>\n",
        "<table border=\"1\" class=\"dataframe\">\n",
        "  <thead>\n",
        "    <tr style=\"text-align: right;\">\n",
        "      <th>Country</th>\n",
        "      <th>Bahrain</th>\n",
        "      <th>Bangladesh</th>\n",
        "      <th>Dominican Republic</th>\n",
        "      <th>France</th>\n",
        "      <th>Georgia</th>\n",
        "      <th>Guinea</th>\n",
        "      <th>Iran</th>\n",
        "      <th>Italy</th>\n",
        "      <th>Kuwait</th>\n",
        "      <th>Mexico</th>\n",
        "      <th>Russia</th>\n",
        "      <th>United Arab Emirates</th>\n",
        "      <th>United States</th>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>Date</th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "    </tr>\n",
        "  </thead>\n",
        "  <tbody>\n",
        "    <tr>\n",
        "      <th>2020-09-06</th>\n",
        "      <td>0.000037</td>\n",
        "      <td>0.000076</td>\n",
        "      <td>0.000168</td>\n",
        "      <td>0.000001</td>\n",
        "      <td>0.000036</td>\n",
        "      <td>0.000087</td>\n",
        "      <td>0.000014</td>\n",
        "      <td>0.00015</td>\n",
        "      <td>0.000057</td>\n",
        "      <td>0.000042</td>\n",
        "      <td>0.000057</td>\n",
        "      <td>0.000001</td>\n",
        "      <td>0.00001</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>2020-09-07</th>\n",
        "      <td>0.000037</td>\n",
        "      <td>0.000076</td>\n",
        "      <td>0.000168</td>\n",
        "      <td>0.000001</td>\n",
        "      <td>0.000036</td>\n",
        "      <td>0.000087</td>\n",
        "      <td>0.000014</td>\n",
        "      <td>0.00015</td>\n",
        "      <td>0.000057</td>\n",
        "      <td>0.000042</td>\n",
        "      <td>0.000057</td>\n",
        "      <td>0.000001</td>\n",
        "      <td>0.00001</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>2020-09-08</th>\n",
        "      <td>0.000037</td>\n",
        "      <td>0.000076</td>\n",
        "      <td>0.000168</td>\n",
        "      <td>0.000001</td>\n",
        "      <td>0.000036</td>\n",
        "      <td>0.000087</td>\n",
        "      <td>0.000014</td>\n",
        "      <td>0.00015</td>\n",
        "      <td>0.000057</td>\n",
        "      <td>0.000042</td>\n",
        "      <td>0.000057</td>\n",
        "      <td>0.000001</td>\n",
        "      <td>0.00001</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>2020-09-09</th>\n",
        "      <td>0.000037</td>\n",
        "      <td>0.000076</td>\n",
        "      <td>0.000168</td>\n",
        "      <td>0.000001</td>\n",
        "      <td>0.000036</td>\n",
        "      <td>0.000087</td>\n",
        "      <td>0.000014</td>\n",
        "      <td>0.00015</td>\n",
        "      <td>0.000057</td>\n",
        "      <td>0.000042</td>\n",
        "      <td>0.000057</td>\n",
        "      <td>0.000001</td>\n",
        "      <td>0.00001</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>2020-09-10</th>\n",
        "      <td>0.000037</td>\n",
        "      <td>0.000076</td>\n",
        "      <td>0.000168</td>\n",
        "      <td>0.000001</td>\n",
        "      <td>0.000036</td>\n",
        "      <td>0.000087</td>\n",
        "      <td>0.000014</td>\n",
        "      <td>0.00015</td>\n",
        "      <td>0.000057</td>\n",
        "      <td>0.000042</td>\n",
        "      <td>0.000057</td>\n",
        "      <td>0.000001</td>\n",
        "      <td>0.00001</td>\n",
        "    </tr>\n",
        "  </tbody>\n",
        "</table>\n",
        "</div>"
       ],
       "output_type": "pyout",
       "prompt_number": 17,
       "text": [
        "Country      Bahrain  Bangladesh  Dominican Republic    France   Georgia  \\\n",
        "Date                                                                       \n",
        "2020-09-06  0.000037    0.000076            0.000168  0.000001  0.000036   \n",
        "2020-09-07  0.000037    0.000076            0.000168  0.000001  0.000036   \n",
        "2020-09-08  0.000037    0.000076            0.000168  0.000001  0.000036   \n",
        "2020-09-09  0.000037    0.000076            0.000168  0.000001  0.000036   \n",
        "2020-09-10  0.000037    0.000076            0.000168  0.000001  0.000036   \n",
        "\n",
        "Country       Guinea      Iran    Italy    Kuwait    Mexico    Russia  \\\n",
        "Date                                                                    \n",
        "2020-09-06  0.000087  0.000014  0.00015  0.000057  0.000042  0.000057   \n",
        "2020-09-07  0.000087  0.000014  0.00015  0.000057  0.000042  0.000057   \n",
        "2020-09-08  0.000087  0.000014  0.00015  0.000057  0.000042  0.000057   \n",
        "2020-09-09  0.000087  0.000014  0.00015  0.000057  0.000042  0.000057   \n",
        "2020-09-10  0.000087  0.000014  0.00015  0.000057  0.000042  0.000057   \n",
        "\n",
        "Country     United Arab Emirates  United States  \n",
        "Date                                             \n",
        "2020-09-06              0.000001        0.00001  \n",
        "2020-09-07              0.000001        0.00001  \n",
        "2020-09-08              0.000001        0.00001  \n",
        "2020-09-09              0.000001        0.00001  \n",
        "2020-09-10              0.000001        0.00001  "
       ]
      }
     ],
     "prompt_number": 17
    },
    {
     "cell_type": "heading",
     "level": 3,
     "metadata": {},
     "source": [
      "$\\theta$: Mortality rate of S$^\\ast$ cases $\\mathrm{[-]}$"
     ]
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "analyser.param_history(\"theta\", roll_window=None).tail()"
     ],
     "language": "python",
     "metadata": {},
     "outputs": [
      {
       "output_type": "display_data",
       "png": "\n",
       "text": [
        "<Figure size 648x432 with 1 Axes>"
       ]
      },
      {
       "html": [
        "<div>\n",
        "<style scoped>\n",
        "    .dataframe tbody tr th:only-of-type {\n",
        "        vertical-align: middle;\n",
        "    }\n",
        "\n",
        "    .dataframe tbody tr th {\n",
        "        vertical-align: top;\n",
        "    }\n",
        "\n",
        "    .dataframe thead th {\n",
        "        text-align: right;\n",
        "    }\n",
        "</style>\n",
        "<table border=\"1\" class=\"dataframe\">\n",
        "  <thead>\n",
        "    <tr style=\"text-align: right;\">\n",
        "      <th>Country</th>\n",
        "      <th>Bahrain</th>\n",
        "      <th>Bangladesh</th>\n",
        "      <th>Dominican Republic</th>\n",
        "      <th>France</th>\n",
        "      <th>Georgia</th>\n",
        "      <th>Guinea</th>\n",
        "      <th>Iran</th>\n",
        "      <th>Italy</th>\n",
        "      <th>Kuwait</th>\n",
        "      <th>Mexico</th>\n",
        "      <th>Russia</th>\n",
        "      <th>United Arab Emirates</th>\n",
        "      <th>United States</th>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>Date</th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "    </tr>\n",
        "  </thead>\n",
        "  <tbody>\n",
        "    <tr>\n",
        "      <th>2020-09-06</th>\n",
        "      <td>0.000659</td>\n",
        "      <td>0.00038</td>\n",
        "      <td>0.000201</td>\n",
        "      <td>0.001256</td>\n",
        "      <td>0.016897</td>\n",
        "      <td>0.000296</td>\n",
        "      <td>0.057528</td>\n",
        "      <td>0.001063</td>\n",
        "      <td>0.000164</td>\n",
        "      <td>0.092645</td>\n",
        "      <td>0.011015</td>\n",
        "      <td>0.001255</td>\n",
        "      <td>0.021586</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>2020-09-07</th>\n",
        "      <td>0.000659</td>\n",
        "      <td>0.00038</td>\n",
        "      <td>0.000201</td>\n",
        "      <td>0.001256</td>\n",
        "      <td>0.016897</td>\n",
        "      <td>0.000296</td>\n",
        "      <td>0.057528</td>\n",
        "      <td>0.001063</td>\n",
        "      <td>0.000164</td>\n",
        "      <td>0.092645</td>\n",
        "      <td>0.011015</td>\n",
        "      <td>0.001255</td>\n",
        "      <td>0.021586</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>2020-09-08</th>\n",
        "      <td>0.000659</td>\n",
        "      <td>0.00038</td>\n",
        "      <td>0.000201</td>\n",
        "      <td>0.001256</td>\n",
        "      <td>0.016897</td>\n",
        "      <td>0.000296</td>\n",
        "      <td>0.057528</td>\n",
        "      <td>0.001063</td>\n",
        "      <td>0.000164</td>\n",
        "      <td>0.092645</td>\n",
        "      <td>0.011015</td>\n",
        "      <td>0.001255</td>\n",
        "      <td>0.021586</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>2020-09-09</th>\n",
        "      <td>0.000659</td>\n",
        "      <td>0.00038</td>\n",
        "      <td>0.000201</td>\n",
        "      <td>0.001256</td>\n",
        "      <td>0.016897</td>\n",
        "      <td>0.000296</td>\n",
        "      <td>0.057528</td>\n",
        "      <td>0.001063</td>\n",
        "      <td>0.000164</td>\n",
        "      <td>0.092645</td>\n",
        "      <td>0.011015</td>\n",
        "      <td>0.001255</td>\n",
        "      <td>0.021586</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>2020-09-10</th>\n",
        "      <td>0.000659</td>\n",
        "      <td>0.00038</td>\n",
        "      <td>0.000201</td>\n",
        "      <td>0.001256</td>\n",
        "      <td>0.016897</td>\n",
        "      <td>0.000296</td>\n",
        "      <td>0.057528</td>\n",
        "      <td>0.001063</td>\n",
        "      <td>0.000164</td>\n",
        "      <td>0.092645</td>\n",
        "      <td>0.011015</td>\n",
        "      <td>0.001255</td>\n",
        "      <td>0.021586</td>\n",
        "    </tr>\n",
        "  </tbody>\n",
        "</table>\n",
        "</div>"
       ],
       "output_type": "pyout",
       "prompt_number": 18,
       "text": [
        "Country      Bahrain  Bangladesh  Dominican Republic    France   Georgia  \\\n",
        "Date                                                                       \n",
        "2020-09-06  0.000659     0.00038            0.000201  0.001256  0.016897   \n",
        "2020-09-07  0.000659     0.00038            0.000201  0.001256  0.016897   \n",
        "2020-09-08  0.000659     0.00038            0.000201  0.001256  0.016897   \n",
        "2020-09-09  0.000659     0.00038            0.000201  0.001256  0.016897   \n",
        "2020-09-10  0.000659     0.00038            0.000201  0.001256  0.016897   \n",
        "\n",
        "Country       Guinea      Iran     Italy    Kuwait    Mexico    Russia  \\\n",
        "Date                                                                     \n",
        "2020-09-06  0.000296  0.057528  0.001063  0.000164  0.092645  0.011015   \n",
        "2020-09-07  0.000296  0.057528  0.001063  0.000164  0.092645  0.011015   \n",
        "2020-09-08  0.000296  0.057528  0.001063  0.000164  0.092645  0.011015   \n",
        "2020-09-09  0.000296  0.057528  0.001063  0.000164  0.092645  0.011015   \n",
        "2020-09-10  0.000296  0.057528  0.001063  0.000164  0.092645  0.011015   \n",
        "\n",
        "Country     United Arab Emirates  United States  \n",
        "Date                                             \n",
        "2020-09-06              0.001255       0.021586  \n",
        "2020-09-07              0.001255       0.021586  \n",
        "2020-09-08              0.001255       0.021586  \n",
        "2020-09-09              0.001255       0.021586  \n",
        "2020-09-10              0.001255       0.021586  "
       ]
      }
     ],
     "prompt_number": 18
    },
    {
     "cell_type": "markdown",
     "metadata": {},
     "source": [
      "## (Experimental): Relationship of OxCGRT index and parameter values\n",
      "Government responses will impact on parameter values of ODE models about 14 days later. Here, we will investigate on the relationship of [stringency index (from OxCGRT)](https://github.com/OxCGRT/covid-policy-tracker/blob/master/documentation/index_methodology.md) and reproduction number/model parameters.\n"
     ]
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "%matplotlib inline\n",
      "from matplotlib import pyplot as plt\n",
      "import seaborn as sns\n",
      "import pandas as pd"
     ],
     "language": "python",
     "metadata": {},
     "outputs": [],
     "prompt_number": 19
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "df = analyser.track()\n",
      "param_cols = [\"Rt\", *cs.SIRF.PARAMETERS]\n",
      "oxcgrt_cols = oxcgrt_data.OXCGRT_VARS[:]\n",
      "cols = param_cols + oxcgrt_cols\n",
      "delay = 14\n",
      "\n",
      "for col in param_cols:\n",
      "    df[col] = pd.to_numeric(df[col], errors=\"coerce\")\n",
      "    df[col] = df.groupby(\"Country\")[col].shift(0 - delay)\n",
      "\n",
      "df = df.dropna(how=\"any\")\n",
      "df = df.loc[:, [\"Date\", \"Country\", *cols]]\n",
      "track_df = df.copy()\n",
      "track_df.info()"
     ],
     "language": "python",
     "metadata": {},
     "outputs": [
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "<class 'pandas.core.frame.DataFrame'>\n",
        "Int64Index: 41673 entries, 0 to 41840\n",
        "Data columns (total 19 columns):\n",
        " #   Column                               Non-Null Count  Dtype         \n",
        "---  ------                               --------------  -----         \n",
        " 0   Date                                 41673 non-null  datetime64[ns]\n",
        " 1   Country                              41673 non-null  object        \n",
        " 2   Rt                                   41673 non-null  float64       \n",
        " 3   theta                                41673 non-null  float64       \n",
        " 4   kappa                                41673 non-null  float64       \n",
        " 5   rho                                  41673 non-null  float64       \n",
        " 6   sigma                                41673 non-null  float64       \n",
        " 7   School_closing                       41673 non-null  int64         \n",
        " 8   Workplace_closing                    41673 non-null  int64         \n",
        " 9   Cancel_events                        41673 non-null  int64         \n",
        " 10  Gatherings_restrictions              41673 non-null  int64         \n",
        " 11  Transport_closing                    41673 non-null  int64         \n",
        " 12  Stay_home_restrictions               41673 non-null  int64         \n",
        " 13  Internal_movement_restrictions       41673 non-null  int64         \n",
        " 14  International_movement_restrictions  41673 non-null  int64         \n",
        " 15  Information_campaigns                41673 non-null  int64         \n",
        " 16  Testing_policy                       41673 non-null  int64         \n",
        " 17  Contact_tracing                      41673 non-null  int64         \n",
        " 18  Stringency_index                     41673 non-null  float64       \n",
        "dtypes: datetime64[ns](1), float64(6), int64(11), object(1)\n",
        "memory usage: 6.4+ MB\n"
       ]
      }
     ],
     "prompt_number": 20
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "# Correlation\n",
      "df = track_df.copy()\n",
      "df.corr().style.background_gradient(axis=None)"
     ],
     "language": "python",
     "metadata": {},
     "outputs": [
      {
       "html": [
        "<style  type=\"text/css\" >\n",
        "#T_061c8fc8_f37d_11ea_bf5a_525400e653earow0_col0,#T_061c8fc8_f37d_11ea_bf5a_525400e653earow1_col1,#T_061c8fc8_f37d_11ea_bf5a_525400e653earow2_col2,#T_061c8fc8_f37d_11ea_bf5a_525400e653earow3_col3,#T_061c8fc8_f37d_11ea_bf5a_525400e653earow4_col4,#T_061c8fc8_f37d_11ea_bf5a_525400e653earow5_col5,#T_061c8fc8_f37d_11ea_bf5a_525400e653earow6_col6,#T_061c8fc8_f37d_11ea_bf5a_525400e653earow7_col7,#T_061c8fc8_f37d_11ea_bf5a_525400e653earow8_col8,#T_061c8fc8_f37d_11ea_bf5a_525400e653earow9_col9,#T_061c8fc8_f37d_11ea_bf5a_525400e653earow10_col10,#T_061c8fc8_f37d_11ea_bf5a_525400e653earow11_col11,#T_061c8fc8_f37d_11ea_bf5a_525400e653earow12_col12,#T_061c8fc8_f37d_11ea_bf5a_525400e653earow13_col13,#T_061c8fc8_f37d_11ea_bf5a_525400e653earow14_col14,#T_061c8fc8_f37d_11ea_bf5a_525400e653earow15_col15,#T_061c8fc8_f37d_11ea_bf5a_525400e653earow16_col16{\n",
        "            background-color:  #023858;\n",
        "            color:  #f1f1f1;\n",
        "        }#T_061c8fc8_f37d_11ea_bf5a_525400e653earow0_col1,#T_061c8fc8_f37d_11ea_bf5a_525400e653earow1_col0{\n",
        "            background-color:  #d7d6e9;\n",
        "            color:  #000000;\n",
        "        }#T_061c8fc8_f37d_11ea_bf5a_525400e653earow0_col2,#T_061c8fc8_f37d_11ea_bf5a_525400e653earow2_col0{\n",
        "            background-color:  #e6e2ef;\n",
        "            color:  #000000;\n",
        "        }#T_061c8fc8_f37d_11ea_bf5a_525400e653earow0_col3,#T_061c8fc8_f37d_11ea_bf5a_525400e653earow1_col12,#T_061c8fc8_f37d_11ea_bf5a_525400e653earow2_col10,#T_061c8fc8_f37d_11ea_bf5a_525400e653earow3_col0,#T_061c8fc8_f37d_11ea_bf5a_525400e653earow10_col2,#T_061c8fc8_f37d_11ea_bf5a_525400e653earow12_col1{\n",
        "            background-color:  #91b5d6;\n",
        "            color:  #000000;\n",
        "        }#T_061c8fc8_f37d_11ea_bf5a_525400e653earow0_col4,#T_061c8fc8_f37d_11ea_bf5a_525400e653earow4_col0{\n",
        "            background-color:  #dfddec;\n",
        "            color:  #000000;\n",
        "        }#T_061c8fc8_f37d_11ea_bf5a_525400e653earow0_col5,#T_061c8fc8_f37d_11ea_bf5a_525400e653earow5_col0{\n",
        "            background-color:  #dcdaeb;\n",
        "            color:  #000000;\n",
        "        }#T_061c8fc8_f37d_11ea_bf5a_525400e653earow0_col6,#T_061c8fc8_f37d_11ea_bf5a_525400e653earow1_col6,#T_061c8fc8_f37d_11ea_bf5a_525400e653earow6_col0,#T_061c8fc8_f37d_11ea_bf5a_525400e653earow6_col1{\n",
        "            background-color:  #d5d5e8;\n",
        "            color:  #000000;\n",
        "        }#T_061c8fc8_f37d_11ea_bf5a_525400e653earow0_col7,#T_061c8fc8_f37d_11ea_bf5a_525400e653earow7_col0{\n",
        "            background-color:  #d3d4e7;\n",
        "            color:  #000000;\n",
        "        }#T_061c8fc8_f37d_11ea_bf5a_525400e653earow0_col8,#T_061c8fc8_f37d_11ea_bf5a_525400e653earow8_col0{\n",
        "            background-color:  #c6cce3;\n",
        "            color:  #000000;\n",
        "        }#T_061c8fc8_f37d_11ea_bf5a_525400e653earow0_col9,#T_061c8fc8_f37d_11ea_bf5a_525400e653earow0_col11,#T_061c8fc8_f37d_11ea_bf5a_525400e653earow0_col16,#T_061c8fc8_f37d_11ea_bf5a_525400e653earow2_col5,#T_061c8fc8_f37d_11ea_bf5a_525400e653earow5_col2,#T_061c8fc8_f37d_11ea_bf5a_525400e653earow9_col0,#T_061c8fc8_f37d_11ea_bf5a_525400e653earow11_col0,#T_061c8fc8_f37d_11ea_bf5a_525400e653earow16_col0{\n",
        "            background-color:  #e0deed;\n",
        "            color:  #000000;\n",
        "        }#T_061c8fc8_f37d_11ea_bf5a_525400e653earow0_col10,#T_061c8fc8_f37d_11ea_bf5a_525400e653earow10_col0{\n",
        "            background-color:  #e3e0ee;\n",
        "            color:  #000000;\n",
        "        }#T_061c8fc8_f37d_11ea_bf5a_525400e653earow0_col12,#T_061c8fc8_f37d_11ea_bf5a_525400e653earow12_col0{\n",
        "            background-color:  #fff7fb;\n",
        "            color:  #000000;\n",
        "        }#T_061c8fc8_f37d_11ea_bf5a_525400e653earow0_col13,#T_061c8fc8_f37d_11ea_bf5a_525400e653earow13_col0{\n",
        "            background-color:  #d1d2e6;\n",
        "            color:  #000000;\n",
        "        }#T_061c8fc8_f37d_11ea_bf5a_525400e653earow0_col14,#T_061c8fc8_f37d_11ea_bf5a_525400e653earow0_col15,#T_061c8fc8_f37d_11ea_bf5a_525400e653earow14_col0,#T_061c8fc8_f37d_11ea_bf5a_525400e653earow15_col0{\n",
        "            background-color:  #e2dfee;\n",
        "            color:  #000000;\n",
        "        }#T_061c8fc8_f37d_11ea_bf5a_525400e653earow1_col2,#T_061c8fc8_f37d_11ea_bf5a_525400e653earow2_col1{\n",
        "            background-color:  #034165;\n",
        "            color:  #f1f1f1;\n",
        "        }#T_061c8fc8_f37d_11ea_bf5a_525400e653earow1_col3,#T_061c8fc8_f37d_11ea_bf5a_525400e653earow3_col1,#T_061c8fc8_f37d_11ea_bf5a_525400e653earow6_col13,#T_061c8fc8_f37d_11ea_bf5a_525400e653earow13_col6{\n",
        "            background-color:  #045e93;\n",
        "            color:  #f1f1f1;\n",
        "        }#T_061c8fc8_f37d_11ea_bf5a_525400e653earow1_col4,#T_061c8fc8_f37d_11ea_bf5a_525400e653earow4_col1{\n",
        "            background-color:  #c4cbe3;\n",
        "            color:  #000000;\n",
        "        }#T_061c8fc8_f37d_11ea_bf5a_525400e653earow1_col5,#T_061c8fc8_f37d_11ea_bf5a_525400e653earow5_col1{\n",
        "            background-color:  #e1dfed;\n",
        "            color:  #000000;\n",
        "        }#T_061c8fc8_f37d_11ea_bf5a_525400e653earow1_col7,#T_061c8fc8_f37d_11ea_bf5a_525400e653earow7_col1{\n",
        "            background-color:  #eee9f3;\n",
        "            color:  #000000;\n",
        "        }#T_061c8fc8_f37d_11ea_bf5a_525400e653earow1_col8,#T_061c8fc8_f37d_11ea_bf5a_525400e653earow2_col13,#T_061c8fc8_f37d_11ea_bf5a_525400e653earow3_col7,#T_061c8fc8_f37d_11ea_bf5a_525400e653earow7_col3,#T_061c8fc8_f37d_11ea_bf5a_525400e653earow8_col1,#T_061c8fc8_f37d_11ea_bf5a_525400e653earow13_col2{\n",
        "            background-color:  #efe9f3;\n",
        "            color:  #000000;\n",
        "        }#T_061c8fc8_f37d_11ea_bf5a_525400e653earow1_col9,#T_061c8fc8_f37d_11ea_bf5a_525400e653earow3_col9,#T_061c8fc8_f37d_11ea_bf5a_525400e653earow9_col1,#T_061c8fc8_f37d_11ea_bf5a_525400e653earow9_col3{\n",
        "            background-color:  #ebe6f2;\n",
        "            color:  #000000;\n",
        "        }#T_061c8fc8_f37d_11ea_bf5a_525400e653earow1_col10,#T_061c8fc8_f37d_11ea_bf5a_525400e653earow10_col1{\n",
        "            background-color:  #a4bcda;\n",
        "            color:  #000000;\n",
        "        }#T_061c8fc8_f37d_11ea_bf5a_525400e653earow1_col11,#T_061c8fc8_f37d_11ea_bf5a_525400e653earow2_col6,#T_061c8fc8_f37d_11ea_bf5a_525400e653earow6_col2,#T_061c8fc8_f37d_11ea_bf5a_525400e653earow11_col1{\n",
        "            background-color:  #d2d2e7;\n",
        "            color:  #000000;\n",
        "        }#T_061c8fc8_f37d_11ea_bf5a_525400e653earow1_col13,#T_061c8fc8_f37d_11ea_bf5a_525400e653earow13_col1{\n",
        "            background-color:  #f1ebf5;\n",
        "            color:  #000000;\n",
        "        }#T_061c8fc8_f37d_11ea_bf5a_525400e653earow1_col14,#T_061c8fc8_f37d_11ea_bf5a_525400e653earow14_col1{\n",
        "            background-color:  #f4eef6;\n",
        "            color:  #000000;\n",
        "        }#T_061c8fc8_f37d_11ea_bf5a_525400e653earow1_col15,#T_061c8fc8_f37d_11ea_bf5a_525400e653earow4_col14,#T_061c8fc8_f37d_11ea_bf5a_525400e653earow14_col4,#T_061c8fc8_f37d_11ea_bf5a_525400e653earow15_col1{\n",
        "            background-color:  #bfc9e1;\n",
        "            color:  #000000;\n",
        "        }#T_061c8fc8_f37d_11ea_bf5a_525400e653earow1_col16,#T_061c8fc8_f37d_11ea_bf5a_525400e653earow16_col1{\n",
        "            background-color:  #d9d8ea;\n",
        "            color:  #000000;\n",
        "        }#T_061c8fc8_f37d_11ea_bf5a_525400e653earow2_col3,#T_061c8fc8_f37d_11ea_bf5a_525400e653earow3_col2,#T_061c8fc8_f37d_11ea_bf5a_525400e653earow9_col16,#T_061c8fc8_f37d_11ea_bf5a_525400e653earow16_col9{\n",
        "            background-color:  #046096;\n",
        "            color:  #f1f1f1;\n",
        "        }#T_061c8fc8_f37d_11ea_bf5a_525400e653earow2_col4,#T_061c8fc8_f37d_11ea_bf5a_525400e653earow4_col2{\n",
        "            background-color:  #cccfe5;\n",
        "            color:  #000000;\n",
        "        }#T_061c8fc8_f37d_11ea_bf5a_525400e653earow2_col7,#T_061c8fc8_f37d_11ea_bf5a_525400e653earow7_col2{\n",
        "            background-color:  #e9e5f1;\n",
        "            color:  #000000;\n",
        "        }#T_061c8fc8_f37d_11ea_bf5a_525400e653earow2_col8,#T_061c8fc8_f37d_11ea_bf5a_525400e653earow8_col2{\n",
        "            background-color:  #e8e4f0;\n",
        "            color:  #000000;\n",
        "        }#T_061c8fc8_f37d_11ea_bf5a_525400e653earow2_col9,#T_061c8fc8_f37d_11ea_bf5a_525400e653earow9_col2{\n",
        "            background-color:  #e4e1ef;\n",
        "            color:  #000000;\n",
        "        }#T_061c8fc8_f37d_11ea_bf5a_525400e653earow2_col11,#T_061c8fc8_f37d_11ea_bf5a_525400e653earow11_col2{\n",
        "            background-color:  #c2cbe2;\n",
        "            color:  #000000;\n",
        "        }#T_061c8fc8_f37d_11ea_bf5a_525400e653earow2_col12,#T_061c8fc8_f37d_11ea_bf5a_525400e653earow12_col2{\n",
        "            background-color:  #78abd0;\n",
        "            color:  #000000;\n",
        "        }#T_061c8fc8_f37d_11ea_bf5a_525400e653earow2_col14,#T_061c8fc8_f37d_11ea_bf5a_525400e653earow14_col2{\n",
        "            background-color:  #e7e3f0;\n",
        "            color:  #000000;\n",
        "        }#T_061c8fc8_f37d_11ea_bf5a_525400e653earow2_col15,#T_061c8fc8_f37d_11ea_bf5a_525400e653earow15_col2{\n",
        "            background-color:  #b1c2de;\n",
        "            color:  #000000;\n",
        "        }#T_061c8fc8_f37d_11ea_bf5a_525400e653earow2_col16,#T_061c8fc8_f37d_11ea_bf5a_525400e653earow16_col2{\n",
        "            background-color:  #d4d4e8;\n",
        "            color:  #000000;\n",
        "        }#T_061c8fc8_f37d_11ea_bf5a_525400e653earow3_col4,#T_061c8fc8_f37d_11ea_bf5a_525400e653earow3_col12,#T_061c8fc8_f37d_11ea_bf5a_525400e653earow4_col3,#T_061c8fc8_f37d_11ea_bf5a_525400e653earow12_col3{\n",
        "            background-color:  #a2bcda;\n",
        "            color:  #000000;\n",
        "        }#T_061c8fc8_f37d_11ea_bf5a_525400e653earow3_col5,#T_061c8fc8_f37d_11ea_bf5a_525400e653earow5_col3{\n",
        "            background-color:  #d6d6e9;\n",
        "            color:  #000000;\n",
        "        }#T_061c8fc8_f37d_11ea_bf5a_525400e653earow3_col6,#T_061c8fc8_f37d_11ea_bf5a_525400e653earow6_col3{\n",
        "            background-color:  #cacee5;\n",
        "            color:  #000000;\n",
        "        }#T_061c8fc8_f37d_11ea_bf5a_525400e653earow3_col8,#T_061c8fc8_f37d_11ea_bf5a_525400e653earow8_col3{\n",
        "            background-color:  #eee8f3;\n",
        "            color:  #000000;\n",
        "        }#T_061c8fc8_f37d_11ea_bf5a_525400e653earow3_col10,#T_061c8fc8_f37d_11ea_bf5a_525400e653earow10_col3{\n",
        "            background-color:  #a7bddb;\n",
        "            color:  #000000;\n",
        "        }#T_061c8fc8_f37d_11ea_bf5a_525400e653earow3_col11,#T_061c8fc8_f37d_11ea_bf5a_525400e653earow11_col3{\n",
        "            background-color:  #d2d3e7;\n",
        "            color:  #000000;\n",
        "        }#T_061c8fc8_f37d_11ea_bf5a_525400e653earow3_col13,#T_061c8fc8_f37d_11ea_bf5a_525400e653earow13_col3{\n",
        "            background-color:  #f2ecf5;\n",
        "            color:  #000000;\n",
        "        }#T_061c8fc8_f37d_11ea_bf5a_525400e653earow3_col14,#T_061c8fc8_f37d_11ea_bf5a_525400e653earow14_col3{\n",
        "            background-color:  #f8f1f8;\n",
        "            color:  #000000;\n",
        "        }#T_061c8fc8_f37d_11ea_bf5a_525400e653earow3_col15,#T_061c8fc8_f37d_11ea_bf5a_525400e653earow15_col3{\n",
        "            background-color:  #d0d1e6;\n",
        "            color:  #000000;\n",
        "        }#T_061c8fc8_f37d_11ea_bf5a_525400e653earow3_col16,#T_061c8fc8_f37d_11ea_bf5a_525400e653earow16_col3{\n",
        "            background-color:  #d8d7e9;\n",
        "            color:  #000000;\n",
        "        }#T_061c8fc8_f37d_11ea_bf5a_525400e653earow4_col5,#T_061c8fc8_f37d_11ea_bf5a_525400e653earow5_col4{\n",
        "            background-color:  #6fa7ce;\n",
        "            color:  #000000;\n",
        "        }#T_061c8fc8_f37d_11ea_bf5a_525400e653earow4_col6,#T_061c8fc8_f37d_11ea_bf5a_525400e653earow6_col4{\n",
        "            background-color:  #9ab8d8;\n",
        "            color:  #000000;\n",
        "        }#T_061c8fc8_f37d_11ea_bf5a_525400e653earow4_col7,#T_061c8fc8_f37d_11ea_bf5a_525400e653earow7_col4{\n",
        "            background-color:  #93b5d6;\n",
        "            color:  #000000;\n",
        "        }#T_061c8fc8_f37d_11ea_bf5a_525400e653earow4_col8,#T_061c8fc8_f37d_11ea_bf5a_525400e653earow8_col4{\n",
        "            background-color:  #c5cce3;\n",
        "            color:  #000000;\n",
        "        }#T_061c8fc8_f37d_11ea_bf5a_525400e653earow4_col9,#T_061c8fc8_f37d_11ea_bf5a_525400e653earow4_col10,#T_061c8fc8_f37d_11ea_bf5a_525400e653earow9_col4,#T_061c8fc8_f37d_11ea_bf5a_525400e653earow10_col4{\n",
        "            background-color:  #abbfdc;\n",
        "            color:  #000000;\n",
        "        }#T_061c8fc8_f37d_11ea_bf5a_525400e653earow4_col11,#T_061c8fc8_f37d_11ea_bf5a_525400e653earow11_col4{\n",
        "            background-color:  #bbc7e0;\n",
        "            color:  #000000;\n",
        "        }#T_061c8fc8_f37d_11ea_bf5a_525400e653earow4_col12,#T_061c8fc8_f37d_11ea_bf5a_525400e653earow12_col4{\n",
        "            background-color:  #9fbad9;\n",
        "            color:  #000000;\n",
        "        }#T_061c8fc8_f37d_11ea_bf5a_525400e653earow4_col13,#T_061c8fc8_f37d_11ea_bf5a_525400e653earow13_col4{\n",
        "            background-color:  #8eb3d5;\n",
        "            color:  #000000;\n",
        "        }#T_061c8fc8_f37d_11ea_bf5a_525400e653earow4_col15,#T_061c8fc8_f37d_11ea_bf5a_525400e653earow15_col4{\n",
        "            background-color:  #88b1d4;\n",
        "            color:  #000000;\n",
        "        }#T_061c8fc8_f37d_11ea_bf5a_525400e653earow4_col16,#T_061c8fc8_f37d_11ea_bf5a_525400e653earow16_col4{\n",
        "            background-color:  #8cb3d5;\n",
        "            color:  #000000;\n",
        "        }#T_061c8fc8_f37d_11ea_bf5a_525400e653earow5_col6,#T_061c8fc8_f37d_11ea_bf5a_525400e653earow6_col5,#T_061c8fc8_f37d_11ea_bf5a_525400e653earow8_col11,#T_061c8fc8_f37d_11ea_bf5a_525400e653earow11_col8{\n",
        "            background-color:  #045f95;\n",
        "            color:  #f1f1f1;\n",
        "        }#T_061c8fc8_f37d_11ea_bf5a_525400e653earow5_col7,#T_061c8fc8_f37d_11ea_bf5a_525400e653earow7_col5{\n",
        "            background-color:  #04639b;\n",
        "            color:  #f1f1f1;\n",
        "        }#T_061c8fc8_f37d_11ea_bf5a_525400e653earow5_col8,#T_061c8fc8_f37d_11ea_bf5a_525400e653earow8_col5{\n",
        "            background-color:  #0872b1;\n",
        "            color:  #f1f1f1;\n",
        "        }#T_061c8fc8_f37d_11ea_bf5a_525400e653earow5_col9,#T_061c8fc8_f37d_11ea_bf5a_525400e653earow9_col5{\n",
        "            background-color:  #1077b4;\n",
        "            color:  #f1f1f1;\n",
        "        }#T_061c8fc8_f37d_11ea_bf5a_525400e653earow5_col10,#T_061c8fc8_f37d_11ea_bf5a_525400e653earow6_col14,#T_061c8fc8_f37d_11ea_bf5a_525400e653earow10_col5,#T_061c8fc8_f37d_11ea_bf5a_525400e653earow14_col6{\n",
        "            background-color:  #2081b9;\n",
        "            color:  #000000;\n",
        "        }#T_061c8fc8_f37d_11ea_bf5a_525400e653earow5_col11,#T_061c8fc8_f37d_11ea_bf5a_525400e653earow11_col5{\n",
        "            background-color:  #1e80b8;\n",
        "            color:  #000000;\n",
        "        }#T_061c8fc8_f37d_11ea_bf5a_525400e653earow5_col12,#T_061c8fc8_f37d_11ea_bf5a_525400e653earow10_col13,#T_061c8fc8_f37d_11ea_bf5a_525400e653earow11_col12,#T_061c8fc8_f37d_11ea_bf5a_525400e653earow11_col14,#T_061c8fc8_f37d_11ea_bf5a_525400e653earow12_col5,#T_061c8fc8_f37d_11ea_bf5a_525400e653earow12_col11,#T_061c8fc8_f37d_11ea_bf5a_525400e653earow13_col10,#T_061c8fc8_f37d_11ea_bf5a_525400e653earow14_col11{\n",
        "            background-color:  #1278b4;\n",
        "            color:  #f1f1f1;\n",
        "        }#T_061c8fc8_f37d_11ea_bf5a_525400e653earow5_col13,#T_061c8fc8_f37d_11ea_bf5a_525400e653earow8_col9,#T_061c8fc8_f37d_11ea_bf5a_525400e653earow9_col8,#T_061c8fc8_f37d_11ea_bf5a_525400e653earow13_col5{\n",
        "            background-color:  #04649d;\n",
        "            color:  #f1f1f1;\n",
        "        }#T_061c8fc8_f37d_11ea_bf5a_525400e653earow5_col14,#T_061c8fc8_f37d_11ea_bf5a_525400e653earow14_col5{\n",
        "            background-color:  #157ab5;\n",
        "            color:  #000000;\n",
        "        }#T_061c8fc8_f37d_11ea_bf5a_525400e653earow5_col15,#T_061c8fc8_f37d_11ea_bf5a_525400e653earow15_col5{\n",
        "            background-color:  #5ea0ca;\n",
        "            color:  #000000;\n",
        "        }#T_061c8fc8_f37d_11ea_bf5a_525400e653earow5_col16,#T_061c8fc8_f37d_11ea_bf5a_525400e653earow16_col5{\n",
        "            background-color:  #045a8d;\n",
        "            color:  #f1f1f1;\n",
        "        }#T_061c8fc8_f37d_11ea_bf5a_525400e653earow6_col7,#T_061c8fc8_f37d_11ea_bf5a_525400e653earow7_col6{\n",
        "            background-color:  #04649e;\n",
        "            color:  #f1f1f1;\n",
        "        }#T_061c8fc8_f37d_11ea_bf5a_525400e653earow6_col8,#T_061c8fc8_f37d_11ea_bf5a_525400e653earow8_col6,#T_061c8fc8_f37d_11ea_bf5a_525400e653earow9_col11,#T_061c8fc8_f37d_11ea_bf5a_525400e653earow11_col9{\n",
        "            background-color:  #046198;\n",
        "            color:  #f1f1f1;\n",
        "        }#T_061c8fc8_f37d_11ea_bf5a_525400e653earow6_col9,#T_061c8fc8_f37d_11ea_bf5a_525400e653earow9_col6{\n",
        "            background-color:  #0566a0;\n",
        "            color:  #f1f1f1;\n",
        "        }#T_061c8fc8_f37d_11ea_bf5a_525400e653earow6_col10,#T_061c8fc8_f37d_11ea_bf5a_525400e653earow10_col6{\n",
        "            background-color:  #05659f;\n",
        "            color:  #f1f1f1;\n",
        "        }#T_061c8fc8_f37d_11ea_bf5a_525400e653earow6_col11,#T_061c8fc8_f37d_11ea_bf5a_525400e653earow8_col14,#T_061c8fc8_f37d_11ea_bf5a_525400e653earow11_col6,#T_061c8fc8_f37d_11ea_bf5a_525400e653earow14_col8{\n",
        "            background-color:  #0567a1;\n",
        "            color:  #f1f1f1;\n",
        "        }#T_061c8fc8_f37d_11ea_bf5a_525400e653earow6_col12,#T_061c8fc8_f37d_11ea_bf5a_525400e653earow10_col14,#T_061c8fc8_f37d_11ea_bf5a_525400e653earow12_col6,#T_061c8fc8_f37d_11ea_bf5a_525400e653earow14_col10{\n",
        "            background-color:  #2484ba;\n",
        "            color:  #000000;\n",
        "        }#T_061c8fc8_f37d_11ea_bf5a_525400e653earow6_col15,#T_061c8fc8_f37d_11ea_bf5a_525400e653earow15_col6{\n",
        "            background-color:  #509ac6;\n",
        "            color:  #000000;\n",
        "        }#T_061c8fc8_f37d_11ea_bf5a_525400e653earow6_col16,#T_061c8fc8_f37d_11ea_bf5a_525400e653earow16_col6{\n",
        "            background-color:  #034973;\n",
        "            color:  #f1f1f1;\n",
        "        }#T_061c8fc8_f37d_11ea_bf5a_525400e653earow7_col8,#T_061c8fc8_f37d_11ea_bf5a_525400e653earow8_col7{\n",
        "            background-color:  #045687;\n",
        "            color:  #f1f1f1;\n",
        "        }#T_061c8fc8_f37d_11ea_bf5a_525400e653earow7_col9,#T_061c8fc8_f37d_11ea_bf5a_525400e653earow9_col7{\n",
        "            background-color:  #1b7eb7;\n",
        "            color:  #000000;\n",
        "        }#T_061c8fc8_f37d_11ea_bf5a_525400e653earow7_col10,#T_061c8fc8_f37d_11ea_bf5a_525400e653earow10_col7,#T_061c8fc8_f37d_11ea_bf5a_525400e653earow14_col16,#T_061c8fc8_f37d_11ea_bf5a_525400e653earow16_col14{\n",
        "            background-color:  #0a73b2;\n",
        "            color:  #f1f1f1;\n",
        "        }#T_061c8fc8_f37d_11ea_bf5a_525400e653earow7_col11,#T_061c8fc8_f37d_11ea_bf5a_525400e653earow11_col7{\n",
        "            background-color:  #056ba7;\n",
        "            color:  #f1f1f1;\n",
        "        }#T_061c8fc8_f37d_11ea_bf5a_525400e653earow7_col12,#T_061c8fc8_f37d_11ea_bf5a_525400e653earow12_col7{\n",
        "            background-color:  #348ebf;\n",
        "            color:  #000000;\n",
        "        }#T_061c8fc8_f37d_11ea_bf5a_525400e653earow7_col13,#T_061c8fc8_f37d_11ea_bf5a_525400e653earow13_col7{\n",
        "            background-color:  #034a74;\n",
        "            color:  #f1f1f1;\n",
        "        }#T_061c8fc8_f37d_11ea_bf5a_525400e653earow7_col14,#T_061c8fc8_f37d_11ea_bf5a_525400e653earow13_col14,#T_061c8fc8_f37d_11ea_bf5a_525400e653earow14_col7,#T_061c8fc8_f37d_11ea_bf5a_525400e653earow14_col13{\n",
        "            background-color:  #056ba9;\n",
        "            color:  #f1f1f1;\n",
        "        }#T_061c8fc8_f37d_11ea_bf5a_525400e653earow7_col15,#T_061c8fc8_f37d_11ea_bf5a_525400e653earow15_col7{\n",
        "            background-color:  #056dab;\n",
        "            color:  #f1f1f1;\n",
        "        }#T_061c8fc8_f37d_11ea_bf5a_525400e653earow7_col16,#T_061c8fc8_f37d_11ea_bf5a_525400e653earow8_col16,#T_061c8fc8_f37d_11ea_bf5a_525400e653earow16_col7,#T_061c8fc8_f37d_11ea_bf5a_525400e653earow16_col8{\n",
        "            background-color:  #034f7d;\n",
        "            color:  #f1f1f1;\n",
        "        }#T_061c8fc8_f37d_11ea_bf5a_525400e653earow8_col10,#T_061c8fc8_f37d_11ea_bf5a_525400e653earow10_col8{\n",
        "            background-color:  #056aa6;\n",
        "            color:  #f1f1f1;\n",
        "        }#T_061c8fc8_f37d_11ea_bf5a_525400e653earow8_col12,#T_061c8fc8_f37d_11ea_bf5a_525400e653earow12_col8{\n",
        "            background-color:  #2d8abd;\n",
        "            color:  #000000;\n",
        "        }#T_061c8fc8_f37d_11ea_bf5a_525400e653earow8_col13,#T_061c8fc8_f37d_11ea_bf5a_525400e653earow13_col8{\n",
        "            background-color:  #045382;\n",
        "            color:  #f1f1f1;\n",
        "        }#T_061c8fc8_f37d_11ea_bf5a_525400e653earow8_col15,#T_061c8fc8_f37d_11ea_bf5a_525400e653earow15_col8{\n",
        "            background-color:  #2987bc;\n",
        "            color:  #000000;\n",
        "        }#T_061c8fc8_f37d_11ea_bf5a_525400e653earow9_col10,#T_061c8fc8_f37d_11ea_bf5a_525400e653earow10_col9{\n",
        "            background-color:  #056ead;\n",
        "            color:  #f1f1f1;\n",
        "        }#T_061c8fc8_f37d_11ea_bf5a_525400e653earow9_col12,#T_061c8fc8_f37d_11ea_bf5a_525400e653earow10_col15,#T_061c8fc8_f37d_11ea_bf5a_525400e653earow12_col9,#T_061c8fc8_f37d_11ea_bf5a_525400e653earow15_col10{\n",
        "            background-color:  #187cb6;\n",
        "            color:  #000000;\n",
        "        }#T_061c8fc8_f37d_11ea_bf5a_525400e653earow9_col13,#T_061c8fc8_f37d_11ea_bf5a_525400e653earow13_col9{\n",
        "            background-color:  #0f76b3;\n",
        "            color:  #f1f1f1;\n",
        "        }#T_061c8fc8_f37d_11ea_bf5a_525400e653earow9_col14,#T_061c8fc8_f37d_11ea_bf5a_525400e653earow14_col9{\n",
        "            background-color:  #0771b1;\n",
        "            color:  #f1f1f1;\n",
        "        }#T_061c8fc8_f37d_11ea_bf5a_525400e653earow9_col15,#T_061c8fc8_f37d_11ea_bf5a_525400e653earow15_col9{\n",
        "            background-color:  #7dacd1;\n",
        "            color:  #000000;\n",
        "        }#T_061c8fc8_f37d_11ea_bf5a_525400e653earow10_col11,#T_061c8fc8_f37d_11ea_bf5a_525400e653earow11_col10{\n",
        "            background-color:  #045b8f;\n",
        "            color:  #f1f1f1;\n",
        "        }#T_061c8fc8_f37d_11ea_bf5a_525400e653earow10_col12,#T_061c8fc8_f37d_11ea_bf5a_525400e653earow12_col10{\n",
        "            background-color:  #0570b0;\n",
        "            color:  #f1f1f1;\n",
        "        }#T_061c8fc8_f37d_11ea_bf5a_525400e653earow10_col16,#T_061c8fc8_f37d_11ea_bf5a_525400e653earow16_col10{\n",
        "            background-color:  #045c90;\n",
        "            color:  #f1f1f1;\n",
        "        }#T_061c8fc8_f37d_11ea_bf5a_525400e653earow11_col13,#T_061c8fc8_f37d_11ea_bf5a_525400e653earow13_col11{\n",
        "            background-color:  #056fae;\n",
        "            color:  #f1f1f1;\n",
        "        }#T_061c8fc8_f37d_11ea_bf5a_525400e653earow11_col15,#T_061c8fc8_f37d_11ea_bf5a_525400e653earow15_col11{\n",
        "            background-color:  #3b92c1;\n",
        "            color:  #000000;\n",
        "        }#T_061c8fc8_f37d_11ea_bf5a_525400e653earow11_col16,#T_061c8fc8_f37d_11ea_bf5a_525400e653earow16_col11{\n",
        "            background-color:  #045b8e;\n",
        "            color:  #f1f1f1;\n",
        "        }#T_061c8fc8_f37d_11ea_bf5a_525400e653earow12_col13,#T_061c8fc8_f37d_11ea_bf5a_525400e653earow12_col15,#T_061c8fc8_f37d_11ea_bf5a_525400e653earow13_col12,#T_061c8fc8_f37d_11ea_bf5a_525400e653earow15_col12{\n",
        "            background-color:  #4094c3;\n",
        "            color:  #000000;\n",
        "        }#T_061c8fc8_f37d_11ea_bf5a_525400e653earow12_col14,#T_061c8fc8_f37d_11ea_bf5a_525400e653earow14_col12{\n",
        "            background-color:  #197db7;\n",
        "            color:  #000000;\n",
        "        }#T_061c8fc8_f37d_11ea_bf5a_525400e653earow12_col16,#T_061c8fc8_f37d_11ea_bf5a_525400e653earow16_col12{\n",
        "            background-color:  #056dac;\n",
        "            color:  #f1f1f1;\n",
        "        }#T_061c8fc8_f37d_11ea_bf5a_525400e653earow13_col15,#T_061c8fc8_f37d_11ea_bf5a_525400e653earow15_col13{\n",
        "            background-color:  #0c74b2;\n",
        "            color:  #f1f1f1;\n",
        "        }#T_061c8fc8_f37d_11ea_bf5a_525400e653earow13_col16,#T_061c8fc8_f37d_11ea_bf5a_525400e653earow16_col13{\n",
        "            background-color:  #034d79;\n",
        "            color:  #f1f1f1;\n",
        "        }#T_061c8fc8_f37d_11ea_bf5a_525400e653earow14_col15,#T_061c8fc8_f37d_11ea_bf5a_525400e653earow15_col14{\n",
        "            background-color:  #3991c1;\n",
        "            color:  #000000;\n",
        "        }#T_061c8fc8_f37d_11ea_bf5a_525400e653earow15_col16,#T_061c8fc8_f37d_11ea_bf5a_525400e653earow16_col15{\n",
        "            background-color:  #1379b5;\n",
        "            color:  #f1f1f1;\n",
        "        }</style><table id=\"T_061c8fc8_f37d_11ea_bf5a_525400e653ea\" ><thead>    <tr>        <th class=\"blank level0\" ></th>        <th class=\"col_heading level0 col0\" >Rt</th>        <th class=\"col_heading level0 col1\" >theta</th>        <th class=\"col_heading level0 col2\" >kappa</th>        <th class=\"col_heading level0 col3\" >rho</th>        <th class=\"col_heading level0 col4\" >sigma</th>        <th class=\"col_heading level0 col5\" >School_closing</th>        <th class=\"col_heading level0 col6\" >Workplace_closing</th>        <th class=\"col_heading level0 col7\" >Cancel_events</th>        <th class=\"col_heading level0 col8\" >Gatherings_restrictions</th>        <th class=\"col_heading level0 col9\" >Transport_closing</th>        <th class=\"col_heading level0 col10\" >Stay_home_restrictions</th>        <th class=\"col_heading level0 col11\" >Internal_movement_restrictions</th>        <th class=\"col_heading level0 col12\" >International_movement_restrictions</th>        <th class=\"col_heading level0 col13\" >Information_campaigns</th>        <th class=\"col_heading level0 col14\" >Testing_policy</th>        <th class=\"col_heading level0 col15\" >Contact_tracing</th>        <th class=\"col_heading level0 col16\" >Stringency_index</th>    </tr></thead><tbody>\n",
        "                <tr>\n",
        "                        <th id=\"T_061c8fc8_f37d_11ea_bf5a_525400e653ealevel0_row0\" class=\"row_heading level0 row0\" >Rt</th>\n",
        "                        <td id=\"T_061c8fc8_f37d_11ea_bf5a_525400e653earow0_col0\" class=\"data row0 col0\" >1.000000</td>\n",
        "                        <td id=\"T_061c8fc8_f37d_11ea_bf5a_525400e653earow0_col1\" class=\"data row0 col1\" >-0.176643</td>\n",
        "                        <td id=\"T_061c8fc8_f37d_11ea_bf5a_525400e653earow0_col2\" class=\"data row0 col2\" >-0.277832</td>\n",
        "                        <td id=\"T_061c8fc8_f37d_11ea_bf5a_525400e653earow0_col3\" class=\"data row0 col3\" >0.133689</td>\n",
        "                        <td id=\"T_061c8fc8_f37d_11ea_bf5a_525400e653earow0_col4\" class=\"data row0 col4\" >-0.230236</td>\n",
        "                        <td id=\"T_061c8fc8_f37d_11ea_bf5a_525400e653earow0_col5\" class=\"data row0 col5\" >-0.216847</td>\n",
        "                        <td id=\"T_061c8fc8_f37d_11ea_bf5a_525400e653earow0_col6\" class=\"data row0 col6\" >-0.164712</td>\n",
        "                        <td id=\"T_061c8fc8_f37d_11ea_bf5a_525400e653earow0_col7\" class=\"data row0 col7\" >-0.154861</td>\n",
        "                        <td id=\"T_061c8fc8_f37d_11ea_bf5a_525400e653earow0_col8\" class=\"data row0 col8\" >-0.087922</td>\n",
        "                        <td id=\"T_061c8fc8_f37d_11ea_bf5a_525400e653earow0_col9\" class=\"data row0 col9\" >-0.241837</td>\n",
        "                        <td id=\"T_061c8fc8_f37d_11ea_bf5a_525400e653earow0_col10\" class=\"data row0 col10\" >-0.263678</td>\n",
        "                        <td id=\"T_061c8fc8_f37d_11ea_bf5a_525400e653earow0_col11\" class=\"data row0 col11\" >-0.241184</td>\n",
        "                        <td id=\"T_061c8fc8_f37d_11ea_bf5a_525400e653earow0_col12\" class=\"data row0 col12\" >-0.512620</td>\n",
        "                        <td id=\"T_061c8fc8_f37d_11ea_bf5a_525400e653earow0_col13\" class=\"data row0 col13\" >-0.136875</td>\n",
        "                        <td id=\"T_061c8fc8_f37d_11ea_bf5a_525400e653earow0_col14\" class=\"data row0 col14\" >-0.258436</td>\n",
        "                        <td id=\"T_061c8fc8_f37d_11ea_bf5a_525400e653earow0_col15\" class=\"data row0 col15\" >-0.252954</td>\n",
        "                        <td id=\"T_061c8fc8_f37d_11ea_bf5a_525400e653earow0_col16\" class=\"data row0 col16\" >-0.243148</td>\n",
        "            </tr>\n",
        "            <tr>\n",
        "                        <th id=\"T_061c8fc8_f37d_11ea_bf5a_525400e653ealevel0_row1\" class=\"row_heading level0 row1\" >theta</th>\n",
        "                        <td id=\"T_061c8fc8_f37d_11ea_bf5a_525400e653earow1_col0\" class=\"data row1 col0\" >-0.176643</td>\n",
        "                        <td id=\"T_061c8fc8_f37d_11ea_bf5a_525400e653earow1_col1\" class=\"data row1 col1\" >1.000000</td>\n",
        "                        <td id=\"T_061c8fc8_f37d_11ea_bf5a_525400e653earow1_col2\" class=\"data row1 col2\" >0.948630</td>\n",
        "                        <td id=\"T_061c8fc8_f37d_11ea_bf5a_525400e653earow1_col3\" class=\"data row1 col3\" >0.777524</td>\n",
        "                        <td id=\"T_061c8fc8_f37d_11ea_bf5a_525400e653earow1_col4\" class=\"data row1 col4\" >-0.080144</td>\n",
        "                        <td id=\"T_061c8fc8_f37d_11ea_bf5a_525400e653earow1_col5\" class=\"data row1 col5\" >-0.250253</td>\n",
        "                        <td id=\"T_061c8fc8_f37d_11ea_bf5a_525400e653earow1_col6\" class=\"data row1 col6\" >-0.168164</td>\n",
        "                        <td id=\"T_061c8fc8_f37d_11ea_bf5a_525400e653earow1_col7\" class=\"data row1 col7\" >-0.342412</td>\n",
        "                        <td id=\"T_061c8fc8_f37d_11ea_bf5a_525400e653earow1_col8\" class=\"data row1 col8\" >-0.352494</td>\n",
        "                        <td id=\"T_061c8fc8_f37d_11ea_bf5a_525400e653earow1_col9\" class=\"data row1 col9\" >-0.313574</td>\n",
        "                        <td id=\"T_061c8fc8_f37d_11ea_bf5a_525400e653earow1_col10\" class=\"data row1 col10\" >0.066028</td>\n",
        "                        <td id=\"T_061c8fc8_f37d_11ea_bf5a_525400e653earow1_col11\" class=\"data row1 col11\" >-0.145000</td>\n",
        "                        <td id=\"T_061c8fc8_f37d_11ea_bf5a_525400e653earow1_col12\" class=\"data row1 col12\" >0.136665</td>\n",
        "                        <td id=\"T_061c8fc8_f37d_11ea_bf5a_525400e653earow1_col13\" class=\"data row1 col13\" >-0.373926</td>\n",
        "                        <td id=\"T_061c8fc8_f37d_11ea_bf5a_525400e653earow1_col14\" class=\"data row1 col14\" >-0.405259</td>\n",
        "                        <td id=\"T_061c8fc8_f37d_11ea_bf5a_525400e653earow1_col15\" class=\"data row1 col15\" >-0.054659</td>\n",
        "                        <td id=\"T_061c8fc8_f37d_11ea_bf5a_525400e653earow1_col16\" class=\"data row1 col16\" >-0.193476</td>\n",
        "            </tr>\n",
        "            <tr>\n",
        "                        <th id=\"T_061c8fc8_f37d_11ea_bf5a_525400e653ealevel0_row2\" class=\"row_heading level0 row2\" >kappa</th>\n",
        "                        <td id=\"T_061c8fc8_f37d_11ea_bf5a_525400e653earow2_col0\" class=\"data row2 col0\" >-0.277832</td>\n",
        "                        <td id=\"T_061c8fc8_f37d_11ea_bf5a_525400e653earow2_col1\" class=\"data row2 col1\" >0.948630</td>\n",
        "                        <td id=\"T_061c8fc8_f37d_11ea_bf5a_525400e653earow2_col2\" class=\"data row2 col2\" >1.000000</td>\n",
        "                        <td id=\"T_061c8fc8_f37d_11ea_bf5a_525400e653earow2_col3\" class=\"data row2 col3\" >0.760197</td>\n",
        "                        <td id=\"T_061c8fc8_f37d_11ea_bf5a_525400e653earow2_col4\" class=\"data row2 col4\" >-0.114419</td>\n",
        "                        <td id=\"T_061c8fc8_f37d_11ea_bf5a_525400e653earow2_col5\" class=\"data row2 col5\" >-0.242556</td>\n",
        "                        <td id=\"T_061c8fc8_f37d_11ea_bf5a_525400e653earow2_col6\" class=\"data row2 col6\" >-0.145679</td>\n",
        "                        <td id=\"T_061c8fc8_f37d_11ea_bf5a_525400e653earow2_col7\" class=\"data row2 col7\" >-0.302291</td>\n",
        "                        <td id=\"T_061c8fc8_f37d_11ea_bf5a_525400e653earow2_col8\" class=\"data row2 col8\" >-0.295643</td>\n",
        "                        <td id=\"T_061c8fc8_f37d_11ea_bf5a_525400e653earow2_col9\" class=\"data row2 col9\" >-0.268567</td>\n",
        "                        <td id=\"T_061c8fc8_f37d_11ea_bf5a_525400e653earow2_col10\" class=\"data row2 col10\" >0.132784</td>\n",
        "                        <td id=\"T_061c8fc8_f37d_11ea_bf5a_525400e653earow2_col11\" class=\"data row2 col11\" >-0.072014</td>\n",
        "                        <td id=\"T_061c8fc8_f37d_11ea_bf5a_525400e653earow2_col12\" class=\"data row2 col12\" >0.230419</td>\n",
        "                        <td id=\"T_061c8fc8_f37d_11ea_bf5a_525400e653earow2_col13\" class=\"data row2 col13\" >-0.348949</td>\n",
        "                        <td id=\"T_061c8fc8_f37d_11ea_bf5a_525400e653earow2_col14\" class=\"data row2 col14\" >-0.287226</td>\n",
        "                        <td id=\"T_061c8fc8_f37d_11ea_bf5a_525400e653earow2_col15\" class=\"data row2 col15\" >0.002326</td>\n",
        "                        <td id=\"T_061c8fc8_f37d_11ea_bf5a_525400e653earow2_col16\" class=\"data row2 col16\" >-0.163161</td>\n",
        "            </tr>\n",
        "            <tr>\n",
        "                        <th id=\"T_061c8fc8_f37d_11ea_bf5a_525400e653ealevel0_row3\" class=\"row_heading level0 row3\" >rho</th>\n",
        "                        <td id=\"T_061c8fc8_f37d_11ea_bf5a_525400e653earow3_col0\" class=\"data row3 col0\" >0.133689</td>\n",
        "                        <td id=\"T_061c8fc8_f37d_11ea_bf5a_525400e653earow3_col1\" class=\"data row3 col1\" >0.777524</td>\n",
        "                        <td id=\"T_061c8fc8_f37d_11ea_bf5a_525400e653earow3_col2\" class=\"data row3 col2\" >0.760197</td>\n",
        "                        <td id=\"T_061c8fc8_f37d_11ea_bf5a_525400e653earow3_col3\" class=\"data row3 col3\" >1.000000</td>\n",
        "                        <td id=\"T_061c8fc8_f37d_11ea_bf5a_525400e653earow3_col4\" class=\"data row3 col4\" >0.067860</td>\n",
        "                        <td id=\"T_061c8fc8_f37d_11ea_bf5a_525400e653earow3_col5\" class=\"data row3 col5\" >-0.175414</td>\n",
        "                        <td id=\"T_061c8fc8_f37d_11ea_bf5a_525400e653earow3_col6\" class=\"data row3 col6\" >-0.110082</td>\n",
        "                        <td id=\"T_061c8fc8_f37d_11ea_bf5a_525400e653earow3_col7\" class=\"data row3 col7\" >-0.347341</td>\n",
        "                        <td id=\"T_061c8fc8_f37d_11ea_bf5a_525400e653earow3_col8\" class=\"data row3 col8\" >-0.338313</td>\n",
        "                        <td id=\"T_061c8fc8_f37d_11ea_bf5a_525400e653earow3_col9\" class=\"data row3 col9\" >-0.317093</td>\n",
        "                        <td id=\"T_061c8fc8_f37d_11ea_bf5a_525400e653earow3_col10\" class=\"data row3 col10\" >0.050817</td>\n",
        "                        <td id=\"T_061c8fc8_f37d_11ea_bf5a_525400e653earow3_col11\" class=\"data row3 col11\" >-0.151670</td>\n",
        "                        <td id=\"T_061c8fc8_f37d_11ea_bf5a_525400e653earow3_col12\" class=\"data row3 col12\" >0.070578</td>\n",
        "                        <td id=\"T_061c8fc8_f37d_11ea_bf5a_525400e653earow3_col13\" class=\"data row3 col13\" >-0.382195</td>\n",
        "                        <td id=\"T_061c8fc8_f37d_11ea_bf5a_525400e653earow3_col14\" class=\"data row3 col14\" >-0.441852</td>\n",
        "                        <td id=\"T_061c8fc8_f37d_11ea_bf5a_525400e653earow3_col15\" class=\"data row3 col15\" >-0.130493</td>\n",
        "                        <td id=\"T_061c8fc8_f37d_11ea_bf5a_525400e653earow3_col16\" class=\"data row3 col16\" >-0.186588</td>\n",
        "            </tr>\n",
        "            <tr>\n",
        "                        <th id=\"T_061c8fc8_f37d_11ea_bf5a_525400e653ealevel0_row4\" class=\"row_heading level0 row4\" >sigma</th>\n",
        "                        <td id=\"T_061c8fc8_f37d_11ea_bf5a_525400e653earow4_col0\" class=\"data row4 col0\" >-0.230236</td>\n",
        "                        <td id=\"T_061c8fc8_f37d_11ea_bf5a_525400e653earow4_col1\" class=\"data row4 col1\" >-0.080144</td>\n",
        "                        <td id=\"T_061c8fc8_f37d_11ea_bf5a_525400e653earow4_col2\" class=\"data row4 col2\" >-0.114419</td>\n",
        "                        <td id=\"T_061c8fc8_f37d_11ea_bf5a_525400e653earow4_col3\" class=\"data row4 col3\" >0.067860</td>\n",
        "                        <td id=\"T_061c8fc8_f37d_11ea_bf5a_525400e653earow4_col4\" class=\"data row4 col4\" >1.000000</td>\n",
        "                        <td id=\"T_061c8fc8_f37d_11ea_bf5a_525400e653earow4_col5\" class=\"data row4 col5\" >0.257312</td>\n",
        "                        <td id=\"T_061c8fc8_f37d_11ea_bf5a_525400e653earow4_col6\" class=\"data row4 col6\" >0.097762</td>\n",
        "                        <td id=\"T_061c8fc8_f37d_11ea_bf5a_525400e653earow4_col7\" class=\"data row4 col7\" >0.128689</td>\n",
        "                        <td id=\"T_061c8fc8_f37d_11ea_bf5a_525400e653earow4_col8\" class=\"data row4 col8\" >-0.081787</td>\n",
        "                        <td id=\"T_061c8fc8_f37d_11ea_bf5a_525400e653earow4_col9\" class=\"data row4 col9\" >0.031368</td>\n",
        "                        <td id=\"T_061c8fc8_f37d_11ea_bf5a_525400e653earow4_col10\" class=\"data row4 col10\" >0.031394</td>\n",
        "                        <td id=\"T_061c8fc8_f37d_11ea_bf5a_525400e653earow4_col11\" class=\"data row4 col11\" >-0.036276</td>\n",
        "                        <td id=\"T_061c8fc8_f37d_11ea_bf5a_525400e653earow4_col12\" class=\"data row4 col12\" >0.079633</td>\n",
        "                        <td id=\"T_061c8fc8_f37d_11ea_bf5a_525400e653earow4_col13\" class=\"data row4 col13\" >0.143393</td>\n",
        "                        <td id=\"T_061c8fc8_f37d_11ea_bf5a_525400e653earow4_col14\" class=\"data row4 col14\" >-0.054141</td>\n",
        "                        <td id=\"T_061c8fc8_f37d_11ea_bf5a_525400e653earow4_col15\" class=\"data row4 col15\" >0.169584</td>\n",
        "                        <td id=\"T_061c8fc8_f37d_11ea_bf5a_525400e653earow4_col16\" class=\"data row4 col16\" >0.151140</td>\n",
        "            </tr>\n",
        "            <tr>\n",
        "                        <th id=\"T_061c8fc8_f37d_11ea_bf5a_525400e653ealevel0_row5\" class=\"row_heading level0 row5\" >School_closing</th>\n",
        "                        <td id=\"T_061c8fc8_f37d_11ea_bf5a_525400e653earow5_col0\" class=\"data row5 col0\" >-0.216847</td>\n",
        "                        <td id=\"T_061c8fc8_f37d_11ea_bf5a_525400e653earow5_col1\" class=\"data row5 col1\" >-0.250253</td>\n",
        "                        <td id=\"T_061c8fc8_f37d_11ea_bf5a_525400e653earow5_col2\" class=\"data row5 col2\" >-0.242556</td>\n",
        "                        <td id=\"T_061c8fc8_f37d_11ea_bf5a_525400e653earow5_col3\" class=\"data row5 col3\" >-0.175414</td>\n",
        "                        <td id=\"T_061c8fc8_f37d_11ea_bf5a_525400e653earow5_col4\" class=\"data row5 col4\" >0.257312</td>\n",
        "                        <td id=\"T_061c8fc8_f37d_11ea_bf5a_525400e653earow5_col5\" class=\"data row5 col5\" >1.000000</td>\n",
        "                        <td id=\"T_061c8fc8_f37d_11ea_bf5a_525400e653earow5_col6\" class=\"data row5 col6\" >0.765727</td>\n",
        "                        <td id=\"T_061c8fc8_f37d_11ea_bf5a_525400e653earow5_col7\" class=\"data row5 col7\" >0.733589</td>\n",
        "                        <td id=\"T_061c8fc8_f37d_11ea_bf5a_525400e653earow5_col8\" class=\"data row5 col8\" >0.605151</td>\n",
        "                        <td id=\"T_061c8fc8_f37d_11ea_bf5a_525400e653earow5_col9\" class=\"data row5 col9\" >0.577541</td>\n",
        "                        <td id=\"T_061c8fc8_f37d_11ea_bf5a_525400e653earow5_col10\" class=\"data row5 col10\" >0.520162</td>\n",
        "                        <td id=\"T_061c8fc8_f37d_11ea_bf5a_525400e653earow5_col11\" class=\"data row5 col11\" >0.526107</td>\n",
        "                        <td id=\"T_061c8fc8_f37d_11ea_bf5a_525400e653earow5_col12\" class=\"data row5 col12\" >0.571716</td>\n",
        "                        <td id=\"T_061c8fc8_f37d_11ea_bf5a_525400e653earow5_col13\" class=\"data row5 col13\" >0.722589</td>\n",
        "                        <td id=\"T_061c8fc8_f37d_11ea_bf5a_525400e653earow5_col14\" class=\"data row5 col14\" >0.559545</td>\n",
        "                        <td id=\"T_061c8fc8_f37d_11ea_bf5a_525400e653earow5_col15\" class=\"data row5 col15\" >0.309512</td>\n",
        "                        <td id=\"T_061c8fc8_f37d_11ea_bf5a_525400e653earow5_col16\" class=\"data row5 col16\" >0.809495</td>\n",
        "            </tr>\n",
        "            <tr>\n",
        "                        <th id=\"T_061c8fc8_f37d_11ea_bf5a_525400e653ealevel0_row6\" class=\"row_heading level0 row6\" >Workplace_closing</th>\n",
        "                        <td id=\"T_061c8fc8_f37d_11ea_bf5a_525400e653earow6_col0\" class=\"data row6 col0\" >-0.164712</td>\n",
        "                        <td id=\"T_061c8fc8_f37d_11ea_bf5a_525400e653earow6_col1\" class=\"data row6 col1\" >-0.168164</td>\n",
        "                        <td id=\"T_061c8fc8_f37d_11ea_bf5a_525400e653earow6_col2\" class=\"data row6 col2\" >-0.145679</td>\n",
        "                        <td id=\"T_061c8fc8_f37d_11ea_bf5a_525400e653earow6_col3\" class=\"data row6 col3\" >-0.110082</td>\n",
        "                        <td id=\"T_061c8fc8_f37d_11ea_bf5a_525400e653earow6_col4\" class=\"data row6 col4\" >0.097762</td>\n",
        "                        <td id=\"T_061c8fc8_f37d_11ea_bf5a_525400e653earow6_col5\" class=\"data row6 col5\" >0.765727</td>\n",
        "                        <td id=\"T_061c8fc8_f37d_11ea_bf5a_525400e653earow6_col6\" class=\"data row6 col6\" >1.000000</td>\n",
        "                        <td id=\"T_061c8fc8_f37d_11ea_bf5a_525400e653earow6_col7\" class=\"data row6 col7\" >0.720622</td>\n",
        "                        <td id=\"T_061c8fc8_f37d_11ea_bf5a_525400e653earow6_col8\" class=\"data row6 col8\" >0.748341</td>\n",
        "                        <td id=\"T_061c8fc8_f37d_11ea_bf5a_525400e653earow6_col9\" class=\"data row6 col9\" >0.706732</td>\n",
        "                        <td id=\"T_061c8fc8_f37d_11ea_bf5a_525400e653earow6_col10\" class=\"data row6 col10\" >0.713569</td>\n",
        "                        <td id=\"T_061c8fc8_f37d_11ea_bf5a_525400e653earow6_col11\" class=\"data row6 col11\" >0.699671</td>\n",
        "                        <td id=\"T_061c8fc8_f37d_11ea_bf5a_525400e653earow6_col12\" class=\"data row6 col12\" >0.502682</td>\n",
        "                        <td id=\"T_061c8fc8_f37d_11ea_bf5a_525400e653earow6_col13\" class=\"data row6 col13\" >0.779249</td>\n",
        "                        <td id=\"T_061c8fc8_f37d_11ea_bf5a_525400e653earow6_col14\" class=\"data row6 col14\" >0.517832</td>\n",
        "                        <td id=\"T_061c8fc8_f37d_11ea_bf5a_525400e653earow6_col15\" class=\"data row6 col15\" >0.351597</td>\n",
        "                        <td id=\"T_061c8fc8_f37d_11ea_bf5a_525400e653earow6_col16\" class=\"data row6 col16\" >0.899655</td>\n",
        "            </tr>\n",
        "            <tr>\n",
        "                        <th id=\"T_061c8fc8_f37d_11ea_bf5a_525400e653ealevel0_row7\" class=\"row_heading level0 row7\" >Cancel_events</th>\n",
        "                        <td id=\"T_061c8fc8_f37d_11ea_bf5a_525400e653earow7_col0\" class=\"data row7 col0\" >-0.154861</td>\n",
        "                        <td id=\"T_061c8fc8_f37d_11ea_bf5a_525400e653earow7_col1\" class=\"data row7 col1\" >-0.342412</td>\n",
        "                        <td id=\"T_061c8fc8_f37d_11ea_bf5a_525400e653earow7_col2\" class=\"data row7 col2\" >-0.302291</td>\n",
        "                        <td id=\"T_061c8fc8_f37d_11ea_bf5a_525400e653earow7_col3\" class=\"data row7 col3\" >-0.347341</td>\n",
        "                        <td id=\"T_061c8fc8_f37d_11ea_bf5a_525400e653earow7_col4\" class=\"data row7 col4\" >0.128689</td>\n",
        "                        <td id=\"T_061c8fc8_f37d_11ea_bf5a_525400e653earow7_col5\" class=\"data row7 col5\" >0.733589</td>\n",
        "                        <td id=\"T_061c8fc8_f37d_11ea_bf5a_525400e653earow7_col6\" class=\"data row7 col6\" >0.720622</td>\n",
        "                        <td id=\"T_061c8fc8_f37d_11ea_bf5a_525400e653earow7_col7\" class=\"data row7 col7\" >1.000000</td>\n",
        "                        <td id=\"T_061c8fc8_f37d_11ea_bf5a_525400e653earow7_col8\" class=\"data row7 col8\" >0.829429</td>\n",
        "                        <td id=\"T_061c8fc8_f37d_11ea_bf5a_525400e653earow7_col9\" class=\"data row7 col9\" >0.537752</td>\n",
        "                        <td id=\"T_061c8fc8_f37d_11ea_bf5a_525400e653earow7_col10\" class=\"data row7 col10\" >0.601995</td>\n",
        "                        <td id=\"T_061c8fc8_f37d_11ea_bf5a_525400e653earow7_col11\" class=\"data row7 col11\" >0.668058</td>\n",
        "                        <td id=\"T_061c8fc8_f37d_11ea_bf5a_525400e653earow7_col12\" class=\"data row7 col12\" >0.440475</td>\n",
        "                        <td id=\"T_061c8fc8_f37d_11ea_bf5a_525400e653earow7_col13\" class=\"data row7 col13\" >0.897793</td>\n",
        "                        <td id=\"T_061c8fc8_f37d_11ea_bf5a_525400e653earow7_col14\" class=\"data row7 col14\" >0.658018</td>\n",
        "                        <td id=\"T_061c8fc8_f37d_11ea_bf5a_525400e653earow7_col15\" class=\"data row7 col15\" >0.647803</td>\n",
        "                        <td id=\"T_061c8fc8_f37d_11ea_bf5a_525400e653earow7_col16\" class=\"data row7 col16\" >0.865550</td>\n",
        "            </tr>\n",
        "            <tr>\n",
        "                        <th id=\"T_061c8fc8_f37d_11ea_bf5a_525400e653ealevel0_row8\" class=\"row_heading level0 row8\" >Gatherings_restrictions</th>\n",
        "                        <td id=\"T_061c8fc8_f37d_11ea_bf5a_525400e653earow8_col0\" class=\"data row8 col0\" >-0.087922</td>\n",
        "                        <td id=\"T_061c8fc8_f37d_11ea_bf5a_525400e653earow8_col1\" class=\"data row8 col1\" >-0.352494</td>\n",
        "                        <td id=\"T_061c8fc8_f37d_11ea_bf5a_525400e653earow8_col2\" class=\"data row8 col2\" >-0.295643</td>\n",
        "                        <td id=\"T_061c8fc8_f37d_11ea_bf5a_525400e653earow8_col3\" class=\"data row8 col3\" >-0.338313</td>\n",
        "                        <td id=\"T_061c8fc8_f37d_11ea_bf5a_525400e653earow8_col4\" class=\"data row8 col4\" >-0.081787</td>\n",
        "                        <td id=\"T_061c8fc8_f37d_11ea_bf5a_525400e653earow8_col5\" class=\"data row8 col5\" >0.605151</td>\n",
        "                        <td id=\"T_061c8fc8_f37d_11ea_bf5a_525400e653earow8_col6\" class=\"data row8 col6\" >0.748341</td>\n",
        "                        <td id=\"T_061c8fc8_f37d_11ea_bf5a_525400e653earow8_col7\" class=\"data row8 col7\" >0.829429</td>\n",
        "                        <td id=\"T_061c8fc8_f37d_11ea_bf5a_525400e653earow8_col8\" class=\"data row8 col8\" >1.000000</td>\n",
        "                        <td id=\"T_061c8fc8_f37d_11ea_bf5a_525400e653earow8_col9\" class=\"data row8 col9\" >0.725699</td>\n",
        "                        <td id=\"T_061c8fc8_f37d_11ea_bf5a_525400e653earow8_col10\" class=\"data row8 col10\" >0.671106</td>\n",
        "                        <td id=\"T_061c8fc8_f37d_11ea_bf5a_525400e653earow8_col11\" class=\"data row8 col11\" >0.765257</td>\n",
        "                        <td id=\"T_061c8fc8_f37d_11ea_bf5a_525400e653earow8_col12\" class=\"data row8 col12\" >0.465473</td>\n",
        "                        <td id=\"T_061c8fc8_f37d_11ea_bf5a_525400e653earow8_col13\" class=\"data row8 col13\" >0.852160</td>\n",
        "                        <td id=\"T_061c8fc8_f37d_11ea_bf5a_525400e653earow8_col14\" class=\"data row8 col14\" >0.699258</td>\n",
        "                        <td id=\"T_061c8fc8_f37d_11ea_bf5a_525400e653earow8_col15\" class=\"data row8 col15\" >0.481075</td>\n",
        "                        <td id=\"T_061c8fc8_f37d_11ea_bf5a_525400e653earow8_col16\" class=\"data row8 col16\" >0.866087</td>\n",
        "            </tr>\n",
        "            <tr>\n",
        "                        <th id=\"T_061c8fc8_f37d_11ea_bf5a_525400e653ealevel0_row9\" class=\"row_heading level0 row9\" >Transport_closing</th>\n",
        "                        <td id=\"T_061c8fc8_f37d_11ea_bf5a_525400e653earow9_col0\" class=\"data row9 col0\" >-0.241837</td>\n",
        "                        <td id=\"T_061c8fc8_f37d_11ea_bf5a_525400e653earow9_col1\" class=\"data row9 col1\" >-0.313574</td>\n",
        "                        <td id=\"T_061c8fc8_f37d_11ea_bf5a_525400e653earow9_col2\" class=\"data row9 col2\" >-0.268567</td>\n",
        "                        <td id=\"T_061c8fc8_f37d_11ea_bf5a_525400e653earow9_col3\" class=\"data row9 col3\" >-0.317093</td>\n",
        "                        <td id=\"T_061c8fc8_f37d_11ea_bf5a_525400e653earow9_col4\" class=\"data row9 col4\" >0.031368</td>\n",
        "                        <td id=\"T_061c8fc8_f37d_11ea_bf5a_525400e653earow9_col5\" class=\"data row9 col5\" >0.577541</td>\n",
        "                        <td id=\"T_061c8fc8_f37d_11ea_bf5a_525400e653earow9_col6\" class=\"data row9 col6\" >0.706732</td>\n",
        "                        <td id=\"T_061c8fc8_f37d_11ea_bf5a_525400e653earow9_col7\" class=\"data row9 col7\" >0.537752</td>\n",
        "                        <td id=\"T_061c8fc8_f37d_11ea_bf5a_525400e653earow9_col8\" class=\"data row9 col8\" >0.725699</td>\n",
        "                        <td id=\"T_061c8fc8_f37d_11ea_bf5a_525400e653earow9_col9\" class=\"data row9 col9\" >1.000000</td>\n",
        "                        <td id=\"T_061c8fc8_f37d_11ea_bf5a_525400e653earow9_col10\" class=\"data row9 col10\" >0.639216</td>\n",
        "                        <td id=\"T_061c8fc8_f37d_11ea_bf5a_525400e653earow9_col11\" class=\"data row9 col11\" >0.751044</td>\n",
        "                        <td id=\"T_061c8fc8_f37d_11ea_bf5a_525400e653earow9_col12\" class=\"data row9 col12\" >0.548371</td>\n",
        "                        <td id=\"T_061c8fc8_f37d_11ea_bf5a_525400e653earow9_col13\" class=\"data row9 col13\" >0.582632</td>\n",
        "                        <td id=\"T_061c8fc8_f37d_11ea_bf5a_525400e653earow9_col14\" class=\"data row9 col14\" >0.614683</td>\n",
        "                        <td id=\"T_061c8fc8_f37d_11ea_bf5a_525400e653earow9_col15\" class=\"data row9 col15\" >0.213181</td>\n",
        "                        <td id=\"T_061c8fc8_f37d_11ea_bf5a_525400e653earow9_col16\" class=\"data row9 col16\" >0.763229</td>\n",
        "            </tr>\n",
        "            <tr>\n",
        "                        <th id=\"T_061c8fc8_f37d_11ea_bf5a_525400e653ealevel0_row10\" class=\"row_heading level0 row10\" >Stay_home_restrictions</th>\n",
        "                        <td id=\"T_061c8fc8_f37d_11ea_bf5a_525400e653earow10_col0\" class=\"data row10 col0\" >-0.263678</td>\n",
        "                        <td id=\"T_061c8fc8_f37d_11ea_bf5a_525400e653earow10_col1\" class=\"data row10 col1\" >0.066028</td>\n",
        "                        <td id=\"T_061c8fc8_f37d_11ea_bf5a_525400e653earow10_col2\" class=\"data row10 col2\" >0.132784</td>\n",
        "                        <td id=\"T_061c8fc8_f37d_11ea_bf5a_525400e653earow10_col3\" class=\"data row10 col3\" >0.050817</td>\n",
        "                        <td id=\"T_061c8fc8_f37d_11ea_bf5a_525400e653earow10_col4\" class=\"data row10 col4\" >0.031394</td>\n",
        "                        <td id=\"T_061c8fc8_f37d_11ea_bf5a_525400e653earow10_col5\" class=\"data row10 col5\" >0.520162</td>\n",
        "                        <td id=\"T_061c8fc8_f37d_11ea_bf5a_525400e653earow10_col6\" class=\"data row10 col6\" >0.713569</td>\n",
        "                        <td id=\"T_061c8fc8_f37d_11ea_bf5a_525400e653earow10_col7\" class=\"data row10 col7\" >0.601995</td>\n",
        "                        <td id=\"T_061c8fc8_f37d_11ea_bf5a_525400e653earow10_col8\" class=\"data row10 col8\" >0.671106</td>\n",
        "                        <td id=\"T_061c8fc8_f37d_11ea_bf5a_525400e653earow10_col9\" class=\"data row10 col9\" >0.639216</td>\n",
        "                        <td id=\"T_061c8fc8_f37d_11ea_bf5a_525400e653earow10_col10\" class=\"data row10 col10\" >1.000000</td>\n",
        "                        <td id=\"T_061c8fc8_f37d_11ea_bf5a_525400e653earow10_col11\" class=\"data row10 col11\" >0.798445</td>\n",
        "                        <td id=\"T_061c8fc8_f37d_11ea_bf5a_525400e653earow10_col12\" class=\"data row10 col12\" >0.621352</td>\n",
        "                        <td id=\"T_061c8fc8_f37d_11ea_bf5a_525400e653earow10_col13\" class=\"data row10 col13\" >0.572673</td>\n",
        "                        <td id=\"T_061c8fc8_f37d_11ea_bf5a_525400e653earow10_col14\" class=\"data row10 col14\" >0.502945</td>\n",
        "                        <td id=\"T_061c8fc8_f37d_11ea_bf5a_525400e653earow10_col15\" class=\"data row10 col15\" >0.545559</td>\n",
        "                        <td id=\"T_061c8fc8_f37d_11ea_bf5a_525400e653earow10_col16\" class=\"data row10 col16\" >0.792711</td>\n",
        "            </tr>\n",
        "            <tr>\n",
        "                        <th id=\"T_061c8fc8_f37d_11ea_bf5a_525400e653ealevel0_row11\" class=\"row_heading level0 row11\" >Internal_movement_restrictions</th>\n",
        "                        <td id=\"T_061c8fc8_f37d_11ea_bf5a_525400e653earow11_col0\" class=\"data row11 col0\" >-0.241184</td>\n",
        "                        <td id=\"T_061c8fc8_f37d_11ea_bf5a_525400e653earow11_col1\" class=\"data row11 col1\" >-0.145000</td>\n",
        "                        <td id=\"T_061c8fc8_f37d_11ea_bf5a_525400e653earow11_col2\" class=\"data row11 col2\" >-0.072014</td>\n",
        "                        <td id=\"T_061c8fc8_f37d_11ea_bf5a_525400e653earow11_col3\" class=\"data row11 col3\" >-0.151670</td>\n",
        "                        <td id=\"T_061c8fc8_f37d_11ea_bf5a_525400e653earow11_col4\" class=\"data row11 col4\" >-0.036276</td>\n",
        "                        <td id=\"T_061c8fc8_f37d_11ea_bf5a_525400e653earow11_col5\" class=\"data row11 col5\" >0.526107</td>\n",
        "                        <td id=\"T_061c8fc8_f37d_11ea_bf5a_525400e653earow11_col6\" class=\"data row11 col6\" >0.699671</td>\n",
        "                        <td id=\"T_061c8fc8_f37d_11ea_bf5a_525400e653earow11_col7\" class=\"data row11 col7\" >0.668058</td>\n",
        "                        <td id=\"T_061c8fc8_f37d_11ea_bf5a_525400e653earow11_col8\" class=\"data row11 col8\" >0.765257</td>\n",
        "                        <td id=\"T_061c8fc8_f37d_11ea_bf5a_525400e653earow11_col9\" class=\"data row11 col9\" >0.751044</td>\n",
        "                        <td id=\"T_061c8fc8_f37d_11ea_bf5a_525400e653earow11_col10\" class=\"data row11 col10\" >0.798445</td>\n",
        "                        <td id=\"T_061c8fc8_f37d_11ea_bf5a_525400e653earow11_col11\" class=\"data row11 col11\" >1.000000</td>\n",
        "                        <td id=\"T_061c8fc8_f37d_11ea_bf5a_525400e653earow11_col12\" class=\"data row11 col12\" >0.569341</td>\n",
        "                        <td id=\"T_061c8fc8_f37d_11ea_bf5a_525400e653earow11_col13\" class=\"data row11 col13\" >0.631464</td>\n",
        "                        <td id=\"T_061c8fc8_f37d_11ea_bf5a_525400e653earow11_col14\" class=\"data row11 col14\" >0.570835</td>\n",
        "                        <td id=\"T_061c8fc8_f37d_11ea_bf5a_525400e653earow11_col15\" class=\"data row11 col15\" >0.420523</td>\n",
        "                        <td id=\"T_061c8fc8_f37d_11ea_bf5a_525400e653earow11_col16\" class=\"data row11 col16\" >0.803821</td>\n",
        "            </tr>\n",
        "            <tr>\n",
        "                        <th id=\"T_061c8fc8_f37d_11ea_bf5a_525400e653ealevel0_row12\" class=\"row_heading level0 row12\" >International_movement_restrictions</th>\n",
        "                        <td id=\"T_061c8fc8_f37d_11ea_bf5a_525400e653earow12_col0\" class=\"data row12 col0\" >-0.512620</td>\n",
        "                        <td id=\"T_061c8fc8_f37d_11ea_bf5a_525400e653earow12_col1\" class=\"data row12 col1\" >0.136665</td>\n",
        "                        <td id=\"T_061c8fc8_f37d_11ea_bf5a_525400e653earow12_col2\" class=\"data row12 col2\" >0.230419</td>\n",
        "                        <td id=\"T_061c8fc8_f37d_11ea_bf5a_525400e653earow12_col3\" class=\"data row12 col3\" >0.070578</td>\n",
        "                        <td id=\"T_061c8fc8_f37d_11ea_bf5a_525400e653earow12_col4\" class=\"data row12 col4\" >0.079633</td>\n",
        "                        <td id=\"T_061c8fc8_f37d_11ea_bf5a_525400e653earow12_col5\" class=\"data row12 col5\" >0.571716</td>\n",
        "                        <td id=\"T_061c8fc8_f37d_11ea_bf5a_525400e653earow12_col6\" class=\"data row12 col6\" >0.502682</td>\n",
        "                        <td id=\"T_061c8fc8_f37d_11ea_bf5a_525400e653earow12_col7\" class=\"data row12 col7\" >0.440475</td>\n",
        "                        <td id=\"T_061c8fc8_f37d_11ea_bf5a_525400e653earow12_col8\" class=\"data row12 col8\" >0.465473</td>\n",
        "                        <td id=\"T_061c8fc8_f37d_11ea_bf5a_525400e653earow12_col9\" class=\"data row12 col9\" >0.548371</td>\n",
        "                        <td id=\"T_061c8fc8_f37d_11ea_bf5a_525400e653earow12_col10\" class=\"data row12 col10\" >0.621352</td>\n",
        "                        <td id=\"T_061c8fc8_f37d_11ea_bf5a_525400e653earow12_col11\" class=\"data row12 col11\" >0.569341</td>\n",
        "                        <td id=\"T_061c8fc8_f37d_11ea_bf5a_525400e653earow12_col12\" class=\"data row12 col12\" >1.000000</td>\n",
        "                        <td id=\"T_061c8fc8_f37d_11ea_bf5a_525400e653earow12_col13\" class=\"data row12 col13\" >0.402115</td>\n",
        "                        <td id=\"T_061c8fc8_f37d_11ea_bf5a_525400e653earow12_col14\" class=\"data row12 col14\" >0.541647</td>\n",
        "                        <td id=\"T_061c8fc8_f37d_11ea_bf5a_525400e653earow12_col15\" class=\"data row12 col15\" >0.400367</td>\n",
        "                        <td id=\"T_061c8fc8_f37d_11ea_bf5a_525400e653earow12_col16\" class=\"data row12 col16\" >0.643743</td>\n",
        "            </tr>\n",
        "            <tr>\n",
        "                        <th id=\"T_061c8fc8_f37d_11ea_bf5a_525400e653ealevel0_row13\" class=\"row_heading level0 row13\" >Information_campaigns</th>\n",
        "                        <td id=\"T_061c8fc8_f37d_11ea_bf5a_525400e653earow13_col0\" class=\"data row13 col0\" >-0.136875</td>\n",
        "                        <td id=\"T_061c8fc8_f37d_11ea_bf5a_525400e653earow13_col1\" class=\"data row13 col1\" >-0.373926</td>\n",
        "                        <td id=\"T_061c8fc8_f37d_11ea_bf5a_525400e653earow13_col2\" class=\"data row13 col2\" >-0.348949</td>\n",
        "                        <td id=\"T_061c8fc8_f37d_11ea_bf5a_525400e653earow13_col3\" class=\"data row13 col3\" >-0.382195</td>\n",
        "                        <td id=\"T_061c8fc8_f37d_11ea_bf5a_525400e653earow13_col4\" class=\"data row13 col4\" >0.143393</td>\n",
        "                        <td id=\"T_061c8fc8_f37d_11ea_bf5a_525400e653earow13_col5\" class=\"data row13 col5\" >0.722589</td>\n",
        "                        <td id=\"T_061c8fc8_f37d_11ea_bf5a_525400e653earow13_col6\" class=\"data row13 col6\" >0.779249</td>\n",
        "                        <td id=\"T_061c8fc8_f37d_11ea_bf5a_525400e653earow13_col7\" class=\"data row13 col7\" >0.897793</td>\n",
        "                        <td id=\"T_061c8fc8_f37d_11ea_bf5a_525400e653earow13_col8\" class=\"data row13 col8\" >0.852160</td>\n",
        "                        <td id=\"T_061c8fc8_f37d_11ea_bf5a_525400e653earow13_col9\" class=\"data row13 col9\" >0.582632</td>\n",
        "                        <td id=\"T_061c8fc8_f37d_11ea_bf5a_525400e653earow13_col10\" class=\"data row13 col10\" >0.572673</td>\n",
        "                        <td id=\"T_061c8fc8_f37d_11ea_bf5a_525400e653earow13_col11\" class=\"data row13 col11\" >0.631464</td>\n",
        "                        <td id=\"T_061c8fc8_f37d_11ea_bf5a_525400e653earow13_col12\" class=\"data row13 col12\" >0.402115</td>\n",
        "                        <td id=\"T_061c8fc8_f37d_11ea_bf5a_525400e653earow13_col13\" class=\"data row13 col13\" >1.000000</td>\n",
        "                        <td id=\"T_061c8fc8_f37d_11ea_bf5a_525400e653earow13_col14\" class=\"data row13 col14\" >0.661371</td>\n",
        "                        <td id=\"T_061c8fc8_f37d_11ea_bf5a_525400e653earow13_col15\" class=\"data row13 col15\" >0.592974</td>\n",
        "                        <td id=\"T_061c8fc8_f37d_11ea_bf5a_525400e653earow13_col16\" class=\"data row13 col16\" >0.876133</td>\n",
        "            </tr>\n",
        "            <tr>\n",
        "                        <th id=\"T_061c8fc8_f37d_11ea_bf5a_525400e653ealevel0_row14\" class=\"row_heading level0 row14\" >Testing_policy</th>\n",
        "                        <td id=\"T_061c8fc8_f37d_11ea_bf5a_525400e653earow14_col0\" class=\"data row14 col0\" >-0.258436</td>\n",
        "                        <td id=\"T_061c8fc8_f37d_11ea_bf5a_525400e653earow14_col1\" class=\"data row14 col1\" >-0.405259</td>\n",
        "                        <td id=\"T_061c8fc8_f37d_11ea_bf5a_525400e653earow14_col2\" class=\"data row14 col2\" >-0.287226</td>\n",
        "                        <td id=\"T_061c8fc8_f37d_11ea_bf5a_525400e653earow14_col3\" class=\"data row14 col3\" >-0.441852</td>\n",
        "                        <td id=\"T_061c8fc8_f37d_11ea_bf5a_525400e653earow14_col4\" class=\"data row14 col4\" >-0.054141</td>\n",
        "                        <td id=\"T_061c8fc8_f37d_11ea_bf5a_525400e653earow14_col5\" class=\"data row14 col5\" >0.559545</td>\n",
        "                        <td id=\"T_061c8fc8_f37d_11ea_bf5a_525400e653earow14_col6\" class=\"data row14 col6\" >0.517832</td>\n",
        "                        <td id=\"T_061c8fc8_f37d_11ea_bf5a_525400e653earow14_col7\" class=\"data row14 col7\" >0.658018</td>\n",
        "                        <td id=\"T_061c8fc8_f37d_11ea_bf5a_525400e653earow14_col8\" class=\"data row14 col8\" >0.699258</td>\n",
        "                        <td id=\"T_061c8fc8_f37d_11ea_bf5a_525400e653earow14_col9\" class=\"data row14 col9\" >0.614683</td>\n",
        "                        <td id=\"T_061c8fc8_f37d_11ea_bf5a_525400e653earow14_col10\" class=\"data row14 col10\" >0.502945</td>\n",
        "                        <td id=\"T_061c8fc8_f37d_11ea_bf5a_525400e653earow14_col11\" class=\"data row14 col11\" >0.570835</td>\n",
        "                        <td id=\"T_061c8fc8_f37d_11ea_bf5a_525400e653earow14_col12\" class=\"data row14 col12\" >0.541647</td>\n",
        "                        <td id=\"T_061c8fc8_f37d_11ea_bf5a_525400e653earow14_col13\" class=\"data row14 col13\" >0.661371</td>\n",
        "                        <td id=\"T_061c8fc8_f37d_11ea_bf5a_525400e653earow14_col14\" class=\"data row14 col14\" >1.000000</td>\n",
        "                        <td id=\"T_061c8fc8_f37d_11ea_bf5a_525400e653earow14_col15\" class=\"data row14 col15\" >0.423247</td>\n",
        "                        <td id=\"T_061c8fc8_f37d_11ea_bf5a_525400e653earow14_col16\" class=\"data row14 col16\" >0.602585</td>\n",
        "            </tr>\n",
        "            <tr>\n",
        "                        <th id=\"T_061c8fc8_f37d_11ea_bf5a_525400e653ealevel0_row15\" class=\"row_heading level0 row15\" >Contact_tracing</th>\n",
        "                        <td id=\"T_061c8fc8_f37d_11ea_bf5a_525400e653earow15_col0\" class=\"data row15 col0\" >-0.252954</td>\n",
        "                        <td id=\"T_061c8fc8_f37d_11ea_bf5a_525400e653earow15_col1\" class=\"data row15 col1\" >-0.054659</td>\n",
        "                        <td id=\"T_061c8fc8_f37d_11ea_bf5a_525400e653earow15_col2\" class=\"data row15 col2\" >0.002326</td>\n",
        "                        <td id=\"T_061c8fc8_f37d_11ea_bf5a_525400e653earow15_col3\" class=\"data row15 col3\" >-0.130493</td>\n",
        "                        <td id=\"T_061c8fc8_f37d_11ea_bf5a_525400e653earow15_col4\" class=\"data row15 col4\" >0.169584</td>\n",
        "                        <td id=\"T_061c8fc8_f37d_11ea_bf5a_525400e653earow15_col5\" class=\"data row15 col5\" >0.309512</td>\n",
        "                        <td id=\"T_061c8fc8_f37d_11ea_bf5a_525400e653earow15_col6\" class=\"data row15 col6\" >0.351597</td>\n",
        "                        <td id=\"T_061c8fc8_f37d_11ea_bf5a_525400e653earow15_col7\" class=\"data row15 col7\" >0.647803</td>\n",
        "                        <td id=\"T_061c8fc8_f37d_11ea_bf5a_525400e653earow15_col8\" class=\"data row15 col8\" >0.481075</td>\n",
        "                        <td id=\"T_061c8fc8_f37d_11ea_bf5a_525400e653earow15_col9\" class=\"data row15 col9\" >0.213181</td>\n",
        "                        <td id=\"T_061c8fc8_f37d_11ea_bf5a_525400e653earow15_col10\" class=\"data row15 col10\" >0.545559</td>\n",
        "                        <td id=\"T_061c8fc8_f37d_11ea_bf5a_525400e653earow15_col11\" class=\"data row15 col11\" >0.420523</td>\n",
        "                        <td id=\"T_061c8fc8_f37d_11ea_bf5a_525400e653earow15_col12\" class=\"data row15 col12\" >0.400367</td>\n",
        "                        <td id=\"T_061c8fc8_f37d_11ea_bf5a_525400e653earow15_col13\" class=\"data row15 col13\" >0.592974</td>\n",
        "                        <td id=\"T_061c8fc8_f37d_11ea_bf5a_525400e653earow15_col14\" class=\"data row15 col14\" >0.423247</td>\n",
        "                        <td id=\"T_061c8fc8_f37d_11ea_bf5a_525400e653earow15_col15\" class=\"data row15 col15\" >1.000000</td>\n",
        "                        <td id=\"T_061c8fc8_f37d_11ea_bf5a_525400e653earow15_col16\" class=\"data row15 col16\" >0.565141</td>\n",
        "            </tr>\n",
        "            <tr>\n",
        "                        <th id=\"T_061c8fc8_f37d_11ea_bf5a_525400e653ealevel0_row16\" class=\"row_heading level0 row16\" >Stringency_index</th>\n",
        "                        <td id=\"T_061c8fc8_f37d_11ea_bf5a_525400e653earow16_col0\" class=\"data row16 col0\" >-0.243148</td>\n",
        "                        <td id=\"T_061c8fc8_f37d_11ea_bf5a_525400e653earow16_col1\" class=\"data row16 col1\" >-0.193476</td>\n",
        "                        <td id=\"T_061c8fc8_f37d_11ea_bf5a_525400e653earow16_col2\" class=\"data row16 col2\" >-0.163161</td>\n",
        "                        <td id=\"T_061c8fc8_f37d_11ea_bf5a_525400e653earow16_col3\" class=\"data row16 col3\" >-0.186588</td>\n",
        "                        <td id=\"T_061c8fc8_f37d_11ea_bf5a_525400e653earow16_col4\" class=\"data row16 col4\" >0.151140</td>\n",
        "                        <td id=\"T_061c8fc8_f37d_11ea_bf5a_525400e653earow16_col5\" class=\"data row16 col5\" >0.809495</td>\n",
        "                        <td id=\"T_061c8fc8_f37d_11ea_bf5a_525400e653earow16_col6\" class=\"data row16 col6\" >0.899655</td>\n",
        "                        <td id=\"T_061c8fc8_f37d_11ea_bf5a_525400e653earow16_col7\" class=\"data row16 col7\" >0.865550</td>\n",
        "                        <td id=\"T_061c8fc8_f37d_11ea_bf5a_525400e653earow16_col8\" class=\"data row16 col8\" >0.866087</td>\n",
        "                        <td id=\"T_061c8fc8_f37d_11ea_bf5a_525400e653earow16_col9\" class=\"data row16 col9\" >0.763229</td>\n",
        "                        <td id=\"T_061c8fc8_f37d_11ea_bf5a_525400e653earow16_col10\" class=\"data row16 col10\" >0.792711</td>\n",
        "                        <td id=\"T_061c8fc8_f37d_11ea_bf5a_525400e653earow16_col11\" class=\"data row16 col11\" >0.803821</td>\n",
        "                        <td id=\"T_061c8fc8_f37d_11ea_bf5a_525400e653earow16_col12\" class=\"data row16 col12\" >0.643743</td>\n",
        "                        <td id=\"T_061c8fc8_f37d_11ea_bf5a_525400e653earow16_col13\" class=\"data row16 col13\" >0.876133</td>\n",
        "                        <td id=\"T_061c8fc8_f37d_11ea_bf5a_525400e653earow16_col14\" class=\"data row16 col14\" >0.602585</td>\n",
        "                        <td id=\"T_061c8fc8_f37d_11ea_bf5a_525400e653earow16_col15\" class=\"data row16 col15\" >0.565141</td>\n",
        "                        <td id=\"T_061c8fc8_f37d_11ea_bf5a_525400e653earow16_col16\" class=\"data row16 col16\" >1.000000</td>\n",
        "            </tr>\n",
        "    </tbody></table>"
       ],
       "output_type": "pyout",
       "prompt_number": 21,
       "text": [
        "<pandas.io.formats.style.Styler at 0x7f4de821cca0>"
       ]
      }
     ],
     "prompt_number": 21
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "# Scatter plot of Stringency index and Rt\n",
      "df = track_df.copy()\n",
      "sns.scatterplot(data=df, x=\"Stringency_index\", y=\"Rt\", hue=\"Country\", legend=\"brief\", marker=\"+\")\n",
      "bbox_to_anchor=(1.02, 0)\n",
      "bbox_loc=\"lower left\"\n",
      "plt.legend(bbox_to_anchor=bbox_to_anchor, loc=bbox_loc, borderaxespad=0)\n",
      "plt.title(\"Relationship of Stringency index and reproduction number\")\n",
      "plt.ylabel(\"Reproduction number\")\n",
      "plt.xlabel(\"Stringency index\")\n",
      "plt.show()"
     ],
     "language": "python",
     "metadata": {},
     "outputs": [
      {
       "output_type": "display_data",
       "png": "\n",
       "text": [
        "<Figure size 432x288 with 1 Axes>"
       ]
      }
     ],
     "prompt_number": 22
    }
   ],
   "metadata": {}
  }
 ]
}
