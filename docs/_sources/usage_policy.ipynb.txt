{
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3.8.2 64-bit ('.venv': venv)",
   "name": "python_defaultSpec_1597669925034"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.8.2-final"
  },
  "name": ""
 },
 "nbformat": 3,
 "nbformat_minor": 0,
 "worksheets": [
  {
   "cells": [
    {
     "cell_type": "markdown",
     "metadata": {},
     "source": [
      "# Usage (details: policy measures)\n",
      "Here, we will analyse the relationship of policy measures and parameter values of SIR-derived ODE models. Policy measures are tracked by [Oxford Covid-19 Government Response Tracker (OxCGRT)](https://github.com/OxCGRT/covid-policy-tracker)."
     ]
    },
    {
     "cell_type": "heading",
     "level": 2,
     "metadata": {},
     "source": [
      "Preparation"
     ]
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "# Standard users\n",
      "# !pip install covsirphy\n",
      "# Developers (Note: this notebook is in example directory)\n",
      "import os\n",
      "os.chdir(\"../\")"
     ],
     "language": "python",
     "metadata": {},
     "outputs": [],
     "prompt_number": 1
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "from pprint import pprint"
     ],
     "language": "python",
     "metadata": {},
     "outputs": [],
     "prompt_number": 2
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "import covsirphy as cs\n",
      "cs.__version__"
     ],
     "language": "python",
     "metadata": {},
     "outputs": [
      {
       "output_type": "pyout",
       "prompt_number": 3,
       "text": [
        "'2.10.0-omicron.new.269.319.322.330.fix.291.307.309.328'"
       ]
      }
     ],
     "prompt_number": 3
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "# Standard users and developers\n",
      "data_loader = cs.DataLoader(\"input\")\n",
      "# The number of cases (JHU style)\n",
      "jhu_data = data_loader.jhu(verbose=False)\n",
      "# Population in each country\n",
      "population_data = data_loader.population(verbose=False)\n",
      "# Government Response Tracker (OxCGRT)\n",
      "oxcgrt_data = data_loader.oxcgrt(verbose=False)\n",
      "# Description/citation\n",
      "print(oxcgrt_data.citation)"
     ],
     "language": "python",
     "metadata": {
      "tags": []
     },
     "outputs": [
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "(Secondary source) Guidotti, E., Ardia, D., (2020), \"COVID-19 Data Hub\", Journal of Open Source Software 5(51):2376, doi: 10.21105/joss.02376.\n"
       ]
      }
     ],
     "prompt_number": 4
    },
    {
     "cell_type": "markdown",
     "metadata": {},
     "source": [
      "## Class for policy measure analysis\n",
      "We will `PolicyMeasures` class to find relationship of policy measures and parameter values of SIR-derived ODE models."
     ]
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "# Create analyser with tau value 360 [min] (can be changed)\n",
      "analyser = cs.PolicyMeasures(jhu_data, population_data, oxcgrt_data, tau=360)\n",
      "# The number of registerd countries\n",
      "len(analyser.countries)"
     ],
     "language": "python",
     "metadata": {
      "tags": []
     },
     "outputs": [
      {
       "output_type": "pyout",
       "prompt_number": 5,
       "text": [
        "185"
       ]
      }
     ],
     "prompt_number": 5
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "# We can get Scenario instance for detailed scenario analysis\n",
      "type(analyser.scenario(\"Japan\"))"
     ],
     "language": "python",
     "metadata": {},
     "outputs": [
      {
       "output_type": "pyout",
       "prompt_number": 6,
       "text": [
        "covsirphy.analysis.scenario.Scenario"
       ]
      }
     ],
     "prompt_number": 6
    },
    {
     "cell_type": "markdown",
     "metadata": {},
     "source": [
      "## Set phases with S-R trend analysis\n",
      "We will perform S-R trend analysis to set phases in all countries. Countries which do not have **15th phases** will be un-registered for the next analysis. This number will be adjusted for your analysis."
     ]
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "# Show the number of phases of all countries\n",
      "analyser.trend()\n",
      "pprint(analyser.phase_len(), compact=True)"
     ],
     "language": "python",
     "metadata": {},
     "outputs": [
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "{2: ['Timor-Leste', 'Tanzania'],\n",
        " 3: ['Grenada', 'Fiji'],\n",
        " 4: ['Dominica', 'Saint Lucia'],\n",
        " 5: ['Equatorial Guinea', 'Saint Vincent and the Grenadines', 'Brunei',\n",
        "     'Antigua and Barbuda'],\n",
        " 6: ['Seychelles', 'Cambodia'],\n",
        " 7: ['Kyrgyzstan', 'Gambia', 'Kazakhstan', 'Trinidad and Tobago'],\n",
        " 8: ['Madagascar', 'Bermuda', 'Zimbabwe', 'South Africa', 'Liechtenstein',\n",
        "     'Papua New Guinea', 'Bahamas', 'Lesotho', 'Belize', 'Ghana', 'Eritrea',\n",
        "     'Malawi', 'Botswana', 'Bhutan', 'Sao Tome and Principe', 'Namibia',\n",
        "     'Mauritius', 'Mongolia'],\n",
        " 9: ['Liberia', 'Bolivia', 'Honduras', 'New Zealand', 'Angola', 'Guatemala',\n",
        "     'Chile', 'Benin', 'Swaziland', 'Comoros', 'Egypt', 'Barbados', 'Zambia',\n",
        "     'Suriname', 'Pakistan', 'Haiti', 'Rwanda', 'Taiwan', 'Australia',\n",
        "     'Vietnam', 'Monaco', 'Myanmar', 'Sudan', 'Singapore', 'Nigeria', 'Oman',\n",
        "     'Djibouti', 'Senegal', 'Uzbekistan', 'Saudi Arabia', 'Burundi', 'Yemen',\n",
        "     'El Salvador'],\n",
        " 10: ['Colombia', 'Kosovo', 'Cameroon', 'Syria', 'Ethiopia', 'Panama',\n",
        "      'San Marino', 'Guyana', 'Brazil', 'Peru', 'Mexico', 'Philippines',\n",
        "      'Central African Republic', 'Venezuela', 'Bahrain', 'Congo', 'Montenegro',\n",
        "      'Azerbaijan', 'Maldives', 'Gabon', 'Bangladesh', 'Dominican Republic',\n",
        "      'Palestine', 'Nicaragua', 'Libya'],\n",
        " 11: ['Slovenia', 'Jamaica', 'Guinea', 'Guinea-Bissau', 'Algeria', 'Tunisia',\n",
        "      'Mali', 'South Sudan', 'Jordan', 'Tajikistan', 'Afghanistan', 'Kuwait',\n",
        "      'Niger', 'Sri Lanka', 'Serbia', 'Ecuador', 'Iraq', 'Cape Verde', 'India',\n",
        "      'Chad', 'Uganda', 'Andorra', 'Qatar', 'Mozambique', 'Sierra Leone',\n",
        "      'Kenya', 'Cuba', 'Togo', 'Paraguay', 'Korea, South'],\n",
        " 12: ['Armenia', 'United States', 'Israel', 'Moldova', 'Argentina', 'Bulgaria',\n",
        "      'Mauritania', 'Japan', 'Burkina Faso', 'Cyprus', 'Costa Rica', 'China',\n",
        "      'Belarus', 'Russia', 'Slovakia', 'Albania', 'Thailand',\n",
        "      'Bosnia and Herzegovina', 'North Macedonia', 'Croatia'],\n",
        " 13: ['Switzerland', 'Greece', 'Latvia', 'Uruguay', 'Iran', 'Georgia', 'Turkey',\n",
        "      'Hungary', 'Indonesia', 'Malta', 'Nepal', 'United Arab Emirates',\n",
        "      'Luxembourg', 'Morocco', 'Poland'],\n",
        " 14: ['Norway', 'Romania', 'Somalia', 'Ireland', 'Ukraine', 'Germany',\n",
        "      'Lithuania', 'Denmark', 'Canada', 'Italy', 'Czech Republic', 'Iceland',\n",
        "      'Lebanon', 'Malaysia'],\n",
        " 15: ['Austria', 'Estonia', 'France', 'Spain', 'Portugal', 'Belgium',\n",
        "      'Finland']}\n"
       ]
      }
     ],
     "prompt_number": 7
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "# Set phases with S-R trend analysis\n",
      "analyser.trend(min_len=15)\n",
      "# The number of countries\n",
      "len(analyser.countries)"
     ],
     "language": "python",
     "metadata": {},
     "outputs": [
      {
       "output_type": "pyout",
       "prompt_number": 8,
       "text": [
        "7"
       ]
      }
     ],
     "prompt_number": 8
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "phase_len_dict = analyser.phase_len()\n",
      "pprint(phase_len_dict, compact=True)"
     ],
     "language": "python",
     "metadata": {
      "tags": []
     },
     "outputs": [
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "{15: ['Austria', 'Estonia', 'France', 'Spain', 'Portugal', 'Belgium',\n",
        "      'Finland']}\n"
       ]
      }
     ],
     "prompt_number": 9
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "# Here, only show the countries which have the most phases\n",
      "countries_show = max(phase_len_dict.items(), key=lambda x: x[0])[1]\n",
      "# Show summary\n",
      "analyser.summary(countries=countries_show)"
     ],
     "language": "python",
     "metadata": {
      "tags": []
     },
     "outputs": [
      {
       "html": [
        "<div>\n",
        "<style scoped>\n",
        "    .dataframe tbody tr th:only-of-type {\n",
        "        vertical-align: middle;\n",
        "    }\n",
        "\n",
        "    .dataframe tbody tr th {\n",
        "        vertical-align: top;\n",
        "    }\n",
        "\n",
        "    .dataframe thead th {\n",
        "        text-align: right;\n",
        "    }\n",
        "</style>\n",
        "<table border=\"1\" class=\"dataframe\">\n",
        "  <thead>\n",
        "    <tr style=\"text-align: right;\">\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th>Type</th>\n",
        "      <th>Start</th>\n",
        "      <th>End</th>\n",
        "      <th>Population</th>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>Country</th>\n",
        "      <th>Phase</th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "    </tr>\n",
        "  </thead>\n",
        "  <tbody>\n",
        "    <tr>\n",
        "      <th rowspan=\"5\" valign=\"top\">Austria</th>\n",
        "      <th>0th</th>\n",
        "      <td>Past</td>\n",
        "      <td>05Mar2020</td>\n",
        "      <td>21Mar2020</td>\n",
        "      <td>8858775</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>1st</th>\n",
        "      <td>Past</td>\n",
        "      <td>22Mar2020</td>\n",
        "      <td>29Mar2020</td>\n",
        "      <td>8858775</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>2nd</th>\n",
        "      <td>Past</td>\n",
        "      <td>30Mar2020</td>\n",
        "      <td>14Apr2020</td>\n",
        "      <td>8858775</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>3rd</th>\n",
        "      <td>Past</td>\n",
        "      <td>15Apr2020</td>\n",
        "      <td>28Jun2020</td>\n",
        "      <td>8858775</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>4th</th>\n",
        "      <td>Past</td>\n",
        "      <td>29Jun2020</td>\n",
        "      <td>27Jul2020</td>\n",
        "      <td>8858775</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>...</th>\n",
        "      <th>...</th>\n",
        "      <td>...</td>\n",
        "      <td>...</td>\n",
        "      <td>...</td>\n",
        "      <td>...</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th rowspan=\"5\" valign=\"top\">Finland</th>\n",
        "      <th>10th</th>\n",
        "      <td>Past</td>\n",
        "      <td>05Oct2020</td>\n",
        "      <td>11Oct2020</td>\n",
        "      <td>5515525</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>11th</th>\n",
        "      <td>Past</td>\n",
        "      <td>12Oct2020</td>\n",
        "      <td>19Oct2020</td>\n",
        "      <td>5515525</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>12th</th>\n",
        "      <td>Past</td>\n",
        "      <td>20Oct2020</td>\n",
        "      <td>28Oct2020</td>\n",
        "      <td>5515525</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>13th</th>\n",
        "      <td>Past</td>\n",
        "      <td>29Oct2020</td>\n",
        "      <td>05Nov2020</td>\n",
        "      <td>5515525</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>14th</th>\n",
        "      <td>Past</td>\n",
        "      <td>06Nov2020</td>\n",
        "      <td>14Nov2020</td>\n",
        "      <td>5515525</td>\n",
        "    </tr>\n",
        "  </tbody>\n",
        "</table>\n",
        "<p>105 rows \u00d7 4 columns</p>\n",
        "</div>"
       ],
       "output_type": "pyout",
       "prompt_number": 10,
       "text": [
        "               Type      Start        End  Population\n",
        "Country Phase                                        \n",
        "Austria 0th    Past  05Mar2020  21Mar2020     8858775\n",
        "        1st    Past  22Mar2020  29Mar2020     8858775\n",
        "        2nd    Past  30Mar2020  14Apr2020     8858775\n",
        "        3rd    Past  15Apr2020  28Jun2020     8858775\n",
        "        4th    Past  29Jun2020  27Jul2020     8858775\n",
        "...             ...        ...        ...         ...\n",
        "Finland 10th   Past  05Oct2020  11Oct2020     5515525\n",
        "        11th   Past  12Oct2020  19Oct2020     5515525\n",
        "        12th   Past  20Oct2020  28Oct2020     5515525\n",
        "        13th   Past  29Oct2020  05Nov2020     5515525\n",
        "        14th   Past  06Nov2020  14Nov2020     5515525\n",
        "\n",
        "[105 rows x 4 columns]"
       ]
      }
     ],
     "prompt_number": 10
    },
    {
     "cell_type": "markdown",
     "metadata": {},
     "source": [
      "## Parameter estimation\n",
      "we will estimate the parameter values with SIR-derived ODE models in each country."
     ]
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "# Parameter estimation with SIR-F model\n",
      "analyser.estimate(cs.SIRF, timeout=10)"
     ],
     "language": "python",
     "metadata": {
      "tags": []
     },
     "outputs": [
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n",
        "<SIR-F model: parameter estimation>\n",
        "Running optimization with 4 CPUs...\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tAUT,  5th phase (28Jul2020 - 19Aug2020): finished  346 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tFRA,  7th phase (09Sep2020 - 16Sep2020): finished  350 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tPRT,  2nd phase (15Apr2020 - 05May2020): finished  348 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tEST,  1st phase (27Mar2020 - 02Apr2020): finished  355 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tAUT, 11th phase (08Oct2020 - 13Oct2020): finished  373 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tEST,  6th phase (05Aug2020 - 27Aug2020): finished  369 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tESP, 10th phase (04Oct2020 - 12Oct2020): finished  415 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tFIN,  2nd phase (07Apr2020 - 16Apr2020): finished  410 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tESP,  9th phase (23Sep2020 - 03Oct2020): finished  409 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tFIN, 10th phase (05Oct2020 - 11Oct2020): finished  414 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tFIN,  7th phase (10Aug2020 - 07Sep2020): finished  407 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tFRA,  3rd phase (27May2020 - 27Jul2020): finished  353 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tESP,  2nd phase (28Mar2020 - 15Apr2020): finished  367 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tFRA, 14th phase (06Nov2020 - 14Nov2020): finished  374 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tAUT,  0th phase (05Mar2020 - 21Mar2020): finished  372 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tFRA,  1st phase (30Mar2020 - 13Apr2020): finished  370 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tPRT,  8th phase (10Sep2020 - 24Sep2020): finished  369 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tBEL,  4th phase (17May2020 - 26Jul2020): finished  352 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tESP,  3rd phase (16Apr2020 - 20Jul2020): finished  376 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tPRT,  5th phase (25Jun2020 - 15Jul2020): finished  366 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tFIN,  3rd phase (17Apr2020 - 27Apr2020): finished  406 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tBEL,  8th phase (21Sep2020 - 29Sep2020): finished  370 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tFRA,  8th phase (17Sep2020 - 23Sep2020): finished  376 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tESP, 13th phase (27Oct2020 - 02Nov2020): finished  409 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tESP,  0th phase (15Feb2020 - 16Mar2020): finished  395 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tESP,  5th phase (11Aug2020 - 23Aug2020): finished  408 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tESP, 11th phase (13Oct2020 - 19Oct2020): finished  414 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tPRT,  6th phase (16Jul2020 - 18Aug2020): finished  358 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tFIN,  4th phase (28Apr2020 - 07May2020): finished  408 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tESP,  4th phase (21Jul2020 - 10Aug2020): finished  402 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tBEL, 11th phase (13Oct2020 - 22Oct2020): finished  370 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tEST,  3rd phase (14Apr2020 - 27Apr2020): finished  370 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tAUT,  7th phase (06Sep2020 - 14Sep2020): finished  372 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tPRT, 11th phase (16Oct2020 - 22Oct2020): finished  373 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tEST,  4th phase (28Apr2020 - 02Jun2020): finished  359 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tBEL, 12th phase (23Oct2020 - 01Nov2020): finished  373 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tFRA, 11th phase (07Oct2020 - 16Oct2020): finished  371 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tEST,  2nd phase (03Apr2020 - 13Apr2020): finished  370 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tAUT, 13th phase (24Oct2020 - 02Nov2020): finished  369 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tPRT,  4th phase (03Jun2020 - 24Jun2020): finished  367 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tBEL, 13th phase (02Nov2020 - 07Nov2020): finished  373 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tFIN,  9th phase (24Sep2020 - 04Oct2020): finished  409 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tAUT, 14th phase (03Nov2020 - 14Nov2020): finished  367 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tAUT, 12th phase (14Oct2020 - 23Oct2020): finished  372 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tEST,  7th phase (28Aug2020 - 10Sep2020): finished  370 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tAUT,  8th phase (15Sep2020 - 22Sep2020): finished  373 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tFRA,  2nd phase (14Apr2020 - 26May2020): finished  356 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tPRT,  0th phase (14Mar2020 - 31Mar2020): finished  367 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tAUT,  1st phase (22Mar2020 - 29Mar2020): finished  351 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tEST, 10th phase (30Sep2020 - 07Oct2020): finished  345 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tBEL,  1st phase (30Mar2020 - 07Apr2020): finished  344 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tPRT,  1st phase (01Apr2020 - 14Apr2020): finished  346 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tESP,  1st phase (17Mar2020 - 27Mar2020): finished  370 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tBEL,  5th phase (27Jul2020 - 16Aug2020): finished  364 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tEST, 11th phase (08Oct2020 - 20Oct2020): finished  366 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tBEL,  0th phase (17Feb2020 - 29Mar2020): finished  394 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tFIN,  6th phase (29May2020 - 09Aug2020): finished  378 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tFIN,  0th phase (12Feb2020 - 25Mar2020): finished  398 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tAUT,  6th phase (20Aug2020 - 05Sep2020): finished  363 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tFIN, 13th phase (29Oct2020 - 05Nov2020): finished  406 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tFRA, 10th phase (01Oct2020 - 06Oct2020): finished  374 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tPRT,  9th phase (25Sep2020 - 07Oct2020): finished  369 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tAUT,  3rd phase (15Apr2020 - 28Jun2020): finished  344 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tESP,  7th phase (03Sep2020 - 13Sep2020): finished  405 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tAUT,  4th phase (29Jun2020 - 27Jul2020): finished  364 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tAUT, 10th phase (01Oct2020 - 07Oct2020): finished  371 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tBEL, 14th phase (08Nov2020 - 14Nov2020): finished  372 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tAUT,  9th phase (23Sep2020 - 30Sep2020): finished  370 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tEST, 12th phase (21Oct2020 - 28Oct2020): finished  371 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tFRA,  6th phase (01Sep2020 - 08Sep2020): finished  373 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tEST,  8th phase (11Sep2020 - 21Sep2020): finished  369 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tBEL,  6th phase (17Aug2020 - 08Sep2020): finished  361 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tBEL,  9th phase (30Sep2020 - 06Oct2020): finished  372 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tFRA, 13th phase (27Oct2020 - 05Nov2020): finished  371 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tEST, 13th phase (29Oct2020 - 03Nov2020): finished  373 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tPRT, 10th phase (08Oct2020 - 15Oct2020): finished  370 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tFIN, 12th phase (20Oct2020 - 28Oct2020): finished  408 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tESP,  6th phase (24Aug2020 - 02Sep2020): finished  408 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tEST,  9th phase (22Sep2020 - 29Sep2020): finished  372 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tFRA,  5th phase (20Aug2020 - 31Aug2020): finished  369 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tAUT,  2nd phase (30Mar2020 - 14Apr2020): finished  366 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tPRT,  3rd phase (06May2020 - 02Jun2020): finished  363 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tEST,  0th phase (15Mar2020 - 26Mar2020): finished  400 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tESP,  8th phase (14Sep2020 - 22Sep2020): finished  403 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tFIN,  8th phase (08Sep2020 - 23Sep2020): finished  410 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tFRA, 12th phase (17Oct2020 - 26Oct2020): finished  378 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tPRT,  7th phase (19Aug2020 - 09Sep2020): finished  371 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tFIN,  5th phase (08May2020 - 28May2020): finished  410 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tEST,  5th phase (03Jun2020 - 04Aug2020): finished  361 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tFRA,  9th phase (24Sep2020 - 30Sep2020): finished  380 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tBEL, 10th phase (07Oct2020 - 12Oct2020): finished  385 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tFIN,  1st phase (26Mar2020 - 06Apr2020): finished  425 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tPRT, 12th phase (23Oct2020 - 28Oct2020): finished  373 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tESP, 12th phase (20Oct2020 - 26Oct2020): finished  416 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tFIN, 11th phase (12Oct2020 - 19Oct2020): finished  426 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tBEL,  3rd phase (20Apr2020 - 16May2020): finished  381 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tFRA,  0th phase (12Feb2020 - 29Mar2020): finished  370 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tEST, 14th phase (04Nov2020 - 14Nov2020): finished  389 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tBEL,  7th phase (09Sep2020 - 20Sep2020): finished  383 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tBEL,  2nd phase (08Apr2020 - 19Apr2020): finished  388 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "Completed optimization. Total: 4 min 49 sec\n"
       ]
      }
     ],
     "prompt_number": 11
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "# Show summary\n",
      "analyser.summary(countries=countries_show)"
     ],
     "language": "python",
     "metadata": {},
     "outputs": [
      {
       "html": [
        "<div>\n",
        "<style scoped>\n",
        "    .dataframe tbody tr th:only-of-type {\n",
        "        vertical-align: middle;\n",
        "    }\n",
        "\n",
        "    .dataframe tbody tr th {\n",
        "        vertical-align: top;\n",
        "    }\n",
        "\n",
        "    .dataframe thead th {\n",
        "        text-align: right;\n",
        "    }\n",
        "</style>\n",
        "<table border=\"1\" class=\"dataframe\">\n",
        "  <thead>\n",
        "    <tr style=\"text-align: right;\">\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th>Type</th>\n",
        "      <th>Start</th>\n",
        "      <th>End</th>\n",
        "      <th>Population</th>\n",
        "      <th>ODE</th>\n",
        "      <th>Rt</th>\n",
        "      <th>theta</th>\n",
        "      <th>kappa</th>\n",
        "      <th>rho</th>\n",
        "      <th>sigma</th>\n",
        "      <th>tau</th>\n",
        "      <th>alpha1 [-]</th>\n",
        "      <th>1/gamma [day]</th>\n",
        "      <th>1/beta [day]</th>\n",
        "      <th>1/alpha2 [day]</th>\n",
        "      <th>RMSLE</th>\n",
        "      <th>Trials</th>\n",
        "      <th>Runtime</th>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>Country</th>\n",
        "      <th>Phase</th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "    </tr>\n",
        "  </thead>\n",
        "  <tbody>\n",
        "    <tr>\n",
        "      <th rowspan=\"5\" valign=\"top\">Austria</th>\n",
        "      <th>0th</th>\n",
        "      <td>Past</td>\n",
        "      <td>05Mar2020</td>\n",
        "      <td>21Mar2020</td>\n",
        "      <td>8858775</td>\n",
        "      <td>SIR-F</td>\n",
        "      <td>42.8</td>\n",
        "      <td>0.001047</td>\n",
        "      <td>0.000488094</td>\n",
        "      <td>0.0591851</td>\n",
        "      <td>0.000893416</td>\n",
        "      <td>360</td>\n",
        "      <td>0.001</td>\n",
        "      <td>279</td>\n",
        "      <td>4</td>\n",
        "      <td>512</td>\n",
        "      <td>0.51185</td>\n",
        "      <td>372</td>\n",
        "      <td>0 min 10 sec</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>1st</th>\n",
        "      <td>Past</td>\n",
        "      <td>22Mar2020</td>\n",
        "      <td>29Mar2020</td>\n",
        "      <td>8858775</td>\n",
        "      <td>SIR-F</td>\n",
        "      <td>5.47</td>\n",
        "      <td>0.0151538</td>\n",
        "      <td>0.00018011</td>\n",
        "      <td>0.028961</td>\n",
        "      <td>0.00503223</td>\n",
        "      <td>360</td>\n",
        "      <td>0.015</td>\n",
        "      <td>49</td>\n",
        "      <td>8</td>\n",
        "      <td>1388</td>\n",
        "      <td>0.11135</td>\n",
        "      <td>351</td>\n",
        "      <td>0 min 10 sec</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>2nd</th>\n",
        "      <td>Past</td>\n",
        "      <td>30Mar2020</td>\n",
        "      <td>14Apr2020</td>\n",
        "      <td>8858775</td>\n",
        "      <td>SIR-F</td>\n",
        "      <td>0.39</td>\n",
        "      <td>0.0640212</td>\n",
        "      <td>0.000230894</td>\n",
        "      <td>0.00878434</td>\n",
        "      <td>0.021034</td>\n",
        "      <td>360</td>\n",
        "      <td>0.064</td>\n",
        "      <td>11</td>\n",
        "      <td>28</td>\n",
        "      <td>1082</td>\n",
        "      <td>0.188585</td>\n",
        "      <td>366</td>\n",
        "      <td>0 min 10 sec</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>3rd</th>\n",
        "      <td>Past</td>\n",
        "      <td>15Apr2020</td>\n",
        "      <td>28Jun2020</td>\n",
        "      <td>8858775</td>\n",
        "      <td>SIR-F</td>\n",
        "      <td>0.52</td>\n",
        "      <td>0.0343818</td>\n",
        "      <td>0.0002132</td>\n",
        "      <td>0.0112339</td>\n",
        "      <td>0.0208314</td>\n",
        "      <td>360</td>\n",
        "      <td>0.034</td>\n",
        "      <td>12</td>\n",
        "      <td>22</td>\n",
        "      <td>1172</td>\n",
        "      <td>0.217323</td>\n",
        "      <td>344</td>\n",
        "      <td>0 min 10 sec</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>4th</th>\n",
        "      <td>Past</td>\n",
        "      <td>29Jun2020</td>\n",
        "      <td>27Jul2020</td>\n",
        "      <td>8858775</td>\n",
        "      <td>SIR-F</td>\n",
        "      <td>1.7</td>\n",
        "      <td>0.000329056</td>\n",
        "      <td>7.93895e-05</td>\n",
        "      <td>0.0248881</td>\n",
        "      <td>0.0145586</td>\n",
        "      <td>360</td>\n",
        "      <td>0</td>\n",
        "      <td>17</td>\n",
        "      <td>10</td>\n",
        "      <td>3149</td>\n",
        "      <td>0.0902116</td>\n",
        "      <td>364</td>\n",
        "      <td>0 min 10 sec</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>...</th>\n",
        "      <th>...</th>\n",
        "      <td>...</td>\n",
        "      <td>...</td>\n",
        "      <td>...</td>\n",
        "      <td>...</td>\n",
        "      <td>...</td>\n",
        "      <td>...</td>\n",
        "      <td>...</td>\n",
        "      <td>...</td>\n",
        "      <td>...</td>\n",
        "      <td>...</td>\n",
        "      <td>...</td>\n",
        "      <td>...</td>\n",
        "      <td>...</td>\n",
        "      <td>...</td>\n",
        "      <td>...</td>\n",
        "      <td>...</td>\n",
        "      <td>...</td>\n",
        "      <td>...</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th rowspan=\"5\" valign=\"top\">Finland</th>\n",
        "      <th>10th</th>\n",
        "      <td>Past</td>\n",
        "      <td>05Oct2020</td>\n",
        "      <td>11Oct2020</td>\n",
        "      <td>5515525</td>\n",
        "      <td>SIR-F</td>\n",
        "      <td>166.28</td>\n",
        "      <td>0.000308903</td>\n",
        "      <td>0.000105769</td>\n",
        "      <td>0.0175927</td>\n",
        "      <td>0</td>\n",
        "      <td>360</td>\n",
        "      <td>-</td>\n",
        "      <td>-</td>\n",
        "      <td>-</td>\n",
        "      <td>-</td>\n",
        "      <td>0.057728</td>\n",
        "      <td>414</td>\n",
        "      <td>0 min 10 sec</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>11th</th>\n",
        "      <td>Past</td>\n",
        "      <td>12Oct2020</td>\n",
        "      <td>19Oct2020</td>\n",
        "      <td>5515525</td>\n",
        "      <td>SIR-F</td>\n",
        "      <td>162.97</td>\n",
        "      <td>0.0173899</td>\n",
        "      <td>6.16916e-05</td>\n",
        "      <td>0.0102318</td>\n",
        "      <td>0</td>\n",
        "      <td>360</td>\n",
        "      <td>-</td>\n",
        "      <td>-</td>\n",
        "      <td>-</td>\n",
        "      <td>-</td>\n",
        "      <td>0.0572553</td>\n",
        "      <td>426</td>\n",
        "      <td>0 min 10 sec</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>12th</th>\n",
        "      <td>Past</td>\n",
        "      <td>20Oct2020</td>\n",
        "      <td>28Oct2020</td>\n",
        "      <td>5515525</td>\n",
        "      <td>SIR-F</td>\n",
        "      <td>392.76</td>\n",
        "      <td>0.000891403</td>\n",
        "      <td>2.97536e-05</td>\n",
        "      <td>0.0116965</td>\n",
        "      <td>0</td>\n",
        "      <td>360</td>\n",
        "      <td>-</td>\n",
        "      <td>-</td>\n",
        "      <td>-</td>\n",
        "      <td>-</td>\n",
        "      <td>0.146726</td>\n",
        "      <td>408</td>\n",
        "      <td>0 min 10 sec</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>13th</th>\n",
        "      <td>Past</td>\n",
        "      <td>29Oct2020</td>\n",
        "      <td>05Nov2020</td>\n",
        "      <td>5515525</td>\n",
        "      <td>SIR-F</td>\n",
        "      <td>115.9</td>\n",
        "      <td>0.000723503</td>\n",
        "      <td>9.81477e-05</td>\n",
        "      <td>0.0113839</td>\n",
        "      <td>0</td>\n",
        "      <td>360</td>\n",
        "      <td>-</td>\n",
        "      <td>-</td>\n",
        "      <td>-</td>\n",
        "      <td>-</td>\n",
        "      <td>0.0887216</td>\n",
        "      <td>406</td>\n",
        "      <td>0 min 10 sec</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>14th</th>\n",
        "      <td>Past</td>\n",
        "      <td>06Nov2020</td>\n",
        "      <td>14Nov2020</td>\n",
        "      <td>5515525</td>\n",
        "      <td>-</td>\n",
        "      <td>-</td>\n",
        "      <td>-</td>\n",
        "      <td>-</td>\n",
        "      <td>-</td>\n",
        "      <td>-</td>\n",
        "      <td>-</td>\n",
        "      <td>-</td>\n",
        "      <td>-</td>\n",
        "      <td>-</td>\n",
        "      <td>-</td>\n",
        "      <td>-</td>\n",
        "      <td>-</td>\n",
        "      <td>-</td>\n",
        "    </tr>\n",
        "  </tbody>\n",
        "</table>\n",
        "<p>105 rows \u00d7 18 columns</p>\n",
        "</div>"
       ],
       "output_type": "pyout",
       "prompt_number": 12,
       "text": [
        "               Type      Start        End  Population    ODE      Rt  \\\n",
        "Country Phase                                                          \n",
        "Austria 0th    Past  05Mar2020  21Mar2020     8858775  SIR-F    42.8   \n",
        "        1st    Past  22Mar2020  29Mar2020     8858775  SIR-F    5.47   \n",
        "        2nd    Past  30Mar2020  14Apr2020     8858775  SIR-F    0.39   \n",
        "        3rd    Past  15Apr2020  28Jun2020     8858775  SIR-F    0.52   \n",
        "        4th    Past  29Jun2020  27Jul2020     8858775  SIR-F     1.7   \n",
        "...             ...        ...        ...         ...    ...     ...   \n",
        "Finland 10th   Past  05Oct2020  11Oct2020     5515525  SIR-F  166.28   \n",
        "        11th   Past  12Oct2020  19Oct2020     5515525  SIR-F  162.97   \n",
        "        12th   Past  20Oct2020  28Oct2020     5515525  SIR-F  392.76   \n",
        "        13th   Past  29Oct2020  05Nov2020     5515525  SIR-F   115.9   \n",
        "        14th   Past  06Nov2020  14Nov2020     5515525      -       -   \n",
        "\n",
        "                     theta        kappa         rho        sigma  tau  \\\n",
        "Country Phase                                                           \n",
        "Austria 0th       0.001047  0.000488094   0.0591851  0.000893416  360   \n",
        "        1st      0.0151538   0.00018011    0.028961   0.00503223  360   \n",
        "        2nd      0.0640212  0.000230894  0.00878434     0.021034  360   \n",
        "        3rd      0.0343818    0.0002132   0.0112339    0.0208314  360   \n",
        "        4th    0.000329056  7.93895e-05   0.0248881    0.0145586  360   \n",
        "...                    ...          ...         ...          ...  ...   \n",
        "Finland 10th   0.000308903  0.000105769   0.0175927            0  360   \n",
        "        11th     0.0173899  6.16916e-05   0.0102318            0  360   \n",
        "        12th   0.000891403  2.97536e-05   0.0116965            0  360   \n",
        "        13th   0.000723503  9.81477e-05   0.0113839            0  360   \n",
        "        14th             -            -           -            -    -   \n",
        "\n",
        "              alpha1 [-] 1/gamma [day] 1/beta [day] 1/alpha2 [day]      RMSLE  \\\n",
        "Country Phase                                                                   \n",
        "Austria 0th        0.001           279            4            512    0.51185   \n",
        "        1st        0.015            49            8           1388    0.11135   \n",
        "        2nd        0.064            11           28           1082   0.188585   \n",
        "        3rd        0.034            12           22           1172   0.217323   \n",
        "        4th            0            17           10           3149  0.0902116   \n",
        "...                  ...           ...          ...            ...        ...   \n",
        "Finland 10th           -             -            -              -   0.057728   \n",
        "        11th           -             -            -              -  0.0572553   \n",
        "        12th           -             -            -              -   0.146726   \n",
        "        13th           -             -            -              -  0.0887216   \n",
        "        14th           -             -            -              -          -   \n",
        "\n",
        "              Trials       Runtime  \n",
        "Country Phase                       \n",
        "Austria 0th      372  0 min 10 sec  \n",
        "        1st      351  0 min 10 sec  \n",
        "        2nd      366  0 min 10 sec  \n",
        "        3rd      344  0 min 10 sec  \n",
        "        4th      364  0 min 10 sec  \n",
        "...              ...           ...  \n",
        "Finland 10th     414  0 min 10 sec  \n",
        "        11th     426  0 min 10 sec  \n",
        "        12th     408  0 min 10 sec  \n",
        "        13th     406  0 min 10 sec  \n",
        "        14th       -             -  \n",
        "\n",
        "[105 rows x 18 columns]"
       ]
      }
     ],
     "prompt_number": 12
    },
    {
     "cell_type": "markdown",
     "metadata": {},
     "source": [
      "## Compare the history of parameters\n",
      "Here, compare the history of parameter values if countries."
     ]
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "# All parameter/day parameter/Rt/OxCGRT\n",
      "analyser.track().head()"
     ],
     "language": "python",
     "metadata": {},
     "outputs": [
      {
       "html": [
        "<div>\n",
        "<style scoped>\n",
        "    .dataframe tbody tr th:only-of-type {\n",
        "        vertical-align: middle;\n",
        "    }\n",
        "\n",
        "    .dataframe tbody tr th {\n",
        "        vertical-align: top;\n",
        "    }\n",
        "\n",
        "    .dataframe thead th {\n",
        "        text-align: right;\n",
        "    }\n",
        "</style>\n",
        "<table border=\"1\" class=\"dataframe\">\n",
        "  <thead>\n",
        "    <tr style=\"text-align: right;\">\n",
        "      <th></th>\n",
        "      <th>Date</th>\n",
        "      <th>Country</th>\n",
        "      <th>theta</th>\n",
        "      <th>kappa</th>\n",
        "      <th>rho</th>\n",
        "      <th>sigma</th>\n",
        "      <th>alpha1 [-]</th>\n",
        "      <th>1/alpha2 [day]</th>\n",
        "      <th>1/beta [day]</th>\n",
        "      <th>1/gamma [day]</th>\n",
        "      <th>...</th>\n",
        "      <th>Cancel_events</th>\n",
        "      <th>Gatherings_restrictions</th>\n",
        "      <th>Transport_closing</th>\n",
        "      <th>Stay_home_restrictions</th>\n",
        "      <th>Internal_movement_restrictions</th>\n",
        "      <th>International_movement_restrictions</th>\n",
        "      <th>Information_campaigns</th>\n",
        "      <th>Testing_policy</th>\n",
        "      <th>Contact_tracing</th>\n",
        "      <th>Stringency_index</th>\n",
        "    </tr>\n",
        "  </thead>\n",
        "  <tbody>\n",
        "    <tr>\n",
        "      <th>0</th>\n",
        "      <td>2020-03-05</td>\n",
        "      <td>Austria</td>\n",
        "      <td>0.001047</td>\n",
        "      <td>0.000488094</td>\n",
        "      <td>0.0591851</td>\n",
        "      <td>0.000893416</td>\n",
        "      <td>0.001</td>\n",
        "      <td>512</td>\n",
        "      <td>4</td>\n",
        "      <td>279</td>\n",
        "      <td>...</td>\n",
        "      <td>0</td>\n",
        "      <td>0</td>\n",
        "      <td>0</td>\n",
        "      <td>0</td>\n",
        "      <td>0</td>\n",
        "      <td>0</td>\n",
        "      <td>2</td>\n",
        "      <td>1</td>\n",
        "      <td>1</td>\n",
        "      <td>11.11</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>1</th>\n",
        "      <td>2020-03-05</td>\n",
        "      <td>Austria</td>\n",
        "      <td>0.001047</td>\n",
        "      <td>0.000488094</td>\n",
        "      <td>0.0591851</td>\n",
        "      <td>0.000893416</td>\n",
        "      <td>0.001</td>\n",
        "      <td>512</td>\n",
        "      <td>4</td>\n",
        "      <td>279</td>\n",
        "      <td>...</td>\n",
        "      <td>0</td>\n",
        "      <td>0</td>\n",
        "      <td>0</td>\n",
        "      <td>0</td>\n",
        "      <td>0</td>\n",
        "      <td>0</td>\n",
        "      <td>2</td>\n",
        "      <td>1</td>\n",
        "      <td>1</td>\n",
        "      <td>11.11</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>2</th>\n",
        "      <td>2020-03-05</td>\n",
        "      <td>Austria</td>\n",
        "      <td>0.001047</td>\n",
        "      <td>0.000488094</td>\n",
        "      <td>0.0591851</td>\n",
        "      <td>0.000893416</td>\n",
        "      <td>0.001</td>\n",
        "      <td>512</td>\n",
        "      <td>4</td>\n",
        "      <td>279</td>\n",
        "      <td>...</td>\n",
        "      <td>0</td>\n",
        "      <td>0</td>\n",
        "      <td>0</td>\n",
        "      <td>0</td>\n",
        "      <td>0</td>\n",
        "      <td>0</td>\n",
        "      <td>2</td>\n",
        "      <td>1</td>\n",
        "      <td>1</td>\n",
        "      <td>11.11</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>3</th>\n",
        "      <td>2020-03-05</td>\n",
        "      <td>Austria</td>\n",
        "      <td>0.001047</td>\n",
        "      <td>0.000488094</td>\n",
        "      <td>0.0591851</td>\n",
        "      <td>0.000893416</td>\n",
        "      <td>0.001</td>\n",
        "      <td>512</td>\n",
        "      <td>4</td>\n",
        "      <td>279</td>\n",
        "      <td>...</td>\n",
        "      <td>0</td>\n",
        "      <td>0</td>\n",
        "      <td>0</td>\n",
        "      <td>0</td>\n",
        "      <td>0</td>\n",
        "      <td>0</td>\n",
        "      <td>2</td>\n",
        "      <td>1</td>\n",
        "      <td>1</td>\n",
        "      <td>11.11</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>4</th>\n",
        "      <td>2020-03-05</td>\n",
        "      <td>Austria</td>\n",
        "      <td>0.001047</td>\n",
        "      <td>0.000488094</td>\n",
        "      <td>0.0591851</td>\n",
        "      <td>0.000893416</td>\n",
        "      <td>0.001</td>\n",
        "      <td>512</td>\n",
        "      <td>4</td>\n",
        "      <td>279</td>\n",
        "      <td>...</td>\n",
        "      <td>0</td>\n",
        "      <td>0</td>\n",
        "      <td>0</td>\n",
        "      <td>0</td>\n",
        "      <td>0</td>\n",
        "      <td>0</td>\n",
        "      <td>2</td>\n",
        "      <td>1</td>\n",
        "      <td>1</td>\n",
        "      <td>11.11</td>\n",
        "    </tr>\n",
        "  </tbody>\n",
        "</table>\n",
        "<p>5 rows \u00d7 23 columns</p>\n",
        "</div>"
       ],
       "output_type": "pyout",
       "prompt_number": 13,
       "text": [
        "        Date  Country     theta        kappa        rho        sigma  \\\n",
        "0 2020-03-05  Austria  0.001047  0.000488094  0.0591851  0.000893416   \n",
        "1 2020-03-05  Austria  0.001047  0.000488094  0.0591851  0.000893416   \n",
        "2 2020-03-05  Austria  0.001047  0.000488094  0.0591851  0.000893416   \n",
        "3 2020-03-05  Austria  0.001047  0.000488094  0.0591851  0.000893416   \n",
        "4 2020-03-05  Austria  0.001047  0.000488094  0.0591851  0.000893416   \n",
        "\n",
        "  alpha1 [-] 1/alpha2 [day] 1/beta [day] 1/gamma [day]  ... Cancel_events  \\\n",
        "0      0.001            512            4           279  ...             0   \n",
        "1      0.001            512            4           279  ...             0   \n",
        "2      0.001            512            4           279  ...             0   \n",
        "3      0.001            512            4           279  ...             0   \n",
        "4      0.001            512            4           279  ...             0   \n",
        "\n",
        "   Gatherings_restrictions  Transport_closing  Stay_home_restrictions  \\\n",
        "0                        0                  0                       0   \n",
        "1                        0                  0                       0   \n",
        "2                        0                  0                       0   \n",
        "3                        0                  0                       0   \n",
        "4                        0                  0                       0   \n",
        "\n",
        "   Internal_movement_restrictions  International_movement_restrictions  \\\n",
        "0                               0                                    0   \n",
        "1                               0                                    0   \n",
        "2                               0                                    0   \n",
        "3                               0                                    0   \n",
        "4                               0                                    0   \n",
        "\n",
        "   Information_campaigns  Testing_policy  Contact_tracing  Stringency_index  \n",
        "0                      2               1                1             11.11  \n",
        "1                      2               1                1             11.11  \n",
        "2                      2               1                1             11.11  \n",
        "3                      2               1                1             11.11  \n",
        "4                      2               1                1             11.11  \n",
        "\n",
        "[5 rows x 23 columns]"
       ]
      }
     ],
     "prompt_number": 13
    },
    {
     "cell_type": "heading",
     "level": 3,
     "metadata": {},
     "source": [
      "$Rt$: Reprodcution number $\\mathrm{[-]}$"
     ]
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "analyser.history(\"Rt\", roll_window=None).tail()"
     ],
     "language": "python",
     "metadata": {},
     "outputs": [
      {
       "output_type": "display_data",
       "png": "\n",
       "text": [
        "<Figure size 648x432 with 1 Axes>"
       ]
      },
      {
       "html": [
        "<div>\n",
        "<style scoped>\n",
        "    .dataframe tbody tr th:only-of-type {\n",
        "        vertical-align: middle;\n",
        "    }\n",
        "\n",
        "    .dataframe tbody tr th {\n",
        "        vertical-align: top;\n",
        "    }\n",
        "\n",
        "    .dataframe thead th {\n",
        "        text-align: right;\n",
        "    }\n",
        "</style>\n",
        "<table border=\"1\" class=\"dataframe\">\n",
        "  <thead>\n",
        "    <tr style=\"text-align: right;\">\n",
        "      <th>Country</th>\n",
        "      <th>Austria</th>\n",
        "      <th>Belgium</th>\n",
        "      <th>Estonia</th>\n",
        "      <th>Finland</th>\n",
        "      <th>France</th>\n",
        "      <th>Portugal</th>\n",
        "      <th>Spain</th>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>Date</th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "    </tr>\n",
        "  </thead>\n",
        "  <tbody>\n",
        "    <tr>\n",
        "      <th>2020-11-10</th>\n",
        "      <td>2.61</td>\n",
        "      <td>2.95</td>\n",
        "      <td>3.39</td>\n",
        "      <td>115.9</td>\n",
        "      <td>11.75</td>\n",
        "      <td>1.59</td>\n",
        "      <td>120.22</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>2020-11-11</th>\n",
        "      <td>2.61</td>\n",
        "      <td>2.95</td>\n",
        "      <td>3.39</td>\n",
        "      <td>115.9</td>\n",
        "      <td>11.75</td>\n",
        "      <td>1.59</td>\n",
        "      <td>120.22</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>2020-11-12</th>\n",
        "      <td>2.61</td>\n",
        "      <td>2.95</td>\n",
        "      <td>3.39</td>\n",
        "      <td>115.9</td>\n",
        "      <td>11.75</td>\n",
        "      <td>1.59</td>\n",
        "      <td>120.22</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>2020-11-13</th>\n",
        "      <td>2.61</td>\n",
        "      <td>2.95</td>\n",
        "      <td>3.39</td>\n",
        "      <td>115.9</td>\n",
        "      <td>11.75</td>\n",
        "      <td>1.59</td>\n",
        "      <td>120.22</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>2020-11-14</th>\n",
        "      <td>2.61</td>\n",
        "      <td>2.95</td>\n",
        "      <td>3.39</td>\n",
        "      <td>115.9</td>\n",
        "      <td>11.75</td>\n",
        "      <td>1.59</td>\n",
        "      <td>120.22</td>\n",
        "    </tr>\n",
        "  </tbody>\n",
        "</table>\n",
        "</div>"
       ],
       "output_type": "pyout",
       "prompt_number": 14,
       "text": [
        "Country     Austria  Belgium  Estonia  Finland  France  Portugal   Spain\n",
        "Date                                                                    \n",
        "2020-11-10     2.61     2.95     3.39    115.9   11.75      1.59  120.22\n",
        "2020-11-11     2.61     2.95     3.39    115.9   11.75      1.59  120.22\n",
        "2020-11-12     2.61     2.95     3.39    115.9   11.75      1.59  120.22\n",
        "2020-11-13     2.61     2.95     3.39    115.9   11.75      1.59  120.22\n",
        "2020-11-14     2.61     2.95     3.39    115.9   11.75      1.59  120.22"
       ]
      }
     ],
     "prompt_number": 14
    },
    {
     "cell_type": "heading",
     "level": 3,
     "metadata": {},
     "source": [
      "$\\rho$: Effective contact rate $\\mathrm{[-]}$"
     ]
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "analyser.history(\"rho\", roll_window=None).tail()"
     ],
     "language": "python",
     "metadata": {},
     "outputs": [
      {
       "output_type": "display_data",
       "png": "\n",
       "text": [
        "<Figure size 648x432 with 1 Axes>"
       ]
      },
      {
       "html": [
        "<div>\n",
        "<style scoped>\n",
        "    .dataframe tbody tr th:only-of-type {\n",
        "        vertical-align: middle;\n",
        "    }\n",
        "\n",
        "    .dataframe tbody tr th {\n",
        "        vertical-align: top;\n",
        "    }\n",
        "\n",
        "    .dataframe thead th {\n",
        "        text-align: right;\n",
        "    }\n",
        "</style>\n",
        "<table border=\"1\" class=\"dataframe\">\n",
        "  <thead>\n",
        "    <tr style=\"text-align: right;\">\n",
        "      <th>Country</th>\n",
        "      <th>Austria</th>\n",
        "      <th>Belgium</th>\n",
        "      <th>Estonia</th>\n",
        "      <th>Finland</th>\n",
        "      <th>France</th>\n",
        "      <th>Portugal</th>\n",
        "      <th>Spain</th>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>Date</th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "    </tr>\n",
        "  </thead>\n",
        "  <tbody>\n",
        "    <tr>\n",
        "      <th>2020-11-10</th>\n",
        "      <td>0.019468</td>\n",
        "      <td>0.001233</td>\n",
        "      <td>0.020263</td>\n",
        "      <td>0.011384</td>\n",
        "      <td>0.003932</td>\n",
        "      <td>0.00676</td>\n",
        "      <td>0.003578</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>2020-11-11</th>\n",
        "      <td>0.019468</td>\n",
        "      <td>0.001233</td>\n",
        "      <td>0.020263</td>\n",
        "      <td>0.011384</td>\n",
        "      <td>0.003932</td>\n",
        "      <td>0.00676</td>\n",
        "      <td>0.003578</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>2020-11-12</th>\n",
        "      <td>0.019468</td>\n",
        "      <td>0.001233</td>\n",
        "      <td>0.020263</td>\n",
        "      <td>0.011384</td>\n",
        "      <td>0.003932</td>\n",
        "      <td>0.00676</td>\n",
        "      <td>0.003578</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>2020-11-13</th>\n",
        "      <td>0.019468</td>\n",
        "      <td>0.001233</td>\n",
        "      <td>0.020263</td>\n",
        "      <td>0.011384</td>\n",
        "      <td>0.003932</td>\n",
        "      <td>0.00676</td>\n",
        "      <td>0.003578</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>2020-11-14</th>\n",
        "      <td>0.019468</td>\n",
        "      <td>0.001233</td>\n",
        "      <td>0.020263</td>\n",
        "      <td>0.011384</td>\n",
        "      <td>0.003932</td>\n",
        "      <td>0.00676</td>\n",
        "      <td>0.003578</td>\n",
        "    </tr>\n",
        "  </tbody>\n",
        "</table>\n",
        "</div>"
       ],
       "output_type": "pyout",
       "prompt_number": 15,
       "text": [
        "Country      Austria   Belgium   Estonia   Finland    France  Portugal  \\\n",
        "Date                                                                     \n",
        "2020-11-10  0.019468  0.001233  0.020263  0.011384  0.003932   0.00676   \n",
        "2020-11-11  0.019468  0.001233  0.020263  0.011384  0.003932   0.00676   \n",
        "2020-11-12  0.019468  0.001233  0.020263  0.011384  0.003932   0.00676   \n",
        "2020-11-13  0.019468  0.001233  0.020263  0.011384  0.003932   0.00676   \n",
        "2020-11-14  0.019468  0.001233  0.020263  0.011384  0.003932   0.00676   \n",
        "\n",
        "Country        Spain  \n",
        "Date                  \n",
        "2020-11-10  0.003578  \n",
        "2020-11-11  0.003578  \n",
        "2020-11-12  0.003578  \n",
        "2020-11-13  0.003578  \n",
        "2020-11-14  0.003578  "
       ]
      }
     ],
     "prompt_number": 15
    },
    {
     "cell_type": "heading",
     "level": 3,
     "metadata": {},
     "source": [
      "$\\sigma$: Recovery rate $\\mathrm{[-]}$"
     ]
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "analyser.history(\"sigma\", roll_window=None).tail()"
     ],
     "language": "python",
     "metadata": {},
     "outputs": [
      {
       "output_type": "display_data",
       "png": "\n",
       "text": [
        "<Figure size 648x432 with 1 Axes>"
       ]
      },
      {
       "html": [
        "<div>\n",
        "<style scoped>\n",
        "    .dataframe tbody tr th:only-of-type {\n",
        "        vertical-align: middle;\n",
        "    }\n",
        "\n",
        "    .dataframe tbody tr th {\n",
        "        vertical-align: top;\n",
        "    }\n",
        "\n",
        "    .dataframe thead th {\n",
        "        text-align: right;\n",
        "    }\n",
        "</style>\n",
        "<table border=\"1\" class=\"dataframe\">\n",
        "  <thead>\n",
        "    <tr style=\"text-align: right;\">\n",
        "      <th>Country</th>\n",
        "      <th>Austria</th>\n",
        "      <th>Belgium</th>\n",
        "      <th>Estonia</th>\n",
        "      <th>Finland</th>\n",
        "      <th>France</th>\n",
        "      <th>Portugal</th>\n",
        "      <th>Spain</th>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>Date</th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "    </tr>\n",
        "  </thead>\n",
        "  <tbody>\n",
        "    <tr>\n",
        "      <th>2020-11-10</th>\n",
        "      <td>0.00736</td>\n",
        "      <td>0.000107</td>\n",
        "      <td>0.005899</td>\n",
        "      <td>0.0</td>\n",
        "      <td>0.000236</td>\n",
        "      <td>0.004104</td>\n",
        "      <td>0.0</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>2020-11-11</th>\n",
        "      <td>0.00736</td>\n",
        "      <td>0.000107</td>\n",
        "      <td>0.005899</td>\n",
        "      <td>0.0</td>\n",
        "      <td>0.000236</td>\n",
        "      <td>0.004104</td>\n",
        "      <td>0.0</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>2020-11-12</th>\n",
        "      <td>0.00736</td>\n",
        "      <td>0.000107</td>\n",
        "      <td>0.005899</td>\n",
        "      <td>0.0</td>\n",
        "      <td>0.000236</td>\n",
        "      <td>0.004104</td>\n",
        "      <td>0.0</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>2020-11-13</th>\n",
        "      <td>0.00736</td>\n",
        "      <td>0.000107</td>\n",
        "      <td>0.005899</td>\n",
        "      <td>0.0</td>\n",
        "      <td>0.000236</td>\n",
        "      <td>0.004104</td>\n",
        "      <td>0.0</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>2020-11-14</th>\n",
        "      <td>0.00736</td>\n",
        "      <td>0.000107</td>\n",
        "      <td>0.005899</td>\n",
        "      <td>0.0</td>\n",
        "      <td>0.000236</td>\n",
        "      <td>0.004104</td>\n",
        "      <td>0.0</td>\n",
        "    </tr>\n",
        "  </tbody>\n",
        "</table>\n",
        "</div>"
       ],
       "output_type": "pyout",
       "prompt_number": 16,
       "text": [
        "Country     Austria   Belgium   Estonia  Finland    France  Portugal  Spain\n",
        "Date                                                                       \n",
        "2020-11-10  0.00736  0.000107  0.005899      0.0  0.000236  0.004104    0.0\n",
        "2020-11-11  0.00736  0.000107  0.005899      0.0  0.000236  0.004104    0.0\n",
        "2020-11-12  0.00736  0.000107  0.005899      0.0  0.000236  0.004104    0.0\n",
        "2020-11-13  0.00736  0.000107  0.005899      0.0  0.000236  0.004104    0.0\n",
        "2020-11-14  0.00736  0.000107  0.005899      0.0  0.000236  0.004104    0.0"
       ]
      }
     ],
     "prompt_number": 16
    },
    {
     "cell_type": "heading",
     "level": 3,
     "metadata": {},
     "source": [
      "$\\kappa$: Mortality rate of infected cases $\\mathrm{[-]}$"
     ]
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "analyser.history(\"kappa\", roll_window=None).tail()"
     ],
     "language": "python",
     "metadata": {},
     "outputs": [
      {
       "output_type": "display_data",
       "png": "\n",
       "text": [
        "<Figure size 648x432 with 1 Axes>"
       ]
      },
      {
       "html": [
        "<div>\n",
        "<style scoped>\n",
        "    .dataframe tbody tr th:only-of-type {\n",
        "        vertical-align: middle;\n",
        "    }\n",
        "\n",
        "    .dataframe tbody tr th {\n",
        "        vertical-align: top;\n",
        "    }\n",
        "\n",
        "    .dataframe thead th {\n",
        "        text-align: right;\n",
        "    }\n",
        "</style>\n",
        "<table border=\"1\" class=\"dataframe\">\n",
        "  <thead>\n",
        "    <tr style=\"text-align: right;\">\n",
        "      <th>Country</th>\n",
        "      <th>Austria</th>\n",
        "      <th>Belgium</th>\n",
        "      <th>Estonia</th>\n",
        "      <th>Finland</th>\n",
        "      <th>France</th>\n",
        "      <th>Portugal</th>\n",
        "      <th>Spain</th>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>Date</th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "    </tr>\n",
        "  </thead>\n",
        "  <tbody>\n",
        "    <tr>\n",
        "      <th>2020-11-10</th>\n",
        "      <td>0.000096</td>\n",
        "      <td>0.000197</td>\n",
        "      <td>0.000079</td>\n",
        "      <td>0.000098</td>\n",
        "      <td>0.000098</td>\n",
        "      <td>0.000153</td>\n",
        "      <td>0.00003</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>2020-11-11</th>\n",
        "      <td>0.000096</td>\n",
        "      <td>0.000197</td>\n",
        "      <td>0.000079</td>\n",
        "      <td>0.000098</td>\n",
        "      <td>0.000098</td>\n",
        "      <td>0.000153</td>\n",
        "      <td>0.00003</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>2020-11-12</th>\n",
        "      <td>0.000096</td>\n",
        "      <td>0.000197</td>\n",
        "      <td>0.000079</td>\n",
        "      <td>0.000098</td>\n",
        "      <td>0.000098</td>\n",
        "      <td>0.000153</td>\n",
        "      <td>0.00003</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>2020-11-13</th>\n",
        "      <td>0.000096</td>\n",
        "      <td>0.000197</td>\n",
        "      <td>0.000079</td>\n",
        "      <td>0.000098</td>\n",
        "      <td>0.000098</td>\n",
        "      <td>0.000153</td>\n",
        "      <td>0.00003</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>2020-11-14</th>\n",
        "      <td>0.000096</td>\n",
        "      <td>0.000197</td>\n",
        "      <td>0.000079</td>\n",
        "      <td>0.000098</td>\n",
        "      <td>0.000098</td>\n",
        "      <td>0.000153</td>\n",
        "      <td>0.00003</td>\n",
        "    </tr>\n",
        "  </tbody>\n",
        "</table>\n",
        "</div>"
       ],
       "output_type": "pyout",
       "prompt_number": 17,
       "text": [
        "Country      Austria   Belgium   Estonia   Finland    France  Portugal  \\\n",
        "Date                                                                     \n",
        "2020-11-10  0.000096  0.000197  0.000079  0.000098  0.000098  0.000153   \n",
        "2020-11-11  0.000096  0.000197  0.000079  0.000098  0.000098  0.000153   \n",
        "2020-11-12  0.000096  0.000197  0.000079  0.000098  0.000098  0.000153   \n",
        "2020-11-13  0.000096  0.000197  0.000079  0.000098  0.000098  0.000153   \n",
        "2020-11-14  0.000096  0.000197  0.000079  0.000098  0.000098  0.000153   \n",
        "\n",
        "Country       Spain  \n",
        "Date                 \n",
        "2020-11-10  0.00003  \n",
        "2020-11-11  0.00003  \n",
        "2020-11-12  0.00003  \n",
        "2020-11-13  0.00003  \n",
        "2020-11-14  0.00003  "
       ]
      }
     ],
     "prompt_number": 17
    },
    {
     "cell_type": "heading",
     "level": 3,
     "metadata": {},
     "source": [
      "$\\theta$: Mortality rate of S$^\\ast$ cases $\\mathrm{[-]}$"
     ]
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "analyser.history(\"theta\", roll_window=None).tail()"
     ],
     "language": "python",
     "metadata": {},
     "outputs": [
      {
       "output_type": "display_data",
       "png": "\n",
       "text": [
        "<Figure size 648x432 with 1 Axes>"
       ]
      },
      {
       "html": [
        "<div>\n",
        "<style scoped>\n",
        "    .dataframe tbody tr th:only-of-type {\n",
        "        vertical-align: middle;\n",
        "    }\n",
        "\n",
        "    .dataframe tbody tr th {\n",
        "        vertical-align: top;\n",
        "    }\n",
        "\n",
        "    .dataframe thead th {\n",
        "        text-align: right;\n",
        "    }\n",
        "</style>\n",
        "<table border=\"1\" class=\"dataframe\">\n",
        "  <thead>\n",
        "    <tr style=\"text-align: right;\">\n",
        "      <th>Country</th>\n",
        "      <th>Austria</th>\n",
        "      <th>Belgium</th>\n",
        "      <th>Estonia</th>\n",
        "      <th>Finland</th>\n",
        "      <th>France</th>\n",
        "      <th>Portugal</th>\n",
        "      <th>Spain</th>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>Date</th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "    </tr>\n",
        "  </thead>\n",
        "  <tbody>\n",
        "    <tr>\n",
        "      <th>2020-11-10</th>\n",
        "      <td>0.000494</td>\n",
        "      <td>0.271868</td>\n",
        "      <td>0.000885</td>\n",
        "      <td>0.000724</td>\n",
        "      <td>0.000765</td>\n",
        "      <td>0.000071</td>\n",
        "      <td>0.001145</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>2020-11-11</th>\n",
        "      <td>0.000494</td>\n",
        "      <td>0.271868</td>\n",
        "      <td>0.000885</td>\n",
        "      <td>0.000724</td>\n",
        "      <td>0.000765</td>\n",
        "      <td>0.000071</td>\n",
        "      <td>0.001145</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>2020-11-12</th>\n",
        "      <td>0.000494</td>\n",
        "      <td>0.271868</td>\n",
        "      <td>0.000885</td>\n",
        "      <td>0.000724</td>\n",
        "      <td>0.000765</td>\n",
        "      <td>0.000071</td>\n",
        "      <td>0.001145</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>2020-11-13</th>\n",
        "      <td>0.000494</td>\n",
        "      <td>0.271868</td>\n",
        "      <td>0.000885</td>\n",
        "      <td>0.000724</td>\n",
        "      <td>0.000765</td>\n",
        "      <td>0.000071</td>\n",
        "      <td>0.001145</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>2020-11-14</th>\n",
        "      <td>0.000494</td>\n",
        "      <td>0.271868</td>\n",
        "      <td>0.000885</td>\n",
        "      <td>0.000724</td>\n",
        "      <td>0.000765</td>\n",
        "      <td>0.000071</td>\n",
        "      <td>0.001145</td>\n",
        "    </tr>\n",
        "  </tbody>\n",
        "</table>\n",
        "</div>"
       ],
       "output_type": "pyout",
       "prompt_number": 18,
       "text": [
        "Country      Austria   Belgium   Estonia   Finland    France  Portugal  \\\n",
        "Date                                                                     \n",
        "2020-11-10  0.000494  0.271868  0.000885  0.000724  0.000765  0.000071   \n",
        "2020-11-11  0.000494  0.271868  0.000885  0.000724  0.000765  0.000071   \n",
        "2020-11-12  0.000494  0.271868  0.000885  0.000724  0.000765  0.000071   \n",
        "2020-11-13  0.000494  0.271868  0.000885  0.000724  0.000765  0.000071   \n",
        "2020-11-14  0.000494  0.271868  0.000885  0.000724  0.000765  0.000071   \n",
        "\n",
        "Country        Spain  \n",
        "Date                  \n",
        "2020-11-10  0.001145  \n",
        "2020-11-11  0.001145  \n",
        "2020-11-12  0.001145  \n",
        "2020-11-13  0.001145  \n",
        "2020-11-14  0.001145  "
       ]
      }
     ],
     "prompt_number": 18
    },
    {
     "cell_type": "markdown",
     "metadata": {},
     "source": [
      "## (Experimental): Relationship of OxCGRT index and parameter values\n",
      "Government responses will impact on parameter values of ODE models about 14 days later. Here, we will investigate on the relationship of [stringency index (from OxCGRT)](https://github.com/OxCGRT/covid-policy-tracker/blob/master/documentation/index_methodology.md) and reproduction number/model parameters.\n"
     ]
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "%matplotlib inline\n",
      "from matplotlib import pyplot as plt\n",
      "import seaborn as sns\n",
      "import pandas as pd"
     ],
     "language": "python",
     "metadata": {},
     "outputs": [],
     "prompt_number": 19
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "df = analyser.track()\n",
      "param_cols = [\"Rt\", *cs.SIRF.PARAMETERS]\n",
      "oxcgrt_cols = oxcgrt_data.OXCGRT_VARS[:]\n",
      "cols = param_cols + oxcgrt_cols\n",
      "delay = 14\n",
      "\n",
      "for col in param_cols:\n",
      "    df[col] = pd.to_numeric(df[col], errors=\"coerce\")\n",
      "    df[col] = df.groupby(\"Country\")[col].shift(0 - delay)\n",
      "\n",
      "df = df.dropna(how=\"any\")\n",
      "df = df.loc[:, [\"Date\", \"Country\", *cols]]\n",
      "track_df = df.copy()\n",
      "track_df.info()"
     ],
     "language": "python",
     "metadata": {},
     "outputs": [
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "<class 'pandas.core.frame.DataFrame'>\n",
        "Int64Index: 18435 entries, 0 to 18518\n",
        "Data columns (total 19 columns):\n",
        " #   Column                               Non-Null Count  Dtype         \n",
        "---  ------                               --------------  -----         \n",
        " 0   Date                                 18435 non-null  datetime64[ns]\n",
        " 1   Country                              18435 non-null  object        \n",
        " 2   Rt                                   18435 non-null  float64       \n",
        " 3   theta                                18435 non-null  float64       \n",
        " 4   kappa                                18435 non-null  float64       \n",
        " 5   rho                                  18435 non-null  float64       \n",
        " 6   sigma                                18435 non-null  float64       \n",
        " 7   School_closing                       18435 non-null  int64         \n",
        " 8   Workplace_closing                    18435 non-null  int64         \n",
        " 9   Cancel_events                        18435 non-null  int64         \n",
        " 10  Gatherings_restrictions              18435 non-null  int64         \n",
        " 11  Transport_closing                    18435 non-null  int64         \n",
        " 12  Stay_home_restrictions               18435 non-null  int64         \n",
        " 13  Internal_movement_restrictions       18435 non-null  int64         \n",
        " 14  International_movement_restrictions  18435 non-null  int64         \n",
        " 15  Information_campaigns                18435 non-null  int64         \n",
        " 16  Testing_policy                       18435 non-null  int64         \n",
        " 17  Contact_tracing                      18435 non-null  int64         \n",
        " 18  Stringency_index                     18435 non-null  float64       \n",
        "dtypes: datetime64[ns](1), float64(6), int64(11), object(1)\n",
        "memory usage: 2.8+ MB\n"
       ]
      }
     ],
     "prompt_number": 20
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "# Correlation\n",
      "df = track_df.copy()\n",
      "df.corr().style.background_gradient(axis=None)"
     ],
     "language": "python",
     "metadata": {},
     "outputs": [
      {
       "html": [
        "<style  type=\"text/css\" >\n",
        "#T_186a9fcc_269e_11eb_92a6_5254003913afrow0_col0,#T_186a9fcc_269e_11eb_92a6_5254003913afrow1_col1,#T_186a9fcc_269e_11eb_92a6_5254003913afrow2_col2,#T_186a9fcc_269e_11eb_92a6_5254003913afrow3_col3,#T_186a9fcc_269e_11eb_92a6_5254003913afrow4_col4,#T_186a9fcc_269e_11eb_92a6_5254003913afrow5_col5,#T_186a9fcc_269e_11eb_92a6_5254003913afrow6_col6,#T_186a9fcc_269e_11eb_92a6_5254003913afrow7_col7,#T_186a9fcc_269e_11eb_92a6_5254003913afrow8_col8,#T_186a9fcc_269e_11eb_92a6_5254003913afrow9_col9,#T_186a9fcc_269e_11eb_92a6_5254003913afrow10_col10,#T_186a9fcc_269e_11eb_92a6_5254003913afrow11_col11,#T_186a9fcc_269e_11eb_92a6_5254003913afrow12_col12,#T_186a9fcc_269e_11eb_92a6_5254003913afrow13_col13,#T_186a9fcc_269e_11eb_92a6_5254003913afrow14_col14,#T_186a9fcc_269e_11eb_92a6_5254003913afrow15_col15,#T_186a9fcc_269e_11eb_92a6_5254003913afrow16_col16{\n",
        "            background-color:  #023858;\n",
        "            color:  #f1f1f1;\n",
        "        }#T_186a9fcc_269e_11eb_92a6_5254003913afrow0_col1,#T_186a9fcc_269e_11eb_92a6_5254003913afrow1_col0,#T_186a9fcc_269e_11eb_92a6_5254003913afrow2_col12,#T_186a9fcc_269e_11eb_92a6_5254003913afrow12_col2{\n",
        "            background-color:  #b8c6e0;\n",
        "            color:  #000000;\n",
        "        }#T_186a9fcc_269e_11eb_92a6_5254003913afrow0_col2,#T_186a9fcc_269e_11eb_92a6_5254003913afrow1_col14,#T_186a9fcc_269e_11eb_92a6_5254003913afrow2_col0,#T_186a9fcc_269e_11eb_92a6_5254003913afrow14_col1,#T_186a9fcc_269e_11eb_92a6_5254003913afrow15_col16,#T_186a9fcc_269e_11eb_92a6_5254003913afrow16_col15{\n",
        "            background-color:  #9ebad9;\n",
        "            color:  #000000;\n",
        "        }#T_186a9fcc_269e_11eb_92a6_5254003913afrow0_col3,#T_186a9fcc_269e_11eb_92a6_5254003913afrow3_col0{\n",
        "            background-color:  #358fc0;\n",
        "            color:  #000000;\n",
        "        }#T_186a9fcc_269e_11eb_92a6_5254003913afrow0_col4,#T_186a9fcc_269e_11eb_92a6_5254003913afrow1_col3,#T_186a9fcc_269e_11eb_92a6_5254003913afrow3_col1,#T_186a9fcc_269e_11eb_92a6_5254003913afrow4_col0{\n",
        "            background-color:  #b5c4df;\n",
        "            color:  #000000;\n",
        "        }#T_186a9fcc_269e_11eb_92a6_5254003913afrow0_col5,#T_186a9fcc_269e_11eb_92a6_5254003913afrow0_col6,#T_186a9fcc_269e_11eb_92a6_5254003913afrow0_col9,#T_186a9fcc_269e_11eb_92a6_5254003913afrow5_col0,#T_186a9fcc_269e_11eb_92a6_5254003913afrow6_col0,#T_186a9fcc_269e_11eb_92a6_5254003913afrow9_col0{\n",
        "            background-color:  #d9d8ea;\n",
        "            color:  #000000;\n",
        "        }#T_186a9fcc_269e_11eb_92a6_5254003913afrow0_col7,#T_186a9fcc_269e_11eb_92a6_5254003913afrow3_col14,#T_186a9fcc_269e_11eb_92a6_5254003913afrow7_col0,#T_186a9fcc_269e_11eb_92a6_5254003913afrow14_col3{\n",
        "            background-color:  #dbdaeb;\n",
        "            color:  #000000;\n",
        "        }#T_186a9fcc_269e_11eb_92a6_5254003913afrow0_col8,#T_186a9fcc_269e_11eb_92a6_5254003913afrow3_col5,#T_186a9fcc_269e_11eb_92a6_5254003913afrow3_col11,#T_186a9fcc_269e_11eb_92a6_5254003913afrow5_col3,#T_186a9fcc_269e_11eb_92a6_5254003913afrow8_col0,#T_186a9fcc_269e_11eb_92a6_5254003913afrow11_col3{\n",
        "            background-color:  #e7e3f0;\n",
        "            color:  #000000;\n",
        "        }#T_186a9fcc_269e_11eb_92a6_5254003913afrow0_col10,#T_186a9fcc_269e_11eb_92a6_5254003913afrow10_col0{\n",
        "            background-color:  #d7d6e9;\n",
        "            color:  #000000;\n",
        "        }#T_186a9fcc_269e_11eb_92a6_5254003913afrow0_col11,#T_186a9fcc_269e_11eb_92a6_5254003913afrow11_col0{\n",
        "            background-color:  #d4d4e8;\n",
        "            color:  #000000;\n",
        "        }#T_186a9fcc_269e_11eb_92a6_5254003913afrow0_col12,#T_186a9fcc_269e_11eb_92a6_5254003913afrow12_col0{\n",
        "            background-color:  #e4e1ef;\n",
        "            color:  #000000;\n",
        "        }#T_186a9fcc_269e_11eb_92a6_5254003913afrow0_col13,#T_186a9fcc_269e_11eb_92a6_5254003913afrow13_col0{\n",
        "            background-color:  #8eb3d5;\n",
        "            color:  #000000;\n",
        "        }#T_186a9fcc_269e_11eb_92a6_5254003913afrow0_col14,#T_186a9fcc_269e_11eb_92a6_5254003913afrow14_col0{\n",
        "            background-color:  #c4cbe3;\n",
        "            color:  #000000;\n",
        "        }#T_186a9fcc_269e_11eb_92a6_5254003913afrow0_col15,#T_186a9fcc_269e_11eb_92a6_5254003913afrow7_col15,#T_186a9fcc_269e_11eb_92a6_5254003913afrow15_col0,#T_186a9fcc_269e_11eb_92a6_5254003913afrow15_col7{\n",
        "            background-color:  #9cb9d9;\n",
        "            color:  #000000;\n",
        "        }#T_186a9fcc_269e_11eb_92a6_5254003913afrow0_col16,#T_186a9fcc_269e_11eb_92a6_5254003913afrow16_col0{\n",
        "            background-color:  #d8d7e9;\n",
        "            color:  #000000;\n",
        "        }#T_186a9fcc_269e_11eb_92a6_5254003913afrow1_col2,#T_186a9fcc_269e_11eb_92a6_5254003913afrow2_col1{\n",
        "            background-color:  #197db7;\n",
        "            color:  #000000;\n",
        "        }#T_186a9fcc_269e_11eb_92a6_5254003913afrow1_col4,#T_186a9fcc_269e_11eb_92a6_5254003913afrow1_col15,#T_186a9fcc_269e_11eb_92a6_5254003913afrow4_col1,#T_186a9fcc_269e_11eb_92a6_5254003913afrow15_col1{\n",
        "            background-color:  #afc1dd;\n",
        "            color:  #000000;\n",
        "        }#T_186a9fcc_269e_11eb_92a6_5254003913afrow1_col5,#T_186a9fcc_269e_11eb_92a6_5254003913afrow5_col1{\n",
        "            background-color:  #79abd0;\n",
        "            color:  #000000;\n",
        "        }#T_186a9fcc_269e_11eb_92a6_5254003913afrow1_col6,#T_186a9fcc_269e_11eb_92a6_5254003913afrow1_col8,#T_186a9fcc_269e_11eb_92a6_5254003913afrow1_col12,#T_186a9fcc_269e_11eb_92a6_5254003913afrow6_col1,#T_186a9fcc_269e_11eb_92a6_5254003913afrow8_col1,#T_186a9fcc_269e_11eb_92a6_5254003913afrow12_col1{\n",
        "            background-color:  #81aed2;\n",
        "            color:  #000000;\n",
        "        }#T_186a9fcc_269e_11eb_92a6_5254003913afrow1_col7,#T_186a9fcc_269e_11eb_92a6_5254003913afrow7_col1,#T_186a9fcc_269e_11eb_92a6_5254003913afrow11_col14,#T_186a9fcc_269e_11eb_92a6_5254003913afrow14_col11{\n",
        "            background-color:  #78abd0;\n",
        "            color:  #000000;\n",
        "        }#T_186a9fcc_269e_11eb_92a6_5254003913afrow1_col9,#T_186a9fcc_269e_11eb_92a6_5254003913afrow9_col1{\n",
        "            background-color:  #9fbad9;\n",
        "            color:  #000000;\n",
        "        }#T_186a9fcc_269e_11eb_92a6_5254003913afrow1_col10,#T_186a9fcc_269e_11eb_92a6_5254003913afrow10_col1{\n",
        "            background-color:  #8fb4d6;\n",
        "            color:  #000000;\n",
        "        }#T_186a9fcc_269e_11eb_92a6_5254003913afrow1_col11,#T_186a9fcc_269e_11eb_92a6_5254003913afrow11_col1{\n",
        "            background-color:  #8bb2d4;\n",
        "            color:  #000000;\n",
        "        }#T_186a9fcc_269e_11eb_92a6_5254003913afrow1_col13,#T_186a9fcc_269e_11eb_92a6_5254003913afrow4_col13,#T_186a9fcc_269e_11eb_92a6_5254003913afrow13_col1,#T_186a9fcc_269e_11eb_92a6_5254003913afrow13_col4{\n",
        "            background-color:  #93b5d6;\n",
        "            color:  #000000;\n",
        "        }#T_186a9fcc_269e_11eb_92a6_5254003913afrow1_col16,#T_186a9fcc_269e_11eb_92a6_5254003913afrow16_col1{\n",
        "            background-color:  #7dacd1;\n",
        "            color:  #000000;\n",
        "        }#T_186a9fcc_269e_11eb_92a6_5254003913afrow2_col3,#T_186a9fcc_269e_11eb_92a6_5254003913afrow3_col2,#T_186a9fcc_269e_11eb_92a6_5254003913afrow12_col14,#T_186a9fcc_269e_11eb_92a6_5254003913afrow14_col12{\n",
        "            background-color:  #5ea0ca;\n",
        "            color:  #000000;\n",
        "        }#T_186a9fcc_269e_11eb_92a6_5254003913afrow2_col4,#T_186a9fcc_269e_11eb_92a6_5254003913afrow4_col2,#T_186a9fcc_269e_11eb_92a6_5254003913afrow4_col7,#T_186a9fcc_269e_11eb_92a6_5254003913afrow7_col4,#T_186a9fcc_269e_11eb_92a6_5254003913afrow14_col16,#T_186a9fcc_269e_11eb_92a6_5254003913afrow16_col14{\n",
        "            background-color:  #a4bcda;\n",
        "            color:  #000000;\n",
        "        }#T_186a9fcc_269e_11eb_92a6_5254003913afrow2_col5,#T_186a9fcc_269e_11eb_92a6_5254003913afrow4_col12,#T_186a9fcc_269e_11eb_92a6_5254003913afrow5_col2,#T_186a9fcc_269e_11eb_92a6_5254003913afrow6_col14,#T_186a9fcc_269e_11eb_92a6_5254003913afrow12_col4,#T_186a9fcc_269e_11eb_92a6_5254003913afrow14_col6{\n",
        "            background-color:  #b3c3de;\n",
        "            color:  #000000;\n",
        "        }#T_186a9fcc_269e_11eb_92a6_5254003913afrow2_col6,#T_186a9fcc_269e_11eb_92a6_5254003913afrow2_col13,#T_186a9fcc_269e_11eb_92a6_5254003913afrow6_col2,#T_186a9fcc_269e_11eb_92a6_5254003913afrow13_col2{\n",
        "            background-color:  #b1c2de;\n",
        "            color:  #000000;\n",
        "        }#T_186a9fcc_269e_11eb_92a6_5254003913afrow2_col7,#T_186a9fcc_269e_11eb_92a6_5254003913afrow2_col14,#T_186a9fcc_269e_11eb_92a6_5254003913afrow7_col2,#T_186a9fcc_269e_11eb_92a6_5254003913afrow14_col2{\n",
        "            background-color:  #b9c6e0;\n",
        "            color:  #000000;\n",
        "        }#T_186a9fcc_269e_11eb_92a6_5254003913afrow2_col8,#T_186a9fcc_269e_11eb_92a6_5254003913afrow8_col2{\n",
        "            background-color:  #bfc9e1;\n",
        "            color:  #000000;\n",
        "        }#T_186a9fcc_269e_11eb_92a6_5254003913afrow2_col9,#T_186a9fcc_269e_11eb_92a6_5254003913afrow9_col2{\n",
        "            background-color:  #c1cae2;\n",
        "            color:  #000000;\n",
        "        }#T_186a9fcc_269e_11eb_92a6_5254003913afrow2_col10,#T_186a9fcc_269e_11eb_92a6_5254003913afrow10_col2{\n",
        "            background-color:  #b4c4df;\n",
        "            color:  #000000;\n",
        "        }#T_186a9fcc_269e_11eb_92a6_5254003913afrow2_col11,#T_186a9fcc_269e_11eb_92a6_5254003913afrow4_col5,#T_186a9fcc_269e_11eb_92a6_5254003913afrow5_col4,#T_186a9fcc_269e_11eb_92a6_5254003913afrow11_col2{\n",
        "            background-color:  #adc1dd;\n",
        "            color:  #000000;\n",
        "        }#T_186a9fcc_269e_11eb_92a6_5254003913afrow2_col15,#T_186a9fcc_269e_11eb_92a6_5254003913afrow15_col2{\n",
        "            background-color:  #a8bedc;\n",
        "            color:  #000000;\n",
        "        }#T_186a9fcc_269e_11eb_92a6_5254003913afrow2_col16,#T_186a9fcc_269e_11eb_92a6_5254003913afrow16_col2{\n",
        "            background-color:  #b7c5df;\n",
        "            color:  #000000;\n",
        "        }#T_186a9fcc_269e_11eb_92a6_5254003913afrow3_col4,#T_186a9fcc_269e_11eb_92a6_5254003913afrow4_col3{\n",
        "            background-color:  #65a3cb;\n",
        "            color:  #000000;\n",
        "        }#T_186a9fcc_269e_11eb_92a6_5254003913afrow3_col6,#T_186a9fcc_269e_11eb_92a6_5254003913afrow6_col3{\n",
        "            background-color:  #eee9f3;\n",
        "            color:  #000000;\n",
        "        }#T_186a9fcc_269e_11eb_92a6_5254003913afrow3_col7,#T_186a9fcc_269e_11eb_92a6_5254003913afrow7_col3{\n",
        "            background-color:  #f1ebf5;\n",
        "            color:  #000000;\n",
        "        }#T_186a9fcc_269e_11eb_92a6_5254003913afrow3_col8,#T_186a9fcc_269e_11eb_92a6_5254003913afrow8_col3{\n",
        "            background-color:  #fbf4f9;\n",
        "            color:  #000000;\n",
        "        }#T_186a9fcc_269e_11eb_92a6_5254003913afrow3_col9,#T_186a9fcc_269e_11eb_92a6_5254003913afrow9_col3{\n",
        "            background-color:  #eae6f1;\n",
        "            color:  #000000;\n",
        "        }#T_186a9fcc_269e_11eb_92a6_5254003913afrow3_col10,#T_186a9fcc_269e_11eb_92a6_5254003913afrow10_col3{\n",
        "            background-color:  #dad9ea;\n",
        "            color:  #000000;\n",
        "        }#T_186a9fcc_269e_11eb_92a6_5254003913afrow3_col12,#T_186a9fcc_269e_11eb_92a6_5254003913afrow12_col3{\n",
        "            background-color:  #fff7fb;\n",
        "            color:  #000000;\n",
        "        }#T_186a9fcc_269e_11eb_92a6_5254003913afrow3_col13,#T_186a9fcc_269e_11eb_92a6_5254003913afrow13_col3{\n",
        "            background-color:  #e8e4f0;\n",
        "            color:  #000000;\n",
        "        }#T_186a9fcc_269e_11eb_92a6_5254003913afrow3_col15,#T_186a9fcc_269e_11eb_92a6_5254003913afrow4_col11,#T_186a9fcc_269e_11eb_92a6_5254003913afrow5_col15,#T_186a9fcc_269e_11eb_92a6_5254003913afrow11_col4,#T_186a9fcc_269e_11eb_92a6_5254003913afrow15_col3,#T_186a9fcc_269e_11eb_92a6_5254003913afrow15_col5{\n",
        "            background-color:  #c2cbe2;\n",
        "            color:  #000000;\n",
        "        }#T_186a9fcc_269e_11eb_92a6_5254003913afrow3_col16,#T_186a9fcc_269e_11eb_92a6_5254003913afrow16_col3{\n",
        "            background-color:  #eee8f3;\n",
        "            color:  #000000;\n",
        "        }#T_186a9fcc_269e_11eb_92a6_5254003913afrow4_col6,#T_186a9fcc_269e_11eb_92a6_5254003913afrow4_col16,#T_186a9fcc_269e_11eb_92a6_5254003913afrow6_col4,#T_186a9fcc_269e_11eb_92a6_5254003913afrow16_col4{\n",
        "            background-color:  #acc0dd;\n",
        "            color:  #000000;\n",
        "        }#T_186a9fcc_269e_11eb_92a6_5254003913afrow4_col8,#T_186a9fcc_269e_11eb_92a6_5254003913afrow8_col4{\n",
        "            background-color:  #a7bddb;\n",
        "            color:  #000000;\n",
        "        }#T_186a9fcc_269e_11eb_92a6_5254003913afrow4_col9,#T_186a9fcc_269e_11eb_92a6_5254003913afrow7_col14,#T_186a9fcc_269e_11eb_92a6_5254003913afrow9_col4,#T_186a9fcc_269e_11eb_92a6_5254003913afrow14_col7{\n",
        "            background-color:  #83afd3;\n",
        "            color:  #000000;\n",
        "        }#T_186a9fcc_269e_11eb_92a6_5254003913afrow4_col10,#T_186a9fcc_269e_11eb_92a6_5254003913afrow10_col4{\n",
        "            background-color:  #5a9ec9;\n",
        "            color:  #000000;\n",
        "        }#T_186a9fcc_269e_11eb_92a6_5254003913afrow4_col14,#T_186a9fcc_269e_11eb_92a6_5254003913afrow14_col4{\n",
        "            background-color:  #62a2cb;\n",
        "            color:  #000000;\n",
        "        }#T_186a9fcc_269e_11eb_92a6_5254003913afrow4_col15,#T_186a9fcc_269e_11eb_92a6_5254003913afrow15_col4{\n",
        "            background-color:  #4c99c5;\n",
        "            color:  #000000;\n",
        "        }#T_186a9fcc_269e_11eb_92a6_5254003913afrow5_col6,#T_186a9fcc_269e_11eb_92a6_5254003913afrow6_col5{\n",
        "            background-color:  #034e7b;\n",
        "            color:  #f1f1f1;\n",
        "        }#T_186a9fcc_269e_11eb_92a6_5254003913afrow5_col7,#T_186a9fcc_269e_11eb_92a6_5254003913afrow7_col5{\n",
        "            background-color:  #04639b;\n",
        "            color:  #f1f1f1;\n",
        "        }#T_186a9fcc_269e_11eb_92a6_5254003913afrow5_col8,#T_186a9fcc_269e_11eb_92a6_5254003913afrow8_col5,#T_186a9fcc_269e_11eb_92a6_5254003913afrow12_col13,#T_186a9fcc_269e_11eb_92a6_5254003913afrow13_col12{\n",
        "            background-color:  #0872b1;\n",
        "            color:  #f1f1f1;\n",
        "        }#T_186a9fcc_269e_11eb_92a6_5254003913afrow5_col9,#T_186a9fcc_269e_11eb_92a6_5254003913afrow9_col5{\n",
        "            background-color:  #1e80b8;\n",
        "            color:  #000000;\n",
        "        }#T_186a9fcc_269e_11eb_92a6_5254003913afrow5_col10,#T_186a9fcc_269e_11eb_92a6_5254003913afrow10_col5{\n",
        "            background-color:  #0569a5;\n",
        "            color:  #f1f1f1;\n",
        "        }#T_186a9fcc_269e_11eb_92a6_5254003913afrow5_col11,#T_186a9fcc_269e_11eb_92a6_5254003913afrow11_col5{\n",
        "            background-color:  #2a88bc;\n",
        "            color:  #000000;\n",
        "        }#T_186a9fcc_269e_11eb_92a6_5254003913afrow5_col12,#T_186a9fcc_269e_11eb_92a6_5254003913afrow12_col5{\n",
        "            background-color:  #0569a4;\n",
        "            color:  #f1f1f1;\n",
        "        }#T_186a9fcc_269e_11eb_92a6_5254003913afrow5_col13,#T_186a9fcc_269e_11eb_92a6_5254003913afrow6_col11,#T_186a9fcc_269e_11eb_92a6_5254003913afrow11_col6,#T_186a9fcc_269e_11eb_92a6_5254003913afrow13_col5{\n",
        "            background-color:  #3991c1;\n",
        "            color:  #000000;\n",
        "        }#T_186a9fcc_269e_11eb_92a6_5254003913afrow5_col14,#T_186a9fcc_269e_11eb_92a6_5254003913afrow14_col5{\n",
        "            background-color:  #c5cce3;\n",
        "            color:  #000000;\n",
        "        }#T_186a9fcc_269e_11eb_92a6_5254003913afrow5_col16,#T_186a9fcc_269e_11eb_92a6_5254003913afrow16_col5{\n",
        "            background-color:  #034c78;\n",
        "            color:  #f1f1f1;\n",
        "        }#T_186a9fcc_269e_11eb_92a6_5254003913afrow6_col7,#T_186a9fcc_269e_11eb_92a6_5254003913afrow7_col6{\n",
        "            background-color:  #045b8e;\n",
        "            color:  #f1f1f1;\n",
        "        }#T_186a9fcc_269e_11eb_92a6_5254003913afrow6_col8,#T_186a9fcc_269e_11eb_92a6_5254003913afrow8_col6{\n",
        "            background-color:  #056dab;\n",
        "            color:  #f1f1f1;\n",
        "        }#T_186a9fcc_269e_11eb_92a6_5254003913afrow6_col9,#T_186a9fcc_269e_11eb_92a6_5254003913afrow7_col9,#T_186a9fcc_269e_11eb_92a6_5254003913afrow9_col6,#T_186a9fcc_269e_11eb_92a6_5254003913afrow9_col7,#T_186a9fcc_269e_11eb_92a6_5254003913afrow10_col11,#T_186a9fcc_269e_11eb_92a6_5254003913afrow11_col10{\n",
        "            background-color:  #1b7eb7;\n",
        "            color:  #000000;\n",
        "        }#T_186a9fcc_269e_11eb_92a6_5254003913afrow6_col10,#T_186a9fcc_269e_11eb_92a6_5254003913afrow6_col12,#T_186a9fcc_269e_11eb_92a6_5254003913afrow10_col6,#T_186a9fcc_269e_11eb_92a6_5254003913afrow12_col6{\n",
        "            background-color:  #0566a0;\n",
        "            color:  #f1f1f1;\n",
        "        }#T_186a9fcc_269e_11eb_92a6_5254003913afrow6_col13,#T_186a9fcc_269e_11eb_92a6_5254003913afrow9_col13,#T_186a9fcc_269e_11eb_92a6_5254003913afrow13_col6,#T_186a9fcc_269e_11eb_92a6_5254003913afrow13_col9{\n",
        "            background-color:  #328dbf;\n",
        "            color:  #000000;\n",
        "        }#T_186a9fcc_269e_11eb_92a6_5254003913afrow6_col15,#T_186a9fcc_269e_11eb_92a6_5254003913afrow15_col6{\n",
        "            background-color:  #bdc8e1;\n",
        "            color:  #000000;\n",
        "        }#T_186a9fcc_269e_11eb_92a6_5254003913afrow6_col16,#T_186a9fcc_269e_11eb_92a6_5254003913afrow16_col6{\n",
        "            background-color:  #034f7d;\n",
        "            color:  #f1f1f1;\n",
        "        }#T_186a9fcc_269e_11eb_92a6_5254003913afrow7_col8,#T_186a9fcc_269e_11eb_92a6_5254003913afrow8_col7,#T_186a9fcc_269e_11eb_92a6_5254003913afrow8_col9,#T_186a9fcc_269e_11eb_92a6_5254003913afrow8_col10,#T_186a9fcc_269e_11eb_92a6_5254003913afrow9_col8,#T_186a9fcc_269e_11eb_92a6_5254003913afrow9_col12,#T_186a9fcc_269e_11eb_92a6_5254003913afrow9_col16,#T_186a9fcc_269e_11eb_92a6_5254003913afrow10_col8,#T_186a9fcc_269e_11eb_92a6_5254003913afrow12_col9,#T_186a9fcc_269e_11eb_92a6_5254003913afrow16_col9{\n",
        "            background-color:  #0a73b2;\n",
        "            color:  #f1f1f1;\n",
        "        }#T_186a9fcc_269e_11eb_92a6_5254003913afrow7_col10,#T_186a9fcc_269e_11eb_92a6_5254003913afrow10_col7{\n",
        "            background-color:  #0570b0;\n",
        "            color:  #f1f1f1;\n",
        "        }#T_186a9fcc_269e_11eb_92a6_5254003913afrow7_col11,#T_186a9fcc_269e_11eb_92a6_5254003913afrow11_col7{\n",
        "            background-color:  #3b92c1;\n",
        "            color:  #000000;\n",
        "        }#T_186a9fcc_269e_11eb_92a6_5254003913afrow7_col12,#T_186a9fcc_269e_11eb_92a6_5254003913afrow12_col7{\n",
        "            background-color:  #0568a3;\n",
        "            color:  #f1f1f1;\n",
        "        }#T_186a9fcc_269e_11eb_92a6_5254003913afrow7_col13,#T_186a9fcc_269e_11eb_92a6_5254003913afrow13_col7{\n",
        "            background-color:  #167bb6;\n",
        "            color:  #000000;\n",
        "        }#T_186a9fcc_269e_11eb_92a6_5254003913afrow7_col16,#T_186a9fcc_269e_11eb_92a6_5254003913afrow16_col7{\n",
        "            background-color:  #045483;\n",
        "            color:  #f1f1f1;\n",
        "        }#T_186a9fcc_269e_11eb_92a6_5254003913afrow8_col11,#T_186a9fcc_269e_11eb_92a6_5254003913afrow11_col8{\n",
        "            background-color:  #04649d;\n",
        "            color:  #f1f1f1;\n",
        "        }#T_186a9fcc_269e_11eb_92a6_5254003913afrow8_col12,#T_186a9fcc_269e_11eb_92a6_5254003913afrow12_col8{\n",
        "            background-color:  #04649e;\n",
        "            color:  #f1f1f1;\n",
        "        }#T_186a9fcc_269e_11eb_92a6_5254003913afrow8_col13,#T_186a9fcc_269e_11eb_92a6_5254003913afrow11_col12,#T_186a9fcc_269e_11eb_92a6_5254003913afrow12_col11,#T_186a9fcc_269e_11eb_92a6_5254003913afrow13_col8{\n",
        "            background-color:  #2081b9;\n",
        "            color:  #000000;\n",
        "        }#T_186a9fcc_269e_11eb_92a6_5254003913afrow8_col14,#T_186a9fcc_269e_11eb_92a6_5254003913afrow8_col15,#T_186a9fcc_269e_11eb_92a6_5254003913afrow14_col8,#T_186a9fcc_269e_11eb_92a6_5254003913afrow15_col8{\n",
        "            background-color:  #4094c3;\n",
        "            color:  #000000;\n",
        "        }#T_186a9fcc_269e_11eb_92a6_5254003913afrow8_col16,#T_186a9fcc_269e_11eb_92a6_5254003913afrow16_col8{\n",
        "            background-color:  #046299;\n",
        "            color:  #f1f1f1;\n",
        "        }#T_186a9fcc_269e_11eb_92a6_5254003913afrow9_col10,#T_186a9fcc_269e_11eb_92a6_5254003913afrow10_col9,#T_186a9fcc_269e_11eb_92a6_5254003913afrow13_col16,#T_186a9fcc_269e_11eb_92a6_5254003913afrow16_col13{\n",
        "            background-color:  #1379b5;\n",
        "            color:  #f1f1f1;\n",
        "        }#T_186a9fcc_269e_11eb_92a6_5254003913afrow9_col11,#T_186a9fcc_269e_11eb_92a6_5254003913afrow11_col9{\n",
        "            background-color:  #2987bc;\n",
        "            color:  #000000;\n",
        "        }#T_186a9fcc_269e_11eb_92a6_5254003913afrow9_col14,#T_186a9fcc_269e_11eb_92a6_5254003913afrow14_col9{\n",
        "            background-color:  #3f93c2;\n",
        "            color:  #000000;\n",
        "        }#T_186a9fcc_269e_11eb_92a6_5254003913afrow9_col15,#T_186a9fcc_269e_11eb_92a6_5254003913afrow15_col9{\n",
        "            background-color:  #6ba5cd;\n",
        "            color:  #000000;\n",
        "        }#T_186a9fcc_269e_11eb_92a6_5254003913afrow10_col12,#T_186a9fcc_269e_11eb_92a6_5254003913afrow12_col10{\n",
        "            background-color:  #0c74b2;\n",
        "            color:  #f1f1f1;\n",
        "        }#T_186a9fcc_269e_11eb_92a6_5254003913afrow10_col13,#T_186a9fcc_269e_11eb_92a6_5254003913afrow11_col15,#T_186a9fcc_269e_11eb_92a6_5254003913afrow13_col10,#T_186a9fcc_269e_11eb_92a6_5254003913afrow15_col11{\n",
        "            background-color:  #3790c0;\n",
        "            color:  #000000;\n",
        "        }#T_186a9fcc_269e_11eb_92a6_5254003913afrow10_col14,#T_186a9fcc_269e_11eb_92a6_5254003913afrow14_col10{\n",
        "            background-color:  #86b0d3;\n",
        "            color:  #000000;\n",
        "        }#T_186a9fcc_269e_11eb_92a6_5254003913afrow10_col15,#T_186a9fcc_269e_11eb_92a6_5254003913afrow15_col10{\n",
        "            background-color:  #7bacd1;\n",
        "            color:  #000000;\n",
        "        }#T_186a9fcc_269e_11eb_92a6_5254003913afrow10_col16,#T_186a9fcc_269e_11eb_92a6_5254003913afrow16_col10{\n",
        "            background-color:  #04629a;\n",
        "            color:  #f1f1f1;\n",
        "        }#T_186a9fcc_269e_11eb_92a6_5254003913afrow11_col13,#T_186a9fcc_269e_11eb_92a6_5254003913afrow13_col11{\n",
        "            background-color:  #3d93c2;\n",
        "            color:  #000000;\n",
        "        }#T_186a9fcc_269e_11eb_92a6_5254003913afrow11_col16,#T_186a9fcc_269e_11eb_92a6_5254003913afrow16_col11{\n",
        "            background-color:  #0f76b3;\n",
        "            color:  #f1f1f1;\n",
        "        }#T_186a9fcc_269e_11eb_92a6_5254003913afrow12_col15,#T_186a9fcc_269e_11eb_92a6_5254003913afrow15_col12{\n",
        "            background-color:  #6fa7ce;\n",
        "            color:  #000000;\n",
        "        }#T_186a9fcc_269e_11eb_92a6_5254003913afrow12_col16,#T_186a9fcc_269e_11eb_92a6_5254003913afrow16_col12{\n",
        "            background-color:  #046198;\n",
        "            color:  #f1f1f1;\n",
        "        }#T_186a9fcc_269e_11eb_92a6_5254003913afrow13_col14,#T_186a9fcc_269e_11eb_92a6_5254003913afrow13_col15,#T_186a9fcc_269e_11eb_92a6_5254003913afrow14_col13,#T_186a9fcc_269e_11eb_92a6_5254003913afrow15_col13{\n",
        "            background-color:  #2484ba;\n",
        "            color:  #000000;\n",
        "        }#T_186a9fcc_269e_11eb_92a6_5254003913afrow14_col15,#T_186a9fcc_269e_11eb_92a6_5254003913afrow15_col14{\n",
        "            background-color:  #0771b1;\n",
        "            color:  #f1f1f1;\n",
        "        }</style><table id=\"T_186a9fcc_269e_11eb_92a6_5254003913af\" ><thead>    <tr>        <th class=\"blank level0\" ></th>        <th class=\"col_heading level0 col0\" >Rt</th>        <th class=\"col_heading level0 col1\" >theta</th>        <th class=\"col_heading level0 col2\" >kappa</th>        <th class=\"col_heading level0 col3\" >rho</th>        <th class=\"col_heading level0 col4\" >sigma</th>        <th class=\"col_heading level0 col5\" >School_closing</th>        <th class=\"col_heading level0 col6\" >Workplace_closing</th>        <th class=\"col_heading level0 col7\" >Cancel_events</th>        <th class=\"col_heading level0 col8\" >Gatherings_restrictions</th>        <th class=\"col_heading level0 col9\" >Transport_closing</th>        <th class=\"col_heading level0 col10\" >Stay_home_restrictions</th>        <th class=\"col_heading level0 col11\" >Internal_movement_restrictions</th>        <th class=\"col_heading level0 col12\" >International_movement_restrictions</th>        <th class=\"col_heading level0 col13\" >Information_campaigns</th>        <th class=\"col_heading level0 col14\" >Testing_policy</th>        <th class=\"col_heading level0 col15\" >Contact_tracing</th>        <th class=\"col_heading level0 col16\" >Stringency_index</th>    </tr></thead><tbody>\n",
        "                <tr>\n",
        "                        <th id=\"T_186a9fcc_269e_11eb_92a6_5254003913aflevel0_row0\" class=\"row_heading level0 row0\" >Rt</th>\n",
        "                        <td id=\"T_186a9fcc_269e_11eb_92a6_5254003913afrow0_col0\" class=\"data row0 col0\" >1.000000</td>\n",
        "                        <td id=\"T_186a9fcc_269e_11eb_92a6_5254003913afrow0_col1\" class=\"data row0 col1\" >-0.153880</td>\n",
        "                        <td id=\"T_186a9fcc_269e_11eb_92a6_5254003913afrow0_col2\" class=\"data row0 col2\" >-0.026952</td>\n",
        "                        <td id=\"T_186a9fcc_269e_11eb_92a6_5254003913afrow0_col3\" class=\"data row0 col3\" >0.365994</td>\n",
        "                        <td id=\"T_186a9fcc_269e_11eb_92a6_5254003913afrow0_col4\" class=\"data row0 col4\" >-0.144977</td>\n",
        "                        <td id=\"T_186a9fcc_269e_11eb_92a6_5254003913afrow0_col5\" class=\"data row0 col5\" >-0.342241</td>\n",
        "                        <td id=\"T_186a9fcc_269e_11eb_92a6_5254003913afrow0_col6\" class=\"data row0 col6\" >-0.344081</td>\n",
        "                        <td id=\"T_186a9fcc_269e_11eb_92a6_5254003913afrow0_col7\" class=\"data row0 col7\" >-0.362511</td>\n",
        "                        <td id=\"T_186a9fcc_269e_11eb_92a6_5254003913afrow0_col8\" class=\"data row0 col8\" >-0.456292</td>\n",
        "                        <td id=\"T_186a9fcc_269e_11eb_92a6_5254003913afrow0_col9\" class=\"data row0 col9\" >-0.339582</td>\n",
        "                        <td id=\"T_186a9fcc_269e_11eb_92a6_5254003913afrow0_col10\" class=\"data row0 col10\" >-0.329069</td>\n",
        "                        <td id=\"T_186a9fcc_269e_11eb_92a6_5254003913afrow0_col11\" class=\"data row0 col11\" >-0.309353</td>\n",
        "                        <td id=\"T_186a9fcc_269e_11eb_92a6_5254003913afrow0_col12\" class=\"data row0 col12\" >-0.432153</td>\n",
        "                        <td id=\"T_186a9fcc_269e_11eb_92a6_5254003913afrow0_col13\" class=\"data row0 col13\" >0.035621</td>\n",
        "                        <td id=\"T_186a9fcc_269e_11eb_92a6_5254003913afrow0_col14\" class=\"data row0 col14\" >-0.215348</td>\n",
        "                        <td id=\"T_186a9fcc_269e_11eb_92a6_5254003913afrow0_col15\" class=\"data row0 col15\" >-0.022455</td>\n",
        "                        <td id=\"T_186a9fcc_269e_11eb_92a6_5254003913afrow0_col16\" class=\"data row0 col16\" >-0.338772</td>\n",
        "            </tr>\n",
        "            <tr>\n",
        "                        <th id=\"T_186a9fcc_269e_11eb_92a6_5254003913aflevel0_row1\" class=\"row_heading level0 row1\" >theta</th>\n",
        "                        <td id=\"T_186a9fcc_269e_11eb_92a6_5254003913afrow1_col0\" class=\"data row1 col0\" >-0.153880</td>\n",
        "                        <td id=\"T_186a9fcc_269e_11eb_92a6_5254003913afrow1_col1\" class=\"data row1 col1\" >1.000000</td>\n",
        "                        <td id=\"T_186a9fcc_269e_11eb_92a6_5254003913afrow1_col2\" class=\"data row1 col2\" >0.484913</td>\n",
        "                        <td id=\"T_186a9fcc_269e_11eb_92a6_5254003913afrow1_col3\" class=\"data row1 col3\" >-0.145805</td>\n",
        "                        <td id=\"T_186a9fcc_269e_11eb_92a6_5254003913afrow1_col4\" class=\"data row1 col4\" >-0.111885</td>\n",
        "                        <td id=\"T_186a9fcc_269e_11eb_92a6_5254003913afrow1_col5\" class=\"data row1 col5\" >0.121513</td>\n",
        "                        <td id=\"T_186a9fcc_269e_11eb_92a6_5254003913afrow1_col6\" class=\"data row1 col6\" >0.088452</td>\n",
        "                        <td id=\"T_186a9fcc_269e_11eb_92a6_5254003913afrow1_col7\" class=\"data row1 col7\" >0.129450</td>\n",
        "                        <td id=\"T_186a9fcc_269e_11eb_92a6_5254003913afrow1_col8\" class=\"data row1 col8\" >0.088005</td>\n",
        "                        <td id=\"T_186a9fcc_269e_11eb_92a6_5254003913afrow1_col9\" class=\"data row1 col9\" >-0.032993</td>\n",
        "                        <td id=\"T_186a9fcc_269e_11eb_92a6_5254003913afrow1_col10\" class=\"data row1 col10\" >0.031334</td>\n",
        "                        <td id=\"T_186a9fcc_269e_11eb_92a6_5254003913afrow1_col11\" class=\"data row1 col11\" >0.053136</td>\n",
        "                        <td id=\"T_186a9fcc_269e_11eb_92a6_5254003913afrow1_col12\" class=\"data row1 col12\" >0.088705</td>\n",
        "                        <td id=\"T_186a9fcc_269e_11eb_92a6_5254003913afrow1_col13\" class=\"data row1 col13\" >0.016723</td>\n",
        "                        <td id=\"T_186a9fcc_269e_11eb_92a6_5254003913afrow1_col14\" class=\"data row1 col14\" >-0.031905</td>\n",
        "                        <td id=\"T_186a9fcc_269e_11eb_92a6_5254003913afrow1_col15\" class=\"data row1 col15\" >-0.108128</td>\n",
        "                        <td id=\"T_186a9fcc_269e_11eb_92a6_5254003913afrow1_col16\" class=\"data row1 col16\" >0.113815</td>\n",
        "            </tr>\n",
        "            <tr>\n",
        "                        <th id=\"T_186a9fcc_269e_11eb_92a6_5254003913aflevel0_row2\" class=\"row_heading level0 row2\" >kappa</th>\n",
        "                        <td id=\"T_186a9fcc_269e_11eb_92a6_5254003913afrow2_col0\" class=\"data row2 col0\" >-0.026952</td>\n",
        "                        <td id=\"T_186a9fcc_269e_11eb_92a6_5254003913afrow2_col1\" class=\"data row2 col1\" >0.484913</td>\n",
        "                        <td id=\"T_186a9fcc_269e_11eb_92a6_5254003913afrow2_col2\" class=\"data row2 col2\" >1.000000</td>\n",
        "                        <td id=\"T_186a9fcc_269e_11eb_92a6_5254003913afrow2_col3\" class=\"data row2 col3\" >0.220615</td>\n",
        "                        <td id=\"T_186a9fcc_269e_11eb_92a6_5254003913afrow2_col4\" class=\"data row2 col4\" >-0.057939</td>\n",
        "                        <td id=\"T_186a9fcc_269e_11eb_92a6_5254003913afrow2_col5\" class=\"data row2 col5\" >-0.128760</td>\n",
        "                        <td id=\"T_186a9fcc_269e_11eb_92a6_5254003913afrow2_col6\" class=\"data row2 col6\" >-0.123263</td>\n",
        "                        <td id=\"T_186a9fcc_269e_11eb_92a6_5254003913afrow2_col7\" class=\"data row2 col7\" >-0.165261</td>\n",
        "                        <td id=\"T_186a9fcc_269e_11eb_92a6_5254003913afrow2_col8\" class=\"data row2 col8\" >-0.189814</td>\n",
        "                        <td id=\"T_186a9fcc_269e_11eb_92a6_5254003913afrow2_col9\" class=\"data row2 col9\" >-0.205657</td>\n",
        "                        <td id=\"T_186a9fcc_269e_11eb_92a6_5254003913afrow2_col10\" class=\"data row2 col10\" >-0.139075</td>\n",
        "                        <td id=\"T_186a9fcc_269e_11eb_92a6_5254003913afrow2_col11\" class=\"data row2 col11\" >-0.102652</td>\n",
        "                        <td id=\"T_186a9fcc_269e_11eb_92a6_5254003913afrow2_col12\" class=\"data row2 col12\" >-0.152666</td>\n",
        "                        <td id=\"T_186a9fcc_269e_11eb_92a6_5254003913afrow2_col13\" class=\"data row2 col13\" >-0.123051</td>\n",
        "                        <td id=\"T_186a9fcc_269e_11eb_92a6_5254003913afrow2_col14\" class=\"data row2 col14\" >-0.160703</td>\n",
        "                        <td id=\"T_186a9fcc_269e_11eb_92a6_5254003913afrow2_col15\" class=\"data row2 col15\" >-0.074504</td>\n",
        "                        <td id=\"T_186a9fcc_269e_11eb_92a6_5254003913afrow2_col16\" class=\"data row2 col16\" >-0.152175</td>\n",
        "            </tr>\n",
        "            <tr>\n",
        "                        <th id=\"T_186a9fcc_269e_11eb_92a6_5254003913aflevel0_row3\" class=\"row_heading level0 row3\" >rho</th>\n",
        "                        <td id=\"T_186a9fcc_269e_11eb_92a6_5254003913afrow3_col0\" class=\"data row3 col0\" >0.365994</td>\n",
        "                        <td id=\"T_186a9fcc_269e_11eb_92a6_5254003913afrow3_col1\" class=\"data row3 col1\" >-0.145805</td>\n",
        "                        <td id=\"T_186a9fcc_269e_11eb_92a6_5254003913afrow3_col2\" class=\"data row3 col2\" >0.220615</td>\n",
        "                        <td id=\"T_186a9fcc_269e_11eb_92a6_5254003913afrow3_col3\" class=\"data row3 col3\" >1.000000</td>\n",
        "                        <td id=\"T_186a9fcc_269e_11eb_92a6_5254003913afrow3_col4\" class=\"data row3 col4\" >0.195496</td>\n",
        "                        <td id=\"T_186a9fcc_269e_11eb_92a6_5254003913afrow3_col5\" class=\"data row3 col5\" >-0.449721</td>\n",
        "                        <td id=\"T_186a9fcc_269e_11eb_92a6_5254003913afrow3_col6\" class=\"data row3 col6\" >-0.514929</td>\n",
        "                        <td id=\"T_186a9fcc_269e_11eb_92a6_5254003913afrow3_col7\" class=\"data row3 col7\" >-0.552298</td>\n",
        "                        <td id=\"T_186a9fcc_269e_11eb_92a6_5254003913afrow3_col8\" class=\"data row3 col8\" >-0.664295</td>\n",
        "                        <td id=\"T_186a9fcc_269e_11eb_92a6_5254003913afrow3_col9\" class=\"data row3 col9\" >-0.472696</td>\n",
        "                        <td id=\"T_186a9fcc_269e_11eb_92a6_5254003913afrow3_col10\" class=\"data row3 col10\" >-0.355809</td>\n",
        "                        <td id=\"T_186a9fcc_269e_11eb_92a6_5254003913afrow3_col11\" class=\"data row3 col11\" >-0.457668</td>\n",
        "                        <td id=\"T_186a9fcc_269e_11eb_92a6_5254003913afrow3_col12\" class=\"data row3 col12\" >-0.705672</td>\n",
        "                        <td id=\"T_186a9fcc_269e_11eb_92a6_5254003913afrow3_col13\" class=\"data row3 col13\" >-0.463231</td>\n",
        "                        <td id=\"T_186a9fcc_269e_11eb_92a6_5254003913afrow3_col14\" class=\"data row3 col14\" >-0.362534</td>\n",
        "                        <td id=\"T_186a9fcc_269e_11eb_92a6_5254003913afrow3_col15\" class=\"data row3 col15\" >-0.207249</td>\n",
        "                        <td id=\"T_186a9fcc_269e_11eb_92a6_5254003913afrow3_col16\" class=\"data row3 col16\" >-0.509523</td>\n",
        "            </tr>\n",
        "            <tr>\n",
        "                        <th id=\"T_186a9fcc_269e_11eb_92a6_5254003913aflevel0_row4\" class=\"row_heading level0 row4\" >sigma</th>\n",
        "                        <td id=\"T_186a9fcc_269e_11eb_92a6_5254003913afrow4_col0\" class=\"data row4 col0\" >-0.144977</td>\n",
        "                        <td id=\"T_186a9fcc_269e_11eb_92a6_5254003913afrow4_col1\" class=\"data row4 col1\" >-0.111885</td>\n",
        "                        <td id=\"T_186a9fcc_269e_11eb_92a6_5254003913afrow4_col2\" class=\"data row4 col2\" >-0.057939</td>\n",
        "                        <td id=\"T_186a9fcc_269e_11eb_92a6_5254003913afrow4_col3\" class=\"data row4 col3\" >0.195496</td>\n",
        "                        <td id=\"T_186a9fcc_269e_11eb_92a6_5254003913afrow4_col4\" class=\"data row4 col4\" >1.000000</td>\n",
        "                        <td id=\"T_186a9fcc_269e_11eb_92a6_5254003913afrow4_col5\" class=\"data row4 col5\" >-0.099654</td>\n",
        "                        <td id=\"T_186a9fcc_269e_11eb_92a6_5254003913afrow4_col6\" class=\"data row4 col6\" >-0.094315</td>\n",
        "                        <td id=\"T_186a9fcc_269e_11eb_92a6_5254003913afrow4_col7\" class=\"data row4 col7\" >-0.056884</td>\n",
        "                        <td id=\"T_186a9fcc_269e_11eb_92a6_5254003913afrow4_col8\" class=\"data row4 col8\" >-0.066945</td>\n",
        "                        <td id=\"T_186a9fcc_269e_11eb_92a6_5254003913afrow4_col9\" class=\"data row4 col9\" >0.086696</td>\n",
        "                        <td id=\"T_186a9fcc_269e_11eb_92a6_5254003913afrow4_col10\" class=\"data row4 col10\" >0.237318</td>\n",
        "                        <td id=\"T_186a9fcc_269e_11eb_92a6_5254003913afrow4_col11\" class=\"data row4 col11\" >-0.206906</td>\n",
        "                        <td id=\"T_186a9fcc_269e_11eb_92a6_5254003913afrow4_col12\" class=\"data row4 col12\" >-0.126469</td>\n",
        "                        <td id=\"T_186a9fcc_269e_11eb_92a6_5254003913afrow4_col13\" class=\"data row4 col13\" >0.017895</td>\n",
        "                        <td id=\"T_186a9fcc_269e_11eb_92a6_5254003913afrow4_col14\" class=\"data row4 col14\" >0.208344</td>\n",
        "                        <td id=\"T_186a9fcc_269e_11eb_92a6_5254003913afrow4_col15\" class=\"data row4 col15\" >0.283802</td>\n",
        "                        <td id=\"T_186a9fcc_269e_11eb_92a6_5254003913afrow4_col16\" class=\"data row4 col16\" >-0.093248</td>\n",
        "            </tr>\n",
        "            <tr>\n",
        "                        <th id=\"T_186a9fcc_269e_11eb_92a6_5254003913aflevel0_row5\" class=\"row_heading level0 row5\" >School_closing</th>\n",
        "                        <td id=\"T_186a9fcc_269e_11eb_92a6_5254003913afrow5_col0\" class=\"data row5 col0\" >-0.342241</td>\n",
        "                        <td id=\"T_186a9fcc_269e_11eb_92a6_5254003913afrow5_col1\" class=\"data row5 col1\" >0.121513</td>\n",
        "                        <td id=\"T_186a9fcc_269e_11eb_92a6_5254003913afrow5_col2\" class=\"data row5 col2\" >-0.128760</td>\n",
        "                        <td id=\"T_186a9fcc_269e_11eb_92a6_5254003913afrow5_col3\" class=\"data row5 col3\" >-0.449721</td>\n",
        "                        <td id=\"T_186a9fcc_269e_11eb_92a6_5254003913afrow5_col4\" class=\"data row5 col4\" >-0.099654</td>\n",
        "                        <td id=\"T_186a9fcc_269e_11eb_92a6_5254003913afrow5_col5\" class=\"data row5 col5\" >1.000000</td>\n",
        "                        <td id=\"T_186a9fcc_269e_11eb_92a6_5254003913afrow5_col6\" class=\"data row5 col6\" >0.859345</td>\n",
        "                        <td id=\"T_186a9fcc_269e_11eb_92a6_5254003913afrow5_col7\" class=\"data row5 col7\" >0.696224</td>\n",
        "                        <td id=\"T_186a9fcc_269e_11eb_92a6_5254003913afrow5_col8\" class=\"data row5 col8\" >0.560129</td>\n",
        "                        <td id=\"T_186a9fcc_269e_11eb_92a6_5254003913afrow5_col9\" class=\"data row5 col9\" >0.460997</td>\n",
        "                        <td id=\"T_186a9fcc_269e_11eb_92a6_5254003913afrow5_col10\" class=\"data row5 col10\" >0.637597</td>\n",
        "                        <td id=\"T_186a9fcc_269e_11eb_92a6_5254003913afrow5_col11\" class=\"data row5 col11\" >0.411909</td>\n",
        "                        <td id=\"T_186a9fcc_269e_11eb_92a6_5254003913afrow5_col12\" class=\"data row5 col12\" >0.641962</td>\n",
        "                        <td id=\"T_186a9fcc_269e_11eb_92a6_5254003913afrow5_col13\" class=\"data row5 col13\" >0.349046</td>\n",
        "                        <td id=\"T_186a9fcc_269e_11eb_92a6_5254003913afrow5_col14\" class=\"data row5 col14\" >-0.222461</td>\n",
        "                        <td id=\"T_186a9fcc_269e_11eb_92a6_5254003913afrow5_col15\" class=\"data row5 col15\" >-0.207996</td>\n",
        "                        <td id=\"T_186a9fcc_269e_11eb_92a6_5254003913afrow5_col16\" class=\"data row5 col16\" >0.869810</td>\n",
        "            </tr>\n",
        "            <tr>\n",
        "                        <th id=\"T_186a9fcc_269e_11eb_92a6_5254003913aflevel0_row6\" class=\"row_heading level0 row6\" >Workplace_closing</th>\n",
        "                        <td id=\"T_186a9fcc_269e_11eb_92a6_5254003913afrow6_col0\" class=\"data row6 col0\" >-0.344081</td>\n",
        "                        <td id=\"T_186a9fcc_269e_11eb_92a6_5254003913afrow6_col1\" class=\"data row6 col1\" >0.088452</td>\n",
        "                        <td id=\"T_186a9fcc_269e_11eb_92a6_5254003913afrow6_col2\" class=\"data row6 col2\" >-0.123263</td>\n",
        "                        <td id=\"T_186a9fcc_269e_11eb_92a6_5254003913afrow6_col3\" class=\"data row6 col3\" >-0.514929</td>\n",
        "                        <td id=\"T_186a9fcc_269e_11eb_92a6_5254003913afrow6_col4\" class=\"data row6 col4\" >-0.094315</td>\n",
        "                        <td id=\"T_186a9fcc_269e_11eb_92a6_5254003913afrow6_col5\" class=\"data row6 col5\" >0.859345</td>\n",
        "                        <td id=\"T_186a9fcc_269e_11eb_92a6_5254003913afrow6_col6\" class=\"data row6 col6\" >1.000000</td>\n",
        "                        <td id=\"T_186a9fcc_269e_11eb_92a6_5254003913afrow6_col7\" class=\"data row6 col7\" >0.774605</td>\n",
        "                        <td id=\"T_186a9fcc_269e_11eb_92a6_5254003913afrow6_col8\" class=\"data row6 col8\" >0.605313</td>\n",
        "                        <td id=\"T_186a9fcc_269e_11eb_92a6_5254003913afrow6_col9\" class=\"data row6 col9\" >0.479137</td>\n",
        "                        <td id=\"T_186a9fcc_269e_11eb_92a6_5254003913afrow6_col10\" class=\"data row6 col10\" >0.666866</td>\n",
        "                        <td id=\"T_186a9fcc_269e_11eb_92a6_5254003913afrow6_col11\" class=\"data row6 col11\" >0.351972</td>\n",
        "                        <td id=\"T_186a9fcc_269e_11eb_92a6_5254003913afrow6_col12\" class=\"data row6 col12\" >0.673117</td>\n",
        "                        <td id=\"T_186a9fcc_269e_11eb_92a6_5254003913afrow6_col13\" class=\"data row6 col13\" >0.375492</td>\n",
        "                        <td id=\"T_186a9fcc_269e_11eb_92a6_5254003913afrow6_col14\" class=\"data row6 col14\" >-0.128863</td>\n",
        "                        <td id=\"T_186a9fcc_269e_11eb_92a6_5254003913afrow6_col15\" class=\"data row6 col15\" >-0.182080</td>\n",
        "                        <td id=\"T_186a9fcc_269e_11eb_92a6_5254003913afrow6_col16\" class=\"data row6 col16\" >0.851439</td>\n",
        "            </tr>\n",
        "            <tr>\n",
        "                        <th id=\"T_186a9fcc_269e_11eb_92a6_5254003913aflevel0_row7\" class=\"row_heading level0 row7\" >Cancel_events</th>\n",
        "                        <td id=\"T_186a9fcc_269e_11eb_92a6_5254003913afrow7_col0\" class=\"data row7 col0\" >-0.362511</td>\n",
        "                        <td id=\"T_186a9fcc_269e_11eb_92a6_5254003913afrow7_col1\" class=\"data row7 col1\" >0.129450</td>\n",
        "                        <td id=\"T_186a9fcc_269e_11eb_92a6_5254003913afrow7_col2\" class=\"data row7 col2\" >-0.165261</td>\n",
        "                        <td id=\"T_186a9fcc_269e_11eb_92a6_5254003913afrow7_col3\" class=\"data row7 col3\" >-0.552298</td>\n",
        "                        <td id=\"T_186a9fcc_269e_11eb_92a6_5254003913afrow7_col4\" class=\"data row7 col4\" >-0.056884</td>\n",
        "                        <td id=\"T_186a9fcc_269e_11eb_92a6_5254003913afrow7_col5\" class=\"data row7 col5\" >0.696224</td>\n",
        "                        <td id=\"T_186a9fcc_269e_11eb_92a6_5254003913afrow7_col6\" class=\"data row7 col6\" >0.774605</td>\n",
        "                        <td id=\"T_186a9fcc_269e_11eb_92a6_5254003913afrow7_col7\" class=\"data row7 col7\" >1.000000</td>\n",
        "                        <td id=\"T_186a9fcc_269e_11eb_92a6_5254003913afrow7_col8\" class=\"data row7 col8\" >0.551510</td>\n",
        "                        <td id=\"T_186a9fcc_269e_11eb_92a6_5254003913afrow7_col9\" class=\"data row7 col9\" >0.474057</td>\n",
        "                        <td id=\"T_186a9fcc_269e_11eb_92a6_5254003913afrow7_col10\" class=\"data row7 col10\" >0.567867</td>\n",
        "                        <td id=\"T_186a9fcc_269e_11eb_92a6_5254003913afrow7_col11\" class=\"data row7 col11\" >0.342309</td>\n",
        "                        <td id=\"T_186a9fcc_269e_11eb_92a6_5254003913afrow7_col12\" class=\"data row7 col12\" >0.651662</td>\n",
        "                        <td id=\"T_186a9fcc_269e_11eb_92a6_5254003913afrow7_col13\" class=\"data row7 col13\" >0.499262</td>\n",
        "                        <td id=\"T_186a9fcc_269e_11eb_92a6_5254003913afrow7_col14\" class=\"data row7 col14\" >0.083054</td>\n",
        "                        <td id=\"T_186a9fcc_269e_11eb_92a6_5254003913afrow7_col15\" class=\"data row7 col15\" >-0.021062</td>\n",
        "                        <td id=\"T_186a9fcc_269e_11eb_92a6_5254003913afrow7_col16\" class=\"data row7 col16\" >0.822180</td>\n",
        "            </tr>\n",
        "            <tr>\n",
        "                        <th id=\"T_186a9fcc_269e_11eb_92a6_5254003913aflevel0_row8\" class=\"row_heading level0 row8\" >Gatherings_restrictions</th>\n",
        "                        <td id=\"T_186a9fcc_269e_11eb_92a6_5254003913afrow8_col0\" class=\"data row8 col0\" >-0.456292</td>\n",
        "                        <td id=\"T_186a9fcc_269e_11eb_92a6_5254003913afrow8_col1\" class=\"data row8 col1\" >0.088005</td>\n",
        "                        <td id=\"T_186a9fcc_269e_11eb_92a6_5254003913afrow8_col2\" class=\"data row8 col2\" >-0.189814</td>\n",
        "                        <td id=\"T_186a9fcc_269e_11eb_92a6_5254003913afrow8_col3\" class=\"data row8 col3\" >-0.664295</td>\n",
        "                        <td id=\"T_186a9fcc_269e_11eb_92a6_5254003913afrow8_col4\" class=\"data row8 col4\" >-0.066945</td>\n",
        "                        <td id=\"T_186a9fcc_269e_11eb_92a6_5254003913afrow8_col5\" class=\"data row8 col5\" >0.560129</td>\n",
        "                        <td id=\"T_186a9fcc_269e_11eb_92a6_5254003913afrow8_col6\" class=\"data row8 col6\" >0.605313</td>\n",
        "                        <td id=\"T_186a9fcc_269e_11eb_92a6_5254003913afrow8_col7\" class=\"data row8 col7\" >0.551510</td>\n",
        "                        <td id=\"T_186a9fcc_269e_11eb_92a6_5254003913afrow8_col8\" class=\"data row8 col8\" >1.000000</td>\n",
        "                        <td id=\"T_186a9fcc_269e_11eb_92a6_5254003913afrow8_col9\" class=\"data row8 col9\" >0.550351</td>\n",
        "                        <td id=\"T_186a9fcc_269e_11eb_92a6_5254003913afrow8_col10\" class=\"data row8 col10\" >0.550949</td>\n",
        "                        <td id=\"T_186a9fcc_269e_11eb_92a6_5254003913afrow8_col11\" class=\"data row8 col11\" >0.687224</td>\n",
        "                        <td id=\"T_186a9fcc_269e_11eb_92a6_5254003913afrow8_col12\" class=\"data row8 col12\" >0.683717</td>\n",
        "                        <td id=\"T_186a9fcc_269e_11eb_92a6_5254003913afrow8_col13\" class=\"data row8 col13\" >0.459191</td>\n",
        "                        <td id=\"T_186a9fcc_269e_11eb_92a6_5254003913afrow8_col14\" class=\"data row8 col14\" >0.321586</td>\n",
        "                        <td id=\"T_186a9fcc_269e_11eb_92a6_5254003913afrow8_col15\" class=\"data row8 col15\" >0.322755</td>\n",
        "                        <td id=\"T_186a9fcc_269e_11eb_92a6_5254003913afrow8_col16\" class=\"data row8 col16\" >0.712020</td>\n",
        "            </tr>\n",
        "            <tr>\n",
        "                        <th id=\"T_186a9fcc_269e_11eb_92a6_5254003913aflevel0_row9\" class=\"row_heading level0 row9\" >Transport_closing</th>\n",
        "                        <td id=\"T_186a9fcc_269e_11eb_92a6_5254003913afrow9_col0\" class=\"data row9 col0\" >-0.339582</td>\n",
        "                        <td id=\"T_186a9fcc_269e_11eb_92a6_5254003913afrow9_col1\" class=\"data row9 col1\" >-0.032993</td>\n",
        "                        <td id=\"T_186a9fcc_269e_11eb_92a6_5254003913afrow9_col2\" class=\"data row9 col2\" >-0.205657</td>\n",
        "                        <td id=\"T_186a9fcc_269e_11eb_92a6_5254003913afrow9_col3\" class=\"data row9 col3\" >-0.472696</td>\n",
        "                        <td id=\"T_186a9fcc_269e_11eb_92a6_5254003913afrow9_col4\" class=\"data row9 col4\" >0.086696</td>\n",
        "                        <td id=\"T_186a9fcc_269e_11eb_92a6_5254003913afrow9_col5\" class=\"data row9 col5\" >0.460997</td>\n",
        "                        <td id=\"T_186a9fcc_269e_11eb_92a6_5254003913afrow9_col6\" class=\"data row9 col6\" >0.479137</td>\n",
        "                        <td id=\"T_186a9fcc_269e_11eb_92a6_5254003913afrow9_col7\" class=\"data row9 col7\" >0.474057</td>\n",
        "                        <td id=\"T_186a9fcc_269e_11eb_92a6_5254003913afrow9_col8\" class=\"data row9 col8\" >0.550351</td>\n",
        "                        <td id=\"T_186a9fcc_269e_11eb_92a6_5254003913afrow9_col9\" class=\"data row9 col9\" >1.000000</td>\n",
        "                        <td id=\"T_186a9fcc_269e_11eb_92a6_5254003913afrow9_col10\" class=\"data row9 col10\" >0.512778</td>\n",
        "                        <td id=\"T_186a9fcc_269e_11eb_92a6_5254003913afrow9_col11\" class=\"data row9 col11\" >0.416308</td>\n",
        "                        <td id=\"T_186a9fcc_269e_11eb_92a6_5254003913afrow9_col12\" class=\"data row9 col12\" >0.553234</td>\n",
        "                        <td id=\"T_186a9fcc_269e_11eb_92a6_5254003913afrow9_col13\" class=\"data row9 col13\" >0.379476</td>\n",
        "                        <td id=\"T_186a9fcc_269e_11eb_92a6_5254003913afrow9_col14\" class=\"data row9 col14\" >0.328996</td>\n",
        "                        <td id=\"T_186a9fcc_269e_11eb_92a6_5254003913afrow9_col15\" class=\"data row9 col15\" >0.178365</td>\n",
        "                        <td id=\"T_186a9fcc_269e_11eb_92a6_5254003913afrow9_col16\" class=\"data row9 col16\" >0.552922</td>\n",
        "            </tr>\n",
        "            <tr>\n",
        "                        <th id=\"T_186a9fcc_269e_11eb_92a6_5254003913aflevel0_row10\" class=\"row_heading level0 row10\" >Stay_home_restrictions</th>\n",
        "                        <td id=\"T_186a9fcc_269e_11eb_92a6_5254003913afrow10_col0\" class=\"data row10 col0\" >-0.329069</td>\n",
        "                        <td id=\"T_186a9fcc_269e_11eb_92a6_5254003913afrow10_col1\" class=\"data row10 col1\" >0.031334</td>\n",
        "                        <td id=\"T_186a9fcc_269e_11eb_92a6_5254003913afrow10_col2\" class=\"data row10 col2\" >-0.139075</td>\n",
        "                        <td id=\"T_186a9fcc_269e_11eb_92a6_5254003913afrow10_col3\" class=\"data row10 col3\" >-0.355809</td>\n",
        "                        <td id=\"T_186a9fcc_269e_11eb_92a6_5254003913afrow10_col4\" class=\"data row10 col4\" >0.237318</td>\n",
        "                        <td id=\"T_186a9fcc_269e_11eb_92a6_5254003913afrow10_col5\" class=\"data row10 col5\" >0.637597</td>\n",
        "                        <td id=\"T_186a9fcc_269e_11eb_92a6_5254003913afrow10_col6\" class=\"data row10 col6\" >0.666866</td>\n",
        "                        <td id=\"T_186a9fcc_269e_11eb_92a6_5254003913afrow10_col7\" class=\"data row10 col7\" >0.567867</td>\n",
        "                        <td id=\"T_186a9fcc_269e_11eb_92a6_5254003913afrow10_col8\" class=\"data row10 col8\" >0.550949</td>\n",
        "                        <td id=\"T_186a9fcc_269e_11eb_92a6_5254003913afrow10_col9\" class=\"data row10 col9\" >0.512778</td>\n",
        "                        <td id=\"T_186a9fcc_269e_11eb_92a6_5254003913afrow10_col10\" class=\"data row10 col10\" >1.000000</td>\n",
        "                        <td id=\"T_186a9fcc_269e_11eb_92a6_5254003913afrow10_col11\" class=\"data row10 col11\" >0.477647</td>\n",
        "                        <td id=\"T_186a9fcc_269e_11eb_92a6_5254003913afrow10_col12\" class=\"data row10 col12\" >0.544707</td>\n",
        "                        <td id=\"T_186a9fcc_269e_11eb_92a6_5254003913afrow10_col13\" class=\"data row10 col13\" >0.355917</td>\n",
        "                        <td id=\"T_186a9fcc_269e_11eb_92a6_5254003913afrow10_col14\" class=\"data row10 col14\" >0.072566</td>\n",
        "                        <td id=\"T_186a9fcc_269e_11eb_92a6_5254003913afrow10_col15\" class=\"data row10 col15\" >0.115034</td>\n",
        "                        <td id=\"T_186a9fcc_269e_11eb_92a6_5254003913afrow10_col16\" class=\"data row10 col16\" >0.700948</td>\n",
        "            </tr>\n",
        "            <tr>\n",
        "                        <th id=\"T_186a9fcc_269e_11eb_92a6_5254003913aflevel0_row11\" class=\"row_heading level0 row11\" >Internal_movement_restrictions</th>\n",
        "                        <td id=\"T_186a9fcc_269e_11eb_92a6_5254003913afrow11_col0\" class=\"data row11 col0\" >-0.309353</td>\n",
        "                        <td id=\"T_186a9fcc_269e_11eb_92a6_5254003913afrow11_col1\" class=\"data row11 col1\" >0.053136</td>\n",
        "                        <td id=\"T_186a9fcc_269e_11eb_92a6_5254003913afrow11_col2\" class=\"data row11 col2\" >-0.102652</td>\n",
        "                        <td id=\"T_186a9fcc_269e_11eb_92a6_5254003913afrow11_col3\" class=\"data row11 col3\" >-0.457668</td>\n",
        "                        <td id=\"T_186a9fcc_269e_11eb_92a6_5254003913afrow11_col4\" class=\"data row11 col4\" >-0.206906</td>\n",
        "                        <td id=\"T_186a9fcc_269e_11eb_92a6_5254003913afrow11_col5\" class=\"data row11 col5\" >0.411909</td>\n",
        "                        <td id=\"T_186a9fcc_269e_11eb_92a6_5254003913afrow11_col6\" class=\"data row11 col6\" >0.351972</td>\n",
        "                        <td id=\"T_186a9fcc_269e_11eb_92a6_5254003913afrow11_col7\" class=\"data row11 col7\" >0.342309</td>\n",
        "                        <td id=\"T_186a9fcc_269e_11eb_92a6_5254003913afrow11_col8\" class=\"data row11 col8\" >0.687224</td>\n",
        "                        <td id=\"T_186a9fcc_269e_11eb_92a6_5254003913afrow11_col9\" class=\"data row11 col9\" >0.416308</td>\n",
        "                        <td id=\"T_186a9fcc_269e_11eb_92a6_5254003913afrow11_col10\" class=\"data row11 col10\" >0.477647</td>\n",
        "                        <td id=\"T_186a9fcc_269e_11eb_92a6_5254003913afrow11_col11\" class=\"data row11 col11\" >1.000000</td>\n",
        "                        <td id=\"T_186a9fcc_269e_11eb_92a6_5254003913afrow11_col12\" class=\"data row11 col12\" >0.456803</td>\n",
        "                        <td id=\"T_186a9fcc_269e_11eb_92a6_5254003913afrow11_col13\" class=\"data row11 col13\" >0.335023</td>\n",
        "                        <td id=\"T_186a9fcc_269e_11eb_92a6_5254003913afrow11_col14\" class=\"data row11 col14\" >0.132980</td>\n",
        "                        <td id=\"T_186a9fcc_269e_11eb_92a6_5254003913afrow11_col15\" class=\"data row11 col15\" >0.357179</td>\n",
        "                        <td id=\"T_186a9fcc_269e_11eb_92a6_5254003913afrow11_col16\" class=\"data row11 col16\" >0.527994</td>\n",
        "            </tr>\n",
        "            <tr>\n",
        "                        <th id=\"T_186a9fcc_269e_11eb_92a6_5254003913aflevel0_row12\" class=\"row_heading level0 row12\" >International_movement_restrictions</th>\n",
        "                        <td id=\"T_186a9fcc_269e_11eb_92a6_5254003913afrow12_col0\" class=\"data row12 col0\" >-0.432153</td>\n",
        "                        <td id=\"T_186a9fcc_269e_11eb_92a6_5254003913afrow12_col1\" class=\"data row12 col1\" >0.088705</td>\n",
        "                        <td id=\"T_186a9fcc_269e_11eb_92a6_5254003913afrow12_col2\" class=\"data row12 col2\" >-0.152666</td>\n",
        "                        <td id=\"T_186a9fcc_269e_11eb_92a6_5254003913afrow12_col3\" class=\"data row12 col3\" >-0.705672</td>\n",
        "                        <td id=\"T_186a9fcc_269e_11eb_92a6_5254003913afrow12_col4\" class=\"data row12 col4\" >-0.126469</td>\n",
        "                        <td id=\"T_186a9fcc_269e_11eb_92a6_5254003913afrow12_col5\" class=\"data row12 col5\" >0.641962</td>\n",
        "                        <td id=\"T_186a9fcc_269e_11eb_92a6_5254003913afrow12_col6\" class=\"data row12 col6\" >0.673117</td>\n",
        "                        <td id=\"T_186a9fcc_269e_11eb_92a6_5254003913afrow12_col7\" class=\"data row12 col7\" >0.651662</td>\n",
        "                        <td id=\"T_186a9fcc_269e_11eb_92a6_5254003913afrow12_col8\" class=\"data row12 col8\" >0.683717</td>\n",
        "                        <td id=\"T_186a9fcc_269e_11eb_92a6_5254003913afrow12_col9\" class=\"data row12 col9\" >0.553234</td>\n",
        "                        <td id=\"T_186a9fcc_269e_11eb_92a6_5254003913afrow12_col10\" class=\"data row12 col10\" >0.544707</td>\n",
        "                        <td id=\"T_186a9fcc_269e_11eb_92a6_5254003913afrow12_col11\" class=\"data row12 col11\" >0.456803</td>\n",
        "                        <td id=\"T_186a9fcc_269e_11eb_92a6_5254003913afrow12_col12\" class=\"data row12 col12\" >1.000000</td>\n",
        "                        <td id=\"T_186a9fcc_269e_11eb_92a6_5254003913afrow12_col13\" class=\"data row12 col13\" >0.557274</td>\n",
        "                        <td id=\"T_186a9fcc_269e_11eb_92a6_5254003913afrow12_col14\" class=\"data row12 col14\" >0.224509</td>\n",
        "                        <td id=\"T_186a9fcc_269e_11eb_92a6_5254003913afrow12_col15\" class=\"data row12 col15\" >0.164987</td>\n",
        "                        <td id=\"T_186a9fcc_269e_11eb_92a6_5254003913afrow12_col16\" class=\"data row12 col16\" >0.717971</td>\n",
        "            </tr>\n",
        "            <tr>\n",
        "                        <th id=\"T_186a9fcc_269e_11eb_92a6_5254003913aflevel0_row13\" class=\"row_heading level0 row13\" >Information_campaigns</th>\n",
        "                        <td id=\"T_186a9fcc_269e_11eb_92a6_5254003913afrow13_col0\" class=\"data row13 col0\" >0.035621</td>\n",
        "                        <td id=\"T_186a9fcc_269e_11eb_92a6_5254003913afrow13_col1\" class=\"data row13 col1\" >0.016723</td>\n",
        "                        <td id=\"T_186a9fcc_269e_11eb_92a6_5254003913afrow13_col2\" class=\"data row13 col2\" >-0.123051</td>\n",
        "                        <td id=\"T_186a9fcc_269e_11eb_92a6_5254003913afrow13_col3\" class=\"data row13 col3\" >-0.463231</td>\n",
        "                        <td id=\"T_186a9fcc_269e_11eb_92a6_5254003913afrow13_col4\" class=\"data row13 col4\" >0.017895</td>\n",
        "                        <td id=\"T_186a9fcc_269e_11eb_92a6_5254003913afrow13_col5\" class=\"data row13 col5\" >0.349046</td>\n",
        "                        <td id=\"T_186a9fcc_269e_11eb_92a6_5254003913afrow13_col6\" class=\"data row13 col6\" >0.375492</td>\n",
        "                        <td id=\"T_186a9fcc_269e_11eb_92a6_5254003913afrow13_col7\" class=\"data row13 col7\" >0.499262</td>\n",
        "                        <td id=\"T_186a9fcc_269e_11eb_92a6_5254003913afrow13_col8\" class=\"data row13 col8\" >0.459191</td>\n",
        "                        <td id=\"T_186a9fcc_269e_11eb_92a6_5254003913afrow13_col9\" class=\"data row13 col9\" >0.379476</td>\n",
        "                        <td id=\"T_186a9fcc_269e_11eb_92a6_5254003913afrow13_col10\" class=\"data row13 col10\" >0.355917</td>\n",
        "                        <td id=\"T_186a9fcc_269e_11eb_92a6_5254003913afrow13_col11\" class=\"data row13 col11\" >0.335023</td>\n",
        "                        <td id=\"T_186a9fcc_269e_11eb_92a6_5254003913afrow13_col12\" class=\"data row13 col12\" >0.557274</td>\n",
        "                        <td id=\"T_186a9fcc_269e_11eb_92a6_5254003913afrow13_col13\" class=\"data row13 col13\" >1.000000</td>\n",
        "                        <td id=\"T_186a9fcc_269e_11eb_92a6_5254003913afrow13_col14\" class=\"data row13 col14\" >0.437412</td>\n",
        "                        <td id=\"T_186a9fcc_269e_11eb_92a6_5254003913afrow13_col15\" class=\"data row13 col15\" >0.439157</td>\n",
        "                        <td id=\"T_186a9fcc_269e_11eb_92a6_5254003913afrow13_col16\" class=\"data row13 col16\" >0.508857</td>\n",
        "            </tr>\n",
        "            <tr>\n",
        "                        <th id=\"T_186a9fcc_269e_11eb_92a6_5254003913aflevel0_row14\" class=\"row_heading level0 row14\" >Testing_policy</th>\n",
        "                        <td id=\"T_186a9fcc_269e_11eb_92a6_5254003913afrow14_col0\" class=\"data row14 col0\" >-0.215348</td>\n",
        "                        <td id=\"T_186a9fcc_269e_11eb_92a6_5254003913afrow14_col1\" class=\"data row14 col1\" >-0.031905</td>\n",
        "                        <td id=\"T_186a9fcc_269e_11eb_92a6_5254003913afrow14_col2\" class=\"data row14 col2\" >-0.160703</td>\n",
        "                        <td id=\"T_186a9fcc_269e_11eb_92a6_5254003913afrow14_col3\" class=\"data row14 col3\" >-0.362534</td>\n",
        "                        <td id=\"T_186a9fcc_269e_11eb_92a6_5254003913afrow14_col4\" class=\"data row14 col4\" >0.208344</td>\n",
        "                        <td id=\"T_186a9fcc_269e_11eb_92a6_5254003913afrow14_col5\" class=\"data row14 col5\" >-0.222461</td>\n",
        "                        <td id=\"T_186a9fcc_269e_11eb_92a6_5254003913afrow14_col6\" class=\"data row14 col6\" >-0.128863</td>\n",
        "                        <td id=\"T_186a9fcc_269e_11eb_92a6_5254003913afrow14_col7\" class=\"data row14 col7\" >0.083054</td>\n",
        "                        <td id=\"T_186a9fcc_269e_11eb_92a6_5254003913afrow14_col8\" class=\"data row14 col8\" >0.321586</td>\n",
        "                        <td id=\"T_186a9fcc_269e_11eb_92a6_5254003913afrow14_col9\" class=\"data row14 col9\" >0.328996</td>\n",
        "                        <td id=\"T_186a9fcc_269e_11eb_92a6_5254003913afrow14_col10\" class=\"data row14 col10\" >0.072566</td>\n",
        "                        <td id=\"T_186a9fcc_269e_11eb_92a6_5254003913afrow14_col11\" class=\"data row14 col11\" >0.132980</td>\n",
        "                        <td id=\"T_186a9fcc_269e_11eb_92a6_5254003913afrow14_col12\" class=\"data row14 col12\" >0.224509</td>\n",
        "                        <td id=\"T_186a9fcc_269e_11eb_92a6_5254003913afrow14_col13\" class=\"data row14 col13\" >0.437412</td>\n",
        "                        <td id=\"T_186a9fcc_269e_11eb_92a6_5254003913afrow14_col14\" class=\"data row14 col14\" >1.000000</td>\n",
        "                        <td id=\"T_186a9fcc_269e_11eb_92a6_5254003913afrow14_col15\" class=\"data row14 col15\" >0.564021</td>\n",
        "                        <td id=\"T_186a9fcc_269e_11eb_92a6_5254003913afrow14_col16\" class=\"data row14 col16\" >-0.055671</td>\n",
        "            </tr>\n",
        "            <tr>\n",
        "                        <th id=\"T_186a9fcc_269e_11eb_92a6_5254003913aflevel0_row15\" class=\"row_heading level0 row15\" >Contact_tracing</th>\n",
        "                        <td id=\"T_186a9fcc_269e_11eb_92a6_5254003913afrow15_col0\" class=\"data row15 col0\" >-0.022455</td>\n",
        "                        <td id=\"T_186a9fcc_269e_11eb_92a6_5254003913afrow15_col1\" class=\"data row15 col1\" >-0.108128</td>\n",
        "                        <td id=\"T_186a9fcc_269e_11eb_92a6_5254003913afrow15_col2\" class=\"data row15 col2\" >-0.074504</td>\n",
        "                        <td id=\"T_186a9fcc_269e_11eb_92a6_5254003913afrow15_col3\" class=\"data row15 col3\" >-0.207249</td>\n",
        "                        <td id=\"T_186a9fcc_269e_11eb_92a6_5254003913afrow15_col4\" class=\"data row15 col4\" >0.283802</td>\n",
        "                        <td id=\"T_186a9fcc_269e_11eb_92a6_5254003913afrow15_col5\" class=\"data row15 col5\" >-0.207996</td>\n",
        "                        <td id=\"T_186a9fcc_269e_11eb_92a6_5254003913afrow15_col6\" class=\"data row15 col6\" >-0.182080</td>\n",
        "                        <td id=\"T_186a9fcc_269e_11eb_92a6_5254003913afrow15_col7\" class=\"data row15 col7\" >-0.021062</td>\n",
        "                        <td id=\"T_186a9fcc_269e_11eb_92a6_5254003913afrow15_col8\" class=\"data row15 col8\" >0.322755</td>\n",
        "                        <td id=\"T_186a9fcc_269e_11eb_92a6_5254003913afrow15_col9\" class=\"data row15 col9\" >0.178365</td>\n",
        "                        <td id=\"T_186a9fcc_269e_11eb_92a6_5254003913afrow15_col10\" class=\"data row15 col10\" >0.115034</td>\n",
        "                        <td id=\"T_186a9fcc_269e_11eb_92a6_5254003913afrow15_col11\" class=\"data row15 col11\" >0.357179</td>\n",
        "                        <td id=\"T_186a9fcc_269e_11eb_92a6_5254003913afrow15_col12\" class=\"data row15 col12\" >0.164987</td>\n",
        "                        <td id=\"T_186a9fcc_269e_11eb_92a6_5254003913afrow15_col13\" class=\"data row15 col13\" >0.439157</td>\n",
        "                        <td id=\"T_186a9fcc_269e_11eb_92a6_5254003913afrow15_col14\" class=\"data row15 col14\" >0.564021</td>\n",
        "                        <td id=\"T_186a9fcc_269e_11eb_92a6_5254003913afrow15_col15\" class=\"data row15 col15\" >1.000000</td>\n",
        "                        <td id=\"T_186a9fcc_269e_11eb_92a6_5254003913afrow15_col16\" class=\"data row15 col16\" >-0.029159</td>\n",
        "            </tr>\n",
        "            <tr>\n",
        "                        <th id=\"T_186a9fcc_269e_11eb_92a6_5254003913aflevel0_row16\" class=\"row_heading level0 row16\" >Stringency_index</th>\n",
        "                        <td id=\"T_186a9fcc_269e_11eb_92a6_5254003913afrow16_col0\" class=\"data row16 col0\" >-0.338772</td>\n",
        "                        <td id=\"T_186a9fcc_269e_11eb_92a6_5254003913afrow16_col1\" class=\"data row16 col1\" >0.113815</td>\n",
        "                        <td id=\"T_186a9fcc_269e_11eb_92a6_5254003913afrow16_col2\" class=\"data row16 col2\" >-0.152175</td>\n",
        "                        <td id=\"T_186a9fcc_269e_11eb_92a6_5254003913afrow16_col3\" class=\"data row16 col3\" >-0.509523</td>\n",
        "                        <td id=\"T_186a9fcc_269e_11eb_92a6_5254003913afrow16_col4\" class=\"data row16 col4\" >-0.093248</td>\n",
        "                        <td id=\"T_186a9fcc_269e_11eb_92a6_5254003913afrow16_col5\" class=\"data row16 col5\" >0.869810</td>\n",
        "                        <td id=\"T_186a9fcc_269e_11eb_92a6_5254003913afrow16_col6\" class=\"data row16 col6\" >0.851439</td>\n",
        "                        <td id=\"T_186a9fcc_269e_11eb_92a6_5254003913afrow16_col7\" class=\"data row16 col7\" >0.822180</td>\n",
        "                        <td id=\"T_186a9fcc_269e_11eb_92a6_5254003913afrow16_col8\" class=\"data row16 col8\" >0.712020</td>\n",
        "                        <td id=\"T_186a9fcc_269e_11eb_92a6_5254003913afrow16_col9\" class=\"data row16 col9\" >0.552922</td>\n",
        "                        <td id=\"T_186a9fcc_269e_11eb_92a6_5254003913afrow16_col10\" class=\"data row16 col10\" >0.700948</td>\n",
        "                        <td id=\"T_186a9fcc_269e_11eb_92a6_5254003913afrow16_col11\" class=\"data row16 col11\" >0.527994</td>\n",
        "                        <td id=\"T_186a9fcc_269e_11eb_92a6_5254003913afrow16_col12\" class=\"data row16 col12\" >0.717971</td>\n",
        "                        <td id=\"T_186a9fcc_269e_11eb_92a6_5254003913afrow16_col13\" class=\"data row16 col13\" >0.508857</td>\n",
        "                        <td id=\"T_186a9fcc_269e_11eb_92a6_5254003913afrow16_col14\" class=\"data row16 col14\" >-0.055671</td>\n",
        "                        <td id=\"T_186a9fcc_269e_11eb_92a6_5254003913afrow16_col15\" class=\"data row16 col15\" >-0.029159</td>\n",
        "                        <td id=\"T_186a9fcc_269e_11eb_92a6_5254003913afrow16_col16\" class=\"data row16 col16\" >1.000000</td>\n",
        "            </tr>\n",
        "    </tbody></table>"
       ],
       "output_type": "pyout",
       "prompt_number": 21,
       "text": [
        "<pandas.io.formats.style.Styler at 0x7fdde0ebbca0>"
       ]
      }
     ],
     "prompt_number": 21
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "# Scatter plot of Stringency index and Rt\n",
      "df = track_df.copy()\n",
      "sns.scatterplot(data=df, x=\"Stringency_index\", y=\"Rt\", hue=\"Country\", legend=\"brief\", marker=\"+\")\n",
      "bbox_to_anchor=(1.02, 0)\n",
      "bbox_loc=\"lower left\"\n",
      "plt.legend(bbox_to_anchor=bbox_to_anchor, loc=bbox_loc, borderaxespad=0)\n",
      "plt.title(\"Relationship of Stringency index and reproduction number\")\n",
      "plt.ylabel(\"Reproduction number\")\n",
      "plt.xlabel(\"Stringency index\")\n",
      "plt.show()"
     ],
     "language": "python",
     "metadata": {},
     "outputs": [
      {
       "output_type": "display_data",
       "png": "\n",
       "text": [
        "<Figure size 432x288 with 1 Axes>"
       ]
      }
     ],
     "prompt_number": 22
    }
   ],
   "metadata": {}
  }
 ]
}
