{
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3.8.2 64-bit ('.venv': venv)",
   "name": "python_defaultSpec_1597669925034"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.8.2-final"
  },
  "name": ""
 },
 "nbformat": 3,
 "nbformat_minor": 0,
 "worksheets": [
  {
   "cells": [
    {
     "cell_type": "markdown",
     "metadata": {},
     "source": [
      "# Usage (details: policy measures)\n",
      "Here, we will analyse the relationship of policy measures and parameter values of SIR-derived ODE models. Policy measures are tracked by [Oxford Covid-19 Government Response Tracker (OxCGRT)](https://github.com/OxCGRT/covid-policy-tracker)."
     ]
    },
    {
     "cell_type": "heading",
     "level": 2,
     "metadata": {},
     "source": [
      "Preparation"
     ]
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "# Standard users\n",
      "# !pip install covsirphy\n",
      "# Developers (Note: this notebook is in example directory)\n",
      "import os\n",
      "os.chdir(\"../\")"
     ],
     "language": "python",
     "metadata": {},
     "outputs": [],
     "prompt_number": 1
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "from pprint import pprint"
     ],
     "language": "python",
     "metadata": {},
     "outputs": [],
     "prompt_number": 2
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "import covsirphy as cs\n",
      "cs.__version__"
     ],
     "language": "python",
     "metadata": {},
     "outputs": [
      {
       "output_type": "pyout",
       "prompt_number": 3,
       "text": [
        "'2.8.3'"
       ]
      }
     ],
     "prompt_number": 3
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "# Standard users and developers\n",
      "data_loader = cs.DataLoader(\"input\")\n",
      "# The number of cases (JHU style)\n",
      "jhu_data = data_loader.jhu(verbose=False)\n",
      "# Population in each country\n",
      "population_data = data_loader.population(verbose=False)\n",
      "# Government Response Tracker (OxCGRT)\n",
      "oxcgrt_data = data_loader.oxcgrt(verbose=False)\n",
      "# Description/citation\n",
      "print(oxcgrt_data.citation)"
     ],
     "language": "python",
     "metadata": {
      "tags": []
     },
     "outputs": [
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "(Secondary source) Guidotti, E., Ardia, D., (2020), \"COVID-19 Data Hub\", Journal of Open Source Software 5(51):2376, doi: 10.21105/joss.02376.\n",
        "We can get Citation list of primary sources with DataLoader(...).covid19dh_citation"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      }
     ],
     "prompt_number": 4
    },
    {
     "cell_type": "markdown",
     "metadata": {},
     "source": [
      "## Class for policy measure analysis\n",
      "We will `PolicyMeasures` class to find relationship of policy measures and parameter values of SIR-derived ODE models."
     ]
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "# Create analyser with tau value 360 [min] (can be changed)\n",
      "analyser = cs.PolicyMeasures(jhu_data, population_data, oxcgrt_data, tau=360)\n",
      "# The number of registerd countries\n",
      "len(analyser.countries)"
     ],
     "language": "python",
     "metadata": {
      "tags": []
     },
     "outputs": [
      {
       "output_type": "pyout",
       "prompt_number": 5,
       "text": [
        "184"
       ]
      }
     ],
     "prompt_number": 5
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "# We can get Scenario instance for detailed scenario analysis\n",
      "type(analyser.scenario(\"Japan\"))"
     ],
     "language": "python",
     "metadata": {},
     "outputs": [
      {
       "output_type": "pyout",
       "prompt_number": 6,
       "text": [
        "covsirphy.analysis.scenario.Scenario"
       ]
      }
     ],
     "prompt_number": 6
    },
    {
     "cell_type": "markdown",
     "metadata": {},
     "source": [
      "## Set phases with S-R trend analysis\n",
      "We will perform S-R trend analysis to set phases in all countries. Countries which do not have **12th phases** will be un-registered for the next analysis. This number will be adjusted for your analysis."
     ]
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "# Show the number of phases of all countries\n",
      "analyser.trend()\n",
      "pprint(analyser.phase_len(), compact=True)"
     ],
     "language": "python",
     "metadata": {},
     "outputs": [
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "{"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "4"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ": "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "['Tunisia', 'Myanmar', 'Tanzania']"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        " "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "5"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ": "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "["
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Trinidad and Tobago'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Grenada'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Libya'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Jordan'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Papua New Guinea'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        "     "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Antigua and Barbuda'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Fiji'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Belize'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Brunei'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Jamaica'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Mauritius'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        "     "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Dominica'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "]"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        " "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "6"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ": "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "["
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Lebanon'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Vietnam'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Burundi'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Yemen'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Lesotho'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Cambodia'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        "     "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Seychelles'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Namibia'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Kyrgyzstan'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Uganda'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        "     "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Central African Republic'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Monaco'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Sao Tome and Principe'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        "     "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Equatorial Guinea'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Ireland'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Bahamas'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Kosovo'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "]"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        " "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "7"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ": "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "["
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Zimbabwe'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Liechtenstein'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Comoros'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Syria'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Guinea-Bissau'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Taiwan'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        "     "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Gambia'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Montenegro'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'New Zealand'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Kazakhstan'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Slovakia'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        "     "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Australia'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Malawi'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Botswana'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Ethiopia'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Paraguay'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Netherlands'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        "     "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Guyana'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Iceland'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Philippines'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Mongolia'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        "     "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Saint Vincent and the Grenadines'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Cyprus'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'South Sudan'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Zambia'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        "     "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'San Marino'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Norway'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Croatia'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Eritrea'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Rwanda'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Spain'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        "     "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Colombia'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Malta'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Costa Rica'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Venezuela'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "]"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        " "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "8"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ": "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "["
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'India'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Suriname'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Ghana'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Argentina'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Guatemala'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Qatar'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        "     "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Saint Lucia'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Bhutan'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Sri Lanka'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Korea, South'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Madagascar'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        "     "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Angola'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Nicaragua'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Morocco'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Andorra'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Greece'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Nepal'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        "     "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Czech Republic'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Israel'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Mozambique'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Sudan'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Thailand'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Maldives'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        "     "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Niger'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Djibouti'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Benin'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Ukraine'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Barbados'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Kenya'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        "     "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Afghanistan'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Slovenia'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "]"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        " "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "9"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ": "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "["
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Belarus'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Swaziland'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'China'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'South Africa'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Ecuador'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Tajikistan'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        "     "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Oman'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Palestine'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Albania'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Luxembourg'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Indonesia'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Japan'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        "     "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Cameroon'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Hungary'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Germany'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Somalia'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Bermuda'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Uruguay'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Congo'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        "     "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Iraq'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Mauritania'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Gabon'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Haiti'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Romania'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Chad'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'El Salvador'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        "     "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Georgia'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "]"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        " "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "10"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ": "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "["
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Serbia'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Cape Verde'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Austria'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Switzerland'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Denmark'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Armenia'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        "      "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Lithuania'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Sierra Leone'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Mali'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Canada'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Panama'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Pakistan'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        "      "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Moldova'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Uzbekistan'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Malaysia'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Algeria'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Chile'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        "      "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Bosnia and Herzegovina'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Senegal'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Liberia'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Azerbaijan'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Finland'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        "      "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Cuba'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Belgium'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Togo'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Singapore'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Honduras'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Bangladesh'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        "      "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Saudi Arabia'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "]"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        " "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "11"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ": "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "["
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Egypt'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Turkey'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Dominican Republic'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Mexico'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Poland'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Nigeria'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        "      "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Kuwait'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Bulgaria'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Latvia'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Peru'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Estonia'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Macedonia'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        "      "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Guinea'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "]"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        " "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "12"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ": "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "["
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Bahrain'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Brazil'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Portugal'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Iran'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Bolivia'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'United States'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        "      "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Burkina Faso'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Italy'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'United Arab Emirates'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'France'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "]"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        " "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "13"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ": "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "['Russia']"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "}"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      }
     ],
     "prompt_number": 7
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "# Set phases with S-R trend analysis\n",
      "analyser.trend(min_len=12)\n",
      "# The number of countries\n",
      "len(analyser.countries)"
     ],
     "language": "python",
     "metadata": {},
     "outputs": [
      {
       "output_type": "pyout",
       "prompt_number": 8,
       "text": [
        "11"
       ]
      }
     ],
     "prompt_number": 8
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "phase_len_dict = analyser.phase_len()\n",
      "pprint(phase_len_dict, compact=True)"
     ],
     "language": "python",
     "metadata": {
      "tags": []
     },
     "outputs": [
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "{"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "12"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ": "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "["
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Bahrain'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Brazil'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Portugal'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Iran'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Bolivia'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'United States'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        "      "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Burkina Faso'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Italy'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'United Arab Emirates'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'France'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "]"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        " "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "13"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ": "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "['Russia']"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "}"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      }
     ],
     "prompt_number": 9
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "# Here, only show the countries which have the most phases\n",
      "countries_show = max(phase_len_dict.items(), key=lambda x: x[0])[1]\n",
      "# Show summary\n",
      "analyser.summary(countries=countries_show)"
     ],
     "language": "python",
     "metadata": {
      "tags": []
     },
     "outputs": [
      {
       "html": [
        "<div>\n",
        "<style scoped>\n",
        "    .dataframe tbody tr th:only-of-type {\n",
        "        vertical-align: middle;\n",
        "    }\n",
        "\n",
        "    .dataframe tbody tr th {\n",
        "        vertical-align: top;\n",
        "    }\n",
        "\n",
        "    .dataframe thead th {\n",
        "        text-align: right;\n",
        "    }\n",
        "</style>\n",
        "<table border=\"1\" class=\"dataframe\">\n",
        "  <thead>\n",
        "    <tr style=\"text-align: right;\">\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th>Type</th>\n",
        "      <th>Start</th>\n",
        "      <th>End</th>\n",
        "      <th>Population</th>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>Country</th>\n",
        "      <th>Phase</th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "    </tr>\n",
        "  </thead>\n",
        "  <tbody>\n",
        "    <tr>\n",
        "      <th rowspan=\"13\" valign=\"top\">Russia</th>\n",
        "      <th>0th</th>\n",
        "      <td>Past</td>\n",
        "      <td>12Feb2020</td>\n",
        "      <td>06May2020</td>\n",
        "      <td>330457362</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>1st</th>\n",
        "      <td>Past</td>\n",
        "      <td>07May2020</td>\n",
        "      <td>16May2020</td>\n",
        "      <td>330457362</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>2nd</th>\n",
        "      <td>Past</td>\n",
        "      <td>17May2020</td>\n",
        "      <td>26May2020</td>\n",
        "      <td>330457362</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>3rd</th>\n",
        "      <td>Past</td>\n",
        "      <td>27May2020</td>\n",
        "      <td>04Jun2020</td>\n",
        "      <td>330457362</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>4th</th>\n",
        "      <td>Past</td>\n",
        "      <td>05Jun2020</td>\n",
        "      <td>13Jun2020</td>\n",
        "      <td>330457362</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>5th</th>\n",
        "      <td>Past</td>\n",
        "      <td>14Jun2020</td>\n",
        "      <td>23Jun2020</td>\n",
        "      <td>330457362</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>6th</th>\n",
        "      <td>Past</td>\n",
        "      <td>24Jun2020</td>\n",
        "      <td>04Jul2020</td>\n",
        "      <td>330457362</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>7th</th>\n",
        "      <td>Past</td>\n",
        "      <td>05Jul2020</td>\n",
        "      <td>17Jul2020</td>\n",
        "      <td>330457362</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>8th</th>\n",
        "      <td>Past</td>\n",
        "      <td>18Jul2020</td>\n",
        "      <td>31Jul2020</td>\n",
        "      <td>330457362</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>9th</th>\n",
        "      <td>Past</td>\n",
        "      <td>01Aug2020</td>\n",
        "      <td>14Aug2020</td>\n",
        "      <td>330457362</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>10th</th>\n",
        "      <td>Past</td>\n",
        "      <td>15Aug2020</td>\n",
        "      <td>29Aug2020</td>\n",
        "      <td>330457362</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>11th</th>\n",
        "      <td>Past</td>\n",
        "      <td>30Aug2020</td>\n",
        "      <td>12Sep2020</td>\n",
        "      <td>330457362</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>12th</th>\n",
        "      <td>Past</td>\n",
        "      <td>13Sep2020</td>\n",
        "      <td>28Sep2020</td>\n",
        "      <td>330457362</td>\n",
        "    </tr>\n",
        "  </tbody>\n",
        "</table>\n",
        "</div>"
       ],
       "output_type": "pyout",
       "prompt_number": 10,
       "text": [
        "               Type      Start        End  Population\n",
        "Country Phase                                        \n",
        "Russia  0th    Past  12Feb2020  06May2020   330457362\n",
        "        1st    Past  07May2020  16May2020   330457362\n",
        "        2nd    Past  17May2020  26May2020   330457362\n",
        "        3rd    Past  27May2020  04Jun2020   330457362\n",
        "        4th    Past  05Jun2020  13Jun2020   330457362\n",
        "        5th    Past  14Jun2020  23Jun2020   330457362\n",
        "        6th    Past  24Jun2020  04Jul2020   330457362\n",
        "        7th    Past  05Jul2020  17Jul2020   330457362\n",
        "        8th    Past  18Jul2020  31Jul2020   330457362\n",
        "        9th    Past  01Aug2020  14Aug2020   330457362\n",
        "        10th   Past  15Aug2020  29Aug2020   330457362\n",
        "        11th   Past  30Aug2020  12Sep2020   330457362\n",
        "        12th   Past  13Sep2020  28Sep2020   330457362"
       ]
      }
     ],
     "prompt_number": 10
    },
    {
     "cell_type": "markdown",
     "metadata": {},
     "source": [
      "## Parameter estimation\n",
      "we will estimate the parameter values with SIR-derived ODE models in each country."
     ]
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "# Parameter estimation with SIR-F model\n",
      "analyser.estimate(cs.SIRF)"
     ],
     "language": "python",
     "metadata": {
      "tags": []
     },
     "outputs": [
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n",
        "<SIR-F model: parameter estimation>"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "Running optimization with 4 CPUs..."
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tBHR, 11th phase (17Sep2020 - 28Sep2020): finished  436 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tBRA,  1st phase (27May2020 - 13Jun2020): finished 1630 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tPRT,  5th phase (25Jun2020 - 07Jul2020): finished 1616 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tBOL,  1st phase (14Jun2020 - 25Jun2020): finished 1622 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tPRT,  8th phase (08Aug2020 - 25Aug2020): finished 1549 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tBOL,  4th phase (16Jul2020 - 23Jul2020): finished  271 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tARE,  4th phase (06Jun2020 - 19Jun2020): finished 1024 trials in 0 min 40 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tIRN,  6th phase (30Jun2020 - 13Jul2020): finished  210 trials in 0 min  5 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tBOL,  0th phase (01Apr2020 - 13Jun2020): finished 1441 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tUSA,  3rd phase (06Jun2020 - 25Jun2020): finished 1485 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tITA,  3rd phase (09Apr2020 - 18Apr2020): finished  453 trials in 0 min 15 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tPRT,  7th phase (21Jul2020 - 07Aug2020): finished 1487 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tBRA,  9th phase (25Aug2020 - 02Sep2020): finished  330 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tITA,  9th phase (30Jul2020 - 27Aug2020): finished 1499 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tARE,  1st phase (27Apr2020 - 13May2020): finished 1479 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tFRA,  7th phase (25Jun2020 - 23Jul2020): finished 1097 trials in 0 min 40 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tRUS,  1st phase (07May2020 - 16May2020): finished 1511 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tBFA,  8th phase (15Aug2020 - 02Sep2020): finished  308 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tBOL, 11th phase (12Sep2020 - 28Sep2020): finished  186 trials in 0 min  5 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tBFA,  5th phase (21May2020 - 26Jun2020): finished 1443 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tUSA,  2nd phase (12May2020 - 05Jun2020): finished 1436 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tPRT,  1st phase (28Apr2020 - 14May2020): finished 1427 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tBFA, 10th phase (12Sep2020 - 19Sep2020): finished 1443 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tBOL,  2nd phase (26Jun2020 - 05Jul2020): finished  316 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tPRT,  2nd phase (15May2020 - 30May2020): finished 1410 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tUSA,  7th phase (28Jul2020 - 07Aug2020): finished  456 trials in 0 min 15 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tRUS, 10th phase (15Aug2020 - 29Aug2020): finished 1424 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tARE,  3rd phase (25May2020 - 05Jun2020): finished 1441 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tUSA,  9th phase (19Aug2020 - 31Aug2020): finished  571 trials in 0 min 20 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tBHR,  8th phase (11Aug2020 - 24Aug2020): finished 1448 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tBRA, 10th phase (03Sep2020 - 14Sep2020): finished 1431 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tUSA,  0th phase (09Feb2020 - 19Apr2020): finished 1395 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tITA, 10th phase (28Aug2020 - 13Sep2020): finished  307 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tFRA,  2nd phase (03Apr2020 - 12Apr2020): finished 1395 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tPRT,  6th phase (08Jul2020 - 20Jul2020): finished 1377 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tBFA,  4th phase (05May2020 - 20May2020): finished 1328 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tBFA, 11th phase (20Sep2020 - 28Sep2020): finished 1325 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tPRT,  3rd phase (31May2020 - 12Jun2020): finished 1361 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tPRT,  4th phase (13Jun2020 - 24Jun2020): finished 1382 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tBHR,  3rd phase (14Jun2020 - 24Jun2020): finished 1413 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tBRA,  8th phase (14Aug2020 - 24Aug2020): finished 1413 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tRUS,  5th phase (14Jun2020 - 23Jun2020): finished 1405 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tBFA,  1st phase (01Apr2020 - 09Apr2020): finished 1391 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tBRA,  4th phase (09Jul2020 - 20Jul2020): finished  441 trials in 0 min 15 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tRUS,  0th phase (12Feb2020 - 06May2020): finished 1338 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tRUS, 12th phase (13Sep2020 - 28Sep2020): finished 1295 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tARE,  5th phase (20Jun2020 - 03Jul2020): finished  980 trials in 0 min 45 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tFRA,  8th phase (24Jul2020 - 13Aug2020): finished 1268 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tBHR,  7th phase (28Jul2020 - 10Aug2020): finished  432 trials in 0 min 15 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tRUS,  3rd phase (27May2020 - 04Jun2020): finished 1262 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tRUS,  6th phase (24Jun2020 - 04Jul2020): finished 1321 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tFRA,  6th phase (27May2020 - 24Jun2020): finished 1219 trials in 0 min 50 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tPRT, 10th phase (08Sep2020 - 16Sep2020): finished 1409 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tRUS, 11th phase (30Aug2020 - 12Sep2020): finished 1412 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tIRN,  2nd phase (18Apr2020 - 13May2020): finished  289 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tIRN, 10th phase (28Aug2020 - 14Sep2020): finished 1422 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tBRA, 11th phase (15Sep2020 - 28Sep2020): finished 1419 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tRUS,  7th phase (05Jul2020 - 17Jul2020): finished 1399 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tBRA,  5th phase (21Jul2020 - 28Jul2020): finished 1396 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tPRT,  9th phase (26Aug2020 - 07Sep2020): finished 1383 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tUSA,  8th phase (08Aug2020 - 18Aug2020): finished  715 trials in 0 min 25 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tBHR,  4th phase (25Jun2020 - 05Jul2020): finished  818 trials in 0 min 30 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tIRN,  7th phase (14Jul2020 - 27Jul2020): finished  313 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tBHR,  1st phase (11May2020 - 01Jun2020): finished 1389 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tITA,  6th phase (10May2020 - 21May2020): finished  453 trials in 0 min 15 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tITA,  2nd phase (29Mar2020 - 08Apr2020): finished 1336 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tFRA,  3rd phase (13Apr2020 - 21Apr2020): finished 1356 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tFRA,  9th phase (14Aug2020 - 31Aug2020): finished  566 trials in 0 min 20 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tBOL,  6th phase (01Aug2020 - 09Aug2020): finished  167 trials in 0 min  5 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tARE,  9th phase (02Sep2020 - 10Sep2020): finished 1353 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tRUS,  9th phase (01Aug2020 - 14Aug2020): finished 1339 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tBHR,  6th phase (15Jul2020 - 27Jul2020): finished  692 trials in 0 min 25 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tBRA,  0th phase (16Mar2020 - 26May2020): finished 1372 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tBFA,  7th phase (29Jul2020 - 14Aug2020): finished 1428 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tBRA,  3rd phase (27Jun2020 - 08Jul2020): finished 1433 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tBOL,  5th phase (24Jul2020 - 31Jul2020): finished  579 trials in 0 min 20 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tPRT,  0th phase (14Mar2020 - 27Apr2020): finished 1370 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tBOL,  9th phase (26Aug2020 - 02Sep2020): finished  188 trials in 0 min  5 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tITA,  8th phase (14Jun2020 - 29Jul2020): finished  815 trials in 0 min 30 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tFRA,  5th phase (05May2020 - 26May2020): finished 1427 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tUSA,  1st phase (20Apr2020 - 11May2020): finished 1469 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tBFA,  2nd phase (10Apr2020 - 19Apr2020): finished 1440 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tITA,  5th phase (01May2020 - 09May2020): finished  607 trials in 0 min 20 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tFRA,  1st phase (24Mar2020 - 02Apr2020): finished 1424 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tITA,  0th phase (24Feb2020 - 20Mar2020): finished 1401 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tUSA,  5th phase (08Jul2020 - 17Jul2020): finished  317 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tITA,  1st phase (21Mar2020 - 28Mar2020): finished 1425 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tBRA,  6th phase (29Jul2020 - 05Aug2020): finished 1201 trials in 0 min 50 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tUSA, 10th phase (01Sep2020 - 13Sep2020): finished 1402 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tBHR,  0th phase (06Mar2020 - 10May2020): finished 1315 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tITA,  4th phase (19Apr2020 - 30Apr2020): finished 1351 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tFRA,  0th phase (12Feb2020 - 23Mar2020): finished 1323 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tITA,  7th phase (22May2020 - 13Jun2020): finished  442 trials in 0 min 15 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tBHR, 10th phase (07Sep2020 - 16Sep2020): finished  166 trials in 0 min  5 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tIRN,  5th phase (16Jun2020 - 29Jun2020): finished 1345 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tBHR,  9th phase (25Aug2020 - 06Sep2020): finished 1364 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tRUS,  8th phase (18Jul2020 - 31Jul2020): finished 1277 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tIRN,  0th phase (26Feb2020 - 29Mar2020): finished 1292 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tBOL, 10th phase (03Sep2020 - 11Sep2020): finished  696 trials in 0 min 25 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tBRA,  2nd phase (14Jun2020 - 26Jun2020): finished 1121 trials in 0 min 50 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tBOL,  7th phase (10Aug2020 - 17Aug2020): finished  322 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tUSA,  6th phase (18Jul2020 - 27Jul2020): finished  306 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tUSA,  4th phase (26Jun2020 - 07Jul2020): finished 1317 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tARE,  2nd phase (14May2020 - 24May2020): finished 1351 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tARE,  6th phase (04Jul2020 - 20Jul2020): finished 1401 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tIRN,  4th phase (01Jun2020 - 15Jun2020): finished 1370 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tBOL,  3rd phase (06Jul2020 - 15Jul2020): finished 1458 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tUSA, 11th phase (14Sep2020 - 28Sep2020): finished  677 trials in 0 min 20 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tIRN,  8th phase (28Jul2020 - 11Aug2020): finished  659 trials in 0 min 20 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tRUS,  2nd phase (17May2020 - 26May2020): finished 1424 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tBFA,  0th phase (21Mar2020 - 31Mar2020): finished 1439 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tFRA,  4th phase (22Apr2020 - 04May2020): finished 1427 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tBOL,  8th phase (18Aug2020 - 25Aug2020): finished  566 trials in 0 min 20 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tBHR,  5th phase (06Jul2020 - 14Jul2020): finished 1437 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tBFA,  6th phase (27Jun2020 - 28Jul2020): finished 1402 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tARE,  0th phase (12Feb2020 - 26Apr2020): finished 1352 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tARE, 10th phase (11Sep2020 - 19Sep2020): finished  693 trials in 0 min 25 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tARE,  8th phase (16Aug2020 - 01Sep2020): finished  566 trials in 0 min 20 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tARE,  7th phase (21Jul2020 - 15Aug2020): finished 1001 trials in 0 min 40 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tIRN,  9th phase (12Aug2020 - 27Aug2020): finished  575 trials in 0 min 20 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tBHR,  2nd phase (02Jun2020 - 13Jun2020): finished 1401 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tBFA,  3rd phase (20Apr2020 - 04May2020): finished 1433 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tBRA,  7th phase (06Aug2020 - 13Aug2020): finished  445 trials in 0 min 15 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tIRN,  1st phase (30Mar2020 - 17Apr2020): finished 1500 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tRUS,  4th phase (05Jun2020 - 13Jun2020): finished 1626 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tIRN,  3rd phase (14May2020 - 31May2020): finished  414 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "Completed optimization. Total: 26 min 37 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      }
     ],
     "prompt_number": 11
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "# Show summary\n",
      "analyser.summary(countries=countries_show)"
     ],
     "language": "python",
     "metadata": {},
     "outputs": [
      {
       "html": [
        "<div>\n",
        "<style scoped>\n",
        "    .dataframe tbody tr th:only-of-type {\n",
        "        vertical-align: middle;\n",
        "    }\n",
        "\n",
        "    .dataframe tbody tr th {\n",
        "        vertical-align: top;\n",
        "    }\n",
        "\n",
        "    .dataframe thead th {\n",
        "        text-align: right;\n",
        "    }\n",
        "</style>\n",
        "<table border=\"1\" class=\"dataframe\">\n",
        "  <thead>\n",
        "    <tr style=\"text-align: right;\">\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th>Type</th>\n",
        "      <th>Start</th>\n",
        "      <th>End</th>\n",
        "      <th>Population</th>\n",
        "      <th>ODE</th>\n",
        "      <th>Rt</th>\n",
        "      <th>theta</th>\n",
        "      <th>kappa</th>\n",
        "      <th>rho</th>\n",
        "      <th>sigma</th>\n",
        "      <th>tau</th>\n",
        "      <th>alpha1 [-]</th>\n",
        "      <th>1/gamma [day]</th>\n",
        "      <th>1/beta [day]</th>\n",
        "      <th>1/alpha2 [day]</th>\n",
        "      <th>RMSLE</th>\n",
        "      <th>Trials</th>\n",
        "      <th>Runtime</th>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>Country</th>\n",
        "      <th>Phase</th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "    </tr>\n",
        "  </thead>\n",
        "  <tbody>\n",
        "    <tr>\n",
        "      <th rowspan=\"13\" valign=\"top\">Russia</th>\n",
        "      <th>0th</th>\n",
        "      <td>Past</td>\n",
        "      <td>12Feb2020</td>\n",
        "      <td>06May2020</td>\n",
        "      <td>330457362</td>\n",
        "      <td>SIR-F</td>\n",
        "      <td>0.02</td>\n",
        "      <td>0.602763</td>\n",
        "      <td>0.544883</td>\n",
        "      <td>0.034081</td>\n",
        "      <td>0.002299</td>\n",
        "      <td>360</td>\n",
        "      <td>0.603</td>\n",
        "      <td>108</td>\n",
        "      <td>7</td>\n",
        "      <td>0</td>\n",
        "      <td>18.966727</td>\n",
        "      <td>1338</td>\n",
        "      <td>1 min  0 sec</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>1st</th>\n",
        "      <td>Past</td>\n",
        "      <td>07May2020</td>\n",
        "      <td>16May2020</td>\n",
        "      <td>330457362</td>\n",
        "      <td>SIR-F</td>\n",
        "      <td>2.51</td>\n",
        "      <td>0.000729</td>\n",
        "      <td>0.000120</td>\n",
        "      <td>0.012958</td>\n",
        "      <td>0.005045</td>\n",
        "      <td>360</td>\n",
        "      <td>0.001</td>\n",
        "      <td>49</td>\n",
        "      <td>19</td>\n",
        "      <td>2088</td>\n",
        "      <td>0.074230</td>\n",
        "      <td>1511</td>\n",
        "      <td>1 min  0 sec</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>2nd</th>\n",
        "      <td>Past</td>\n",
        "      <td>17May2020</td>\n",
        "      <td>26May2020</td>\n",
        "      <td>330457362</td>\n",
        "      <td>SIR-F</td>\n",
        "      <td>1.59</td>\n",
        "      <td>0.000438</td>\n",
        "      <td>0.000098</td>\n",
        "      <td>0.007034</td>\n",
        "      <td>0.004313</td>\n",
        "      <td>360</td>\n",
        "      <td>0.000</td>\n",
        "      <td>57</td>\n",
        "      <td>35</td>\n",
        "      <td>2549</td>\n",
        "      <td>0.086918</td>\n",
        "      <td>1424</td>\n",
        "      <td>1 min  0 sec</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>3rd</th>\n",
        "      <td>Past</td>\n",
        "      <td>27May2020</td>\n",
        "      <td>04Jun2020</td>\n",
        "      <td>330457362</td>\n",
        "      <td>SIR-F</td>\n",
        "      <td>1.03</td>\n",
        "      <td>0.000708</td>\n",
        "      <td>0.000117</td>\n",
        "      <td>0.005479</td>\n",
        "      <td>0.005196</td>\n",
        "      <td>360</td>\n",
        "      <td>0.001</td>\n",
        "      <td>48</td>\n",
        "      <td>45</td>\n",
        "      <td>2144</td>\n",
        "      <td>0.067224</td>\n",
        "      <td>1262</td>\n",
        "      <td>1 min  0 sec</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>4th</th>\n",
        "      <td>Past</td>\n",
        "      <td>05Jun2020</td>\n",
        "      <td>13Jun2020</td>\n",
        "      <td>330457362</td>\n",
        "      <td>SIR-F</td>\n",
        "      <td>1.25</td>\n",
        "      <td>0.000825</td>\n",
        "      <td>0.000085</td>\n",
        "      <td>0.004647</td>\n",
        "      <td>0.003623</td>\n",
        "      <td>360</td>\n",
        "      <td>0.001</td>\n",
        "      <td>69</td>\n",
        "      <td>53</td>\n",
        "      <td>2957</td>\n",
        "      <td>0.048345</td>\n",
        "      <td>1626</td>\n",
        "      <td>1 min  0 sec</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>5th</th>\n",
        "      <td>Past</td>\n",
        "      <td>14Jun2020</td>\n",
        "      <td>23Jun2020</td>\n",
        "      <td>330457362</td>\n",
        "      <td>SIR-F</td>\n",
        "      <td>0.82</td>\n",
        "      <td>0.000348</td>\n",
        "      <td>0.000079</td>\n",
        "      <td>0.003467</td>\n",
        "      <td>0.004138</td>\n",
        "      <td>360</td>\n",
        "      <td>0.000</td>\n",
        "      <td>60</td>\n",
        "      <td>72</td>\n",
        "      <td>3162</td>\n",
        "      <td>0.063847</td>\n",
        "      <td>1405</td>\n",
        "      <td>1 min  0 sec</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>6th</th>\n",
        "      <td>Past</td>\n",
        "      <td>24Jun2020</td>\n",
        "      <td>04Jul2020</td>\n",
        "      <td>330457362</td>\n",
        "      <td>SIR-F</td>\n",
        "      <td>0.94</td>\n",
        "      <td>0.018868</td>\n",
        "      <td>0.000011</td>\n",
        "      <td>0.002568</td>\n",
        "      <td>0.002671</td>\n",
        "      <td>360</td>\n",
        "      <td>0.019</td>\n",
        "      <td>93</td>\n",
        "      <td>97</td>\n",
        "      <td>22612</td>\n",
        "      <td>0.050093</td>\n",
        "      <td>1321</td>\n",
        "      <td>1 min  0 sec</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>7th</th>\n",
        "      <td>Past</td>\n",
        "      <td>05Jul2020</td>\n",
        "      <td>17Jul2020</td>\n",
        "      <td>330457362</td>\n",
        "      <td>SIR-F</td>\n",
        "      <td>0.70</td>\n",
        "      <td>0.027689</td>\n",
        "      <td>0.000010</td>\n",
        "      <td>0.002198</td>\n",
        "      <td>0.003027</td>\n",
        "      <td>360</td>\n",
        "      <td>0.028</td>\n",
        "      <td>82</td>\n",
        "      <td>113</td>\n",
        "      <td>25081</td>\n",
        "      <td>0.072559</td>\n",
        "      <td>1399</td>\n",
        "      <td>1 min  0 sec</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>8th</th>\n",
        "      <td>Past</td>\n",
        "      <td>18Jul2020</td>\n",
        "      <td>31Jul2020</td>\n",
        "      <td>330457362</td>\n",
        "      <td>SIR-F</td>\n",
        "      <td>0.76</td>\n",
        "      <td>0.000031</td>\n",
        "      <td>0.000041</td>\n",
        "      <td>0.001834</td>\n",
        "      <td>0.002377</td>\n",
        "      <td>360</td>\n",
        "      <td>0.000</td>\n",
        "      <td>105</td>\n",
        "      <td>136</td>\n",
        "      <td>6131</td>\n",
        "      <td>0.060525</td>\n",
        "      <td>1277</td>\n",
        "      <td>1 min  0 sec</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>9th</th>\n",
        "      <td>Past</td>\n",
        "      <td>01Aug2020</td>\n",
        "      <td>14Aug2020</td>\n",
        "      <td>330457362</td>\n",
        "      <td>SIR-F</td>\n",
        "      <td>0.76</td>\n",
        "      <td>0.001416</td>\n",
        "      <td>0.000031</td>\n",
        "      <td>0.001468</td>\n",
        "      <td>0.001889</td>\n",
        "      <td>360</td>\n",
        "      <td>0.001</td>\n",
        "      <td>132</td>\n",
        "      <td>170</td>\n",
        "      <td>7999</td>\n",
        "      <td>0.048987</td>\n",
        "      <td>1339</td>\n",
        "      <td>1 min  0 sec</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>10th</th>\n",
        "      <td>Past</td>\n",
        "      <td>15Aug2020</td>\n",
        "      <td>29Aug2020</td>\n",
        "      <td>330457362</td>\n",
        "      <td>SIR-F</td>\n",
        "      <td>0.80</td>\n",
        "      <td>0.029031</td>\n",
        "      <td>0.000011</td>\n",
        "      <td>0.001239</td>\n",
        "      <td>0.001501</td>\n",
        "      <td>360</td>\n",
        "      <td>0.029</td>\n",
        "      <td>166</td>\n",
        "      <td>201</td>\n",
        "      <td>22598</td>\n",
        "      <td>0.053693</td>\n",
        "      <td>1424</td>\n",
        "      <td>1 min  0 sec</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>11th</th>\n",
        "      <td>Past</td>\n",
        "      <td>30Aug2020</td>\n",
        "      <td>12Sep2020</td>\n",
        "      <td>330457362</td>\n",
        "      <td>SIR-F</td>\n",
        "      <td>0.92</td>\n",
        "      <td>0.019716</td>\n",
        "      <td>0.000002</td>\n",
        "      <td>0.001259</td>\n",
        "      <td>0.001341</td>\n",
        "      <td>360</td>\n",
        "      <td>0.020</td>\n",
        "      <td>186</td>\n",
        "      <td>198</td>\n",
        "      <td>132403</td>\n",
        "      <td>0.034053</td>\n",
        "      <td>1412</td>\n",
        "      <td>1 min  0 sec</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>12th</th>\n",
        "      <td>Past</td>\n",
        "      <td>13Sep2020</td>\n",
        "      <td>28Sep2020</td>\n",
        "      <td>330457362</td>\n",
        "      <td>SIR-F</td>\n",
        "      <td>1.53</td>\n",
        "      <td>0.037026</td>\n",
        "      <td>0.000001</td>\n",
        "      <td>0.001332</td>\n",
        "      <td>0.000835</td>\n",
        "      <td>360</td>\n",
        "      <td>0.037</td>\n",
        "      <td>299</td>\n",
        "      <td>187</td>\n",
        "      <td>173657</td>\n",
        "      <td>0.046409</td>\n",
        "      <td>1295</td>\n",
        "      <td>1 min  0 sec</td>\n",
        "    </tr>\n",
        "  </tbody>\n",
        "</table>\n",
        "</div>"
       ],
       "output_type": "pyout",
       "prompt_number": 12,
       "text": [
        "               Type      Start        End  Population    ODE    Rt     theta  \\\n",
        "Country Phase                                                                  \n",
        "Russia  0th    Past  12Feb2020  06May2020   330457362  SIR-F  0.02  0.602763   \n",
        "        1st    Past  07May2020  16May2020   330457362  SIR-F  2.51  0.000729   \n",
        "        2nd    Past  17May2020  26May2020   330457362  SIR-F  1.59  0.000438   \n",
        "        3rd    Past  27May2020  04Jun2020   330457362  SIR-F  1.03  0.000708   \n",
        "        4th    Past  05Jun2020  13Jun2020   330457362  SIR-F  1.25  0.000825   \n",
        "        5th    Past  14Jun2020  23Jun2020   330457362  SIR-F  0.82  0.000348   \n",
        "        6th    Past  24Jun2020  04Jul2020   330457362  SIR-F  0.94  0.018868   \n",
        "        7th    Past  05Jul2020  17Jul2020   330457362  SIR-F  0.70  0.027689   \n",
        "        8th    Past  18Jul2020  31Jul2020   330457362  SIR-F  0.76  0.000031   \n",
        "        9th    Past  01Aug2020  14Aug2020   330457362  SIR-F  0.76  0.001416   \n",
        "        10th   Past  15Aug2020  29Aug2020   330457362  SIR-F  0.80  0.029031   \n",
        "        11th   Past  30Aug2020  12Sep2020   330457362  SIR-F  0.92  0.019716   \n",
        "        12th   Past  13Sep2020  28Sep2020   330457362  SIR-F  1.53  0.037026   \n",
        "\n",
        "                  kappa       rho     sigma  tau  alpha1 [-]  1/gamma [day]  \\\n",
        "Country Phase                                                                 \n",
        "Russia  0th    0.544883  0.034081  0.002299  360       0.603            108   \n",
        "        1st    0.000120  0.012958  0.005045  360       0.001             49   \n",
        "        2nd    0.000098  0.007034  0.004313  360       0.000             57   \n",
        "        3rd    0.000117  0.005479  0.005196  360       0.001             48   \n",
        "        4th    0.000085  0.004647  0.003623  360       0.001             69   \n",
        "        5th    0.000079  0.003467  0.004138  360       0.000             60   \n",
        "        6th    0.000011  0.002568  0.002671  360       0.019             93   \n",
        "        7th    0.000010  0.002198  0.003027  360       0.028             82   \n",
        "        8th    0.000041  0.001834  0.002377  360       0.000            105   \n",
        "        9th    0.000031  0.001468  0.001889  360       0.001            132   \n",
        "        10th   0.000011  0.001239  0.001501  360       0.029            166   \n",
        "        11th   0.000002  0.001259  0.001341  360       0.020            186   \n",
        "        12th   0.000001  0.001332  0.000835  360       0.037            299   \n",
        "\n",
        "               1/beta [day]  1/alpha2 [day]      RMSLE  Trials       Runtime  \n",
        "Country Phase                                                                 \n",
        "Russia  0th               7               0  18.966727    1338  1 min  0 sec  \n",
        "        1st              19            2088   0.074230    1511  1 min  0 sec  \n",
        "        2nd              35            2549   0.086918    1424  1 min  0 sec  \n",
        "        3rd              45            2144   0.067224    1262  1 min  0 sec  \n",
        "        4th              53            2957   0.048345    1626  1 min  0 sec  \n",
        "        5th              72            3162   0.063847    1405  1 min  0 sec  \n",
        "        6th              97           22612   0.050093    1321  1 min  0 sec  \n",
        "        7th             113           25081   0.072559    1399  1 min  0 sec  \n",
        "        8th             136            6131   0.060525    1277  1 min  0 sec  \n",
        "        9th             170            7999   0.048987    1339  1 min  0 sec  \n",
        "        10th            201           22598   0.053693    1424  1 min  0 sec  \n",
        "        11th            198          132403   0.034053    1412  1 min  0 sec  \n",
        "        12th            187          173657   0.046409    1295  1 min  0 sec  "
       ]
      }
     ],
     "prompt_number": 12
    },
    {
     "cell_type": "markdown",
     "metadata": {},
     "source": [
      "## Compare the history of parameters\n",
      "Here, compare the history of parameter values if countries."
     ]
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "# All parameter/day parameter/Rt/OxCGRT\n",
      "analyser.track().head()"
     ],
     "language": "python",
     "metadata": {},
     "outputs": [
      {
       "html": [
        "<div>\n",
        "<style scoped>\n",
        "    .dataframe tbody tr th:only-of-type {\n",
        "        vertical-align: middle;\n",
        "    }\n",
        "\n",
        "    .dataframe tbody tr th {\n",
        "        vertical-align: top;\n",
        "    }\n",
        "\n",
        "    .dataframe thead th {\n",
        "        text-align: right;\n",
        "    }\n",
        "</style>\n",
        "<table border=\"1\" class=\"dataframe\">\n",
        "  <thead>\n",
        "    <tr style=\"text-align: right;\">\n",
        "      <th></th>\n",
        "      <th>Date</th>\n",
        "      <th>Country</th>\n",
        "      <th>theta</th>\n",
        "      <th>kappa</th>\n",
        "      <th>rho</th>\n",
        "      <th>sigma</th>\n",
        "      <th>alpha1 [-]</th>\n",
        "      <th>1/alpha2 [day]</th>\n",
        "      <th>1/beta [day]</th>\n",
        "      <th>1/gamma [day]</th>\n",
        "      <th>...</th>\n",
        "      <th>Cancel_events</th>\n",
        "      <th>Gatherings_restrictions</th>\n",
        "      <th>Transport_closing</th>\n",
        "      <th>Stay_home_restrictions</th>\n",
        "      <th>Internal_movement_restrictions</th>\n",
        "      <th>International_movement_restrictions</th>\n",
        "      <th>Information_campaigns</th>\n",
        "      <th>Testing_policy</th>\n",
        "      <th>Contact_tracing</th>\n",
        "      <th>Stringency_index</th>\n",
        "    </tr>\n",
        "  </thead>\n",
        "  <tbody>\n",
        "    <tr>\n",
        "      <th>0</th>\n",
        "      <td>2020-03-06</td>\n",
        "      <td>Bahrain</td>\n",
        "      <td>0.000248271</td>\n",
        "      <td>0.000188801</td>\n",
        "      <td>0.0190529</td>\n",
        "      <td>0.00889887</td>\n",
        "      <td>0</td>\n",
        "      <td>1324</td>\n",
        "      <td>13</td>\n",
        "      <td>28</td>\n",
        "      <td>...</td>\n",
        "      <td>0</td>\n",
        "      <td>0</td>\n",
        "      <td>0</td>\n",
        "      <td>0</td>\n",
        "      <td>0</td>\n",
        "      <td>3</td>\n",
        "      <td>2</td>\n",
        "      <td>2</td>\n",
        "      <td>2</td>\n",
        "      <td>30.56</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>1</th>\n",
        "      <td>2020-03-07</td>\n",
        "      <td>Bahrain</td>\n",
        "      <td>0.000248271</td>\n",
        "      <td>0.000188801</td>\n",
        "      <td>0.0190529</td>\n",
        "      <td>0.00889887</td>\n",
        "      <td>0</td>\n",
        "      <td>1324</td>\n",
        "      <td>13</td>\n",
        "      <td>28</td>\n",
        "      <td>...</td>\n",
        "      <td>0</td>\n",
        "      <td>0</td>\n",
        "      <td>0</td>\n",
        "      <td>0</td>\n",
        "      <td>0</td>\n",
        "      <td>3</td>\n",
        "      <td>2</td>\n",
        "      <td>2</td>\n",
        "      <td>2</td>\n",
        "      <td>30.56</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>2</th>\n",
        "      <td>2020-03-08</td>\n",
        "      <td>Bahrain</td>\n",
        "      <td>0.000248271</td>\n",
        "      <td>0.000188801</td>\n",
        "      <td>0.0190529</td>\n",
        "      <td>0.00889887</td>\n",
        "      <td>0</td>\n",
        "      <td>1324</td>\n",
        "      <td>13</td>\n",
        "      <td>28</td>\n",
        "      <td>...</td>\n",
        "      <td>0</td>\n",
        "      <td>0</td>\n",
        "      <td>0</td>\n",
        "      <td>0</td>\n",
        "      <td>0</td>\n",
        "      <td>3</td>\n",
        "      <td>2</td>\n",
        "      <td>2</td>\n",
        "      <td>2</td>\n",
        "      <td>30.56</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>3</th>\n",
        "      <td>2020-03-09</td>\n",
        "      <td>Bahrain</td>\n",
        "      <td>0.000248271</td>\n",
        "      <td>0.000188801</td>\n",
        "      <td>0.0190529</td>\n",
        "      <td>0.00889887</td>\n",
        "      <td>0</td>\n",
        "      <td>1324</td>\n",
        "      <td>13</td>\n",
        "      <td>28</td>\n",
        "      <td>...</td>\n",
        "      <td>0</td>\n",
        "      <td>0</td>\n",
        "      <td>0</td>\n",
        "      <td>0</td>\n",
        "      <td>0</td>\n",
        "      <td>3</td>\n",
        "      <td>2</td>\n",
        "      <td>2</td>\n",
        "      <td>2</td>\n",
        "      <td>30.56</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>4</th>\n",
        "      <td>2020-03-10</td>\n",
        "      <td>Bahrain</td>\n",
        "      <td>0.000248271</td>\n",
        "      <td>0.000188801</td>\n",
        "      <td>0.0190529</td>\n",
        "      <td>0.00889887</td>\n",
        "      <td>0</td>\n",
        "      <td>1324</td>\n",
        "      <td>13</td>\n",
        "      <td>28</td>\n",
        "      <td>...</td>\n",
        "      <td>0</td>\n",
        "      <td>0</td>\n",
        "      <td>0</td>\n",
        "      <td>0</td>\n",
        "      <td>0</td>\n",
        "      <td>3</td>\n",
        "      <td>2</td>\n",
        "      <td>2</td>\n",
        "      <td>2</td>\n",
        "      <td>30.56</td>\n",
        "    </tr>\n",
        "  </tbody>\n",
        "</table>\n",
        "<p>5 rows \u00d7 23 columns</p>\n",
        "</div>"
       ],
       "output_type": "pyout",
       "prompt_number": 13,
       "text": [
        "        Date  Country        theta        kappa        rho       sigma  \\\n",
        "0 2020-03-06  Bahrain  0.000248271  0.000188801  0.0190529  0.00889887   \n",
        "1 2020-03-07  Bahrain  0.000248271  0.000188801  0.0190529  0.00889887   \n",
        "2 2020-03-08  Bahrain  0.000248271  0.000188801  0.0190529  0.00889887   \n",
        "3 2020-03-09  Bahrain  0.000248271  0.000188801  0.0190529  0.00889887   \n",
        "4 2020-03-10  Bahrain  0.000248271  0.000188801  0.0190529  0.00889887   \n",
        "\n",
        "  alpha1 [-] 1/alpha2 [day] 1/beta [day] 1/gamma [day]  ... Cancel_events  \\\n",
        "0          0           1324           13            28  ...             0   \n",
        "1          0           1324           13            28  ...             0   \n",
        "2          0           1324           13            28  ...             0   \n",
        "3          0           1324           13            28  ...             0   \n",
        "4          0           1324           13            28  ...             0   \n",
        "\n",
        "   Gatherings_restrictions  Transport_closing  Stay_home_restrictions  \\\n",
        "0                        0                  0                       0   \n",
        "1                        0                  0                       0   \n",
        "2                        0                  0                       0   \n",
        "3                        0                  0                       0   \n",
        "4                        0                  0                       0   \n",
        "\n",
        "   Internal_movement_restrictions  International_movement_restrictions  \\\n",
        "0                               0                                    3   \n",
        "1                               0                                    3   \n",
        "2                               0                                    3   \n",
        "3                               0                                    3   \n",
        "4                               0                                    3   \n",
        "\n",
        "   Information_campaigns  Testing_policy  Contact_tracing  Stringency_index  \n",
        "0                      2               2                2             30.56  \n",
        "1                      2               2                2             30.56  \n",
        "2                      2               2                2             30.56  \n",
        "3                      2               2                2             30.56  \n",
        "4                      2               2                2             30.56  \n",
        "\n",
        "[5 rows x 23 columns]"
       ]
      }
     ],
     "prompt_number": 13
    },
    {
     "cell_type": "heading",
     "level": 3,
     "metadata": {},
     "source": [
      "$Rt$: Reprodcution number $\\mathrm{[-]}$"
     ]
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "analyser.param_history(\"Rt\", roll_window=None).tail()"
     ],
     "language": "python",
     "metadata": {},
     "outputs": [
      {
       "output_type": "display_data",
       "png": "\n",
       "text": [
        "<Figure size 648x432 with 1 Axes>"
       ]
      },
      {
       "html": [
        "<div>\n",
        "<style scoped>\n",
        "    .dataframe tbody tr th:only-of-type {\n",
        "        vertical-align: middle;\n",
        "    }\n",
        "\n",
        "    .dataframe tbody tr th {\n",
        "        vertical-align: top;\n",
        "    }\n",
        "\n",
        "    .dataframe thead th {\n",
        "        text-align: right;\n",
        "    }\n",
        "</style>\n",
        "<table border=\"1\" class=\"dataframe\">\n",
        "  <thead>\n",
        "    <tr style=\"text-align: right;\">\n",
        "      <th>Country</th>\n",
        "      <th>Bahrain</th>\n",
        "      <th>Bolivia</th>\n",
        "      <th>Brazil</th>\n",
        "      <th>Burkina Faso</th>\n",
        "      <th>France</th>\n",
        "      <th>Iran</th>\n",
        "      <th>Italy</th>\n",
        "      <th>Portugal</th>\n",
        "      <th>Russia</th>\n",
        "      <th>United Arab Emirates</th>\n",
        "      <th>United States</th>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>Date</th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "    </tr>\n",
        "  </thead>\n",
        "  <tbody>\n",
        "    <tr>\n",
        "      <th>2020-09-24</th>\n",
        "      <td>0.9</td>\n",
        "      <td>0.71</td>\n",
        "      <td>0.97</td>\n",
        "      <td>2.48</td>\n",
        "      <td>21.44</td>\n",
        "      <td>1.06</td>\n",
        "      <td>3.23</td>\n",
        "      <td>3.64</td>\n",
        "      <td>1.53</td>\n",
        "      <td>1.32</td>\n",
        "      <td>1.97</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>2020-09-25</th>\n",
        "      <td>0.9</td>\n",
        "      <td>0.71</td>\n",
        "      <td>0.97</td>\n",
        "      <td>2.48</td>\n",
        "      <td>21.44</td>\n",
        "      <td>1.06</td>\n",
        "      <td>3.23</td>\n",
        "      <td>3.64</td>\n",
        "      <td>1.53</td>\n",
        "      <td>1.32</td>\n",
        "      <td>1.97</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>2020-09-26</th>\n",
        "      <td>0.9</td>\n",
        "      <td>0.71</td>\n",
        "      <td>0.97</td>\n",
        "      <td>2.48</td>\n",
        "      <td>21.44</td>\n",
        "      <td>1.06</td>\n",
        "      <td>3.23</td>\n",
        "      <td>3.64</td>\n",
        "      <td>1.53</td>\n",
        "      <td>1.32</td>\n",
        "      <td>1.97</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>2020-09-27</th>\n",
        "      <td>0.9</td>\n",
        "      <td>0.71</td>\n",
        "      <td>0.97</td>\n",
        "      <td>2.48</td>\n",
        "      <td>21.44</td>\n",
        "      <td>1.06</td>\n",
        "      <td>3.23</td>\n",
        "      <td>3.64</td>\n",
        "      <td>1.53</td>\n",
        "      <td>1.32</td>\n",
        "      <td>1.97</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>2020-09-28</th>\n",
        "      <td>0.9</td>\n",
        "      <td>0.71</td>\n",
        "      <td>0.97</td>\n",
        "      <td>2.48</td>\n",
        "      <td>21.44</td>\n",
        "      <td>1.06</td>\n",
        "      <td>3.23</td>\n",
        "      <td>3.64</td>\n",
        "      <td>1.53</td>\n",
        "      <td>1.32</td>\n",
        "      <td>1.97</td>\n",
        "    </tr>\n",
        "  </tbody>\n",
        "</table>\n",
        "</div>"
       ],
       "output_type": "pyout",
       "prompt_number": 14,
       "text": [
        "Country     Bahrain  Bolivia  Brazil  Burkina Faso  France  Iran  Italy  \\\n",
        "Date                                                                      \n",
        "2020-09-24      0.9     0.71    0.97          2.48   21.44  1.06   3.23   \n",
        "2020-09-25      0.9     0.71    0.97          2.48   21.44  1.06   3.23   \n",
        "2020-09-26      0.9     0.71    0.97          2.48   21.44  1.06   3.23   \n",
        "2020-09-27      0.9     0.71    0.97          2.48   21.44  1.06   3.23   \n",
        "2020-09-28      0.9     0.71    0.97          2.48   21.44  1.06   3.23   \n",
        "\n",
        "Country     Portugal  Russia  United Arab Emirates  United States  \n",
        "Date                                                               \n",
        "2020-09-24      3.64    1.53                  1.32           1.97  \n",
        "2020-09-25      3.64    1.53                  1.32           1.97  \n",
        "2020-09-26      3.64    1.53                  1.32           1.97  \n",
        "2020-09-27      3.64    1.53                  1.32           1.97  \n",
        "2020-09-28      3.64    1.53                  1.32           1.97  "
       ]
      }
     ],
     "prompt_number": 14
    },
    {
     "cell_type": "heading",
     "level": 3,
     "metadata": {},
     "source": [
      "$\\rho$: Effective contact rate $\\mathrm{[-]}$"
     ]
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "analyser.param_history(\"rho\", roll_window=None).tail()"
     ],
     "language": "python",
     "metadata": {},
     "outputs": [
      {
       "output_type": "display_data",
       "png": "\n",
       "text": [
        "<Figure size 648x432 with 1 Axes>"
       ]
      },
      {
       "html": [
        "<div>\n",
        "<style scoped>\n",
        "    .dataframe tbody tr th:only-of-type {\n",
        "        vertical-align: middle;\n",
        "    }\n",
        "\n",
        "    .dataframe tbody tr th {\n",
        "        vertical-align: top;\n",
        "    }\n",
        "\n",
        "    .dataframe thead th {\n",
        "        text-align: right;\n",
        "    }\n",
        "</style>\n",
        "<table border=\"1\" class=\"dataframe\">\n",
        "  <thead>\n",
        "    <tr style=\"text-align: right;\">\n",
        "      <th>Country</th>\n",
        "      <th>Bahrain</th>\n",
        "      <th>Bolivia</th>\n",
        "      <th>Brazil</th>\n",
        "      <th>Burkina Faso</th>\n",
        "      <th>France</th>\n",
        "      <th>Iran</th>\n",
        "      <th>Italy</th>\n",
        "      <th>Portugal</th>\n",
        "      <th>Russia</th>\n",
        "      <th>United Arab Emirates</th>\n",
        "      <th>United States</th>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>Date</th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "    </tr>\n",
        "  </thead>\n",
        "  <tbody>\n",
        "    <tr>\n",
        "      <th>2020-09-24</th>\n",
        "      <td>0.024248</td>\n",
        "      <td>0.004124</td>\n",
        "      <td>0.015919</td>\n",
        "      <td>0.006506</td>\n",
        "      <td>0.008271</td>\n",
        "      <td>0.016331</td>\n",
        "      <td>0.011872</td>\n",
        "      <td>0.002446</td>\n",
        "      <td>0.001332</td>\n",
        "      <td>0.020643</td>\n",
        "      <td>0.00247</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>2020-09-25</th>\n",
        "      <td>0.024248</td>\n",
        "      <td>0.004124</td>\n",
        "      <td>0.015919</td>\n",
        "      <td>0.006506</td>\n",
        "      <td>0.008271</td>\n",
        "      <td>0.016331</td>\n",
        "      <td>0.011872</td>\n",
        "      <td>0.002446</td>\n",
        "      <td>0.001332</td>\n",
        "      <td>0.020643</td>\n",
        "      <td>0.00247</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>2020-09-26</th>\n",
        "      <td>0.024248</td>\n",
        "      <td>0.004124</td>\n",
        "      <td>0.015919</td>\n",
        "      <td>0.006506</td>\n",
        "      <td>0.008271</td>\n",
        "      <td>0.016331</td>\n",
        "      <td>0.011872</td>\n",
        "      <td>0.002446</td>\n",
        "      <td>0.001332</td>\n",
        "      <td>0.020643</td>\n",
        "      <td>0.00247</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>2020-09-27</th>\n",
        "      <td>0.024248</td>\n",
        "      <td>0.004124</td>\n",
        "      <td>0.015919</td>\n",
        "      <td>0.006506</td>\n",
        "      <td>0.008271</td>\n",
        "      <td>0.016331</td>\n",
        "      <td>0.011872</td>\n",
        "      <td>0.002446</td>\n",
        "      <td>0.001332</td>\n",
        "      <td>0.020643</td>\n",
        "      <td>0.00247</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>2020-09-28</th>\n",
        "      <td>0.024248</td>\n",
        "      <td>0.004124</td>\n",
        "      <td>0.015919</td>\n",
        "      <td>0.006506</td>\n",
        "      <td>0.008271</td>\n",
        "      <td>0.016331</td>\n",
        "      <td>0.011872</td>\n",
        "      <td>0.002446</td>\n",
        "      <td>0.001332</td>\n",
        "      <td>0.020643</td>\n",
        "      <td>0.00247</td>\n",
        "    </tr>\n",
        "  </tbody>\n",
        "</table>\n",
        "</div>"
       ],
       "output_type": "pyout",
       "prompt_number": 15,
       "text": [
        "Country      Bahrain   Bolivia    Brazil  Burkina Faso    France      Iran  \\\n",
        "Date                                                                         \n",
        "2020-09-24  0.024248  0.004124  0.015919      0.006506  0.008271  0.016331   \n",
        "2020-09-25  0.024248  0.004124  0.015919      0.006506  0.008271  0.016331   \n",
        "2020-09-26  0.024248  0.004124  0.015919      0.006506  0.008271  0.016331   \n",
        "2020-09-27  0.024248  0.004124  0.015919      0.006506  0.008271  0.016331   \n",
        "2020-09-28  0.024248  0.004124  0.015919      0.006506  0.008271  0.016331   \n",
        "\n",
        "Country        Italy  Portugal    Russia  United Arab Emirates  United States  \n",
        "Date                                                                           \n",
        "2020-09-24  0.011872  0.002446  0.001332              0.020643        0.00247  \n",
        "2020-09-25  0.011872  0.002446  0.001332              0.020643        0.00247  \n",
        "2020-09-26  0.011872  0.002446  0.001332              0.020643        0.00247  \n",
        "2020-09-27  0.011872  0.002446  0.001332              0.020643        0.00247  \n",
        "2020-09-28  0.011872  0.002446  0.001332              0.020643        0.00247  "
       ]
      }
     ],
     "prompt_number": 15
    },
    {
     "cell_type": "heading",
     "level": 3,
     "metadata": {},
     "source": [
      "$\\sigma$: Recovery rate $\\mathrm{[-]}$"
     ]
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "analyser.param_history(\"sigma\", roll_window=None).tail()"
     ],
     "language": "python",
     "metadata": {},
     "outputs": [
      {
       "output_type": "display_data",
       "png": "\n",
       "text": [
        "<Figure size 648x432 with 1 Axes>"
       ]
      },
      {
       "html": [
        "<div>\n",
        "<style scoped>\n",
        "    .dataframe tbody tr th:only-of-type {\n",
        "        vertical-align: middle;\n",
        "    }\n",
        "\n",
        "    .dataframe tbody tr th {\n",
        "        vertical-align: top;\n",
        "    }\n",
        "\n",
        "    .dataframe thead th {\n",
        "        text-align: right;\n",
        "    }\n",
        "</style>\n",
        "<table border=\"1\" class=\"dataframe\">\n",
        "  <thead>\n",
        "    <tr style=\"text-align: right;\">\n",
        "      <th>Country</th>\n",
        "      <th>Bahrain</th>\n",
        "      <th>Bolivia</th>\n",
        "      <th>Brazil</th>\n",
        "      <th>Burkina Faso</th>\n",
        "      <th>France</th>\n",
        "      <th>Iran</th>\n",
        "      <th>Italy</th>\n",
        "      <th>Portugal</th>\n",
        "      <th>Russia</th>\n",
        "      <th>United Arab Emirates</th>\n",
        "      <th>United States</th>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>Date</th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "    </tr>\n",
        "  </thead>\n",
        "  <tbody>\n",
        "    <tr>\n",
        "      <th>2020-09-24</th>\n",
        "      <td>0.02685</td>\n",
        "      <td>0.005346</td>\n",
        "      <td>0.016038</td>\n",
        "      <td>0.002591</td>\n",
        "      <td>0.000349</td>\n",
        "      <td>0.014458</td>\n",
        "      <td>0.003598</td>\n",
        "      <td>0.000659</td>\n",
        "      <td>0.000835</td>\n",
        "      <td>0.015606</td>\n",
        "      <td>0.001192</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>2020-09-25</th>\n",
        "      <td>0.02685</td>\n",
        "      <td>0.005346</td>\n",
        "      <td>0.016038</td>\n",
        "      <td>0.002591</td>\n",
        "      <td>0.000349</td>\n",
        "      <td>0.014458</td>\n",
        "      <td>0.003598</td>\n",
        "      <td>0.000659</td>\n",
        "      <td>0.000835</td>\n",
        "      <td>0.015606</td>\n",
        "      <td>0.001192</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>2020-09-26</th>\n",
        "      <td>0.02685</td>\n",
        "      <td>0.005346</td>\n",
        "      <td>0.016038</td>\n",
        "      <td>0.002591</td>\n",
        "      <td>0.000349</td>\n",
        "      <td>0.014458</td>\n",
        "      <td>0.003598</td>\n",
        "      <td>0.000659</td>\n",
        "      <td>0.000835</td>\n",
        "      <td>0.015606</td>\n",
        "      <td>0.001192</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>2020-09-27</th>\n",
        "      <td>0.02685</td>\n",
        "      <td>0.005346</td>\n",
        "      <td>0.016038</td>\n",
        "      <td>0.002591</td>\n",
        "      <td>0.000349</td>\n",
        "      <td>0.014458</td>\n",
        "      <td>0.003598</td>\n",
        "      <td>0.000659</td>\n",
        "      <td>0.000835</td>\n",
        "      <td>0.015606</td>\n",
        "      <td>0.001192</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>2020-09-28</th>\n",
        "      <td>0.02685</td>\n",
        "      <td>0.005346</td>\n",
        "      <td>0.016038</td>\n",
        "      <td>0.002591</td>\n",
        "      <td>0.000349</td>\n",
        "      <td>0.014458</td>\n",
        "      <td>0.003598</td>\n",
        "      <td>0.000659</td>\n",
        "      <td>0.000835</td>\n",
        "      <td>0.015606</td>\n",
        "      <td>0.001192</td>\n",
        "    </tr>\n",
        "  </tbody>\n",
        "</table>\n",
        "</div>"
       ],
       "output_type": "pyout",
       "prompt_number": 16,
       "text": [
        "Country     Bahrain   Bolivia    Brazil  Burkina Faso    France      Iran  \\\n",
        "Date                                                                        \n",
        "2020-09-24  0.02685  0.005346  0.016038      0.002591  0.000349  0.014458   \n",
        "2020-09-25  0.02685  0.005346  0.016038      0.002591  0.000349  0.014458   \n",
        "2020-09-26  0.02685  0.005346  0.016038      0.002591  0.000349  0.014458   \n",
        "2020-09-27  0.02685  0.005346  0.016038      0.002591  0.000349  0.014458   \n",
        "2020-09-28  0.02685  0.005346  0.016038      0.002591  0.000349  0.014458   \n",
        "\n",
        "Country        Italy  Portugal    Russia  United Arab Emirates  United States  \n",
        "Date                                                                           \n",
        "2020-09-24  0.003598  0.000659  0.000835              0.015606       0.001192  \n",
        "2020-09-25  0.003598  0.000659  0.000835              0.015606       0.001192  \n",
        "2020-09-26  0.003598  0.000659  0.000835              0.015606       0.001192  \n",
        "2020-09-27  0.003598  0.000659  0.000835              0.015606       0.001192  \n",
        "2020-09-28  0.003598  0.000659  0.000835              0.015606       0.001192  "
       ]
      }
     ],
     "prompt_number": 16
    },
    {
     "cell_type": "heading",
     "level": 3,
     "metadata": {},
     "source": [
      "$\\kappa$: Mortality rate of infected cases $\\mathrm{[-]}$"
     ]
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "analyser.param_history(\"kappa\", roll_window=None).tail()"
     ],
     "language": "python",
     "metadata": {},
     "outputs": [
      {
       "output_type": "display_data",
       "png": "\n",
       "text": [
        "<Figure size 648x432 with 1 Axes>"
       ]
      },
      {
       "html": [
        "<div>\n",
        "<style scoped>\n",
        "    .dataframe tbody tr th:only-of-type {\n",
        "        vertical-align: middle;\n",
        "    }\n",
        "\n",
        "    .dataframe tbody tr th {\n",
        "        vertical-align: top;\n",
        "    }\n",
        "\n",
        "    .dataframe thead th {\n",
        "        text-align: right;\n",
        "    }\n",
        "</style>\n",
        "<table border=\"1\" class=\"dataframe\">\n",
        "  <thead>\n",
        "    <tr style=\"text-align: right;\">\n",
        "      <th>Country</th>\n",
        "      <th>Bahrain</th>\n",
        "      <th>Bolivia</th>\n",
        "      <th>Brazil</th>\n",
        "      <th>Burkina Faso</th>\n",
        "      <th>France</th>\n",
        "      <th>Iran</th>\n",
        "      <th>Italy</th>\n",
        "      <th>Portugal</th>\n",
        "      <th>Russia</th>\n",
        "      <th>United Arab Emirates</th>\n",
        "      <th>United States</th>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>Date</th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "    </tr>\n",
        "  </thead>\n",
        "  <tbody>\n",
        "    <tr>\n",
        "      <th>2020-09-24</th>\n",
        "      <td>0.000087</td>\n",
        "      <td>0.000002</td>\n",
        "      <td>0.000407</td>\n",
        "      <td>0.000031</td>\n",
        "      <td>0.000037</td>\n",
        "      <td>0.00015</td>\n",
        "      <td>0.000071</td>\n",
        "      <td>0.00001</td>\n",
        "      <td>0.000001</td>\n",
        "      <td>0.000002</td>\n",
        "      <td>0.00006</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>2020-09-25</th>\n",
        "      <td>0.000087</td>\n",
        "      <td>0.000002</td>\n",
        "      <td>0.000407</td>\n",
        "      <td>0.000031</td>\n",
        "      <td>0.000037</td>\n",
        "      <td>0.00015</td>\n",
        "      <td>0.000071</td>\n",
        "      <td>0.00001</td>\n",
        "      <td>0.000001</td>\n",
        "      <td>0.000002</td>\n",
        "      <td>0.00006</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>2020-09-26</th>\n",
        "      <td>0.000087</td>\n",
        "      <td>0.000002</td>\n",
        "      <td>0.000407</td>\n",
        "      <td>0.000031</td>\n",
        "      <td>0.000037</td>\n",
        "      <td>0.00015</td>\n",
        "      <td>0.000071</td>\n",
        "      <td>0.00001</td>\n",
        "      <td>0.000001</td>\n",
        "      <td>0.000002</td>\n",
        "      <td>0.00006</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>2020-09-27</th>\n",
        "      <td>0.000087</td>\n",
        "      <td>0.000002</td>\n",
        "      <td>0.000407</td>\n",
        "      <td>0.000031</td>\n",
        "      <td>0.000037</td>\n",
        "      <td>0.00015</td>\n",
        "      <td>0.000071</td>\n",
        "      <td>0.00001</td>\n",
        "      <td>0.000001</td>\n",
        "      <td>0.000002</td>\n",
        "      <td>0.00006</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>2020-09-28</th>\n",
        "      <td>0.000087</td>\n",
        "      <td>0.000002</td>\n",
        "      <td>0.000407</td>\n",
        "      <td>0.000031</td>\n",
        "      <td>0.000037</td>\n",
        "      <td>0.00015</td>\n",
        "      <td>0.000071</td>\n",
        "      <td>0.00001</td>\n",
        "      <td>0.000001</td>\n",
        "      <td>0.000002</td>\n",
        "      <td>0.00006</td>\n",
        "    </tr>\n",
        "  </tbody>\n",
        "</table>\n",
        "</div>"
       ],
       "output_type": "pyout",
       "prompt_number": 17,
       "text": [
        "Country      Bahrain   Bolivia    Brazil  Burkina Faso    France     Iran  \\\n",
        "Date                                                                        \n",
        "2020-09-24  0.000087  0.000002  0.000407      0.000031  0.000037  0.00015   \n",
        "2020-09-25  0.000087  0.000002  0.000407      0.000031  0.000037  0.00015   \n",
        "2020-09-26  0.000087  0.000002  0.000407      0.000031  0.000037  0.00015   \n",
        "2020-09-27  0.000087  0.000002  0.000407      0.000031  0.000037  0.00015   \n",
        "2020-09-28  0.000087  0.000002  0.000407      0.000031  0.000037  0.00015   \n",
        "\n",
        "Country        Italy  Portugal    Russia  United Arab Emirates  United States  \n",
        "Date                                                                           \n",
        "2020-09-24  0.000071   0.00001  0.000001              0.000002        0.00006  \n",
        "2020-09-25  0.000071   0.00001  0.000001              0.000002        0.00006  \n",
        "2020-09-26  0.000071   0.00001  0.000001              0.000002        0.00006  \n",
        "2020-09-27  0.000071   0.00001  0.000001              0.000002        0.00006  \n",
        "2020-09-28  0.000071   0.00001  0.000001              0.000002        0.00006  "
       ]
      }
     ],
     "prompt_number": 17
    },
    {
     "cell_type": "heading",
     "level": 3,
     "metadata": {},
     "source": [
      "$\\theta$: Mortality rate of S$^\\ast$ cases $\\mathrm{[-]}$"
     ]
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "analyser.param_history(\"theta\", roll_window=None).tail()"
     ],
     "language": "python",
     "metadata": {},
     "outputs": [
      {
       "output_type": "display_data",
       "png": "\n",
       "text": [
        "<Figure size 648x432 with 1 Axes>"
       ]
      },
      {
       "html": [
        "<div>\n",
        "<style scoped>\n",
        "    .dataframe tbody tr th:only-of-type {\n",
        "        vertical-align: middle;\n",
        "    }\n",
        "\n",
        "    .dataframe tbody tr th {\n",
        "        vertical-align: top;\n",
        "    }\n",
        "\n",
        "    .dataframe thead th {\n",
        "        text-align: right;\n",
        "    }\n",
        "</style>\n",
        "<table border=\"1\" class=\"dataframe\">\n",
        "  <thead>\n",
        "    <tr style=\"text-align: right;\">\n",
        "      <th>Country</th>\n",
        "      <th>Bahrain</th>\n",
        "      <th>Bolivia</th>\n",
        "      <th>Brazil</th>\n",
        "      <th>Burkina Faso</th>\n",
        "      <th>France</th>\n",
        "      <th>Iran</th>\n",
        "      <th>Italy</th>\n",
        "      <th>Portugal</th>\n",
        "      <th>Russia</th>\n",
        "      <th>United Arab Emirates</th>\n",
        "      <th>United States</th>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>Date</th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "    </tr>\n",
        "  </thead>\n",
        "  <tbody>\n",
        "    <tr>\n",
        "      <th>2020-09-24</th>\n",
        "      <td>0.00029</td>\n",
        "      <td>0.079061</td>\n",
        "      <td>0.000554</td>\n",
        "      <td>0.000944</td>\n",
        "      <td>0.000684</td>\n",
        "      <td>0.049968</td>\n",
        "      <td>0.000933</td>\n",
        "      <td>0.002198</td>\n",
        "      <td>0.037026</td>\n",
        "      <td>0.000098</td>\n",
        "      <td>0.00134</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>2020-09-25</th>\n",
        "      <td>0.00029</td>\n",
        "      <td>0.079061</td>\n",
        "      <td>0.000554</td>\n",
        "      <td>0.000944</td>\n",
        "      <td>0.000684</td>\n",
        "      <td>0.049968</td>\n",
        "      <td>0.000933</td>\n",
        "      <td>0.002198</td>\n",
        "      <td>0.037026</td>\n",
        "      <td>0.000098</td>\n",
        "      <td>0.00134</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>2020-09-26</th>\n",
        "      <td>0.00029</td>\n",
        "      <td>0.079061</td>\n",
        "      <td>0.000554</td>\n",
        "      <td>0.000944</td>\n",
        "      <td>0.000684</td>\n",
        "      <td>0.049968</td>\n",
        "      <td>0.000933</td>\n",
        "      <td>0.002198</td>\n",
        "      <td>0.037026</td>\n",
        "      <td>0.000098</td>\n",
        "      <td>0.00134</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>2020-09-27</th>\n",
        "      <td>0.00029</td>\n",
        "      <td>0.079061</td>\n",
        "      <td>0.000554</td>\n",
        "      <td>0.000944</td>\n",
        "      <td>0.000684</td>\n",
        "      <td>0.049968</td>\n",
        "      <td>0.000933</td>\n",
        "      <td>0.002198</td>\n",
        "      <td>0.037026</td>\n",
        "      <td>0.000098</td>\n",
        "      <td>0.00134</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>2020-09-28</th>\n",
        "      <td>0.00029</td>\n",
        "      <td>0.079061</td>\n",
        "      <td>0.000554</td>\n",
        "      <td>0.000944</td>\n",
        "      <td>0.000684</td>\n",
        "      <td>0.049968</td>\n",
        "      <td>0.000933</td>\n",
        "      <td>0.002198</td>\n",
        "      <td>0.037026</td>\n",
        "      <td>0.000098</td>\n",
        "      <td>0.00134</td>\n",
        "    </tr>\n",
        "  </tbody>\n",
        "</table>\n",
        "</div>"
       ],
       "output_type": "pyout",
       "prompt_number": 18,
       "text": [
        "Country     Bahrain   Bolivia    Brazil  Burkina Faso    France      Iran  \\\n",
        "Date                                                                        \n",
        "2020-09-24  0.00029  0.079061  0.000554      0.000944  0.000684  0.049968   \n",
        "2020-09-25  0.00029  0.079061  0.000554      0.000944  0.000684  0.049968   \n",
        "2020-09-26  0.00029  0.079061  0.000554      0.000944  0.000684  0.049968   \n",
        "2020-09-27  0.00029  0.079061  0.000554      0.000944  0.000684  0.049968   \n",
        "2020-09-28  0.00029  0.079061  0.000554      0.000944  0.000684  0.049968   \n",
        "\n",
        "Country        Italy  Portugal    Russia  United Arab Emirates  United States  \n",
        "Date                                                                           \n",
        "2020-09-24  0.000933  0.002198  0.037026              0.000098        0.00134  \n",
        "2020-09-25  0.000933  0.002198  0.037026              0.000098        0.00134  \n",
        "2020-09-26  0.000933  0.002198  0.037026              0.000098        0.00134  \n",
        "2020-09-27  0.000933  0.002198  0.037026              0.000098        0.00134  \n",
        "2020-09-28  0.000933  0.002198  0.037026              0.000098        0.00134  "
       ]
      }
     ],
     "prompt_number": 18
    },
    {
     "cell_type": "markdown",
     "metadata": {},
     "source": [
      "## (Experimental): Relationship of OxCGRT index and parameter values\n",
      "Government responses will impact on parameter values of ODE models about 14 days later. Here, we will investigate on the relationship of [stringency index (from OxCGRT)](https://github.com/OxCGRT/covid-policy-tracker/blob/master/documentation/index_methodology.md) and reproduction number/model parameters.\n"
     ]
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "%matplotlib inline\n",
      "from matplotlib import pyplot as plt\n",
      "import seaborn as sns\n",
      "import pandas as pd"
     ],
     "language": "python",
     "metadata": {},
     "outputs": [],
     "prompt_number": 19
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "df = analyser.track()\n",
      "param_cols = [\"Rt\", *cs.SIRF.PARAMETERS]\n",
      "oxcgrt_cols = oxcgrt_data.OXCGRT_VARS[:]\n",
      "cols = param_cols + oxcgrt_cols\n",
      "delay = 14\n",
      "\n",
      "for col in param_cols:\n",
      "    df[col] = pd.to_numeric(df[col], errors=\"coerce\")\n",
      "    df[col] = df.groupby(\"Country\")[col].shift(0 - delay)\n",
      "\n",
      "df = df.dropna(how=\"any\")\n",
      "df = df.loc[:, [\"Date\", \"Country\", *cols]]\n",
      "track_df = df.copy()\n",
      "track_df.info()"
     ],
     "language": "python",
     "metadata": {},
     "outputs": [
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "<class 'pandas.core.frame.DataFrame'>\n",
        "Int64Index: 46268 entries, 0 to 46407\n",
        "Data columns (total 19 columns):\n",
        " #   Column                               Non-Null Count  Dtype         \n",
        "---  ------                               --------------  -----         \n",
        " 0   Date                                 46268 non-null  datetime64[ns]\n",
        " 1   Country                              46268 non-null  object        \n",
        " 2   Rt                                   46268 non-null  float64       \n",
        " 3   theta                                46268 non-null  float64       \n",
        " 4   kappa                                46268 non-null  float64       \n",
        " 5   rho                                  46268 non-null  float64       \n",
        " 6   sigma                                46268 non-null  float64       \n",
        " 7   School_closing                       46268 non-null  int64         \n",
        " 8   Workplace_closing                    46268 non-null  int64         \n",
        " 9   Cancel_events                        46268 non-null  int64         \n",
        " 10  Gatherings_restrictions              46268 non-null  int64         \n",
        " 11  Transport_closing                    46268 non-null  int64         \n",
        " 12  Stay_home_restrictions               46268 non-null  int64         \n",
        " 13  Internal_movement_restrictions       46268 non-null  int64         \n",
        " 14  International_movement_restrictions  46268 non-null  int64         \n",
        " 15  Information_campaigns                46268 non-null  int64         \n",
        " 16  Testing_policy                       46268 non-null  int64         \n",
        " 17  Contact_tracing                      46268 non-null  int64         \n",
        " 18  Stringency_index                     46268 non-null  float64       \n",
        "dtypes: datetime64[ns](1), float64(6), int64(11), object(1)\n",
        "memory usage: 7.1+ MB\n"
       ]
      }
     ],
     "prompt_number": 20
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "# Correlation\n",
      "df = track_df.copy()\n",
      "df.corr().style.background_gradient(axis=None)"
     ],
     "language": "python",
     "metadata": {},
     "outputs": [
      {
       "html": [
        "<style  type=\"text/css\" >\n",
        "#T_68266f6e_019b_11eb_a322_5254009891bbrow0_col0,#T_68266f6e_019b_11eb_a322_5254009891bbrow1_col1,#T_68266f6e_019b_11eb_a322_5254009891bbrow2_col2,#T_68266f6e_019b_11eb_a322_5254009891bbrow3_col3,#T_68266f6e_019b_11eb_a322_5254009891bbrow4_col4,#T_68266f6e_019b_11eb_a322_5254009891bbrow5_col5,#T_68266f6e_019b_11eb_a322_5254009891bbrow6_col6,#T_68266f6e_019b_11eb_a322_5254009891bbrow7_col7,#T_68266f6e_019b_11eb_a322_5254009891bbrow8_col8,#T_68266f6e_019b_11eb_a322_5254009891bbrow9_col9,#T_68266f6e_019b_11eb_a322_5254009891bbrow10_col10,#T_68266f6e_019b_11eb_a322_5254009891bbrow11_col11,#T_68266f6e_019b_11eb_a322_5254009891bbrow12_col12,#T_68266f6e_019b_11eb_a322_5254009891bbrow13_col13,#T_68266f6e_019b_11eb_a322_5254009891bbrow14_col14,#T_68266f6e_019b_11eb_a322_5254009891bbrow15_col15,#T_68266f6e_019b_11eb_a322_5254009891bbrow16_col16{\n",
        "            background-color:  #023858;\n",
        "            color:  #f1f1f1;\n",
        "        }#T_68266f6e_019b_11eb_a322_5254009891bbrow0_col1,#T_68266f6e_019b_11eb_a322_5254009891bbrow1_col0{\n",
        "            background-color:  #ede8f3;\n",
        "            color:  #000000;\n",
        "        }#T_68266f6e_019b_11eb_a322_5254009891bbrow0_col2,#T_68266f6e_019b_11eb_a322_5254009891bbrow2_col0{\n",
        "            background-color:  #ebe6f2;\n",
        "            color:  #000000;\n",
        "        }#T_68266f6e_019b_11eb_a322_5254009891bbrow0_col3,#T_68266f6e_019b_11eb_a322_5254009891bbrow3_col0,#T_68266f6e_019b_11eb_a322_5254009891bbrow4_col15,#T_68266f6e_019b_11eb_a322_5254009891bbrow15_col4{\n",
        "            background-color:  #94b6d7;\n",
        "            color:  #000000;\n",
        "        }#T_68266f6e_019b_11eb_a322_5254009891bbrow0_col4,#T_68266f6e_019b_11eb_a322_5254009891bbrow4_col0{\n",
        "            background-color:  #e6e2ef;\n",
        "            color:  #000000;\n",
        "        }#T_68266f6e_019b_11eb_a322_5254009891bbrow0_col5,#T_68266f6e_019b_11eb_a322_5254009891bbrow0_col16,#T_68266f6e_019b_11eb_a322_5254009891bbrow4_col12,#T_68266f6e_019b_11eb_a322_5254009891bbrow5_col0,#T_68266f6e_019b_11eb_a322_5254009891bbrow12_col4,#T_68266f6e_019b_11eb_a322_5254009891bbrow16_col0{\n",
        "            background-color:  #c9cee4;\n",
        "            color:  #000000;\n",
        "        }#T_68266f6e_019b_11eb_a322_5254009891bbrow0_col6,#T_68266f6e_019b_11eb_a322_5254009891bbrow6_col0{\n",
        "            background-color:  #abbfdc;\n",
        "            color:  #000000;\n",
        "        }#T_68266f6e_019b_11eb_a322_5254009891bbrow0_col7,#T_68266f6e_019b_11eb_a322_5254009891bbrow0_col10,#T_68266f6e_019b_11eb_a322_5254009891bbrow3_col5,#T_68266f6e_019b_11eb_a322_5254009891bbrow5_col3,#T_68266f6e_019b_11eb_a322_5254009891bbrow7_col0,#T_68266f6e_019b_11eb_a322_5254009891bbrow10_col0{\n",
        "            background-color:  #d9d8ea;\n",
        "            color:  #000000;\n",
        "        }#T_68266f6e_019b_11eb_a322_5254009891bbrow0_col8,#T_68266f6e_019b_11eb_a322_5254009891bbrow4_col9,#T_68266f6e_019b_11eb_a322_5254009891bbrow8_col0,#T_68266f6e_019b_11eb_a322_5254009891bbrow9_col4,#T_68266f6e_019b_11eb_a322_5254009891bbrow9_col15,#T_68266f6e_019b_11eb_a322_5254009891bbrow15_col9{\n",
        "            background-color:  #b4c4df;\n",
        "            color:  #000000;\n",
        "        }#T_68266f6e_019b_11eb_a322_5254009891bbrow0_col9,#T_68266f6e_019b_11eb_a322_5254009891bbrow9_col0{\n",
        "            background-color:  #d3d4e7;\n",
        "            color:  #000000;\n",
        "        }#T_68266f6e_019b_11eb_a322_5254009891bbrow0_col11,#T_68266f6e_019b_11eb_a322_5254009891bbrow11_col0{\n",
        "            background-color:  #cccfe5;\n",
        "            color:  #000000;\n",
        "        }#T_68266f6e_019b_11eb_a322_5254009891bbrow0_col12,#T_68266f6e_019b_11eb_a322_5254009891bbrow12_col0{\n",
        "            background-color:  #dedcec;\n",
        "            color:  #000000;\n",
        "        }#T_68266f6e_019b_11eb_a322_5254009891bbrow0_col13,#T_68266f6e_019b_11eb_a322_5254009891bbrow4_col11,#T_68266f6e_019b_11eb_a322_5254009891bbrow11_col4,#T_68266f6e_019b_11eb_a322_5254009891bbrow13_col0{\n",
        "            background-color:  #bcc7e1;\n",
        "            color:  #000000;\n",
        "        }#T_68266f6e_019b_11eb_a322_5254009891bbrow0_col14,#T_68266f6e_019b_11eb_a322_5254009891bbrow1_col16,#T_68266f6e_019b_11eb_a322_5254009891bbrow14_col0,#T_68266f6e_019b_11eb_a322_5254009891bbrow16_col1{\n",
        "            background-color:  #cdd0e5;\n",
        "            color:  #000000;\n",
        "        }#T_68266f6e_019b_11eb_a322_5254009891bbrow0_col15,#T_68266f6e_019b_11eb_a322_5254009891bbrow3_col8,#T_68266f6e_019b_11eb_a322_5254009891bbrow8_col3,#T_68266f6e_019b_11eb_a322_5254009891bbrow15_col0{\n",
        "            background-color:  #dcdaeb;\n",
        "            color:  #000000;\n",
        "        }#T_68266f6e_019b_11eb_a322_5254009891bbrow1_col2,#T_68266f6e_019b_11eb_a322_5254009891bbrow2_col1{\n",
        "            background-color:  #023b5d;\n",
        "            color:  #f1f1f1;\n",
        "        }#T_68266f6e_019b_11eb_a322_5254009891bbrow1_col3,#T_68266f6e_019b_11eb_a322_5254009891bbrow3_col1,#T_68266f6e_019b_11eb_a322_5254009891bbrow5_col7,#T_68266f6e_019b_11eb_a322_5254009891bbrow7_col5,#T_68266f6e_019b_11eb_a322_5254009891bbrow11_col16,#T_68266f6e_019b_11eb_a322_5254009891bbrow16_col11{\n",
        "            background-color:  #046097;\n",
        "            color:  #f1f1f1;\n",
        "        }#T_68266f6e_019b_11eb_a322_5254009891bbrow1_col4,#T_68266f6e_019b_11eb_a322_5254009891bbrow4_col1{\n",
        "            background-color:  #c2cbe2;\n",
        "            color:  #000000;\n",
        "        }#T_68266f6e_019b_11eb_a322_5254009891bbrow1_col5,#T_68266f6e_019b_11eb_a322_5254009891bbrow1_col8,#T_68266f6e_019b_11eb_a322_5254009891bbrow5_col1,#T_68266f6e_019b_11eb_a322_5254009891bbrow8_col1{\n",
        "            background-color:  #e0dded;\n",
        "            color:  #000000;\n",
        "        }#T_68266f6e_019b_11eb_a322_5254009891bbrow1_col6,#T_68266f6e_019b_11eb_a322_5254009891bbrow6_col1{\n",
        "            background-color:  #d2d3e7;\n",
        "            color:  #000000;\n",
        "        }#T_68266f6e_019b_11eb_a322_5254009891bbrow1_col7,#T_68266f6e_019b_11eb_a322_5254009891bbrow7_col1{\n",
        "            background-color:  #e9e5f1;\n",
        "            color:  #000000;\n",
        "        }#T_68266f6e_019b_11eb_a322_5254009891bbrow1_col9,#T_68266f6e_019b_11eb_a322_5254009891bbrow2_col8,#T_68266f6e_019b_11eb_a322_5254009891bbrow8_col2,#T_68266f6e_019b_11eb_a322_5254009891bbrow9_col1{\n",
        "            background-color:  #e0deed;\n",
        "            color:  #000000;\n",
        "        }#T_68266f6e_019b_11eb_a322_5254009891bbrow1_col10,#T_68266f6e_019b_11eb_a322_5254009891bbrow2_col12,#T_68266f6e_019b_11eb_a322_5254009891bbrow10_col1,#T_68266f6e_019b_11eb_a322_5254009891bbrow12_col2{\n",
        "            background-color:  #83afd3;\n",
        "            color:  #000000;\n",
        "        }#T_68266f6e_019b_11eb_a322_5254009891bbrow1_col11,#T_68266f6e_019b_11eb_a322_5254009891bbrow3_col12,#T_68266f6e_019b_11eb_a322_5254009891bbrow4_col6,#T_68266f6e_019b_11eb_a322_5254009891bbrow6_col4,#T_68266f6e_019b_11eb_a322_5254009891bbrow11_col1,#T_68266f6e_019b_11eb_a322_5254009891bbrow12_col3{\n",
        "            background-color:  #b1c2de;\n",
        "            color:  #000000;\n",
        "        }#T_68266f6e_019b_11eb_a322_5254009891bbrow1_col12,#T_68266f6e_019b_11eb_a322_5254009891bbrow2_col10,#T_68266f6e_019b_11eb_a322_5254009891bbrow3_col10,#T_68266f6e_019b_11eb_a322_5254009891bbrow10_col2,#T_68266f6e_019b_11eb_a322_5254009891bbrow10_col3,#T_68266f6e_019b_11eb_a322_5254009891bbrow11_col15,#T_68266f6e_019b_11eb_a322_5254009891bbrow12_col1,#T_68266f6e_019b_11eb_a322_5254009891bbrow15_col11{\n",
        "            background-color:  #88b1d4;\n",
        "            color:  #000000;\n",
        "        }#T_68266f6e_019b_11eb_a322_5254009891bbrow1_col13,#T_68266f6e_019b_11eb_a322_5254009891bbrow13_col1{\n",
        "            background-color:  #f3edf5;\n",
        "            color:  #000000;\n",
        "        }#T_68266f6e_019b_11eb_a322_5254009891bbrow1_col14,#T_68266f6e_019b_11eb_a322_5254009891bbrow14_col1{\n",
        "            background-color:  #f5eef6;\n",
        "            color:  #000000;\n",
        "        }#T_68266f6e_019b_11eb_a322_5254009891bbrow1_col15,#T_68266f6e_019b_11eb_a322_5254009891bbrow2_col15,#T_68266f6e_019b_11eb_a322_5254009891bbrow15_col1,#T_68266f6e_019b_11eb_a322_5254009891bbrow15_col2{\n",
        "            background-color:  #b9c6e0;\n",
        "            color:  #000000;\n",
        "        }#T_68266f6e_019b_11eb_a322_5254009891bbrow2_col3,#T_68266f6e_019b_11eb_a322_5254009891bbrow3_col2,#T_68266f6e_019b_11eb_a322_5254009891bbrow9_col16,#T_68266f6e_019b_11eb_a322_5254009891bbrow16_col9{\n",
        "            background-color:  #046096;\n",
        "            color:  #f1f1f1;\n",
        "        }#T_68266f6e_019b_11eb_a322_5254009891bbrow2_col4,#T_68266f6e_019b_11eb_a322_5254009891bbrow4_col2{\n",
        "            background-color:  #d0d1e6;\n",
        "            color:  #000000;\n",
        "        }#T_68266f6e_019b_11eb_a322_5254009891bbrow2_col5,#T_68266f6e_019b_11eb_a322_5254009891bbrow3_col9,#T_68266f6e_019b_11eb_a322_5254009891bbrow5_col2,#T_68266f6e_019b_11eb_a322_5254009891bbrow9_col3{\n",
        "            background-color:  #e5e1ef;\n",
        "            color:  #000000;\n",
        "        }#T_68266f6e_019b_11eb_a322_5254009891bbrow2_col6,#T_68266f6e_019b_11eb_a322_5254009891bbrow6_col2{\n",
        "            background-color:  #dad9ea;\n",
        "            color:  #000000;\n",
        "        }#T_68266f6e_019b_11eb_a322_5254009891bbrow2_col7,#T_68266f6e_019b_11eb_a322_5254009891bbrow7_col2{\n",
        "            background-color:  #eee8f3;\n",
        "            color:  #000000;\n",
        "        }#T_68266f6e_019b_11eb_a322_5254009891bbrow2_col9,#T_68266f6e_019b_11eb_a322_5254009891bbrow9_col2{\n",
        "            background-color:  #e3e0ee;\n",
        "            color:  #000000;\n",
        "        }#T_68266f6e_019b_11eb_a322_5254009891bbrow2_col11,#T_68266f6e_019b_11eb_a322_5254009891bbrow11_col2{\n",
        "            background-color:  #b7c5df;\n",
        "            color:  #000000;\n",
        "        }#T_68266f6e_019b_11eb_a322_5254009891bbrow2_col13,#T_68266f6e_019b_11eb_a322_5254009891bbrow13_col2{\n",
        "            background-color:  #f5eff6;\n",
        "            color:  #000000;\n",
        "        }#T_68266f6e_019b_11eb_a322_5254009891bbrow2_col14,#T_68266f6e_019b_11eb_a322_5254009891bbrow14_col2{\n",
        "            background-color:  #f0eaf4;\n",
        "            color:  #000000;\n",
        "        }#T_68266f6e_019b_11eb_a322_5254009891bbrow2_col16,#T_68266f6e_019b_11eb_a322_5254009891bbrow16_col2{\n",
        "            background-color:  #d4d4e8;\n",
        "            color:  #000000;\n",
        "        }#T_68266f6e_019b_11eb_a322_5254009891bbrow3_col4,#T_68266f6e_019b_11eb_a322_5254009891bbrow4_col3{\n",
        "            background-color:  #adc1dd;\n",
        "            color:  #000000;\n",
        "        }#T_68266f6e_019b_11eb_a322_5254009891bbrow3_col6,#T_68266f6e_019b_11eb_a322_5254009891bbrow6_col3{\n",
        "            background-color:  #d1d2e6;\n",
        "            color:  #000000;\n",
        "        }#T_68266f6e_019b_11eb_a322_5254009891bbrow3_col7,#T_68266f6e_019b_11eb_a322_5254009891bbrow7_col3{\n",
        "            background-color:  #f1ebf5;\n",
        "            color:  #000000;\n",
        "        }#T_68266f6e_019b_11eb_a322_5254009891bbrow3_col11,#T_68266f6e_019b_11eb_a322_5254009891bbrow11_col3{\n",
        "            background-color:  #b8c6e0;\n",
        "            color:  #000000;\n",
        "        }#T_68266f6e_019b_11eb_a322_5254009891bbrow3_col13,#T_68266f6e_019b_11eb_a322_5254009891bbrow13_col3{\n",
        "            background-color:  #f8f1f8;\n",
        "            color:  #000000;\n",
        "        }#T_68266f6e_019b_11eb_a322_5254009891bbrow3_col14,#T_68266f6e_019b_11eb_a322_5254009891bbrow14_col3{\n",
        "            background-color:  #fff7fb;\n",
        "            color:  #000000;\n",
        "        }#T_68266f6e_019b_11eb_a322_5254009891bbrow3_col15,#T_68266f6e_019b_11eb_a322_5254009891bbrow15_col3{\n",
        "            background-color:  #d5d5e8;\n",
        "            color:  #000000;\n",
        "        }#T_68266f6e_019b_11eb_a322_5254009891bbrow3_col16,#T_68266f6e_019b_11eb_a322_5254009891bbrow16_col3{\n",
        "            background-color:  #d2d2e7;\n",
        "            color:  #000000;\n",
        "        }#T_68266f6e_019b_11eb_a322_5254009891bbrow4_col5,#T_68266f6e_019b_11eb_a322_5254009891bbrow5_col4{\n",
        "            background-color:  #84b0d3;\n",
        "            color:  #000000;\n",
        "        }#T_68266f6e_019b_11eb_a322_5254009891bbrow4_col7,#T_68266f6e_019b_11eb_a322_5254009891bbrow7_col4{\n",
        "            background-color:  #a1bbda;\n",
        "            color:  #000000;\n",
        "        }#T_68266f6e_019b_11eb_a322_5254009891bbrow4_col8,#T_68266f6e_019b_11eb_a322_5254009891bbrow8_col4{\n",
        "            background-color:  #c1cae2;\n",
        "            color:  #000000;\n",
        "        }#T_68266f6e_019b_11eb_a322_5254009891bbrow4_col10,#T_68266f6e_019b_11eb_a322_5254009891bbrow10_col4{\n",
        "            background-color:  #a4bcda;\n",
        "            color:  #000000;\n",
        "        }#T_68266f6e_019b_11eb_a322_5254009891bbrow4_col13,#T_68266f6e_019b_11eb_a322_5254009891bbrow13_col4{\n",
        "            background-color:  #a8bedc;\n",
        "            color:  #000000;\n",
        "        }#T_68266f6e_019b_11eb_a322_5254009891bbrow4_col14,#T_68266f6e_019b_11eb_a322_5254009891bbrow14_col4{\n",
        "            background-color:  #d8d7e9;\n",
        "            color:  #000000;\n",
        "        }#T_68266f6e_019b_11eb_a322_5254009891bbrow4_col16,#T_68266f6e_019b_11eb_a322_5254009891bbrow16_col4{\n",
        "            background-color:  #97b7d7;\n",
        "            color:  #000000;\n",
        "        }#T_68266f6e_019b_11eb_a322_5254009891bbrow5_col6,#T_68266f6e_019b_11eb_a322_5254009891bbrow6_col5,#T_68266f6e_019b_11eb_a322_5254009891bbrow8_col11,#T_68266f6e_019b_11eb_a322_5254009891bbrow11_col8{\n",
        "            background-color:  #04649e;\n",
        "            color:  #f1f1f1;\n",
        "        }#T_68266f6e_019b_11eb_a322_5254009891bbrow5_col8,#T_68266f6e_019b_11eb_a322_5254009891bbrow6_col10,#T_68266f6e_019b_11eb_a322_5254009891bbrow8_col5,#T_68266f6e_019b_11eb_a322_5254009891bbrow10_col6{\n",
        "            background-color:  #0c74b2;\n",
        "            color:  #f1f1f1;\n",
        "        }#T_68266f6e_019b_11eb_a322_5254009891bbrow5_col9,#T_68266f6e_019b_11eb_a322_5254009891bbrow6_col11,#T_68266f6e_019b_11eb_a322_5254009891bbrow9_col5,#T_68266f6e_019b_11eb_a322_5254009891bbrow11_col6{\n",
        "            background-color:  #167bb6;\n",
        "            color:  #000000;\n",
        "        }#T_68266f6e_019b_11eb_a322_5254009891bbrow5_col10,#T_68266f6e_019b_11eb_a322_5254009891bbrow10_col5,#T_68266f6e_019b_11eb_a322_5254009891bbrow12_col14,#T_68266f6e_019b_11eb_a322_5254009891bbrow14_col12{\n",
        "            background-color:  #197db7;\n",
        "            color:  #000000;\n",
        "        }#T_68266f6e_019b_11eb_a322_5254009891bbrow5_col11,#T_68266f6e_019b_11eb_a322_5254009891bbrow11_col5{\n",
        "            background-color:  #2484ba;\n",
        "            color:  #000000;\n",
        "        }#T_68266f6e_019b_11eb_a322_5254009891bbrow5_col12,#T_68266f6e_019b_11eb_a322_5254009891bbrow12_col5{\n",
        "            background-color:  #4094c3;\n",
        "            color:  #000000;\n",
        "        }#T_68266f6e_019b_11eb_a322_5254009891bbrow5_col13,#T_68266f6e_019b_11eb_a322_5254009891bbrow13_col5{\n",
        "            background-color:  #056aa6;\n",
        "            color:  #f1f1f1;\n",
        "        }#T_68266f6e_019b_11eb_a322_5254009891bbrow5_col14,#T_68266f6e_019b_11eb_a322_5254009891bbrow14_col5{\n",
        "            background-color:  #2f8bbe;\n",
        "            color:  #000000;\n",
        "        }#T_68266f6e_019b_11eb_a322_5254009891bbrow5_col15,#T_68266f6e_019b_11eb_a322_5254009891bbrow15_col5{\n",
        "            background-color:  #7bacd1;\n",
        "            color:  #000000;\n",
        "        }#T_68266f6e_019b_11eb_a322_5254009891bbrow5_col16,#T_68266f6e_019b_11eb_a322_5254009891bbrow10_col11,#T_68266f6e_019b_11eb_a322_5254009891bbrow11_col10,#T_68266f6e_019b_11eb_a322_5254009891bbrow16_col5{\n",
        "            background-color:  #045b8e;\n",
        "            color:  #f1f1f1;\n",
        "        }#T_68266f6e_019b_11eb_a322_5254009891bbrow6_col7,#T_68266f6e_019b_11eb_a322_5254009891bbrow7_col6{\n",
        "            background-color:  #05659f;\n",
        "            color:  #f1f1f1;\n",
        "        }#T_68266f6e_019b_11eb_a322_5254009891bbrow6_col8,#T_68266f6e_019b_11eb_a322_5254009891bbrow8_col6{\n",
        "            background-color:  #056ba7;\n",
        "            color:  #f1f1f1;\n",
        "        }#T_68266f6e_019b_11eb_a322_5254009891bbrow6_col9,#T_68266f6e_019b_11eb_a322_5254009891bbrow9_col6,#T_68266f6e_019b_11eb_a322_5254009891bbrow9_col10,#T_68266f6e_019b_11eb_a322_5254009891bbrow10_col9{\n",
        "            background-color:  #056fae;\n",
        "            color:  #f1f1f1;\n",
        "        }#T_68266f6e_019b_11eb_a322_5254009891bbrow6_col12,#T_68266f6e_019b_11eb_a322_5254009891bbrow12_col6{\n",
        "            background-color:  #308cbe;\n",
        "            color:  #000000;\n",
        "        }#T_68266f6e_019b_11eb_a322_5254009891bbrow6_col13,#T_68266f6e_019b_11eb_a322_5254009891bbrow8_col9,#T_68266f6e_019b_11eb_a322_5254009891bbrow9_col8,#T_68266f6e_019b_11eb_a322_5254009891bbrow13_col6{\n",
        "            background-color:  #045f95;\n",
        "            color:  #f1f1f1;\n",
        "        }#T_68266f6e_019b_11eb_a322_5254009891bbrow6_col14,#T_68266f6e_019b_11eb_a322_5254009891bbrow11_col12,#T_68266f6e_019b_11eb_a322_5254009891bbrow12_col11,#T_68266f6e_019b_11eb_a322_5254009891bbrow14_col6{\n",
        "            background-color:  #2d8abd;\n",
        "            color:  #000000;\n",
        "        }#T_68266f6e_019b_11eb_a322_5254009891bbrow6_col15,#T_68266f6e_019b_11eb_a322_5254009891bbrow15_col6{\n",
        "            background-color:  #65a3cb;\n",
        "            color:  #000000;\n",
        "        }#T_68266f6e_019b_11eb_a322_5254009891bbrow6_col16,#T_68266f6e_019b_11eb_a322_5254009891bbrow16_col6{\n",
        "            background-color:  #03517e;\n",
        "            color:  #f1f1f1;\n",
        "        }#T_68266f6e_019b_11eb_a322_5254009891bbrow7_col8,#T_68266f6e_019b_11eb_a322_5254009891bbrow8_col7,#T_68266f6e_019b_11eb_a322_5254009891bbrow13_col14,#T_68266f6e_019b_11eb_a322_5254009891bbrow14_col13{\n",
        "            background-color:  #056dab;\n",
        "            color:  #f1f1f1;\n",
        "        }#T_68266f6e_019b_11eb_a322_5254009891bbrow7_col9,#T_68266f6e_019b_11eb_a322_5254009891bbrow7_col12,#T_68266f6e_019b_11eb_a322_5254009891bbrow8_col12,#T_68266f6e_019b_11eb_a322_5254009891bbrow8_col14,#T_68266f6e_019b_11eb_a322_5254009891bbrow9_col7,#T_68266f6e_019b_11eb_a322_5254009891bbrow12_col7,#T_68266f6e_019b_11eb_a322_5254009891bbrow12_col8,#T_68266f6e_019b_11eb_a322_5254009891bbrow14_col8{\n",
        "            background-color:  #2383ba;\n",
        "            color:  #000000;\n",
        "        }#T_68266f6e_019b_11eb_a322_5254009891bbrow7_col10,#T_68266f6e_019b_11eb_a322_5254009891bbrow10_col7,#T_68266f6e_019b_11eb_a322_5254009891bbrow14_col16,#T_68266f6e_019b_11eb_a322_5254009891bbrow16_col14{\n",
        "            background-color:  #2c89bd;\n",
        "            color:  #000000;\n",
        "        }#T_68266f6e_019b_11eb_a322_5254009891bbrow7_col11,#T_68266f6e_019b_11eb_a322_5254009891bbrow11_col7{\n",
        "            background-color:  #2786bb;\n",
        "            color:  #000000;\n",
        "        }#T_68266f6e_019b_11eb_a322_5254009891bbrow7_col13,#T_68266f6e_019b_11eb_a322_5254009891bbrow8_col16,#T_68266f6e_019b_11eb_a322_5254009891bbrow13_col7,#T_68266f6e_019b_11eb_a322_5254009891bbrow16_col8{\n",
        "            background-color:  #045382;\n",
        "            color:  #f1f1f1;\n",
        "        }#T_68266f6e_019b_11eb_a322_5254009891bbrow7_col14,#T_68266f6e_019b_11eb_a322_5254009891bbrow14_col7{\n",
        "            background-color:  #0a73b2;\n",
        "            color:  #f1f1f1;\n",
        "        }#T_68266f6e_019b_11eb_a322_5254009891bbrow7_col15,#T_68266f6e_019b_11eb_a322_5254009891bbrow15_col7{\n",
        "            background-color:  #1c7fb8;\n",
        "            color:  #000000;\n",
        "        }#T_68266f6e_019b_11eb_a322_5254009891bbrow7_col16,#T_68266f6e_019b_11eb_a322_5254009891bbrow16_col7{\n",
        "            background-color:  #04598c;\n",
        "            color:  #f1f1f1;\n",
        "        }#T_68266f6e_019b_11eb_a322_5254009891bbrow8_col10,#T_68266f6e_019b_11eb_a322_5254009891bbrow10_col8{\n",
        "            background-color:  #056caa;\n",
        "            color:  #f1f1f1;\n",
        "        }#T_68266f6e_019b_11eb_a322_5254009891bbrow8_col13,#T_68266f6e_019b_11eb_a322_5254009891bbrow13_col8{\n",
        "            background-color:  #0569a5;\n",
        "            color:  #f1f1f1;\n",
        "        }#T_68266f6e_019b_11eb_a322_5254009891bbrow8_col15,#T_68266f6e_019b_11eb_a322_5254009891bbrow15_col8{\n",
        "            background-color:  #79abd0;\n",
        "            color:  #000000;\n",
        "        }#T_68266f6e_019b_11eb_a322_5254009891bbrow9_col11,#T_68266f6e_019b_11eb_a322_5254009891bbrow11_col9{\n",
        "            background-color:  #0567a2;\n",
        "            color:  #f1f1f1;\n",
        "        }#T_68266f6e_019b_11eb_a322_5254009891bbrow9_col12,#T_68266f6e_019b_11eb_a322_5254009891bbrow12_col9{\n",
        "            background-color:  #3b92c1;\n",
        "            color:  #000000;\n",
        "        }#T_68266f6e_019b_11eb_a322_5254009891bbrow9_col13,#T_68266f6e_019b_11eb_a322_5254009891bbrow12_col15,#T_68266f6e_019b_11eb_a322_5254009891bbrow13_col9,#T_68266f6e_019b_11eb_a322_5254009891bbrow15_col12{\n",
        "            background-color:  #2987bc;\n",
        "            color:  #000000;\n",
        "        }#T_68266f6e_019b_11eb_a322_5254009891bbrow9_col14,#T_68266f6e_019b_11eb_a322_5254009891bbrow11_col13,#T_68266f6e_019b_11eb_a322_5254009891bbrow13_col11,#T_68266f6e_019b_11eb_a322_5254009891bbrow14_col9{\n",
        "            background-color:  #358fc0;\n",
        "            color:  #000000;\n",
        "        }#T_68266f6e_019b_11eb_a322_5254009891bbrow10_col12,#T_68266f6e_019b_11eb_a322_5254009891bbrow12_col10{\n",
        "            background-color:  #1e80b8;\n",
        "            color:  #000000;\n",
        "        }#T_68266f6e_019b_11eb_a322_5254009891bbrow10_col13,#T_68266f6e_019b_11eb_a322_5254009891bbrow13_col10{\n",
        "            background-color:  #4a98c5;\n",
        "            color:  #000000;\n",
        "        }#T_68266f6e_019b_11eb_a322_5254009891bbrow10_col14,#T_68266f6e_019b_11eb_a322_5254009891bbrow14_col10{\n",
        "            background-color:  #73a9cf;\n",
        "            color:  #000000;\n",
        "        }#T_68266f6e_019b_11eb_a322_5254009891bbrow10_col15,#T_68266f6e_019b_11eb_a322_5254009891bbrow15_col10{\n",
        "            background-color:  #6da6cd;\n",
        "            color:  #000000;\n",
        "        }#T_68266f6e_019b_11eb_a322_5254009891bbrow10_col16,#T_68266f6e_019b_11eb_a322_5254009891bbrow16_col10{\n",
        "            background-color:  #045e94;\n",
        "            color:  #f1f1f1;\n",
        "        }#T_68266f6e_019b_11eb_a322_5254009891bbrow11_col14,#T_68266f6e_019b_11eb_a322_5254009891bbrow14_col11{\n",
        "            background-color:  #5ea0ca;\n",
        "            color:  #000000;\n",
        "        }#T_68266f6e_019b_11eb_a322_5254009891bbrow12_col13,#T_68266f6e_019b_11eb_a322_5254009891bbrow13_col12{\n",
        "            background-color:  #2a88bc;\n",
        "            color:  #000000;\n",
        "        }#T_68266f6e_019b_11eb_a322_5254009891bbrow12_col16,#T_68266f6e_019b_11eb_a322_5254009891bbrow16_col12{\n",
        "            background-color:  #0771b1;\n",
        "            color:  #f1f1f1;\n",
        "        }#T_68266f6e_019b_11eb_a322_5254009891bbrow13_col15,#T_68266f6e_019b_11eb_a322_5254009891bbrow15_col13{\n",
        "            background-color:  #1b7eb7;\n",
        "            color:  #000000;\n",
        "        }#T_68266f6e_019b_11eb_a322_5254009891bbrow13_col16,#T_68266f6e_019b_11eb_a322_5254009891bbrow16_col13{\n",
        "            background-color:  #045b8f;\n",
        "            color:  #f1f1f1;\n",
        "        }#T_68266f6e_019b_11eb_a322_5254009891bbrow14_col15,#T_68266f6e_019b_11eb_a322_5254009891bbrow15_col14{\n",
        "            background-color:  #4496c3;\n",
        "            color:  #000000;\n",
        "        }#T_68266f6e_019b_11eb_a322_5254009891bbrow15_col16,#T_68266f6e_019b_11eb_a322_5254009891bbrow16_col15{\n",
        "            background-color:  #4295c3;\n",
        "            color:  #000000;\n",
        "        }</style><table id=\"T_68266f6e_019b_11eb_a322_5254009891bb\" ><thead>    <tr>        <th class=\"blank level0\" ></th>        <th class=\"col_heading level0 col0\" >Rt</th>        <th class=\"col_heading level0 col1\" >theta</th>        <th class=\"col_heading level0 col2\" >kappa</th>        <th class=\"col_heading level0 col3\" >rho</th>        <th class=\"col_heading level0 col4\" >sigma</th>        <th class=\"col_heading level0 col5\" >School_closing</th>        <th class=\"col_heading level0 col6\" >Workplace_closing</th>        <th class=\"col_heading level0 col7\" >Cancel_events</th>        <th class=\"col_heading level0 col8\" >Gatherings_restrictions</th>        <th class=\"col_heading level0 col9\" >Transport_closing</th>        <th class=\"col_heading level0 col10\" >Stay_home_restrictions</th>        <th class=\"col_heading level0 col11\" >Internal_movement_restrictions</th>        <th class=\"col_heading level0 col12\" >International_movement_restrictions</th>        <th class=\"col_heading level0 col13\" >Information_campaigns</th>        <th class=\"col_heading level0 col14\" >Testing_policy</th>        <th class=\"col_heading level0 col15\" >Contact_tracing</th>        <th class=\"col_heading level0 col16\" >Stringency_index</th>    </tr></thead><tbody>\n",
        "                <tr>\n",
        "                        <th id=\"T_68266f6e_019b_11eb_a322_5254009891bblevel0_row0\" class=\"row_heading level0 row0\" >Rt</th>\n",
        "                        <td id=\"T_68266f6e_019b_11eb_a322_5254009891bbrow0_col0\" class=\"data row0 col0\" >1.000000</td>\n",
        "                        <td id=\"T_68266f6e_019b_11eb_a322_5254009891bbrow0_col1\" class=\"data row0 col1\" >-0.280745</td>\n",
        "                        <td id=\"T_68266f6e_019b_11eb_a322_5254009891bbrow0_col2\" class=\"data row0 col2\" >-0.262689</td>\n",
        "                        <td id=\"T_68266f6e_019b_11eb_a322_5254009891bbrow0_col3\" class=\"data row0 col3\" >0.159395</td>\n",
        "                        <td id=\"T_68266f6e_019b_11eb_a322_5254009891bbrow0_col4\" class=\"data row0 col4\" >-0.227061</td>\n",
        "                        <td id=\"T_68266f6e_019b_11eb_a322_5254009891bbrow0_col5\" class=\"data row0 col5\" >-0.059958</td>\n",
        "                        <td id=\"T_68266f6e_019b_11eb_a322_5254009891bbrow0_col6\" class=\"data row0 col6\" >0.069802</td>\n",
        "                        <td id=\"T_68266f6e_019b_11eb_a322_5254009891bbrow0_col7\" class=\"data row0 col7\" >-0.148005</td>\n",
        "                        <td id=\"T_68266f6e_019b_11eb_a322_5254009891bbrow0_col8\" class=\"data row0 col8\" >0.030480</td>\n",
        "                        <td id=\"T_68266f6e_019b_11eb_a322_5254009891bbrow0_col9\" class=\"data row0 col9\" >-0.107574</td>\n",
        "                        <td id=\"T_68266f6e_019b_11eb_a322_5254009891bbrow0_col10\" class=\"data row0 col10\" >-0.149131</td>\n",
        "                        <td id=\"T_68266f6e_019b_11eb_a322_5254009891bbrow0_col11\" class=\"data row0 col11\" >-0.066833</td>\n",
        "                        <td id=\"T_68266f6e_019b_11eb_a322_5254009891bbrow0_col12\" class=\"data row0 col12\" >-0.176332</td>\n",
        "                        <td id=\"T_68266f6e_019b_11eb_a322_5254009891bbrow0_col13\" class=\"data row0 col13\" >0.000577</td>\n",
        "                        <td id=\"T_68266f6e_019b_11eb_a322_5254009891bbrow0_col14\" class=\"data row0 col14\" >-0.076533</td>\n",
        "                        <td id=\"T_68266f6e_019b_11eb_a322_5254009891bbrow0_col15\" class=\"data row0 col15\" >-0.163754</td>\n",
        "                        <td id=\"T_68266f6e_019b_11eb_a322_5254009891bbrow0_col16\" class=\"data row0 col16\" >-0.059984</td>\n",
        "            </tr>\n",
        "            <tr>\n",
        "                        <th id=\"T_68266f6e_019b_11eb_a322_5254009891bblevel0_row1\" class=\"row_heading level0 row1\" >theta</th>\n",
        "                        <td id=\"T_68266f6e_019b_11eb_a322_5254009891bbrow1_col0\" class=\"data row1 col0\" >-0.280745</td>\n",
        "                        <td id=\"T_68266f6e_019b_11eb_a322_5254009891bbrow1_col1\" class=\"data row1 col1\" >1.000000</td>\n",
        "                        <td id=\"T_68266f6e_019b_11eb_a322_5254009891bbrow1_col2\" class=\"data row1 col2\" >0.978404</td>\n",
        "                        <td id=\"T_68266f6e_019b_11eb_a322_5254009891bbrow1_col3\" class=\"data row1 col3\" >0.765308</td>\n",
        "                        <td id=\"T_68266f6e_019b_11eb_a322_5254009891bbrow1_col4\" class=\"data row1 col4\" >-0.030102</td>\n",
        "                        <td id=\"T_68266f6e_019b_11eb_a322_5254009891bbrow1_col5\" class=\"data row1 col5\" >-0.186031</td>\n",
        "                        <td id=\"T_68266f6e_019b_11eb_a322_5254009891bbrow1_col6\" class=\"data row1 col6\" >-0.103018</td>\n",
        "                        <td id=\"T_68266f6e_019b_11eb_a322_5254009891bbrow1_col7\" class=\"data row1 col7\" >-0.253739</td>\n",
        "                        <td id=\"T_68266f6e_019b_11eb_a322_5254009891bbrow1_col8\" class=\"data row1 col8\" >-0.191108</td>\n",
        "                        <td id=\"T_68266f6e_019b_11eb_a322_5254009891bbrow1_col9\" class=\"data row1 col9\" >-0.196902</td>\n",
        "                        <td id=\"T_68266f6e_019b_11eb_a322_5254009891bbrow1_col10\" class=\"data row1 col10\" >0.221331</td>\n",
        "                        <td id=\"T_68266f6e_019b_11eb_a322_5254009891bbrow1_col11\" class=\"data row1 col11\" >0.045164</td>\n",
        "                        <td id=\"T_68266f6e_019b_11eb_a322_5254009891bbrow1_col12\" class=\"data row1 col12\" >0.203281</td>\n",
        "                        <td id=\"T_68266f6e_019b_11eb_a322_5254009891bbrow1_col13\" class=\"data row1 col13\" >-0.335578</td>\n",
        "                        <td id=\"T_68266f6e_019b_11eb_a322_5254009891bbrow1_col14\" class=\"data row1 col14\" >-0.351980</td>\n",
        "                        <td id=\"T_68266f6e_019b_11eb_a322_5254009891bbrow1_col15\" class=\"data row1 col15\" >0.010661</td>\n",
        "                        <td id=\"T_68266f6e_019b_11eb_a322_5254009891bbrow1_col16\" class=\"data row1 col16\" >-0.072823</td>\n",
        "            </tr>\n",
        "            <tr>\n",
        "                        <th id=\"T_68266f6e_019b_11eb_a322_5254009891bblevel0_row2\" class=\"row_heading level0 row2\" >kappa</th>\n",
        "                        <td id=\"T_68266f6e_019b_11eb_a322_5254009891bbrow2_col0\" class=\"data row2 col0\" >-0.262689</td>\n",
        "                        <td id=\"T_68266f6e_019b_11eb_a322_5254009891bbrow2_col1\" class=\"data row2 col1\" >0.978404</td>\n",
        "                        <td id=\"T_68266f6e_019b_11eb_a322_5254009891bbrow2_col2\" class=\"data row2 col2\" >1.000000</td>\n",
        "                        <td id=\"T_68266f6e_019b_11eb_a322_5254009891bbrow2_col3\" class=\"data row2 col3\" >0.769084</td>\n",
        "                        <td id=\"T_68266f6e_019b_11eb_a322_5254009891bbrow2_col4\" class=\"data row2 col4\" >-0.088515</td>\n",
        "                        <td id=\"T_68266f6e_019b_11eb_a322_5254009891bbrow2_col5\" class=\"data row2 col5\" >-0.222422</td>\n",
        "                        <td id=\"T_68266f6e_019b_11eb_a322_5254009891bbrow2_col6\" class=\"data row2 col6\" >-0.154368</td>\n",
        "                        <td id=\"T_68266f6e_019b_11eb_a322_5254009891bbrow2_col7\" class=\"data row2 col7\" >-0.283458</td>\n",
        "                        <td id=\"T_68266f6e_019b_11eb_a322_5254009891bbrow2_col8\" class=\"data row2 col8\" >-0.194354</td>\n",
        "                        <td id=\"T_68266f6e_019b_11eb_a322_5254009891bbrow2_col9\" class=\"data row2 col9\" >-0.211296</td>\n",
        "                        <td id=\"T_68266f6e_019b_11eb_a322_5254009891bbrow2_col10\" class=\"data row2 col10\" >0.205160</td>\n",
        "                        <td id=\"T_68266f6e_019b_11eb_a322_5254009891bbrow2_col11\" class=\"data row2 col11\" >0.022958</td>\n",
        "                        <td id=\"T_68266f6e_019b_11eb_a322_5254009891bbrow2_col12\" class=\"data row2 col12\" >0.219348</td>\n",
        "                        <td id=\"T_68266f6e_019b_11eb_a322_5254009891bbrow2_col13\" class=\"data row2 col13\" >-0.361699</td>\n",
        "                        <td id=\"T_68266f6e_019b_11eb_a322_5254009891bbrow2_col14\" class=\"data row2 col14\" >-0.309038</td>\n",
        "                        <td id=\"T_68266f6e_019b_11eb_a322_5254009891bbrow2_col15\" class=\"data row2 col15\" >0.007210</td>\n",
        "                        <td id=\"T_68266f6e_019b_11eb_a322_5254009891bbrow2_col16\" class=\"data row2 col16\" >-0.117594</td>\n",
        "            </tr>\n",
        "            <tr>\n",
        "                        <th id=\"T_68266f6e_019b_11eb_a322_5254009891bblevel0_row3\" class=\"row_heading level0 row3\" >rho</th>\n",
        "                        <td id=\"T_68266f6e_019b_11eb_a322_5254009891bbrow3_col0\" class=\"data row3 col0\" >0.159395</td>\n",
        "                        <td id=\"T_68266f6e_019b_11eb_a322_5254009891bbrow3_col1\" class=\"data row3 col1\" >0.765308</td>\n",
        "                        <td id=\"T_68266f6e_019b_11eb_a322_5254009891bbrow3_col2\" class=\"data row3 col2\" >0.769084</td>\n",
        "                        <td id=\"T_68266f6e_019b_11eb_a322_5254009891bbrow3_col3\" class=\"data row3 col3\" >1.000000</td>\n",
        "                        <td id=\"T_68266f6e_019b_11eb_a322_5254009891bbrow3_col4\" class=\"data row3 col4\" >0.063693</td>\n",
        "                        <td id=\"T_68266f6e_019b_11eb_a322_5254009891bbrow3_col5\" class=\"data row3 col5\" >-0.148429</td>\n",
        "                        <td id=\"T_68266f6e_019b_11eb_a322_5254009891bbrow3_col6\" class=\"data row3 col6\" >-0.091804</td>\n",
        "                        <td id=\"T_68266f6e_019b_11eb_a322_5254009891bbrow3_col7\" class=\"data row3 col7\" >-0.320120</td>\n",
        "                        <td id=\"T_68266f6e_019b_11eb_a322_5254009891bbrow3_col8\" class=\"data row3 col8\" >-0.164145</td>\n",
        "                        <td id=\"T_68266f6e_019b_11eb_a322_5254009891bbrow3_col9\" class=\"data row3 col9\" >-0.221771</td>\n",
        "                        <td id=\"T_68266f6e_019b_11eb_a322_5254009891bbrow3_col10\" class=\"data row3 col10\" >0.202527</td>\n",
        "                        <td id=\"T_68266f6e_019b_11eb_a322_5254009891bbrow3_col11\" class=\"data row3 col11\" >0.015906</td>\n",
        "                        <td id=\"T_68266f6e_019b_11eb_a322_5254009891bbrow3_col12\" class=\"data row3 col12\" >0.043119</td>\n",
        "                        <td id=\"T_68266f6e_019b_11eb_a322_5254009891bbrow3_col13\" class=\"data row3 col13\" >-0.382707</td>\n",
        "                        <td id=\"T_68266f6e_019b_11eb_a322_5254009891bbrow3_col14\" class=\"data row3 col14\" >-0.452514</td>\n",
        "                        <td id=\"T_68266f6e_019b_11eb_a322_5254009891bbrow3_col15\" class=\"data row3 col15\" >-0.119838</td>\n",
        "                        <td id=\"T_68266f6e_019b_11eb_a322_5254009891bbrow3_col16\" class=\"data row3 col16\" >-0.095536</td>\n",
        "            </tr>\n",
        "            <tr>\n",
        "                        <th id=\"T_68266f6e_019b_11eb_a322_5254009891bblevel0_row4\" class=\"row_heading level0 row4\" >sigma</th>\n",
        "                        <td id=\"T_68266f6e_019b_11eb_a322_5254009891bbrow4_col0\" class=\"data row4 col0\" >-0.227061</td>\n",
        "                        <td id=\"T_68266f6e_019b_11eb_a322_5254009891bbrow4_col1\" class=\"data row4 col1\" >-0.030102</td>\n",
        "                        <td id=\"T_68266f6e_019b_11eb_a322_5254009891bbrow4_col2\" class=\"data row4 col2\" >-0.088515</td>\n",
        "                        <td id=\"T_68266f6e_019b_11eb_a322_5254009891bbrow4_col3\" class=\"data row4 col3\" >0.063693</td>\n",
        "                        <td id=\"T_68266f6e_019b_11eb_a322_5254009891bbrow4_col4\" class=\"data row4 col4\" >1.000000</td>\n",
        "                        <td id=\"T_68266f6e_019b_11eb_a322_5254009891bbrow4_col5\" class=\"data row4 col5\" >0.213814</td>\n",
        "                        <td id=\"T_68266f6e_019b_11eb_a322_5254009891bbrow4_col6\" class=\"data row4 col6\" >0.041590</td>\n",
        "                        <td id=\"T_68266f6e_019b_11eb_a322_5254009891bbrow4_col7\" class=\"data row4 col7\" >0.110252</td>\n",
        "                        <td id=\"T_68266f6e_019b_11eb_a322_5254009891bbrow4_col8\" class=\"data row4 col8\" >-0.024368</td>\n",
        "                        <td id=\"T_68266f6e_019b_11eb_a322_5254009891bbrow4_col9\" class=\"data row4 col9\" >0.035225</td>\n",
        "                        <td id=\"T_68266f6e_019b_11eb_a322_5254009891bbrow4_col10\" class=\"data row4 col10\" >0.099904</td>\n",
        "                        <td id=\"T_68266f6e_019b_11eb_a322_5254009891bbrow4_col11\" class=\"data row4 col11\" >0.000617</td>\n",
        "                        <td id=\"T_68266f6e_019b_11eb_a322_5254009891bbrow4_col12\" class=\"data row4 col12\" >-0.056653</td>\n",
        "                        <td id=\"T_68266f6e_019b_11eb_a322_5254009891bbrow4_col13\" class=\"data row4 col13\" >0.083345</td>\n",
        "                        <td id=\"T_68266f6e_019b_11eb_a322_5254009891bbrow4_col14\" class=\"data row4 col14\" >-0.137451</td>\n",
        "                        <td id=\"T_68266f6e_019b_11eb_a322_5254009891bbrow4_col15\" class=\"data row4 col15\" >0.156871</td>\n",
        "                        <td id=\"T_68266f6e_019b_11eb_a322_5254009891bbrow4_col16\" class=\"data row4 col16\" >0.144196</td>\n",
        "            </tr>\n",
        "            <tr>\n",
        "                        <th id=\"T_68266f6e_019b_11eb_a322_5254009891bblevel0_row5\" class=\"row_heading level0 row5\" >School_closing</th>\n",
        "                        <td id=\"T_68266f6e_019b_11eb_a322_5254009891bbrow5_col0\" class=\"data row5 col0\" >-0.059958</td>\n",
        "                        <td id=\"T_68266f6e_019b_11eb_a322_5254009891bbrow5_col1\" class=\"data row5 col1\" >-0.186031</td>\n",
        "                        <td id=\"T_68266f6e_019b_11eb_a322_5254009891bbrow5_col2\" class=\"data row5 col2\" >-0.222422</td>\n",
        "                        <td id=\"T_68266f6e_019b_11eb_a322_5254009891bbrow5_col3\" class=\"data row5 col3\" >-0.148429</td>\n",
        "                        <td id=\"T_68266f6e_019b_11eb_a322_5254009891bbrow5_col4\" class=\"data row5 col4\" >0.213814</td>\n",
        "                        <td id=\"T_68266f6e_019b_11eb_a322_5254009891bbrow5_col5\" class=\"data row5 col5\" >1.000000</td>\n",
        "                        <td id=\"T_68266f6e_019b_11eb_a322_5254009891bbrow5_col6\" class=\"data row5 col6\" >0.730460</td>\n",
        "                        <td id=\"T_68266f6e_019b_11eb_a322_5254009891bbrow5_col7\" class=\"data row5 col7\" >0.765769</td>\n",
        "                        <td id=\"T_68266f6e_019b_11eb_a322_5254009891bbrow5_col8\" class=\"data row5 col8\" >0.612092</td>\n",
        "                        <td id=\"T_68266f6e_019b_11eb_a322_5254009891bbrow5_col9\" class=\"data row5 col9\" >0.573222</td>\n",
        "                        <td id=\"T_68266f6e_019b_11eb_a322_5254009891bbrow5_col10\" class=\"data row5 col10\" >0.559181</td>\n",
        "                        <td id=\"T_68266f6e_019b_11eb_a322_5254009891bbrow5_col11\" class=\"data row5 col11\" >0.522660</td>\n",
        "                        <td id=\"T_68266f6e_019b_11eb_a322_5254009891bbrow5_col12\" class=\"data row5 col12\" >0.423781</td>\n",
        "                        <td id=\"T_68266f6e_019b_11eb_a322_5254009891bbrow5_col13\" class=\"data row5 col13\" >0.685557</td>\n",
        "                        <td id=\"T_68266f6e_019b_11eb_a322_5254009891bbrow5_col14\" class=\"data row5 col14\" >0.481224</td>\n",
        "                        <td id=\"T_68266f6e_019b_11eb_a322_5254009891bbrow5_col15\" class=\"data row5 col15\" >0.247031</td>\n",
        "                        <td id=\"T_68266f6e_019b_11eb_a322_5254009891bbrow5_col16\" class=\"data row5 col16\" >0.808209</td>\n",
        "            </tr>\n",
        "            <tr>\n",
        "                        <th id=\"T_68266f6e_019b_11eb_a322_5254009891bblevel0_row6\" class=\"row_heading level0 row6\" >Workplace_closing</th>\n",
        "                        <td id=\"T_68266f6e_019b_11eb_a322_5254009891bbrow6_col0\" class=\"data row6 col0\" >0.069802</td>\n",
        "                        <td id=\"T_68266f6e_019b_11eb_a322_5254009891bbrow6_col1\" class=\"data row6 col1\" >-0.103018</td>\n",
        "                        <td id=\"T_68266f6e_019b_11eb_a322_5254009891bbrow6_col2\" class=\"data row6 col2\" >-0.154368</td>\n",
        "                        <td id=\"T_68266f6e_019b_11eb_a322_5254009891bbrow6_col3\" class=\"data row6 col3\" >-0.091804</td>\n",
        "                        <td id=\"T_68266f6e_019b_11eb_a322_5254009891bbrow6_col4\" class=\"data row6 col4\" >0.041590</td>\n",
        "                        <td id=\"T_68266f6e_019b_11eb_a322_5254009891bbrow6_col5\" class=\"data row6 col5\" >0.730460</td>\n",
        "                        <td id=\"T_68266f6e_019b_11eb_a322_5254009891bbrow6_col6\" class=\"data row6 col6\" >1.000000</td>\n",
        "                        <td id=\"T_68266f6e_019b_11eb_a322_5254009891bbrow6_col7\" class=\"data row6 col7\" >0.725044</td>\n",
        "                        <td id=\"T_68266f6e_019b_11eb_a322_5254009891bbrow6_col8\" class=\"data row6 col8\" >0.681966</td>\n",
        "                        <td id=\"T_68266f6e_019b_11eb_a322_5254009891bbrow6_col9\" class=\"data row6 col9\" >0.642920</td>\n",
        "                        <td id=\"T_68266f6e_019b_11eb_a322_5254009891bbrow6_col10\" class=\"data row6 col10\" >0.610120</td>\n",
        "                        <td id=\"T_68266f6e_019b_11eb_a322_5254009891bbrow6_col11\" class=\"data row6 col11\" >0.574419</td>\n",
        "                        <td id=\"T_68266f6e_019b_11eb_a322_5254009891bbrow6_col12\" class=\"data row6 col12\" >0.474556</td>\n",
        "                        <td id=\"T_68266f6e_019b_11eb_a322_5254009891bbrow6_col13\" class=\"data row6 col13\" >0.778235</td>\n",
        "                        <td id=\"T_68266f6e_019b_11eb_a322_5254009891bbrow6_col14\" class=\"data row6 col14\" >0.485130</td>\n",
        "                        <td id=\"T_68266f6e_019b_11eb_a322_5254009891bbrow6_col15\" class=\"data row6 col15\" >0.316188</td>\n",
        "                        <td id=\"T_68266f6e_019b_11eb_a322_5254009891bbrow6_col16\" class=\"data row6 col16\" >0.864908</td>\n",
        "            </tr>\n",
        "            <tr>\n",
        "                        <th id=\"T_68266f6e_019b_11eb_a322_5254009891bblevel0_row7\" class=\"row_heading level0 row7\" >Cancel_events</th>\n",
        "                        <td id=\"T_68266f6e_019b_11eb_a322_5254009891bbrow7_col0\" class=\"data row7 col0\" >-0.148005</td>\n",
        "                        <td id=\"T_68266f6e_019b_11eb_a322_5254009891bbrow7_col1\" class=\"data row7 col1\" >-0.253739</td>\n",
        "                        <td id=\"T_68266f6e_019b_11eb_a322_5254009891bbrow7_col2\" class=\"data row7 col2\" >-0.283458</td>\n",
        "                        <td id=\"T_68266f6e_019b_11eb_a322_5254009891bbrow7_col3\" class=\"data row7 col3\" >-0.320120</td>\n",
        "                        <td id=\"T_68266f6e_019b_11eb_a322_5254009891bbrow7_col4\" class=\"data row7 col4\" >0.110252</td>\n",
        "                        <td id=\"T_68266f6e_019b_11eb_a322_5254009891bbrow7_col5\" class=\"data row7 col5\" >0.765769</td>\n",
        "                        <td id=\"T_68266f6e_019b_11eb_a322_5254009891bbrow7_col6\" class=\"data row7 col6\" >0.725044</td>\n",
        "                        <td id=\"T_68266f6e_019b_11eb_a322_5254009891bbrow7_col7\" class=\"data row7 col7\" >1.000000</td>\n",
        "                        <td id=\"T_68266f6e_019b_11eb_a322_5254009891bbrow7_col8\" class=\"data row7 col8\" >0.663954</td>\n",
        "                        <td id=\"T_68266f6e_019b_11eb_a322_5254009891bbrow7_col9\" class=\"data row7 col9\" >0.524013</td>\n",
        "                        <td id=\"T_68266f6e_019b_11eb_a322_5254009891bbrow7_col10\" class=\"data row7 col10\" >0.493170</td>\n",
        "                        <td id=\"T_68266f6e_019b_11eb_a322_5254009891bbrow7_col11\" class=\"data row7 col11\" >0.509912</td>\n",
        "                        <td id=\"T_68266f6e_019b_11eb_a322_5254009891bbrow7_col12\" class=\"data row7 col12\" >0.527461</td>\n",
        "                        <td id=\"T_68266f6e_019b_11eb_a322_5254009891bbrow7_col13\" class=\"data row7 col13\" >0.854966</td>\n",
        "                        <td id=\"T_68266f6e_019b_11eb_a322_5254009891bbrow7_col14\" class=\"data row7 col14\" >0.615537</td>\n",
        "                        <td id=\"T_68266f6e_019b_11eb_a322_5254009891bbrow7_col15\" class=\"data row7 col15\" >0.547458</td>\n",
        "                        <td id=\"T_68266f6e_019b_11eb_a322_5254009891bbrow7_col16\" class=\"data row7 col16\" >0.821834</td>\n",
        "            </tr>\n",
        "            <tr>\n",
        "                        <th id=\"T_68266f6e_019b_11eb_a322_5254009891bblevel0_row8\" class=\"row_heading level0 row8\" >Gatherings_restrictions</th>\n",
        "                        <td id=\"T_68266f6e_019b_11eb_a322_5254009891bbrow8_col0\" class=\"data row8 col0\" >0.030480</td>\n",
        "                        <td id=\"T_68266f6e_019b_11eb_a322_5254009891bbrow8_col1\" class=\"data row8 col1\" >-0.191108</td>\n",
        "                        <td id=\"T_68266f6e_019b_11eb_a322_5254009891bbrow8_col2\" class=\"data row8 col2\" >-0.194354</td>\n",
        "                        <td id=\"T_68266f6e_019b_11eb_a322_5254009891bbrow8_col3\" class=\"data row8 col3\" >-0.164145</td>\n",
        "                        <td id=\"T_68266f6e_019b_11eb_a322_5254009891bbrow8_col4\" class=\"data row8 col4\" >-0.024368</td>\n",
        "                        <td id=\"T_68266f6e_019b_11eb_a322_5254009891bbrow8_col5\" class=\"data row8 col5\" >0.612092</td>\n",
        "                        <td id=\"T_68266f6e_019b_11eb_a322_5254009891bbrow8_col6\" class=\"data row8 col6\" >0.681966</td>\n",
        "                        <td id=\"T_68266f6e_019b_11eb_a322_5254009891bbrow8_col7\" class=\"data row8 col7\" >0.663954</td>\n",
        "                        <td id=\"T_68266f6e_019b_11eb_a322_5254009891bbrow8_col8\" class=\"data row8 col8\" >1.000000</td>\n",
        "                        <td id=\"T_68266f6e_019b_11eb_a322_5254009891bbrow8_col9\" class=\"data row8 col9\" >0.777875</td>\n",
        "                        <td id=\"T_68266f6e_019b_11eb_a322_5254009891bbrow8_col10\" class=\"data row8 col10\" >0.666556</td>\n",
        "                        <td id=\"T_68266f6e_019b_11eb_a322_5254009891bbrow8_col11\" class=\"data row8 col11\" >0.732781</td>\n",
        "                        <td id=\"T_68266f6e_019b_11eb_a322_5254009891bbrow8_col12\" class=\"data row8 col12\" >0.524700</td>\n",
        "                        <td id=\"T_68266f6e_019b_11eb_a322_5254009891bbrow8_col13\" class=\"data row8 col13\" >0.690731</td>\n",
        "                        <td id=\"T_68266f6e_019b_11eb_a322_5254009891bbrow8_col14\" class=\"data row8 col14\" >0.528543</td>\n",
        "                        <td id=\"T_68266f6e_019b_11eb_a322_5254009891bbrow8_col15\" class=\"data row8 col15\" >0.252224</td>\n",
        "                        <td id=\"T_68266f6e_019b_11eb_a322_5254009891bbrow8_col16\" class=\"data row8 col16\" >0.857744</td>\n",
        "            </tr>\n",
        "            <tr>\n",
        "                        <th id=\"T_68266f6e_019b_11eb_a322_5254009891bblevel0_row9\" class=\"row_heading level0 row9\" >Transport_closing</th>\n",
        "                        <td id=\"T_68266f6e_019b_11eb_a322_5254009891bbrow9_col0\" class=\"data row9 col0\" >-0.107574</td>\n",
        "                        <td id=\"T_68266f6e_019b_11eb_a322_5254009891bbrow9_col1\" class=\"data row9 col1\" >-0.196902</td>\n",
        "                        <td id=\"T_68266f6e_019b_11eb_a322_5254009891bbrow9_col2\" class=\"data row9 col2\" >-0.211296</td>\n",
        "                        <td id=\"T_68266f6e_019b_11eb_a322_5254009891bbrow9_col3\" class=\"data row9 col3\" >-0.221771</td>\n",
        "                        <td id=\"T_68266f6e_019b_11eb_a322_5254009891bbrow9_col4\" class=\"data row9 col4\" >0.035225</td>\n",
        "                        <td id=\"T_68266f6e_019b_11eb_a322_5254009891bbrow9_col5\" class=\"data row9 col5\" >0.573222</td>\n",
        "                        <td id=\"T_68266f6e_019b_11eb_a322_5254009891bbrow9_col6\" class=\"data row9 col6\" >0.642920</td>\n",
        "                        <td id=\"T_68266f6e_019b_11eb_a322_5254009891bbrow9_col7\" class=\"data row9 col7\" >0.524013</td>\n",
        "                        <td id=\"T_68266f6e_019b_11eb_a322_5254009891bbrow9_col8\" class=\"data row9 col8\" >0.777875</td>\n",
        "                        <td id=\"T_68266f6e_019b_11eb_a322_5254009891bbrow9_col9\" class=\"data row9 col9\" >1.000000</td>\n",
        "                        <td id=\"T_68266f6e_019b_11eb_a322_5254009891bbrow9_col10\" class=\"data row9 col10\" >0.647820</td>\n",
        "                        <td id=\"T_68266f6e_019b_11eb_a322_5254009891bbrow9_col11\" class=\"data row9 col11\" >0.707992</td>\n",
        "                        <td id=\"T_68266f6e_019b_11eb_a322_5254009891bbrow9_col12\" class=\"data row9 col12\" >0.440094</td>\n",
        "                        <td id=\"T_68266f6e_019b_11eb_a322_5254009891bbrow9_col13\" class=\"data row9 col13\" >0.502827</td>\n",
        "                        <td id=\"T_68266f6e_019b_11eb_a322_5254009891bbrow9_col14\" class=\"data row9 col14\" >0.459193</td>\n",
        "                        <td id=\"T_68266f6e_019b_11eb_a322_5254009891bbrow9_col15\" class=\"data row9 col15\" >0.034041</td>\n",
        "                        <td id=\"T_68266f6e_019b_11eb_a322_5254009891bbrow9_col16\" class=\"data row9 col16\" >0.769688</td>\n",
        "            </tr>\n",
        "            <tr>\n",
        "                        <th id=\"T_68266f6e_019b_11eb_a322_5254009891bblevel0_row10\" class=\"row_heading level0 row10\" >Stay_home_restrictions</th>\n",
        "                        <td id=\"T_68266f6e_019b_11eb_a322_5254009891bbrow10_col0\" class=\"data row10 col0\" >-0.149131</td>\n",
        "                        <td id=\"T_68266f6e_019b_11eb_a322_5254009891bbrow10_col1\" class=\"data row10 col1\" >0.221331</td>\n",
        "                        <td id=\"T_68266f6e_019b_11eb_a322_5254009891bbrow10_col2\" class=\"data row10 col2\" >0.205160</td>\n",
        "                        <td id=\"T_68266f6e_019b_11eb_a322_5254009891bbrow10_col3\" class=\"data row10 col3\" >0.202527</td>\n",
        "                        <td id=\"T_68266f6e_019b_11eb_a322_5254009891bbrow10_col4\" class=\"data row10 col4\" >0.099904</td>\n",
        "                        <td id=\"T_68266f6e_019b_11eb_a322_5254009891bbrow10_col5\" class=\"data row10 col5\" >0.559181</td>\n",
        "                        <td id=\"T_68266f6e_019b_11eb_a322_5254009891bbrow10_col6\" class=\"data row10 col6\" >0.610120</td>\n",
        "                        <td id=\"T_68266f6e_019b_11eb_a322_5254009891bbrow10_col7\" class=\"data row10 col7\" >0.493170</td>\n",
        "                        <td id=\"T_68266f6e_019b_11eb_a322_5254009891bbrow10_col8\" class=\"data row10 col8\" >0.666556</td>\n",
        "                        <td id=\"T_68266f6e_019b_11eb_a322_5254009891bbrow10_col9\" class=\"data row10 col9\" >0.647820</td>\n",
        "                        <td id=\"T_68266f6e_019b_11eb_a322_5254009891bbrow10_col10\" class=\"data row10 col10\" >1.000000</td>\n",
        "                        <td id=\"T_68266f6e_019b_11eb_a322_5254009891bbrow10_col11\" class=\"data row10 col11\" >0.809283</td>\n",
        "                        <td id=\"T_68266f6e_019b_11eb_a322_5254009891bbrow10_col12\" class=\"data row10 col12\" >0.540850</td>\n",
        "                        <td id=\"T_68266f6e_019b_11eb_a322_5254009891bbrow10_col13\" class=\"data row10 col13\" >0.395477</td>\n",
        "                        <td id=\"T_68266f6e_019b_11eb_a322_5254009891bbrow10_col14\" class=\"data row10 col14\" >0.276109</td>\n",
        "                        <td id=\"T_68266f6e_019b_11eb_a322_5254009891bbrow10_col15\" class=\"data row10 col15\" >0.291789</td>\n",
        "                        <td id=\"T_68266f6e_019b_11eb_a322_5254009891bbrow10_col16\" class=\"data row10 col16\" >0.783890</td>\n",
        "            </tr>\n",
        "            <tr>\n",
        "                        <th id=\"T_68266f6e_019b_11eb_a322_5254009891bblevel0_row11\" class=\"row_heading level0 row11\" >Internal_movement_restrictions</th>\n",
        "                        <td id=\"T_68266f6e_019b_11eb_a322_5254009891bbrow11_col0\" class=\"data row11 col0\" >-0.066833</td>\n",
        "                        <td id=\"T_68266f6e_019b_11eb_a322_5254009891bbrow11_col1\" class=\"data row11 col1\" >0.045164</td>\n",
        "                        <td id=\"T_68266f6e_019b_11eb_a322_5254009891bbrow11_col2\" class=\"data row11 col2\" >0.022958</td>\n",
        "                        <td id=\"T_68266f6e_019b_11eb_a322_5254009891bbrow11_col3\" class=\"data row11 col3\" >0.015906</td>\n",
        "                        <td id=\"T_68266f6e_019b_11eb_a322_5254009891bbrow11_col4\" class=\"data row11 col4\" >0.000617</td>\n",
        "                        <td id=\"T_68266f6e_019b_11eb_a322_5254009891bbrow11_col5\" class=\"data row11 col5\" >0.522660</td>\n",
        "                        <td id=\"T_68266f6e_019b_11eb_a322_5254009891bbrow11_col6\" class=\"data row11 col6\" >0.574419</td>\n",
        "                        <td id=\"T_68266f6e_019b_11eb_a322_5254009891bbrow11_col7\" class=\"data row11 col7\" >0.509912</td>\n",
        "                        <td id=\"T_68266f6e_019b_11eb_a322_5254009891bbrow11_col8\" class=\"data row11 col8\" >0.732781</td>\n",
        "                        <td id=\"T_68266f6e_019b_11eb_a322_5254009891bbrow11_col9\" class=\"data row11 col9\" >0.707992</td>\n",
        "                        <td id=\"T_68266f6e_019b_11eb_a322_5254009891bbrow11_col10\" class=\"data row11 col10\" >0.809283</td>\n",
        "                        <td id=\"T_68266f6e_019b_11eb_a322_5254009891bbrow11_col11\" class=\"data row11 col11\" >1.000000</td>\n",
        "                        <td id=\"T_68266f6e_019b_11eb_a322_5254009891bbrow11_col12\" class=\"data row11 col12\" >0.488664</td>\n",
        "                        <td id=\"T_68266f6e_019b_11eb_a322_5254009891bbrow11_col13\" class=\"data row11 col13\" >0.455888</td>\n",
        "                        <td id=\"T_68266f6e_019b_11eb_a322_5254009891bbrow11_col14\" class=\"data row11 col14\" >0.341029</td>\n",
        "                        <td id=\"T_68266f6e_019b_11eb_a322_5254009891bbrow11_col15\" class=\"data row11 col15\" >0.202378</td>\n",
        "                        <td id=\"T_68266f6e_019b_11eb_a322_5254009891bbrow11_col16\" class=\"data row11 col16\" >0.766092</td>\n",
        "            </tr>\n",
        "            <tr>\n",
        "                        <th id=\"T_68266f6e_019b_11eb_a322_5254009891bblevel0_row12\" class=\"row_heading level0 row12\" >International_movement_restrictions</th>\n",
        "                        <td id=\"T_68266f6e_019b_11eb_a322_5254009891bbrow12_col0\" class=\"data row12 col0\" >-0.176332</td>\n",
        "                        <td id=\"T_68266f6e_019b_11eb_a322_5254009891bbrow12_col1\" class=\"data row12 col1\" >0.203281</td>\n",
        "                        <td id=\"T_68266f6e_019b_11eb_a322_5254009891bbrow12_col2\" class=\"data row12 col2\" >0.219348</td>\n",
        "                        <td id=\"T_68266f6e_019b_11eb_a322_5254009891bbrow12_col3\" class=\"data row12 col3\" >0.043119</td>\n",
        "                        <td id=\"T_68266f6e_019b_11eb_a322_5254009891bbrow12_col4\" class=\"data row12 col4\" >-0.056653</td>\n",
        "                        <td id=\"T_68266f6e_019b_11eb_a322_5254009891bbrow12_col5\" class=\"data row12 col5\" >0.423781</td>\n",
        "                        <td id=\"T_68266f6e_019b_11eb_a322_5254009891bbrow12_col6\" class=\"data row12 col6\" >0.474556</td>\n",
        "                        <td id=\"T_68266f6e_019b_11eb_a322_5254009891bbrow12_col7\" class=\"data row12 col7\" >0.527461</td>\n",
        "                        <td id=\"T_68266f6e_019b_11eb_a322_5254009891bbrow12_col8\" class=\"data row12 col8\" >0.524700</td>\n",
        "                        <td id=\"T_68266f6e_019b_11eb_a322_5254009891bbrow12_col9\" class=\"data row12 col9\" >0.440094</td>\n",
        "                        <td id=\"T_68266f6e_019b_11eb_a322_5254009891bbrow12_col10\" class=\"data row12 col10\" >0.540850</td>\n",
        "                        <td id=\"T_68266f6e_019b_11eb_a322_5254009891bbrow12_col11\" class=\"data row12 col11\" >0.488664</td>\n",
        "                        <td id=\"T_68266f6e_019b_11eb_a322_5254009891bbrow12_col12\" class=\"data row12 col12\" >1.000000</td>\n",
        "                        <td id=\"T_68266f6e_019b_11eb_a322_5254009891bbrow12_col13\" class=\"data row12 col13\" >0.498112</td>\n",
        "                        <td id=\"T_68266f6e_019b_11eb_a322_5254009891bbrow12_col14\" class=\"data row12 col14\" >0.559595</td>\n",
        "                        <td id=\"T_68266f6e_019b_11eb_a322_5254009891bbrow12_col15\" class=\"data row12 col15\" >0.501608</td>\n",
        "                        <td id=\"T_68266f6e_019b_11eb_a322_5254009891bbrow12_col16\" class=\"data row12 col16\" >0.630836</td>\n",
        "            </tr>\n",
        "            <tr>\n",
        "                        <th id=\"T_68266f6e_019b_11eb_a322_5254009891bblevel0_row13\" class=\"row_heading level0 row13\" >Information_campaigns</th>\n",
        "                        <td id=\"T_68266f6e_019b_11eb_a322_5254009891bbrow13_col0\" class=\"data row13 col0\" >0.000577</td>\n",
        "                        <td id=\"T_68266f6e_019b_11eb_a322_5254009891bbrow13_col1\" class=\"data row13 col1\" >-0.335578</td>\n",
        "                        <td id=\"T_68266f6e_019b_11eb_a322_5254009891bbrow13_col2\" class=\"data row13 col2\" >-0.361699</td>\n",
        "                        <td id=\"T_68266f6e_019b_11eb_a322_5254009891bbrow13_col3\" class=\"data row13 col3\" >-0.382707</td>\n",
        "                        <td id=\"T_68266f6e_019b_11eb_a322_5254009891bbrow13_col4\" class=\"data row13 col4\" >0.083345</td>\n",
        "                        <td id=\"T_68266f6e_019b_11eb_a322_5254009891bbrow13_col5\" class=\"data row13 col5\" >0.685557</td>\n",
        "                        <td id=\"T_68266f6e_019b_11eb_a322_5254009891bbrow13_col6\" class=\"data row13 col6\" >0.778235</td>\n",
        "                        <td id=\"T_68266f6e_019b_11eb_a322_5254009891bbrow13_col7\" class=\"data row13 col7\" >0.854966</td>\n",
        "                        <td id=\"T_68266f6e_019b_11eb_a322_5254009891bbrow13_col8\" class=\"data row13 col8\" >0.690731</td>\n",
        "                        <td id=\"T_68266f6e_019b_11eb_a322_5254009891bbrow13_col9\" class=\"data row13 col9\" >0.502827</td>\n",
        "                        <td id=\"T_68266f6e_019b_11eb_a322_5254009891bbrow13_col10\" class=\"data row13 col10\" >0.395477</td>\n",
        "                        <td id=\"T_68266f6e_019b_11eb_a322_5254009891bbrow13_col11\" class=\"data row13 col11\" >0.455888</td>\n",
        "                        <td id=\"T_68266f6e_019b_11eb_a322_5254009891bbrow13_col12\" class=\"data row13 col12\" >0.498112</td>\n",
        "                        <td id=\"T_68266f6e_019b_11eb_a322_5254009891bbrow13_col13\" class=\"data row13 col13\" >1.000000</td>\n",
        "                        <td id=\"T_68266f6e_019b_11eb_a322_5254009891bbrow13_col14\" class=\"data row13 col14\" >0.659788</td>\n",
        "                        <td id=\"T_68266f6e_019b_11eb_a322_5254009891bbrow13_col15\" class=\"data row13 col15\" >0.553799</td>\n",
        "                        <td id=\"T_68266f6e_019b_11eb_a322_5254009891bbrow13_col16\" class=\"data row13 col16\" >0.801649</td>\n",
        "            </tr>\n",
        "            <tr>\n",
        "                        <th id=\"T_68266f6e_019b_11eb_a322_5254009891bblevel0_row14\" class=\"row_heading level0 row14\" >Testing_policy</th>\n",
        "                        <td id=\"T_68266f6e_019b_11eb_a322_5254009891bbrow14_col0\" class=\"data row14 col0\" >-0.076533</td>\n",
        "                        <td id=\"T_68266f6e_019b_11eb_a322_5254009891bbrow14_col1\" class=\"data row14 col1\" >-0.351980</td>\n",
        "                        <td id=\"T_68266f6e_019b_11eb_a322_5254009891bbrow14_col2\" class=\"data row14 col2\" >-0.309038</td>\n",
        "                        <td id=\"T_68266f6e_019b_11eb_a322_5254009891bbrow14_col3\" class=\"data row14 col3\" >-0.452514</td>\n",
        "                        <td id=\"T_68266f6e_019b_11eb_a322_5254009891bbrow14_col4\" class=\"data row14 col4\" >-0.137451</td>\n",
        "                        <td id=\"T_68266f6e_019b_11eb_a322_5254009891bbrow14_col5\" class=\"data row14 col5\" >0.481224</td>\n",
        "                        <td id=\"T_68266f6e_019b_11eb_a322_5254009891bbrow14_col6\" class=\"data row14 col6\" >0.485130</td>\n",
        "                        <td id=\"T_68266f6e_019b_11eb_a322_5254009891bbrow14_col7\" class=\"data row14 col7\" >0.615537</td>\n",
        "                        <td id=\"T_68266f6e_019b_11eb_a322_5254009891bbrow14_col8\" class=\"data row14 col8\" >0.528543</td>\n",
        "                        <td id=\"T_68266f6e_019b_11eb_a322_5254009891bbrow14_col9\" class=\"data row14 col9\" >0.459193</td>\n",
        "                        <td id=\"T_68266f6e_019b_11eb_a322_5254009891bbrow14_col10\" class=\"data row14 col10\" >0.276109</td>\n",
        "                        <td id=\"T_68266f6e_019b_11eb_a322_5254009891bbrow14_col11\" class=\"data row14 col11\" >0.341029</td>\n",
        "                        <td id=\"T_68266f6e_019b_11eb_a322_5254009891bbrow14_col12\" class=\"data row14 col12\" >0.559595</td>\n",
        "                        <td id=\"T_68266f6e_019b_11eb_a322_5254009891bbrow14_col13\" class=\"data row14 col13\" >0.659788</td>\n",
        "                        <td id=\"T_68266f6e_019b_11eb_a322_5254009891bbrow14_col14\" class=\"data row14 col14\" >1.000000</td>\n",
        "                        <td id=\"T_68266f6e_019b_11eb_a322_5254009891bbrow14_col15\" class=\"data row14 col15\" >0.410755</td>\n",
        "                        <td id=\"T_68266f6e_019b_11eb_a322_5254009891bbrow14_col16\" class=\"data row14 col16\" >0.489511</td>\n",
        "            </tr>\n",
        "            <tr>\n",
        "                        <th id=\"T_68266f6e_019b_11eb_a322_5254009891bblevel0_row15\" class=\"row_heading level0 row15\" >Contact_tracing</th>\n",
        "                        <td id=\"T_68266f6e_019b_11eb_a322_5254009891bbrow15_col0\" class=\"data row15 col0\" >-0.163754</td>\n",
        "                        <td id=\"T_68266f6e_019b_11eb_a322_5254009891bbrow15_col1\" class=\"data row15 col1\" >0.010661</td>\n",
        "                        <td id=\"T_68266f6e_019b_11eb_a322_5254009891bbrow15_col2\" class=\"data row15 col2\" >0.007210</td>\n",
        "                        <td id=\"T_68266f6e_019b_11eb_a322_5254009891bbrow15_col3\" class=\"data row15 col3\" >-0.119838</td>\n",
        "                        <td id=\"T_68266f6e_019b_11eb_a322_5254009891bbrow15_col4\" class=\"data row15 col4\" >0.156871</td>\n",
        "                        <td id=\"T_68266f6e_019b_11eb_a322_5254009891bbrow15_col5\" class=\"data row15 col5\" >0.247031</td>\n",
        "                        <td id=\"T_68266f6e_019b_11eb_a322_5254009891bbrow15_col6\" class=\"data row15 col6\" >0.316188</td>\n",
        "                        <td id=\"T_68266f6e_019b_11eb_a322_5254009891bbrow15_col7\" class=\"data row15 col7\" >0.547458</td>\n",
        "                        <td id=\"T_68266f6e_019b_11eb_a322_5254009891bbrow15_col8\" class=\"data row15 col8\" >0.252224</td>\n",
        "                        <td id=\"T_68266f6e_019b_11eb_a322_5254009891bbrow15_col9\" class=\"data row15 col9\" >0.034041</td>\n",
        "                        <td id=\"T_68266f6e_019b_11eb_a322_5254009891bbrow15_col10\" class=\"data row15 col10\" >0.291789</td>\n",
        "                        <td id=\"T_68266f6e_019b_11eb_a322_5254009891bbrow15_col11\" class=\"data row15 col11\" >0.202378</td>\n",
        "                        <td id=\"T_68266f6e_019b_11eb_a322_5254009891bbrow15_col12\" class=\"data row15 col12\" >0.501608</td>\n",
        "                        <td id=\"T_68266f6e_019b_11eb_a322_5254009891bbrow15_col13\" class=\"data row15 col13\" >0.553799</td>\n",
        "                        <td id=\"T_68266f6e_019b_11eb_a322_5254009891bbrow15_col14\" class=\"data row15 col14\" >0.410755</td>\n",
        "                        <td id=\"T_68266f6e_019b_11eb_a322_5254009891bbrow15_col15\" class=\"data row15 col15\" >1.000000</td>\n",
        "                        <td id=\"T_68266f6e_019b_11eb_a322_5254009891bbrow15_col16\" class=\"data row15 col16\" >0.416307</td>\n",
        "            </tr>\n",
        "            <tr>\n",
        "                        <th id=\"T_68266f6e_019b_11eb_a322_5254009891bblevel0_row16\" class=\"row_heading level0 row16\" >Stringency_index</th>\n",
        "                        <td id=\"T_68266f6e_019b_11eb_a322_5254009891bbrow16_col0\" class=\"data row16 col0\" >-0.059984</td>\n",
        "                        <td id=\"T_68266f6e_019b_11eb_a322_5254009891bbrow16_col1\" class=\"data row16 col1\" >-0.072823</td>\n",
        "                        <td id=\"T_68266f6e_019b_11eb_a322_5254009891bbrow16_col2\" class=\"data row16 col2\" >-0.117594</td>\n",
        "                        <td id=\"T_68266f6e_019b_11eb_a322_5254009891bbrow16_col3\" class=\"data row16 col3\" >-0.095536</td>\n",
        "                        <td id=\"T_68266f6e_019b_11eb_a322_5254009891bbrow16_col4\" class=\"data row16 col4\" >0.144196</td>\n",
        "                        <td id=\"T_68266f6e_019b_11eb_a322_5254009891bbrow16_col5\" class=\"data row16 col5\" >0.808209</td>\n",
        "                        <td id=\"T_68266f6e_019b_11eb_a322_5254009891bbrow16_col6\" class=\"data row16 col6\" >0.864908</td>\n",
        "                        <td id=\"T_68266f6e_019b_11eb_a322_5254009891bbrow16_col7\" class=\"data row16 col7\" >0.821834</td>\n",
        "                        <td id=\"T_68266f6e_019b_11eb_a322_5254009891bbrow16_col8\" class=\"data row16 col8\" >0.857744</td>\n",
        "                        <td id=\"T_68266f6e_019b_11eb_a322_5254009891bbrow16_col9\" class=\"data row16 col9\" >0.769688</td>\n",
        "                        <td id=\"T_68266f6e_019b_11eb_a322_5254009891bbrow16_col10\" class=\"data row16 col10\" >0.783890</td>\n",
        "                        <td id=\"T_68266f6e_019b_11eb_a322_5254009891bbrow16_col11\" class=\"data row16 col11\" >0.766092</td>\n",
        "                        <td id=\"T_68266f6e_019b_11eb_a322_5254009891bbrow16_col12\" class=\"data row16 col12\" >0.630836</td>\n",
        "                        <td id=\"T_68266f6e_019b_11eb_a322_5254009891bbrow16_col13\" class=\"data row16 col13\" >0.801649</td>\n",
        "                        <td id=\"T_68266f6e_019b_11eb_a322_5254009891bbrow16_col14\" class=\"data row16 col14\" >0.489511</td>\n",
        "                        <td id=\"T_68266f6e_019b_11eb_a322_5254009891bbrow16_col15\" class=\"data row16 col15\" >0.416307</td>\n",
        "                        <td id=\"T_68266f6e_019b_11eb_a322_5254009891bbrow16_col16\" class=\"data row16 col16\" >1.000000</td>\n",
        "            </tr>\n",
        "    </tbody></table>"
       ],
       "output_type": "pyout",
       "prompt_number": 21,
       "text": [
        "<pandas.io.formats.style.Styler at 0x7fa914411ac0>"
       ]
      }
     ],
     "prompt_number": 21
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "# Scatter plot of Stringency index and Rt\n",
      "df = track_df.copy()\n",
      "sns.scatterplot(data=df, x=\"Stringency_index\", y=\"Rt\", hue=\"Country\", legend=\"brief\", marker=\"+\")\n",
      "bbox_to_anchor=(1.02, 0)\n",
      "bbox_loc=\"lower left\"\n",
      "plt.legend(bbox_to_anchor=bbox_to_anchor, loc=bbox_loc, borderaxespad=0)\n",
      "plt.title(\"Relationship of Stringency index and reproduction number\")\n",
      "plt.ylabel(\"Reproduction number\")\n",
      "plt.xlabel(\"Stringency index\")\n",
      "plt.show()"
     ],
     "language": "python",
     "metadata": {},
     "outputs": [
      {
       "output_type": "display_data",
       "png": "\n",
       "text": [
        "<Figure size 432x288 with 1 Axes>"
       ]
      }
     ],
     "prompt_number": 22
    }
   ],
   "metadata": {}
  }
 ]
}
