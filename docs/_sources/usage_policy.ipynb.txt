{
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3.8.2 64-bit ('.venv': venv)",
   "name": "python_defaultSpec_1597669925034"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.8.2-final"
  },
  "name": ""
 },
 "nbformat": 3,
 "nbformat_minor": 0,
 "worksheets": [
  {
   "cells": [
    {
     "cell_type": "markdown",
     "metadata": {},
     "source": [
      "# Usage (details: policy measures)\n",
      "Here, we will analyse the relationship of policy measures and parameter values of SIR-derived ODE models. Policy measures are tracked by [Oxford Covid-19 Government Response Tracker (OxCGRT)](https://github.com/OxCGRT/covid-policy-tracker)."
     ]
    },
    {
     "cell_type": "heading",
     "level": 2,
     "metadata": {},
     "source": [
      "Preparation"
     ]
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "# Standard users\n",
      "# !pip install covsirphy\n",
      "# Developers (Note: this notebook is in example directory)\n",
      "import os\n",
      "os.chdir(\"../\")"
     ],
     "language": "python",
     "metadata": {},
     "outputs": [],
     "prompt_number": 1
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "from pprint import pprint"
     ],
     "language": "python",
     "metadata": {},
     "outputs": [],
     "prompt_number": 2
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "import covsirphy as cs\n",
      "cs.__version__"
     ],
     "language": "python",
     "metadata": {},
     "outputs": [
      {
       "output_type": "pyout",
       "prompt_number": 3,
       "text": [
        "'2.8.3-alpha.new.224'"
       ]
      }
     ],
     "prompt_number": 3
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "# Standard users and developers\n",
      "data_loader = cs.DataLoader(\"input\")\n",
      "# The number of cases (JHU style)\n",
      "jhu_data = data_loader.jhu(verbose=False)\n",
      "# Population in each country\n",
      "population_data = data_loader.population(verbose=False)\n",
      "# Government Response Tracker (OxCGRT)\n",
      "oxcgrt_data = data_loader.oxcgrt(verbose=False)\n",
      "# Description/citation\n",
      "print(oxcgrt_data.citation)"
     ],
     "language": "python",
     "metadata": {
      "tags": []
     },
     "outputs": [
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "(Secondary source) Guidotti, E., Ardia, D., (2020), \"COVID-19 Data Hub\", Journal of Open Source Software 5(51):2376, doi: 10.21105/joss.02376.\n",
        "We can get Citation list of primary sources with DataLoader(...).covid19dh_citation"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      }
     ],
     "prompt_number": 4
    },
    {
     "cell_type": "markdown",
     "metadata": {},
     "source": [
      "## Class for policy measure analysis\n",
      "We will `PolicyMeasures` class to find relationship of policy measures and parameter values of SIR-derived ODE models."
     ]
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "# Create analyser with tau value 360 [min] (can be changed)\n",
      "analyser = cs.PolicyMeasures(jhu_data, population_data, oxcgrt_data, tau=360)\n",
      "# The number of registerd countries\n",
      "len(analyser.countries)"
     ],
     "language": "python",
     "metadata": {
      "tags": []
     },
     "outputs": [
      {
       "output_type": "pyout",
       "prompt_number": 5,
       "text": [
        "184"
       ]
      }
     ],
     "prompt_number": 5
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "# We can get Scenario instance for detailed scenario analysis\n",
      "type(analyser.scenario(\"Japan\"))"
     ],
     "language": "python",
     "metadata": {},
     "outputs": [
      {
       "output_type": "pyout",
       "prompt_number": 6,
       "text": [
        "covsirphy.analysis.scenario.Scenario"
       ]
      }
     ],
     "prompt_number": 6
    },
    {
     "cell_type": "markdown",
     "metadata": {},
     "source": [
      "## Set phases with S-R trend analysis\n",
      "We will perform S-R trend analysis to set phases in all countries. Countries which do not have **12th phases** will be un-registered for the next analysis. This number will be adjusted for your analysis."
     ]
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "# Show the number of phases of all countries\n",
      "analyser.trend()\n",
      "pprint(analyser.phase_len(), compact=True)"
     ],
     "language": "python",
     "metadata": {},
     "outputs": [
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "{"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "3"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ": "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "['Holy See']"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        " "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "4"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ": "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "['Tanzania', 'Hungary']"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        " "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "5"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ": "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "["
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Seychelles'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Jordan'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Grenada'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Papua New Guinea'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Myanmar'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Fiji'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        "     "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Brunei'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Uganda'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Georgia'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "]"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        " "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "6"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ": "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "["
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Equatorial Guinea'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Jamaica'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Montenegro'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Mauritius'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Dominica'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        "     "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Slovenia'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Slovakia'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Yemen'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Cambodia'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Belize'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        "     "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Antigua and Barbuda'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Tunisia'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Ireland'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Libya'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "]"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        " "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "7"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ": "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "["
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'South Sudan'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Paraguay'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Lebanon'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Sao Tome and Principe'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        "     "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Netherlands'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Namibia'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Guyana'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Zimbabwe'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Cyprus'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Mongolia'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        "     "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Saint Vincent and the Grenadines'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Trinidad and Tobago'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Burundi'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        "     "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Gambia'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Andorra'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Australia'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'San Marino'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Angola'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Botswana'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        "     "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Central African Republic'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'New Zealand'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Czech Republic'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Monaco'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        "     "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Bahamas'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Colombia'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Spain'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Kazakhstan'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Lesotho'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Malawi'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "]"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        " "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "8"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ": "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "["
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Nepal'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Nicaragua'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Niger'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Thailand'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Guinea-Bissau'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Eritrea'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        "     "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Madagascar'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Saint Lucia'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Sudan'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Kyrgyzstan'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Ukraine'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        "     "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Luxembourg'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Zambia'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Comoros'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Djibouti'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Argentina'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Afghanistan'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        "     "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Denmark'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Rwanda'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Iceland'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Morocco'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Lithuania'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Mozambique'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        "     "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Benin'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Vietnam'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Liechtenstein'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Israel'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Kenya'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Palestine'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        "     "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Ethiopia'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "]"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        " "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "9"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ": "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "["
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Tajikistan'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Haiti'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Austria'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Greece'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Bermuda'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Ecuador'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        "     "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Venezuela'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Cameroon'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Norway'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Costa Rica'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'China'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'El Salvador'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        "     "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Syria'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Bhutan'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Malta'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Korea, South'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Philippines'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Ghana'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        "     "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Swaziland'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Barbados'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Maldives'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Croatia'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Japan'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Chad'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Poland'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        "     "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'India'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Taiwan'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'South Africa'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Mauritania'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "]"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        " "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "10"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ": "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "["
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Azerbaijan'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Senegal'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Gabon'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Albania'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Chile'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Liberia'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        "      "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Romania'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Pakistan'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Congo'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Somalia'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Sri Lanka'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Kosovo'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        "      "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Sierra Leone'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Estonia'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Germany'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Finland'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Qatar'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Uruguay'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        "      "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Cape Verde'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Belarus'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Cuba'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Suriname'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Bosnia and Herzegovina'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        "      "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Belgium'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Indonesia'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Bulgaria'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Burkina Faso'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Saudi Arabia'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        "      "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Canada'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Oman'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Guatemala'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Malaysia'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Serbia'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Uzbekistan'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        "      "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Singapore'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "]"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        " "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "11"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ": "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "["
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Guinea'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Latvia'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Iraq'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Macedonia'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Bangladesh'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Algeria'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Egypt'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        "      "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'United Arab Emirates'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Togo'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Honduras'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Switzerland'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Armenia'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        "      "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Italy'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Panama'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Mali'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Peru'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Portugal'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "]"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        " "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "12"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ": "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "["
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'United States'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Dominican Republic'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Mexico'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Moldova'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'France'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        "      "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Turkey'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Bolivia'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Bahrain'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Kuwait'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Brazil'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "]"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        " "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "13"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ": "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "['Nigeria', 'Iran', 'Russia']"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "}"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      }
     ],
     "prompt_number": 7
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "# Set phases with S-R trend analysis\n",
      "analyser.trend(min_len=12)\n",
      "# The number of countries\n",
      "len(analyser.countries)"
     ],
     "language": "python",
     "metadata": {},
     "outputs": [
      {
       "output_type": "pyout",
       "prompt_number": 8,
       "text": [
        "13"
       ]
      }
     ],
     "prompt_number": 8
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "phase_len_dict = analyser.phase_len()\n",
      "pprint(phase_len_dict, compact=True)"
     ],
     "language": "python",
     "metadata": {
      "tags": []
     },
     "outputs": [
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "{"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "12"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ": "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "["
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'United States'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Dominican Republic'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Mexico'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Moldova'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'France'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        "      "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Turkey'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Bolivia'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Bahrain'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Kuwait'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Brazil'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "]"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        " "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "13"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ": "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "['Nigeria', 'Iran', 'Russia']"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "}"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      }
     ],
     "prompt_number": 9
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "# Here, only show the countries which have the most phases\n",
      "countries_show = max(phase_len_dict.items(), key=lambda x: x[0])[1]\n",
      "# Show summary\n",
      "analyser.summary(countries=countries_show)"
     ],
     "language": "python",
     "metadata": {
      "tags": []
     },
     "outputs": [
      {
       "html": [
        "<div>\n",
        "<style scoped>\n",
        "    .dataframe tbody tr th:only-of-type {\n",
        "        vertical-align: middle;\n",
        "    }\n",
        "\n",
        "    .dataframe tbody tr th {\n",
        "        vertical-align: top;\n",
        "    }\n",
        "\n",
        "    .dataframe thead th {\n",
        "        text-align: right;\n",
        "    }\n",
        "</style>\n",
        "<table border=\"1\" class=\"dataframe\">\n",
        "  <thead>\n",
        "    <tr style=\"text-align: right;\">\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th>Type</th>\n",
        "      <th>Start</th>\n",
        "      <th>End</th>\n",
        "      <th>Population</th>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>Country</th>\n",
        "      <th>Phase</th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "    </tr>\n",
        "  </thead>\n",
        "  <tbody>\n",
        "    <tr>\n",
        "      <th rowspan=\"13\" valign=\"top\">Nigeria</th>\n",
        "      <th>0th</th>\n",
        "      <td>Past</td>\n",
        "      <td>18Mar2020</td>\n",
        "      <td>18May2020</td>\n",
        "      <td>195874740</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>1st</th>\n",
        "      <td>Past</td>\n",
        "      <td>19May2020</td>\n",
        "      <td>06Jun2020</td>\n",
        "      <td>195874740</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>2nd</th>\n",
        "      <td>Past</td>\n",
        "      <td>07Jun2020</td>\n",
        "      <td>17Jun2020</td>\n",
        "      <td>195874740</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>3rd</th>\n",
        "      <td>Past</td>\n",
        "      <td>18Jun2020</td>\n",
        "      <td>26Jun2020</td>\n",
        "      <td>195874740</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>4th</th>\n",
        "      <td>Past</td>\n",
        "      <td>27Jun2020</td>\n",
        "      <td>04Jul2020</td>\n",
        "      <td>195874740</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>5th</th>\n",
        "      <td>Past</td>\n",
        "      <td>05Jul2020</td>\n",
        "      <td>12Jul2020</td>\n",
        "      <td>195874740</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>6th</th>\n",
        "      <td>Past</td>\n",
        "      <td>13Jul2020</td>\n",
        "      <td>20Jul2020</td>\n",
        "      <td>195874740</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>7th</th>\n",
        "      <td>Past</td>\n",
        "      <td>21Jul2020</td>\n",
        "      <td>28Jul2020</td>\n",
        "      <td>195874740</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>8th</th>\n",
        "      <td>Past</td>\n",
        "      <td>29Jul2020</td>\n",
        "      <td>07Aug2020</td>\n",
        "      <td>195874740</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>9th</th>\n",
        "      <td>Past</td>\n",
        "      <td>08Aug2020</td>\n",
        "      <td>18Aug2020</td>\n",
        "      <td>195874740</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>10th</th>\n",
        "      <td>Past</td>\n",
        "      <td>19Aug2020</td>\n",
        "      <td>01Sep2020</td>\n",
        "      <td>195874740</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>11th</th>\n",
        "      <td>Past</td>\n",
        "      <td>02Sep2020</td>\n",
        "      <td>23Sep2020</td>\n",
        "      <td>195874740</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>12th</th>\n",
        "      <td>Past</td>\n",
        "      <td>24Sep2020</td>\n",
        "      <td>15Oct2020</td>\n",
        "      <td>195874740</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th rowspan=\"13\" valign=\"top\">Iran</th>\n",
        "      <th>0th</th>\n",
        "      <td>Past</td>\n",
        "      <td>26Feb2020</td>\n",
        "      <td>30Mar2020</td>\n",
        "      <td>81800269</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>1st</th>\n",
        "      <td>Past</td>\n",
        "      <td>31Mar2020</td>\n",
        "      <td>18Apr2020</td>\n",
        "      <td>81800269</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>2nd</th>\n",
        "      <td>Past</td>\n",
        "      <td>19Apr2020</td>\n",
        "      <td>14May2020</td>\n",
        "      <td>81800269</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>3rd</th>\n",
        "      <td>Past</td>\n",
        "      <td>15May2020</td>\n",
        "      <td>31May2020</td>\n",
        "      <td>81800269</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>4th</th>\n",
        "      <td>Past</td>\n",
        "      <td>01Jun2020</td>\n",
        "      <td>16Jun2020</td>\n",
        "      <td>81800269</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>5th</th>\n",
        "      <td>Past</td>\n",
        "      <td>17Jun2020</td>\n",
        "      <td>01Jul2020</td>\n",
        "      <td>81800269</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>6th</th>\n",
        "      <td>Past</td>\n",
        "      <td>02Jul2020</td>\n",
        "      <td>17Jul2020</td>\n",
        "      <td>81800269</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>7th</th>\n",
        "      <td>Past</td>\n",
        "      <td>18Jul2020</td>\n",
        "      <td>31Jul2020</td>\n",
        "      <td>81800269</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>8th</th>\n",
        "      <td>Past</td>\n",
        "      <td>01Aug2020</td>\n",
        "      <td>17Aug2020</td>\n",
        "      <td>81800269</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>9th</th>\n",
        "      <td>Past</td>\n",
        "      <td>18Aug2020</td>\n",
        "      <td>05Sep2020</td>\n",
        "      <td>81800269</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>10th</th>\n",
        "      <td>Past</td>\n",
        "      <td>06Sep2020</td>\n",
        "      <td>21Sep2020</td>\n",
        "      <td>81800269</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>11th</th>\n",
        "      <td>Past</td>\n",
        "      <td>22Sep2020</td>\n",
        "      <td>03Oct2020</td>\n",
        "      <td>81800269</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>12th</th>\n",
        "      <td>Past</td>\n",
        "      <td>04Oct2020</td>\n",
        "      <td>15Oct2020</td>\n",
        "      <td>81800269</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th rowspan=\"13\" valign=\"top\">Russia</th>\n",
        "      <th>0th</th>\n",
        "      <td>Past</td>\n",
        "      <td>12Feb2020</td>\n",
        "      <td>07May2020</td>\n",
        "      <td>330457362</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>1st</th>\n",
        "      <td>Past</td>\n",
        "      <td>08May2020</td>\n",
        "      <td>18May2020</td>\n",
        "      <td>330457362</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>2nd</th>\n",
        "      <td>Past</td>\n",
        "      <td>19May2020</td>\n",
        "      <td>29May2020</td>\n",
        "      <td>330457362</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>3rd</th>\n",
        "      <td>Past</td>\n",
        "      <td>30May2020</td>\n",
        "      <td>10Jun2020</td>\n",
        "      <td>330457362</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>4th</th>\n",
        "      <td>Past</td>\n",
        "      <td>11Jun2020</td>\n",
        "      <td>20Jun2020</td>\n",
        "      <td>330457362</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>5th</th>\n",
        "      <td>Past</td>\n",
        "      <td>21Jun2020</td>\n",
        "      <td>03Jul2020</td>\n",
        "      <td>330457362</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>6th</th>\n",
        "      <td>Past</td>\n",
        "      <td>04Jul2020</td>\n",
        "      <td>17Jul2020</td>\n",
        "      <td>330457362</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>7th</th>\n",
        "      <td>Past</td>\n",
        "      <td>18Jul2020</td>\n",
        "      <td>31Jul2020</td>\n",
        "      <td>330457362</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>8th</th>\n",
        "      <td>Past</td>\n",
        "      <td>01Aug2020</td>\n",
        "      <td>15Aug2020</td>\n",
        "      <td>330457362</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>9th</th>\n",
        "      <td>Past</td>\n",
        "      <td>16Aug2020</td>\n",
        "      <td>02Sep2020</td>\n",
        "      <td>330457362</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>10th</th>\n",
        "      <td>Past</td>\n",
        "      <td>03Sep2020</td>\n",
        "      <td>18Sep2020</td>\n",
        "      <td>330457362</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>11th</th>\n",
        "      <td>Past</td>\n",
        "      <td>19Sep2020</td>\n",
        "      <td>02Oct2020</td>\n",
        "      <td>330457362</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>12th</th>\n",
        "      <td>Past</td>\n",
        "      <td>03Oct2020</td>\n",
        "      <td>15Oct2020</td>\n",
        "      <td>330457362</td>\n",
        "    </tr>\n",
        "  </tbody>\n",
        "</table>\n",
        "</div>"
       ],
       "output_type": "pyout",
       "prompt_number": 10,
       "text": [
        "               Type      Start        End  Population\n",
        "Country Phase                                        \n",
        "Nigeria 0th    Past  18Mar2020  18May2020   195874740\n",
        "        1st    Past  19May2020  06Jun2020   195874740\n",
        "        2nd    Past  07Jun2020  17Jun2020   195874740\n",
        "        3rd    Past  18Jun2020  26Jun2020   195874740\n",
        "        4th    Past  27Jun2020  04Jul2020   195874740\n",
        "        5th    Past  05Jul2020  12Jul2020   195874740\n",
        "        6th    Past  13Jul2020  20Jul2020   195874740\n",
        "        7th    Past  21Jul2020  28Jul2020   195874740\n",
        "        8th    Past  29Jul2020  07Aug2020   195874740\n",
        "        9th    Past  08Aug2020  18Aug2020   195874740\n",
        "        10th   Past  19Aug2020  01Sep2020   195874740\n",
        "        11th   Past  02Sep2020  23Sep2020   195874740\n",
        "        12th   Past  24Sep2020  15Oct2020   195874740\n",
        "Iran    0th    Past  26Feb2020  30Mar2020    81800269\n",
        "        1st    Past  31Mar2020  18Apr2020    81800269\n",
        "        2nd    Past  19Apr2020  14May2020    81800269\n",
        "        3rd    Past  15May2020  31May2020    81800269\n",
        "        4th    Past  01Jun2020  16Jun2020    81800269\n",
        "        5th    Past  17Jun2020  01Jul2020    81800269\n",
        "        6th    Past  02Jul2020  17Jul2020    81800269\n",
        "        7th    Past  18Jul2020  31Jul2020    81800269\n",
        "        8th    Past  01Aug2020  17Aug2020    81800269\n",
        "        9th    Past  18Aug2020  05Sep2020    81800269\n",
        "        10th   Past  06Sep2020  21Sep2020    81800269\n",
        "        11th   Past  22Sep2020  03Oct2020    81800269\n",
        "        12th   Past  04Oct2020  15Oct2020    81800269\n",
        "Russia  0th    Past  12Feb2020  07May2020   330457362\n",
        "        1st    Past  08May2020  18May2020   330457362\n",
        "        2nd    Past  19May2020  29May2020   330457362\n",
        "        3rd    Past  30May2020  10Jun2020   330457362\n",
        "        4th    Past  11Jun2020  20Jun2020   330457362\n",
        "        5th    Past  21Jun2020  03Jul2020   330457362\n",
        "        6th    Past  04Jul2020  17Jul2020   330457362\n",
        "        7th    Past  18Jul2020  31Jul2020   330457362\n",
        "        8th    Past  01Aug2020  15Aug2020   330457362\n",
        "        9th    Past  16Aug2020  02Sep2020   330457362\n",
        "        10th   Past  03Sep2020  18Sep2020   330457362\n",
        "        11th   Past  19Sep2020  02Oct2020   330457362\n",
        "        12th   Past  03Oct2020  15Oct2020   330457362"
       ]
      }
     ],
     "prompt_number": 10
    },
    {
     "cell_type": "markdown",
     "metadata": {},
     "source": [
      "## Parameter estimation\n",
      "we will estimate the parameter values with SIR-derived ODE models in each country."
     ]
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "# Parameter estimation with SIR-F model\n",
      "analyser.estimate(cs.SIRF)"
     ],
     "language": "python",
     "metadata": {
      "tags": []
     },
     "outputs": [
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n",
        "<SIR-F model: parameter estimation>"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "Running optimization with 4 CPUs..."
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tKWT,  0th phase (08Mar2020 - 12May2020): finished 1779 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tBOL,  9th phase (03Sep2020 - 10Sep2020): finished 1942 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tDOM,  4th phase (14Jul2020 - 23Jul2020): finished 1944 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tRUS,  9th phase (16Aug2020 - 02Sep2020): finished 1921 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tIRN,  6th phase (02Jul2020 - 17Jul2020): finished  249 trials in 0 min  5 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tFRA,  9th phase (10Sep2020 - 17Sep2020): finished  676 trials in 0 min 15 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tMEX,  4th phase (07Jul2020 - 16Jul2020): finished  647 trials in 0 min 15 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tBRA,  3rd phase (27Jun2020 - 08Jul2020): finished 1942 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tDOM,  0th phase (24Mar2020 - 22May2020): finished 1914 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tUSA,  6th phase (29Jul2020 - 07Aug2020): finished  467 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tBRA,  1st phase (27May2020 - 13Jun2020): finished 1944 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tDOM,  2nd phase (15Jun2020 - 01Jul2020): finished  246 trials in 0 min  5 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tRUS,  5th phase (21Jun2020 - 03Jul2020): finished 1971 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tUSA,  4th phase (09Jul2020 - 18Jul2020): finished 1031 trials in 0 min 25 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tNGA,  7th phase (21Jul2020 - 28Jul2020): finished  255 trials in 0 min  5 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tTUR,  4th phase (23May2020 - 13Jun2020): finished  245 trials in 0 min  5 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tMDA,  1st phase (13May2020 - 10Jun2020): finished 1716 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tUSA,  2nd phase (04Jun2020 - 25Jun2020): finished 1732 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tIRN,  7th phase (18Jul2020 - 31Jul2020): finished 1663 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tDOM,  9th phase (03Sep2020 - 15Sep2020): finished 1570 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tMDA,  6th phase (17Aug2020 - 26Aug2020): finished  241 trials in 0 min  5 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tMEX,  1st phase (24May2020 - 10Jun2020): finished 1802 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tUSA,  1st phase (02May2020 - 03Jun2020): finished 1784 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tIRN,  8th phase (01Aug2020 - 17Aug2020): finished 1730 trials in 0 min 55 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tNGA,  2nd phase (07Jun2020 - 17Jun2020): finished  253 trials in 0 min  5 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tIRN,  2nd phase (19Apr2020 - 14May2020): finished  454 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tTUR,  6th phase (29Jun2020 - 19Jul2020): finished  463 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tBOL,  0th phase (01Apr2020 - 13Jun2020): finished 1910 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tTUR,  2nd phase (30Apr2020 - 08May2020): finished 1194 trials in 0 min 30 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tFRA,  0th phase (12Feb2020 - 24Mar2020): finished 1852 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tMDA, 11th phase (07Oct2020 - 15Oct2020): finished 1126 trials in 0 min 30 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tBOL,  5th phase (01Aug2020 - 09Aug2020): finished  205 trials in 0 min  5 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tUSA,  5th phase (19Jul2020 - 28Jul2020): finished  250 trials in 0 min  5 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tFRA,  1st phase (25Mar2020 - 05Apr2020): finished 1962 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tKWT,  5th phase (07Jul2020 - 20Jul2020): finished 1951 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tRUS,  8th phase (01Aug2020 - 15Aug2020): finished 1945 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tBHR,  4th phase (26Jun2020 - 06Jul2020): finished 1928 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tNGA, 12th phase (24Sep2020 - 15Oct2020): finished 1918 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tMEX,  8th phase (25Aug2020 - 06Sep2020): finished 1925 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tBHR,  6th phase (20Jul2020 - 05Aug2020): finished  241 trials in 0 min  5 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tTUR,  7th phase (20Jul2020 - 10Aug2020): finished  246 trials in 0 min  5 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tFRA,  5th phase (02Jun2020 - 08Jul2020): finished 1905 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tBHR,  7th phase (06Aug2020 - 21Aug2020): finished 1913 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tIRN,  1st phase (31Mar2020 - 18Apr2020): finished 1917 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tTUR,  3rd phase (09May2020 - 22May2020): finished 1911 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tFRA, 11th phase (02Oct2020 - 15Oct2020): finished 1002 trials in 0 min 25 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tIRN,  4th phase (01Jun2020 - 16Jun2020): finished 1817 trials in 0 min 55 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tUSA, 11th phase (01Oct2020 - 15Oct2020): finished  991 trials in 0 min 25 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tMEX,  6th phase (31Jul2020 - 10Aug2020): finished  246 trials in 0 min  5 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tDOM, 10th phase (16Sep2020 - 30Sep2020): finished  331 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tRUS,  0th phase (12Feb2020 - 07May2020): finished 1811 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tNGA, 11th phase (02Sep2020 - 23Sep2020): finished 1746 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tUSA,  9th phase (03Sep2020 - 16Sep2020): finished  986 trials in 0 min 35 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tKWT,  9th phase (03Sep2020 - 13Sep2020): finished 1581 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tBRA,  4th phase (09Jul2020 - 20Jul2020): finished  464 trials in 0 min 15 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tKWT,  3rd phase (08Jun2020 - 22Jun2020): finished 1551 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tFRA,  4th phase (05May2020 - 01Jun2020): finished 1515 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tKWT,  6th phase (21Jul2020 - 04Aug2020): finished  193 trials in 0 min  5 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tIRN, 10th phase (06Sep2020 - 21Sep2020): finished  174 trials in 0 min  5 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tTUR,  9th phase (30Aug2020 - 14Sep2020): finished  385 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tNGA,  9th phase (08Aug2020 - 18Aug2020): finished  324 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tMDA, 10th phase (29Sep2020 - 06Oct2020): finished 1568 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tBOL,  7th phase (18Aug2020 - 25Aug2020): finished  655 trials in 0 min 20 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tMEX,  9th phase (07Sep2020 - 21Sep2020): finished 1600 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tMEX,  5th phase (17Jul2020 - 30Jul2020): finished 1605 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tFRA,  8th phase (26Aug2020 - 09Sep2020): finished 1675 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tBHR,  0th phase (06Mar2020 - 06May2020): finished 1496 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tUSA,  0th phase (09Feb2020 - 01May2020): finished 1480 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tNGA, 10th phase (19Aug2020 - 01Sep2020): finished  532 trials in 0 min 15 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tMEX,  3rd phase (24Jun2020 - 06Jul2020): finished 1576 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tTUR,  5th phase (14Jun2020 - 28Jun2020): finished 1547 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tIRN,  3rd phase (15May2020 - 31May2020): finished  319 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tBOL,  8th phase (26Aug2020 - 02Sep2020): finished  253 trials in 0 min  5 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tRUS,  1st phase (08May2020 - 18May2020): finished 1777 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tBOL,  3rd phase (06Jul2020 - 15Jul2020): finished 1770 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tFRA, 10th phase (18Sep2020 - 01Oct2020): finished 1942 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tBHR,  9th phase (06Sep2020 - 17Sep2020): finished 1923 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tMDA,  4th phase (18Jul2020 - 01Aug2020): finished 1380 trials in 0 min 40 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tRUS,  2nd phase (19May2020 - 29May2020): finished 1905 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tKWT, 11th phase (28Sep2020 - 15Oct2020): finished  645 trials in 0 min 15 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tMDA,  7th phase (27Aug2020 - 07Sep2020): finished 1560 trials in 0 min 45 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tTUR,  0th phase (24Mar2020 - 16Apr2020): finished 1897 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tNGA,  0th phase (18Mar2020 - 18May2020): finished 1900 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tNGA,  5th phase (05Jul2020 - 12Jul2020): finished  459 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tBOL,  6th phase (10Aug2020 - 17Aug2020): finished  468 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tMDA,  2nd phase (11Jun2020 - 25Jun2020): finished 1923 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tDOM,  1st phase (23May2020 - 14Jun2020): finished 1903 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tBRA, 11th phase (25Sep2020 - 15Oct2020): finished 1909 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tBRA, 10th phase (11Sep2020 - 24Sep2020): finished 1909 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tBHR,  5th phase (07Jul2020 - 19Jul2020): finished 1908 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tBHR, 11th phase (29Sep2020 - 15Oct2020): finished  240 trials in 0 min  5 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tTUR,  8th phase (11Aug2020 - 29Aug2020): finished 1430 trials in 0 min 40 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tMDA,  5th phase (02Aug2020 - 16Aug2020): finished  244 trials in 0 min  5 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tBRA,  0th phase (16Mar2020 - 26May2020): finished 1890 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tBOL,  1st phase (14Jun2020 - 25Jun2020): finished 1951 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tBOL,  4th phase (16Jul2020 - 31Jul2020): finished 1460 trials in 0 min 40 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tBRA,  2nd phase (14Jun2020 - 26Jun2020): finished 1175 trials in 0 min 30 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tFRA,  7th phase (07Aug2020 - 25Aug2020): finished  661 trials in 0 min 15 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tKWT,  8th phase (19Aug2020 - 02Sep2020): finished  464 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tDOM,  5th phase (24Jul2020 - 01Aug2020): finished 1983 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tNGA,  3rd phase (18Jun2020 - 26Jun2020): finished  249 trials in 0 min  5 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tTUR, 10th phase (15Sep2020 - 29Sep2020): finished 1957 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tKWT, 10th phase (14Sep2020 - 27Sep2020): finished  252 trials in 0 min  5 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tMDA,  0th phase (17Mar2020 - 12May2020): finished 1906 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tRUS,  3rd phase (30May2020 - 10Jun2020): finished 1933 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tIRN,  0th phase (26Feb2020 - 30Mar2020): finished 1896 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tBRA,  5th phase (21Jul2020 - 30Jul2020): finished 1936 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tRUS, 12th phase (03Oct2020 - 15Oct2020): finished  815 trials in 0 min 20 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tDOM,  7th phase (12Aug2020 - 20Aug2020): finished  471 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tMEX, 10th phase (22Sep2020 - 03Oct2020): finished  249 trials in 0 min  5 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tRUS, 10th phase (03Sep2020 - 18Sep2020): finished 1934 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tNGA,  6th phase (13Jul2020 - 20Jul2020): finished  453 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tTUR, 11th phase (30Sep2020 - 15Oct2020): finished  466 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tTUR,  1st phase (17Apr2020 - 29Apr2020): finished 1946 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tBOL,  2nd phase (26Jun2020 - 05Jul2020): finished  234 trials in 0 min  5 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tBRA,  8th phase (20Aug2020 - 29Aug2020): finished 1933 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tIRN,  5th phase (17Jun2020 - 01Jul2020): finished 1918 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tUSA, 10th phase (17Sep2020 - 30Sep2020): finished 1131 trials in 0 min 30 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tFRA,  2nd phase (06Apr2020 - 20Apr2020): finished 1913 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tRUS, 11th phase (19Sep2020 - 02Oct2020): finished 1926 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tMDA,  8th phase (08Sep2020 - 18Sep2020): finished 1790 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tMEX,  0th phase (03Mar2020 - 23May2020): finished 1672 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tMDA,  3rd phase (26Jun2020 - 17Jul2020): finished 1683 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tBHR, 10th phase (18Sep2020 - 28Sep2020): finished  342 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tKWT,  7th phase (05Aug2020 - 18Aug2020): finished  228 trials in 0 min  5 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tBHR,  1st phase (07May2020 - 31May2020): finished 1586 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tUSA,  3rd phase (26Jun2020 - 08Jul2020): finished 1586 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tKWT,  1st phase (13May2020 - 27May2020): finished 1597 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tUSA,  7th phase (08Aug2020 - 19Aug2020): finished  519 trials in 0 min 15 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tBRA,  7th phase (11Aug2020 - 19Aug2020): finished 1605 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tMEX, 11th phase (04Oct2020 - 15Oct2020): finished  373 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tMDA,  9th phase (19Sep2020 - 28Sep2020): finished 1620 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tUSA,  8th phase (20Aug2020 - 02Sep2020): finished  177 trials in 0 min  5 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tBOL, 10th phase (11Sep2020 - 22Sep2020): finished  195 trials in 0 min  5 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tMEX,  2nd phase (11Jun2020 - 23Jun2020): finished 1653 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tBHR,  8th phase (22Aug2020 - 05Sep2020): finished 1618 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tKWT,  4th phase (23Jun2020 - 06Jul2020): finished 1616 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tDOM,  6th phase (02Aug2020 - 11Aug2020): finished 1732 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tNGA,  1st phase (19May2020 - 06Jun2020): finished 1631 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tBRA,  9th phase (30Aug2020 - 10Sep2020): finished  137 trials in 0 min  5 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tBHR,  2nd phase (01Jun2020 - 13Jun2020): finished 1577 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tKWT,  2nd phase (28May2020 - 07Jun2020): finished 1589 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tFRA,  6th phase (09Jul2020 - 06Aug2020): finished 1321 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tBOL, 11th phase (23Sep2020 - 15Oct2020): finished  495 trials in 0 min 25 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tMEX,  7th phase (11Aug2020 - 24Aug2020): finished 1068 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tRUS,  4th phase (11Jun2020 - 20Jun2020): finished 1046 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tNGA,  4th phase (27Jun2020 - 04Jul2020): finished  196 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tDOM,  8th phase (21Aug2020 - 02Sep2020): finished  271 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tDOM,  3rd phase (02Jul2020 - 13Jul2020): finished 1247 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tIRN,  9th phase (18Aug2020 - 05Sep2020): finished  179 trials in 0 min  5 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tRUS,  6th phase (04Jul2020 - 17Jul2020): finished 1482 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tFRA,  3rd phase (21Apr2020 - 04May2020): finished 1614 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "Completed optimization. Total: 26 min 45 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      }
     ],
     "prompt_number": 11
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "# Show summary\n",
      "analyser.summary(countries=countries_show)"
     ],
     "language": "python",
     "metadata": {},
     "outputs": [
      {
       "html": [
        "<div>\n",
        "<style scoped>\n",
        "    .dataframe tbody tr th:only-of-type {\n",
        "        vertical-align: middle;\n",
        "    }\n",
        "\n",
        "    .dataframe tbody tr th {\n",
        "        vertical-align: top;\n",
        "    }\n",
        "\n",
        "    .dataframe thead th {\n",
        "        text-align: right;\n",
        "    }\n",
        "</style>\n",
        "<table border=\"1\" class=\"dataframe\">\n",
        "  <thead>\n",
        "    <tr style=\"text-align: right;\">\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th>Type</th>\n",
        "      <th>Start</th>\n",
        "      <th>End</th>\n",
        "      <th>Population</th>\n",
        "      <th>ODE</th>\n",
        "      <th>Rt</th>\n",
        "      <th>theta</th>\n",
        "      <th>kappa</th>\n",
        "      <th>rho</th>\n",
        "      <th>sigma</th>\n",
        "      <th>tau</th>\n",
        "      <th>1/alpha2 [day]</th>\n",
        "      <th>1/beta [day]</th>\n",
        "      <th>1/gamma [day]</th>\n",
        "      <th>alpha1 [-]</th>\n",
        "      <th>RMSLE</th>\n",
        "      <th>Trials</th>\n",
        "      <th>Runtime</th>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>Country</th>\n",
        "      <th>Phase</th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "    </tr>\n",
        "  </thead>\n",
        "  <tbody>\n",
        "    <tr>\n",
        "      <th rowspan=\"13\" valign=\"top\">Nigeria</th>\n",
        "      <th>0th</th>\n",
        "      <td>Past</td>\n",
        "      <td>18Mar2020</td>\n",
        "      <td>18May2020</td>\n",
        "      <td>195874740</td>\n",
        "      <td>SIR-F</td>\n",
        "      <td>5.85</td>\n",
        "      <td>0.0464515</td>\n",
        "      <td>0.000549316</td>\n",
        "      <td>0.0339786</td>\n",
        "      <td>0.00499261</td>\n",
        "      <td>360</td>\n",
        "      <td>455</td>\n",
        "      <td>7</td>\n",
        "      <td>50</td>\n",
        "      <td>0.046</td>\n",
        "      <td>2.28919</td>\n",
        "      <td>1900</td>\n",
        "      <td>1 min  0 sec</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>1st</th>\n",
        "      <td>Past</td>\n",
        "      <td>19May2020</td>\n",
        "      <td>06Jun2020</td>\n",
        "      <td>195874740</td>\n",
        "      <td>SIR-F</td>\n",
        "      <td>2.99</td>\n",
        "      <td>0.0186545</td>\n",
        "      <td>7.05081e-05</td>\n",
        "      <td>0.0143014</td>\n",
        "      <td>0.00462203</td>\n",
        "      <td>360</td>\n",
        "      <td>3545</td>\n",
        "      <td>17</td>\n",
        "      <td>54</td>\n",
        "      <td>0.019</td>\n",
        "      <td>0.040455</td>\n",
        "      <td>1631</td>\n",
        "      <td>1 min  0 sec</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>2nd</th>\n",
        "      <td>Past</td>\n",
        "      <td>07Jun2020</td>\n",
        "      <td>17Jun2020</td>\n",
        "      <td>195874740</td>\n",
        "      <td>SIR-F</td>\n",
        "      <td>2.58</td>\n",
        "      <td>0.019827</td>\n",
        "      <td>1.85523e-06</td>\n",
        "      <td>0.0138185</td>\n",
        "      <td>0.00525492</td>\n",
        "      <td>360</td>\n",
        "      <td>134754</td>\n",
        "      <td>18</td>\n",
        "      <td>47</td>\n",
        "      <td>0.02</td>\n",
        "      <td>0.0242518</td>\n",
        "      <td>253</td>\n",
        "      <td>0 min  5 sec</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>3rd</th>\n",
        "      <td>Past</td>\n",
        "      <td>18Jun2020</td>\n",
        "      <td>26Jun2020</td>\n",
        "      <td>195874740</td>\n",
        "      <td>SIR-F</td>\n",
        "      <td>2.42</td>\n",
        "      <td>0.00156886</td>\n",
        "      <td>0.000191061</td>\n",
        "      <td>0.0115673</td>\n",
        "      <td>0.00457367</td>\n",
        "      <td>360</td>\n",
        "      <td>1308</td>\n",
        "      <td>21</td>\n",
        "      <td>54</td>\n",
        "      <td>0.002</td>\n",
        "      <td>0.0136099</td>\n",
        "      <td>249</td>\n",
        "      <td>0 min  5 sec</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>4th</th>\n",
        "      <td>Past</td>\n",
        "      <td>27Jun2020</td>\n",
        "      <td>04Jul2020</td>\n",
        "      <td>195874740</td>\n",
        "      <td>SIR-F</td>\n",
        "      <td>1.44</td>\n",
        "      <td>0.0131092</td>\n",
        "      <td>5.43317e-05</td>\n",
        "      <td>0.00938301</td>\n",
        "      <td>0.00637319</td>\n",
        "      <td>360</td>\n",
        "      <td>4601</td>\n",
        "      <td>26</td>\n",
        "      <td>39</td>\n",
        "      <td>0.013</td>\n",
        "      <td>0.00689474</td>\n",
        "      <td>196</td>\n",
        "      <td>0 min 10 sec</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>5th</th>\n",
        "      <td>Past</td>\n",
        "      <td>05Jul2020</td>\n",
        "      <td>12Jul2020</td>\n",
        "      <td>195874740</td>\n",
        "      <td>SIR-F</td>\n",
        "      <td>2.08</td>\n",
        "      <td>0.00400889</td>\n",
        "      <td>0.000164857</td>\n",
        "      <td>0.00777176</td>\n",
        "      <td>0.0035494</td>\n",
        "      <td>360</td>\n",
        "      <td>1516</td>\n",
        "      <td>32</td>\n",
        "      <td>70</td>\n",
        "      <td>0.004</td>\n",
        "      <td>0.00491952</td>\n",
        "      <td>459</td>\n",
        "      <td>0 min 10 sec</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>6th</th>\n",
        "      <td>Past</td>\n",
        "      <td>13Jul2020</td>\n",
        "      <td>20Jul2020</td>\n",
        "      <td>195874740</td>\n",
        "      <td>SIR-F</td>\n",
        "      <td>2.69</td>\n",
        "      <td>0.000443457</td>\n",
        "      <td>9.8046e-05</td>\n",
        "      <td>0.00757691</td>\n",
        "      <td>0.00271978</td>\n",
        "      <td>360</td>\n",
        "      <td>2549</td>\n",
        "      <td>32</td>\n",
        "      <td>91</td>\n",
        "      <td>0</td>\n",
        "      <td>0.00731525</td>\n",
        "      <td>453</td>\n",
        "      <td>0 min 10 sec</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>7th</th>\n",
        "      <td>Past</td>\n",
        "      <td>21Jul2020</td>\n",
        "      <td>28Jul2020</td>\n",
        "      <td>195874740</td>\n",
        "      <td>SIR-F</td>\n",
        "      <td>1.29</td>\n",
        "      <td>0.00453572</td>\n",
        "      <td>9.26077e-05</td>\n",
        "      <td>0.00678357</td>\n",
        "      <td>0.00513507</td>\n",
        "      <td>360</td>\n",
        "      <td>2699</td>\n",
        "      <td>36</td>\n",
        "      <td>48</td>\n",
        "      <td>0.005</td>\n",
        "      <td>0.016536</td>\n",
        "      <td>255</td>\n",
        "      <td>0 min  5 sec</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>8th</th>\n",
        "      <td>Past</td>\n",
        "      <td>29Jul2020</td>\n",
        "      <td>07Aug2020</td>\n",
        "      <td>195874740</td>\n",
        "      <td>-</td>\n",
        "      <td>-</td>\n",
        "      <td>-</td>\n",
        "      <td>-</td>\n",
        "      <td>-</td>\n",
        "      <td>-</td>\n",
        "      <td>-</td>\n",
        "      <td>-</td>\n",
        "      <td>-</td>\n",
        "      <td>-</td>\n",
        "      <td>-</td>\n",
        "      <td>-</td>\n",
        "      <td>-</td>\n",
        "      <td>-</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>9th</th>\n",
        "      <td>Past</td>\n",
        "      <td>08Aug2020</td>\n",
        "      <td>18Aug2020</td>\n",
        "      <td>195874740</td>\n",
        "      <td>SIR-F</td>\n",
        "      <td>1.16</td>\n",
        "      <td>0.00397977</td>\n",
        "      <td>7.91693e-05</td>\n",
        "      <td>0.0077924</td>\n",
        "      <td>0.00661452</td>\n",
        "      <td>360</td>\n",
        "      <td>3157</td>\n",
        "      <td>32</td>\n",
        "      <td>37</td>\n",
        "      <td>0.004</td>\n",
        "      <td>0.0435534</td>\n",
        "      <td>324</td>\n",
        "      <td>0 min 10 sec</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>10th</th>\n",
        "      <td>Past</td>\n",
        "      <td>19Aug2020</td>\n",
        "      <td>01Sep2020</td>\n",
        "      <td>195874740</td>\n",
        "      <td>SIR-F</td>\n",
        "      <td>0.89</td>\n",
        "      <td>0.00102289</td>\n",
        "      <td>3.68953e-05</td>\n",
        "      <td>0.00554538</td>\n",
        "      <td>0.00621157</td>\n",
        "      <td>360</td>\n",
        "      <td>6775</td>\n",
        "      <td>45</td>\n",
        "      <td>40</td>\n",
        "      <td>0.001</td>\n",
        "      <td>0.0282793</td>\n",
        "      <td>532</td>\n",
        "      <td>0 min 15 sec</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>11th</th>\n",
        "      <td>Past</td>\n",
        "      <td>02Sep2020</td>\n",
        "      <td>23Sep2020</td>\n",
        "      <td>195874740</td>\n",
        "      <td>SIR-F</td>\n",
        "      <td>0.71</td>\n",
        "      <td>0.0191855</td>\n",
        "      <td>2.70015e-05</td>\n",
        "      <td>0.0035653</td>\n",
        "      <td>0.00487039</td>\n",
        "      <td>360</td>\n",
        "      <td>9258</td>\n",
        "      <td>70</td>\n",
        "      <td>51</td>\n",
        "      <td>0.019</td>\n",
        "      <td>0.172538</td>\n",
        "      <td>1746</td>\n",
        "      <td>1 min  0 sec</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>12th</th>\n",
        "      <td>Past</td>\n",
        "      <td>24Sep2020</td>\n",
        "      <td>15Oct2020</td>\n",
        "      <td>195874740</td>\n",
        "      <td>SIR-F</td>\n",
        "      <td>0.97</td>\n",
        "      <td>5.51546e-05</td>\n",
        "      <td>6.00228e-05</td>\n",
        "      <td>0.00429553</td>\n",
        "      <td>0.00438749</td>\n",
        "      <td>360</td>\n",
        "      <td>4165</td>\n",
        "      <td>58</td>\n",
        "      <td>56</td>\n",
        "      <td>0</td>\n",
        "      <td>0.0346343</td>\n",
        "      <td>1918</td>\n",
        "      <td>1 min  0 sec</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th rowspan=\"13\" valign=\"top\">Iran</th>\n",
        "      <th>0th</th>\n",
        "      <td>Past</td>\n",
        "      <td>26Feb2020</td>\n",
        "      <td>30Mar2020</td>\n",
        "      <td>81800269</td>\n",
        "      <td>SIR-F</td>\n",
        "      <td>1.99</td>\n",
        "      <td>0.0559513</td>\n",
        "      <td>0.0162145</td>\n",
        "      <td>0.0484873</td>\n",
        "      <td>0.00679692</td>\n",
        "      <td>360</td>\n",
        "      <td>15</td>\n",
        "      <td>5</td>\n",
        "      <td>36</td>\n",
        "      <td>0.056</td>\n",
        "      <td>5.2564</td>\n",
        "      <td>1896</td>\n",
        "      <td>1 min  0 sec</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>1st</th>\n",
        "      <td>Past</td>\n",
        "      <td>31Mar2020</td>\n",
        "      <td>18Apr2020</td>\n",
        "      <td>81800269</td>\n",
        "      <td>SIR-F</td>\n",
        "      <td>0.82</td>\n",
        "      <td>0.0525092</td>\n",
        "      <td>0.00033091</td>\n",
        "      <td>0.0183214</td>\n",
        "      <td>0.0208991</td>\n",
        "      <td>360</td>\n",
        "      <td>755</td>\n",
        "      <td>13</td>\n",
        "      <td>11</td>\n",
        "      <td>0.053</td>\n",
        "      <td>0.199412</td>\n",
        "      <td>1917</td>\n",
        "      <td>1 min  0 sec</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>2nd</th>\n",
        "      <td>Past</td>\n",
        "      <td>19Apr2020</td>\n",
        "      <td>14May2020</td>\n",
        "      <td>81800269</td>\n",
        "      <td>SIR-F</td>\n",
        "      <td>0.74</td>\n",
        "      <td>0.0270966</td>\n",
        "      <td>0.00067746</td>\n",
        "      <td>0.018617</td>\n",
        "      <td>0.0239582</td>\n",
        "      <td>360</td>\n",
        "      <td>369</td>\n",
        "      <td>13</td>\n",
        "      <td>10</td>\n",
        "      <td>0.027</td>\n",
        "      <td>0.207043</td>\n",
        "      <td>454</td>\n",
        "      <td>0 min 10 sec</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>3rd</th>\n",
        "      <td>Past</td>\n",
        "      <td>15May2020</td>\n",
        "      <td>31May2020</td>\n",
        "      <td>81800269</td>\n",
        "      <td>SIR-F</td>\n",
        "      <td>1.27</td>\n",
        "      <td>0.017912</td>\n",
        "      <td>0.000238301</td>\n",
        "      <td>0.0257395</td>\n",
        "      <td>0.0197036</td>\n",
        "      <td>360</td>\n",
        "      <td>1049</td>\n",
        "      <td>9</td>\n",
        "      <td>12</td>\n",
        "      <td>0.018</td>\n",
        "      <td>0.0284344</td>\n",
        "      <td>319</td>\n",
        "      <td>0 min 10 sec</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>4th</th>\n",
        "      <td>Past</td>\n",
        "      <td>01Jun2020</td>\n",
        "      <td>16Jun2020</td>\n",
        "      <td>81800269</td>\n",
        "      <td>SIR-F</td>\n",
        "      <td>1.16</td>\n",
        "      <td>0.0180548</td>\n",
        "      <td>0.000293353</td>\n",
        "      <td>0.0208382</td>\n",
        "      <td>0.0174074</td>\n",
        "      <td>360</td>\n",
        "      <td>852</td>\n",
        "      <td>11</td>\n",
        "      <td>14</td>\n",
        "      <td>0.018</td>\n",
        "      <td>0.04343</td>\n",
        "      <td>1817</td>\n",
        "      <td>0 min 55 sec</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>5th</th>\n",
        "      <td>Past</td>\n",
        "      <td>17Jun2020</td>\n",
        "      <td>01Jul2020</td>\n",
        "      <td>81800269</td>\n",
        "      <td>SIR-F</td>\n",
        "      <td>0.93</td>\n",
        "      <td>0.030815</td>\n",
        "      <td>0.000311675</td>\n",
        "      <td>0.0215975</td>\n",
        "      <td>0.0220884</td>\n",
        "      <td>360</td>\n",
        "      <td>802</td>\n",
        "      <td>11</td>\n",
        "      <td>11</td>\n",
        "      <td>0.031</td>\n",
        "      <td>0.02275</td>\n",
        "      <td>1918</td>\n",
        "      <td>1 min  0 sec</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>6th</th>\n",
        "      <td>Past</td>\n",
        "      <td>02Jul2020</td>\n",
        "      <td>17Jul2020</td>\n",
        "      <td>81800269</td>\n",
        "      <td>SIR-F</td>\n",
        "      <td>0.88</td>\n",
        "      <td>0.0705136</td>\n",
        "      <td>5.94295e-05</td>\n",
        "      <td>0.0241261</td>\n",
        "      <td>0.0253118</td>\n",
        "      <td>360</td>\n",
        "      <td>4206</td>\n",
        "      <td>10</td>\n",
        "      <td>9</td>\n",
        "      <td>0.071</td>\n",
        "      <td>0.0188563</td>\n",
        "      <td>249</td>\n",
        "      <td>0 min  5 sec</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>7th</th>\n",
        "      <td>Past</td>\n",
        "      <td>18Jul2020</td>\n",
        "      <td>31Jul2020</td>\n",
        "      <td>81800269</td>\n",
        "      <td>SIR-F</td>\n",
        "      <td>1.03</td>\n",
        "      <td>0.0545177</td>\n",
        "      <td>0.00089129</td>\n",
        "      <td>0.0277308</td>\n",
        "      <td>0.0245982</td>\n",
        "      <td>360</td>\n",
        "      <td>280</td>\n",
        "      <td>9</td>\n",
        "      <td>10</td>\n",
        "      <td>0.055</td>\n",
        "      <td>0.0228668</td>\n",
        "      <td>1663</td>\n",
        "      <td>1 min  0 sec</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>8th</th>\n",
        "      <td>Past</td>\n",
        "      <td>01Aug2020</td>\n",
        "      <td>17Aug2020</td>\n",
        "      <td>81800269</td>\n",
        "      <td>SIR-F</td>\n",
        "      <td>1.06</td>\n",
        "      <td>0.0342677</td>\n",
        "      <td>0.000970817</td>\n",
        "      <td>0.024634</td>\n",
        "      <td>0.0213789</td>\n",
        "      <td>360</td>\n",
        "      <td>257</td>\n",
        "      <td>10</td>\n",
        "      <td>11</td>\n",
        "      <td>0.034</td>\n",
        "      <td>0.0248032</td>\n",
        "      <td>1730</td>\n",
        "      <td>0 min 55 sec</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>9th</th>\n",
        "      <td>Past</td>\n",
        "      <td>18Aug2020</td>\n",
        "      <td>05Sep2020</td>\n",
        "      <td>81800269</td>\n",
        "      <td>SIR-F</td>\n",
        "      <td>1.12</td>\n",
        "      <td>0.00843685</td>\n",
        "      <td>0.000750771</td>\n",
        "      <td>0.0178252</td>\n",
        "      <td>0.0150749</td>\n",
        "      <td>360</td>\n",
        "      <td>332</td>\n",
        "      <td>14</td>\n",
        "      <td>16</td>\n",
        "      <td>0.008</td>\n",
        "      <td>0.0301521</td>\n",
        "      <td>179</td>\n",
        "      <td>0 min  5 sec</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>10th</th>\n",
        "      <td>Past</td>\n",
        "      <td>06Sep2020</td>\n",
        "      <td>21Sep2020</td>\n",
        "      <td>81800269</td>\n",
        "      <td>SIR-F</td>\n",
        "      <td>1.29</td>\n",
        "      <td>0.0527953</td>\n",
        "      <td>9.34715e-05</td>\n",
        "      <td>0.0191923</td>\n",
        "      <td>0.0140002</td>\n",
        "      <td>360</td>\n",
        "      <td>2674</td>\n",
        "      <td>13</td>\n",
        "      <td>17</td>\n",
        "      <td>0.053</td>\n",
        "      <td>0.0206641</td>\n",
        "      <td>174</td>\n",
        "      <td>0 min  5 sec</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>11th</th>\n",
        "      <td>Past</td>\n",
        "      <td>22Sep2020</td>\n",
        "      <td>03Oct2020</td>\n",
        "      <td>81800269</td>\n",
        "      <td>-</td>\n",
        "      <td>-</td>\n",
        "      <td>-</td>\n",
        "      <td>-</td>\n",
        "      <td>-</td>\n",
        "      <td>-</td>\n",
        "      <td>-</td>\n",
        "      <td>-</td>\n",
        "      <td>-</td>\n",
        "      <td>-</td>\n",
        "      <td>-</td>\n",
        "      <td>-</td>\n",
        "      <td>-</td>\n",
        "      <td>-</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>12th</th>\n",
        "      <td>Past</td>\n",
        "      <td>04Oct2020</td>\n",
        "      <td>15Oct2020</td>\n",
        "      <td>81800269</td>\n",
        "      <td>-</td>\n",
        "      <td>-</td>\n",
        "      <td>-</td>\n",
        "      <td>-</td>\n",
        "      <td>-</td>\n",
        "      <td>-</td>\n",
        "      <td>-</td>\n",
        "      <td>-</td>\n",
        "      <td>-</td>\n",
        "      <td>-</td>\n",
        "      <td>-</td>\n",
        "      <td>-</td>\n",
        "      <td>-</td>\n",
        "      <td>-</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th rowspan=\"13\" valign=\"top\">Russia</th>\n",
        "      <th>0th</th>\n",
        "      <td>Past</td>\n",
        "      <td>12Feb2020</td>\n",
        "      <td>07May2020</td>\n",
        "      <td>330457362</td>\n",
        "      <td>SIR-F</td>\n",
        "      <td>0.02</td>\n",
        "      <td>0.602763</td>\n",
        "      <td>0.544883</td>\n",
        "      <td>0.0336598</td>\n",
        "      <td>0.00231766</td>\n",
        "      <td>360</td>\n",
        "      <td>0</td>\n",
        "      <td>7</td>\n",
        "      <td>107</td>\n",
        "      <td>0.603</td>\n",
        "      <td>19.3133</td>\n",
        "      <td>1811</td>\n",
        "      <td>1 min  0 sec</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>1st</th>\n",
        "      <td>Past</td>\n",
        "      <td>08May2020</td>\n",
        "      <td>18May2020</td>\n",
        "      <td>330457362</td>\n",
        "      <td>SIR-F</td>\n",
        "      <td>2.4</td>\n",
        "      <td>0.000593293</td>\n",
        "      <td>0.000113612</td>\n",
        "      <td>0.0117934</td>\n",
        "      <td>0.00480528</td>\n",
        "      <td>360</td>\n",
        "      <td>2200</td>\n",
        "      <td>21</td>\n",
        "      <td>52</td>\n",
        "      <td>0.001</td>\n",
        "      <td>0.0904316</td>\n",
        "      <td>1777</td>\n",
        "      <td>1 min  0 sec</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>2nd</th>\n",
        "      <td>Past</td>\n",
        "      <td>19May2020</td>\n",
        "      <td>29May2020</td>\n",
        "      <td>330457362</td>\n",
        "      <td>SIR-F</td>\n",
        "      <td>1.03</td>\n",
        "      <td>0.000336749</td>\n",
        "      <td>0.000113213</td>\n",
        "      <td>0.00670743</td>\n",
        "      <td>0.00639185</td>\n",
        "      <td>360</td>\n",
        "      <td>2208</td>\n",
        "      <td>37</td>\n",
        "      <td>39</td>\n",
        "      <td>0</td>\n",
        "      <td>0.111343</td>\n",
        "      <td>1905</td>\n",
        "      <td>1 min  0 sec</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>3rd</th>\n",
        "      <td>Past</td>\n",
        "      <td>30May2020</td>\n",
        "      <td>10Jun2020</td>\n",
        "      <td>330457362</td>\n",
        "      <td>SIR-F</td>\n",
        "      <td>1.03</td>\n",
        "      <td>0.0187085</td>\n",
        "      <td>1.1065e-05</td>\n",
        "      <td>0.00480949</td>\n",
        "      <td>0.00456307</td>\n",
        "      <td>360</td>\n",
        "      <td>22593</td>\n",
        "      <td>51</td>\n",
        "      <td>54</td>\n",
        "      <td>0.019</td>\n",
        "      <td>0.098037</td>\n",
        "      <td>1933</td>\n",
        "      <td>1 min  0 sec</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>4th</th>\n",
        "      <td>Past</td>\n",
        "      <td>11Jun2020</td>\n",
        "      <td>20Jun2020</td>\n",
        "      <td>330457362</td>\n",
        "      <td>SIR-F</td>\n",
        "      <td>0.89</td>\n",
        "      <td>0.000351948</td>\n",
        "      <td>7.9062e-05</td>\n",
        "      <td>0.00376894</td>\n",
        "      <td>0.00416205</td>\n",
        "      <td>360</td>\n",
        "      <td>3162</td>\n",
        "      <td>66</td>\n",
        "      <td>60</td>\n",
        "      <td>0</td>\n",
        "      <td>0.0664697</td>\n",
        "      <td>1046</td>\n",
        "      <td>1 min  0 sec</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>5th</th>\n",
        "      <td>Past</td>\n",
        "      <td>21Jun2020</td>\n",
        "      <td>03Jul2020</td>\n",
        "      <td>330457362</td>\n",
        "      <td>SIR-F</td>\n",
        "      <td>1.01</td>\n",
        "      <td>0.018459</td>\n",
        "      <td>9.85581e-06</td>\n",
        "      <td>0.00267236</td>\n",
        "      <td>0.00258315</td>\n",
        "      <td>360</td>\n",
        "      <td>25365</td>\n",
        "      <td>93</td>\n",
        "      <td>96</td>\n",
        "      <td>0.018</td>\n",
        "      <td>0.06995</td>\n",
        "      <td>1971</td>\n",
        "      <td>1 min  0 sec</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>6th</th>\n",
        "      <td>Past</td>\n",
        "      <td>04Jul2020</td>\n",
        "      <td>17Jul2020</td>\n",
        "      <td>330457362</td>\n",
        "      <td>SIR-F</td>\n",
        "      <td>0.89</td>\n",
        "      <td>0.000241609</td>\n",
        "      <td>5.69757e-05</td>\n",
        "      <td>0.00229889</td>\n",
        "      <td>0.00251358</td>\n",
        "      <td>360</td>\n",
        "      <td>4387</td>\n",
        "      <td>108</td>\n",
        "      <td>99</td>\n",
        "      <td>0</td>\n",
        "      <td>0.0647278</td>\n",
        "      <td>1482</td>\n",
        "      <td>1 min  0 sec</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>7th</th>\n",
        "      <td>Past</td>\n",
        "      <td>18Jul2020</td>\n",
        "      <td>31Jul2020</td>\n",
        "      <td>330457362</td>\n",
        "      <td>-</td>\n",
        "      <td>-</td>\n",
        "      <td>-</td>\n",
        "      <td>-</td>\n",
        "      <td>-</td>\n",
        "      <td>-</td>\n",
        "      <td>-</td>\n",
        "      <td>-</td>\n",
        "      <td>-</td>\n",
        "      <td>-</td>\n",
        "      <td>-</td>\n",
        "      <td>-</td>\n",
        "      <td>-</td>\n",
        "      <td>-</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>8th</th>\n",
        "      <td>Past</td>\n",
        "      <td>01Aug2020</td>\n",
        "      <td>15Aug2020</td>\n",
        "      <td>330457362</td>\n",
        "      <td>SIR-F</td>\n",
        "      <td>0.73</td>\n",
        "      <td>0.0166376</td>\n",
        "      <td>1.10626e-05</td>\n",
        "      <td>0.00142563</td>\n",
        "      <td>0.00191296</td>\n",
        "      <td>360</td>\n",
        "      <td>22598</td>\n",
        "      <td>175</td>\n",
        "      <td>130</td>\n",
        "      <td>0.017</td>\n",
        "      <td>0.0563194</td>\n",
        "      <td>1945</td>\n",
        "      <td>1 min  0 sec</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>9th</th>\n",
        "      <td>Past</td>\n",
        "      <td>16Aug2020</td>\n",
        "      <td>02Sep2020</td>\n",
        "      <td>330457362</td>\n",
        "      <td>SIR-F</td>\n",
        "      <td>0.87</td>\n",
        "      <td>0.0194786</td>\n",
        "      <td>1.88817e-06</td>\n",
        "      <td>0.00127257</td>\n",
        "      <td>0.00142586</td>\n",
        "      <td>360</td>\n",
        "      <td>132403</td>\n",
        "      <td>196</td>\n",
        "      <td>175</td>\n",
        "      <td>0.019</td>\n",
        "      <td>0.0531401</td>\n",
        "      <td>1921</td>\n",
        "      <td>1 min  0 sec</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>10th</th>\n",
        "      <td>Past</td>\n",
        "      <td>03Sep2020</td>\n",
        "      <td>18Sep2020</td>\n",
        "      <td>330457362</td>\n",
        "      <td>SIR-F</td>\n",
        "      <td>1.02</td>\n",
        "      <td>0.00162779</td>\n",
        "      <td>2.12819e-05</td>\n",
        "      <td>0.00127898</td>\n",
        "      <td>0.00123187</td>\n",
        "      <td>360</td>\n",
        "      <td>11747</td>\n",
        "      <td>195</td>\n",
        "      <td>202</td>\n",
        "      <td>0.002</td>\n",
        "      <td>0.0388147</td>\n",
        "      <td>1934</td>\n",
        "      <td>1 min  0 sec</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>11th</th>\n",
        "      <td>Past</td>\n",
        "      <td>19Sep2020</td>\n",
        "      <td>02Oct2020</td>\n",
        "      <td>330457362</td>\n",
        "      <td>SIR-F</td>\n",
        "      <td>1.55</td>\n",
        "      <td>0.0171651</td>\n",
        "      <td>9.8537e-06</td>\n",
        "      <td>0.00152816</td>\n",
        "      <td>0.000956091</td>\n",
        "      <td>360</td>\n",
        "      <td>25371</td>\n",
        "      <td>163</td>\n",
        "      <td>261</td>\n",
        "      <td>0.017</td>\n",
        "      <td>0.0281576</td>\n",
        "      <td>1926</td>\n",
        "      <td>1 min  0 sec</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>12th</th>\n",
        "      <td>Past</td>\n",
        "      <td>03Oct2020</td>\n",
        "      <td>15Oct2020</td>\n",
        "      <td>330457362</td>\n",
        "      <td>SIR-F</td>\n",
        "      <td>2.02</td>\n",
        "      <td>0.00132945</td>\n",
        "      <td>2.50181e-05</td>\n",
        "      <td>0.00234166</td>\n",
        "      <td>0.00113147</td>\n",
        "      <td>360</td>\n",
        "      <td>9992</td>\n",
        "      <td>106</td>\n",
        "      <td>220</td>\n",
        "      <td>0.001</td>\n",
        "      <td>0.0161718</td>\n",
        "      <td>815</td>\n",
        "      <td>0 min 20 sec</td>\n",
        "    </tr>\n",
        "  </tbody>\n",
        "</table>\n",
        "</div>"
       ],
       "output_type": "pyout",
       "prompt_number": 12,
       "text": [
        "               Type      Start        End  Population    ODE    Rt  \\\n",
        "Country Phase                                                        \n",
        "Nigeria 0th    Past  18Mar2020  18May2020   195874740  SIR-F  5.85   \n",
        "        1st    Past  19May2020  06Jun2020   195874740  SIR-F  2.99   \n",
        "        2nd    Past  07Jun2020  17Jun2020   195874740  SIR-F  2.58   \n",
        "        3rd    Past  18Jun2020  26Jun2020   195874740  SIR-F  2.42   \n",
        "        4th    Past  27Jun2020  04Jul2020   195874740  SIR-F  1.44   \n",
        "        5th    Past  05Jul2020  12Jul2020   195874740  SIR-F  2.08   \n",
        "        6th    Past  13Jul2020  20Jul2020   195874740  SIR-F  2.69   \n",
        "        7th    Past  21Jul2020  28Jul2020   195874740  SIR-F  1.29   \n",
        "        8th    Past  29Jul2020  07Aug2020   195874740      -     -   \n",
        "        9th    Past  08Aug2020  18Aug2020   195874740  SIR-F  1.16   \n",
        "        10th   Past  19Aug2020  01Sep2020   195874740  SIR-F  0.89   \n",
        "        11th   Past  02Sep2020  23Sep2020   195874740  SIR-F  0.71   \n",
        "        12th   Past  24Sep2020  15Oct2020   195874740  SIR-F  0.97   \n",
        "Iran    0th    Past  26Feb2020  30Mar2020    81800269  SIR-F  1.99   \n",
        "        1st    Past  31Mar2020  18Apr2020    81800269  SIR-F  0.82   \n",
        "        2nd    Past  19Apr2020  14May2020    81800269  SIR-F  0.74   \n",
        "        3rd    Past  15May2020  31May2020    81800269  SIR-F  1.27   \n",
        "        4th    Past  01Jun2020  16Jun2020    81800269  SIR-F  1.16   \n",
        "        5th    Past  17Jun2020  01Jul2020    81800269  SIR-F  0.93   \n",
        "        6th    Past  02Jul2020  17Jul2020    81800269  SIR-F  0.88   \n",
        "        7th    Past  18Jul2020  31Jul2020    81800269  SIR-F  1.03   \n",
        "        8th    Past  01Aug2020  17Aug2020    81800269  SIR-F  1.06   \n",
        "        9th    Past  18Aug2020  05Sep2020    81800269  SIR-F  1.12   \n",
        "        10th   Past  06Sep2020  21Sep2020    81800269  SIR-F  1.29   \n",
        "        11th   Past  22Sep2020  03Oct2020    81800269      -     -   \n",
        "        12th   Past  04Oct2020  15Oct2020    81800269      -     -   \n",
        "Russia  0th    Past  12Feb2020  07May2020   330457362  SIR-F  0.02   \n",
        "        1st    Past  08May2020  18May2020   330457362  SIR-F   2.4   \n",
        "        2nd    Past  19May2020  29May2020   330457362  SIR-F  1.03   \n",
        "        3rd    Past  30May2020  10Jun2020   330457362  SIR-F  1.03   \n",
        "        4th    Past  11Jun2020  20Jun2020   330457362  SIR-F  0.89   \n",
        "        5th    Past  21Jun2020  03Jul2020   330457362  SIR-F  1.01   \n",
        "        6th    Past  04Jul2020  17Jul2020   330457362  SIR-F  0.89   \n",
        "        7th    Past  18Jul2020  31Jul2020   330457362      -     -   \n",
        "        8th    Past  01Aug2020  15Aug2020   330457362  SIR-F  0.73   \n",
        "        9th    Past  16Aug2020  02Sep2020   330457362  SIR-F  0.87   \n",
        "        10th   Past  03Sep2020  18Sep2020   330457362  SIR-F  1.02   \n",
        "        11th   Past  19Sep2020  02Oct2020   330457362  SIR-F  1.55   \n",
        "        12th   Past  03Oct2020  15Oct2020   330457362  SIR-F  2.02   \n",
        "\n",
        "                     theta        kappa         rho        sigma  tau  \\\n",
        "Country Phase                                                           \n",
        "Nigeria 0th      0.0464515  0.000549316   0.0339786   0.00499261  360   \n",
        "        1st      0.0186545  7.05081e-05   0.0143014   0.00462203  360   \n",
        "        2nd       0.019827  1.85523e-06   0.0138185   0.00525492  360   \n",
        "        3rd     0.00156886  0.000191061   0.0115673   0.00457367  360   \n",
        "        4th      0.0131092  5.43317e-05  0.00938301   0.00637319  360   \n",
        "        5th     0.00400889  0.000164857  0.00777176    0.0035494  360   \n",
        "        6th    0.000443457   9.8046e-05  0.00757691   0.00271978  360   \n",
        "        7th     0.00453572  9.26077e-05  0.00678357   0.00513507  360   \n",
        "        8th              -            -           -            -    -   \n",
        "        9th     0.00397977  7.91693e-05   0.0077924   0.00661452  360   \n",
        "        10th    0.00102289  3.68953e-05  0.00554538   0.00621157  360   \n",
        "        11th     0.0191855  2.70015e-05   0.0035653   0.00487039  360   \n",
        "        12th   5.51546e-05  6.00228e-05  0.00429553   0.00438749  360   \n",
        "Iran    0th      0.0559513    0.0162145   0.0484873   0.00679692  360   \n",
        "        1st      0.0525092   0.00033091   0.0183214    0.0208991  360   \n",
        "        2nd      0.0270966   0.00067746    0.018617    0.0239582  360   \n",
        "        3rd       0.017912  0.000238301   0.0257395    0.0197036  360   \n",
        "        4th      0.0180548  0.000293353   0.0208382    0.0174074  360   \n",
        "        5th       0.030815  0.000311675   0.0215975    0.0220884  360   \n",
        "        6th      0.0705136  5.94295e-05   0.0241261    0.0253118  360   \n",
        "        7th      0.0545177   0.00089129   0.0277308    0.0245982  360   \n",
        "        8th      0.0342677  0.000970817    0.024634    0.0213789  360   \n",
        "        9th     0.00843685  0.000750771   0.0178252    0.0150749  360   \n",
        "        10th     0.0527953  9.34715e-05   0.0191923    0.0140002  360   \n",
        "        11th             -            -           -            -    -   \n",
        "        12th             -            -           -            -    -   \n",
        "Russia  0th       0.602763     0.544883   0.0336598   0.00231766  360   \n",
        "        1st    0.000593293  0.000113612   0.0117934   0.00480528  360   \n",
        "        2nd    0.000336749  0.000113213  0.00670743   0.00639185  360   \n",
        "        3rd      0.0187085   1.1065e-05  0.00480949   0.00456307  360   \n",
        "        4th    0.000351948   7.9062e-05  0.00376894   0.00416205  360   \n",
        "        5th       0.018459  9.85581e-06  0.00267236   0.00258315  360   \n",
        "        6th    0.000241609  5.69757e-05  0.00229889   0.00251358  360   \n",
        "        7th              -            -           -            -    -   \n",
        "        8th      0.0166376  1.10626e-05  0.00142563   0.00191296  360   \n",
        "        9th      0.0194786  1.88817e-06  0.00127257   0.00142586  360   \n",
        "        10th    0.00162779  2.12819e-05  0.00127898   0.00123187  360   \n",
        "        11th     0.0171651   9.8537e-06  0.00152816  0.000956091  360   \n",
        "        12th    0.00132945  2.50181e-05  0.00234166   0.00113147  360   \n",
        "\n",
        "              1/alpha2 [day] 1/beta [day] 1/gamma [day] alpha1 [-]  \\\n",
        "Country Phase                                                        \n",
        "Nigeria 0th              455            7            50      0.046   \n",
        "        1st             3545           17            54      0.019   \n",
        "        2nd           134754           18            47       0.02   \n",
        "        3rd             1308           21            54      0.002   \n",
        "        4th             4601           26            39      0.013   \n",
        "        5th             1516           32            70      0.004   \n",
        "        6th             2549           32            91          0   \n",
        "        7th             2699           36            48      0.005   \n",
        "        8th                -            -             -          -   \n",
        "        9th             3157           32            37      0.004   \n",
        "        10th            6775           45            40      0.001   \n",
        "        11th            9258           70            51      0.019   \n",
        "        12th            4165           58            56          0   \n",
        "Iran    0th               15            5            36      0.056   \n",
        "        1st              755           13            11      0.053   \n",
        "        2nd              369           13            10      0.027   \n",
        "        3rd             1049            9            12      0.018   \n",
        "        4th              852           11            14      0.018   \n",
        "        5th              802           11            11      0.031   \n",
        "        6th             4206           10             9      0.071   \n",
        "        7th              280            9            10      0.055   \n",
        "        8th              257           10            11      0.034   \n",
        "        9th              332           14            16      0.008   \n",
        "        10th            2674           13            17      0.053   \n",
        "        11th               -            -             -          -   \n",
        "        12th               -            -             -          -   \n",
        "Russia  0th                0            7           107      0.603   \n",
        "        1st             2200           21            52      0.001   \n",
        "        2nd             2208           37            39          0   \n",
        "        3rd            22593           51            54      0.019   \n",
        "        4th             3162           66            60          0   \n",
        "        5th            25365           93            96      0.018   \n",
        "        6th             4387          108            99          0   \n",
        "        7th                -            -             -          -   \n",
        "        8th            22598          175           130      0.017   \n",
        "        9th           132403          196           175      0.019   \n",
        "        10th           11747          195           202      0.002   \n",
        "        11th           25371          163           261      0.017   \n",
        "        12th            9992          106           220      0.001   \n",
        "\n",
        "                    RMSLE Trials       Runtime  \n",
        "Country Phase                                   \n",
        "Nigeria 0th       2.28919   1900  1 min  0 sec  \n",
        "        1st      0.040455   1631  1 min  0 sec  \n",
        "        2nd     0.0242518    253  0 min  5 sec  \n",
        "        3rd     0.0136099    249  0 min  5 sec  \n",
        "        4th    0.00689474    196  0 min 10 sec  \n",
        "        5th    0.00491952    459  0 min 10 sec  \n",
        "        6th    0.00731525    453  0 min 10 sec  \n",
        "        7th      0.016536    255  0 min  5 sec  \n",
        "        8th             -      -             -  \n",
        "        9th     0.0435534    324  0 min 10 sec  \n",
        "        10th    0.0282793    532  0 min 15 sec  \n",
        "        11th     0.172538   1746  1 min  0 sec  \n",
        "        12th    0.0346343   1918  1 min  0 sec  \n",
        "Iran    0th        5.2564   1896  1 min  0 sec  \n",
        "        1st      0.199412   1917  1 min  0 sec  \n",
        "        2nd      0.207043    454  0 min 10 sec  \n",
        "        3rd     0.0284344    319  0 min 10 sec  \n",
        "        4th       0.04343   1817  0 min 55 sec  \n",
        "        5th       0.02275   1918  1 min  0 sec  \n",
        "        6th     0.0188563    249  0 min  5 sec  \n",
        "        7th     0.0228668   1663  1 min  0 sec  \n",
        "        8th     0.0248032   1730  0 min 55 sec  \n",
        "        9th     0.0301521    179  0 min  5 sec  \n",
        "        10th    0.0206641    174  0 min  5 sec  \n",
        "        11th            -      -             -  \n",
        "        12th            -      -             -  \n",
        "Russia  0th       19.3133   1811  1 min  0 sec  \n",
        "        1st     0.0904316   1777  1 min  0 sec  \n",
        "        2nd      0.111343   1905  1 min  0 sec  \n",
        "        3rd      0.098037   1933  1 min  0 sec  \n",
        "        4th     0.0664697   1046  1 min  0 sec  \n",
        "        5th       0.06995   1971  1 min  0 sec  \n",
        "        6th     0.0647278   1482  1 min  0 sec  \n",
        "        7th             -      -             -  \n",
        "        8th     0.0563194   1945  1 min  0 sec  \n",
        "        9th     0.0531401   1921  1 min  0 sec  \n",
        "        10th    0.0388147   1934  1 min  0 sec  \n",
        "        11th    0.0281576   1926  1 min  0 sec  \n",
        "        12th    0.0161718    815  0 min 20 sec  "
       ]
      }
     ],
     "prompt_number": 12
    },
    {
     "cell_type": "markdown",
     "metadata": {},
     "source": [
      "## Compare the history of parameters\n",
      "Here, compare the history of parameter values if countries."
     ]
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "# All parameter/day parameter/Rt/OxCGRT\n",
      "analyser.track().head()"
     ],
     "language": "python",
     "metadata": {},
     "outputs": [
      {
       "html": [
        "<div>\n",
        "<style scoped>\n",
        "    .dataframe tbody tr th:only-of-type {\n",
        "        vertical-align: middle;\n",
        "    }\n",
        "\n",
        "    .dataframe tbody tr th {\n",
        "        vertical-align: top;\n",
        "    }\n",
        "\n",
        "    .dataframe thead th {\n",
        "        text-align: right;\n",
        "    }\n",
        "</style>\n",
        "<table border=\"1\" class=\"dataframe\">\n",
        "  <thead>\n",
        "    <tr style=\"text-align: right;\">\n",
        "      <th></th>\n",
        "      <th>Date</th>\n",
        "      <th>Country</th>\n",
        "      <th>theta</th>\n",
        "      <th>kappa</th>\n",
        "      <th>rho</th>\n",
        "      <th>sigma</th>\n",
        "      <th>alpha1 [-]</th>\n",
        "      <th>1/alpha2 [day]</th>\n",
        "      <th>1/beta [day]</th>\n",
        "      <th>1/gamma [day]</th>\n",
        "      <th>...</th>\n",
        "      <th>Cancel_events</th>\n",
        "      <th>Gatherings_restrictions</th>\n",
        "      <th>Transport_closing</th>\n",
        "      <th>Stay_home_restrictions</th>\n",
        "      <th>Internal_movement_restrictions</th>\n",
        "      <th>International_movement_restrictions</th>\n",
        "      <th>Information_campaigns</th>\n",
        "      <th>Testing_policy</th>\n",
        "      <th>Contact_tracing</th>\n",
        "      <th>Stringency_index</th>\n",
        "    </tr>\n",
        "  </thead>\n",
        "  <tbody>\n",
        "    <tr>\n",
        "      <th>0</th>\n",
        "      <td>2020-02-09</td>\n",
        "      <td>United States</td>\n",
        "      <td>0.0551635</td>\n",
        "      <td>8.16885e-05</td>\n",
        "      <td>0.0103372</td>\n",
        "      <td>0.00148396</td>\n",
        "      <td>0.055</td>\n",
        "      <td>3060</td>\n",
        "      <td>24</td>\n",
        "      <td>168</td>\n",
        "      <td>...</td>\n",
        "      <td>0</td>\n",
        "      <td>0</td>\n",
        "      <td>0</td>\n",
        "      <td>0</td>\n",
        "      <td>0</td>\n",
        "      <td>2</td>\n",
        "      <td>0</td>\n",
        "      <td>0</td>\n",
        "      <td>1</td>\n",
        "      <td>5.56</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>1</th>\n",
        "      <td>2020-02-09</td>\n",
        "      <td>United States</td>\n",
        "      <td>0.0551635</td>\n",
        "      <td>8.16885e-05</td>\n",
        "      <td>0.0103372</td>\n",
        "      <td>0.00148396</td>\n",
        "      <td>0.055</td>\n",
        "      <td>3060</td>\n",
        "      <td>24</td>\n",
        "      <td>168</td>\n",
        "      <td>...</td>\n",
        "      <td>0</td>\n",
        "      <td>0</td>\n",
        "      <td>0</td>\n",
        "      <td>0</td>\n",
        "      <td>0</td>\n",
        "      <td>0</td>\n",
        "      <td>0</td>\n",
        "      <td>0</td>\n",
        "      <td>0</td>\n",
        "      <td>0.00</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>2</th>\n",
        "      <td>2020-02-09</td>\n",
        "      <td>United States</td>\n",
        "      <td>0.0551635</td>\n",
        "      <td>8.16885e-05</td>\n",
        "      <td>0.0103372</td>\n",
        "      <td>0.00148396</td>\n",
        "      <td>0.055</td>\n",
        "      <td>3060</td>\n",
        "      <td>24</td>\n",
        "      <td>168</td>\n",
        "      <td>...</td>\n",
        "      <td>0</td>\n",
        "      <td>0</td>\n",
        "      <td>0</td>\n",
        "      <td>0</td>\n",
        "      <td>0</td>\n",
        "      <td>0</td>\n",
        "      <td>0</td>\n",
        "      <td>0</td>\n",
        "      <td>0</td>\n",
        "      <td>0.00</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>3</th>\n",
        "      <td>2020-02-09</td>\n",
        "      <td>United States</td>\n",
        "      <td>0.0551635</td>\n",
        "      <td>8.16885e-05</td>\n",
        "      <td>0.0103372</td>\n",
        "      <td>0.00148396</td>\n",
        "      <td>0.055</td>\n",
        "      <td>3060</td>\n",
        "      <td>24</td>\n",
        "      <td>168</td>\n",
        "      <td>...</td>\n",
        "      <td>0</td>\n",
        "      <td>0</td>\n",
        "      <td>0</td>\n",
        "      <td>0</td>\n",
        "      <td>0</td>\n",
        "      <td>0</td>\n",
        "      <td>0</td>\n",
        "      <td>0</td>\n",
        "      <td>0</td>\n",
        "      <td>0.00</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>4</th>\n",
        "      <td>2020-02-09</td>\n",
        "      <td>United States</td>\n",
        "      <td>0.0551635</td>\n",
        "      <td>8.16885e-05</td>\n",
        "      <td>0.0103372</td>\n",
        "      <td>0.00148396</td>\n",
        "      <td>0.055</td>\n",
        "      <td>3060</td>\n",
        "      <td>24</td>\n",
        "      <td>168</td>\n",
        "      <td>...</td>\n",
        "      <td>0</td>\n",
        "      <td>0</td>\n",
        "      <td>0</td>\n",
        "      <td>0</td>\n",
        "      <td>0</td>\n",
        "      <td>0</td>\n",
        "      <td>0</td>\n",
        "      <td>0</td>\n",
        "      <td>0</td>\n",
        "      <td>0.00</td>\n",
        "    </tr>\n",
        "  </tbody>\n",
        "</table>\n",
        "<p>5 rows \u00d7 23 columns</p>\n",
        "</div>"
       ],
       "output_type": "pyout",
       "prompt_number": 13,
       "text": [
        "        Date        Country      theta        kappa        rho       sigma  \\\n",
        "0 2020-02-09  United States  0.0551635  8.16885e-05  0.0103372  0.00148396   \n",
        "1 2020-02-09  United States  0.0551635  8.16885e-05  0.0103372  0.00148396   \n",
        "2 2020-02-09  United States  0.0551635  8.16885e-05  0.0103372  0.00148396   \n",
        "3 2020-02-09  United States  0.0551635  8.16885e-05  0.0103372  0.00148396   \n",
        "4 2020-02-09  United States  0.0551635  8.16885e-05  0.0103372  0.00148396   \n",
        "\n",
        "  alpha1 [-] 1/alpha2 [day] 1/beta [day] 1/gamma [day]  ... Cancel_events  \\\n",
        "0      0.055           3060           24           168  ...             0   \n",
        "1      0.055           3060           24           168  ...             0   \n",
        "2      0.055           3060           24           168  ...             0   \n",
        "3      0.055           3060           24           168  ...             0   \n",
        "4      0.055           3060           24           168  ...             0   \n",
        "\n",
        "   Gatherings_restrictions  Transport_closing  Stay_home_restrictions  \\\n",
        "0                        0                  0                       0   \n",
        "1                        0                  0                       0   \n",
        "2                        0                  0                       0   \n",
        "3                        0                  0                       0   \n",
        "4                        0                  0                       0   \n",
        "\n",
        "   Internal_movement_restrictions  International_movement_restrictions  \\\n",
        "0                               0                                    2   \n",
        "1                               0                                    0   \n",
        "2                               0                                    0   \n",
        "3                               0                                    0   \n",
        "4                               0                                    0   \n",
        "\n",
        "   Information_campaigns  Testing_policy  Contact_tracing  Stringency_index  \n",
        "0                      0               0                1              5.56  \n",
        "1                      0               0                0              0.00  \n",
        "2                      0               0                0              0.00  \n",
        "3                      0               0                0              0.00  \n",
        "4                      0               0                0              0.00  \n",
        "\n",
        "[5 rows x 23 columns]"
       ]
      }
     ],
     "prompt_number": 13
    },
    {
     "cell_type": "heading",
     "level": 3,
     "metadata": {},
     "source": [
      "$Rt$: Reprodcution number $\\mathrm{[-]}$"
     ]
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "analyser.param_history(\"Rt\", roll_window=None).tail()"
     ],
     "language": "python",
     "metadata": {},
     "outputs": [
      {
       "output_type": "display_data",
       "png": "\n",
       "text": [
        "<Figure size 648x432 with 1 Axes>"
       ]
      },
      {
       "html": [
        "<div>\n",
        "<style scoped>\n",
        "    .dataframe tbody tr th:only-of-type {\n",
        "        vertical-align: middle;\n",
        "    }\n",
        "\n",
        "    .dataframe tbody tr th {\n",
        "        vertical-align: top;\n",
        "    }\n",
        "\n",
        "    .dataframe thead th {\n",
        "        text-align: right;\n",
        "    }\n",
        "</style>\n",
        "<table border=\"1\" class=\"dataframe\">\n",
        "  <thead>\n",
        "    <tr style=\"text-align: right;\">\n",
        "      <th>Country</th>\n",
        "      <th>Bahrain</th>\n",
        "      <th>Bolivia</th>\n",
        "      <th>Brazil</th>\n",
        "      <th>Dominican Republic</th>\n",
        "      <th>France</th>\n",
        "      <th>Iran</th>\n",
        "      <th>Kuwait</th>\n",
        "      <th>Mexico</th>\n",
        "      <th>Moldova</th>\n",
        "      <th>Nigeria</th>\n",
        "      <th>Russia</th>\n",
        "      <th>Turkey</th>\n",
        "      <th>United States</th>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>Date</th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "    </tr>\n",
        "  </thead>\n",
        "  <tbody>\n",
        "    <tr>\n",
        "      <th>2020-10-11</th>\n",
        "      <td>0.87</td>\n",
        "      <td>0.6</td>\n",
        "      <td>0.99</td>\n",
        "      <td>0.59</td>\n",
        "      <td>29.96</td>\n",
        "      <td>1.29</td>\n",
        "      <td>0.96</td>\n",
        "      <td>1.08</td>\n",
        "      <td>1.82</td>\n",
        "      <td>0.97</td>\n",
        "      <td>2.02</td>\n",
        "      <td>1.09</td>\n",
        "      <td>2.28</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>2020-10-12</th>\n",
        "      <td>0.87</td>\n",
        "      <td>0.6</td>\n",
        "      <td>0.99</td>\n",
        "      <td>0.59</td>\n",
        "      <td>29.96</td>\n",
        "      <td>1.29</td>\n",
        "      <td>0.96</td>\n",
        "      <td>1.08</td>\n",
        "      <td>1.82</td>\n",
        "      <td>0.97</td>\n",
        "      <td>2.02</td>\n",
        "      <td>1.09</td>\n",
        "      <td>2.28</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>2020-10-13</th>\n",
        "      <td>0.87</td>\n",
        "      <td>0.6</td>\n",
        "      <td>0.99</td>\n",
        "      <td>0.59</td>\n",
        "      <td>29.96</td>\n",
        "      <td>1.29</td>\n",
        "      <td>0.96</td>\n",
        "      <td>1.08</td>\n",
        "      <td>1.82</td>\n",
        "      <td>0.97</td>\n",
        "      <td>2.02</td>\n",
        "      <td>1.09</td>\n",
        "      <td>2.28</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>2020-10-14</th>\n",
        "      <td>0.87</td>\n",
        "      <td>0.6</td>\n",
        "      <td>0.99</td>\n",
        "      <td>0.59</td>\n",
        "      <td>29.96</td>\n",
        "      <td>1.29</td>\n",
        "      <td>0.96</td>\n",
        "      <td>1.08</td>\n",
        "      <td>1.82</td>\n",
        "      <td>0.97</td>\n",
        "      <td>2.02</td>\n",
        "      <td>1.09</td>\n",
        "      <td>2.28</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>2020-10-15</th>\n",
        "      <td>0.87</td>\n",
        "      <td>0.6</td>\n",
        "      <td>0.99</td>\n",
        "      <td>0.59</td>\n",
        "      <td>29.96</td>\n",
        "      <td>1.29</td>\n",
        "      <td>0.96</td>\n",
        "      <td>1.08</td>\n",
        "      <td>1.82</td>\n",
        "      <td>0.97</td>\n",
        "      <td>2.02</td>\n",
        "      <td>1.09</td>\n",
        "      <td>2.28</td>\n",
        "    </tr>\n",
        "  </tbody>\n",
        "</table>\n",
        "</div>"
       ],
       "output_type": "pyout",
       "prompt_number": 14,
       "text": [
        "Country     Bahrain  Bolivia  Brazil  Dominican Republic  France  Iran  \\\n",
        "Date                                                                     \n",
        "2020-10-11     0.87      0.6    0.99                0.59   29.96  1.29   \n",
        "2020-10-12     0.87      0.6    0.99                0.59   29.96  1.29   \n",
        "2020-10-13     0.87      0.6    0.99                0.59   29.96  1.29   \n",
        "2020-10-14     0.87      0.6    0.99                0.59   29.96  1.29   \n",
        "2020-10-15     0.87      0.6    0.99                0.59   29.96  1.29   \n",
        "\n",
        "Country     Kuwait  Mexico  Moldova  Nigeria  Russia  Turkey  United States  \n",
        "Date                                                                         \n",
        "2020-10-11    0.96    1.08     1.82     0.97    2.02    1.09           2.28  \n",
        "2020-10-12    0.96    1.08     1.82     0.97    2.02    1.09           2.28  \n",
        "2020-10-13    0.96    1.08     1.82     0.97    2.02    1.09           2.28  \n",
        "2020-10-14    0.96    1.08     1.82     0.97    2.02    1.09           2.28  \n",
        "2020-10-15    0.96    1.08     1.82     0.97    2.02    1.09           2.28  "
       ]
      }
     ],
     "prompt_number": 14
    },
    {
     "cell_type": "heading",
     "level": 3,
     "metadata": {},
     "source": [
      "$\\rho$: Effective contact rate $\\mathrm{[-]}$"
     ]
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "analyser.param_history(\"rho\", roll_window=None).tail()"
     ],
     "language": "python",
     "metadata": {},
     "outputs": [
      {
       "output_type": "display_data",
       "png": "\n",
       "text": [
        "<Figure size 648x432 with 1 Axes>"
       ]
      },
      {
       "html": [
        "<div>\n",
        "<style scoped>\n",
        "    .dataframe tbody tr th:only-of-type {\n",
        "        vertical-align: middle;\n",
        "    }\n",
        "\n",
        "    .dataframe tbody tr th {\n",
        "        vertical-align: top;\n",
        "    }\n",
        "\n",
        "    .dataframe thead th {\n",
        "        text-align: right;\n",
        "    }\n",
        "</style>\n",
        "<table border=\"1\" class=\"dataframe\">\n",
        "  <thead>\n",
        "    <tr style=\"text-align: right;\">\n",
        "      <th>Country</th>\n",
        "      <th>Bahrain</th>\n",
        "      <th>Bolivia</th>\n",
        "      <th>Brazil</th>\n",
        "      <th>Dominican Republic</th>\n",
        "      <th>France</th>\n",
        "      <th>Iran</th>\n",
        "      <th>Kuwait</th>\n",
        "      <th>Mexico</th>\n",
        "      <th>Moldova</th>\n",
        "      <th>Nigeria</th>\n",
        "      <th>Russia</th>\n",
        "      <th>Turkey</th>\n",
        "      <th>United States</th>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>Date</th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "    </tr>\n",
        "  </thead>\n",
        "  <tbody>\n",
        "    <tr>\n",
        "      <th>2020-10-11</th>\n",
        "      <td>0.023723</td>\n",
        "      <td>0.0026</td>\n",
        "      <td>0.014614</td>\n",
        "      <td>0.004192</td>\n",
        "      <td>0.006979</td>\n",
        "      <td>0.019192</td>\n",
        "      <td>0.019362</td>\n",
        "      <td>0.033785</td>\n",
        "      <td>0.012518</td>\n",
        "      <td>0.004296</td>\n",
        "      <td>0.002342</td>\n",
        "      <td>0.011971</td>\n",
        "      <td>0.002998</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>2020-10-12</th>\n",
        "      <td>0.023723</td>\n",
        "      <td>0.0026</td>\n",
        "      <td>0.014614</td>\n",
        "      <td>0.004192</td>\n",
        "      <td>0.006979</td>\n",
        "      <td>0.019192</td>\n",
        "      <td>0.019362</td>\n",
        "      <td>0.033785</td>\n",
        "      <td>0.012518</td>\n",
        "      <td>0.004296</td>\n",
        "      <td>0.002342</td>\n",
        "      <td>0.011971</td>\n",
        "      <td>0.002998</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>2020-10-13</th>\n",
        "      <td>0.023723</td>\n",
        "      <td>0.0026</td>\n",
        "      <td>0.014614</td>\n",
        "      <td>0.004192</td>\n",
        "      <td>0.006979</td>\n",
        "      <td>0.019192</td>\n",
        "      <td>0.019362</td>\n",
        "      <td>0.033785</td>\n",
        "      <td>0.012518</td>\n",
        "      <td>0.004296</td>\n",
        "      <td>0.002342</td>\n",
        "      <td>0.011971</td>\n",
        "      <td>0.002998</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>2020-10-14</th>\n",
        "      <td>0.023723</td>\n",
        "      <td>0.0026</td>\n",
        "      <td>0.014614</td>\n",
        "      <td>0.004192</td>\n",
        "      <td>0.006979</td>\n",
        "      <td>0.019192</td>\n",
        "      <td>0.019362</td>\n",
        "      <td>0.033785</td>\n",
        "      <td>0.012518</td>\n",
        "      <td>0.004296</td>\n",
        "      <td>0.002342</td>\n",
        "      <td>0.011971</td>\n",
        "      <td>0.002998</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>2020-10-15</th>\n",
        "      <td>0.023723</td>\n",
        "      <td>0.0026</td>\n",
        "      <td>0.014614</td>\n",
        "      <td>0.004192</td>\n",
        "      <td>0.006979</td>\n",
        "      <td>0.019192</td>\n",
        "      <td>0.019362</td>\n",
        "      <td>0.033785</td>\n",
        "      <td>0.012518</td>\n",
        "      <td>0.004296</td>\n",
        "      <td>0.002342</td>\n",
        "      <td>0.011971</td>\n",
        "      <td>0.002998</td>\n",
        "    </tr>\n",
        "  </tbody>\n",
        "</table>\n",
        "</div>"
       ],
       "output_type": "pyout",
       "prompt_number": 15,
       "text": [
        "Country      Bahrain  Bolivia    Brazil  Dominican Republic    France  \\\n",
        "Date                                                                    \n",
        "2020-10-11  0.023723   0.0026  0.014614            0.004192  0.006979   \n",
        "2020-10-12  0.023723   0.0026  0.014614            0.004192  0.006979   \n",
        "2020-10-13  0.023723   0.0026  0.014614            0.004192  0.006979   \n",
        "2020-10-14  0.023723   0.0026  0.014614            0.004192  0.006979   \n",
        "2020-10-15  0.023723   0.0026  0.014614            0.004192  0.006979   \n",
        "\n",
        "Country         Iran    Kuwait    Mexico   Moldova   Nigeria    Russia  \\\n",
        "Date                                                                     \n",
        "2020-10-11  0.019192  0.019362  0.033785  0.012518  0.004296  0.002342   \n",
        "2020-10-12  0.019192  0.019362  0.033785  0.012518  0.004296  0.002342   \n",
        "2020-10-13  0.019192  0.019362  0.033785  0.012518  0.004296  0.002342   \n",
        "2020-10-14  0.019192  0.019362  0.033785  0.012518  0.004296  0.002342   \n",
        "2020-10-15  0.019192  0.019362  0.033785  0.012518  0.004296  0.002342   \n",
        "\n",
        "Country       Turkey  United States  \n",
        "Date                                 \n",
        "2020-10-11  0.011971       0.002998  \n",
        "2020-10-12  0.011971       0.002998  \n",
        "2020-10-13  0.011971       0.002998  \n",
        "2020-10-14  0.011971       0.002998  \n",
        "2020-10-15  0.011971       0.002998  "
       ]
      }
     ],
     "prompt_number": 15
    },
    {
     "cell_type": "heading",
     "level": 3,
     "metadata": {},
     "source": [
      "$\\sigma$: Recovery rate $\\mathrm{[-]}$"
     ]
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "analyser.param_history(\"sigma\", roll_window=None).tail()"
     ],
     "language": "python",
     "metadata": {},
     "outputs": [
      {
       "output_type": "display_data",
       "png": "\n",
       "text": [
        "<Figure size 648x432 with 1 Axes>"
       ]
      },
      {
       "html": [
        "<div>\n",
        "<style scoped>\n",
        "    .dataframe tbody tr th:only-of-type {\n",
        "        vertical-align: middle;\n",
        "    }\n",
        "\n",
        "    .dataframe tbody tr th {\n",
        "        vertical-align: top;\n",
        "    }\n",
        "\n",
        "    .dataframe thead th {\n",
        "        text-align: right;\n",
        "    }\n",
        "</style>\n",
        "<table border=\"1\" class=\"dataframe\">\n",
        "  <thead>\n",
        "    <tr style=\"text-align: right;\">\n",
        "      <th>Country</th>\n",
        "      <th>Bahrain</th>\n",
        "      <th>Bolivia</th>\n",
        "      <th>Brazil</th>\n",
        "      <th>Dominican Republic</th>\n",
        "      <th>France</th>\n",
        "      <th>Iran</th>\n",
        "      <th>Kuwait</th>\n",
        "      <th>Mexico</th>\n",
        "      <th>Moldova</th>\n",
        "      <th>Nigeria</th>\n",
        "      <th>Russia</th>\n",
        "      <th>Turkey</th>\n",
        "      <th>United States</th>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>Date</th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "    </tr>\n",
        "  </thead>\n",
        "  <tbody>\n",
        "    <tr>\n",
        "      <th>2020-10-11</th>\n",
        "      <td>0.026993</td>\n",
        "      <td>0.004098</td>\n",
        "      <td>0.014451</td>\n",
        "      <td>0.006973</td>\n",
        "      <td>0.000212</td>\n",
        "      <td>0.014</td>\n",
        "      <td>0.020099</td>\n",
        "      <td>0.027715</td>\n",
        "      <td>0.006715</td>\n",
        "      <td>0.004387</td>\n",
        "      <td>0.001131</td>\n",
        "      <td>0.010497</td>\n",
        "      <td>0.001289</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>2020-10-12</th>\n",
        "      <td>0.026993</td>\n",
        "      <td>0.004098</td>\n",
        "      <td>0.014451</td>\n",
        "      <td>0.006973</td>\n",
        "      <td>0.000212</td>\n",
        "      <td>0.014</td>\n",
        "      <td>0.020099</td>\n",
        "      <td>0.027715</td>\n",
        "      <td>0.006715</td>\n",
        "      <td>0.004387</td>\n",
        "      <td>0.001131</td>\n",
        "      <td>0.010497</td>\n",
        "      <td>0.001289</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>2020-10-13</th>\n",
        "      <td>0.026993</td>\n",
        "      <td>0.004098</td>\n",
        "      <td>0.014451</td>\n",
        "      <td>0.006973</td>\n",
        "      <td>0.000212</td>\n",
        "      <td>0.014</td>\n",
        "      <td>0.020099</td>\n",
        "      <td>0.027715</td>\n",
        "      <td>0.006715</td>\n",
        "      <td>0.004387</td>\n",
        "      <td>0.001131</td>\n",
        "      <td>0.010497</td>\n",
        "      <td>0.001289</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>2020-10-14</th>\n",
        "      <td>0.026993</td>\n",
        "      <td>0.004098</td>\n",
        "      <td>0.014451</td>\n",
        "      <td>0.006973</td>\n",
        "      <td>0.000212</td>\n",
        "      <td>0.014</td>\n",
        "      <td>0.020099</td>\n",
        "      <td>0.027715</td>\n",
        "      <td>0.006715</td>\n",
        "      <td>0.004387</td>\n",
        "      <td>0.001131</td>\n",
        "      <td>0.010497</td>\n",
        "      <td>0.001289</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>2020-10-15</th>\n",
        "      <td>0.026993</td>\n",
        "      <td>0.004098</td>\n",
        "      <td>0.014451</td>\n",
        "      <td>0.006973</td>\n",
        "      <td>0.000212</td>\n",
        "      <td>0.014</td>\n",
        "      <td>0.020099</td>\n",
        "      <td>0.027715</td>\n",
        "      <td>0.006715</td>\n",
        "      <td>0.004387</td>\n",
        "      <td>0.001131</td>\n",
        "      <td>0.010497</td>\n",
        "      <td>0.001289</td>\n",
        "    </tr>\n",
        "  </tbody>\n",
        "</table>\n",
        "</div>"
       ],
       "output_type": "pyout",
       "prompt_number": 16,
       "text": [
        "Country      Bahrain   Bolivia    Brazil  Dominican Republic    France   Iran  \\\n",
        "Date                                                                            \n",
        "2020-10-11  0.026993  0.004098  0.014451            0.006973  0.000212  0.014   \n",
        "2020-10-12  0.026993  0.004098  0.014451            0.006973  0.000212  0.014   \n",
        "2020-10-13  0.026993  0.004098  0.014451            0.006973  0.000212  0.014   \n",
        "2020-10-14  0.026993  0.004098  0.014451            0.006973  0.000212  0.014   \n",
        "2020-10-15  0.026993  0.004098  0.014451            0.006973  0.000212  0.014   \n",
        "\n",
        "Country       Kuwait    Mexico   Moldova   Nigeria    Russia    Turkey  \\\n",
        "Date                                                                     \n",
        "2020-10-11  0.020099  0.027715  0.006715  0.004387  0.001131  0.010497   \n",
        "2020-10-12  0.020099  0.027715  0.006715  0.004387  0.001131  0.010497   \n",
        "2020-10-13  0.020099  0.027715  0.006715  0.004387  0.001131  0.010497   \n",
        "2020-10-14  0.020099  0.027715  0.006715  0.004387  0.001131  0.010497   \n",
        "2020-10-15  0.020099  0.027715  0.006715  0.004387  0.001131  0.010497   \n",
        "\n",
        "Country     United States  \n",
        "Date                       \n",
        "2020-10-11       0.001289  \n",
        "2020-10-12       0.001289  \n",
        "2020-10-13       0.001289  \n",
        "2020-10-14       0.001289  \n",
        "2020-10-15       0.001289  "
       ]
      }
     ],
     "prompt_number": 16
    },
    {
     "cell_type": "heading",
     "level": 3,
     "metadata": {},
     "source": [
      "$\\kappa$: Mortality rate of infected cases $\\mathrm{[-]}$"
     ]
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "analyser.param_history(\"kappa\", roll_window=None).tail()"
     ],
     "language": "python",
     "metadata": {},
     "outputs": [
      {
       "output_type": "display_data",
       "png": "\n",
       "text": [
        "<Figure size 648x432 with 1 Axes>"
       ]
      },
      {
       "html": [
        "<div>\n",
        "<style scoped>\n",
        "    .dataframe tbody tr th:only-of-type {\n",
        "        vertical-align: middle;\n",
        "    }\n",
        "\n",
        "    .dataframe tbody tr th {\n",
        "        vertical-align: top;\n",
        "    }\n",
        "\n",
        "    .dataframe thead th {\n",
        "        text-align: right;\n",
        "    }\n",
        "</style>\n",
        "<table border=\"1\" class=\"dataframe\">\n",
        "  <thead>\n",
        "    <tr style=\"text-align: right;\">\n",
        "      <th>Country</th>\n",
        "      <th>Bahrain</th>\n",
        "      <th>Bolivia</th>\n",
        "      <th>Brazil</th>\n",
        "      <th>Dominican Republic</th>\n",
        "      <th>France</th>\n",
        "      <th>Iran</th>\n",
        "      <th>Kuwait</th>\n",
        "      <th>Mexico</th>\n",
        "      <th>Moldova</th>\n",
        "      <th>Nigeria</th>\n",
        "      <th>Russia</th>\n",
        "      <th>Turkey</th>\n",
        "      <th>United States</th>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>Date</th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "    </tr>\n",
        "  </thead>\n",
        "  <tbody>\n",
        "    <tr>\n",
        "      <th>2020-10-11</th>\n",
        "      <td>0.000059</td>\n",
        "      <td>0.000215</td>\n",
        "      <td>0.000373</td>\n",
        "      <td>0.000098</td>\n",
        "      <td>0.000021</td>\n",
        "      <td>0.000093</td>\n",
        "      <td>0.000114</td>\n",
        "      <td>0.0015</td>\n",
        "      <td>0.000148</td>\n",
        "      <td>0.00006</td>\n",
        "      <td>0.000025</td>\n",
        "      <td>0.000213</td>\n",
        "      <td>0.000024</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>2020-10-12</th>\n",
        "      <td>0.000059</td>\n",
        "      <td>0.000215</td>\n",
        "      <td>0.000373</td>\n",
        "      <td>0.000098</td>\n",
        "      <td>0.000021</td>\n",
        "      <td>0.000093</td>\n",
        "      <td>0.000114</td>\n",
        "      <td>0.0015</td>\n",
        "      <td>0.000148</td>\n",
        "      <td>0.00006</td>\n",
        "      <td>0.000025</td>\n",
        "      <td>0.000213</td>\n",
        "      <td>0.000024</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>2020-10-13</th>\n",
        "      <td>0.000059</td>\n",
        "      <td>0.000215</td>\n",
        "      <td>0.000373</td>\n",
        "      <td>0.000098</td>\n",
        "      <td>0.000021</td>\n",
        "      <td>0.000093</td>\n",
        "      <td>0.000114</td>\n",
        "      <td>0.0015</td>\n",
        "      <td>0.000148</td>\n",
        "      <td>0.00006</td>\n",
        "      <td>0.000025</td>\n",
        "      <td>0.000213</td>\n",
        "      <td>0.000024</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>2020-10-14</th>\n",
        "      <td>0.000059</td>\n",
        "      <td>0.000215</td>\n",
        "      <td>0.000373</td>\n",
        "      <td>0.000098</td>\n",
        "      <td>0.000021</td>\n",
        "      <td>0.000093</td>\n",
        "      <td>0.000114</td>\n",
        "      <td>0.0015</td>\n",
        "      <td>0.000148</td>\n",
        "      <td>0.00006</td>\n",
        "      <td>0.000025</td>\n",
        "      <td>0.000213</td>\n",
        "      <td>0.000024</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>2020-10-15</th>\n",
        "      <td>0.000059</td>\n",
        "      <td>0.000215</td>\n",
        "      <td>0.000373</td>\n",
        "      <td>0.000098</td>\n",
        "      <td>0.000021</td>\n",
        "      <td>0.000093</td>\n",
        "      <td>0.000114</td>\n",
        "      <td>0.0015</td>\n",
        "      <td>0.000148</td>\n",
        "      <td>0.00006</td>\n",
        "      <td>0.000025</td>\n",
        "      <td>0.000213</td>\n",
        "      <td>0.000024</td>\n",
        "    </tr>\n",
        "  </tbody>\n",
        "</table>\n",
        "</div>"
       ],
       "output_type": "pyout",
       "prompt_number": 17,
       "text": [
        "Country      Bahrain   Bolivia    Brazil  Dominican Republic    France  \\\n",
        "Date                                                                     \n",
        "2020-10-11  0.000059  0.000215  0.000373            0.000098  0.000021   \n",
        "2020-10-12  0.000059  0.000215  0.000373            0.000098  0.000021   \n",
        "2020-10-13  0.000059  0.000215  0.000373            0.000098  0.000021   \n",
        "2020-10-14  0.000059  0.000215  0.000373            0.000098  0.000021   \n",
        "2020-10-15  0.000059  0.000215  0.000373            0.000098  0.000021   \n",
        "\n",
        "Country         Iran    Kuwait  Mexico   Moldova  Nigeria    Russia    Turkey  \\\n",
        "Date                                                                            \n",
        "2020-10-11  0.000093  0.000114  0.0015  0.000148  0.00006  0.000025  0.000213   \n",
        "2020-10-12  0.000093  0.000114  0.0015  0.000148  0.00006  0.000025  0.000213   \n",
        "2020-10-13  0.000093  0.000114  0.0015  0.000148  0.00006  0.000025  0.000213   \n",
        "2020-10-14  0.000093  0.000114  0.0015  0.000148  0.00006  0.000025  0.000213   \n",
        "2020-10-15  0.000093  0.000114  0.0015  0.000148  0.00006  0.000025  0.000213   \n",
        "\n",
        "Country     United States  \n",
        "Date                       \n",
        "2020-10-11       0.000024  \n",
        "2020-10-12       0.000024  \n",
        "2020-10-13       0.000024  \n",
        "2020-10-14       0.000024  \n",
        "2020-10-15       0.000024  "
       ]
      }
     ],
     "prompt_number": 17
    },
    {
     "cell_type": "heading",
     "level": 3,
     "metadata": {},
     "source": [
      "$\\theta$: Mortality rate of S$^\\ast$ cases $\\mathrm{[-]}$"
     ]
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "analyser.param_history(\"theta\", roll_window=None).tail()"
     ],
     "language": "python",
     "metadata": {},
     "outputs": [
      {
       "output_type": "display_data",
       "png": "\n",
       "text": [
        "<Figure size 648x432 with 1 Axes>"
       ]
      },
      {
       "html": [
        "<div>\n",
        "<style scoped>\n",
        "    .dataframe tbody tr th:only-of-type {\n",
        "        vertical-align: middle;\n",
        "    }\n",
        "\n",
        "    .dataframe tbody tr th {\n",
        "        vertical-align: top;\n",
        "    }\n",
        "\n",
        "    .dataframe thead th {\n",
        "        text-align: right;\n",
        "    }\n",
        "</style>\n",
        "<table border=\"1\" class=\"dataframe\">\n",
        "  <thead>\n",
        "    <tr style=\"text-align: right;\">\n",
        "      <th>Country</th>\n",
        "      <th>Bahrain</th>\n",
        "      <th>Bolivia</th>\n",
        "      <th>Brazil</th>\n",
        "      <th>Dominican Republic</th>\n",
        "      <th>France</th>\n",
        "      <th>Iran</th>\n",
        "      <th>Kuwait</th>\n",
        "      <th>Mexico</th>\n",
        "      <th>Moldova</th>\n",
        "      <th>Nigeria</th>\n",
        "      <th>Russia</th>\n",
        "      <th>Turkey</th>\n",
        "      <th>United States</th>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>Date</th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "    </tr>\n",
        "  </thead>\n",
        "  <tbody>\n",
        "    <tr>\n",
        "      <th>2020-10-11</th>\n",
        "      <td>0.002925</td>\n",
        "      <td>0.002506</td>\n",
        "      <td>0.000628</td>\n",
        "      <td>0.000442</td>\n",
        "      <td>0.000684</td>\n",
        "      <td>0.052795</td>\n",
        "      <td>0.000589</td>\n",
        "      <td>0.069682</td>\n",
        "      <td>0.002679</td>\n",
        "      <td>0.000055</td>\n",
        "      <td>0.001329</td>\n",
        "      <td>0.022206</td>\n",
        "      <td>0.00166</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>2020-10-12</th>\n",
        "      <td>0.002925</td>\n",
        "      <td>0.002506</td>\n",
        "      <td>0.000628</td>\n",
        "      <td>0.000442</td>\n",
        "      <td>0.000684</td>\n",
        "      <td>0.052795</td>\n",
        "      <td>0.000589</td>\n",
        "      <td>0.069682</td>\n",
        "      <td>0.002679</td>\n",
        "      <td>0.000055</td>\n",
        "      <td>0.001329</td>\n",
        "      <td>0.022206</td>\n",
        "      <td>0.00166</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>2020-10-13</th>\n",
        "      <td>0.002925</td>\n",
        "      <td>0.002506</td>\n",
        "      <td>0.000628</td>\n",
        "      <td>0.000442</td>\n",
        "      <td>0.000684</td>\n",
        "      <td>0.052795</td>\n",
        "      <td>0.000589</td>\n",
        "      <td>0.069682</td>\n",
        "      <td>0.002679</td>\n",
        "      <td>0.000055</td>\n",
        "      <td>0.001329</td>\n",
        "      <td>0.022206</td>\n",
        "      <td>0.00166</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>2020-10-14</th>\n",
        "      <td>0.002925</td>\n",
        "      <td>0.002506</td>\n",
        "      <td>0.000628</td>\n",
        "      <td>0.000442</td>\n",
        "      <td>0.000684</td>\n",
        "      <td>0.052795</td>\n",
        "      <td>0.000589</td>\n",
        "      <td>0.069682</td>\n",
        "      <td>0.002679</td>\n",
        "      <td>0.000055</td>\n",
        "      <td>0.001329</td>\n",
        "      <td>0.022206</td>\n",
        "      <td>0.00166</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>2020-10-15</th>\n",
        "      <td>0.002925</td>\n",
        "      <td>0.002506</td>\n",
        "      <td>0.000628</td>\n",
        "      <td>0.000442</td>\n",
        "      <td>0.000684</td>\n",
        "      <td>0.052795</td>\n",
        "      <td>0.000589</td>\n",
        "      <td>0.069682</td>\n",
        "      <td>0.002679</td>\n",
        "      <td>0.000055</td>\n",
        "      <td>0.001329</td>\n",
        "      <td>0.022206</td>\n",
        "      <td>0.00166</td>\n",
        "    </tr>\n",
        "  </tbody>\n",
        "</table>\n",
        "</div>"
       ],
       "output_type": "pyout",
       "prompt_number": 18,
       "text": [
        "Country      Bahrain   Bolivia    Brazil  Dominican Republic    France  \\\n",
        "Date                                                                     \n",
        "2020-10-11  0.002925  0.002506  0.000628            0.000442  0.000684   \n",
        "2020-10-12  0.002925  0.002506  0.000628            0.000442  0.000684   \n",
        "2020-10-13  0.002925  0.002506  0.000628            0.000442  0.000684   \n",
        "2020-10-14  0.002925  0.002506  0.000628            0.000442  0.000684   \n",
        "2020-10-15  0.002925  0.002506  0.000628            0.000442  0.000684   \n",
        "\n",
        "Country         Iran    Kuwait    Mexico   Moldova   Nigeria    Russia  \\\n",
        "Date                                                                     \n",
        "2020-10-11  0.052795  0.000589  0.069682  0.002679  0.000055  0.001329   \n",
        "2020-10-12  0.052795  0.000589  0.069682  0.002679  0.000055  0.001329   \n",
        "2020-10-13  0.052795  0.000589  0.069682  0.002679  0.000055  0.001329   \n",
        "2020-10-14  0.052795  0.000589  0.069682  0.002679  0.000055  0.001329   \n",
        "2020-10-15  0.052795  0.000589  0.069682  0.002679  0.000055  0.001329   \n",
        "\n",
        "Country       Turkey  United States  \n",
        "Date                                 \n",
        "2020-10-11  0.022206        0.00166  \n",
        "2020-10-12  0.022206        0.00166  \n",
        "2020-10-13  0.022206        0.00166  \n",
        "2020-10-14  0.022206        0.00166  \n",
        "2020-10-15  0.022206        0.00166  "
       ]
      }
     ],
     "prompt_number": 18
    },
    {
     "cell_type": "markdown",
     "metadata": {},
     "source": [
      "## (Experimental): Relationship of OxCGRT index and parameter values\n",
      "Government responses will impact on parameter values of ODE models about 14 days later. Here, we will investigate on the relationship of [stringency index (from OxCGRT)](https://github.com/OxCGRT/covid-policy-tracker/blob/master/documentation/index_methodology.md) and reproduction number/model parameters.\n"
     ]
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "%matplotlib inline\n",
      "from matplotlib import pyplot as plt\n",
      "import seaborn as sns\n",
      "import pandas as pd"
     ],
     "language": "python",
     "metadata": {},
     "outputs": [],
     "prompt_number": 19
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "df = analyser.track()\n",
      "param_cols = [\"Rt\", *cs.SIRF.PARAMETERS]\n",
      "oxcgrt_cols = oxcgrt_data.OXCGRT_VARS[:]\n",
      "cols = param_cols + oxcgrt_cols\n",
      "delay = 14\n",
      "\n",
      "for col in param_cols:\n",
      "    df[col] = pd.to_numeric(df[col], errors=\"coerce\")\n",
      "    df[col] = df.groupby(\"Country\")[col].shift(0 - delay)\n",
      "\n",
      "df = df.dropna(how=\"any\")\n",
      "df = df.loc[:, [\"Date\", \"Country\", *cols]]\n",
      "track_df = df.copy()\n",
      "track_df.info()"
     ],
     "language": "python",
     "metadata": {},
     "outputs": [
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "<class 'pandas.core.frame.DataFrame'>\n",
        "Int64Index: 43640 entries, 0 to 43807\n",
        "Data columns (total 19 columns):\n",
        " #   Column                               Non-Null Count  Dtype         \n",
        "---  ------                               --------------  -----         \n",
        " 0   Date                                 43640 non-null  datetime64[ns]\n",
        " 1   Country                              43640 non-null  object        \n",
        " 2   Rt                                   43640 non-null  float64       \n",
        " 3   theta                                43640 non-null  float64       \n",
        " 4   kappa                                43640 non-null  float64       \n",
        " 5   rho                                  43640 non-null  float64       \n",
        " 6   sigma                                43640 non-null  float64       \n",
        " 7   School_closing                       43640 non-null  int64         \n",
        " 8   Workplace_closing                    43640 non-null  int64         \n",
        " 9   Cancel_events                        43640 non-null  int64         \n",
        " 10  Gatherings_restrictions              43640 non-null  int64         \n",
        " 11  Transport_closing                    43640 non-null  int64         \n",
        " 12  Stay_home_restrictions               43640 non-null  int64         \n",
        " 13  Internal_movement_restrictions       43640 non-null  int64         \n",
        " 14  International_movement_restrictions  43640 non-null  int64         \n",
        " 15  Information_campaigns                43640 non-null  int64         \n",
        " 16  Testing_policy                       43640 non-null  int64         \n",
        " 17  Contact_tracing                      43640 non-null  int64         \n",
        " 18  Stringency_index                     43640 non-null  float64       \n",
        "dtypes: datetime64[ns](1), float64(6), int64(11), object(1)\n",
        "memory usage: 6.7+ MB\n"
       ]
      }
     ],
     "prompt_number": 20
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "# Correlation\n",
      "df = track_df.copy()\n",
      "df.corr().style.background_gradient(axis=None)"
     ],
     "language": "python",
     "metadata": {},
     "outputs": [
      {
       "html": [
        "<style  type=\"text/css\" >\n",
        "#T_7203b3c8_0eef_11eb_8204_52540034e71frow0_col0,#T_7203b3c8_0eef_11eb_8204_52540034e71frow1_col1,#T_7203b3c8_0eef_11eb_8204_52540034e71frow2_col2,#T_7203b3c8_0eef_11eb_8204_52540034e71frow3_col3,#T_7203b3c8_0eef_11eb_8204_52540034e71frow4_col4,#T_7203b3c8_0eef_11eb_8204_52540034e71frow5_col5,#T_7203b3c8_0eef_11eb_8204_52540034e71frow6_col6,#T_7203b3c8_0eef_11eb_8204_52540034e71frow7_col7,#T_7203b3c8_0eef_11eb_8204_52540034e71frow8_col8,#T_7203b3c8_0eef_11eb_8204_52540034e71frow9_col9,#T_7203b3c8_0eef_11eb_8204_52540034e71frow10_col10,#T_7203b3c8_0eef_11eb_8204_52540034e71frow11_col11,#T_7203b3c8_0eef_11eb_8204_52540034e71frow12_col12,#T_7203b3c8_0eef_11eb_8204_52540034e71frow13_col13,#T_7203b3c8_0eef_11eb_8204_52540034e71frow14_col14,#T_7203b3c8_0eef_11eb_8204_52540034e71frow15_col15,#T_7203b3c8_0eef_11eb_8204_52540034e71frow16_col16{\n",
        "            background-color:  #023858;\n",
        "            color:  #f1f1f1;\n",
        "        }#T_7203b3c8_0eef_11eb_8204_52540034e71frow0_col1,#T_7203b3c8_0eef_11eb_8204_52540034e71frow0_col12,#T_7203b3c8_0eef_11eb_8204_52540034e71frow1_col0,#T_7203b3c8_0eef_11eb_8204_52540034e71frow12_col0{\n",
        "            background-color:  #e7e3f0;\n",
        "            color:  #000000;\n",
        "        }#T_7203b3c8_0eef_11eb_8204_52540034e71frow0_col2,#T_7203b3c8_0eef_11eb_8204_52540034e71frow2_col0{\n",
        "            background-color:  #e6e2ef;\n",
        "            color:  #000000;\n",
        "        }#T_7203b3c8_0eef_11eb_8204_52540034e71frow0_col3,#T_7203b3c8_0eef_11eb_8204_52540034e71frow3_col0{\n",
        "            background-color:  #c1cae2;\n",
        "            color:  #000000;\n",
        "        }#T_7203b3c8_0eef_11eb_8204_52540034e71frow0_col4,#T_7203b3c8_0eef_11eb_8204_52540034e71frow0_col9,#T_7203b3c8_0eef_11eb_8204_52540034e71frow1_col8,#T_7203b3c8_0eef_11eb_8204_52540034e71frow2_col8,#T_7203b3c8_0eef_11eb_8204_52540034e71frow3_col9,#T_7203b3c8_0eef_11eb_8204_52540034e71frow4_col0,#T_7203b3c8_0eef_11eb_8204_52540034e71frow8_col1,#T_7203b3c8_0eef_11eb_8204_52540034e71frow8_col2,#T_7203b3c8_0eef_11eb_8204_52540034e71frow9_col0,#T_7203b3c8_0eef_11eb_8204_52540034e71frow9_col3{\n",
        "            background-color:  #dad9ea;\n",
        "            color:  #000000;\n",
        "        }#T_7203b3c8_0eef_11eb_8204_52540034e71frow0_col5,#T_7203b3c8_0eef_11eb_8204_52540034e71frow5_col0{\n",
        "            background-color:  #d5d5e8;\n",
        "            color:  #000000;\n",
        "        }#T_7203b3c8_0eef_11eb_8204_52540034e71frow0_col6,#T_7203b3c8_0eef_11eb_8204_52540034e71frow6_col0{\n",
        "            background-color:  #bdc8e1;\n",
        "            color:  #000000;\n",
        "        }#T_7203b3c8_0eef_11eb_8204_52540034e71frow0_col7,#T_7203b3c8_0eef_11eb_8204_52540034e71frow7_col0{\n",
        "            background-color:  #e2dfee;\n",
        "            color:  #000000;\n",
        "        }#T_7203b3c8_0eef_11eb_8204_52540034e71frow0_col8,#T_7203b3c8_0eef_11eb_8204_52540034e71frow8_col0{\n",
        "            background-color:  #b5c4df;\n",
        "            color:  #000000;\n",
        "        }#T_7203b3c8_0eef_11eb_8204_52540034e71frow0_col10,#T_7203b3c8_0eef_11eb_8204_52540034e71frow10_col0{\n",
        "            background-color:  #e9e5f1;\n",
        "            color:  #000000;\n",
        "        }#T_7203b3c8_0eef_11eb_8204_52540034e71frow0_col11,#T_7203b3c8_0eef_11eb_8204_52540034e71frow2_col6,#T_7203b3c8_0eef_11eb_8204_52540034e71frow6_col2,#T_7203b3c8_0eef_11eb_8204_52540034e71frow11_col0{\n",
        "            background-color:  #d2d3e7;\n",
        "            color:  #000000;\n",
        "        }#T_7203b3c8_0eef_11eb_8204_52540034e71frow0_col13,#T_7203b3c8_0eef_11eb_8204_52540034e71frow2_col4,#T_7203b3c8_0eef_11eb_8204_52540034e71frow4_col2,#T_7203b3c8_0eef_11eb_8204_52540034e71frow13_col0{\n",
        "            background-color:  #bcc7e1;\n",
        "            color:  #000000;\n",
        "        }#T_7203b3c8_0eef_11eb_8204_52540034e71frow0_col14,#T_7203b3c8_0eef_11eb_8204_52540034e71frow3_col16,#T_7203b3c8_0eef_11eb_8204_52540034e71frow14_col0,#T_7203b3c8_0eef_11eb_8204_52540034e71frow16_col3{\n",
        "            background-color:  #cccfe5;\n",
        "            color:  #000000;\n",
        "        }#T_7203b3c8_0eef_11eb_8204_52540034e71frow0_col15,#T_7203b3c8_0eef_11eb_8204_52540034e71frow15_col0{\n",
        "            background-color:  #d9d8ea;\n",
        "            color:  #000000;\n",
        "        }#T_7203b3c8_0eef_11eb_8204_52540034e71frow0_col16,#T_7203b3c8_0eef_11eb_8204_52540034e71frow3_col6,#T_7203b3c8_0eef_11eb_8204_52540034e71frow3_col15,#T_7203b3c8_0eef_11eb_8204_52540034e71frow6_col3,#T_7203b3c8_0eef_11eb_8204_52540034e71frow15_col3,#T_7203b3c8_0eef_11eb_8204_52540034e71frow16_col0{\n",
        "            background-color:  #d6d6e9;\n",
        "            color:  #000000;\n",
        "        }#T_7203b3c8_0eef_11eb_8204_52540034e71frow1_col2,#T_7203b3c8_0eef_11eb_8204_52540034e71frow2_col1{\n",
        "            background-color:  #023a5b;\n",
        "            color:  #f1f1f1;\n",
        "        }#T_7203b3c8_0eef_11eb_8204_52540034e71frow1_col3,#T_7203b3c8_0eef_11eb_8204_52540034e71frow3_col1,#T_7203b3c8_0eef_11eb_8204_52540034e71frow6_col16,#T_7203b3c8_0eef_11eb_8204_52540034e71frow8_col16,#T_7203b3c8_0eef_11eb_8204_52540034e71frow16_col6,#T_7203b3c8_0eef_11eb_8204_52540034e71frow16_col8{\n",
        "            background-color:  #03517e;\n",
        "            color:  #f1f1f1;\n",
        "        }#T_7203b3c8_0eef_11eb_8204_52540034e71frow1_col4,#T_7203b3c8_0eef_11eb_8204_52540034e71frow3_col11,#T_7203b3c8_0eef_11eb_8204_52540034e71frow4_col1,#T_7203b3c8_0eef_11eb_8204_52540034e71frow11_col3{\n",
        "            background-color:  #b7c5df;\n",
        "            color:  #000000;\n",
        "        }#T_7203b3c8_0eef_11eb_8204_52540034e71frow1_col5,#T_7203b3c8_0eef_11eb_8204_52540034e71frow5_col1{\n",
        "            background-color:  #dbdaeb;\n",
        "            color:  #000000;\n",
        "        }#T_7203b3c8_0eef_11eb_8204_52540034e71frow1_col6,#T_7203b3c8_0eef_11eb_8204_52540034e71frow6_col1{\n",
        "            background-color:  #ced0e6;\n",
        "            color:  #000000;\n",
        "        }#T_7203b3c8_0eef_11eb_8204_52540034e71frow1_col7,#T_7203b3c8_0eef_11eb_8204_52540034e71frow7_col1{\n",
        "            background-color:  #e5e1ef;\n",
        "            color:  #000000;\n",
        "        }#T_7203b3c8_0eef_11eb_8204_52540034e71frow1_col9,#T_7203b3c8_0eef_11eb_8204_52540034e71frow3_col8,#T_7203b3c8_0eef_11eb_8204_52540034e71frow8_col3,#T_7203b3c8_0eef_11eb_8204_52540034e71frow9_col1{\n",
        "            background-color:  #dddbec;\n",
        "            color:  #000000;\n",
        "        }#T_7203b3c8_0eef_11eb_8204_52540034e71frow1_col10,#T_7203b3c8_0eef_11eb_8204_52540034e71frow4_col9,#T_7203b3c8_0eef_11eb_8204_52540034e71frow9_col4,#T_7203b3c8_0eef_11eb_8204_52540034e71frow10_col1{\n",
        "            background-color:  #7bacd1;\n",
        "            color:  #000000;\n",
        "        }#T_7203b3c8_0eef_11eb_8204_52540034e71frow1_col11,#T_7203b3c8_0eef_11eb_8204_52540034e71frow11_col1{\n",
        "            background-color:  #b0c2de;\n",
        "            color:  #000000;\n",
        "        }#T_7203b3c8_0eef_11eb_8204_52540034e71frow1_col12,#T_7203b3c8_0eef_11eb_8204_52540034e71frow12_col1{\n",
        "            background-color:  #84b0d3;\n",
        "            color:  #000000;\n",
        "        }#T_7203b3c8_0eef_11eb_8204_52540034e71frow1_col13,#T_7203b3c8_0eef_11eb_8204_52540034e71frow13_col1{\n",
        "            background-color:  #f0eaf4;\n",
        "            color:  #000000;\n",
        "        }#T_7203b3c8_0eef_11eb_8204_52540034e71frow1_col14,#T_7203b3c8_0eef_11eb_8204_52540034e71frow14_col1{\n",
        "            background-color:  #f3edf5;\n",
        "            color:  #000000;\n",
        "        }#T_7203b3c8_0eef_11eb_8204_52540034e71frow1_col15,#T_7203b3c8_0eef_11eb_8204_52540034e71frow15_col1{\n",
        "            background-color:  #b8c6e0;\n",
        "            color:  #000000;\n",
        "        }#T_7203b3c8_0eef_11eb_8204_52540034e71frow1_col16,#T_7203b3c8_0eef_11eb_8204_52540034e71frow16_col1{\n",
        "            background-color:  #c5cce3;\n",
        "            color:  #000000;\n",
        "        }#T_7203b3c8_0eef_11eb_8204_52540034e71frow2_col3,#T_7203b3c8_0eef_11eb_8204_52540034e71frow3_col2{\n",
        "            background-color:  #045280;\n",
        "            color:  #f1f1f1;\n",
        "        }#T_7203b3c8_0eef_11eb_8204_52540034e71frow2_col5,#T_7203b3c8_0eef_11eb_8204_52540034e71frow5_col2{\n",
        "            background-color:  #dcdaeb;\n",
        "            color:  #000000;\n",
        "        }#T_7203b3c8_0eef_11eb_8204_52540034e71frow2_col7,#T_7203b3c8_0eef_11eb_8204_52540034e71frow7_col2{\n",
        "            background-color:  #e4e1ef;\n",
        "            color:  #000000;\n",
        "        }#T_7203b3c8_0eef_11eb_8204_52540034e71frow2_col9,#T_7203b3c8_0eef_11eb_8204_52540034e71frow9_col2{\n",
        "            background-color:  #e0dded;\n",
        "            color:  #000000;\n",
        "        }#T_7203b3c8_0eef_11eb_8204_52540034e71frow2_col10,#T_7203b3c8_0eef_11eb_8204_52540034e71frow2_col12,#T_7203b3c8_0eef_11eb_8204_52540034e71frow10_col2,#T_7203b3c8_0eef_11eb_8204_52540034e71frow12_col2{\n",
        "            background-color:  #7dacd1;\n",
        "            color:  #000000;\n",
        "        }#T_7203b3c8_0eef_11eb_8204_52540034e71frow2_col11,#T_7203b3c8_0eef_11eb_8204_52540034e71frow11_col2{\n",
        "            background-color:  #b3c3de;\n",
        "            color:  #000000;\n",
        "        }#T_7203b3c8_0eef_11eb_8204_52540034e71frow2_col13,#T_7203b3c8_0eef_11eb_8204_52540034e71frow13_col2{\n",
        "            background-color:  #efe9f3;\n",
        "            color:  #000000;\n",
        "        }#T_7203b3c8_0eef_11eb_8204_52540034e71frow2_col14,#T_7203b3c8_0eef_11eb_8204_52540034e71frow14_col2{\n",
        "            background-color:  #ede7f2;\n",
        "            color:  #000000;\n",
        "        }#T_7203b3c8_0eef_11eb_8204_52540034e71frow2_col15,#T_7203b3c8_0eef_11eb_8204_52540034e71frow15_col2{\n",
        "            background-color:  #afc1dd;\n",
        "            color:  #000000;\n",
        "        }#T_7203b3c8_0eef_11eb_8204_52540034e71frow2_col16,#T_7203b3c8_0eef_11eb_8204_52540034e71frow16_col2{\n",
        "            background-color:  #c9cee4;\n",
        "            color:  #000000;\n",
        "        }#T_7203b3c8_0eef_11eb_8204_52540034e71frow3_col4,#T_7203b3c8_0eef_11eb_8204_52540034e71frow4_col3{\n",
        "            background-color:  #76aad0;\n",
        "            color:  #000000;\n",
        "        }#T_7203b3c8_0eef_11eb_8204_52540034e71frow3_col5,#T_7203b3c8_0eef_11eb_8204_52540034e71frow5_col3{\n",
        "            background-color:  #d7d6e9;\n",
        "            color:  #000000;\n",
        "        }#T_7203b3c8_0eef_11eb_8204_52540034e71frow3_col7,#T_7203b3c8_0eef_11eb_8204_52540034e71frow7_col3{\n",
        "            background-color:  #eee9f3;\n",
        "            color:  #000000;\n",
        "        }#T_7203b3c8_0eef_11eb_8204_52540034e71frow3_col10,#T_7203b3c8_0eef_11eb_8204_52540034e71frow4_col10,#T_7203b3c8_0eef_11eb_8204_52540034e71frow10_col3,#T_7203b3c8_0eef_11eb_8204_52540034e71frow10_col4{\n",
        "            background-color:  #81aed2;\n",
        "            color:  #000000;\n",
        "        }#T_7203b3c8_0eef_11eb_8204_52540034e71frow3_col12,#T_7203b3c8_0eef_11eb_8204_52540034e71frow12_col3{\n",
        "            background-color:  #acc0dd;\n",
        "            color:  #000000;\n",
        "        }#T_7203b3c8_0eef_11eb_8204_52540034e71frow3_col13,#T_7203b3c8_0eef_11eb_8204_52540034e71frow13_col3{\n",
        "            background-color:  #f6eff7;\n",
        "            color:  #000000;\n",
        "        }#T_7203b3c8_0eef_11eb_8204_52540034e71frow3_col14,#T_7203b3c8_0eef_11eb_8204_52540034e71frow14_col3{\n",
        "            background-color:  #fff7fb;\n",
        "            color:  #000000;\n",
        "        }#T_7203b3c8_0eef_11eb_8204_52540034e71frow4_col5,#T_7203b3c8_0eef_11eb_8204_52540034e71frow4_col16,#T_7203b3c8_0eef_11eb_8204_52540034e71frow5_col4,#T_7203b3c8_0eef_11eb_8204_52540034e71frow16_col4{\n",
        "            background-color:  #83afd3;\n",
        "            color:  #000000;\n",
        "        }#T_7203b3c8_0eef_11eb_8204_52540034e71frow4_col6,#T_7203b3c8_0eef_11eb_8204_52540034e71frow6_col4{\n",
        "            background-color:  #a5bddb;\n",
        "            color:  #000000;\n",
        "        }#T_7203b3c8_0eef_11eb_8204_52540034e71frow4_col7,#T_7203b3c8_0eef_11eb_8204_52540034e71frow7_col4{\n",
        "            background-color:  #99b8d8;\n",
        "            color:  #000000;\n",
        "        }#T_7203b3c8_0eef_11eb_8204_52540034e71frow4_col8,#T_7203b3c8_0eef_11eb_8204_52540034e71frow4_col15,#T_7203b3c8_0eef_11eb_8204_52540034e71frow8_col4,#T_7203b3c8_0eef_11eb_8204_52540034e71frow15_col4{\n",
        "            background-color:  #a7bddb;\n",
        "            color:  #000000;\n",
        "        }#T_7203b3c8_0eef_11eb_8204_52540034e71frow4_col11,#T_7203b3c8_0eef_11eb_8204_52540034e71frow11_col4{\n",
        "            background-color:  #8eb3d5;\n",
        "            color:  #000000;\n",
        "        }#T_7203b3c8_0eef_11eb_8204_52540034e71frow4_col12,#T_7203b3c8_0eef_11eb_8204_52540034e71frow12_col4{\n",
        "            background-color:  #a8bedc;\n",
        "            color:  #000000;\n",
        "        }#T_7203b3c8_0eef_11eb_8204_52540034e71frow4_col13,#T_7203b3c8_0eef_11eb_8204_52540034e71frow13_col4{\n",
        "            background-color:  #a9bfdc;\n",
        "            color:  #000000;\n",
        "        }#T_7203b3c8_0eef_11eb_8204_52540034e71frow4_col14,#T_7203b3c8_0eef_11eb_8204_52540034e71frow14_col4{\n",
        "            background-color:  #cdd0e5;\n",
        "            color:  #000000;\n",
        "        }#T_7203b3c8_0eef_11eb_8204_52540034e71frow5_col6,#T_7203b3c8_0eef_11eb_8204_52540034e71frow6_col5,#T_7203b3c8_0eef_11eb_8204_52540034e71frow8_col9,#T_7203b3c8_0eef_11eb_8204_52540034e71frow9_col8,#T_7203b3c8_0eef_11eb_8204_52540034e71frow9_col11,#T_7203b3c8_0eef_11eb_8204_52540034e71frow11_col9{\n",
        "            background-color:  #046097;\n",
        "            color:  #f1f1f1;\n",
        "        }#T_7203b3c8_0eef_11eb_8204_52540034e71frow5_col7,#T_7203b3c8_0eef_11eb_8204_52540034e71frow6_col13,#T_7203b3c8_0eef_11eb_8204_52540034e71frow7_col5,#T_7203b3c8_0eef_11eb_8204_52540034e71frow9_col16,#T_7203b3c8_0eef_11eb_8204_52540034e71frow13_col6,#T_7203b3c8_0eef_11eb_8204_52540034e71frow13_col16,#T_7203b3c8_0eef_11eb_8204_52540034e71frow16_col9,#T_7203b3c8_0eef_11eb_8204_52540034e71frow16_col13{\n",
        "            background-color:  #045b8e;\n",
        "            color:  #f1f1f1;\n",
        "        }#T_7203b3c8_0eef_11eb_8204_52540034e71frow5_col8,#T_7203b3c8_0eef_11eb_8204_52540034e71frow8_col5{\n",
        "            background-color:  #056ba7;\n",
        "            color:  #f1f1f1;\n",
        "        }#T_7203b3c8_0eef_11eb_8204_52540034e71frow5_col9,#T_7203b3c8_0eef_11eb_8204_52540034e71frow5_col13,#T_7203b3c8_0eef_11eb_8204_52540034e71frow9_col5,#T_7203b3c8_0eef_11eb_8204_52540034e71frow13_col5{\n",
        "            background-color:  #0567a2;\n",
        "            color:  #f1f1f1;\n",
        "        }#T_7203b3c8_0eef_11eb_8204_52540034e71frow5_col10,#T_7203b3c8_0eef_11eb_8204_52540034e71frow10_col5{\n",
        "            background-color:  #0872b1;\n",
        "            color:  #f1f1f1;\n",
        "        }#T_7203b3c8_0eef_11eb_8204_52540034e71frow5_col11,#T_7203b3c8_0eef_11eb_8204_52540034e71frow6_col10,#T_7203b3c8_0eef_11eb_8204_52540034e71frow10_col6,#T_7203b3c8_0eef_11eb_8204_52540034e71frow11_col5{\n",
        "            background-color:  #0771b1;\n",
        "            color:  #f1f1f1;\n",
        "        }#T_7203b3c8_0eef_11eb_8204_52540034e71frow5_col12,#T_7203b3c8_0eef_11eb_8204_52540034e71frow12_col5{\n",
        "            background-color:  #2786bb;\n",
        "            color:  #000000;\n",
        "        }#T_7203b3c8_0eef_11eb_8204_52540034e71frow5_col14,#T_7203b3c8_0eef_11eb_8204_52540034e71frow8_col14,#T_7203b3c8_0eef_11eb_8204_52540034e71frow14_col5,#T_7203b3c8_0eef_11eb_8204_52540034e71frow14_col8,#T_7203b3c8_0eef_11eb_8204_52540034e71frow14_col15,#T_7203b3c8_0eef_11eb_8204_52540034e71frow15_col14{\n",
        "            background-color:  #2383ba;\n",
        "            color:  #000000;\n",
        "        }#T_7203b3c8_0eef_11eb_8204_52540034e71frow5_col15,#T_7203b3c8_0eef_11eb_8204_52540034e71frow15_col5{\n",
        "            background-color:  #79abd0;\n",
        "            color:  #000000;\n",
        "        }#T_7203b3c8_0eef_11eb_8204_52540034e71frow5_col16,#T_7203b3c8_0eef_11eb_8204_52540034e71frow7_col13,#T_7203b3c8_0eef_11eb_8204_52540034e71frow13_col7,#T_7203b3c8_0eef_11eb_8204_52540034e71frow16_col5{\n",
        "            background-color:  #045483;\n",
        "            color:  #f1f1f1;\n",
        "        }#T_7203b3c8_0eef_11eb_8204_52540034e71frow6_col7,#T_7203b3c8_0eef_11eb_8204_52540034e71frow7_col6{\n",
        "            background-color:  #046299;\n",
        "            color:  #f1f1f1;\n",
        "        }#T_7203b3c8_0eef_11eb_8204_52540034e71frow6_col8,#T_7203b3c8_0eef_11eb_8204_52540034e71frow8_col6{\n",
        "            background-color:  #0567a1;\n",
        "            color:  #f1f1f1;\n",
        "        }#T_7203b3c8_0eef_11eb_8204_52540034e71frow6_col9,#T_7203b3c8_0eef_11eb_8204_52540034e71frow9_col6{\n",
        "            background-color:  #056dab;\n",
        "            color:  #f1f1f1;\n",
        "        }#T_7203b3c8_0eef_11eb_8204_52540034e71frow6_col11,#T_7203b3c8_0eef_11eb_8204_52540034e71frow7_col9,#T_7203b3c8_0eef_11eb_8204_52540034e71frow9_col7,#T_7203b3c8_0eef_11eb_8204_52540034e71frow11_col6{\n",
        "            background-color:  #0f76b3;\n",
        "            color:  #f1f1f1;\n",
        "        }#T_7203b3c8_0eef_11eb_8204_52540034e71frow6_col12,#T_7203b3c8_0eef_11eb_8204_52540034e71frow6_col14,#T_7203b3c8_0eef_11eb_8204_52540034e71frow11_col13,#T_7203b3c8_0eef_11eb_8204_52540034e71frow12_col6,#T_7203b3c8_0eef_11eb_8204_52540034e71frow13_col11,#T_7203b3c8_0eef_11eb_8204_52540034e71frow14_col6{\n",
        "            background-color:  #2484ba;\n",
        "            color:  #000000;\n",
        "        }#T_7203b3c8_0eef_11eb_8204_52540034e71frow6_col15,#T_7203b3c8_0eef_11eb_8204_52540034e71frow15_col6{\n",
        "            background-color:  #569dc8;\n",
        "            color:  #000000;\n",
        "        }#T_7203b3c8_0eef_11eb_8204_52540034e71frow7_col8,#T_7203b3c8_0eef_11eb_8204_52540034e71frow8_col7{\n",
        "            background-color:  #0569a5;\n",
        "            color:  #f1f1f1;\n",
        "        }#T_7203b3c8_0eef_11eb_8204_52540034e71frow7_col10,#T_7203b3c8_0eef_11eb_8204_52540034e71frow10_col7{\n",
        "            background-color:  #187cb6;\n",
        "            color:  #000000;\n",
        "        }#T_7203b3c8_0eef_11eb_8204_52540034e71frow7_col11,#T_7203b3c8_0eef_11eb_8204_52540034e71frow7_col12,#T_7203b3c8_0eef_11eb_8204_52540034e71frow10_col12,#T_7203b3c8_0eef_11eb_8204_52540034e71frow11_col7,#T_7203b3c8_0eef_11eb_8204_52540034e71frow12_col7,#T_7203b3c8_0eef_11eb_8204_52540034e71frow12_col10,#T_7203b3c8_0eef_11eb_8204_52540034e71frow13_col15,#T_7203b3c8_0eef_11eb_8204_52540034e71frow15_col13{\n",
        "            background-color:  #1379b5;\n",
        "            color:  #f1f1f1;\n",
        "        }#T_7203b3c8_0eef_11eb_8204_52540034e71frow7_col14,#T_7203b3c8_0eef_11eb_8204_52540034e71frow8_col10,#T_7203b3c8_0eef_11eb_8204_52540034e71frow10_col8,#T_7203b3c8_0eef_11eb_8204_52540034e71frow14_col7{\n",
        "            background-color:  #056fae;\n",
        "            color:  #f1f1f1;\n",
        "        }#T_7203b3c8_0eef_11eb_8204_52540034e71frow7_col15,#T_7203b3c8_0eef_11eb_8204_52540034e71frow12_col14,#T_7203b3c8_0eef_11eb_8204_52540034e71frow14_col12,#T_7203b3c8_0eef_11eb_8204_52540034e71frow15_col7{\n",
        "            background-color:  #157ab5;\n",
        "            color:  #000000;\n",
        "        }#T_7203b3c8_0eef_11eb_8204_52540034e71frow7_col16,#T_7203b3c8_0eef_11eb_8204_52540034e71frow16_col7{\n",
        "            background-color:  #045687;\n",
        "            color:  #f1f1f1;\n",
        "        }#T_7203b3c8_0eef_11eb_8204_52540034e71frow8_col11,#T_7203b3c8_0eef_11eb_8204_52540034e71frow11_col8{\n",
        "            background-color:  #046198;\n",
        "            color:  #f1f1f1;\n",
        "        }#T_7203b3c8_0eef_11eb_8204_52540034e71frow8_col12,#T_7203b3c8_0eef_11eb_8204_52540034e71frow12_col8{\n",
        "            background-color:  #2081b9;\n",
        "            color:  #000000;\n",
        "        }#T_7203b3c8_0eef_11eb_8204_52540034e71frow8_col13,#T_7203b3c8_0eef_11eb_8204_52540034e71frow13_col8{\n",
        "            background-color:  #04649d;\n",
        "            color:  #f1f1f1;\n",
        "        }#T_7203b3c8_0eef_11eb_8204_52540034e71frow8_col15,#T_7203b3c8_0eef_11eb_8204_52540034e71frow15_col8{\n",
        "            background-color:  #5ea0ca;\n",
        "            color:  #000000;\n",
        "        }#T_7203b3c8_0eef_11eb_8204_52540034e71frow9_col10,#T_7203b3c8_0eef_11eb_8204_52540034e71frow10_col9{\n",
        "            background-color:  #056ead;\n",
        "            color:  #f1f1f1;\n",
        "        }#T_7203b3c8_0eef_11eb_8204_52540034e71frow9_col12,#T_7203b3c8_0eef_11eb_8204_52540034e71frow10_col13,#T_7203b3c8_0eef_11eb_8204_52540034e71frow12_col9,#T_7203b3c8_0eef_11eb_8204_52540034e71frow13_col10{\n",
        "            background-color:  #3790c0;\n",
        "            color:  #000000;\n",
        "        }#T_7203b3c8_0eef_11eb_8204_52540034e71frow9_col13,#T_7203b3c8_0eef_11eb_8204_52540034e71frow12_col13,#T_7203b3c8_0eef_11eb_8204_52540034e71frow13_col9,#T_7203b3c8_0eef_11eb_8204_52540034e71frow13_col12{\n",
        "            background-color:  #1c7fb8;\n",
        "            color:  #000000;\n",
        "        }#T_7203b3c8_0eef_11eb_8204_52540034e71frow9_col14,#T_7203b3c8_0eef_11eb_8204_52540034e71frow14_col9{\n",
        "            background-color:  #4697c4;\n",
        "            color:  #000000;\n",
        "        }#T_7203b3c8_0eef_11eb_8204_52540034e71frow9_col15,#T_7203b3c8_0eef_11eb_8204_52540034e71frow15_col9{\n",
        "            background-color:  #9cb9d9;\n",
        "            color:  #000000;\n",
        "        }#T_7203b3c8_0eef_11eb_8204_52540034e71frow10_col11,#T_7203b3c8_0eef_11eb_8204_52540034e71frow11_col10{\n",
        "            background-color:  #045e93;\n",
        "            color:  #f1f1f1;\n",
        "        }#T_7203b3c8_0eef_11eb_8204_52540034e71frow10_col14,#T_7203b3c8_0eef_11eb_8204_52540034e71frow14_col10{\n",
        "            background-color:  #6da6cd;\n",
        "            color:  #000000;\n",
        "        }#T_7203b3c8_0eef_11eb_8204_52540034e71frow10_col15,#T_7203b3c8_0eef_11eb_8204_52540034e71frow15_col10{\n",
        "            background-color:  #589ec8;\n",
        "            color:  #000000;\n",
        "        }#T_7203b3c8_0eef_11eb_8204_52540034e71frow10_col16,#T_7203b3c8_0eef_11eb_8204_52540034e71frow16_col10{\n",
        "            background-color:  #045c90;\n",
        "            color:  #f1f1f1;\n",
        "        }#T_7203b3c8_0eef_11eb_8204_52540034e71frow11_col12,#T_7203b3c8_0eef_11eb_8204_52540034e71frow12_col11{\n",
        "            background-color:  #2d8abd;\n",
        "            color:  #000000;\n",
        "        }#T_7203b3c8_0eef_11eb_8204_52540034e71frow11_col14,#T_7203b3c8_0eef_11eb_8204_52540034e71frow14_col11{\n",
        "            background-color:  #63a2cb;\n",
        "            color:  #000000;\n",
        "        }#T_7203b3c8_0eef_11eb_8204_52540034e71frow11_col15,#T_7203b3c8_0eef_11eb_8204_52540034e71frow15_col11{\n",
        "            background-color:  #78abd0;\n",
        "            color:  #000000;\n",
        "        }#T_7203b3c8_0eef_11eb_8204_52540034e71frow11_col16,#T_7203b3c8_0eef_11eb_8204_52540034e71frow16_col11{\n",
        "            background-color:  #04598c;\n",
        "            color:  #f1f1f1;\n",
        "        }#T_7203b3c8_0eef_11eb_8204_52540034e71frow12_col15,#T_7203b3c8_0eef_11eb_8204_52540034e71frow15_col12{\n",
        "            background-color:  #1278b4;\n",
        "            color:  #f1f1f1;\n",
        "        }#T_7203b3c8_0eef_11eb_8204_52540034e71frow12_col16,#T_7203b3c8_0eef_11eb_8204_52540034e71frow16_col12{\n",
        "            background-color:  #056caa;\n",
        "            color:  #f1f1f1;\n",
        "        }#T_7203b3c8_0eef_11eb_8204_52540034e71frow13_col14,#T_7203b3c8_0eef_11eb_8204_52540034e71frow14_col13{\n",
        "            background-color:  #0569a4;\n",
        "            color:  #f1f1f1;\n",
        "        }#T_7203b3c8_0eef_11eb_8204_52540034e71frow14_col16,#T_7203b3c8_0eef_11eb_8204_52540034e71frow16_col14{\n",
        "            background-color:  #2c89bd;\n",
        "            color:  #000000;\n",
        "        }#T_7203b3c8_0eef_11eb_8204_52540034e71frow15_col16,#T_7203b3c8_0eef_11eb_8204_52540034e71frow16_col15{\n",
        "            background-color:  #3991c1;\n",
        "            color:  #000000;\n",
        "        }</style><table id=\"T_7203b3c8_0eef_11eb_8204_52540034e71f\" ><thead>    <tr>        <th class=\"blank level0\" ></th>        <th class=\"col_heading level0 col0\" >Rt</th>        <th class=\"col_heading level0 col1\" >theta</th>        <th class=\"col_heading level0 col2\" >kappa</th>        <th class=\"col_heading level0 col3\" >rho</th>        <th class=\"col_heading level0 col4\" >sigma</th>        <th class=\"col_heading level0 col5\" >School_closing</th>        <th class=\"col_heading level0 col6\" >Workplace_closing</th>        <th class=\"col_heading level0 col7\" >Cancel_events</th>        <th class=\"col_heading level0 col8\" >Gatherings_restrictions</th>        <th class=\"col_heading level0 col9\" >Transport_closing</th>        <th class=\"col_heading level0 col10\" >Stay_home_restrictions</th>        <th class=\"col_heading level0 col11\" >Internal_movement_restrictions</th>        <th class=\"col_heading level0 col12\" >International_movement_restrictions</th>        <th class=\"col_heading level0 col13\" >Information_campaigns</th>        <th class=\"col_heading level0 col14\" >Testing_policy</th>        <th class=\"col_heading level0 col15\" >Contact_tracing</th>        <th class=\"col_heading level0 col16\" >Stringency_index</th>    </tr></thead><tbody>\n",
        "                <tr>\n",
        "                        <th id=\"T_7203b3c8_0eef_11eb_8204_52540034e71flevel0_row0\" class=\"row_heading level0 row0\" >Rt</th>\n",
        "                        <td id=\"T_7203b3c8_0eef_11eb_8204_52540034e71frow0_col0\" class=\"data row0 col0\" >1.000000</td>\n",
        "                        <td id=\"T_7203b3c8_0eef_11eb_8204_52540034e71frow0_col1\" class=\"data row0 col1\" >-0.286147</td>\n",
        "                        <td id=\"T_7203b3c8_0eef_11eb_8204_52540034e71frow0_col2\" class=\"data row0 col2\" >-0.279382</td>\n",
        "                        <td id=\"T_7203b3c8_0eef_11eb_8204_52540034e71frow0_col3\" class=\"data row0 col3\" >-0.063705</td>\n",
        "                        <td id=\"T_7203b3c8_0eef_11eb_8204_52540034e71frow0_col4\" class=\"data row0 col4\" >-0.200425</td>\n",
        "                        <td id=\"T_7203b3c8_0eef_11eb_8204_52540034e71frow0_col5\" class=\"data row0 col5\" >-0.166060</td>\n",
        "                        <td id=\"T_7203b3c8_0eef_11eb_8204_52540034e71frow0_col6\" class=\"data row0 col6\" >-0.046349</td>\n",
        "                        <td id=\"T_7203b3c8_0eef_11eb_8204_52540034e71frow0_col7\" class=\"data row0 col7\" >-0.252815</td>\n",
        "                        <td id=\"T_7203b3c8_0eef_11eb_8204_52540034e71frow0_col8\" class=\"data row0 col8\" >-0.011864</td>\n",
        "                        <td id=\"T_7203b3c8_0eef_11eb_8204_52540034e71frow0_col9\" class=\"data row0 col9\" >-0.199790</td>\n",
        "                        <td id=\"T_7203b3c8_0eef_11eb_8204_52540034e71frow0_col10\" class=\"data row0 col10\" >-0.300131</td>\n",
        "                        <td id=\"T_7203b3c8_0eef_11eb_8204_52540034e71frow0_col11\" class=\"data row0 col11\" >-0.148867</td>\n",
        "                        <td id=\"T_7203b3c8_0eef_11eb_8204_52540034e71frow0_col12\" class=\"data row0 col12\" >-0.285443</td>\n",
        "                        <td id=\"T_7203b3c8_0eef_11eb_8204_52540034e71frow0_col13\" class=\"data row0 col13\" >-0.041188</td>\n",
        "                        <td id=\"T_7203b3c8_0eef_11eb_8204_52540034e71frow0_col14\" class=\"data row0 col14\" >-0.110482</td>\n",
        "                        <td id=\"T_7203b3c8_0eef_11eb_8204_52540034e71frow0_col15\" class=\"data row0 col15\" >-0.189149</td>\n",
        "                        <td id=\"T_7203b3c8_0eef_11eb_8204_52540034e71frow0_col16\" class=\"data row0 col16\" >-0.169540</td>\n",
        "            </tr>\n",
        "            <tr>\n",
        "                        <th id=\"T_7203b3c8_0eef_11eb_8204_52540034e71flevel0_row1\" class=\"row_heading level0 row1\" >theta</th>\n",
        "                        <td id=\"T_7203b3c8_0eef_11eb_8204_52540034e71frow1_col0\" class=\"data row1 col0\" >-0.286147</td>\n",
        "                        <td id=\"T_7203b3c8_0eef_11eb_8204_52540034e71frow1_col1\" class=\"data row1 col1\" >1.000000</td>\n",
        "                        <td id=\"T_7203b3c8_0eef_11eb_8204_52540034e71frow1_col2\" class=\"data row1 col2\" >0.985284</td>\n",
        "                        <td id=\"T_7203b3c8_0eef_11eb_8204_52540034e71frow1_col3\" class=\"data row1 col3\" >0.863444</td>\n",
        "                        <td id=\"T_7203b3c8_0eef_11eb_8204_52540034e71frow1_col4\" class=\"data row1 col4\" >-0.017113</td>\n",
        "                        <td id=\"T_7203b3c8_0eef_11eb_8204_52540034e71frow1_col5\" class=\"data row1 col5\" >-0.205387</td>\n",
        "                        <td id=\"T_7203b3c8_0eef_11eb_8204_52540034e71frow1_col6\" class=\"data row1 col6\" >-0.122164</td>\n",
        "                        <td id=\"T_7203b3c8_0eef_11eb_8204_52540034e71frow1_col7\" class=\"data row1 col7\" >-0.270597</td>\n",
        "                        <td id=\"T_7203b3c8_0eef_11eb_8204_52540034e71frow1_col8\" class=\"data row1 col8\" >-0.200430</td>\n",
        "                        <td id=\"T_7203b3c8_0eef_11eb_8204_52540034e71frow1_col9\" class=\"data row1 col9\" >-0.221287</td>\n",
        "                        <td id=\"T_7203b3c8_0eef_11eb_8204_52540034e71frow1_col10\" class=\"data row1 col10\" >0.220180</td>\n",
        "                        <td id=\"T_7203b3c8_0eef_11eb_8204_52540034e71frow1_col11\" class=\"data row1 col11\" >0.009411</td>\n",
        "                        <td id=\"T_7203b3c8_0eef_11eb_8204_52540034e71frow1_col12\" class=\"data row1 col12\" >0.185146</td>\n",
        "                        <td id=\"T_7203b3c8_0eef_11eb_8204_52540034e71frow1_col13\" class=\"data row1 col13\" >-0.358685</td>\n",
        "                        <td id=\"T_7203b3c8_0eef_11eb_8204_52540034e71frow1_col14\" class=\"data row1 col14\" >-0.387696</td>\n",
        "                        <td id=\"T_7203b3c8_0eef_11eb_8204_52540034e71frow1_col15\" class=\"data row1 col15\" >-0.025548</td>\n",
        "                        <td id=\"T_7203b3c8_0eef_11eb_8204_52540034e71frow1_col16\" class=\"data row1 col16\" >-0.081674</td>\n",
        "            </tr>\n",
        "            <tr>\n",
        "                        <th id=\"T_7203b3c8_0eef_11eb_8204_52540034e71flevel0_row2\" class=\"row_heading level0 row2\" >kappa</th>\n",
        "                        <td id=\"T_7203b3c8_0eef_11eb_8204_52540034e71frow2_col0\" class=\"data row2 col0\" >-0.279382</td>\n",
        "                        <td id=\"T_7203b3c8_0eef_11eb_8204_52540034e71frow2_col1\" class=\"data row2 col1\" >0.985284</td>\n",
        "                        <td id=\"T_7203b3c8_0eef_11eb_8204_52540034e71frow2_col2\" class=\"data row2 col2\" >1.000000</td>\n",
        "                        <td id=\"T_7203b3c8_0eef_11eb_8204_52540034e71frow2_col3\" class=\"data row2 col3\" >0.856921</td>\n",
        "                        <td id=\"T_7203b3c8_0eef_11eb_8204_52540034e71frow2_col4\" class=\"data row2 col4\" >-0.041192</td>\n",
        "                        <td id=\"T_7203b3c8_0eef_11eb_8204_52540034e71frow2_col5\" class=\"data row2 col5\" >-0.213640</td>\n",
        "                        <td id=\"T_7203b3c8_0eef_11eb_8204_52540034e71frow2_col6\" class=\"data row2 col6\" >-0.146070</td>\n",
        "                        <td id=\"T_7203b3c8_0eef_11eb_8204_52540034e71frow2_col7\" class=\"data row2 col7\" >-0.268887</td>\n",
        "                        <td id=\"T_7203b3c8_0eef_11eb_8204_52540034e71frow2_col8\" class=\"data row2 col8\" >-0.202155</td>\n",
        "                        <td id=\"T_7203b3c8_0eef_11eb_8204_52540034e71frow2_col9\" class=\"data row2 col9\" >-0.236415</td>\n",
        "                        <td id=\"T_7203b3c8_0eef_11eb_8204_52540034e71frow2_col10\" class=\"data row2 col10\" >0.214590</td>\n",
        "                        <td id=\"T_7203b3c8_0eef_11eb_8204_52540034e71frow2_col11\" class=\"data row2 col11\" >-0.001947</td>\n",
        "                        <td id=\"T_7203b3c8_0eef_11eb_8204_52540034e71frow2_col12\" class=\"data row2 col12\" >0.211866</td>\n",
        "                        <td id=\"T_7203b3c8_0eef_11eb_8204_52540034e71frow2_col13\" class=\"data row2 col13\" >-0.346907</td>\n",
        "                        <td id=\"T_7203b3c8_0eef_11eb_8204_52540034e71frow2_col14\" class=\"data row2 col14\" >-0.327974</td>\n",
        "                        <td id=\"T_7203b3c8_0eef_11eb_8204_52540034e71frow2_col15\" class=\"data row2 col15\" >0.015985</td>\n",
        "                        <td id=\"T_7203b3c8_0eef_11eb_8204_52540034e71frow2_col16\" class=\"data row2 col16\" >-0.098300</td>\n",
        "            </tr>\n",
        "            <tr>\n",
        "                        <th id=\"T_7203b3c8_0eef_11eb_8204_52540034e71flevel0_row3\" class=\"row_heading level0 row3\" >rho</th>\n",
        "                        <td id=\"T_7203b3c8_0eef_11eb_8204_52540034e71frow3_col0\" class=\"data row3 col0\" >-0.063705</td>\n",
        "                        <td id=\"T_7203b3c8_0eef_11eb_8204_52540034e71frow3_col1\" class=\"data row3 col1\" >0.863444</td>\n",
        "                        <td id=\"T_7203b3c8_0eef_11eb_8204_52540034e71frow3_col2\" class=\"data row3 col2\" >0.856921</td>\n",
        "                        <td id=\"T_7203b3c8_0eef_11eb_8204_52540034e71frow3_col3\" class=\"data row3 col3\" >1.000000</td>\n",
        "                        <td id=\"T_7203b3c8_0eef_11eb_8204_52540034e71frow3_col4\" class=\"data row3 col4\" >0.234253</td>\n",
        "                        <td id=\"T_7203b3c8_0eef_11eb_8204_52540034e71frow3_col5\" class=\"data row3 col5\" >-0.177656</td>\n",
        "                        <td id=\"T_7203b3c8_0eef_11eb_8204_52540034e71frow3_col6\" class=\"data row3 col6\" >-0.170587</td>\n",
        "                        <td id=\"T_7203b3c8_0eef_11eb_8204_52540034e71frow3_col7\" class=\"data row3 col7\" >-0.343767</td>\n",
        "                        <td id=\"T_7203b3c8_0eef_11eb_8204_52540034e71frow3_col8\" class=\"data row3 col8\" >-0.220338</td>\n",
        "                        <td id=\"T_7203b3c8_0eef_11eb_8204_52540034e71frow3_col9\" class=\"data row3 col9\" >-0.201203</td>\n",
        "                        <td id=\"T_7203b3c8_0eef_11eb_8204_52540034e71frow3_col10\" class=\"data row3 col10\" >0.192511</td>\n",
        "                        <td id=\"T_7203b3c8_0eef_11eb_8204_52540034e71frow3_col11\" class=\"data row3 col11\" >-0.020387</td>\n",
        "                        <td id=\"T_7203b3c8_0eef_11eb_8204_52540034e71frow3_col12\" class=\"data row3 col12\" >0.031013</td>\n",
        "                        <td id=\"T_7203b3c8_0eef_11eb_8204_52540034e71frow3_col13\" class=\"data row3 col13\" >-0.418784</td>\n",
        "                        <td id=\"T_7203b3c8_0eef_11eb_8204_52540034e71frow3_col14\" class=\"data row3 col14\" >-0.511357</td>\n",
        "                        <td id=\"T_7203b3c8_0eef_11eb_8204_52540034e71frow3_col15\" class=\"data row3 col15\" >-0.172283</td>\n",
        "                        <td id=\"T_7203b3c8_0eef_11eb_8204_52540034e71frow3_col16\" class=\"data row3 col16\" >-0.113057</td>\n",
        "            </tr>\n",
        "            <tr>\n",
        "                        <th id=\"T_7203b3c8_0eef_11eb_8204_52540034e71flevel0_row4\" class=\"row_heading level0 row4\" >sigma</th>\n",
        "                        <td id=\"T_7203b3c8_0eef_11eb_8204_52540034e71frow4_col0\" class=\"data row4 col0\" >-0.200425</td>\n",
        "                        <td id=\"T_7203b3c8_0eef_11eb_8204_52540034e71frow4_col1\" class=\"data row4 col1\" >-0.017113</td>\n",
        "                        <td id=\"T_7203b3c8_0eef_11eb_8204_52540034e71frow4_col2\" class=\"data row4 col2\" >-0.041192</td>\n",
        "                        <td id=\"T_7203b3c8_0eef_11eb_8204_52540034e71frow4_col3\" class=\"data row4 col3\" >0.234253</td>\n",
        "                        <td id=\"T_7203b3c8_0eef_11eb_8204_52540034e71frow4_col4\" class=\"data row4 col4\" >1.000000</td>\n",
        "                        <td id=\"T_7203b3c8_0eef_11eb_8204_52540034e71frow4_col5\" class=\"data row4 col5\" >0.187216</td>\n",
        "                        <td id=\"T_7203b3c8_0eef_11eb_8204_52540034e71frow4_col6\" class=\"data row4 col6\" >0.060693</td>\n",
        "                        <td id=\"T_7203b3c8_0eef_11eb_8204_52540034e71frow4_col7\" class=\"data row4 col7\" >0.103792</td>\n",
        "                        <td id=\"T_7203b3c8_0eef_11eb_8204_52540034e71frow4_col8\" class=\"data row4 col8\" >0.050386</td>\n",
        "                        <td id=\"T_7203b3c8_0eef_11eb_8204_52540034e71frow4_col9\" class=\"data row4 col9\" >0.215520</td>\n",
        "                        <td id=\"T_7203b3c8_0eef_11eb_8204_52540034e71frow4_col10\" class=\"data row4 col10\" >0.196280</td>\n",
        "                        <td id=\"T_7203b3c8_0eef_11eb_8204_52540034e71frow4_col11\" class=\"data row4 col11\" >0.147759</td>\n",
        "                        <td id=\"T_7203b3c8_0eef_11eb_8204_52540034e71frow4_col12\" class=\"data row4 col12\" >0.048417</td>\n",
        "                        <td id=\"T_7203b3c8_0eef_11eb_8204_52540034e71frow4_col13\" class=\"data row4 col13\" >0.038964</td>\n",
        "                        <td id=\"T_7203b3c8_0eef_11eb_8204_52540034e71frow4_col14\" class=\"data row4 col14\" >-0.119358</td>\n",
        "                        <td id=\"T_7203b3c8_0eef_11eb_8204_52540034e71frow4_col15\" class=\"data row4 col15\" >0.055273</td>\n",
        "                        <td id=\"T_7203b3c8_0eef_11eb_8204_52540034e71frow4_col16\" class=\"data row4 col16\" >0.187489</td>\n",
        "            </tr>\n",
        "            <tr>\n",
        "                        <th id=\"T_7203b3c8_0eef_11eb_8204_52540034e71flevel0_row5\" class=\"row_heading level0 row5\" >School_closing</th>\n",
        "                        <td id=\"T_7203b3c8_0eef_11eb_8204_52540034e71frow5_col0\" class=\"data row5 col0\" >-0.166060</td>\n",
        "                        <td id=\"T_7203b3c8_0eef_11eb_8204_52540034e71frow5_col1\" class=\"data row5 col1\" >-0.205387</td>\n",
        "                        <td id=\"T_7203b3c8_0eef_11eb_8204_52540034e71frow5_col2\" class=\"data row5 col2\" >-0.213640</td>\n",
        "                        <td id=\"T_7203b3c8_0eef_11eb_8204_52540034e71frow5_col3\" class=\"data row5 col3\" >-0.177656</td>\n",
        "                        <td id=\"T_7203b3c8_0eef_11eb_8204_52540034e71frow5_col4\" class=\"data row5 col4\" >0.187216</td>\n",
        "                        <td id=\"T_7203b3c8_0eef_11eb_8204_52540034e71frow5_col5\" class=\"data row5 col5\" >1.000000</td>\n",
        "                        <td id=\"T_7203b3c8_0eef_11eb_8204_52540034e71frow5_col6\" class=\"data row5 col6\" >0.755524</td>\n",
        "                        <td id=\"T_7203b3c8_0eef_11eb_8204_52540034e71frow5_col7\" class=\"data row5 col7\" >0.800675</td>\n",
        "                        <td id=\"T_7203b3c8_0eef_11eb_8204_52540034e71frow5_col8\" class=\"data row5 col8\" >0.666514</td>\n",
        "                        <td id=\"T_7203b3c8_0eef_11eb_8204_52540034e71frow5_col9\" class=\"data row5 col9\" >0.698690</td>\n",
        "                        <td id=\"T_7203b3c8_0eef_11eb_8204_52540034e71frow5_col10\" class=\"data row5 col10\" >0.606403</td>\n",
        "                        <td id=\"T_7203b3c8_0eef_11eb_8204_52540034e71frow5_col11\" class=\"data row5 col11\" >0.613432</td>\n",
        "                        <td id=\"T_7203b3c8_0eef_11eb_8204_52540034e71frow5_col12\" class=\"data row5 col12\" >0.488023</td>\n",
        "                        <td id=\"T_7203b3c8_0eef_11eb_8204_52540034e71frow5_col13\" class=\"data row5 col13\" >0.695606</td>\n",
        "                        <td id=\"T_7203b3c8_0eef_11eb_8204_52540034e71frow5_col14\" class=\"data row5 col14\" >0.505875</td>\n",
        "                        <td id=\"T_7203b3c8_0eef_11eb_8204_52540034e71frow5_col15\" class=\"data row5 col15\" >0.222697</td>\n",
        "                        <td id=\"T_7203b3c8_0eef_11eb_8204_52540034e71frow5_col16\" class=\"data row5 col16\" >0.840834</td>\n",
        "            </tr>\n",
        "            <tr>\n",
        "                        <th id=\"T_7203b3c8_0eef_11eb_8204_52540034e71flevel0_row6\" class=\"row_heading level0 row6\" >Workplace_closing</th>\n",
        "                        <td id=\"T_7203b3c8_0eef_11eb_8204_52540034e71frow6_col0\" class=\"data row6 col0\" >-0.046349</td>\n",
        "                        <td id=\"T_7203b3c8_0eef_11eb_8204_52540034e71frow6_col1\" class=\"data row6 col1\" >-0.122164</td>\n",
        "                        <td id=\"T_7203b3c8_0eef_11eb_8204_52540034e71frow6_col2\" class=\"data row6 col2\" >-0.146070</td>\n",
        "                        <td id=\"T_7203b3c8_0eef_11eb_8204_52540034e71frow6_col3\" class=\"data row6 col3\" >-0.170587</td>\n",
        "                        <td id=\"T_7203b3c8_0eef_11eb_8204_52540034e71frow6_col4\" class=\"data row6 col4\" >0.060693</td>\n",
        "                        <td id=\"T_7203b3c8_0eef_11eb_8204_52540034e71frow6_col5\" class=\"data row6 col5\" >0.755524</td>\n",
        "                        <td id=\"T_7203b3c8_0eef_11eb_8204_52540034e71frow6_col6\" class=\"data row6 col6\" >1.000000</td>\n",
        "                        <td id=\"T_7203b3c8_0eef_11eb_8204_52540034e71frow6_col7\" class=\"data row6 col7\" >0.743768</td>\n",
        "                        <td id=\"T_7203b3c8_0eef_11eb_8204_52540034e71frow6_col8\" class=\"data row6 col8\" >0.701899</td>\n",
        "                        <td id=\"T_7203b3c8_0eef_11eb_8204_52540034e71frow6_col9\" class=\"data row6 col9\" >0.646891</td>\n",
        "                        <td id=\"T_7203b3c8_0eef_11eb_8204_52540034e71frow6_col10\" class=\"data row6 col10\" >0.613577</td>\n",
        "                        <td id=\"T_7203b3c8_0eef_11eb_8204_52540034e71frow6_col11\" class=\"data row6 col11\" >0.584209</td>\n",
        "                        <td id=\"T_7203b3c8_0eef_11eb_8204_52540034e71frow6_col12\" class=\"data row6 col12\" >0.499693</td>\n",
        "                        <td id=\"T_7203b3c8_0eef_11eb_8204_52540034e71frow6_col13\" class=\"data row6 col13\" >0.801905</td>\n",
        "                        <td id=\"T_7203b3c8_0eef_11eb_8204_52540034e71frow6_col14\" class=\"data row6 col14\" >0.501181</td>\n",
        "                        <td id=\"T_7203b3c8_0eef_11eb_8204_52540034e71frow6_col15\" class=\"data row6 col15\" >0.333361</td>\n",
        "                        <td id=\"T_7203b3c8_0eef_11eb_8204_52540034e71frow6_col16\" class=\"data row6 col16\" >0.861543</td>\n",
        "            </tr>\n",
        "            <tr>\n",
        "                        <th id=\"T_7203b3c8_0eef_11eb_8204_52540034e71flevel0_row7\" class=\"row_heading level0 row7\" >Cancel_events</th>\n",
        "                        <td id=\"T_7203b3c8_0eef_11eb_8204_52540034e71frow7_col0\" class=\"data row7 col0\" >-0.252815</td>\n",
        "                        <td id=\"T_7203b3c8_0eef_11eb_8204_52540034e71frow7_col1\" class=\"data row7 col1\" >-0.270597</td>\n",
        "                        <td id=\"T_7203b3c8_0eef_11eb_8204_52540034e71frow7_col2\" class=\"data row7 col2\" >-0.268887</td>\n",
        "                        <td id=\"T_7203b3c8_0eef_11eb_8204_52540034e71frow7_col3\" class=\"data row7 col3\" >-0.343767</td>\n",
        "                        <td id=\"T_7203b3c8_0eef_11eb_8204_52540034e71frow7_col4\" class=\"data row7 col4\" >0.103792</td>\n",
        "                        <td id=\"T_7203b3c8_0eef_11eb_8204_52540034e71frow7_col5\" class=\"data row7 col5\" >0.800675</td>\n",
        "                        <td id=\"T_7203b3c8_0eef_11eb_8204_52540034e71frow7_col6\" class=\"data row7 col6\" >0.743768</td>\n",
        "                        <td id=\"T_7203b3c8_0eef_11eb_8204_52540034e71frow7_col7\" class=\"data row7 col7\" >1.000000</td>\n",
        "                        <td id=\"T_7203b3c8_0eef_11eb_8204_52540034e71frow7_col8\" class=\"data row7 col8\" >0.676215</td>\n",
        "                        <td id=\"T_7203b3c8_0eef_11eb_8204_52540034e71frow7_col9\" class=\"data row7 col9\" >0.584552</td>\n",
        "                        <td id=\"T_7203b3c8_0eef_11eb_8204_52540034e71frow7_col10\" class=\"data row7 col10\" >0.546385</td>\n",
        "                        <td id=\"T_7203b3c8_0eef_11eb_8204_52540034e71frow7_col11\" class=\"data row7 col11\" >0.568439</td>\n",
        "                        <td id=\"T_7203b3c8_0eef_11eb_8204_52540034e71frow7_col12\" class=\"data row7 col12\" >0.566312</td>\n",
        "                        <td id=\"T_7203b3c8_0eef_11eb_8204_52540034e71frow7_col13\" class=\"data row7 col13\" >0.844074</td>\n",
        "                        <td id=\"T_7203b3c8_0eef_11eb_8204_52540034e71frow7_col14\" class=\"data row7 col14\" >0.628070</td>\n",
        "                        <td id=\"T_7203b3c8_0eef_11eb_8204_52540034e71frow7_col15\" class=\"data row7 col15\" >0.557405</td>\n",
        "                        <td id=\"T_7203b3c8_0eef_11eb_8204_52540034e71frow7_col16\" class=\"data row7 col16\" >0.829929</td>\n",
        "            </tr>\n",
        "            <tr>\n",
        "                        <th id=\"T_7203b3c8_0eef_11eb_8204_52540034e71flevel0_row8\" class=\"row_heading level0 row8\" >Gatherings_restrictions</th>\n",
        "                        <td id=\"T_7203b3c8_0eef_11eb_8204_52540034e71frow8_col0\" class=\"data row8 col0\" >-0.011864</td>\n",
        "                        <td id=\"T_7203b3c8_0eef_11eb_8204_52540034e71frow8_col1\" class=\"data row8 col1\" >-0.200430</td>\n",
        "                        <td id=\"T_7203b3c8_0eef_11eb_8204_52540034e71frow8_col2\" class=\"data row8 col2\" >-0.202155</td>\n",
        "                        <td id=\"T_7203b3c8_0eef_11eb_8204_52540034e71frow8_col3\" class=\"data row8 col3\" >-0.220338</td>\n",
        "                        <td id=\"T_7203b3c8_0eef_11eb_8204_52540034e71frow8_col4\" class=\"data row8 col4\" >0.050386</td>\n",
        "                        <td id=\"T_7203b3c8_0eef_11eb_8204_52540034e71frow8_col5\" class=\"data row8 col5\" >0.666514</td>\n",
        "                        <td id=\"T_7203b3c8_0eef_11eb_8204_52540034e71frow8_col6\" class=\"data row8 col6\" >0.701899</td>\n",
        "                        <td id=\"T_7203b3c8_0eef_11eb_8204_52540034e71frow8_col7\" class=\"data row8 col7\" >0.676215</td>\n",
        "                        <td id=\"T_7203b3c8_0eef_11eb_8204_52540034e71frow8_col8\" class=\"data row8 col8\" >1.000000</td>\n",
        "                        <td id=\"T_7203b3c8_0eef_11eb_8204_52540034e71frow8_col9\" class=\"data row8 col9\" >0.753857</td>\n",
        "                        <td id=\"T_7203b3c8_0eef_11eb_8204_52540034e71frow8_col10\" class=\"data row8 col10\" >0.630192</td>\n",
        "                        <td id=\"T_7203b3c8_0eef_11eb_8204_52540034e71frow8_col11\" class=\"data row8 col11\" >0.747361</td>\n",
        "                        <td id=\"T_7203b3c8_0eef_11eb_8204_52540034e71frow8_col12\" class=\"data row8 col12\" >0.519929</td>\n",
        "                        <td id=\"T_7203b3c8_0eef_11eb_8204_52540034e71frow8_col13\" class=\"data row8 col13\" >0.723320</td>\n",
        "                        <td id=\"T_7203b3c8_0eef_11eb_8204_52540034e71frow8_col14\" class=\"data row8 col14\" >0.509150</td>\n",
        "                        <td id=\"T_7203b3c8_0eef_11eb_8204_52540034e71frow8_col15\" class=\"data row8 col15\" >0.312513</td>\n",
        "                        <td id=\"T_7203b3c8_0eef_11eb_8204_52540034e71frow8_col16\" class=\"data row8 col16\" >0.861268</td>\n",
        "            </tr>\n",
        "            <tr>\n",
        "                        <th id=\"T_7203b3c8_0eef_11eb_8204_52540034e71flevel0_row9\" class=\"row_heading level0 row9\" >Transport_closing</th>\n",
        "                        <td id=\"T_7203b3c8_0eef_11eb_8204_52540034e71frow9_col0\" class=\"data row9 col0\" >-0.199790</td>\n",
        "                        <td id=\"T_7203b3c8_0eef_11eb_8204_52540034e71frow9_col1\" class=\"data row9 col1\" >-0.221287</td>\n",
        "                        <td id=\"T_7203b3c8_0eef_11eb_8204_52540034e71frow9_col2\" class=\"data row9 col2\" >-0.236415</td>\n",
        "                        <td id=\"T_7203b3c8_0eef_11eb_8204_52540034e71frow9_col3\" class=\"data row9 col3\" >-0.201203</td>\n",
        "                        <td id=\"T_7203b3c8_0eef_11eb_8204_52540034e71frow9_col4\" class=\"data row9 col4\" >0.215520</td>\n",
        "                        <td id=\"T_7203b3c8_0eef_11eb_8204_52540034e71frow9_col5\" class=\"data row9 col5\" >0.698690</td>\n",
        "                        <td id=\"T_7203b3c8_0eef_11eb_8204_52540034e71frow9_col6\" class=\"data row9 col6\" >0.646891</td>\n",
        "                        <td id=\"T_7203b3c8_0eef_11eb_8204_52540034e71frow9_col7\" class=\"data row9 col7\" >0.584552</td>\n",
        "                        <td id=\"T_7203b3c8_0eef_11eb_8204_52540034e71frow9_col8\" class=\"data row9 col8\" >0.753857</td>\n",
        "                        <td id=\"T_7203b3c8_0eef_11eb_8204_52540034e71frow9_col9\" class=\"data row9 col9\" >1.000000</td>\n",
        "                        <td id=\"T_7203b3c8_0eef_11eb_8204_52540034e71frow9_col10\" class=\"data row9 col10\" >0.634842</td>\n",
        "                        <td id=\"T_7203b3c8_0eef_11eb_8204_52540034e71frow9_col11\" class=\"data row9 col11\" >0.753893</td>\n",
        "                        <td id=\"T_7203b3c8_0eef_11eb_8204_52540034e71frow9_col12\" class=\"data row9 col12\" >0.428054</td>\n",
        "                        <td id=\"T_7203b3c8_0eef_11eb_8204_52540034e71frow9_col13\" class=\"data row9 col13\" >0.531627</td>\n",
        "                        <td id=\"T_7203b3c8_0eef_11eb_8204_52540034e71frow9_col14\" class=\"data row9 col14\" >0.382870</td>\n",
        "                        <td id=\"T_7203b3c8_0eef_11eb_8204_52540034e71frow9_col15\" class=\"data row9 col15\" >0.094769</td>\n",
        "                        <td id=\"T_7203b3c8_0eef_11eb_8204_52540034e71frow9_col16\" class=\"data row9 col16\" >0.802004</td>\n",
        "            </tr>\n",
        "            <tr>\n",
        "                        <th id=\"T_7203b3c8_0eef_11eb_8204_52540034e71flevel0_row10\" class=\"row_heading level0 row10\" >Stay_home_restrictions</th>\n",
        "                        <td id=\"T_7203b3c8_0eef_11eb_8204_52540034e71frow10_col0\" class=\"data row10 col0\" >-0.300131</td>\n",
        "                        <td id=\"T_7203b3c8_0eef_11eb_8204_52540034e71frow10_col1\" class=\"data row10 col1\" >0.220180</td>\n",
        "                        <td id=\"T_7203b3c8_0eef_11eb_8204_52540034e71frow10_col2\" class=\"data row10 col2\" >0.214590</td>\n",
        "                        <td id=\"T_7203b3c8_0eef_11eb_8204_52540034e71frow10_col3\" class=\"data row10 col3\" >0.192511</td>\n",
        "                        <td id=\"T_7203b3c8_0eef_11eb_8204_52540034e71frow10_col4\" class=\"data row10 col4\" >0.196280</td>\n",
        "                        <td id=\"T_7203b3c8_0eef_11eb_8204_52540034e71frow10_col5\" class=\"data row10 col5\" >0.606403</td>\n",
        "                        <td id=\"T_7203b3c8_0eef_11eb_8204_52540034e71frow10_col6\" class=\"data row10 col6\" >0.613577</td>\n",
        "                        <td id=\"T_7203b3c8_0eef_11eb_8204_52540034e71frow10_col7\" class=\"data row10 col7\" >0.546385</td>\n",
        "                        <td id=\"T_7203b3c8_0eef_11eb_8204_52540034e71frow10_col8\" class=\"data row10 col8\" >0.630192</td>\n",
        "                        <td id=\"T_7203b3c8_0eef_11eb_8204_52540034e71frow10_col9\" class=\"data row10 col9\" >0.634842</td>\n",
        "                        <td id=\"T_7203b3c8_0eef_11eb_8204_52540034e71frow10_col10\" class=\"data row10 col10\" >1.000000</td>\n",
        "                        <td id=\"T_7203b3c8_0eef_11eb_8204_52540034e71frow10_col11\" class=\"data row10 col11\" >0.776304</td>\n",
        "                        <td id=\"T_7203b3c8_0eef_11eb_8204_52540034e71frow10_col12\" class=\"data row10 col12\" >0.564465</td>\n",
        "                        <td id=\"T_7203b3c8_0eef_11eb_8204_52540034e71frow10_col13\" class=\"data row10 col13\" >0.432566</td>\n",
        "                        <td id=\"T_7203b3c8_0eef_11eb_8204_52540034e71frow10_col14\" class=\"data row10 col14\" >0.262650</td>\n",
        "                        <td id=\"T_7203b3c8_0eef_11eb_8204_52540034e71frow10_col15\" class=\"data row10 col15\" >0.332438</td>\n",
        "                        <td id=\"T_7203b3c8_0eef_11eb_8204_52540034e71frow10_col16\" class=\"data row10 col16\" >0.790810</td>\n",
        "            </tr>\n",
        "            <tr>\n",
        "                        <th id=\"T_7203b3c8_0eef_11eb_8204_52540034e71flevel0_row11\" class=\"row_heading level0 row11\" >Internal_movement_restrictions</th>\n",
        "                        <td id=\"T_7203b3c8_0eef_11eb_8204_52540034e71frow11_col0\" class=\"data row11 col0\" >-0.148867</td>\n",
        "                        <td id=\"T_7203b3c8_0eef_11eb_8204_52540034e71frow11_col1\" class=\"data row11 col1\" >0.009411</td>\n",
        "                        <td id=\"T_7203b3c8_0eef_11eb_8204_52540034e71frow11_col2\" class=\"data row11 col2\" >-0.001947</td>\n",
        "                        <td id=\"T_7203b3c8_0eef_11eb_8204_52540034e71frow11_col3\" class=\"data row11 col3\" >-0.020387</td>\n",
        "                        <td id=\"T_7203b3c8_0eef_11eb_8204_52540034e71frow11_col4\" class=\"data row11 col4\" >0.147759</td>\n",
        "                        <td id=\"T_7203b3c8_0eef_11eb_8204_52540034e71frow11_col5\" class=\"data row11 col5\" >0.613432</td>\n",
        "                        <td id=\"T_7203b3c8_0eef_11eb_8204_52540034e71frow11_col6\" class=\"data row11 col6\" >0.584209</td>\n",
        "                        <td id=\"T_7203b3c8_0eef_11eb_8204_52540034e71frow11_col7\" class=\"data row11 col7\" >0.568439</td>\n",
        "                        <td id=\"T_7203b3c8_0eef_11eb_8204_52540034e71frow11_col8\" class=\"data row11 col8\" >0.747361</td>\n",
        "                        <td id=\"T_7203b3c8_0eef_11eb_8204_52540034e71frow11_col9\" class=\"data row11 col9\" >0.753893</td>\n",
        "                        <td id=\"T_7203b3c8_0eef_11eb_8204_52540034e71frow11_col10\" class=\"data row11 col10\" >0.776304</td>\n",
        "                        <td id=\"T_7203b3c8_0eef_11eb_8204_52540034e71frow11_col11\" class=\"data row11 col11\" >1.000000</td>\n",
        "                        <td id=\"T_7203b3c8_0eef_11eb_8204_52540034e71frow11_col12\" class=\"data row11 col12\" >0.466989</td>\n",
        "                        <td id=\"T_7203b3c8_0eef_11eb_8204_52540034e71frow11_col13\" class=\"data row11 col13\" >0.502977</td>\n",
        "                        <td id=\"T_7203b3c8_0eef_11eb_8204_52540034e71frow11_col14\" class=\"data row11 col14\" >0.293305</td>\n",
        "                        <td id=\"T_7203b3c8_0eef_11eb_8204_52540034e71frow11_col15\" class=\"data row11 col15\" >0.229571</td>\n",
        "                        <td id=\"T_7203b3c8_0eef_11eb_8204_52540034e71frow11_col16\" class=\"data row11 col16\" >0.811439</td>\n",
        "            </tr>\n",
        "            <tr>\n",
        "                        <th id=\"T_7203b3c8_0eef_11eb_8204_52540034e71flevel0_row12\" class=\"row_heading level0 row12\" >International_movement_restrictions</th>\n",
        "                        <td id=\"T_7203b3c8_0eef_11eb_8204_52540034e71frow12_col0\" class=\"data row12 col0\" >-0.285443</td>\n",
        "                        <td id=\"T_7203b3c8_0eef_11eb_8204_52540034e71frow12_col1\" class=\"data row12 col1\" >0.185146</td>\n",
        "                        <td id=\"T_7203b3c8_0eef_11eb_8204_52540034e71frow12_col2\" class=\"data row12 col2\" >0.211866</td>\n",
        "                        <td id=\"T_7203b3c8_0eef_11eb_8204_52540034e71frow12_col3\" class=\"data row12 col3\" >0.031013</td>\n",
        "                        <td id=\"T_7203b3c8_0eef_11eb_8204_52540034e71frow12_col4\" class=\"data row12 col4\" >0.048417</td>\n",
        "                        <td id=\"T_7203b3c8_0eef_11eb_8204_52540034e71frow12_col5\" class=\"data row12 col5\" >0.488023</td>\n",
        "                        <td id=\"T_7203b3c8_0eef_11eb_8204_52540034e71frow12_col6\" class=\"data row12 col6\" >0.499693</td>\n",
        "                        <td id=\"T_7203b3c8_0eef_11eb_8204_52540034e71frow12_col7\" class=\"data row12 col7\" >0.566312</td>\n",
        "                        <td id=\"T_7203b3c8_0eef_11eb_8204_52540034e71frow12_col8\" class=\"data row12 col8\" >0.519929</td>\n",
        "                        <td id=\"T_7203b3c8_0eef_11eb_8204_52540034e71frow12_col9\" class=\"data row12 col9\" >0.428054</td>\n",
        "                        <td id=\"T_7203b3c8_0eef_11eb_8204_52540034e71frow12_col10\" class=\"data row12 col10\" >0.564465</td>\n",
        "                        <td id=\"T_7203b3c8_0eef_11eb_8204_52540034e71frow12_col11\" class=\"data row12 col11\" >0.466989</td>\n",
        "                        <td id=\"T_7203b3c8_0eef_11eb_8204_52540034e71frow12_col12\" class=\"data row12 col12\" >1.000000</td>\n",
        "                        <td id=\"T_7203b3c8_0eef_11eb_8204_52540034e71frow12_col13\" class=\"data row12 col13\" >0.532908</td>\n",
        "                        <td id=\"T_7203b3c8_0eef_11eb_8204_52540034e71frow12_col14\" class=\"data row12 col14\" >0.557763</td>\n",
        "                        <td id=\"T_7203b3c8_0eef_11eb_8204_52540034e71frow12_col15\" class=\"data row12 col15\" >0.569086</td>\n",
        "                        <td id=\"T_7203b3c8_0eef_11eb_8204_52540034e71frow12_col16\" class=\"data row12 col16\" >0.656622</td>\n",
        "            </tr>\n",
        "            <tr>\n",
        "                        <th id=\"T_7203b3c8_0eef_11eb_8204_52540034e71flevel0_row13\" class=\"row_heading level0 row13\" >Information_campaigns</th>\n",
        "                        <td id=\"T_7203b3c8_0eef_11eb_8204_52540034e71frow13_col0\" class=\"data row13 col0\" >-0.041188</td>\n",
        "                        <td id=\"T_7203b3c8_0eef_11eb_8204_52540034e71frow13_col1\" class=\"data row13 col1\" >-0.358685</td>\n",
        "                        <td id=\"T_7203b3c8_0eef_11eb_8204_52540034e71frow13_col2\" class=\"data row13 col2\" >-0.346907</td>\n",
        "                        <td id=\"T_7203b3c8_0eef_11eb_8204_52540034e71frow13_col3\" class=\"data row13 col3\" >-0.418784</td>\n",
        "                        <td id=\"T_7203b3c8_0eef_11eb_8204_52540034e71frow13_col4\" class=\"data row13 col4\" >0.038964</td>\n",
        "                        <td id=\"T_7203b3c8_0eef_11eb_8204_52540034e71frow13_col5\" class=\"data row13 col5\" >0.695606</td>\n",
        "                        <td id=\"T_7203b3c8_0eef_11eb_8204_52540034e71frow13_col6\" class=\"data row13 col6\" >0.801905</td>\n",
        "                        <td id=\"T_7203b3c8_0eef_11eb_8204_52540034e71frow13_col7\" class=\"data row13 col7\" >0.844074</td>\n",
        "                        <td id=\"T_7203b3c8_0eef_11eb_8204_52540034e71frow13_col8\" class=\"data row13 col8\" >0.723320</td>\n",
        "                        <td id=\"T_7203b3c8_0eef_11eb_8204_52540034e71frow13_col9\" class=\"data row13 col9\" >0.531627</td>\n",
        "                        <td id=\"T_7203b3c8_0eef_11eb_8204_52540034e71frow13_col10\" class=\"data row13 col10\" >0.432566</td>\n",
        "                        <td id=\"T_7203b3c8_0eef_11eb_8204_52540034e71frow13_col11\" class=\"data row13 col11\" >0.502977</td>\n",
        "                        <td id=\"T_7203b3c8_0eef_11eb_8204_52540034e71frow13_col12\" class=\"data row13 col12\" >0.532908</td>\n",
        "                        <td id=\"T_7203b3c8_0eef_11eb_8204_52540034e71frow13_col13\" class=\"data row13 col13\" >1.000000</td>\n",
        "                        <td id=\"T_7203b3c8_0eef_11eb_8204_52540034e71frow13_col14\" class=\"data row13 col14\" >0.682637</td>\n",
        "                        <td id=\"T_7203b3c8_0eef_11eb_8204_52540034e71frow13_col15\" class=\"data row13 col15\" >0.564522</td>\n",
        "                        <td id=\"T_7203b3c8_0eef_11eb_8204_52540034e71frow13_col16\" class=\"data row13 col16\" >0.803059</td>\n",
        "            </tr>\n",
        "            <tr>\n",
        "                        <th id=\"T_7203b3c8_0eef_11eb_8204_52540034e71flevel0_row14\" class=\"row_heading level0 row14\" >Testing_policy</th>\n",
        "                        <td id=\"T_7203b3c8_0eef_11eb_8204_52540034e71frow14_col0\" class=\"data row14 col0\" >-0.110482</td>\n",
        "                        <td id=\"T_7203b3c8_0eef_11eb_8204_52540034e71frow14_col1\" class=\"data row14 col1\" >-0.387696</td>\n",
        "                        <td id=\"T_7203b3c8_0eef_11eb_8204_52540034e71frow14_col2\" class=\"data row14 col2\" >-0.327974</td>\n",
        "                        <td id=\"T_7203b3c8_0eef_11eb_8204_52540034e71frow14_col3\" class=\"data row14 col3\" >-0.511357</td>\n",
        "                        <td id=\"T_7203b3c8_0eef_11eb_8204_52540034e71frow14_col4\" class=\"data row14 col4\" >-0.119358</td>\n",
        "                        <td id=\"T_7203b3c8_0eef_11eb_8204_52540034e71frow14_col5\" class=\"data row14 col5\" >0.505875</td>\n",
        "                        <td id=\"T_7203b3c8_0eef_11eb_8204_52540034e71frow14_col6\" class=\"data row14 col6\" >0.501181</td>\n",
        "                        <td id=\"T_7203b3c8_0eef_11eb_8204_52540034e71frow14_col7\" class=\"data row14 col7\" >0.628070</td>\n",
        "                        <td id=\"T_7203b3c8_0eef_11eb_8204_52540034e71frow14_col8\" class=\"data row14 col8\" >0.509150</td>\n",
        "                        <td id=\"T_7203b3c8_0eef_11eb_8204_52540034e71frow14_col9\" class=\"data row14 col9\" >0.382870</td>\n",
        "                        <td id=\"T_7203b3c8_0eef_11eb_8204_52540034e71frow14_col10\" class=\"data row14 col10\" >0.262650</td>\n",
        "                        <td id=\"T_7203b3c8_0eef_11eb_8204_52540034e71frow14_col11\" class=\"data row14 col11\" >0.293305</td>\n",
        "                        <td id=\"T_7203b3c8_0eef_11eb_8204_52540034e71frow14_col12\" class=\"data row14 col12\" >0.557763</td>\n",
        "                        <td id=\"T_7203b3c8_0eef_11eb_8204_52540034e71frow14_col13\" class=\"data row14 col13\" >0.682637</td>\n",
        "                        <td id=\"T_7203b3c8_0eef_11eb_8204_52540034e71frow14_col14\" class=\"data row14 col14\" >1.000000</td>\n",
        "                        <td id=\"T_7203b3c8_0eef_11eb_8204_52540034e71frow14_col15\" class=\"data row14 col15\" >0.506627</td>\n",
        "                        <td id=\"T_7203b3c8_0eef_11eb_8204_52540034e71frow14_col16\" class=\"data row14 col16\" >0.470412</td>\n",
        "            </tr>\n",
        "            <tr>\n",
        "                        <th id=\"T_7203b3c8_0eef_11eb_8204_52540034e71flevel0_row15\" class=\"row_heading level0 row15\" >Contact_tracing</th>\n",
        "                        <td id=\"T_7203b3c8_0eef_11eb_8204_52540034e71frow15_col0\" class=\"data row15 col0\" >-0.189149</td>\n",
        "                        <td id=\"T_7203b3c8_0eef_11eb_8204_52540034e71frow15_col1\" class=\"data row15 col1\" >-0.025548</td>\n",
        "                        <td id=\"T_7203b3c8_0eef_11eb_8204_52540034e71frow15_col2\" class=\"data row15 col2\" >0.015985</td>\n",
        "                        <td id=\"T_7203b3c8_0eef_11eb_8204_52540034e71frow15_col3\" class=\"data row15 col3\" >-0.172283</td>\n",
        "                        <td id=\"T_7203b3c8_0eef_11eb_8204_52540034e71frow15_col4\" class=\"data row15 col4\" >0.055273</td>\n",
        "                        <td id=\"T_7203b3c8_0eef_11eb_8204_52540034e71frow15_col5\" class=\"data row15 col5\" >0.222697</td>\n",
        "                        <td id=\"T_7203b3c8_0eef_11eb_8204_52540034e71frow15_col6\" class=\"data row15 col6\" >0.333361</td>\n",
        "                        <td id=\"T_7203b3c8_0eef_11eb_8204_52540034e71frow15_col7\" class=\"data row15 col7\" >0.557405</td>\n",
        "                        <td id=\"T_7203b3c8_0eef_11eb_8204_52540034e71frow15_col8\" class=\"data row15 col8\" >0.312513</td>\n",
        "                        <td id=\"T_7203b3c8_0eef_11eb_8204_52540034e71frow15_col9\" class=\"data row15 col9\" >0.094769</td>\n",
        "                        <td id=\"T_7203b3c8_0eef_11eb_8204_52540034e71frow15_col10\" class=\"data row15 col10\" >0.332438</td>\n",
        "                        <td id=\"T_7203b3c8_0eef_11eb_8204_52540034e71frow15_col11\" class=\"data row15 col11\" >0.229571</td>\n",
        "                        <td id=\"T_7203b3c8_0eef_11eb_8204_52540034e71frow15_col12\" class=\"data row15 col12\" >0.569086</td>\n",
        "                        <td id=\"T_7203b3c8_0eef_11eb_8204_52540034e71frow15_col13\" class=\"data row15 col13\" >0.564522</td>\n",
        "                        <td id=\"T_7203b3c8_0eef_11eb_8204_52540034e71frow15_col14\" class=\"data row15 col14\" >0.506627</td>\n",
        "                        <td id=\"T_7203b3c8_0eef_11eb_8204_52540034e71frow15_col15\" class=\"data row15 col15\" >1.000000</td>\n",
        "                        <td id=\"T_7203b3c8_0eef_11eb_8204_52540034e71frow15_col16\" class=\"data row15 col16\" >0.422009</td>\n",
        "            </tr>\n",
        "            <tr>\n",
        "                        <th id=\"T_7203b3c8_0eef_11eb_8204_52540034e71flevel0_row16\" class=\"row_heading level0 row16\" >Stringency_index</th>\n",
        "                        <td id=\"T_7203b3c8_0eef_11eb_8204_52540034e71frow16_col0\" class=\"data row16 col0\" >-0.169540</td>\n",
        "                        <td id=\"T_7203b3c8_0eef_11eb_8204_52540034e71frow16_col1\" class=\"data row16 col1\" >-0.081674</td>\n",
        "                        <td id=\"T_7203b3c8_0eef_11eb_8204_52540034e71frow16_col2\" class=\"data row16 col2\" >-0.098300</td>\n",
        "                        <td id=\"T_7203b3c8_0eef_11eb_8204_52540034e71frow16_col3\" class=\"data row16 col3\" >-0.113057</td>\n",
        "                        <td id=\"T_7203b3c8_0eef_11eb_8204_52540034e71frow16_col4\" class=\"data row16 col4\" >0.187489</td>\n",
        "                        <td id=\"T_7203b3c8_0eef_11eb_8204_52540034e71frow16_col5\" class=\"data row16 col5\" >0.840834</td>\n",
        "                        <td id=\"T_7203b3c8_0eef_11eb_8204_52540034e71frow16_col6\" class=\"data row16 col6\" >0.861543</td>\n",
        "                        <td id=\"T_7203b3c8_0eef_11eb_8204_52540034e71frow16_col7\" class=\"data row16 col7\" >0.829929</td>\n",
        "                        <td id=\"T_7203b3c8_0eef_11eb_8204_52540034e71frow16_col8\" class=\"data row16 col8\" >0.861268</td>\n",
        "                        <td id=\"T_7203b3c8_0eef_11eb_8204_52540034e71frow16_col9\" class=\"data row16 col9\" >0.802004</td>\n",
        "                        <td id=\"T_7203b3c8_0eef_11eb_8204_52540034e71frow16_col10\" class=\"data row16 col10\" >0.790810</td>\n",
        "                        <td id=\"T_7203b3c8_0eef_11eb_8204_52540034e71frow16_col11\" class=\"data row16 col11\" >0.811439</td>\n",
        "                        <td id=\"T_7203b3c8_0eef_11eb_8204_52540034e71frow16_col12\" class=\"data row16 col12\" >0.656622</td>\n",
        "                        <td id=\"T_7203b3c8_0eef_11eb_8204_52540034e71frow16_col13\" class=\"data row16 col13\" >0.803059</td>\n",
        "                        <td id=\"T_7203b3c8_0eef_11eb_8204_52540034e71frow16_col14\" class=\"data row16 col14\" >0.470412</td>\n",
        "                        <td id=\"T_7203b3c8_0eef_11eb_8204_52540034e71frow16_col15\" class=\"data row16 col15\" >0.422009</td>\n",
        "                        <td id=\"T_7203b3c8_0eef_11eb_8204_52540034e71frow16_col16\" class=\"data row16 col16\" >1.000000</td>\n",
        "            </tr>\n",
        "    </tbody></table>"
       ],
       "output_type": "pyout",
       "prompt_number": 21,
       "text": [
        "<pandas.io.formats.style.Styler at 0x7f1658546880>"
       ]
      }
     ],
     "prompt_number": 21
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "# Scatter plot of Stringency index and Rt\n",
      "df = track_df.copy()\n",
      "sns.scatterplot(data=df, x=\"Stringency_index\", y=\"Rt\", hue=\"Country\", legend=\"brief\", marker=\"+\")\n",
      "bbox_to_anchor=(1.02, 0)\n",
      "bbox_loc=\"lower left\"\n",
      "plt.legend(bbox_to_anchor=bbox_to_anchor, loc=bbox_loc, borderaxespad=0)\n",
      "plt.title(\"Relationship of Stringency index and reproduction number\")\n",
      "plt.ylabel(\"Reproduction number\")\n",
      "plt.xlabel(\"Stringency index\")\n",
      "plt.show()"
     ],
     "language": "python",
     "metadata": {},
     "outputs": [
      {
       "output_type": "display_data",
       "png": "\n",
       "text": [
        "<Figure size 432x288 with 1 Axes>"
       ]
      }
     ],
     "prompt_number": 22
    }
   ],
   "metadata": {}
  }
 ]
}
