{
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3.8.2 64-bit ('.venv': venv)",
   "name": "python_defaultSpec_1597669925034"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.8.2-final"
  },
  "name": ""
 },
 "nbformat": 3,
 "nbformat_minor": 0,
 "worksheets": [
  {
   "cells": [
    {
     "cell_type": "markdown",
     "metadata": {},
     "source": [
      "# Usage (details: policy measures)\n",
      "Here, we will analyse the relationship of policy measures and parameter values of SIR-derived ODE models. Policy measures are tracked by [Oxford Covid-19 Government Response Tracker (OxCGRT)](https://github.com/OxCGRT/covid-policy-tracker)."
     ]
    },
    {
     "cell_type": "heading",
     "level": 2,
     "metadata": {},
     "source": [
      "Preparation"
     ]
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "# Standard users\n",
      "# !pip install covsirphy\n",
      "# Developers (Note: this notebook is in example directory)\n",
      "import os\n",
      "os.chdir(\"../\")"
     ],
     "language": "python",
     "metadata": {},
     "outputs": [],
     "prompt_number": 1
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "from pprint import pprint"
     ],
     "language": "python",
     "metadata": {},
     "outputs": [],
     "prompt_number": 2
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "import covsirphy as cs\n",
      "cs.__version__"
     ],
     "language": "python",
     "metadata": {},
     "outputs": [
      {
       "output_type": "pyout",
       "prompt_number": 3,
       "text": [
        "'2.8.1-alpha.fix.211'"
       ]
      }
     ],
     "prompt_number": 3
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "# Standard users and developers\n",
      "data_loader = cs.DataLoader(\"input\")\n",
      "# The number of cases (JHU style)\n",
      "jhu_data = data_loader.jhu(verbose=False)\n",
      "# Population in each country\n",
      "population_data = data_loader.population(verbose=False)\n",
      "# Government Response Tracker (OxCGRT)\n",
      "oxcgrt_data = data_loader.oxcgrt(verbose=False)\n",
      "# Description/citation\n",
      "print(oxcgrt_data.citation)"
     ],
     "language": "python",
     "metadata": {
      "tags": []
     },
     "outputs": [
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "(Secondary source) Guidotti, E., Ardia, D., (2020), \"COVID-19 Data Hub\", Journal of Open Source Software 5(51):2376, doi: 10.21105/joss.02376.\n",
        "We can get Citation list of primary sources with DataLoader(...).covid19dh_citation"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      }
     ],
     "prompt_number": 4
    },
    {
     "cell_type": "markdown",
     "metadata": {},
     "source": [
      "## Class for policy measure analysis\n",
      "We will `PolicyMeasures` class to find relationship of policy measures and parameter values of SIR-derived ODE models."
     ]
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "# Create analyser with tau value 360 [min] (can be changed)\n",
      "analyser = cs.PolicyMeasures(jhu_data, population_data, oxcgrt_data, tau=360)\n",
      "# The number of registerd countries\n",
      "len(analyser.countries)"
     ],
     "language": "python",
     "metadata": {
      "tags": []
     },
     "outputs": [
      {
       "output_type": "pyout",
       "prompt_number": 5,
       "text": [
        "184"
       ]
      }
     ],
     "prompt_number": 5
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "# We can get Scenario instance for detailed scenario analysis\n",
      "type(analyser.scenario(\"Japan\"))"
     ],
     "language": "python",
     "metadata": {},
     "outputs": [
      {
       "output_type": "pyout",
       "prompt_number": 6,
       "text": [
        "covsirphy.analysis.scenario.Scenario"
       ]
      }
     ],
     "prompt_number": 6
    },
    {
     "cell_type": "markdown",
     "metadata": {},
     "source": [
      "## Set phases with S-R trend analysis\n",
      "We will perform S-R trend analysis to set phases in all countries. Countries which do not have **9th phases** will be un-registered for the next analysis. This number will be adjusted for your analysis."
     ]
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "# Show the number of phases of all countries\n",
      "analyser.trend()\n",
      "pprint(analyser.phase_len(), compact=True)"
     ],
     "language": "python",
     "metadata": {},
     "outputs": [
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "{"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "2"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ": "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "['Belize', 'Dominica', 'Trinidad and Tobago']"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        " "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "3"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ": "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "["
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Fiji'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Norway'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Bahamas'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Brunei'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Tanzania'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Mauritius'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Botswana'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        "     "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Seychelles'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Grenada'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Namibia'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Papua New Guinea'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "]"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        " "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "4"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ": "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "["
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Zambia'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Central African Republic'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Guyana'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Vietnam'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Libya'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        "     "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Paraguay'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Lesotho'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Lebanon'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Kyrgyzstan'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Netherlands'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Gambia'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        "     "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Equatorial Guinea'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Malta'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Zimbabwe'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Antigua and Barbuda'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        "     "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Angola'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "]"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        " "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "5"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ": "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "["
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Ethiopia'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Ireland'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Bosnia and Herzegovina'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Syria'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Japan'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        "     "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Morocco'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Kazakhstan'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Palestine'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Guatemala'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Montenegro'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        "     "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Venezuela'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'South Sudan'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Barbados'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Cambodia'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Mozambique'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        "     "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Liechtenstein'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'San Marino'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Iceland'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Saint Lucia'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Slovakia'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        "     "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Israel'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'New Zealand'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Saint Vincent and the Grenadines'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Spain'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "]"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        " "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "6"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ": "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "["
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Taiwan'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Uganda'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Eritrea'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Guinea-Bissau'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'El Salvador'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Kenya'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        "     "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Maldives'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Sao Tome and Principe'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Cameroon'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Nicaragua'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Suriname'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        "     "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Kosovo'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Comoros'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Croatia'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Chad'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Colombia'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Rwanda'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Yemen'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        "     "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Costa Rica'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Malawi'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Burundi'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Madagascar'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Australia'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Thailand'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        "     "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Philippines'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Finland'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Mongolia'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Cyprus'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "]"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        " "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "7"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ": "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "["
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Andorra'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Uruguay'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Qatar'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Gabon'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Haiti'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Djibouti'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Tunisia'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        "     "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Niger'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Belarus'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Argentina'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Monaco'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Sudan'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Bhutan'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Albania'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        "     "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Greece'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Uzbekistan'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Cape Verde'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Swaziland'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Oman'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Jordan'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        "     "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Ghana'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Ecuador'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Sri Lanka'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Luxembourg'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Iraq'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Nepal'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        "     "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Tajikistan'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Congo'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Latvia'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'South Africa'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Mauritania'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'India'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        "     "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Benin'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'China'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Slovenia'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Afghanistan'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "]"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        " "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "8"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ": "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "["
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Denmark'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Czech Republic'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Panama'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Belgium'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Nigeria'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Canada'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        "     "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Egypt'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Chile'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Lithuania'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Algeria'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Peru'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Togo'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Singapore'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        "     "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Liberia'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Somalia'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Austria'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Bolivia'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Bulgaria'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Pakistan'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        "     "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Serbia'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Cuba'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Georgia'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Germany'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Indonesia'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Malaysia'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        "     "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Switzerland'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Saudi Arabia'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Azerbaijan'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Burkina Faso'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Bermuda'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        "     "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Ukraine'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Armenia'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Macedonia'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Sierra Leone'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "]"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        " "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "9"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ": "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "["
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Romania'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Turkey'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Bangladesh'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Dominican Republic'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'France'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        "     "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Jamaica'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Senegal'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Korea, South'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Guinea'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Myanmar'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Italy'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Mali'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        "     "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Brazil'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Portugal'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Honduras'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Estonia'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Mexico'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "]"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        " "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "10"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ": "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "["
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'United States'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'United Arab Emirates'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Iran'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Hungary'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Moldova'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        "      "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Bahrain'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Poland'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Kuwait'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "]"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        " "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "11"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ": "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "['Russia']"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "}"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      }
     ],
     "prompt_number": 7
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "# Set phases with S-R trend analysis\n",
      "analyser.trend(min_len=9)\n",
      "# The number of countries\n",
      "len(analyser.countries)"
     ],
     "language": "python",
     "metadata": {},
     "outputs": [
      {
       "output_type": "pyout",
       "prompt_number": 8,
       "text": [
        "26"
       ]
      }
     ],
     "prompt_number": 8
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "phase_len_dict = analyser.phase_len()\n",
      "pprint(phase_len_dict, compact=True)"
     ],
     "language": "python",
     "metadata": {
      "tags": []
     },
     "outputs": [
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "{"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "9"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ": "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "["
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Romania'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Turkey'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Bangladesh'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Dominican Republic'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'France'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        "     "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Jamaica'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Senegal'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Korea, South'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Guinea'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Myanmar'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Italy'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Mali'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        "     "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Brazil'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Portugal'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Honduras'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Estonia'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Mexico'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "]"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        " "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "10"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ": "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "["
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'United States'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'United Arab Emirates'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Iran'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Hungary'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Moldova'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        "      "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Bahrain'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Poland'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Kuwait'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "]"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        " "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "11"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ": "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "['Russia']"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "}"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      }
     ],
     "prompt_number": 9
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "# Here, only show the countries which have the most phases\n",
      "countries_show = max(phase_len_dict.items(), key=lambda x: x[0])[1]\n",
      "# Show summary\n",
      "analyser.summary(countries=countries_show)"
     ],
     "language": "python",
     "metadata": {
      "tags": []
     },
     "outputs": [
      {
       "html": [
        "<div>\n",
        "<style scoped>\n",
        "    .dataframe tbody tr th:only-of-type {\n",
        "        vertical-align: middle;\n",
        "    }\n",
        "\n",
        "    .dataframe tbody tr th {\n",
        "        vertical-align: top;\n",
        "    }\n",
        "\n",
        "    .dataframe thead th {\n",
        "        text-align: right;\n",
        "    }\n",
        "</style>\n",
        "<table border=\"1\" class=\"dataframe\">\n",
        "  <thead>\n",
        "    <tr style=\"text-align: right;\">\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th>Type</th>\n",
        "      <th>Start</th>\n",
        "      <th>End</th>\n",
        "      <th>Population</th>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>Country</th>\n",
        "      <th>Phase</th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "    </tr>\n",
        "  </thead>\n",
        "  <tbody>\n",
        "    <tr>\n",
        "      <th rowspan=\"11\" valign=\"top\">Russia</th>\n",
        "      <th>1st</th>\n",
        "      <td>Past</td>\n",
        "      <td>08May2020</td>\n",
        "      <td>16May2020</td>\n",
        "      <td>330457362</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>2nd</th>\n",
        "      <td>Past</td>\n",
        "      <td>17May2020</td>\n",
        "      <td>26May2020</td>\n",
        "      <td>330457362</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>3rd</th>\n",
        "      <td>Past</td>\n",
        "      <td>27May2020</td>\n",
        "      <td>03Jun2020</td>\n",
        "      <td>330457362</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>4th</th>\n",
        "      <td>Past</td>\n",
        "      <td>04Jun2020</td>\n",
        "      <td>11Jun2020</td>\n",
        "      <td>330457362</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>5th</th>\n",
        "      <td>Past</td>\n",
        "      <td>12Jun2020</td>\n",
        "      <td>21Jun2020</td>\n",
        "      <td>330457362</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>6th</th>\n",
        "      <td>Past</td>\n",
        "      <td>22Jun2020</td>\n",
        "      <td>30Jun2020</td>\n",
        "      <td>330457362</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>7th</th>\n",
        "      <td>Past</td>\n",
        "      <td>01Jul2020</td>\n",
        "      <td>12Jul2020</td>\n",
        "      <td>330457362</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>8th</th>\n",
        "      <td>Past</td>\n",
        "      <td>13Jul2020</td>\n",
        "      <td>24Jul2020</td>\n",
        "      <td>330457362</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>9th</th>\n",
        "      <td>Past</td>\n",
        "      <td>25Jul2020</td>\n",
        "      <td>06Aug2020</td>\n",
        "      <td>330457362</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>10th</th>\n",
        "      <td>Past</td>\n",
        "      <td>07Aug2020</td>\n",
        "      <td>20Aug2020</td>\n",
        "      <td>330457362</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>11th</th>\n",
        "      <td>Past</td>\n",
        "      <td>21Aug2020</td>\n",
        "      <td>05Sep2020</td>\n",
        "      <td>330457362</td>\n",
        "    </tr>\n",
        "  </tbody>\n",
        "</table>\n",
        "</div>"
       ],
       "output_type": "pyout",
       "prompt_number": 10,
       "text": [
        "               Type      Start        End  Population\n",
        "Country Phase                                        \n",
        "Russia  1st    Past  08May2020  16May2020   330457362\n",
        "        2nd    Past  17May2020  26May2020   330457362\n",
        "        3rd    Past  27May2020  03Jun2020   330457362\n",
        "        4th    Past  04Jun2020  11Jun2020   330457362\n",
        "        5th    Past  12Jun2020  21Jun2020   330457362\n",
        "        6th    Past  22Jun2020  30Jun2020   330457362\n",
        "        7th    Past  01Jul2020  12Jul2020   330457362\n",
        "        8th    Past  13Jul2020  24Jul2020   330457362\n",
        "        9th    Past  25Jul2020  06Aug2020   330457362\n",
        "        10th   Past  07Aug2020  20Aug2020   330457362\n",
        "        11th   Past  21Aug2020  05Sep2020   330457362"
       ]
      }
     ],
     "prompt_number": 10
    },
    {
     "cell_type": "markdown",
     "metadata": {},
     "source": [
      "## Parameter estimation\n",
      "we will estimate the parameter values with SIR-derived ODE models in each country."
     ]
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "# Parameter estimation with SIR-F model\n",
      "analyser.estimate(cs.SIRF)"
     ],
     "language": "python",
     "metadata": {
      "tags": []
     },
     "outputs": [
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n",
        "<SIR-F model: parameter estimation>"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "Running optimization with 4 CPUs..."
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tBGD,  9th phase (26Aug2020 - 05Sep2020): finished  425 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tGIN,  8th phase (07Aug2020 - 18Aug2020): finished  604 trials in 0 min 15 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tJAM,  2nd phase (20May2020 - 27May2020): finished  613 trials in 0 min 15 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tTUR,  7th phase (14Jul2020 - 03Aug2020): finished  222 trials in 0 min  5 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tDOM,  8th phase (12Aug2020 - 20Aug2020): finished  432 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tFRA,  8th phase (27Jul2020 - 18Aug2020): finished  425 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tJAM,  1st phase (04May2020 - 19May2020): finished 1094 trials in 0 min 30 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tHUN,  1st phase (15Apr2020 - 22Apr2020): finished  598 trials in 0 min 15 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tMDA,  3rd phase (15Jun2020 - 24Jun2020): finished  744 trials in 0 min 20 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tKOR,  7th phase (23Jul2020 - 13Aug2020): finished 1814 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tSEN,  2nd phase (28May2020 - 09Jun2020): finished 1793 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tMEX,  5th phase (13Jul2020 - 20Jul2020): finished 1798 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tROU,  7th phase (02Aug2020 - 14Aug2020): finished  211 trials in 0 min  5 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tMEX,  3rd phase (22Jun2020 - 02Jul2020): finished  220 trials in 0 min  5 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tARE,  8th phase (12Jul2020 - 26Jul2020): finished  729 trials in 0 min 20 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tBHR,  1st phase (06May2020 - 31May2020): finished 1735 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tIRN,  5th phase (15Jun2020 - 27Jun2020): finished 1744 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tJAM,  5th phase (02Jul2020 - 18Jul2020): finished 1724 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tPOL,  6th phase (17Jul2020 - 29Jul2020): finished  395 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tITA,  4th phase (21Apr2020 - 30Apr2020): finished  190 trials in 0 min  5 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tMDA,  4th phase (25Jun2020 - 08Jul2020): finished 1730 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tMMR,  4th phase (08Jun2020 - 18Jun2020): finished 1732 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tIRN,  9th phase (04Aug2020 - 17Aug2020): finished 1735 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tBHR,  9th phase (09Aug2020 - 22Aug2020): finished 1121 trials in 0 min 35 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tFRA,  6th phase (28May2020 - 28Jun2020): finished 1696 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tGIN,  6th phase (08Jul2020 - 22Jul2020): finished 1706 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tBHR,  8th phase (27Jul2020 - 08Aug2020): finished  362 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tKOR,  4th phase (10May2020 - 05Jun2020): finished  356 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tBRA,  3rd phase (26Jun2020 - 07Jul2020): finished 1694 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tKWT,  5th phase (22Jun2020 - 03Jul2020): finished 1668 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tRUS,  6th phase (22Jun2020 - 30Jun2020): finished 1680 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tEST,  7th phase (02Jul2020 - 04Aug2020): finished 1647 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tPRT,  2nd phase (18May2020 - 31May2020): finished 1660 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tMDA,  7th phase (30Jul2020 - 06Aug2020): finished  525 trials in 0 min 15 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tMMR,  5th phase (19Jun2020 - 29Jun2020): finished  366 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tIRN,  7th phase (10Jul2020 - 21Jul2020): finished  195 trials in 0 min  5 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tUSA,  3rd phase (05Jun2020 - 24Jun2020): finished  523 trials in 0 min 15 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tROU,  2nd phase (10May2020 - 10Jun2020): finished  802 trials in 0 min 25 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tARE,  7th phase (04Jul2020 - 11Jul2020): finished 1645 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tMLI,  8th phase (04Jul2020 - 11Aug2020): finished 1610 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tGIN,  2nd phase (13May2020 - 23May2020): finished 1633 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tJAM,  7th phase (03Aug2020 - 19Aug2020): finished 1618 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tBGD,  5th phase (15Jul2020 - 25Jul2020): finished  811 trials in 0 min 25 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tIRN,  4th phase (31May2020 - 14Jun2020): finished  354 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tJAM,  6th phase (19Jul2020 - 02Aug2020): finished 1628 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tHUN,  5th phase (19May2020 - 29May2020): finished 1626 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tKWT,  6th phase (04Jul2020 - 14Jul2020): finished  183 trials in 0 min  5 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tKWT,  3rd phase (02Jun2020 - 09Jun2020): finished  195 trials in 0 min  5 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tARE,  3rd phase (25May2020 - 02Jun2020): finished  521 trials in 0 min 15 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tHUN,  6th phase (30May2020 - 26Jun2020): finished 1601 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tBRA,  1st phase (28May2020 - 12Jun2020): finished 1585 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tROU,  5th phase (15Jul2020 - 24Jul2020): finished 1606 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tKOR,  2nd phase (28Mar2020 - 04Apr2020): finished 1603 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tKWT,  4th phase (10Jun2020 - 21Jun2020): finished  189 trials in 0 min  5 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tROU,  9th phase (28Aug2020 - 05Sep2020): finished  365 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tMDA,  9th phase (18Aug2020 - 25Aug2020): finished  667 trials in 0 min 20 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tMDA,  1st phase (12May2020 - 02Jun2020): finished 1568 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tKWT, 10th phase (22Aug2020 - 05Sep2020): finished 1614 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tUSA,  7th phase (25Jul2020 - 02Aug2020): finished  165 trials in 0 min  5 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tJAM,  3rd phase (28May2020 - 17Jun2020): finished 1554 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tPOL,  3rd phase (29May2020 - 12Jun2020): finished 1559 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tKWT,  1st phase (12May2020 - 24May2020): finished 1565 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tROU,  6th phase (25Jul2020 - 01Aug2020): finished  182 trials in 0 min  5 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tUSA,  5th phase (08Jul2020 - 16Jul2020): finished  488 trials in 0 min 15 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tHUN,  2nd phase (23Apr2020 - 30Apr2020): finished  172 trials in 0 min  5 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tHND,  7th phase (04Aug2020 - 13Aug2020): finished 1554 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tBGD,  8th phase (16Aug2020 - 25Aug2020): finished  331 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tITA,  3rd phase (12Apr2020 - 20Apr2020): finished  183 trials in 0 min  5 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tSEN,  8th phase (11Aug2020 - 20Aug2020): finished  358 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tPOL, 10th phase (27Aug2020 - 05Sep2020): finished  196 trials in 0 min  5 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tMDA,  8th phase (07Aug2020 - 17Aug2020): finished  365 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tSEN,  6th phase (18Jul2020 - 29Jul2020): finished 1555 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tSEN,  1st phase (11May2020 - 27May2020): finished 1564 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tMMR,  8th phase (13Aug2020 - 23Aug2020): finished 1569 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tBRA,  7th phase (12Aug2020 - 19Aug2020): finished 1562 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tFRA,  5th phase (06May2020 - 27May2020): finished  498 trials in 0 min 15 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tMMR,  3rd phase (25May2020 - 07Jun2020): finished 1568 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tMLI,  2nd phase (03May2020 - 15May2020): finished 1558 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tIRN,  6th phase (28Jun2020 - 09Jul2020): finished  306 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tPRT,  6th phase (08Jul2020 - 19Jul2020): finished 1532 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tHUN, 10th phase (25Aug2020 - 05Sep2020): finished 1386 trials in 0 min 55 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tKOR,  8th phase (14Aug2020 - 25Aug2020): finished 1492 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tMDA,  5th phase (09Jul2020 - 20Jul2020): finished  345 trials in 0 min 15 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tDOM,  3rd phase (24Jun2020 - 07Jul2020): finished 1183 trials in 0 min 50 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tMMR,  9th phase (24Aug2020 - 05Sep2020): finished 1181 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tBHR,  5th phase (30Jun2020 - 07Jul2020): finished 1187 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tBHR,  4th phase (22Jun2020 - 29Jun2020): finished 1174 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tKOR,  5th phase (06Jun2020 - 01Jul2020): finished 1176 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tTUR,  6th phase (27Jun2020 - 13Jul2020): finished  353 trials in 0 min 15 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tGIN,  7th phase (23Jul2020 - 06Aug2020): finished 1164 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tROU,  4th phase (30Jun2020 - 14Jul2020): finished 1161 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tROU,  8th phase (15Aug2020 - 27Aug2020): finished  370 trials in 0 min 15 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tHND,  2nd phase (21Jun2020 - 29Jun2020): finished 1191 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tBGD,  1st phase (29May2020 - 14Jun2020): finished 1171 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tBHR,  7th phase (17Jul2020 - 26Jul2020): finished  240 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tSEN,  5th phase (03Jul2020 - 17Jul2020): finished  943 trials in 0 min 45 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tBGD,  4th phase (07Jul2020 - 14Jul2020): finished 1221 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tKWT,  2nd phase (25May2020 - 01Jun2020): finished 1235 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tBGD,  7th phase (06Aug2020 - 15Aug2020): finished  198 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tFRA,  4th phase (25Apr2020 - 05May2020): finished 1254 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tTUR,  1st phase (18Apr2020 - 29Apr2020): finished 1326 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tDOM,  1st phase (12May2020 - 03Jun2020): finished 1275 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tITA,  1st phase (23Mar2020 - 30Mar2020): finished 1341 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tARE,  9th phase (27Jul2020 - 17Aug2020): finished 1005 trials in 0 min 45 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tHND,  1st phase (06Jun2020 - 20Jun2020): finished 1256 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tSEN,  4th phase (21Jun2020 - 02Jul2020): finished  920 trials in 0 min 40 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tKOR,  6th phase (02Jul2020 - 22Jul2020): finished 1217 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tRUS,  4th phase (04Jun2020 - 11Jun2020): finished 1341 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tHUN,  9th phase (12Aug2020 - 24Aug2020): finished  131 trials in 0 min  5 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tITA,  6th phase (11May2020 - 22May2020): finished  303 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tTUR,  9th phase (19Aug2020 - 05Sep2020): finished  129 trials in 0 min  5 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tGIN,  3rd phase (24May2020 - 07Jun2020): finished 1237 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tPRT,  4th phase (13Jun2020 - 24Jun2020): finished  366 trials in 0 min 15 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tUSA,  9th phase (12Aug2020 - 22Aug2020): finished  129 trials in 0 min  5 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tPRT,  8th phase (07Aug2020 - 23Aug2020): finished  568 trials in 0 min 25 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tPOL,  9th phase (19Aug2020 - 26Aug2020): finished  270 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tRUS,  3rd phase (27May2020 - 03Jun2020): finished 1289 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tHND,  8th phase (14Aug2020 - 22Aug2020): finished  719 trials in 0 min 30 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tMLI,  3rd phase (16May2020 - 25May2020): finished 1214 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tMEX,  2nd phase (09Jun2020 - 21Jun2020): finished  239 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tPOL,  8th phase (09Aug2020 - 18Aug2020): finished  157 trials in 0 min  5 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tARE,  5th phase (12Jun2020 - 22Jun2020): finished 1012 trials in 0 min 45 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tARE, 10th phase (18Aug2020 - 05Sep2020): finished 1268 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tMEX,  1st phase (22May2020 - 08Jun2020): finished 1385 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tKOR,  1st phase (15Mar2020 - 27Mar2020): finished 1399 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tRUS,  7th phase (01Jul2020 - 12Jul2020): finished 1414 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tEST,  5th phase (26May2020 - 05Jun2020): finished  177 trials in 0 min  5 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tARE,  6th phase (23Jun2020 - 03Jul2020): finished  497 trials in 0 min 15 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tBGD,  3rd phase (28Jun2020 - 06Jul2020): finished  498 trials in 0 min 15 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tBHR,  2nd phase (01Jun2020 - 11Jun2020): finished 1487 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tEST,  8th phase (05Aug2020 - 24Aug2020): finished  313 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tBRA,  4th phase (08Jul2020 - 20Jul2020): finished  497 trials in 0 min 15 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tUSA,  1st phase (21Apr2020 - 10May2020): finished 1548 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tRUS,  2nd phase (17May2020 - 26May2020): finished 1567 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tPOL,  1st phase (24Apr2020 - 13May2020): finished 1554 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tIRN,  8th phase (22Jul2020 - 03Aug2020): finished  184 trials in 0 min  5 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tITA,  7th phase (23May2020 - 19Jun2020): finished  459 trials in 0 min 15 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tUSA,  8th phase (03Aug2020 - 11Aug2020): finished  875 trials in 0 min 30 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tSEN,  3rd phase (10Jun2020 - 20Jun2020): finished 1536 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tUSA,  2nd phase (11May2020 - 04Jun2020): finished 1527 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tDOM,  9th phase (21Aug2020 - 05Sep2020): finished  352 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tMMR,  1st phase (29Apr2020 - 06May2020): finished  329 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tHND,  6th phase (25Jul2020 - 03Aug2020): finished 1563 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tRUS,  9th phase (25Jul2020 - 06Aug2020): finished 1558 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tUSA, 10th phase (23Aug2020 - 05Sep2020): finished 1455 trials in 0 min 55 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tMLI,  7th phase (25Jun2020 - 03Jul2020): finished  344 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tTUR,  2nd phase (30Apr2020 - 15May2020): finished  490 trials in 0 min 15 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tTUR,  3rd phase (16May2020 - 29May2020): finished  344 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tTUR,  5th phase (14Jun2020 - 26Jun2020): finished  508 trials in 0 min 15 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tMLI,  4th phase (26May2020 - 02Jun2020): finished 1264 trials in 0 min 45 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tIRN,  2nd phase (17Apr2020 - 10May2020): finished  164 trials in 0 min  5 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tFRA,  3rd phase (13Apr2020 - 24Apr2020): finished 1553 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tMEX,  8th phase (14Aug2020 - 23Aug2020): finished  356 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tPRT,  7th phase (20Jul2020 - 06Aug2020): finished  479 trials in 0 min 15 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tROU,  3rd phase (11Jun2020 - 29Jun2020): finished 1544 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tBGD,  6th phase (26Jul2020 - 05Aug2020): finished  357 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tBRA,  5th phase (21Jul2020 - 28Jul2020): finished 1553 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tITA,  8th phase (20Jun2020 - 08Aug2020): finished  598 trials in 0 min 20 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tMMR,  7th phase (10Jul2020 - 12Aug2020): finished 1526 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tHUN,  3rd phase (01May2020 - 09May2020): finished 1564 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tMMR,  2nd phase (07May2020 - 24May2020): finished 1549 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tITA,  2nd phase (31Mar2020 - 11Apr2020): finished 1543 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tDOM,  7th phase (02Aug2020 - 11Aug2020): finished 1538 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tRUS,  1st phase (08May2020 - 16May2020): finished 1541 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tBRA,  6th phase (29Jul2020 - 11Aug2020): finished  970 trials in 0 min 35 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tGIN,  5th phase (20Jun2020 - 07Jul2020): finished 1333 trials in 0 min 50 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tUSA,  6th phase (17Jul2020 - 24Jul2020): finished  181 trials in 0 min  5 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tARE,  2nd phase (13May2020 - 24May2020): finished 1556 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tMMR,  6th phase (30Jun2020 - 09Jul2020): finished 1563 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tKWT,  9th phase (09Aug2020 - 21Aug2020): finished  336 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tJAM,  4th phase (18Jun2020 - 01Jul2020): finished 1547 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tUSA,  4th phase (25Jun2020 - 07Jul2020): finished 1539 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tGIN,  1st phase (02May2020 - 12May2020): finished 1539 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tIRN,  3rd phase (11May2020 - 30May2020): finished 1531 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tMLI,  9th phase (12Aug2020 - 05Sep2020): finished 1525 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tHUN,  7th phase (27Jun2020 - 23Jul2020): finished 1535 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tRUS,  5th phase (12Jun2020 - 21Jun2020): finished 1556 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tTUR,  8th phase (04Aug2020 - 18Aug2020): finished  634 trials in 0 min 20 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tFRA,  1st phase (25Mar2020 - 02Apr2020): finished 1560 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tARE,  4th phase (03Jun2020 - 11Jun2020): finished 1561 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tRUS, 10th phase (07Aug2020 - 20Aug2020): finished 1534 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tGIN,  4th phase (08Jun2020 - 19Jun2020): finished 1531 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tITA,  9th phase (09Aug2020 - 05Sep2020): finished 1538 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tHUN,  8th phase (24Jul2020 - 11Aug2020): finished  191 trials in 0 min  5 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tBRA,  2nd phase (13Jun2020 - 25Jun2020): finished  363 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tEST,  3rd phase (07May2020 - 15May2020): finished 1575 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tMLI,  1st phase (25Apr2020 - 02May2020): finished 1697 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tROU,  1st phase (19Apr2020 - 09May2020): finished 1709 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tMEX,  4th phase (03Jul2020 - 12Jul2020): finished 1726 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tHUN,  4th phase (10May2020 - 18May2020): finished 1692 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tEST,  1st phase (10Apr2020 - 21Apr2020): finished 1641 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tFRA,  2nd phase (03Apr2020 - 12Apr2020): finished 1641 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tSEN,  7th phase (30Jul2020 - 10Aug2020): finished  187 trials in 0 min  5 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tMEX,  7th phase (30Jul2020 - 13Aug2020): finished 1603 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tJAM,  8th phase (20Aug2020 - 27Aug2020): finished 1624 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tARE,  1st phase (28Apr2020 - 12May2020): finished 1613 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tITA,  5th phase (01May2020 - 10May2020): finished  522 trials in 0 min 15 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tEST,  2nd phase (22Apr2020 - 06May2020): finished 1659 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tRUS,  8th phase (13Jul2020 - 24Jul2020): finished 1685 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tPOL,  2nd phase (14May2020 - 28May2020): finished 1693 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tMDA,  2nd phase (03Jun2020 - 14Jun2020): finished  836 trials in 0 min 25 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tMDA,  6th phase (21Jul2020 - 29Jul2020): finished  397 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tIRN,  1st phase (29Mar2020 - 16Apr2020): finished 1699 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tPOL,  4th phase (13Jun2020 - 30Jun2020): finished 1677 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tPRT,  3rd phase (01Jun2020 - 12Jun2020): finished  553 trials in 0 min 15 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tPRT,  1st phase (01May2020 - 17May2020): finished 1712 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tPOL,  7th phase (30Jul2020 - 08Aug2020): finished  425 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tPOL,  5th phase (01Jul2020 - 16Jul2020): finished  414 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tKWT,  7th phase (15Jul2020 - 26Jul2020): finished  415 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tKOR,  3rd phase (05Apr2020 - 09May2020): finished 1856 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tDOM,  2nd phase (04Jun2020 - 23Jun2020): finished 2015 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tTUR,  4th phase (30May2020 - 13Jun2020): finished  243 trials in 0 min  5 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tFRA,  7th phase (29Jun2020 - 26Jul2020): finished 1928 trials in 0 min 55 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "Completed optimization. Total: 39 min 31 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      }
     ],
     "prompt_number": 11
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "# Show summary\n",
      "analyser.summary(countries=countries_show)"
     ],
     "language": "python",
     "metadata": {},
     "outputs": [
      {
       "html": [
        "<div>\n",
        "<style scoped>\n",
        "    .dataframe tbody tr th:only-of-type {\n",
        "        vertical-align: middle;\n",
        "    }\n",
        "\n",
        "    .dataframe tbody tr th {\n",
        "        vertical-align: top;\n",
        "    }\n",
        "\n",
        "    .dataframe thead th {\n",
        "        text-align: right;\n",
        "    }\n",
        "</style>\n",
        "<table border=\"1\" class=\"dataframe\">\n",
        "  <thead>\n",
        "    <tr style=\"text-align: right;\">\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th>Type</th>\n",
        "      <th>Start</th>\n",
        "      <th>End</th>\n",
        "      <th>Population</th>\n",
        "      <th>ODE</th>\n",
        "      <th>Rt</th>\n",
        "      <th>theta</th>\n",
        "      <th>kappa</th>\n",
        "      <th>rho</th>\n",
        "      <th>sigma</th>\n",
        "      <th>tau</th>\n",
        "      <th>alpha1 [-]</th>\n",
        "      <th>1/gamma [day]</th>\n",
        "      <th>1/alpha2 [day]</th>\n",
        "      <th>1/beta [day]</th>\n",
        "      <th>RMSLE</th>\n",
        "      <th>Trials</th>\n",
        "      <th>Runtime</th>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>Country</th>\n",
        "      <th>Phase</th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "    </tr>\n",
        "  </thead>\n",
        "  <tbody>\n",
        "    <tr>\n",
        "      <th rowspan=\"11\" valign=\"top\">Russia</th>\n",
        "      <th>1st</th>\n",
        "      <td>Past</td>\n",
        "      <td>08May2020</td>\n",
        "      <td>16May2020</td>\n",
        "      <td>330457362</td>\n",
        "      <td>SIR-F</td>\n",
        "      <td>2.42</td>\n",
        "      <td>0.00180556</td>\n",
        "      <td>9.34529e-05</td>\n",
        "      <td>0.0129733</td>\n",
        "      <td>0.0052518</td>\n",
        "      <td>360</td>\n",
        "      <td>0.002</td>\n",
        "      <td>47</td>\n",
        "      <td>2675</td>\n",
        "      <td>19</td>\n",
        "      <td>0.0592362</td>\n",
        "      <td>1541</td>\n",
        "      <td>1 min  0 sec</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>2nd</th>\n",
        "      <td>Past</td>\n",
        "      <td>17May2020</td>\n",
        "      <td>26May2020</td>\n",
        "      <td>330457362</td>\n",
        "      <td>SIR-F</td>\n",
        "      <td>1.59</td>\n",
        "      <td>0.000437993</td>\n",
        "      <td>9.8046e-05</td>\n",
        "      <td>0.00703411</td>\n",
        "      <td>0.00431289</td>\n",
        "      <td>360</td>\n",
        "      <td>0</td>\n",
        "      <td>57</td>\n",
        "      <td>2549</td>\n",
        "      <td>35</td>\n",
        "      <td>0.0869176</td>\n",
        "      <td>1567</td>\n",
        "      <td>1 min  0 sec</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>3rd</th>\n",
        "      <td>Past</td>\n",
        "      <td>27May2020</td>\n",
        "      <td>03Jun2020</td>\n",
        "      <td>330457362</td>\n",
        "      <td>SIR-F</td>\n",
        "      <td>1.02</td>\n",
        "      <td>0.000971718</td>\n",
        "      <td>0.000116602</td>\n",
        "      <td>0.00544012</td>\n",
        "      <td>0.00521537</td>\n",
        "      <td>360</td>\n",
        "      <td>0.001</td>\n",
        "      <td>47</td>\n",
        "      <td>2144</td>\n",
        "      <td>45</td>\n",
        "      <td>0.0569521</td>\n",
        "      <td>1289</td>\n",
        "      <td>1 min  0 sec</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>4th</th>\n",
        "      <td>Past</td>\n",
        "      <td>04Jun2020</td>\n",
        "      <td>11Jun2020</td>\n",
        "      <td>330457362</td>\n",
        "      <td>SIR-F</td>\n",
        "      <td>1.15</td>\n",
        "      <td>0.000826488</td>\n",
        "      <td>8.45325e-05</td>\n",
        "      <td>0.00468439</td>\n",
        "      <td>0.00397806</td>\n",
        "      <td>360</td>\n",
        "      <td>0.001</td>\n",
        "      <td>62</td>\n",
        "      <td>2957</td>\n",
        "      <td>53</td>\n",
        "      <td>0.0432778</td>\n",
        "      <td>1341</td>\n",
        "      <td>1 min  0 sec</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>5th</th>\n",
        "      <td>Past</td>\n",
        "      <td>12Jun2020</td>\n",
        "      <td>21Jun2020</td>\n",
        "      <td>330457362</td>\n",
        "      <td>SIR-F</td>\n",
        "      <td>1.14</td>\n",
        "      <td>0.000898871</td>\n",
        "      <td>7.16741e-05</td>\n",
        "      <td>0.00371867</td>\n",
        "      <td>0.00317863</td>\n",
        "      <td>360</td>\n",
        "      <td>0.001</td>\n",
        "      <td>78</td>\n",
        "      <td>3488</td>\n",
        "      <td>67</td>\n",
        "      <td>0.0514767</td>\n",
        "      <td>1556</td>\n",
        "      <td>1 min  0 sec</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>6th</th>\n",
        "      <td>Past</td>\n",
        "      <td>22Jun2020</td>\n",
        "      <td>30Jun2020</td>\n",
        "      <td>330457362</td>\n",
        "      <td>SIR-F</td>\n",
        "      <td>0.78</td>\n",
        "      <td>0.000378765</td>\n",
        "      <td>5.95639e-05</td>\n",
        "      <td>0.00280483</td>\n",
        "      <td>0.00352505</td>\n",
        "      <td>360</td>\n",
        "      <td>0</td>\n",
        "      <td>70</td>\n",
        "      <td>4197</td>\n",
        "      <td>89</td>\n",
        "      <td>0.0461045</td>\n",
        "      <td>1680</td>\n",
        "      <td>1 min  0 sec</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>7th</th>\n",
        "      <td>Past</td>\n",
        "      <td>01Jul2020</td>\n",
        "      <td>12Jul2020</td>\n",
        "      <td>330457362</td>\n",
        "      <td>SIR-F</td>\n",
        "      <td>1.02</td>\n",
        "      <td>0.0184678</td>\n",
        "      <td>9.96754e-06</td>\n",
        "      <td>0.00244199</td>\n",
        "      <td>0.002334</td>\n",
        "      <td>360</td>\n",
        "      <td>0.018</td>\n",
        "      <td>107</td>\n",
        "      <td>25081</td>\n",
        "      <td>102</td>\n",
        "      <td>0.0485799</td>\n",
        "      <td>1414</td>\n",
        "      <td>1 min  0 sec</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>8th</th>\n",
        "      <td>Past</td>\n",
        "      <td>13Jul2020</td>\n",
        "      <td>24Jul2020</td>\n",
        "      <td>330457362</td>\n",
        "      <td>SIR-F</td>\n",
        "      <td>0.67</td>\n",
        "      <td>0.000443731</td>\n",
        "      <td>5.01775e-05</td>\n",
        "      <td>0.00188472</td>\n",
        "      <td>0.00277033</td>\n",
        "      <td>360</td>\n",
        "      <td>0</td>\n",
        "      <td>90</td>\n",
        "      <td>4982</td>\n",
        "      <td>132</td>\n",
        "      <td>0.0584459</td>\n",
        "      <td>1685</td>\n",
        "      <td>1 min  0 sec</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>9th</th>\n",
        "      <td>Past</td>\n",
        "      <td>25Jul2020</td>\n",
        "      <td>06Aug2020</td>\n",
        "      <td>330457362</td>\n",
        "      <td>SIR-F</td>\n",
        "      <td>0.81</td>\n",
        "      <td>0.000449684</td>\n",
        "      <td>5.02059e-05</td>\n",
        "      <td>0.00159661</td>\n",
        "      <td>0.00192867</td>\n",
        "      <td>360</td>\n",
        "      <td>0</td>\n",
        "      <td>129</td>\n",
        "      <td>4979</td>\n",
        "      <td>156</td>\n",
        "      <td>0.0486438</td>\n",
        "      <td>1558</td>\n",
        "      <td>1 min  0 sec</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>10th</th>\n",
        "      <td>Past</td>\n",
        "      <td>07Aug2020</td>\n",
        "      <td>20Aug2020</td>\n",
        "      <td>330457362</td>\n",
        "      <td>SIR-F</td>\n",
        "      <td>0.79</td>\n",
        "      <td>0.00181815</td>\n",
        "      <td>3.12516e-05</td>\n",
        "      <td>0.00139948</td>\n",
        "      <td>0.00173119</td>\n",
        "      <td>360</td>\n",
        "      <td>0.002</td>\n",
        "      <td>144</td>\n",
        "      <td>7999</td>\n",
        "      <td>178</td>\n",
        "      <td>0.0445882</td>\n",
        "      <td>1534</td>\n",
        "      <td>1 min  0 sec</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>11th</th>\n",
        "      <td>Past</td>\n",
        "      <td>21Aug2020</td>\n",
        "      <td>05Sep2020</td>\n",
        "      <td>330457362</td>\n",
        "      <td>-</td>\n",
        "      <td>-</td>\n",
        "      <td>-</td>\n",
        "      <td>-</td>\n",
        "      <td>-</td>\n",
        "      <td>-</td>\n",
        "      <td>-</td>\n",
        "      <td>-</td>\n",
        "      <td>-</td>\n",
        "      <td>-</td>\n",
        "      <td>-</td>\n",
        "      <td>-</td>\n",
        "      <td>-</td>\n",
        "      <td>-</td>\n",
        "    </tr>\n",
        "  </tbody>\n",
        "</table>\n",
        "</div>"
       ],
       "output_type": "pyout",
       "prompt_number": 12,
       "text": [
        "               Type      Start        End  Population    ODE    Rt  \\\n",
        "Country Phase                                                        \n",
        "Russia  1st    Past  08May2020  16May2020   330457362  SIR-F  2.42   \n",
        "        2nd    Past  17May2020  26May2020   330457362  SIR-F  1.59   \n",
        "        3rd    Past  27May2020  03Jun2020   330457362  SIR-F  1.02   \n",
        "        4th    Past  04Jun2020  11Jun2020   330457362  SIR-F  1.15   \n",
        "        5th    Past  12Jun2020  21Jun2020   330457362  SIR-F  1.14   \n",
        "        6th    Past  22Jun2020  30Jun2020   330457362  SIR-F  0.78   \n",
        "        7th    Past  01Jul2020  12Jul2020   330457362  SIR-F  1.02   \n",
        "        8th    Past  13Jul2020  24Jul2020   330457362  SIR-F  0.67   \n",
        "        9th    Past  25Jul2020  06Aug2020   330457362  SIR-F  0.81   \n",
        "        10th   Past  07Aug2020  20Aug2020   330457362  SIR-F  0.79   \n",
        "        11th   Past  21Aug2020  05Sep2020   330457362      -     -   \n",
        "\n",
        "                     theta        kappa         rho       sigma  tau  \\\n",
        "Country Phase                                                          \n",
        "Russia  1st     0.00180556  9.34529e-05   0.0129733   0.0052518  360   \n",
        "        2nd    0.000437993   9.8046e-05  0.00703411  0.00431289  360   \n",
        "        3rd    0.000971718  0.000116602  0.00544012  0.00521537  360   \n",
        "        4th    0.000826488  8.45325e-05  0.00468439  0.00397806  360   \n",
        "        5th    0.000898871  7.16741e-05  0.00371867  0.00317863  360   \n",
        "        6th    0.000378765  5.95639e-05  0.00280483  0.00352505  360   \n",
        "        7th      0.0184678  9.96754e-06  0.00244199    0.002334  360   \n",
        "        8th    0.000443731  5.01775e-05  0.00188472  0.00277033  360   \n",
        "        9th    0.000449684  5.02059e-05  0.00159661  0.00192867  360   \n",
        "        10th    0.00181815  3.12516e-05  0.00139948  0.00173119  360   \n",
        "        11th             -            -           -           -    -   \n",
        "\n",
        "              alpha1 [-] 1/gamma [day] 1/alpha2 [day] 1/beta [day]      RMSLE  \\\n",
        "Country Phase                                                                   \n",
        "Russia  1st        0.002            47           2675           19  0.0592362   \n",
        "        2nd            0            57           2549           35  0.0869176   \n",
        "        3rd        0.001            47           2144           45  0.0569521   \n",
        "        4th        0.001            62           2957           53  0.0432778   \n",
        "        5th        0.001            78           3488           67  0.0514767   \n",
        "        6th            0            70           4197           89  0.0461045   \n",
        "        7th        0.018           107          25081          102  0.0485799   \n",
        "        8th            0            90           4982          132  0.0584459   \n",
        "        9th            0           129           4979          156  0.0486438   \n",
        "        10th       0.002           144           7999          178  0.0445882   \n",
        "        11th           -             -              -            -          -   \n",
        "\n",
        "              Trials       Runtime  \n",
        "Country Phase                       \n",
        "Russia  1st     1541  1 min  0 sec  \n",
        "        2nd     1567  1 min  0 sec  \n",
        "        3rd     1289  1 min  0 sec  \n",
        "        4th     1341  1 min  0 sec  \n",
        "        5th     1556  1 min  0 sec  \n",
        "        6th     1680  1 min  0 sec  \n",
        "        7th     1414  1 min  0 sec  \n",
        "        8th     1685  1 min  0 sec  \n",
        "        9th     1558  1 min  0 sec  \n",
        "        10th    1534  1 min  0 sec  \n",
        "        11th       -             -  "
       ]
      }
     ],
     "prompt_number": 12
    },
    {
     "cell_type": "markdown",
     "metadata": {},
     "source": [
      "## Compare the history of parameters\n",
      "Here, compare the history of parameter values if countries."
     ]
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "# All parameter/day parameter/Rt/OxCGRT\n",
      "analyser.track().head()"
     ],
     "language": "python",
     "metadata": {},
     "outputs": [
      {
       "html": [
        "<div>\n",
        "<style scoped>\n",
        "    .dataframe tbody tr th:only-of-type {\n",
        "        vertical-align: middle;\n",
        "    }\n",
        "\n",
        "    .dataframe tbody tr th {\n",
        "        vertical-align: top;\n",
        "    }\n",
        "\n",
        "    .dataframe thead th {\n",
        "        text-align: right;\n",
        "    }\n",
        "</style>\n",
        "<table border=\"1\" class=\"dataframe\">\n",
        "  <thead>\n",
        "    <tr style=\"text-align: right;\">\n",
        "      <th></th>\n",
        "      <th>Date</th>\n",
        "      <th>Country</th>\n",
        "      <th>theta</th>\n",
        "      <th>kappa</th>\n",
        "      <th>rho</th>\n",
        "      <th>sigma</th>\n",
        "      <th>alpha1 [-]</th>\n",
        "      <th>1/alpha2 [day]</th>\n",
        "      <th>1/beta [day]</th>\n",
        "      <th>1/gamma [day]</th>\n",
        "      <th>...</th>\n",
        "      <th>Cancel_events</th>\n",
        "      <th>Gatherings_restrictions</th>\n",
        "      <th>Transport_closing</th>\n",
        "      <th>Stay_home_restrictions</th>\n",
        "      <th>Internal_movement_restrictions</th>\n",
        "      <th>International_movement_restrictions</th>\n",
        "      <th>Information_campaigns</th>\n",
        "      <th>Testing_policy</th>\n",
        "      <th>Contact_tracing</th>\n",
        "      <th>Stringency_index</th>\n",
        "    </tr>\n",
        "  </thead>\n",
        "  <tbody>\n",
        "    <tr>\n",
        "      <th>0</th>\n",
        "      <td>2020-04-21</td>\n",
        "      <td>United States</td>\n",
        "      <td>0.031454</td>\n",
        "      <td>0.000327222</td>\n",
        "      <td>0.00856689</td>\n",
        "      <td>0.00229815</td>\n",
        "      <td>0.031</td>\n",
        "      <td>764</td>\n",
        "      <td>29</td>\n",
        "      <td>108</td>\n",
        "      <td>...</td>\n",
        "      <td>2</td>\n",
        "      <td>4</td>\n",
        "      <td>1</td>\n",
        "      <td>2</td>\n",
        "      <td>2</td>\n",
        "      <td>3</td>\n",
        "      <td>2</td>\n",
        "      <td>3</td>\n",
        "      <td>1</td>\n",
        "      <td>72.69</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>1</th>\n",
        "      <td>2020-04-21</td>\n",
        "      <td>United States</td>\n",
        "      <td>0.031454</td>\n",
        "      <td>0.000327222</td>\n",
        "      <td>0.00856689</td>\n",
        "      <td>0.00229815</td>\n",
        "      <td>0.031</td>\n",
        "      <td>764</td>\n",
        "      <td>29</td>\n",
        "      <td>108</td>\n",
        "      <td>...</td>\n",
        "      <td>2</td>\n",
        "      <td>4</td>\n",
        "      <td>1</td>\n",
        "      <td>2</td>\n",
        "      <td>2</td>\n",
        "      <td>3</td>\n",
        "      <td>2</td>\n",
        "      <td>3</td>\n",
        "      <td>1</td>\n",
        "      <td>72.69</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>2</th>\n",
        "      <td>2020-04-21</td>\n",
        "      <td>United States</td>\n",
        "      <td>0.031454</td>\n",
        "      <td>0.000327222</td>\n",
        "      <td>0.00856689</td>\n",
        "      <td>0.00229815</td>\n",
        "      <td>0.031</td>\n",
        "      <td>764</td>\n",
        "      <td>29</td>\n",
        "      <td>108</td>\n",
        "      <td>...</td>\n",
        "      <td>2</td>\n",
        "      <td>4</td>\n",
        "      <td>1</td>\n",
        "      <td>2</td>\n",
        "      <td>2</td>\n",
        "      <td>3</td>\n",
        "      <td>2</td>\n",
        "      <td>3</td>\n",
        "      <td>1</td>\n",
        "      <td>72.69</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>3</th>\n",
        "      <td>2020-04-21</td>\n",
        "      <td>United States</td>\n",
        "      <td>0.031454</td>\n",
        "      <td>0.000327222</td>\n",
        "      <td>0.00856689</td>\n",
        "      <td>0.00229815</td>\n",
        "      <td>0.031</td>\n",
        "      <td>764</td>\n",
        "      <td>29</td>\n",
        "      <td>108</td>\n",
        "      <td>...</td>\n",
        "      <td>2</td>\n",
        "      <td>4</td>\n",
        "      <td>1</td>\n",
        "      <td>2</td>\n",
        "      <td>2</td>\n",
        "      <td>3</td>\n",
        "      <td>2</td>\n",
        "      <td>3</td>\n",
        "      <td>1</td>\n",
        "      <td>72.69</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>4</th>\n",
        "      <td>2020-04-21</td>\n",
        "      <td>United States</td>\n",
        "      <td>0.031454</td>\n",
        "      <td>0.000327222</td>\n",
        "      <td>0.00856689</td>\n",
        "      <td>0.00229815</td>\n",
        "      <td>0.031</td>\n",
        "      <td>764</td>\n",
        "      <td>29</td>\n",
        "      <td>108</td>\n",
        "      <td>...</td>\n",
        "      <td>2</td>\n",
        "      <td>4</td>\n",
        "      <td>1</td>\n",
        "      <td>2</td>\n",
        "      <td>2</td>\n",
        "      <td>3</td>\n",
        "      <td>2</td>\n",
        "      <td>3</td>\n",
        "      <td>1</td>\n",
        "      <td>72.69</td>\n",
        "    </tr>\n",
        "  </tbody>\n",
        "</table>\n",
        "<p>5 rows \u00d7 23 columns</p>\n",
        "</div>"
       ],
       "output_type": "pyout",
       "prompt_number": 13,
       "text": [
        "        Date        Country     theta        kappa         rho       sigma  \\\n",
        "0 2020-04-21  United States  0.031454  0.000327222  0.00856689  0.00229815   \n",
        "1 2020-04-21  United States  0.031454  0.000327222  0.00856689  0.00229815   \n",
        "2 2020-04-21  United States  0.031454  0.000327222  0.00856689  0.00229815   \n",
        "3 2020-04-21  United States  0.031454  0.000327222  0.00856689  0.00229815   \n",
        "4 2020-04-21  United States  0.031454  0.000327222  0.00856689  0.00229815   \n",
        "\n",
        "  alpha1 [-] 1/alpha2 [day] 1/beta [day] 1/gamma [day]  ... Cancel_events  \\\n",
        "0      0.031            764           29           108  ...             2   \n",
        "1      0.031            764           29           108  ...             2   \n",
        "2      0.031            764           29           108  ...             2   \n",
        "3      0.031            764           29           108  ...             2   \n",
        "4      0.031            764           29           108  ...             2   \n",
        "\n",
        "   Gatherings_restrictions  Transport_closing  Stay_home_restrictions  \\\n",
        "0                        4                  1                       2   \n",
        "1                        4                  1                       2   \n",
        "2                        4                  1                       2   \n",
        "3                        4                  1                       2   \n",
        "4                        4                  1                       2   \n",
        "\n",
        "   Internal_movement_restrictions  International_movement_restrictions  \\\n",
        "0                               2                                    3   \n",
        "1                               2                                    3   \n",
        "2                               2                                    3   \n",
        "3                               2                                    3   \n",
        "4                               2                                    3   \n",
        "\n",
        "   Information_campaigns  Testing_policy  Contact_tracing  Stringency_index  \n",
        "0                      2               3                1             72.69  \n",
        "1                      2               3                1             72.69  \n",
        "2                      2               3                1             72.69  \n",
        "3                      2               3                1             72.69  \n",
        "4                      2               3                1             72.69  \n",
        "\n",
        "[5 rows x 23 columns]"
       ]
      }
     ],
     "prompt_number": 13
    },
    {
     "cell_type": "heading",
     "level": 3,
     "metadata": {},
     "source": [
      "$Rt$: Reprodcution number $\\mathrm{[-]}$"
     ]
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "analyser.param_history(\"Rt\", roll_window=None).tail()"
     ],
     "language": "python",
     "metadata": {},
     "outputs": [
      {
       "output_type": "display_data",
       "png": "\n",
       "text": [
        "<Figure size 648x432 with 1 Axes>"
       ]
      },
      {
       "html": [
        "<div>\n",
        "<style scoped>\n",
        "    .dataframe tbody tr th:only-of-type {\n",
        "        vertical-align: middle;\n",
        "    }\n",
        "\n",
        "    .dataframe tbody tr th {\n",
        "        vertical-align: top;\n",
        "    }\n",
        "\n",
        "    .dataframe thead th {\n",
        "        text-align: right;\n",
        "    }\n",
        "</style>\n",
        "<table border=\"1\" class=\"dataframe\">\n",
        "  <thead>\n",
        "    <tr style=\"text-align: right;\">\n",
        "      <th>Country</th>\n",
        "      <th>Bahrain</th>\n",
        "      <th>Bangladesh</th>\n",
        "      <th>Brazil</th>\n",
        "      <th>Dominican Republic</th>\n",
        "      <th>Estonia</th>\n",
        "      <th>France</th>\n",
        "      <th>Guinea</th>\n",
        "      <th>Honduras</th>\n",
        "      <th>Hungary</th>\n",
        "      <th>Iran</th>\n",
        "      <th>...</th>\n",
        "      <th>Moldova</th>\n",
        "      <th>Myanmar</th>\n",
        "      <th>Poland</th>\n",
        "      <th>Portugal</th>\n",
        "      <th>Romania</th>\n",
        "      <th>Russia</th>\n",
        "      <th>Senegal</th>\n",
        "      <th>Turkey</th>\n",
        "      <th>United Arab Emirates</th>\n",
        "      <th>United States</th>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>Date</th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "    </tr>\n",
        "  </thead>\n",
        "  <tbody>\n",
        "    <tr>\n",
        "      <th>2020-09-01</th>\n",
        "      <td>1.19</td>\n",
        "      <td>0.76</td>\n",
        "      <td>0.99</td>\n",
        "      <td>0.45</td>\n",
        "      <td>2.39</td>\n",
        "      <td>8.78</td>\n",
        "      <td>1.31</td>\n",
        "      <td>3.62</td>\n",
        "      <td>11.44</td>\n",
        "      <td>1.03</td>\n",
        "      <td>...</td>\n",
        "      <td>2.23</td>\n",
        "      <td>91.0</td>\n",
        "      <td>0.8</td>\n",
        "      <td>1.19</td>\n",
        "      <td>2.93</td>\n",
        "      <td>0.79</td>\n",
        "      <td>2.18</td>\n",
        "      <td>1.49</td>\n",
        "      <td>1.66</td>\n",
        "      <td>1.77</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>2020-09-02</th>\n",
        "      <td>1.19</td>\n",
        "      <td>0.76</td>\n",
        "      <td>0.99</td>\n",
        "      <td>0.45</td>\n",
        "      <td>2.39</td>\n",
        "      <td>8.78</td>\n",
        "      <td>1.31</td>\n",
        "      <td>3.62</td>\n",
        "      <td>11.44</td>\n",
        "      <td>1.03</td>\n",
        "      <td>...</td>\n",
        "      <td>2.23</td>\n",
        "      <td>91.0</td>\n",
        "      <td>0.8</td>\n",
        "      <td>1.19</td>\n",
        "      <td>2.93</td>\n",
        "      <td>0.79</td>\n",
        "      <td>2.18</td>\n",
        "      <td>1.49</td>\n",
        "      <td>1.66</td>\n",
        "      <td>1.77</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>2020-09-03</th>\n",
        "      <td>1.19</td>\n",
        "      <td>0.76</td>\n",
        "      <td>0.99</td>\n",
        "      <td>0.45</td>\n",
        "      <td>2.39</td>\n",
        "      <td>8.78</td>\n",
        "      <td>1.31</td>\n",
        "      <td>3.62</td>\n",
        "      <td>11.44</td>\n",
        "      <td>1.03</td>\n",
        "      <td>...</td>\n",
        "      <td>2.23</td>\n",
        "      <td>91.0</td>\n",
        "      <td>0.8</td>\n",
        "      <td>1.19</td>\n",
        "      <td>2.93</td>\n",
        "      <td>0.79</td>\n",
        "      <td>2.18</td>\n",
        "      <td>1.49</td>\n",
        "      <td>1.66</td>\n",
        "      <td>1.77</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>2020-09-04</th>\n",
        "      <td>1.19</td>\n",
        "      <td>0.76</td>\n",
        "      <td>0.99</td>\n",
        "      <td>0.45</td>\n",
        "      <td>2.39</td>\n",
        "      <td>8.78</td>\n",
        "      <td>1.31</td>\n",
        "      <td>3.62</td>\n",
        "      <td>11.44</td>\n",
        "      <td>1.03</td>\n",
        "      <td>...</td>\n",
        "      <td>2.23</td>\n",
        "      <td>91.0</td>\n",
        "      <td>0.8</td>\n",
        "      <td>1.19</td>\n",
        "      <td>2.93</td>\n",
        "      <td>0.79</td>\n",
        "      <td>2.18</td>\n",
        "      <td>1.49</td>\n",
        "      <td>1.66</td>\n",
        "      <td>1.77</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>2020-09-05</th>\n",
        "      <td>1.19</td>\n",
        "      <td>0.76</td>\n",
        "      <td>0.99</td>\n",
        "      <td>0.45</td>\n",
        "      <td>2.39</td>\n",
        "      <td>8.78</td>\n",
        "      <td>1.31</td>\n",
        "      <td>3.62</td>\n",
        "      <td>11.44</td>\n",
        "      <td>1.03</td>\n",
        "      <td>...</td>\n",
        "      <td>2.23</td>\n",
        "      <td>91.0</td>\n",
        "      <td>0.8</td>\n",
        "      <td>1.19</td>\n",
        "      <td>2.93</td>\n",
        "      <td>0.79</td>\n",
        "      <td>2.18</td>\n",
        "      <td>1.49</td>\n",
        "      <td>1.66</td>\n",
        "      <td>1.77</td>\n",
        "    </tr>\n",
        "  </tbody>\n",
        "</table>\n",
        "<p>5 rows \u00d7 26 columns</p>\n",
        "</div>"
       ],
       "output_type": "pyout",
       "prompt_number": 14,
       "text": [
        "Country     Bahrain  Bangladesh  Brazil  Dominican Republic  Estonia  France  \\\n",
        "Date                                                                           \n",
        "2020-09-01     1.19        0.76    0.99                0.45     2.39    8.78   \n",
        "2020-09-02     1.19        0.76    0.99                0.45     2.39    8.78   \n",
        "2020-09-03     1.19        0.76    0.99                0.45     2.39    8.78   \n",
        "2020-09-04     1.19        0.76    0.99                0.45     2.39    8.78   \n",
        "2020-09-05     1.19        0.76    0.99                0.45     2.39    8.78   \n",
        "\n",
        "Country     Guinea  Honduras  Hungary  Iran  ...  Moldova  Myanmar  Poland  \\\n",
        "Date                                         ...                             \n",
        "2020-09-01    1.31      3.62    11.44  1.03  ...     2.23     91.0     0.8   \n",
        "2020-09-02    1.31      3.62    11.44  1.03  ...     2.23     91.0     0.8   \n",
        "2020-09-03    1.31      3.62    11.44  1.03  ...     2.23     91.0     0.8   \n",
        "2020-09-04    1.31      3.62    11.44  1.03  ...     2.23     91.0     0.8   \n",
        "2020-09-05    1.31      3.62    11.44  1.03  ...     2.23     91.0     0.8   \n",
        "\n",
        "Country     Portugal  Romania  Russia  Senegal  Turkey  United Arab Emirates  \\\n",
        "Date                                                                           \n",
        "2020-09-01      1.19     2.93    0.79     2.18    1.49                  1.66   \n",
        "2020-09-02      1.19     2.93    0.79     2.18    1.49                  1.66   \n",
        "2020-09-03      1.19     2.93    0.79     2.18    1.49                  1.66   \n",
        "2020-09-04      1.19     2.93    0.79     2.18    1.49                  1.66   \n",
        "2020-09-05      1.19     2.93    0.79     2.18    1.49                  1.66   \n",
        "\n",
        "Country     United States  \n",
        "Date                       \n",
        "2020-09-01           1.77  \n",
        "2020-09-02           1.77  \n",
        "2020-09-03           1.77  \n",
        "2020-09-04           1.77  \n",
        "2020-09-05           1.77  \n",
        "\n",
        "[5 rows x 26 columns]"
       ]
      }
     ],
     "prompt_number": 14
    },
    {
     "cell_type": "heading",
     "level": 3,
     "metadata": {},
     "source": [
      "$\\rho$: Effective contact rate $\\mathrm{[-]}$"
     ]
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "analyser.param_history(\"rho\", roll_window=None).tail()"
     ],
     "language": "python",
     "metadata": {},
     "outputs": [
      {
       "output_type": "display_data",
       "png": "\n",
       "text": [
        "<Figure size 648x432 with 1 Axes>"
       ]
      },
      {
       "html": [
        "<div>\n",
        "<style scoped>\n",
        "    .dataframe tbody tr th:only-of-type {\n",
        "        vertical-align: middle;\n",
        "    }\n",
        "\n",
        "    .dataframe tbody tr th {\n",
        "        vertical-align: top;\n",
        "    }\n",
        "\n",
        "    .dataframe thead th {\n",
        "        text-align: right;\n",
        "    }\n",
        "</style>\n",
        "<table border=\"1\" class=\"dataframe\">\n",
        "  <thead>\n",
        "    <tr style=\"text-align: right;\">\n",
        "      <th>Country</th>\n",
        "      <th>Bahrain</th>\n",
        "      <th>Bangladesh</th>\n",
        "      <th>Brazil</th>\n",
        "      <th>Dominican Republic</th>\n",
        "      <th>Estonia</th>\n",
        "      <th>France</th>\n",
        "      <th>Guinea</th>\n",
        "      <th>Honduras</th>\n",
        "      <th>Hungary</th>\n",
        "      <th>Iran</th>\n",
        "      <th>...</th>\n",
        "      <th>Moldova</th>\n",
        "      <th>Myanmar</th>\n",
        "      <th>Poland</th>\n",
        "      <th>Portugal</th>\n",
        "      <th>Romania</th>\n",
        "      <th>Russia</th>\n",
        "      <th>Senegal</th>\n",
        "      <th>Turkey</th>\n",
        "      <th>United Arab Emirates</th>\n",
        "      <th>United States</th>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>Date</th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "    </tr>\n",
        "  </thead>\n",
        "  <tbody>\n",
        "    <tr>\n",
        "      <th>2020-09-01</th>\n",
        "      <td>0.029058</td>\n",
        "      <td>0.005196</td>\n",
        "      <td>0.017548</td>\n",
        "      <td>0.003881</td>\n",
        "      <td>0.013534</td>\n",
        "      <td>0.00494</td>\n",
        "      <td>0.019583</td>\n",
        "      <td>0.003309</td>\n",
        "      <td>0.028945</td>\n",
        "      <td>0.023017</td>\n",
        "      <td>...</td>\n",
        "      <td>0.014642</td>\n",
        "      <td>0.045078</td>\n",
        "      <td>0.00785</td>\n",
        "      <td>0.004017</td>\n",
        "      <td>0.005503</td>\n",
        "      <td>0.001399</td>\n",
        "      <td>0.007577</td>\n",
        "      <td>0.021749</td>\n",
        "      <td>0.013562</td>\n",
        "      <td>0.002881</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>2020-09-02</th>\n",
        "      <td>0.029058</td>\n",
        "      <td>0.005196</td>\n",
        "      <td>0.017548</td>\n",
        "      <td>0.003881</td>\n",
        "      <td>0.013534</td>\n",
        "      <td>0.00494</td>\n",
        "      <td>0.019583</td>\n",
        "      <td>0.003309</td>\n",
        "      <td>0.028945</td>\n",
        "      <td>0.023017</td>\n",
        "      <td>...</td>\n",
        "      <td>0.014642</td>\n",
        "      <td>0.045078</td>\n",
        "      <td>0.00785</td>\n",
        "      <td>0.004017</td>\n",
        "      <td>0.005503</td>\n",
        "      <td>0.001399</td>\n",
        "      <td>0.007577</td>\n",
        "      <td>0.021749</td>\n",
        "      <td>0.013562</td>\n",
        "      <td>0.002881</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>2020-09-03</th>\n",
        "      <td>0.029058</td>\n",
        "      <td>0.005196</td>\n",
        "      <td>0.017548</td>\n",
        "      <td>0.003881</td>\n",
        "      <td>0.013534</td>\n",
        "      <td>0.00494</td>\n",
        "      <td>0.019583</td>\n",
        "      <td>0.003309</td>\n",
        "      <td>0.028945</td>\n",
        "      <td>0.023017</td>\n",
        "      <td>...</td>\n",
        "      <td>0.014642</td>\n",
        "      <td>0.045078</td>\n",
        "      <td>0.00785</td>\n",
        "      <td>0.004017</td>\n",
        "      <td>0.005503</td>\n",
        "      <td>0.001399</td>\n",
        "      <td>0.007577</td>\n",
        "      <td>0.021749</td>\n",
        "      <td>0.013562</td>\n",
        "      <td>0.002881</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>2020-09-04</th>\n",
        "      <td>0.029058</td>\n",
        "      <td>0.005196</td>\n",
        "      <td>0.017548</td>\n",
        "      <td>0.003881</td>\n",
        "      <td>0.013534</td>\n",
        "      <td>0.00494</td>\n",
        "      <td>0.019583</td>\n",
        "      <td>0.003309</td>\n",
        "      <td>0.028945</td>\n",
        "      <td>0.023017</td>\n",
        "      <td>...</td>\n",
        "      <td>0.014642</td>\n",
        "      <td>0.045078</td>\n",
        "      <td>0.00785</td>\n",
        "      <td>0.004017</td>\n",
        "      <td>0.005503</td>\n",
        "      <td>0.001399</td>\n",
        "      <td>0.007577</td>\n",
        "      <td>0.021749</td>\n",
        "      <td>0.013562</td>\n",
        "      <td>0.002881</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>2020-09-05</th>\n",
        "      <td>0.029058</td>\n",
        "      <td>0.005196</td>\n",
        "      <td>0.017548</td>\n",
        "      <td>0.003881</td>\n",
        "      <td>0.013534</td>\n",
        "      <td>0.00494</td>\n",
        "      <td>0.019583</td>\n",
        "      <td>0.003309</td>\n",
        "      <td>0.028945</td>\n",
        "      <td>0.023017</td>\n",
        "      <td>...</td>\n",
        "      <td>0.014642</td>\n",
        "      <td>0.045078</td>\n",
        "      <td>0.00785</td>\n",
        "      <td>0.004017</td>\n",
        "      <td>0.005503</td>\n",
        "      <td>0.001399</td>\n",
        "      <td>0.007577</td>\n",
        "      <td>0.021749</td>\n",
        "      <td>0.013562</td>\n",
        "      <td>0.002881</td>\n",
        "    </tr>\n",
        "  </tbody>\n",
        "</table>\n",
        "<p>5 rows \u00d7 26 columns</p>\n",
        "</div>"
       ],
       "output_type": "pyout",
       "prompt_number": 15,
       "text": [
        "Country      Bahrain  Bangladesh    Brazil  Dominican Republic   Estonia  \\\n",
        "Date                                                                       \n",
        "2020-09-01  0.029058    0.005196  0.017548            0.003881  0.013534   \n",
        "2020-09-02  0.029058    0.005196  0.017548            0.003881  0.013534   \n",
        "2020-09-03  0.029058    0.005196  0.017548            0.003881  0.013534   \n",
        "2020-09-04  0.029058    0.005196  0.017548            0.003881  0.013534   \n",
        "2020-09-05  0.029058    0.005196  0.017548            0.003881  0.013534   \n",
        "\n",
        "Country      France    Guinea  Honduras   Hungary      Iran  ...   Moldova  \\\n",
        "Date                                                         ...             \n",
        "2020-09-01  0.00494  0.019583  0.003309  0.028945  0.023017  ...  0.014642   \n",
        "2020-09-02  0.00494  0.019583  0.003309  0.028945  0.023017  ...  0.014642   \n",
        "2020-09-03  0.00494  0.019583  0.003309  0.028945  0.023017  ...  0.014642   \n",
        "2020-09-04  0.00494  0.019583  0.003309  0.028945  0.023017  ...  0.014642   \n",
        "2020-09-05  0.00494  0.019583  0.003309  0.028945  0.023017  ...  0.014642   \n",
        "\n",
        "Country      Myanmar   Poland  Portugal   Romania    Russia   Senegal  \\\n",
        "Date                                                                    \n",
        "2020-09-01  0.045078  0.00785  0.004017  0.005503  0.001399  0.007577   \n",
        "2020-09-02  0.045078  0.00785  0.004017  0.005503  0.001399  0.007577   \n",
        "2020-09-03  0.045078  0.00785  0.004017  0.005503  0.001399  0.007577   \n",
        "2020-09-04  0.045078  0.00785  0.004017  0.005503  0.001399  0.007577   \n",
        "2020-09-05  0.045078  0.00785  0.004017  0.005503  0.001399  0.007577   \n",
        "\n",
        "Country       Turkey  United Arab Emirates  United States  \n",
        "Date                                                       \n",
        "2020-09-01  0.021749              0.013562       0.002881  \n",
        "2020-09-02  0.021749              0.013562       0.002881  \n",
        "2020-09-03  0.021749              0.013562       0.002881  \n",
        "2020-09-04  0.021749              0.013562       0.002881  \n",
        "2020-09-05  0.021749              0.013562       0.002881  \n",
        "\n",
        "[5 rows x 26 columns]"
       ]
      }
     ],
     "prompt_number": 15
    },
    {
     "cell_type": "heading",
     "level": 3,
     "metadata": {},
     "source": [
      "$\\sigma$: Recovery rate $\\mathrm{[-]}$"
     ]
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "analyser.param_history(\"sigma\", roll_window=None).tail()"
     ],
     "language": "python",
     "metadata": {},
     "outputs": [
      {
       "output_type": "display_data",
       "png": "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\n",
       "text": [
        "<Figure size 648x432 with 1 Axes>"
       ]
      },
      {
       "html": [
        "<div>\n",
        "<style scoped>\n",
        "    .dataframe tbody tr th:only-of-type {\n",
        "        vertical-align: middle;\n",
        "    }\n",
        "\n",
        "    .dataframe tbody tr th {\n",
        "        vertical-align: top;\n",
        "    }\n",
        "\n",
        "    .dataframe thead th {\n",
        "        text-align: right;\n",
        "    }\n",
        "</style>\n",
        "<table border=\"1\" class=\"dataframe\">\n",
        "  <thead>\n",
        "    <tr style=\"text-align: right;\">\n",
        "      <th>Country</th>\n",
        "      <th>Bahrain</th>\n",
        "      <th>Bangladesh</th>\n",
        "      <th>Brazil</th>\n",
        "      <th>Dominican Republic</th>\n",
        "      <th>Estonia</th>\n",
        "      <th>France</th>\n",
        "      <th>Guinea</th>\n",
        "      <th>Honduras</th>\n",
        "      <th>Hungary</th>\n",
        "      <th>Iran</th>\n",
        "      <th>...</th>\n",
        "      <th>Moldova</th>\n",
        "      <th>Myanmar</th>\n",
        "      <th>Poland</th>\n",
        "      <th>Portugal</th>\n",
        "      <th>Romania</th>\n",
        "      <th>Russia</th>\n",
        "      <th>Senegal</th>\n",
        "      <th>Turkey</th>\n",
        "      <th>United Arab Emirates</th>\n",
        "      <th>United States</th>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>Date</th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "    </tr>\n",
        "  </thead>\n",
        "  <tbody>\n",
        "    <tr>\n",
        "      <th>2020-09-01</th>\n",
        "      <td>0.024314</td>\n",
        "      <td>0.006726</td>\n",
        "      <td>0.017357</td>\n",
        "      <td>0.008419</td>\n",
        "      <td>0.005657</td>\n",
        "      <td>0.000483</td>\n",
        "      <td>0.014891</td>\n",
        "      <td>0.000854</td>\n",
        "      <td>0.002458</td>\n",
        "      <td>0.020613</td>\n",
        "      <td>...</td>\n",
        "      <td>0.006374</td>\n",
        "      <td>0.000339</td>\n",
        "      <td>0.009739</td>\n",
        "      <td>0.00329</td>\n",
        "      <td>0.001649</td>\n",
        "      <td>0.001731</td>\n",
        "      <td>0.003366</td>\n",
        "      <td>0.014287</td>\n",
        "      <td>0.008136</td>\n",
        "      <td>0.001581</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>2020-09-02</th>\n",
        "      <td>0.024314</td>\n",
        "      <td>0.006726</td>\n",
        "      <td>0.017357</td>\n",
        "      <td>0.008419</td>\n",
        "      <td>0.005657</td>\n",
        "      <td>0.000483</td>\n",
        "      <td>0.014891</td>\n",
        "      <td>0.000854</td>\n",
        "      <td>0.002458</td>\n",
        "      <td>0.020613</td>\n",
        "      <td>...</td>\n",
        "      <td>0.006374</td>\n",
        "      <td>0.000339</td>\n",
        "      <td>0.009739</td>\n",
        "      <td>0.00329</td>\n",
        "      <td>0.001649</td>\n",
        "      <td>0.001731</td>\n",
        "      <td>0.003366</td>\n",
        "      <td>0.014287</td>\n",
        "      <td>0.008136</td>\n",
        "      <td>0.001581</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>2020-09-03</th>\n",
        "      <td>0.024314</td>\n",
        "      <td>0.006726</td>\n",
        "      <td>0.017357</td>\n",
        "      <td>0.008419</td>\n",
        "      <td>0.005657</td>\n",
        "      <td>0.000483</td>\n",
        "      <td>0.014891</td>\n",
        "      <td>0.000854</td>\n",
        "      <td>0.002458</td>\n",
        "      <td>0.020613</td>\n",
        "      <td>...</td>\n",
        "      <td>0.006374</td>\n",
        "      <td>0.000339</td>\n",
        "      <td>0.009739</td>\n",
        "      <td>0.00329</td>\n",
        "      <td>0.001649</td>\n",
        "      <td>0.001731</td>\n",
        "      <td>0.003366</td>\n",
        "      <td>0.014287</td>\n",
        "      <td>0.008136</td>\n",
        "      <td>0.001581</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>2020-09-04</th>\n",
        "      <td>0.024314</td>\n",
        "      <td>0.006726</td>\n",
        "      <td>0.017357</td>\n",
        "      <td>0.008419</td>\n",
        "      <td>0.005657</td>\n",
        "      <td>0.000483</td>\n",
        "      <td>0.014891</td>\n",
        "      <td>0.000854</td>\n",
        "      <td>0.002458</td>\n",
        "      <td>0.020613</td>\n",
        "      <td>...</td>\n",
        "      <td>0.006374</td>\n",
        "      <td>0.000339</td>\n",
        "      <td>0.009739</td>\n",
        "      <td>0.00329</td>\n",
        "      <td>0.001649</td>\n",
        "      <td>0.001731</td>\n",
        "      <td>0.003366</td>\n",
        "      <td>0.014287</td>\n",
        "      <td>0.008136</td>\n",
        "      <td>0.001581</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>2020-09-05</th>\n",
        "      <td>0.024314</td>\n",
        "      <td>0.006726</td>\n",
        "      <td>0.017357</td>\n",
        "      <td>0.008419</td>\n",
        "      <td>0.005657</td>\n",
        "      <td>0.000483</td>\n",
        "      <td>0.014891</td>\n",
        "      <td>0.000854</td>\n",
        "      <td>0.002458</td>\n",
        "      <td>0.020613</td>\n",
        "      <td>...</td>\n",
        "      <td>0.006374</td>\n",
        "      <td>0.000339</td>\n",
        "      <td>0.009739</td>\n",
        "      <td>0.00329</td>\n",
        "      <td>0.001649</td>\n",
        "      <td>0.001731</td>\n",
        "      <td>0.003366</td>\n",
        "      <td>0.014287</td>\n",
        "      <td>0.008136</td>\n",
        "      <td>0.001581</td>\n",
        "    </tr>\n",
        "  </tbody>\n",
        "</table>\n",
        "<p>5 rows \u00d7 26 columns</p>\n",
        "</div>"
       ],
       "output_type": "pyout",
       "prompt_number": 16,
       "text": [
        "Country      Bahrain  Bangladesh    Brazil  Dominican Republic   Estonia  \\\n",
        "Date                                                                       \n",
        "2020-09-01  0.024314    0.006726  0.017357            0.008419  0.005657   \n",
        "2020-09-02  0.024314    0.006726  0.017357            0.008419  0.005657   \n",
        "2020-09-03  0.024314    0.006726  0.017357            0.008419  0.005657   \n",
        "2020-09-04  0.024314    0.006726  0.017357            0.008419  0.005657   \n",
        "2020-09-05  0.024314    0.006726  0.017357            0.008419  0.005657   \n",
        "\n",
        "Country       France    Guinea  Honduras   Hungary      Iran  ...   Moldova  \\\n",
        "Date                                                          ...             \n",
        "2020-09-01  0.000483  0.014891  0.000854  0.002458  0.020613  ...  0.006374   \n",
        "2020-09-02  0.000483  0.014891  0.000854  0.002458  0.020613  ...  0.006374   \n",
        "2020-09-03  0.000483  0.014891  0.000854  0.002458  0.020613  ...  0.006374   \n",
        "2020-09-04  0.000483  0.014891  0.000854  0.002458  0.020613  ...  0.006374   \n",
        "2020-09-05  0.000483  0.014891  0.000854  0.002458  0.020613  ...  0.006374   \n",
        "\n",
        "Country      Myanmar    Poland  Portugal   Romania    Russia   Senegal  \\\n",
        "Date                                                                     \n",
        "2020-09-01  0.000339  0.009739   0.00329  0.001649  0.001731  0.003366   \n",
        "2020-09-02  0.000339  0.009739   0.00329  0.001649  0.001731  0.003366   \n",
        "2020-09-03  0.000339  0.009739   0.00329  0.001649  0.001731  0.003366   \n",
        "2020-09-04  0.000339  0.009739   0.00329  0.001649  0.001731  0.003366   \n",
        "2020-09-05  0.000339  0.009739   0.00329  0.001649  0.001731  0.003366   \n",
        "\n",
        "Country       Turkey  United Arab Emirates  United States  \n",
        "Date                                                       \n",
        "2020-09-01  0.014287              0.008136       0.001581  \n",
        "2020-09-02  0.014287              0.008136       0.001581  \n",
        "2020-09-03  0.014287              0.008136       0.001581  \n",
        "2020-09-04  0.014287              0.008136       0.001581  \n",
        "2020-09-05  0.014287              0.008136       0.001581  \n",
        "\n",
        "[5 rows x 26 columns]"
       ]
      }
     ],
     "prompt_number": 16
    },
    {
     "cell_type": "heading",
     "level": 3,
     "metadata": {},
     "source": [
      "$\\kappa$: Mortality rate of infected cases $\\mathrm{[-]}$"
     ]
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "analyser.param_history(\"kappa\", roll_window=None).tail()"
     ],
     "language": "python",
     "metadata": {},
     "outputs": [
      {
       "output_type": "display_data",
       "png": "\n",
       "text": [
        "<Figure size 648x432 with 1 Axes>"
       ]
      },
      {
       "html": [
        "<div>\n",
        "<style scoped>\n",
        "    .dataframe tbody tr th:only-of-type {\n",
        "        vertical-align: middle;\n",
        "    }\n",
        "\n",
        "    .dataframe tbody tr th {\n",
        "        vertical-align: top;\n",
        "    }\n",
        "\n",
        "    .dataframe thead th {\n",
        "        text-align: right;\n",
        "    }\n",
        "</style>\n",
        "<table border=\"1\" class=\"dataframe\">\n",
        "  <thead>\n",
        "    <tr style=\"text-align: right;\">\n",
        "      <th>Country</th>\n",
        "      <th>Bahrain</th>\n",
        "      <th>Bangladesh</th>\n",
        "      <th>Brazil</th>\n",
        "      <th>Dominican Republic</th>\n",
        "      <th>Estonia</th>\n",
        "      <th>France</th>\n",
        "      <th>Guinea</th>\n",
        "      <th>Honduras</th>\n",
        "      <th>Hungary</th>\n",
        "      <th>Iran</th>\n",
        "      <th>...</th>\n",
        "      <th>Moldova</th>\n",
        "      <th>Myanmar</th>\n",
        "      <th>Poland</th>\n",
        "      <th>Portugal</th>\n",
        "      <th>Romania</th>\n",
        "      <th>Russia</th>\n",
        "      <th>Senegal</th>\n",
        "      <th>Turkey</th>\n",
        "      <th>United Arab Emirates</th>\n",
        "      <th>United States</th>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>Date</th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "    </tr>\n",
        "  </thead>\n",
        "  <tbody>\n",
        "    <tr>\n",
        "      <th>2020-09-01</th>\n",
        "      <td>0.000094</td>\n",
        "      <td>0.000087</td>\n",
        "      <td>0.000108</td>\n",
        "      <td>0.000096</td>\n",
        "      <td>0.000002</td>\n",
        "      <td>0.000079</td>\n",
        "      <td>0.000037</td>\n",
        "      <td>0.00006</td>\n",
        "      <td>0.000072</td>\n",
        "      <td>0.000523</td>\n",
        "      <td>...</td>\n",
        "      <td>0.000185</td>\n",
        "      <td>0.000156</td>\n",
        "      <td>0.000079</td>\n",
        "      <td>0.000024</td>\n",
        "      <td>0.00023</td>\n",
        "      <td>0.000031</td>\n",
        "      <td>0.000048</td>\n",
        "      <td>0.000309</td>\n",
        "      <td>0.000037</td>\n",
        "      <td>0.000019</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>2020-09-02</th>\n",
        "      <td>0.000094</td>\n",
        "      <td>0.000087</td>\n",
        "      <td>0.000108</td>\n",
        "      <td>0.000096</td>\n",
        "      <td>0.000002</td>\n",
        "      <td>0.000079</td>\n",
        "      <td>0.000037</td>\n",
        "      <td>0.00006</td>\n",
        "      <td>0.000072</td>\n",
        "      <td>0.000523</td>\n",
        "      <td>...</td>\n",
        "      <td>0.000185</td>\n",
        "      <td>0.000156</td>\n",
        "      <td>0.000079</td>\n",
        "      <td>0.000024</td>\n",
        "      <td>0.00023</td>\n",
        "      <td>0.000031</td>\n",
        "      <td>0.000048</td>\n",
        "      <td>0.000309</td>\n",
        "      <td>0.000037</td>\n",
        "      <td>0.000019</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>2020-09-03</th>\n",
        "      <td>0.000094</td>\n",
        "      <td>0.000087</td>\n",
        "      <td>0.000108</td>\n",
        "      <td>0.000096</td>\n",
        "      <td>0.000002</td>\n",
        "      <td>0.000079</td>\n",
        "      <td>0.000037</td>\n",
        "      <td>0.00006</td>\n",
        "      <td>0.000072</td>\n",
        "      <td>0.000523</td>\n",
        "      <td>...</td>\n",
        "      <td>0.000185</td>\n",
        "      <td>0.000156</td>\n",
        "      <td>0.000079</td>\n",
        "      <td>0.000024</td>\n",
        "      <td>0.00023</td>\n",
        "      <td>0.000031</td>\n",
        "      <td>0.000048</td>\n",
        "      <td>0.000309</td>\n",
        "      <td>0.000037</td>\n",
        "      <td>0.000019</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>2020-09-04</th>\n",
        "      <td>0.000094</td>\n",
        "      <td>0.000087</td>\n",
        "      <td>0.000108</td>\n",
        "      <td>0.000096</td>\n",
        "      <td>0.000002</td>\n",
        "      <td>0.000079</td>\n",
        "      <td>0.000037</td>\n",
        "      <td>0.00006</td>\n",
        "      <td>0.000072</td>\n",
        "      <td>0.000523</td>\n",
        "      <td>...</td>\n",
        "      <td>0.000185</td>\n",
        "      <td>0.000156</td>\n",
        "      <td>0.000079</td>\n",
        "      <td>0.000024</td>\n",
        "      <td>0.00023</td>\n",
        "      <td>0.000031</td>\n",
        "      <td>0.000048</td>\n",
        "      <td>0.000309</td>\n",
        "      <td>0.000037</td>\n",
        "      <td>0.000019</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>2020-09-05</th>\n",
        "      <td>0.000094</td>\n",
        "      <td>0.000087</td>\n",
        "      <td>0.000108</td>\n",
        "      <td>0.000096</td>\n",
        "      <td>0.000002</td>\n",
        "      <td>0.000079</td>\n",
        "      <td>0.000037</td>\n",
        "      <td>0.00006</td>\n",
        "      <td>0.000072</td>\n",
        "      <td>0.000523</td>\n",
        "      <td>...</td>\n",
        "      <td>0.000185</td>\n",
        "      <td>0.000156</td>\n",
        "      <td>0.000079</td>\n",
        "      <td>0.000024</td>\n",
        "      <td>0.00023</td>\n",
        "      <td>0.000031</td>\n",
        "      <td>0.000048</td>\n",
        "      <td>0.000309</td>\n",
        "      <td>0.000037</td>\n",
        "      <td>0.000019</td>\n",
        "    </tr>\n",
        "  </tbody>\n",
        "</table>\n",
        "<p>5 rows \u00d7 26 columns</p>\n",
        "</div>"
       ],
       "output_type": "pyout",
       "prompt_number": 17,
       "text": [
        "Country      Bahrain  Bangladesh    Brazil  Dominican Republic   Estonia  \\\n",
        "Date                                                                       \n",
        "2020-09-01  0.000094    0.000087  0.000108            0.000096  0.000002   \n",
        "2020-09-02  0.000094    0.000087  0.000108            0.000096  0.000002   \n",
        "2020-09-03  0.000094    0.000087  0.000108            0.000096  0.000002   \n",
        "2020-09-04  0.000094    0.000087  0.000108            0.000096  0.000002   \n",
        "2020-09-05  0.000094    0.000087  0.000108            0.000096  0.000002   \n",
        "\n",
        "Country       France    Guinea  Honduras   Hungary      Iran  ...   Moldova  \\\n",
        "Date                                                          ...             \n",
        "2020-09-01  0.000079  0.000037   0.00006  0.000072  0.000523  ...  0.000185   \n",
        "2020-09-02  0.000079  0.000037   0.00006  0.000072  0.000523  ...  0.000185   \n",
        "2020-09-03  0.000079  0.000037   0.00006  0.000072  0.000523  ...  0.000185   \n",
        "2020-09-04  0.000079  0.000037   0.00006  0.000072  0.000523  ...  0.000185   \n",
        "2020-09-05  0.000079  0.000037   0.00006  0.000072  0.000523  ...  0.000185   \n",
        "\n",
        "Country      Myanmar    Poland  Portugal  Romania    Russia   Senegal  \\\n",
        "Date                                                                    \n",
        "2020-09-01  0.000156  0.000079  0.000024  0.00023  0.000031  0.000048   \n",
        "2020-09-02  0.000156  0.000079  0.000024  0.00023  0.000031  0.000048   \n",
        "2020-09-03  0.000156  0.000079  0.000024  0.00023  0.000031  0.000048   \n",
        "2020-09-04  0.000156  0.000079  0.000024  0.00023  0.000031  0.000048   \n",
        "2020-09-05  0.000156  0.000079  0.000024  0.00023  0.000031  0.000048   \n",
        "\n",
        "Country       Turkey  United Arab Emirates  United States  \n",
        "Date                                                       \n",
        "2020-09-01  0.000309              0.000037       0.000019  \n",
        "2020-09-02  0.000309              0.000037       0.000019  \n",
        "2020-09-03  0.000309              0.000037       0.000019  \n",
        "2020-09-04  0.000309              0.000037       0.000019  \n",
        "2020-09-05  0.000309              0.000037       0.000019  \n",
        "\n",
        "[5 rows x 26 columns]"
       ]
      }
     ],
     "prompt_number": 17
    },
    {
     "cell_type": "heading",
     "level": 3,
     "metadata": {},
     "source": [
      "$\\theta$: Mortality rate of S$^\\ast$ cases $\\mathrm{[-]}$"
     ]
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "analyser.param_history(\"theta\", roll_window=None).tail()"
     ],
     "language": "python",
     "metadata": {},
     "outputs": [
      {
       "output_type": "display_data",
       "png": "\n",
       "text": [
        "<Figure size 648x432 with 1 Axes>"
       ]
      },
      {
       "html": [
        "<div>\n",
        "<style scoped>\n",
        "    .dataframe tbody tr th:only-of-type {\n",
        "        vertical-align: middle;\n",
        "    }\n",
        "\n",
        "    .dataframe tbody tr th {\n",
        "        vertical-align: top;\n",
        "    }\n",
        "\n",
        "    .dataframe thead th {\n",
        "        text-align: right;\n",
        "    }\n",
        "</style>\n",
        "<table border=\"1\" class=\"dataframe\">\n",
        "  <thead>\n",
        "    <tr style=\"text-align: right;\">\n",
        "      <th>Country</th>\n",
        "      <th>Bahrain</th>\n",
        "      <th>Bangladesh</th>\n",
        "      <th>Brazil</th>\n",
        "      <th>Dominican Republic</th>\n",
        "      <th>Estonia</th>\n",
        "      <th>France</th>\n",
        "      <th>Guinea</th>\n",
        "      <th>Honduras</th>\n",
        "      <th>Hungary</th>\n",
        "      <th>Iran</th>\n",
        "      <th>...</th>\n",
        "      <th>Moldova</th>\n",
        "      <th>Myanmar</th>\n",
        "      <th>Poland</th>\n",
        "      <th>Portugal</th>\n",
        "      <th>Romania</th>\n",
        "      <th>Russia</th>\n",
        "      <th>Senegal</th>\n",
        "      <th>Turkey</th>\n",
        "      <th>United Arab Emirates</th>\n",
        "      <th>United States</th>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>Date</th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "    </tr>\n",
        "  </thead>\n",
        "  <tbody>\n",
        "    <tr>\n",
        "      <th>2020-09-01</th>\n",
        "      <td>0.00054</td>\n",
        "      <td>0.000515</td>\n",
        "      <td>0.019092</td>\n",
        "      <td>0.020228</td>\n",
        "      <td>0.001344</td>\n",
        "      <td>0.001078</td>\n",
        "      <td>0.000659</td>\n",
        "      <td>0.000405</td>\n",
        "      <td>0.000627</td>\n",
        "      <td>0.052132</td>\n",
        "      <td>...</td>\n",
        "      <td>0.00044</td>\n",
        "      <td>0.000896</td>\n",
        "      <td>0.003611</td>\n",
        "      <td>0.016642</td>\n",
        "      <td>0.000301</td>\n",
        "      <td>0.001818</td>\n",
        "      <td>0.01718</td>\n",
        "      <td>0.003232</td>\n",
        "      <td>0.000665</td>\n",
        "      <td>0.018624</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>2020-09-02</th>\n",
        "      <td>0.00054</td>\n",
        "      <td>0.000515</td>\n",
        "      <td>0.019092</td>\n",
        "      <td>0.020228</td>\n",
        "      <td>0.001344</td>\n",
        "      <td>0.001078</td>\n",
        "      <td>0.000659</td>\n",
        "      <td>0.000405</td>\n",
        "      <td>0.000627</td>\n",
        "      <td>0.052132</td>\n",
        "      <td>...</td>\n",
        "      <td>0.00044</td>\n",
        "      <td>0.000896</td>\n",
        "      <td>0.003611</td>\n",
        "      <td>0.016642</td>\n",
        "      <td>0.000301</td>\n",
        "      <td>0.001818</td>\n",
        "      <td>0.01718</td>\n",
        "      <td>0.003232</td>\n",
        "      <td>0.000665</td>\n",
        "      <td>0.018624</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>2020-09-03</th>\n",
        "      <td>0.00054</td>\n",
        "      <td>0.000515</td>\n",
        "      <td>0.019092</td>\n",
        "      <td>0.020228</td>\n",
        "      <td>0.001344</td>\n",
        "      <td>0.001078</td>\n",
        "      <td>0.000659</td>\n",
        "      <td>0.000405</td>\n",
        "      <td>0.000627</td>\n",
        "      <td>0.052132</td>\n",
        "      <td>...</td>\n",
        "      <td>0.00044</td>\n",
        "      <td>0.000896</td>\n",
        "      <td>0.003611</td>\n",
        "      <td>0.016642</td>\n",
        "      <td>0.000301</td>\n",
        "      <td>0.001818</td>\n",
        "      <td>0.01718</td>\n",
        "      <td>0.003232</td>\n",
        "      <td>0.000665</td>\n",
        "      <td>0.018624</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>2020-09-04</th>\n",
        "      <td>0.00054</td>\n",
        "      <td>0.000515</td>\n",
        "      <td>0.019092</td>\n",
        "      <td>0.020228</td>\n",
        "      <td>0.001344</td>\n",
        "      <td>0.001078</td>\n",
        "      <td>0.000659</td>\n",
        "      <td>0.000405</td>\n",
        "      <td>0.000627</td>\n",
        "      <td>0.052132</td>\n",
        "      <td>...</td>\n",
        "      <td>0.00044</td>\n",
        "      <td>0.000896</td>\n",
        "      <td>0.003611</td>\n",
        "      <td>0.016642</td>\n",
        "      <td>0.000301</td>\n",
        "      <td>0.001818</td>\n",
        "      <td>0.01718</td>\n",
        "      <td>0.003232</td>\n",
        "      <td>0.000665</td>\n",
        "      <td>0.018624</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>2020-09-05</th>\n",
        "      <td>0.00054</td>\n",
        "      <td>0.000515</td>\n",
        "      <td>0.019092</td>\n",
        "      <td>0.020228</td>\n",
        "      <td>0.001344</td>\n",
        "      <td>0.001078</td>\n",
        "      <td>0.000659</td>\n",
        "      <td>0.000405</td>\n",
        "      <td>0.000627</td>\n",
        "      <td>0.052132</td>\n",
        "      <td>...</td>\n",
        "      <td>0.00044</td>\n",
        "      <td>0.000896</td>\n",
        "      <td>0.003611</td>\n",
        "      <td>0.016642</td>\n",
        "      <td>0.000301</td>\n",
        "      <td>0.001818</td>\n",
        "      <td>0.01718</td>\n",
        "      <td>0.003232</td>\n",
        "      <td>0.000665</td>\n",
        "      <td>0.018624</td>\n",
        "    </tr>\n",
        "  </tbody>\n",
        "</table>\n",
        "<p>5 rows \u00d7 26 columns</p>\n",
        "</div>"
       ],
       "output_type": "pyout",
       "prompt_number": 18,
       "text": [
        "Country     Bahrain  Bangladesh    Brazil  Dominican Republic   Estonia  \\\n",
        "Date                                                                      \n",
        "2020-09-01  0.00054    0.000515  0.019092            0.020228  0.001344   \n",
        "2020-09-02  0.00054    0.000515  0.019092            0.020228  0.001344   \n",
        "2020-09-03  0.00054    0.000515  0.019092            0.020228  0.001344   \n",
        "2020-09-04  0.00054    0.000515  0.019092            0.020228  0.001344   \n",
        "2020-09-05  0.00054    0.000515  0.019092            0.020228  0.001344   \n",
        "\n",
        "Country       France    Guinea  Honduras   Hungary      Iran  ...  Moldova  \\\n",
        "Date                                                          ...            \n",
        "2020-09-01  0.001078  0.000659  0.000405  0.000627  0.052132  ...  0.00044   \n",
        "2020-09-02  0.001078  0.000659  0.000405  0.000627  0.052132  ...  0.00044   \n",
        "2020-09-03  0.001078  0.000659  0.000405  0.000627  0.052132  ...  0.00044   \n",
        "2020-09-04  0.001078  0.000659  0.000405  0.000627  0.052132  ...  0.00044   \n",
        "2020-09-05  0.001078  0.000659  0.000405  0.000627  0.052132  ...  0.00044   \n",
        "\n",
        "Country      Myanmar    Poland  Portugal   Romania    Russia  Senegal  \\\n",
        "Date                                                                    \n",
        "2020-09-01  0.000896  0.003611  0.016642  0.000301  0.001818  0.01718   \n",
        "2020-09-02  0.000896  0.003611  0.016642  0.000301  0.001818  0.01718   \n",
        "2020-09-03  0.000896  0.003611  0.016642  0.000301  0.001818  0.01718   \n",
        "2020-09-04  0.000896  0.003611  0.016642  0.000301  0.001818  0.01718   \n",
        "2020-09-05  0.000896  0.003611  0.016642  0.000301  0.001818  0.01718   \n",
        "\n",
        "Country       Turkey  United Arab Emirates  United States  \n",
        "Date                                                       \n",
        "2020-09-01  0.003232              0.000665       0.018624  \n",
        "2020-09-02  0.003232              0.000665       0.018624  \n",
        "2020-09-03  0.003232              0.000665       0.018624  \n",
        "2020-09-04  0.003232              0.000665       0.018624  \n",
        "2020-09-05  0.003232              0.000665       0.018624  \n",
        "\n",
        "[5 rows x 26 columns]"
       ]
      }
     ],
     "prompt_number": 18
    },
    {
     "cell_type": "markdown",
     "metadata": {},
     "source": [
      "## (Experimental): Relationship of OxCGRT index and parameter values\n",
      "Government responses will impact on parameter values of ODE models about 14 days later. Here, we will investigate on the relationship of [stringency index (from OxCGRT)](https://github.com/OxCGRT/covid-policy-tracker/blob/master/documentation/index_methodology.md) and reproduction number/model parameters.\n"
     ]
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "%matplotlib inline\n",
      "from matplotlib import pyplot as plt\n",
      "import seaborn as sns\n",
      "import pandas as pd"
     ],
     "language": "python",
     "metadata": {},
     "outputs": [],
     "prompt_number": 19
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "df = analyser.track()\n",
      "param_cols = [\"Rt\", *cs.SIRF.PARAMETERS]\n",
      "oxcgrt_cols = oxcgrt_data.OXCGRT_VARS[:]\n",
      "cols = param_cols + oxcgrt_cols\n",
      "delay = 14\n",
      "\n",
      "for col in param_cols:\n",
      "    df[col] = pd.to_numeric(df[col], errors=\"coerce\")\n",
      "    df[col] = df.groupby(\"Country\")[col].shift(0 - delay)\n",
      "\n",
      "df = df.dropna(how=\"any\")\n",
      "df = df.loc[:, [\"Date\", \"Country\", *cols]]\n",
      "track_df = df.copy()\n",
      "track_df.info()"
     ],
     "language": "python",
     "metadata": {},
     "outputs": [
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "<class 'pandas.core.frame.DataFrame'>\n",
        "Int64Index: 30814 entries, 0 to 31163\n",
        "Data columns (total 19 columns):\n",
        " #   Column                               Non-Null Count  Dtype         \n",
        "---  ------                               --------------  -----         \n",
        " 0   Date                                 30814 non-null  datetime64[ns]\n",
        " 1   Country                              30814 non-null  object        \n",
        " 2   Rt                                   30814 non-null  float64       \n",
        " 3   theta                                30814 non-null  float64       \n",
        " 4   kappa                                30814 non-null  float64       \n",
        " 5   rho                                  30814 non-null  float64       \n",
        " 6   sigma                                30814 non-null  float64       \n",
        " 7   School_closing                       30814 non-null  int64         \n",
        " 8   Workplace_closing                    30814 non-null  int64         \n",
        " 9   Cancel_events                        30814 non-null  int64         \n",
        " 10  Gatherings_restrictions              30814 non-null  int64         \n",
        " 11  Transport_closing                    30814 non-null  int64         \n",
        " 12  Stay_home_restrictions               30814 non-null  int64         \n",
        " 13  Internal_movement_restrictions       30814 non-null  int64         \n",
        " 14  International_movement_restrictions  30814 non-null  int64         \n",
        " 15  Information_campaigns                30814 non-null  int64         \n",
        " 16  Testing_policy                       30814 non-null  int64         \n",
        " 17  Contact_tracing                      30814 non-null  int64         \n",
        " 18  Stringency_index                     30814 non-null  float64       \n",
        "dtypes: datetime64[ns](1), float64(6), int64(11), object(1)\n",
        "memory usage: 4.7+ MB\n"
       ]
      }
     ],
     "prompt_number": 20
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "# Correlation\n",
      "df = track_df.copy()\n",
      "df.corr().style.background_gradient(axis=None)"
     ],
     "language": "python",
     "metadata": {},
     "outputs": [
      {
       "html": [
        "<style  type=\"text/css\" >\n",
        "#T_b6e385d8_ef94_11ea_bb46_525400366c7erow0_col0,#T_b6e385d8_ef94_11ea_bb46_525400366c7erow1_col1,#T_b6e385d8_ef94_11ea_bb46_525400366c7erow2_col2,#T_b6e385d8_ef94_11ea_bb46_525400366c7erow3_col3,#T_b6e385d8_ef94_11ea_bb46_525400366c7erow4_col4,#T_b6e385d8_ef94_11ea_bb46_525400366c7erow5_col5,#T_b6e385d8_ef94_11ea_bb46_525400366c7erow6_col6,#T_b6e385d8_ef94_11ea_bb46_525400366c7erow7_col7,#T_b6e385d8_ef94_11ea_bb46_525400366c7erow8_col8,#T_b6e385d8_ef94_11ea_bb46_525400366c7erow9_col9,#T_b6e385d8_ef94_11ea_bb46_525400366c7erow10_col10,#T_b6e385d8_ef94_11ea_bb46_525400366c7erow11_col11,#T_b6e385d8_ef94_11ea_bb46_525400366c7erow12_col12,#T_b6e385d8_ef94_11ea_bb46_525400366c7erow13_col13,#T_b6e385d8_ef94_11ea_bb46_525400366c7erow14_col14,#T_b6e385d8_ef94_11ea_bb46_525400366c7erow15_col15,#T_b6e385d8_ef94_11ea_bb46_525400366c7erow16_col16{\n",
        "            background-color:  #023858;\n",
        "            color:  #f1f1f1;\n",
        "        }#T_b6e385d8_ef94_11ea_bb46_525400366c7erow0_col1,#T_b6e385d8_ef94_11ea_bb46_525400366c7erow1_col0,#T_b6e385d8_ef94_11ea_bb46_525400366c7erow1_col15,#T_b6e385d8_ef94_11ea_bb46_525400366c7erow2_col12,#T_b6e385d8_ef94_11ea_bb46_525400366c7erow12_col2,#T_b6e385d8_ef94_11ea_bb46_525400366c7erow15_col1{\n",
        "            background-color:  #cdd0e5;\n",
        "            color:  #000000;\n",
        "        }#T_b6e385d8_ef94_11ea_bb46_525400366c7erow0_col2,#T_b6e385d8_ef94_11ea_bb46_525400366c7erow2_col0{\n",
        "            background-color:  #b9c6e0;\n",
        "            color:  #000000;\n",
        "        }#T_b6e385d8_ef94_11ea_bb46_525400366c7erow0_col3,#T_b6e385d8_ef94_11ea_bb46_525400366c7erow3_col0{\n",
        "            background-color:  #6fa7ce;\n",
        "            color:  #000000;\n",
        "        }#T_b6e385d8_ef94_11ea_bb46_525400366c7erow0_col4,#T_b6e385d8_ef94_11ea_bb46_525400366c7erow4_col0,#T_b6e385d8_ef94_11ea_bb46_525400366c7erow8_col15,#T_b6e385d8_ef94_11ea_bb46_525400366c7erow15_col8{\n",
        "            background-color:  #dddbec;\n",
        "            color:  #000000;\n",
        "        }#T_b6e385d8_ef94_11ea_bb46_525400366c7erow0_col5,#T_b6e385d8_ef94_11ea_bb46_525400366c7erow4_col9,#T_b6e385d8_ef94_11ea_bb46_525400366c7erow5_col0,#T_b6e385d8_ef94_11ea_bb46_525400366c7erow9_col4{\n",
        "            background-color:  #d5d5e8;\n",
        "            color:  #000000;\n",
        "        }#T_b6e385d8_ef94_11ea_bb46_525400366c7erow0_col6,#T_b6e385d8_ef94_11ea_bb46_525400366c7erow6_col0,#T_b6e385d8_ef94_11ea_bb46_525400366c7erow9_col13,#T_b6e385d8_ef94_11ea_bb46_525400366c7erow13_col9{\n",
        "            background-color:  #bfc9e1;\n",
        "            color:  #000000;\n",
        "        }#T_b6e385d8_ef94_11ea_bb46_525400366c7erow0_col7,#T_b6e385d8_ef94_11ea_bb46_525400366c7erow7_col0{\n",
        "            background-color:  #a8bedc;\n",
        "            color:  #000000;\n",
        "        }#T_b6e385d8_ef94_11ea_bb46_525400366c7erow0_col8,#T_b6e385d8_ef94_11ea_bb46_525400366c7erow8_col0{\n",
        "            background-color:  #96b6d7;\n",
        "            color:  #000000;\n",
        "        }#T_b6e385d8_ef94_11ea_bb46_525400366c7erow0_col9,#T_b6e385d8_ef94_11ea_bb46_525400366c7erow4_col6,#T_b6e385d8_ef94_11ea_bb46_525400366c7erow6_col4,#T_b6e385d8_ef94_11ea_bb46_525400366c7erow9_col0{\n",
        "            background-color:  #c2cbe2;\n",
        "            color:  #000000;\n",
        "        }#T_b6e385d8_ef94_11ea_bb46_525400366c7erow0_col10,#T_b6e385d8_ef94_11ea_bb46_525400366c7erow10_col0{\n",
        "            background-color:  #b3c3de;\n",
        "            color:  #000000;\n",
        "        }#T_b6e385d8_ef94_11ea_bb46_525400366c7erow0_col11,#T_b6e385d8_ef94_11ea_bb46_525400366c7erow4_col12,#T_b6e385d8_ef94_11ea_bb46_525400366c7erow11_col0,#T_b6e385d8_ef94_11ea_bb46_525400366c7erow12_col4{\n",
        "            background-color:  #b1c2de;\n",
        "            color:  #000000;\n",
        "        }#T_b6e385d8_ef94_11ea_bb46_525400366c7erow0_col12,#T_b6e385d8_ef94_11ea_bb46_525400366c7erow12_col0{\n",
        "            background-color:  #e7e3f0;\n",
        "            color:  #000000;\n",
        "        }#T_b6e385d8_ef94_11ea_bb46_525400366c7erow0_col13,#T_b6e385d8_ef94_11ea_bb46_525400366c7erow1_col10,#T_b6e385d8_ef94_11ea_bb46_525400366c7erow6_col14,#T_b6e385d8_ef94_11ea_bb46_525400366c7erow10_col1,#T_b6e385d8_ef94_11ea_bb46_525400366c7erow13_col0,#T_b6e385d8_ef94_11ea_bb46_525400366c7erow14_col6{\n",
        "            background-color:  #afc1dd;\n",
        "            color:  #000000;\n",
        "        }#T_b6e385d8_ef94_11ea_bb46_525400366c7erow0_col14,#T_b6e385d8_ef94_11ea_bb46_525400366c7erow0_col16,#T_b6e385d8_ef94_11ea_bb46_525400366c7erow14_col0,#T_b6e385d8_ef94_11ea_bb46_525400366c7erow16_col0{\n",
        "            background-color:  #c4cbe3;\n",
        "            color:  #000000;\n",
        "        }#T_b6e385d8_ef94_11ea_bb46_525400366c7erow0_col15,#T_b6e385d8_ef94_11ea_bb46_525400366c7erow15_col0{\n",
        "            background-color:  #d4d4e8;\n",
        "            color:  #000000;\n",
        "        }#T_b6e385d8_ef94_11ea_bb46_525400366c7erow1_col2,#T_b6e385d8_ef94_11ea_bb46_525400366c7erow1_col16,#T_b6e385d8_ef94_11ea_bb46_525400366c7erow2_col1,#T_b6e385d8_ef94_11ea_bb46_525400366c7erow16_col1{\n",
        "            background-color:  #5ea0ca;\n",
        "            color:  #000000;\n",
        "        }#T_b6e385d8_ef94_11ea_bb46_525400366c7erow1_col3,#T_b6e385d8_ef94_11ea_bb46_525400366c7erow1_col11,#T_b6e385d8_ef94_11ea_bb46_525400366c7erow3_col1,#T_b6e385d8_ef94_11ea_bb46_525400366c7erow3_col16,#T_b6e385d8_ef94_11ea_bb46_525400366c7erow11_col1,#T_b6e385d8_ef94_11ea_bb46_525400366c7erow13_col15,#T_b6e385d8_ef94_11ea_bb46_525400366c7erow15_col13,#T_b6e385d8_ef94_11ea_bb46_525400366c7erow16_col3{\n",
        "            background-color:  #a1bbda;\n",
        "            color:  #000000;\n",
        "        }#T_b6e385d8_ef94_11ea_bb46_525400366c7erow1_col4,#T_b6e385d8_ef94_11ea_bb46_525400366c7erow4_col1{\n",
        "            background-color:  #9cb9d9;\n",
        "            color:  #000000;\n",
        "        }#T_b6e385d8_ef94_11ea_bb46_525400366c7erow1_col5,#T_b6e385d8_ef94_11ea_bb46_525400366c7erow5_col1{\n",
        "            background-color:  #91b5d6;\n",
        "            color:  #000000;\n",
        "        }#T_b6e385d8_ef94_11ea_bb46_525400366c7erow1_col6,#T_b6e385d8_ef94_11ea_bb46_525400366c7erow6_col1{\n",
        "            background-color:  #5c9fc9;\n",
        "            color:  #000000;\n",
        "        }#T_b6e385d8_ef94_11ea_bb46_525400366c7erow1_col7,#T_b6e385d8_ef94_11ea_bb46_525400366c7erow7_col1,#T_b6e385d8_ef94_11ea_bb46_525400366c7erow13_col16,#T_b6e385d8_ef94_11ea_bb46_525400366c7erow16_col13{\n",
        "            background-color:  #9fbad9;\n",
        "            color:  #000000;\n",
        "        }#T_b6e385d8_ef94_11ea_bb46_525400366c7erow1_col8,#T_b6e385d8_ef94_11ea_bb46_525400366c7erow1_col13,#T_b6e385d8_ef94_11ea_bb46_525400366c7erow8_col1,#T_b6e385d8_ef94_11ea_bb46_525400366c7erow10_col15,#T_b6e385d8_ef94_11ea_bb46_525400366c7erow11_col13,#T_b6e385d8_ef94_11ea_bb46_525400366c7erow13_col1,#T_b6e385d8_ef94_11ea_bb46_525400366c7erow13_col11,#T_b6e385d8_ef94_11ea_bb46_525400366c7erow15_col10{\n",
        "            background-color:  #b0c2de;\n",
        "            color:  #000000;\n",
        "        }#T_b6e385d8_ef94_11ea_bb46_525400366c7erow1_col9,#T_b6e385d8_ef94_11ea_bb46_525400366c7erow6_col13,#T_b6e385d8_ef94_11ea_bb46_525400366c7erow9_col1,#T_b6e385d8_ef94_11ea_bb46_525400366c7erow13_col6{\n",
        "            background-color:  #a7bddb;\n",
        "            color:  #000000;\n",
        "        }#T_b6e385d8_ef94_11ea_bb46_525400366c7erow1_col12,#T_b6e385d8_ef94_11ea_bb46_525400366c7erow12_col1{\n",
        "            background-color:  #c0c9e2;\n",
        "            color:  #000000;\n",
        "        }#T_b6e385d8_ef94_11ea_bb46_525400366c7erow1_col14,#T_b6e385d8_ef94_11ea_bb46_525400366c7erow14_col1{\n",
        "            background-color:  #f9f2f8;\n",
        "            color:  #000000;\n",
        "        }#T_b6e385d8_ef94_11ea_bb46_525400366c7erow2_col3,#T_b6e385d8_ef94_11ea_bb46_525400366c7erow3_col2{\n",
        "            background-color:  #2d8abd;\n",
        "            color:  #000000;\n",
        "        }#T_b6e385d8_ef94_11ea_bb46_525400366c7erow2_col4,#T_b6e385d8_ef94_11ea_bb46_525400366c7erow4_col2,#T_b6e385d8_ef94_11ea_bb46_525400366c7erow6_col10,#T_b6e385d8_ef94_11ea_bb46_525400366c7erow10_col6{\n",
        "            background-color:  #3b92c1;\n",
        "            color:  #000000;\n",
        "        }#T_b6e385d8_ef94_11ea_bb46_525400366c7erow2_col5,#T_b6e385d8_ef94_11ea_bb46_525400366c7erow5_col2,#T_b6e385d8_ef94_11ea_bb46_525400366c7erow6_col8,#T_b6e385d8_ef94_11ea_bb46_525400366c7erow8_col6{\n",
        "            background-color:  #71a8ce;\n",
        "            color:  #000000;\n",
        "        }#T_b6e385d8_ef94_11ea_bb46_525400366c7erow2_col6,#T_b6e385d8_ef94_11ea_bb46_525400366c7erow6_col2{\n",
        "            background-color:  #69a5cc;\n",
        "            color:  #000000;\n",
        "        }#T_b6e385d8_ef94_11ea_bb46_525400366c7erow2_col7,#T_b6e385d8_ef94_11ea_bb46_525400366c7erow7_col2{\n",
        "            background-color:  #b5c4df;\n",
        "            color:  #000000;\n",
        "        }#T_b6e385d8_ef94_11ea_bb46_525400366c7erow2_col8,#T_b6e385d8_ef94_11ea_bb46_525400366c7erow8_col2{\n",
        "            background-color:  #e1dfed;\n",
        "            color:  #000000;\n",
        "        }#T_b6e385d8_ef94_11ea_bb46_525400366c7erow2_col9,#T_b6e385d8_ef94_11ea_bb46_525400366c7erow3_col10,#T_b6e385d8_ef94_11ea_bb46_525400366c7erow9_col2,#T_b6e385d8_ef94_11ea_bb46_525400366c7erow10_col3,#T_b6e385d8_ef94_11ea_bb46_525400366c7erow14_col16,#T_b6e385d8_ef94_11ea_bb46_525400366c7erow16_col14{\n",
        "            background-color:  #b7c5df;\n",
        "            color:  #000000;\n",
        "        }#T_b6e385d8_ef94_11ea_bb46_525400366c7erow2_col10,#T_b6e385d8_ef94_11ea_bb46_525400366c7erow3_col9,#T_b6e385d8_ef94_11ea_bb46_525400366c7erow9_col3,#T_b6e385d8_ef94_11ea_bb46_525400366c7erow10_col2,#T_b6e385d8_ef94_11ea_bb46_525400366c7erow12_col15,#T_b6e385d8_ef94_11ea_bb46_525400366c7erow15_col12{\n",
        "            background-color:  #bbc7e0;\n",
        "            color:  #000000;\n",
        "        }#T_b6e385d8_ef94_11ea_bb46_525400366c7erow2_col11,#T_b6e385d8_ef94_11ea_bb46_525400366c7erow2_col13,#T_b6e385d8_ef94_11ea_bb46_525400366c7erow2_col15,#T_b6e385d8_ef94_11ea_bb46_525400366c7erow4_col13,#T_b6e385d8_ef94_11ea_bb46_525400366c7erow11_col2,#T_b6e385d8_ef94_11ea_bb46_525400366c7erow13_col2,#T_b6e385d8_ef94_11ea_bb46_525400366c7erow13_col4,#T_b6e385d8_ef94_11ea_bb46_525400366c7erow15_col2{\n",
        "            background-color:  #ced0e6;\n",
        "            color:  #000000;\n",
        "        }#T_b6e385d8_ef94_11ea_bb46_525400366c7erow2_col14,#T_b6e385d8_ef94_11ea_bb46_525400366c7erow4_col8,#T_b6e385d8_ef94_11ea_bb46_525400366c7erow8_col4,#T_b6e385d8_ef94_11ea_bb46_525400366c7erow14_col2{\n",
        "            background-color:  #fff7fb;\n",
        "            color:  #000000;\n",
        "        }#T_b6e385d8_ef94_11ea_bb46_525400366c7erow2_col16,#T_b6e385d8_ef94_11ea_bb46_525400366c7erow4_col5,#T_b6e385d8_ef94_11ea_bb46_525400366c7erow5_col4,#T_b6e385d8_ef94_11ea_bb46_525400366c7erow16_col2{\n",
        "            background-color:  #81aed2;\n",
        "            color:  #000000;\n",
        "        }#T_b6e385d8_ef94_11ea_bb46_525400366c7erow3_col4,#T_b6e385d8_ef94_11ea_bb46_525400366c7erow4_col3{\n",
        "            background-color:  #0570b0;\n",
        "            color:  #f1f1f1;\n",
        "        }#T_b6e385d8_ef94_11ea_bb46_525400366c7erow3_col5,#T_b6e385d8_ef94_11ea_bb46_525400366c7erow5_col3,#T_b6e385d8_ef94_11ea_bb46_525400366c7erow8_col12,#T_b6e385d8_ef94_11ea_bb46_525400366c7erow12_col8{\n",
        "            background-color:  #78abd0;\n",
        "            color:  #000000;\n",
        "        }#T_b6e385d8_ef94_11ea_bb46_525400366c7erow3_col6,#T_b6e385d8_ef94_11ea_bb46_525400366c7erow6_col3{\n",
        "            background-color:  #94b6d7;\n",
        "            color:  #000000;\n",
        "        }#T_b6e385d8_ef94_11ea_bb46_525400366c7erow3_col7,#T_b6e385d8_ef94_11ea_bb46_525400366c7erow7_col3{\n",
        "            background-color:  #dbdaeb;\n",
        "            color:  #000000;\n",
        "        }#T_b6e385d8_ef94_11ea_bb46_525400366c7erow3_col8,#T_b6e385d8_ef94_11ea_bb46_525400366c7erow8_col3{\n",
        "            background-color:  #d7d6e9;\n",
        "            color:  #000000;\n",
        "        }#T_b6e385d8_ef94_11ea_bb46_525400366c7erow3_col11,#T_b6e385d8_ef94_11ea_bb46_525400366c7erow11_col3{\n",
        "            background-color:  #d0d1e6;\n",
        "            color:  #000000;\n",
        "        }#T_b6e385d8_ef94_11ea_bb46_525400366c7erow3_col12,#T_b6e385d8_ef94_11ea_bb46_525400366c7erow5_col13,#T_b6e385d8_ef94_11ea_bb46_525400366c7erow12_col3,#T_b6e385d8_ef94_11ea_bb46_525400366c7erow13_col5{\n",
        "            background-color:  #adc1dd;\n",
        "            color:  #000000;\n",
        "        }#T_b6e385d8_ef94_11ea_bb46_525400366c7erow3_col13,#T_b6e385d8_ef94_11ea_bb46_525400366c7erow13_col3{\n",
        "            background-color:  #c8cde4;\n",
        "            color:  #000000;\n",
        "        }#T_b6e385d8_ef94_11ea_bb46_525400366c7erow3_col14,#T_b6e385d8_ef94_11ea_bb46_525400366c7erow14_col3{\n",
        "            background-color:  #f0eaf4;\n",
        "            color:  #000000;\n",
        "        }#T_b6e385d8_ef94_11ea_bb46_525400366c7erow3_col15,#T_b6e385d8_ef94_11ea_bb46_525400366c7erow15_col3{\n",
        "            background-color:  #d8d7e9;\n",
        "            color:  #000000;\n",
        "        }#T_b6e385d8_ef94_11ea_bb46_525400366c7erow4_col7,#T_b6e385d8_ef94_11ea_bb46_525400366c7erow7_col4{\n",
        "            background-color:  #e3e0ee;\n",
        "            color:  #000000;\n",
        "        }#T_b6e385d8_ef94_11ea_bb46_525400366c7erow4_col10,#T_b6e385d8_ef94_11ea_bb46_525400366c7erow10_col4{\n",
        "            background-color:  #d9d8ea;\n",
        "            color:  #000000;\n",
        "        }#T_b6e385d8_ef94_11ea_bb46_525400366c7erow4_col11,#T_b6e385d8_ef94_11ea_bb46_525400366c7erow11_col4{\n",
        "            background-color:  #ece7f2;\n",
        "            color:  #000000;\n",
        "        }#T_b6e385d8_ef94_11ea_bb46_525400366c7erow4_col14,#T_b6e385d8_ef94_11ea_bb46_525400366c7erow14_col4{\n",
        "            background-color:  #f1ebf4;\n",
        "            color:  #000000;\n",
        "        }#T_b6e385d8_ef94_11ea_bb46_525400366c7erow4_col15,#T_b6e385d8_ef94_11ea_bb46_525400366c7erow15_col4{\n",
        "            background-color:  #a9bfdc;\n",
        "            color:  #000000;\n",
        "        }#T_b6e385d8_ef94_11ea_bb46_525400366c7erow4_col16,#T_b6e385d8_ef94_11ea_bb46_525400366c7erow16_col4{\n",
        "            background-color:  #c9cee4;\n",
        "            color:  #000000;\n",
        "        }#T_b6e385d8_ef94_11ea_bb46_525400366c7erow5_col6,#T_b6e385d8_ef94_11ea_bb46_525400366c7erow6_col5{\n",
        "            background-color:  #1e80b8;\n",
        "            color:  #000000;\n",
        "        }#T_b6e385d8_ef94_11ea_bb46_525400366c7erow5_col7,#T_b6e385d8_ef94_11ea_bb46_525400366c7erow7_col5{\n",
        "            background-color:  #7bacd1;\n",
        "            color:  #000000;\n",
        "        }#T_b6e385d8_ef94_11ea_bb46_525400366c7erow5_col8,#T_b6e385d8_ef94_11ea_bb46_525400366c7erow8_col5{\n",
        "            background-color:  #b8c6e0;\n",
        "            color:  #000000;\n",
        "        }#T_b6e385d8_ef94_11ea_bb46_525400366c7erow5_col9,#T_b6e385d8_ef94_11ea_bb46_525400366c7erow9_col5{\n",
        "            background-color:  #589ec8;\n",
        "            color:  #000000;\n",
        "        }#T_b6e385d8_ef94_11ea_bb46_525400366c7erow5_col10,#T_b6e385d8_ef94_11ea_bb46_525400366c7erow10_col5,#T_b6e385d8_ef94_11ea_bb46_525400366c7erow12_col14,#T_b6e385d8_ef94_11ea_bb46_525400366c7erow14_col12{\n",
        "            background-color:  #73a9cf;\n",
        "            color:  #000000;\n",
        "        }#T_b6e385d8_ef94_11ea_bb46_525400366c7erow5_col11,#T_b6e385d8_ef94_11ea_bb46_525400366c7erow11_col5{\n",
        "            background-color:  #76aad0;\n",
        "            color:  #000000;\n",
        "        }#T_b6e385d8_ef94_11ea_bb46_525400366c7erow5_col12,#T_b6e385d8_ef94_11ea_bb46_525400366c7erow12_col5{\n",
        "            background-color:  #2987bc;\n",
        "            color:  #000000;\n",
        "        }#T_b6e385d8_ef94_11ea_bb46_525400366c7erow5_col14,#T_b6e385d8_ef94_11ea_bb46_525400366c7erow7_col13,#T_b6e385d8_ef94_11ea_bb46_525400366c7erow13_col7,#T_b6e385d8_ef94_11ea_bb46_525400366c7erow14_col5{\n",
        "            background-color:  #a5bddb;\n",
        "            color:  #000000;\n",
        "        }#T_b6e385d8_ef94_11ea_bb46_525400366c7erow5_col15,#T_b6e385d8_ef94_11ea_bb46_525400366c7erow15_col5{\n",
        "            background-color:  #f2ecf5;\n",
        "            color:  #000000;\n",
        "        }#T_b6e385d8_ef94_11ea_bb46_525400366c7erow5_col16,#T_b6e385d8_ef94_11ea_bb46_525400366c7erow16_col5{\n",
        "            background-color:  #197db7;\n",
        "            color:  #000000;\n",
        "        }#T_b6e385d8_ef94_11ea_bb46_525400366c7erow6_col7,#T_b6e385d8_ef94_11ea_bb46_525400366c7erow7_col6{\n",
        "            background-color:  #8fb4d6;\n",
        "            color:  #000000;\n",
        "        }#T_b6e385d8_ef94_11ea_bb46_525400366c7erow6_col9,#T_b6e385d8_ef94_11ea_bb46_525400366c7erow9_col6{\n",
        "            background-color:  #2786bb;\n",
        "            color:  #000000;\n",
        "        }#T_b6e385d8_ef94_11ea_bb46_525400366c7erow6_col11,#T_b6e385d8_ef94_11ea_bb46_525400366c7erow11_col6{\n",
        "            background-color:  #4094c3;\n",
        "            color:  #000000;\n",
        "        }#T_b6e385d8_ef94_11ea_bb46_525400366c7erow6_col12,#T_b6e385d8_ef94_11ea_bb46_525400366c7erow12_col6{\n",
        "            background-color:  #62a2cb;\n",
        "            color:  #000000;\n",
        "        }#T_b6e385d8_ef94_11ea_bb46_525400366c7erow6_col15,#T_b6e385d8_ef94_11ea_bb46_525400366c7erow15_col6{\n",
        "            background-color:  #eee8f3;\n",
        "            color:  #000000;\n",
        "        }#T_b6e385d8_ef94_11ea_bb46_525400366c7erow6_col16,#T_b6e385d8_ef94_11ea_bb46_525400366c7erow16_col6{\n",
        "            background-color:  #056dac;\n",
        "            color:  #f1f1f1;\n",
        "        }#T_b6e385d8_ef94_11ea_bb46_525400366c7erow7_col8,#T_b6e385d8_ef94_11ea_bb46_525400366c7erow8_col7{\n",
        "            background-color:  #328dbf;\n",
        "            color:  #000000;\n",
        "        }#T_b6e385d8_ef94_11ea_bb46_525400366c7erow7_col9,#T_b6e385d8_ef94_11ea_bb46_525400366c7erow9_col7{\n",
        "            background-color:  #5a9ec9;\n",
        "            color:  #000000;\n",
        "        }#T_b6e385d8_ef94_11ea_bb46_525400366c7erow7_col10,#T_b6e385d8_ef94_11ea_bb46_525400366c7erow10_col7{\n",
        "            background-color:  #2484ba;\n",
        "            color:  #000000;\n",
        "        }#T_b6e385d8_ef94_11ea_bb46_525400366c7erow7_col11,#T_b6e385d8_ef94_11ea_bb46_525400366c7erow8_col9,#T_b6e385d8_ef94_11ea_bb46_525400366c7erow8_col10,#T_b6e385d8_ef94_11ea_bb46_525400366c7erow9_col8,#T_b6e385d8_ef94_11ea_bb46_525400366c7erow10_col8,#T_b6e385d8_ef94_11ea_bb46_525400366c7erow11_col7{\n",
        "            background-color:  #187cb6;\n",
        "            color:  #000000;\n",
        "        }#T_b6e385d8_ef94_11ea_bb46_525400366c7erow7_col12,#T_b6e385d8_ef94_11ea_bb46_525400366c7erow12_col7{\n",
        "            background-color:  #acc0dd;\n",
        "            color:  #000000;\n",
        "        }#T_b6e385d8_ef94_11ea_bb46_525400366c7erow7_col14,#T_b6e385d8_ef94_11ea_bb46_525400366c7erow14_col7{\n",
        "            background-color:  #84b0d3;\n",
        "            color:  #000000;\n",
        "        }#T_b6e385d8_ef94_11ea_bb46_525400366c7erow7_col15,#T_b6e385d8_ef94_11ea_bb46_525400366c7erow15_col7{\n",
        "            background-color:  #cccfe5;\n",
        "            color:  #000000;\n",
        "        }#T_b6e385d8_ef94_11ea_bb46_525400366c7erow7_col16,#T_b6e385d8_ef94_11ea_bb46_525400366c7erow16_col7{\n",
        "            background-color:  #1b7eb7;\n",
        "            color:  #000000;\n",
        "        }#T_b6e385d8_ef94_11ea_bb46_525400366c7erow8_col11,#T_b6e385d8_ef94_11ea_bb46_525400366c7erow11_col8{\n",
        "            background-color:  #0567a2;\n",
        "            color:  #f1f1f1;\n",
        "        }#T_b6e385d8_ef94_11ea_bb46_525400366c7erow8_col13,#T_b6e385d8_ef94_11ea_bb46_525400366c7erow13_col8{\n",
        "            background-color:  #97b7d7;\n",
        "            color:  #000000;\n",
        "        }#T_b6e385d8_ef94_11ea_bb46_525400366c7erow8_col14,#T_b6e385d8_ef94_11ea_bb46_525400366c7erow10_col14,#T_b6e385d8_ef94_11ea_bb46_525400366c7erow14_col8,#T_b6e385d8_ef94_11ea_bb46_525400366c7erow14_col10{\n",
        "            background-color:  #529bc7;\n",
        "            color:  #000000;\n",
        "        }#T_b6e385d8_ef94_11ea_bb46_525400366c7erow8_col16,#T_b6e385d8_ef94_11ea_bb46_525400366c7erow16_col8{\n",
        "            background-color:  #157ab5;\n",
        "            color:  #000000;\n",
        "        }#T_b6e385d8_ef94_11ea_bb46_525400366c7erow9_col10,#T_b6e385d8_ef94_11ea_bb46_525400366c7erow10_col9,#T_b6e385d8_ef94_11ea_bb46_525400366c7erow12_col16,#T_b6e385d8_ef94_11ea_bb46_525400366c7erow16_col12{\n",
        "            background-color:  #1379b5;\n",
        "            color:  #f1f1f1;\n",
        "        }#T_b6e385d8_ef94_11ea_bb46_525400366c7erow9_col11,#T_b6e385d8_ef94_11ea_bb46_525400366c7erow9_col16,#T_b6e385d8_ef94_11ea_bb46_525400366c7erow11_col9,#T_b6e385d8_ef94_11ea_bb46_525400366c7erow16_col9{\n",
        "            background-color:  #04629a;\n",
        "            color:  #f1f1f1;\n",
        "        }#T_b6e385d8_ef94_11ea_bb46_525400366c7erow9_col12,#T_b6e385d8_ef94_11ea_bb46_525400366c7erow12_col9{\n",
        "            background-color:  #2a88bc;\n",
        "            color:  #000000;\n",
        "        }#T_b6e385d8_ef94_11ea_bb46_525400366c7erow9_col14,#T_b6e385d8_ef94_11ea_bb46_525400366c7erow14_col9{\n",
        "            background-color:  #6da6cd;\n",
        "            color:  #000000;\n",
        "        }#T_b6e385d8_ef94_11ea_bb46_525400366c7erow9_col15,#T_b6e385d8_ef94_11ea_bb46_525400366c7erow15_col9{\n",
        "            background-color:  #e0dded;\n",
        "            color:  #000000;\n",
        "        }#T_b6e385d8_ef94_11ea_bb46_525400366c7erow10_col11,#T_b6e385d8_ef94_11ea_bb46_525400366c7erow11_col10{\n",
        "            background-color:  #04649e;\n",
        "            color:  #f1f1f1;\n",
        "        }#T_b6e385d8_ef94_11ea_bb46_525400366c7erow10_col12,#T_b6e385d8_ef94_11ea_bb46_525400366c7erow12_col10{\n",
        "            background-color:  #4c99c5;\n",
        "            color:  #000000;\n",
        "        }#T_b6e385d8_ef94_11ea_bb46_525400366c7erow10_col13,#T_b6e385d8_ef94_11ea_bb46_525400366c7erow13_col10{\n",
        "            background-color:  #a4bcda;\n",
        "            color:  #000000;\n",
        "        }#T_b6e385d8_ef94_11ea_bb46_525400366c7erow10_col16,#T_b6e385d8_ef94_11ea_bb46_525400366c7erow16_col10{\n",
        "            background-color:  #05659f;\n",
        "            color:  #f1f1f1;\n",
        "        }#T_b6e385d8_ef94_11ea_bb46_525400366c7erow11_col12,#T_b6e385d8_ef94_11ea_bb46_525400366c7erow12_col11{\n",
        "            background-color:  #4897c4;\n",
        "            color:  #000000;\n",
        "        }#T_b6e385d8_ef94_11ea_bb46_525400366c7erow11_col14,#T_b6e385d8_ef94_11ea_bb46_525400366c7erow14_col11{\n",
        "            background-color:  #549cc7;\n",
        "            color:  #000000;\n",
        "        }#T_b6e385d8_ef94_11ea_bb46_525400366c7erow11_col15,#T_b6e385d8_ef94_11ea_bb46_525400366c7erow15_col11{\n",
        "            background-color:  #e8e4f0;\n",
        "            color:  #000000;\n",
        "        }#T_b6e385d8_ef94_11ea_bb46_525400366c7erow11_col16,#T_b6e385d8_ef94_11ea_bb46_525400366c7erow16_col11{\n",
        "            background-color:  #046097;\n",
        "            color:  #f1f1f1;\n",
        "        }#T_b6e385d8_ef94_11ea_bb46_525400366c7erow12_col13,#T_b6e385d8_ef94_11ea_bb46_525400366c7erow13_col12{\n",
        "            background-color:  #9ab8d8;\n",
        "            color:  #000000;\n",
        "        }#T_b6e385d8_ef94_11ea_bb46_525400366c7erow13_col14,#T_b6e385d8_ef94_11ea_bb46_525400366c7erow14_col13{\n",
        "            background-color:  #8eb3d5;\n",
        "            color:  #000000;\n",
        "        }#T_b6e385d8_ef94_11ea_bb46_525400366c7erow14_col15,#T_b6e385d8_ef94_11ea_bb46_525400366c7erow15_col14{\n",
        "            background-color:  #79abd0;\n",
        "            color:  #000000;\n",
        "        }#T_b6e385d8_ef94_11ea_bb46_525400366c7erow15_col16,#T_b6e385d8_ef94_11ea_bb46_525400366c7erow16_col15{\n",
        "            background-color:  #e6e2ef;\n",
        "            color:  #000000;\n",
        "        }</style><table id=\"T_b6e385d8_ef94_11ea_bb46_525400366c7e\" ><thead>    <tr>        <th class=\"blank level0\" ></th>        <th class=\"col_heading level0 col0\" >Rt</th>        <th class=\"col_heading level0 col1\" >theta</th>        <th class=\"col_heading level0 col2\" >kappa</th>        <th class=\"col_heading level0 col3\" >rho</th>        <th class=\"col_heading level0 col4\" >sigma</th>        <th class=\"col_heading level0 col5\" >School_closing</th>        <th class=\"col_heading level0 col6\" >Workplace_closing</th>        <th class=\"col_heading level0 col7\" >Cancel_events</th>        <th class=\"col_heading level0 col8\" >Gatherings_restrictions</th>        <th class=\"col_heading level0 col9\" >Transport_closing</th>        <th class=\"col_heading level0 col10\" >Stay_home_restrictions</th>        <th class=\"col_heading level0 col11\" >Internal_movement_restrictions</th>        <th class=\"col_heading level0 col12\" >International_movement_restrictions</th>        <th class=\"col_heading level0 col13\" >Information_campaigns</th>        <th class=\"col_heading level0 col14\" >Testing_policy</th>        <th class=\"col_heading level0 col15\" >Contact_tracing</th>        <th class=\"col_heading level0 col16\" >Stringency_index</th>    </tr></thead><tbody>\n",
        "                <tr>\n",
        "                        <th id=\"T_b6e385d8_ef94_11ea_bb46_525400366c7elevel0_row0\" class=\"row_heading level0 row0\" >Rt</th>\n",
        "                        <td id=\"T_b6e385d8_ef94_11ea_bb46_525400366c7erow0_col0\" class=\"data row0 col0\" >1.000000</td>\n",
        "                        <td id=\"T_b6e385d8_ef94_11ea_bb46_525400366c7erow0_col1\" class=\"data row0 col1\" >-0.115741</td>\n",
        "                        <td id=\"T_b6e385d8_ef94_11ea_bb46_525400366c7erow0_col2\" class=\"data row0 col2\" >-0.026381</td>\n",
        "                        <td id=\"T_b6e385d8_ef94_11ea_bb46_525400366c7erow0_col3\" class=\"data row0 col3\" >0.260797</td>\n",
        "                        <td id=\"T_b6e385d8_ef94_11ea_bb46_525400366c7erow0_col4\" class=\"data row0 col4\" >-0.216758</td>\n",
        "                        <td id=\"T_b6e385d8_ef94_11ea_bb46_525400366c7erow0_col5\" class=\"data row0 col5\" >-0.164093</td>\n",
        "                        <td id=\"T_b6e385d8_ef94_11ea_bb46_525400366c7erow0_col6\" class=\"data row0 col6\" >-0.050381</td>\n",
        "                        <td id=\"T_b6e385d8_ef94_11ea_bb46_525400366c7erow0_col7\" class=\"data row0 col7\" >0.047212</td>\n",
        "                        <td id=\"T_b6e385d8_ef94_11ea_bb46_525400366c7erow0_col8\" class=\"data row0 col8\" >0.116458</td>\n",
        "                        <td id=\"T_b6e385d8_ef94_11ea_bb46_525400366c7erow0_col9\" class=\"data row0 col9\" >-0.068334</td>\n",
        "                        <td id=\"T_b6e385d8_ef94_11ea_bb46_525400366c7erow0_col10\" class=\"data row0 col10\" >-0.000474</td>\n",
        "                        <td id=\"T_b6e385d8_ef94_11ea_bb46_525400366c7erow0_col11\" class=\"data row0 col11\" >0.004133</td>\n",
        "                        <td id=\"T_b6e385d8_ef94_11ea_bb46_525400366c7erow0_col12\" class=\"data row0 col12\" >-0.289930</td>\n",
        "                        <td id=\"T_b6e385d8_ef94_11ea_bb46_525400366c7erow0_col13\" class=\"data row0 col13\" >0.016915</td>\n",
        "                        <td id=\"T_b6e385d8_ef94_11ea_bb46_525400366c7erow0_col14\" class=\"data row0 col14\" >-0.078843</td>\n",
        "                        <td id=\"T_b6e385d8_ef94_11ea_bb46_525400366c7erow0_col15\" class=\"data row0 col15\" >-0.159003</td>\n",
        "                        <td id=\"T_b6e385d8_ef94_11ea_bb46_525400366c7erow0_col16\" class=\"data row0 col16\" >-0.077174</td>\n",
        "            </tr>\n",
        "            <tr>\n",
        "                        <th id=\"T_b6e385d8_ef94_11ea_bb46_525400366c7elevel0_row1\" class=\"row_heading level0 row1\" >theta</th>\n",
        "                        <td id=\"T_b6e385d8_ef94_11ea_bb46_525400366c7erow1_col0\" class=\"data row1 col0\" >-0.115741</td>\n",
        "                        <td id=\"T_b6e385d8_ef94_11ea_bb46_525400366c7erow1_col1\" class=\"data row1 col1\" >1.000000</td>\n",
        "                        <td id=\"T_b6e385d8_ef94_11ea_bb46_525400366c7erow1_col2\" class=\"data row1 col2\" >0.311592</td>\n",
        "                        <td id=\"T_b6e385d8_ef94_11ea_bb46_525400366c7erow1_col3\" class=\"data row1 col3\" >0.074618</td>\n",
        "                        <td id=\"T_b6e385d8_ef94_11ea_bb46_525400366c7erow1_col4\" class=\"data row1 col4\" >0.092141</td>\n",
        "                        <td id=\"T_b6e385d8_ef94_11ea_bb46_525400366c7erow1_col5\" class=\"data row1 col5\" >0.133933</td>\n",
        "                        <td id=\"T_b6e385d8_ef94_11ea_bb46_525400366c7erow1_col6\" class=\"data row1 col6\" >0.321659</td>\n",
        "                        <td id=\"T_b6e385d8_ef94_11ea_bb46_525400366c7erow1_col7\" class=\"data row1 col7\" >0.082864</td>\n",
        "                        <td id=\"T_b6e385d8_ef94_11ea_bb46_525400366c7erow1_col8\" class=\"data row1 col8\" >0.012138</td>\n",
        "                        <td id=\"T_b6e385d8_ef94_11ea_bb46_525400366c7erow1_col9\" class=\"data row1 col9\" >0.053145</td>\n",
        "                        <td id=\"T_b6e385d8_ef94_11ea_bb46_525400366c7erow1_col10\" class=\"data row1 col10\" >0.019199</td>\n",
        "                        <td id=\"T_b6e385d8_ef94_11ea_bb46_525400366c7erow1_col11\" class=\"data row1 col11\" >0.077457</td>\n",
        "                        <td id=\"T_b6e385d8_ef94_11ea_bb46_525400366c7erow1_col12\" class=\"data row1 col12\" >-0.060560</td>\n",
        "                        <td id=\"T_b6e385d8_ef94_11ea_bb46_525400366c7erow1_col13\" class=\"data row1 col13\" >0.014798</td>\n",
        "                        <td id=\"T_b6e385d8_ef94_11ea_bb46_525400366c7erow1_col14\" class=\"data row1 col14\" >-0.446814</td>\n",
        "                        <td id=\"T_b6e385d8_ef94_11ea_bb46_525400366c7erow1_col15\" class=\"data row1 col15\" >-0.117360</td>\n",
        "                        <td id=\"T_b6e385d8_ef94_11ea_bb46_525400366c7erow1_col16\" class=\"data row1 col16\" >0.313267</td>\n",
        "            </tr>\n",
        "            <tr>\n",
        "                        <th id=\"T_b6e385d8_ef94_11ea_bb46_525400366c7elevel0_row2\" class=\"row_heading level0 row2\" >kappa</th>\n",
        "                        <td id=\"T_b6e385d8_ef94_11ea_bb46_525400366c7erow2_col0\" class=\"data row2 col0\" >-0.026381</td>\n",
        "                        <td id=\"T_b6e385d8_ef94_11ea_bb46_525400366c7erow2_col1\" class=\"data row2 col1\" >0.311592</td>\n",
        "                        <td id=\"T_b6e385d8_ef94_11ea_bb46_525400366c7erow2_col2\" class=\"data row2 col2\" >1.000000</td>\n",
        "                        <td id=\"T_b6e385d8_ef94_11ea_bb46_525400366c7erow2_col3\" class=\"data row2 col3\" >0.469115</td>\n",
        "                        <td id=\"T_b6e385d8_ef94_11ea_bb46_525400366c7erow2_col4\" class=\"data row2 col4\" >0.416487</td>\n",
        "                        <td id=\"T_b6e385d8_ef94_11ea_bb46_525400366c7erow2_col5\" class=\"data row2 col5\" >0.253149</td>\n",
        "                        <td id=\"T_b6e385d8_ef94_11ea_bb46_525400366c7erow2_col6\" class=\"data row2 col6\" >0.276626</td>\n",
        "                        <td id=\"T_b6e385d8_ef94_11ea_bb46_525400366c7erow2_col7\" class=\"data row2 col7\" >-0.010832</td>\n",
        "                        <td id=\"T_b6e385d8_ef94_11ea_bb46_525400366c7erow2_col8\" class=\"data row2 col8\" >-0.247535</td>\n",
        "                        <td id=\"T_b6e385d8_ef94_11ea_bb46_525400366c7erow2_col9\" class=\"data row2 col9\" >-0.017558</td>\n",
        "                        <td id=\"T_b6e385d8_ef94_11ea_bb46_525400366c7erow2_col10\" class=\"data row2 col10\" >-0.032258</td>\n",
        "                        <td id=\"T_b6e385d8_ef94_11ea_bb46_525400366c7erow2_col11\" class=\"data row2 col11\" >-0.122293</td>\n",
        "                        <td id=\"T_b6e385d8_ef94_11ea_bb46_525400366c7erow2_col12\" class=\"data row2 col12\" >-0.115797</td>\n",
        "                        <td id=\"T_b6e385d8_ef94_11ea_bb46_525400366c7erow2_col13\" class=\"data row2 col13\" >-0.122603</td>\n",
        "                        <td id=\"T_b6e385d8_ef94_11ea_bb46_525400366c7erow2_col14\" class=\"data row2 col14\" >-0.504443</td>\n",
        "                        <td id=\"T_b6e385d8_ef94_11ea_bb46_525400366c7erow2_col15\" class=\"data row2 col15\" >-0.124727</td>\n",
        "                        <td id=\"T_b6e385d8_ef94_11ea_bb46_525400366c7erow2_col16\" class=\"data row2 col16\" >0.192657</td>\n",
        "            </tr>\n",
        "            <tr>\n",
        "                        <th id=\"T_b6e385d8_ef94_11ea_bb46_525400366c7elevel0_row3\" class=\"row_heading level0 row3\" >rho</th>\n",
        "                        <td id=\"T_b6e385d8_ef94_11ea_bb46_525400366c7erow3_col0\" class=\"data row3 col0\" >0.260797</td>\n",
        "                        <td id=\"T_b6e385d8_ef94_11ea_bb46_525400366c7erow3_col1\" class=\"data row3 col1\" >0.074618</td>\n",
        "                        <td id=\"T_b6e385d8_ef94_11ea_bb46_525400366c7erow3_col2\" class=\"data row3 col2\" >0.469115</td>\n",
        "                        <td id=\"T_b6e385d8_ef94_11ea_bb46_525400366c7erow3_col3\" class=\"data row3 col3\" >1.000000</td>\n",
        "                        <td id=\"T_b6e385d8_ef94_11ea_bb46_525400366c7erow3_col4\" class=\"data row3 col4\" >0.619982</td>\n",
        "                        <td id=\"T_b6e385d8_ef94_11ea_bb46_525400366c7erow3_col5\" class=\"data row3 col5\" >0.229054</td>\n",
        "                        <td id=\"T_b6e385d8_ef94_11ea_bb46_525400366c7erow3_col6\" class=\"data row3 col6\" >0.126210</td>\n",
        "                        <td id=\"T_b6e385d8_ef94_11ea_bb46_525400366c7erow3_col7\" class=\"data row3 col7\" >-0.203056</td>\n",
        "                        <td id=\"T_b6e385d8_ef94_11ea_bb46_525400366c7erow3_col8\" class=\"data row3 col8\" >-0.178676</td>\n",
        "                        <td id=\"T_b6e385d8_ef94_11ea_bb46_525400366c7erow3_col9\" class=\"data row3 col9\" >-0.032344</td>\n",
        "                        <td id=\"T_b6e385d8_ef94_11ea_bb46_525400366c7erow3_col10\" class=\"data row3 col10\" >-0.018676</td>\n",
        "                        <td id=\"T_b6e385d8_ef94_11ea_bb46_525400366c7erow3_col11\" class=\"data row3 col11\" >-0.130242</td>\n",
        "                        <td id=\"T_b6e385d8_ef94_11ea_bb46_525400366c7erow3_col12\" class=\"data row3 col12\" >0.024496</td>\n",
        "                        <td id=\"T_b6e385d8_ef94_11ea_bb46_525400366c7erow3_col13\" class=\"data row3 col13\" >-0.094489</td>\n",
        "                        <td id=\"T_b6e385d8_ef94_11ea_bb46_525400366c7erow3_col14\" class=\"data row3 col14\" >-0.350788</td>\n",
        "                        <td id=\"T_b6e385d8_ef94_11ea_bb46_525400366c7erow3_col15\" class=\"data row3 col15\" >-0.181187</td>\n",
        "                        <td id=\"T_b6e385d8_ef94_11ea_bb46_525400366c7erow3_col16\" class=\"data row3 col16\" >0.080096</td>\n",
        "            </tr>\n",
        "            <tr>\n",
        "                        <th id=\"T_b6e385d8_ef94_11ea_bb46_525400366c7elevel0_row4\" class=\"row_heading level0 row4\" >sigma</th>\n",
        "                        <td id=\"T_b6e385d8_ef94_11ea_bb46_525400366c7erow4_col0\" class=\"data row4 col0\" >-0.216758</td>\n",
        "                        <td id=\"T_b6e385d8_ef94_11ea_bb46_525400366c7erow4_col1\" class=\"data row4 col1\" >0.092141</td>\n",
        "                        <td id=\"T_b6e385d8_ef94_11ea_bb46_525400366c7erow4_col2\" class=\"data row4 col2\" >0.416487</td>\n",
        "                        <td id=\"T_b6e385d8_ef94_11ea_bb46_525400366c7erow4_col3\" class=\"data row4 col3\" >0.619982</td>\n",
        "                        <td id=\"T_b6e385d8_ef94_11ea_bb46_525400366c7erow4_col4\" class=\"data row4 col4\" >1.000000</td>\n",
        "                        <td id=\"T_b6e385d8_ef94_11ea_bb46_525400366c7erow4_col5\" class=\"data row4 col5\" >0.192965</td>\n",
        "                        <td id=\"T_b6e385d8_ef94_11ea_bb46_525400366c7erow4_col6\" class=\"data row4 col6\" >-0.070349</td>\n",
        "                        <td id=\"T_b6e385d8_ef94_11ea_bb46_525400366c7erow4_col7\" class=\"data row4 col7\" >-0.257334</td>\n",
        "                        <td id=\"T_b6e385d8_ef94_11ea_bb46_525400366c7erow4_col8\" class=\"data row4 col8\" >-0.509324</td>\n",
        "                        <td id=\"T_b6e385d8_ef94_11ea_bb46_525400366c7erow4_col9\" class=\"data row4 col9\" >-0.162861</td>\n",
        "                        <td id=\"T_b6e385d8_ef94_11ea_bb46_525400366c7erow4_col10\" class=\"data row4 col10\" >-0.194083</td>\n",
        "                        <td id=\"T_b6e385d8_ef94_11ea_bb46_525400366c7erow4_col11\" class=\"data row4 col11\" >-0.315484</td>\n",
        "                        <td id=\"T_b6e385d8_ef94_11ea_bb46_525400366c7erow4_col12\" class=\"data row4 col12\" >0.006595</td>\n",
        "                        <td id=\"T_b6e385d8_ef94_11ea_bb46_525400366c7erow4_col13\" class=\"data row4 col13\" >-0.122842</td>\n",
        "                        <td id=\"T_b6e385d8_ef94_11ea_bb46_525400366c7erow4_col14\" class=\"data row4 col14\" >-0.363881</td>\n",
        "                        <td id=\"T_b6e385d8_ef94_11ea_bb46_525400366c7erow4_col15\" class=\"data row4 col15\" >0.041442</td>\n",
        "                        <td id=\"T_b6e385d8_ef94_11ea_bb46_525400366c7erow4_col16\" class=\"data row4 col16\" >-0.097320</td>\n",
        "            </tr>\n",
        "            <tr>\n",
        "                        <th id=\"T_b6e385d8_ef94_11ea_bb46_525400366c7elevel0_row5\" class=\"row_heading level0 row5\" >School_closing</th>\n",
        "                        <td id=\"T_b6e385d8_ef94_11ea_bb46_525400366c7erow5_col0\" class=\"data row5 col0\" >-0.164093</td>\n",
        "                        <td id=\"T_b6e385d8_ef94_11ea_bb46_525400366c7erow5_col1\" class=\"data row5 col1\" >0.133933</td>\n",
        "                        <td id=\"T_b6e385d8_ef94_11ea_bb46_525400366c7erow5_col2\" class=\"data row5 col2\" >0.253149</td>\n",
        "                        <td id=\"T_b6e385d8_ef94_11ea_bb46_525400366c7erow5_col3\" class=\"data row5 col3\" >0.229054</td>\n",
        "                        <td id=\"T_b6e385d8_ef94_11ea_bb46_525400366c7erow5_col4\" class=\"data row5 col4\" >0.192965</td>\n",
        "                        <td id=\"T_b6e385d8_ef94_11ea_bb46_525400366c7erow5_col5\" class=\"data row5 col5\" >1.000000</td>\n",
        "                        <td id=\"T_b6e385d8_ef94_11ea_bb46_525400366c7erow5_col6\" class=\"data row5 col6\" >0.526693</td>\n",
        "                        <td id=\"T_b6e385d8_ef94_11ea_bb46_525400366c7erow5_col7\" class=\"data row5 col7\" >0.216954</td>\n",
        "                        <td id=\"T_b6e385d8_ef94_11ea_bb46_525400366c7erow5_col8\" class=\"data row5 col8\" >-0.025713</td>\n",
        "                        <td id=\"T_b6e385d8_ef94_11ea_bb46_525400366c7erow5_col9\" class=\"data row5 col9\" >0.332600</td>\n",
        "                        <td id=\"T_b6e385d8_ef94_11ea_bb46_525400366c7erow5_col10\" class=\"data row5 col10\" >0.248147</td>\n",
        "                        <td id=\"T_b6e385d8_ef94_11ea_bb46_525400366c7erow5_col11\" class=\"data row5 col11\" >0.238944</td>\n",
        "                        <td id=\"T_b6e385d8_ef94_11ea_bb46_525400366c7erow5_col12\" class=\"data row5 col12\" >0.486172</td>\n",
        "                        <td id=\"T_b6e385d8_ef94_11ea_bb46_525400366c7erow5_col13\" class=\"data row5 col13\" >0.022199</td>\n",
        "                        <td id=\"T_b6e385d8_ef94_11ea_bb46_525400366c7erow5_col14\" class=\"data row5 col14\" >0.060756</td>\n",
        "                        <td id=\"T_b6e385d8_ef94_11ea_bb46_525400366c7erow5_col15\" class=\"data row5 col15\" >-0.374355</td>\n",
        "                        <td id=\"T_b6e385d8_ef94_11ea_bb46_525400366c7erow5_col16\" class=\"data row5 col16\" >0.544563</td>\n",
        "            </tr>\n",
        "            <tr>\n",
        "                        <th id=\"T_b6e385d8_ef94_11ea_bb46_525400366c7elevel0_row6\" class=\"row_heading level0 row6\" >Workplace_closing</th>\n",
        "                        <td id=\"T_b6e385d8_ef94_11ea_bb46_525400366c7erow6_col0\" class=\"data row6 col0\" >-0.050381</td>\n",
        "                        <td id=\"T_b6e385d8_ef94_11ea_bb46_525400366c7erow6_col1\" class=\"data row6 col1\" >0.321659</td>\n",
        "                        <td id=\"T_b6e385d8_ef94_11ea_bb46_525400366c7erow6_col2\" class=\"data row6 col2\" >0.276626</td>\n",
        "                        <td id=\"T_b6e385d8_ef94_11ea_bb46_525400366c7erow6_col3\" class=\"data row6 col3\" >0.126210</td>\n",
        "                        <td id=\"T_b6e385d8_ef94_11ea_bb46_525400366c7erow6_col4\" class=\"data row6 col4\" >-0.070349</td>\n",
        "                        <td id=\"T_b6e385d8_ef94_11ea_bb46_525400366c7erow6_col5\" class=\"data row6 col5\" >0.526693</td>\n",
        "                        <td id=\"T_b6e385d8_ef94_11ea_bb46_525400366c7erow6_col6\" class=\"data row6 col6\" >1.000000</td>\n",
        "                        <td id=\"T_b6e385d8_ef94_11ea_bb46_525400366c7erow6_col7\" class=\"data row6 col7\" >0.143111</td>\n",
        "                        <td id=\"T_b6e385d8_ef94_11ea_bb46_525400366c7erow6_col8\" class=\"data row6 col8\" >0.256710</td>\n",
        "                        <td id=\"T_b6e385d8_ef94_11ea_bb46_525400366c7erow6_col9\" class=\"data row6 col9\" >0.487284</td>\n",
        "                        <td id=\"T_b6e385d8_ef94_11ea_bb46_525400366c7erow6_col10\" class=\"data row6 col10\" >0.417495</td>\n",
        "                        <td id=\"T_b6e385d8_ef94_11ea_bb46_525400366c7erow6_col11\" class=\"data row6 col11\" >0.403712</td>\n",
        "                        <td id=\"T_b6e385d8_ef94_11ea_bb46_525400366c7erow6_col12\" class=\"data row6 col12\" >0.298775</td>\n",
        "                        <td id=\"T_b6e385d8_ef94_11ea_bb46_525400366c7erow6_col13\" class=\"data row6 col13\" >0.055245</td>\n",
        "                        <td id=\"T_b6e385d8_ef94_11ea_bb46_525400366c7erow6_col14\" class=\"data row6 col14\" >0.015464</td>\n",
        "                        <td id=\"T_b6e385d8_ef94_11ea_bb46_525400366c7erow6_col15\" class=\"data row6 col15\" >-0.334265</td>\n",
        "                        <td id=\"T_b6e385d8_ef94_11ea_bb46_525400366c7erow6_col16\" class=\"data row6 col16\" >0.644025</td>\n",
        "            </tr>\n",
        "            <tr>\n",
        "                        <th id=\"T_b6e385d8_ef94_11ea_bb46_525400366c7elevel0_row7\" class=\"row_heading level0 row7\" >Cancel_events</th>\n",
        "                        <td id=\"T_b6e385d8_ef94_11ea_bb46_525400366c7erow7_col0\" class=\"data row7 col0\" >0.047212</td>\n",
        "                        <td id=\"T_b6e385d8_ef94_11ea_bb46_525400366c7erow7_col1\" class=\"data row7 col1\" >0.082864</td>\n",
        "                        <td id=\"T_b6e385d8_ef94_11ea_bb46_525400366c7erow7_col2\" class=\"data row7 col2\" >-0.010832</td>\n",
        "                        <td id=\"T_b6e385d8_ef94_11ea_bb46_525400366c7erow7_col3\" class=\"data row7 col3\" >-0.203056</td>\n",
        "                        <td id=\"T_b6e385d8_ef94_11ea_bb46_525400366c7erow7_col4\" class=\"data row7 col4\" >-0.257334</td>\n",
        "                        <td id=\"T_b6e385d8_ef94_11ea_bb46_525400366c7erow7_col5\" class=\"data row7 col5\" >0.216954</td>\n",
        "                        <td id=\"T_b6e385d8_ef94_11ea_bb46_525400366c7erow7_col6\" class=\"data row7 col6\" >0.143111</td>\n",
        "                        <td id=\"T_b6e385d8_ef94_11ea_bb46_525400366c7erow7_col7\" class=\"data row7 col7\" >1.000000</td>\n",
        "                        <td id=\"T_b6e385d8_ef94_11ea_bb46_525400366c7erow7_col8\" class=\"data row7 col8\" >0.451150</td>\n",
        "                        <td id=\"T_b6e385d8_ef94_11ea_bb46_525400366c7erow7_col9\" class=\"data row7 col9\" >0.323007</td>\n",
        "                        <td id=\"T_b6e385d8_ef94_11ea_bb46_525400366c7erow7_col10\" class=\"data row7 col10\" >0.503384</td>\n",
        "                        <td id=\"T_b6e385d8_ef94_11ea_bb46_525400366c7erow7_col11\" class=\"data row7 col11\" >0.548917</td>\n",
        "                        <td id=\"T_b6e385d8_ef94_11ea_bb46_525400366c7erow7_col12\" class=\"data row7 col12\" >0.032546</td>\n",
        "                        <td id=\"T_b6e385d8_ef94_11ea_bb46_525400366c7erow7_col13\" class=\"data row7 col13\" >0.060425</td>\n",
        "                        <td id=\"T_b6e385d8_ef94_11ea_bb46_525400366c7erow7_col14\" class=\"data row7 col14\" >0.180519</td>\n",
        "                        <td id=\"T_b6e385d8_ef94_11ea_bb46_525400366c7erow7_col15\" class=\"data row7 col15\" >-0.114029</td>\n",
        "                        <td id=\"T_b6e385d8_ef94_11ea_bb46_525400366c7erow7_col16\" class=\"data row7 col16\" >0.539109</td>\n",
        "            </tr>\n",
        "            <tr>\n",
        "                        <th id=\"T_b6e385d8_ef94_11ea_bb46_525400366c7elevel0_row8\" class=\"row_heading level0 row8\" >Gatherings_restrictions</th>\n",
        "                        <td id=\"T_b6e385d8_ef94_11ea_bb46_525400366c7erow8_col0\" class=\"data row8 col0\" >0.116458</td>\n",
        "                        <td id=\"T_b6e385d8_ef94_11ea_bb46_525400366c7erow8_col1\" class=\"data row8 col1\" >0.012138</td>\n",
        "                        <td id=\"T_b6e385d8_ef94_11ea_bb46_525400366c7erow8_col2\" class=\"data row8 col2\" >-0.247535</td>\n",
        "                        <td id=\"T_b6e385d8_ef94_11ea_bb46_525400366c7erow8_col3\" class=\"data row8 col3\" >-0.178676</td>\n",
        "                        <td id=\"T_b6e385d8_ef94_11ea_bb46_525400366c7erow8_col4\" class=\"data row8 col4\" >-0.509324</td>\n",
        "                        <td id=\"T_b6e385d8_ef94_11ea_bb46_525400366c7erow8_col5\" class=\"data row8 col5\" >-0.025713</td>\n",
        "                        <td id=\"T_b6e385d8_ef94_11ea_bb46_525400366c7erow8_col6\" class=\"data row8 col6\" >0.256710</td>\n",
        "                        <td id=\"T_b6e385d8_ef94_11ea_bb46_525400366c7erow8_col7\" class=\"data row8 col7\" >0.451150</td>\n",
        "                        <td id=\"T_b6e385d8_ef94_11ea_bb46_525400366c7erow8_col8\" class=\"data row8 col8\" >1.000000</td>\n",
        "                        <td id=\"T_b6e385d8_ef94_11ea_bb46_525400366c7erow8_col9\" class=\"data row8 col9\" >0.551642</td>\n",
        "                        <td id=\"T_b6e385d8_ef94_11ea_bb46_525400366c7erow8_col10\" class=\"data row8 col10\" >0.548261</td>\n",
        "                        <td id=\"T_b6e385d8_ef94_11ea_bb46_525400366c7erow8_col11\" class=\"data row8 col11\" >0.693721</td>\n",
        "                        <td id=\"T_b6e385d8_ef94_11ea_bb46_525400366c7erow8_col12\" class=\"data row8 col12\" >0.232154</td>\n",
        "                        <td id=\"T_b6e385d8_ef94_11ea_bb46_525400366c7erow8_col13\" class=\"data row8 col13\" >0.113956</td>\n",
        "                        <td id=\"T_b6e385d8_ef94_11ea_bb46_525400366c7erow8_col14\" class=\"data row8 col14\" >0.346914</td>\n",
        "                        <td id=\"T_b6e385d8_ef94_11ea_bb46_525400366c7erow8_col15\" class=\"data row8 col15\" >-0.219568</td>\n",
        "                        <td id=\"T_b6e385d8_ef94_11ea_bb46_525400366c7erow8_col16\" class=\"data row8 col16\" >0.559137</td>\n",
        "            </tr>\n",
        "            <tr>\n",
        "                        <th id=\"T_b6e385d8_ef94_11ea_bb46_525400366c7elevel0_row9\" class=\"row_heading level0 row9\" >Transport_closing</th>\n",
        "                        <td id=\"T_b6e385d8_ef94_11ea_bb46_525400366c7erow9_col0\" class=\"data row9 col0\" >-0.068334</td>\n",
        "                        <td id=\"T_b6e385d8_ef94_11ea_bb46_525400366c7erow9_col1\" class=\"data row9 col1\" >0.053145</td>\n",
        "                        <td id=\"T_b6e385d8_ef94_11ea_bb46_525400366c7erow9_col2\" class=\"data row9 col2\" >-0.017558</td>\n",
        "                        <td id=\"T_b6e385d8_ef94_11ea_bb46_525400366c7erow9_col3\" class=\"data row9 col3\" >-0.032344</td>\n",
        "                        <td id=\"T_b6e385d8_ef94_11ea_bb46_525400366c7erow9_col4\" class=\"data row9 col4\" >-0.162861</td>\n",
        "                        <td id=\"T_b6e385d8_ef94_11ea_bb46_525400366c7erow9_col5\" class=\"data row9 col5\" >0.332600</td>\n",
        "                        <td id=\"T_b6e385d8_ef94_11ea_bb46_525400366c7erow9_col6\" class=\"data row9 col6\" >0.487284</td>\n",
        "                        <td id=\"T_b6e385d8_ef94_11ea_bb46_525400366c7erow9_col7\" class=\"data row9 col7\" >0.323007</td>\n",
        "                        <td id=\"T_b6e385d8_ef94_11ea_bb46_525400366c7erow9_col8\" class=\"data row9 col8\" >0.551642</td>\n",
        "                        <td id=\"T_b6e385d8_ef94_11ea_bb46_525400366c7erow9_col9\" class=\"data row9 col9\" >1.000000</td>\n",
        "                        <td id=\"T_b6e385d8_ef94_11ea_bb46_525400366c7erow9_col10\" class=\"data row9 col10\" >0.566785</td>\n",
        "                        <td id=\"T_b6e385d8_ef94_11ea_bb46_525400366c7erow9_col11\" class=\"data row9 col11\" >0.737097</td>\n",
        "                        <td id=\"T_b6e385d8_ef94_11ea_bb46_525400366c7erow9_col12\" class=\"data row9 col12\" >0.478164</td>\n",
        "                        <td id=\"T_b6e385d8_ef94_11ea_bb46_525400366c7erow9_col13\" class=\"data row9 col13\" >-0.051541</td>\n",
        "                        <td id=\"T_b6e385d8_ef94_11ea_bb46_525400366c7erow9_col14\" class=\"data row9 col14\" >0.265243</td>\n",
        "                        <td id=\"T_b6e385d8_ef94_11ea_bb46_525400366c7erow9_col15\" class=\"data row9 col15\" >-0.235718</td>\n",
        "                        <td id=\"T_b6e385d8_ef94_11ea_bb46_525400366c7erow9_col16\" class=\"data row9 col16\" >0.740568</td>\n",
        "            </tr>\n",
        "            <tr>\n",
        "                        <th id=\"T_b6e385d8_ef94_11ea_bb46_525400366c7elevel0_row10\" class=\"row_heading level0 row10\" >Stay_home_restrictions</th>\n",
        "                        <td id=\"T_b6e385d8_ef94_11ea_bb46_525400366c7erow10_col0\" class=\"data row10 col0\" >-0.000474</td>\n",
        "                        <td id=\"T_b6e385d8_ef94_11ea_bb46_525400366c7erow10_col1\" class=\"data row10 col1\" >0.019199</td>\n",
        "                        <td id=\"T_b6e385d8_ef94_11ea_bb46_525400366c7erow10_col2\" class=\"data row10 col2\" >-0.032258</td>\n",
        "                        <td id=\"T_b6e385d8_ef94_11ea_bb46_525400366c7erow10_col3\" class=\"data row10 col3\" >-0.018676</td>\n",
        "                        <td id=\"T_b6e385d8_ef94_11ea_bb46_525400366c7erow10_col4\" class=\"data row10 col4\" >-0.194083</td>\n",
        "                        <td id=\"T_b6e385d8_ef94_11ea_bb46_525400366c7erow10_col5\" class=\"data row10 col5\" >0.248147</td>\n",
        "                        <td id=\"T_b6e385d8_ef94_11ea_bb46_525400366c7erow10_col6\" class=\"data row10 col6\" >0.417495</td>\n",
        "                        <td id=\"T_b6e385d8_ef94_11ea_bb46_525400366c7erow10_col7\" class=\"data row10 col7\" >0.503384</td>\n",
        "                        <td id=\"T_b6e385d8_ef94_11ea_bb46_525400366c7erow10_col8\" class=\"data row10 col8\" >0.548261</td>\n",
        "                        <td id=\"T_b6e385d8_ef94_11ea_bb46_525400366c7erow10_col9\" class=\"data row10 col9\" >0.566785</td>\n",
        "                        <td id=\"T_b6e385d8_ef94_11ea_bb46_525400366c7erow10_col10\" class=\"data row10 col10\" >1.000000</td>\n",
        "                        <td id=\"T_b6e385d8_ef94_11ea_bb46_525400366c7erow10_col11\" class=\"data row10 col11\" >0.720365</td>\n",
        "                        <td id=\"T_b6e385d8_ef94_11ea_bb46_525400366c7erow10_col12\" class=\"data row10 col12\" >0.367298</td>\n",
        "                        <td id=\"T_b6e385d8_ef94_11ea_bb46_525400366c7erow10_col13\" class=\"data row10 col13\" >0.068224</td>\n",
        "                        <td id=\"T_b6e385d8_ef94_11ea_bb46_525400366c7erow10_col14\" class=\"data row10 col14\" >0.347080</td>\n",
        "                        <td id=\"T_b6e385d8_ef94_11ea_bb46_525400366c7erow10_col15\" class=\"data row10 col15\" >0.013824</td>\n",
        "                        <td id=\"T_b6e385d8_ef94_11ea_bb46_525400366c7erow10_col16\" class=\"data row10 col16\" >0.712804</td>\n",
        "            </tr>\n",
        "            <tr>\n",
        "                        <th id=\"T_b6e385d8_ef94_11ea_bb46_525400366c7elevel0_row11\" class=\"row_heading level0 row11\" >Internal_movement_restrictions</th>\n",
        "                        <td id=\"T_b6e385d8_ef94_11ea_bb46_525400366c7erow11_col0\" class=\"data row11 col0\" >0.004133</td>\n",
        "                        <td id=\"T_b6e385d8_ef94_11ea_bb46_525400366c7erow11_col1\" class=\"data row11 col1\" >0.077457</td>\n",
        "                        <td id=\"T_b6e385d8_ef94_11ea_bb46_525400366c7erow11_col2\" class=\"data row11 col2\" >-0.122293</td>\n",
        "                        <td id=\"T_b6e385d8_ef94_11ea_bb46_525400366c7erow11_col3\" class=\"data row11 col3\" >-0.130242</td>\n",
        "                        <td id=\"T_b6e385d8_ef94_11ea_bb46_525400366c7erow11_col4\" class=\"data row11 col4\" >-0.315484</td>\n",
        "                        <td id=\"T_b6e385d8_ef94_11ea_bb46_525400366c7erow11_col5\" class=\"data row11 col5\" >0.238944</td>\n",
        "                        <td id=\"T_b6e385d8_ef94_11ea_bb46_525400366c7erow11_col6\" class=\"data row11 col6\" >0.403712</td>\n",
        "                        <td id=\"T_b6e385d8_ef94_11ea_bb46_525400366c7erow11_col7\" class=\"data row11 col7\" >0.548917</td>\n",
        "                        <td id=\"T_b6e385d8_ef94_11ea_bb46_525400366c7erow11_col8\" class=\"data row11 col8\" >0.693721</td>\n",
        "                        <td id=\"T_b6e385d8_ef94_11ea_bb46_525400366c7erow11_col9\" class=\"data row11 col9\" >0.737097</td>\n",
        "                        <td id=\"T_b6e385d8_ef94_11ea_bb46_525400366c7erow11_col10\" class=\"data row11 col10\" >0.720365</td>\n",
        "                        <td id=\"T_b6e385d8_ef94_11ea_bb46_525400366c7erow11_col11\" class=\"data row11 col11\" >1.000000</td>\n",
        "                        <td id=\"T_b6e385d8_ef94_11ea_bb46_525400366c7erow11_col12\" class=\"data row11 col12\" >0.379030</td>\n",
        "                        <td id=\"T_b6e385d8_ef94_11ea_bb46_525400366c7erow11_col13\" class=\"data row11 col13\" >0.011450</td>\n",
        "                        <td id=\"T_b6e385d8_ef94_11ea_bb46_525400366c7erow11_col14\" class=\"data row11 col14\" >0.343191</td>\n",
        "                        <td id=\"T_b6e385d8_ef94_11ea_bb46_525400366c7erow11_col15\" class=\"data row11 col15\" >-0.292289</td>\n",
        "                        <td id=\"T_b6e385d8_ef94_11ea_bb46_525400366c7erow11_col16\" class=\"data row11 col16\" >0.753266</td>\n",
        "            </tr>\n",
        "            <tr>\n",
        "                        <th id=\"T_b6e385d8_ef94_11ea_bb46_525400366c7elevel0_row12\" class=\"row_heading level0 row12\" >International_movement_restrictions</th>\n",
        "                        <td id=\"T_b6e385d8_ef94_11ea_bb46_525400366c7erow12_col0\" class=\"data row12 col0\" >-0.289930</td>\n",
        "                        <td id=\"T_b6e385d8_ef94_11ea_bb46_525400366c7erow12_col1\" class=\"data row12 col1\" >-0.060560</td>\n",
        "                        <td id=\"T_b6e385d8_ef94_11ea_bb46_525400366c7erow12_col2\" class=\"data row12 col2\" >-0.115797</td>\n",
        "                        <td id=\"T_b6e385d8_ef94_11ea_bb46_525400366c7erow12_col3\" class=\"data row12 col3\" >0.024496</td>\n",
        "                        <td id=\"T_b6e385d8_ef94_11ea_bb46_525400366c7erow12_col4\" class=\"data row12 col4\" >0.006595</td>\n",
        "                        <td id=\"T_b6e385d8_ef94_11ea_bb46_525400366c7erow12_col5\" class=\"data row12 col5\" >0.486172</td>\n",
        "                        <td id=\"T_b6e385d8_ef94_11ea_bb46_525400366c7erow12_col6\" class=\"data row12 col6\" >0.298775</td>\n",
        "                        <td id=\"T_b6e385d8_ef94_11ea_bb46_525400366c7erow12_col7\" class=\"data row12 col7\" >0.032546</td>\n",
        "                        <td id=\"T_b6e385d8_ef94_11ea_bb46_525400366c7erow12_col8\" class=\"data row12 col8\" >0.232154</td>\n",
        "                        <td id=\"T_b6e385d8_ef94_11ea_bb46_525400366c7erow12_col9\" class=\"data row12 col9\" >0.478164</td>\n",
        "                        <td id=\"T_b6e385d8_ef94_11ea_bb46_525400366c7erow12_col10\" class=\"data row12 col10\" >0.367298</td>\n",
        "                        <td id=\"T_b6e385d8_ef94_11ea_bb46_525400366c7erow12_col11\" class=\"data row12 col11\" >0.379030</td>\n",
        "                        <td id=\"T_b6e385d8_ef94_11ea_bb46_525400366c7erow12_col12\" class=\"data row12 col12\" >1.000000</td>\n",
        "                        <td id=\"T_b6e385d8_ef94_11ea_bb46_525400366c7erow12_col13\" class=\"data row12 col13\" >0.098744</td>\n",
        "                        <td id=\"T_b6e385d8_ef94_11ea_bb46_525400366c7erow12_col14\" class=\"data row12 col14\" >0.245892</td>\n",
        "                        <td id=\"T_b6e385d8_ef94_11ea_bb46_525400366c7erow12_col15\" class=\"data row12 col15\" >-0.035032</td>\n",
        "                        <td id=\"T_b6e385d8_ef94_11ea_bb46_525400366c7erow12_col16\" class=\"data row12 col16\" >0.565155</td>\n",
        "            </tr>\n",
        "            <tr>\n",
        "                        <th id=\"T_b6e385d8_ef94_11ea_bb46_525400366c7elevel0_row13\" class=\"row_heading level0 row13\" >Information_campaigns</th>\n",
        "                        <td id=\"T_b6e385d8_ef94_11ea_bb46_525400366c7erow13_col0\" class=\"data row13 col0\" >0.016915</td>\n",
        "                        <td id=\"T_b6e385d8_ef94_11ea_bb46_525400366c7erow13_col1\" class=\"data row13 col1\" >0.014798</td>\n",
        "                        <td id=\"T_b6e385d8_ef94_11ea_bb46_525400366c7erow13_col2\" class=\"data row13 col2\" >-0.122603</td>\n",
        "                        <td id=\"T_b6e385d8_ef94_11ea_bb46_525400366c7erow13_col3\" class=\"data row13 col3\" >-0.094489</td>\n",
        "                        <td id=\"T_b6e385d8_ef94_11ea_bb46_525400366c7erow13_col4\" class=\"data row13 col4\" >-0.122842</td>\n",
        "                        <td id=\"T_b6e385d8_ef94_11ea_bb46_525400366c7erow13_col5\" class=\"data row13 col5\" >0.022199</td>\n",
        "                        <td id=\"T_b6e385d8_ef94_11ea_bb46_525400366c7erow13_col6\" class=\"data row13 col6\" >0.055245</td>\n",
        "                        <td id=\"T_b6e385d8_ef94_11ea_bb46_525400366c7erow13_col7\" class=\"data row13 col7\" >0.060425</td>\n",
        "                        <td id=\"T_b6e385d8_ef94_11ea_bb46_525400366c7erow13_col8\" class=\"data row13 col8\" >0.113956</td>\n",
        "                        <td id=\"T_b6e385d8_ef94_11ea_bb46_525400366c7erow13_col9\" class=\"data row13 col9\" >-0.051541</td>\n",
        "                        <td id=\"T_b6e385d8_ef94_11ea_bb46_525400366c7erow13_col10\" class=\"data row13 col10\" >0.068224</td>\n",
        "                        <td id=\"T_b6e385d8_ef94_11ea_bb46_525400366c7erow13_col11\" class=\"data row13 col11\" >0.011450</td>\n",
        "                        <td id=\"T_b6e385d8_ef94_11ea_bb46_525400366c7erow13_col12\" class=\"data row13 col12\" >0.098744</td>\n",
        "                        <td id=\"T_b6e385d8_ef94_11ea_bb46_525400366c7erow13_col13\" class=\"data row13 col13\" >1.000000</td>\n",
        "                        <td id=\"T_b6e385d8_ef94_11ea_bb46_525400366c7erow13_col14\" class=\"data row13 col14\" >0.148134</td>\n",
        "                        <td id=\"T_b6e385d8_ef94_11ea_bb46_525400366c7erow13_col15\" class=\"data row13 col15\" >0.078617</td>\n",
        "                        <td id=\"T_b6e385d8_ef94_11ea_bb46_525400366c7erow13_col16\" class=\"data row13 col16\" >0.081541</td>\n",
        "            </tr>\n",
        "            <tr>\n",
        "                        <th id=\"T_b6e385d8_ef94_11ea_bb46_525400366c7elevel0_row14\" class=\"row_heading level0 row14\" >Testing_policy</th>\n",
        "                        <td id=\"T_b6e385d8_ef94_11ea_bb46_525400366c7erow14_col0\" class=\"data row14 col0\" >-0.078843</td>\n",
        "                        <td id=\"T_b6e385d8_ef94_11ea_bb46_525400366c7erow14_col1\" class=\"data row14 col1\" >-0.446814</td>\n",
        "                        <td id=\"T_b6e385d8_ef94_11ea_bb46_525400366c7erow14_col2\" class=\"data row14 col2\" >-0.504443</td>\n",
        "                        <td id=\"T_b6e385d8_ef94_11ea_bb46_525400366c7erow14_col3\" class=\"data row14 col3\" >-0.350788</td>\n",
        "                        <td id=\"T_b6e385d8_ef94_11ea_bb46_525400366c7erow14_col4\" class=\"data row14 col4\" >-0.363881</td>\n",
        "                        <td id=\"T_b6e385d8_ef94_11ea_bb46_525400366c7erow14_col5\" class=\"data row14 col5\" >0.060756</td>\n",
        "                        <td id=\"T_b6e385d8_ef94_11ea_bb46_525400366c7erow14_col6\" class=\"data row14 col6\" >0.015464</td>\n",
        "                        <td id=\"T_b6e385d8_ef94_11ea_bb46_525400366c7erow14_col7\" class=\"data row14 col7\" >0.180519</td>\n",
        "                        <td id=\"T_b6e385d8_ef94_11ea_bb46_525400366c7erow14_col8\" class=\"data row14 col8\" >0.346914</td>\n",
        "                        <td id=\"T_b6e385d8_ef94_11ea_bb46_525400366c7erow14_col9\" class=\"data row14 col9\" >0.265243</td>\n",
        "                        <td id=\"T_b6e385d8_ef94_11ea_bb46_525400366c7erow14_col10\" class=\"data row14 col10\" >0.347080</td>\n",
        "                        <td id=\"T_b6e385d8_ef94_11ea_bb46_525400366c7erow14_col11\" class=\"data row14 col11\" >0.343191</td>\n",
        "                        <td id=\"T_b6e385d8_ef94_11ea_bb46_525400366c7erow14_col12\" class=\"data row14 col12\" >0.245892</td>\n",
        "                        <td id=\"T_b6e385d8_ef94_11ea_bb46_525400366c7erow14_col13\" class=\"data row14 col13\" >0.148134</td>\n",
        "                        <td id=\"T_b6e385d8_ef94_11ea_bb46_525400366c7erow14_col14\" class=\"data row14 col14\" >1.000000</td>\n",
        "                        <td id=\"T_b6e385d8_ef94_11ea_bb46_525400366c7erow14_col15\" class=\"data row14 col15\" >0.222264</td>\n",
        "                        <td id=\"T_b6e385d8_ef94_11ea_bb46_525400366c7erow14_col16\" class=\"data row14 col16\" >-0.016972</td>\n",
        "            </tr>\n",
        "            <tr>\n",
        "                        <th id=\"T_b6e385d8_ef94_11ea_bb46_525400366c7elevel0_row15\" class=\"row_heading level0 row15\" >Contact_tracing</th>\n",
        "                        <td id=\"T_b6e385d8_ef94_11ea_bb46_525400366c7erow15_col0\" class=\"data row15 col0\" >-0.159003</td>\n",
        "                        <td id=\"T_b6e385d8_ef94_11ea_bb46_525400366c7erow15_col1\" class=\"data row15 col1\" >-0.117360</td>\n",
        "                        <td id=\"T_b6e385d8_ef94_11ea_bb46_525400366c7erow15_col2\" class=\"data row15 col2\" >-0.124727</td>\n",
        "                        <td id=\"T_b6e385d8_ef94_11ea_bb46_525400366c7erow15_col3\" class=\"data row15 col3\" >-0.181187</td>\n",
        "                        <td id=\"T_b6e385d8_ef94_11ea_bb46_525400366c7erow15_col4\" class=\"data row15 col4\" >0.041442</td>\n",
        "                        <td id=\"T_b6e385d8_ef94_11ea_bb46_525400366c7erow15_col5\" class=\"data row15 col5\" >-0.374355</td>\n",
        "                        <td id=\"T_b6e385d8_ef94_11ea_bb46_525400366c7erow15_col6\" class=\"data row15 col6\" >-0.334265</td>\n",
        "                        <td id=\"T_b6e385d8_ef94_11ea_bb46_525400366c7erow15_col7\" class=\"data row15 col7\" >-0.114029</td>\n",
        "                        <td id=\"T_b6e385d8_ef94_11ea_bb46_525400366c7erow15_col8\" class=\"data row15 col8\" >-0.219568</td>\n",
        "                        <td id=\"T_b6e385d8_ef94_11ea_bb46_525400366c7erow15_col9\" class=\"data row15 col9\" >-0.235718</td>\n",
        "                        <td id=\"T_b6e385d8_ef94_11ea_bb46_525400366c7erow15_col10\" class=\"data row15 col10\" >0.013824</td>\n",
        "                        <td id=\"T_b6e385d8_ef94_11ea_bb46_525400366c7erow15_col11\" class=\"data row15 col11\" >-0.292289</td>\n",
        "                        <td id=\"T_b6e385d8_ef94_11ea_bb46_525400366c7erow15_col12\" class=\"data row15 col12\" >-0.035032</td>\n",
        "                        <td id=\"T_b6e385d8_ef94_11ea_bb46_525400366c7erow15_col13\" class=\"data row15 col13\" >0.078617</td>\n",
        "                        <td id=\"T_b6e385d8_ef94_11ea_bb46_525400366c7erow15_col14\" class=\"data row15 col14\" >0.222264</td>\n",
        "                        <td id=\"T_b6e385d8_ef94_11ea_bb46_525400366c7erow15_col15\" class=\"data row15 col15\" >1.000000</td>\n",
        "                        <td id=\"T_b6e385d8_ef94_11ea_bb46_525400366c7erow15_col16\" class=\"data row15 col16\" >-0.276352</td>\n",
        "            </tr>\n",
        "            <tr>\n",
        "                        <th id=\"T_b6e385d8_ef94_11ea_bb46_525400366c7elevel0_row16\" class=\"row_heading level0 row16\" >Stringency_index</th>\n",
        "                        <td id=\"T_b6e385d8_ef94_11ea_bb46_525400366c7erow16_col0\" class=\"data row16 col0\" >-0.077174</td>\n",
        "                        <td id=\"T_b6e385d8_ef94_11ea_bb46_525400366c7erow16_col1\" class=\"data row16 col1\" >0.313267</td>\n",
        "                        <td id=\"T_b6e385d8_ef94_11ea_bb46_525400366c7erow16_col2\" class=\"data row16 col2\" >0.192657</td>\n",
        "                        <td id=\"T_b6e385d8_ef94_11ea_bb46_525400366c7erow16_col3\" class=\"data row16 col3\" >0.080096</td>\n",
        "                        <td id=\"T_b6e385d8_ef94_11ea_bb46_525400366c7erow16_col4\" class=\"data row16 col4\" >-0.097320</td>\n",
        "                        <td id=\"T_b6e385d8_ef94_11ea_bb46_525400366c7erow16_col5\" class=\"data row16 col5\" >0.544563</td>\n",
        "                        <td id=\"T_b6e385d8_ef94_11ea_bb46_525400366c7erow16_col6\" class=\"data row16 col6\" >0.644025</td>\n",
        "                        <td id=\"T_b6e385d8_ef94_11ea_bb46_525400366c7erow16_col7\" class=\"data row16 col7\" >0.539109</td>\n",
        "                        <td id=\"T_b6e385d8_ef94_11ea_bb46_525400366c7erow16_col8\" class=\"data row16 col8\" >0.559137</td>\n",
        "                        <td id=\"T_b6e385d8_ef94_11ea_bb46_525400366c7erow16_col9\" class=\"data row16 col9\" >0.740568</td>\n",
        "                        <td id=\"T_b6e385d8_ef94_11ea_bb46_525400366c7erow16_col10\" class=\"data row16 col10\" >0.712804</td>\n",
        "                        <td id=\"T_b6e385d8_ef94_11ea_bb46_525400366c7erow16_col11\" class=\"data row16 col11\" >0.753266</td>\n",
        "                        <td id=\"T_b6e385d8_ef94_11ea_bb46_525400366c7erow16_col12\" class=\"data row16 col12\" >0.565155</td>\n",
        "                        <td id=\"T_b6e385d8_ef94_11ea_bb46_525400366c7erow16_col13\" class=\"data row16 col13\" >0.081541</td>\n",
        "                        <td id=\"T_b6e385d8_ef94_11ea_bb46_525400366c7erow16_col14\" class=\"data row16 col14\" >-0.016972</td>\n",
        "                        <td id=\"T_b6e385d8_ef94_11ea_bb46_525400366c7erow16_col15\" class=\"data row16 col15\" >-0.276352</td>\n",
        "                        <td id=\"T_b6e385d8_ef94_11ea_bb46_525400366c7erow16_col16\" class=\"data row16 col16\" >1.000000</td>\n",
        "            </tr>\n",
        "    </tbody></table>"
       ],
       "output_type": "pyout",
       "prompt_number": 21,
       "text": [
        "<pandas.io.formats.style.Styler at 0x7f28c79e1400>"
       ]
      }
     ],
     "prompt_number": 21
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "# Scatter plot of Stringency index and Rt\n",
      "df = track_df.copy()\n",
      "sns.scatterplot(data=df, x=\"Stringency_index\", y=\"Rt\", hue=\"Country\", legend=\"brief\", marker=\"+\")\n",
      "bbox_to_anchor=(1.02, 0)\n",
      "bbox_loc=\"lower left\"\n",
      "plt.legend(bbox_to_anchor=bbox_to_anchor, loc=bbox_loc, borderaxespad=0)\n",
      "plt.title(\"Relationship of Stringency index and reproduction number\")\n",
      "plt.ylabel(\"Reproduction number\")\n",
      "plt.xlabel(\"Stringency index\")\n",
      "plt.show()"
     ],
     "language": "python",
     "metadata": {},
     "outputs": [
      {
       "output_type": "display_data",
       "png": "\n",
       "text": [
        "<Figure size 432x288 with 1 Axes>"
       ]
      }
     ],
     "prompt_number": 22
    }
   ],
   "metadata": {}
  }
 ]
}
