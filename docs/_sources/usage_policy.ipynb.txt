{
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3.8.2 64-bit ('.venv': venv)",
   "name": "python_defaultSpec_1597669925034"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.8.2-final"
  },
  "name": ""
 },
 "nbformat": 3,
 "nbformat_minor": 0,
 "worksheets": [
  {
   "cells": [
    {
     "cell_type": "markdown",
     "metadata": {},
     "source": [
      "# Usage (details: policy measures)\n",
      "Here, we will analyse the relationship of policy measures and parameter values of SIR-derived ODE models. Policy measures are tracked by [Oxford Covid-19 Government Response Tracker (OxCGRT)](https://github.com/OxCGRT/covid-policy-tracker)."
     ]
    },
    {
     "cell_type": "heading",
     "level": 2,
     "metadata": {},
     "source": [
      "Preparation"
     ]
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "# Standard users\n",
      "# !pip install covsirphy\n",
      "# Developers (Note: this notebook is in example directory)\n",
      "import os\n",
      "os.chdir(\"../\")"
     ],
     "language": "python",
     "metadata": {},
     "outputs": [],
     "prompt_number": 1
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "from pprint import pprint"
     ],
     "language": "python",
     "metadata": {},
     "outputs": [],
     "prompt_number": 2
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "import covsirphy as cs\n",
      "cs.__version__"
     ],
     "language": "python",
     "metadata": {},
     "outputs": [
      {
       "output_type": "pyout",
       "prompt_number": 3,
       "text": [
        "'2.8.1-alpha.fix.211'"
       ]
      }
     ],
     "prompt_number": 3
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "# Standard users and developers\n",
      "data_loader = cs.DataLoader(\"input\")\n",
      "# The number of cases (JHU style)\n",
      "jhu_data = data_loader.jhu(verbose=False)\n",
      "# Population in each country\n",
      "population_data = data_loader.population(verbose=False)\n",
      "# Government Response Tracker (OxCGRT)\n",
      "oxcgrt_data = data_loader.oxcgrt(verbose=False)\n",
      "# Description/citation\n",
      "print(oxcgrt_data.citation)"
     ],
     "language": "python",
     "metadata": {
      "tags": []
     },
     "outputs": [
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "(Secondary source) Guidotti, E., Ardia, D., (2020), \"COVID-19 Data Hub\", Journal of Open Source Software 5(51):2376, doi: 10.21105/joss.02376.\n",
        "We can get Citation list of primary sources with DataLoader(...).covid19dh_citation"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      }
     ],
     "prompt_number": 4
    },
    {
     "cell_type": "markdown",
     "metadata": {},
     "source": [
      "## Class for policy measure analysis\n",
      "We will `PolicyMeasures` class to find relationship of policy measures and parameter values of SIR-derived ODE models."
     ]
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "# Create analyser with tau value 360 [min] (can be changed)\n",
      "analyser = cs.PolicyMeasures(jhu_data, population_data, oxcgrt_data, tau=360)\n",
      "# The number of registerd countries\n",
      "len(analyser.countries)"
     ],
     "language": "python",
     "metadata": {
      "tags": []
     },
     "outputs": [
      {
       "output_type": "pyout",
       "prompt_number": 5,
       "text": [
        "183"
       ]
      }
     ],
     "prompt_number": 5
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "# We can get Scenario instance for detailed scenario analysis\n",
      "type(analyser.scenario(\"Japan\"))"
     ],
     "language": "python",
     "metadata": {},
     "outputs": [
      {
       "output_type": "pyout",
       "prompt_number": 6,
       "text": [
        "covsirphy.analysis.scenario.Scenario"
       ]
      }
     ],
     "prompt_number": 6
    },
    {
     "cell_type": "markdown",
     "metadata": {},
     "source": [
      "## Set phases with S-R trend analysis\n",
      "We will perform S-R trend analysis to set phases in all countries. Countries which do not have **9th phases** will be un-registered for the next analysis. This number will be adjusted for your analysis."
     ]
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "# Show the number of phases of all countries\n",
      "analyser.trend()\n",
      "pprint(analyser.phase_len(), compact=True)"
     ],
     "language": "python",
     "metadata": {},
     "outputs": [
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "{"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "2"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ": "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "['Dominica', 'Belize', 'Trinidad and Tobago']"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        " "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "3"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ": "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "['Bahamas', 'Brunei', 'Tanzania', 'Papua New Guinea', 'Mauritius']"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        " "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "4"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ": "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "["
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Paraguay'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Botswana'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Central African Republic'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Norway'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        "     "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Equatorial Guinea'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Ethiopia'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Sao Tome and Principe'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Namibia'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        "     "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Zimbabwe'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Libya'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Kyrgyzstan'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Lebanon'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Grenada'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Seychelles'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        "     "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Malta'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Venezuela'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Antigua and Barbuda'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Lesotho'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Guyana'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Fiji'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        "     "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Gambia'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Vietnam'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "]"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        " "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "5"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ": "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "["
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Barbados'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Iceland'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Guatemala'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Spain'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Saint Lucia'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Morocco'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        "     "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Palestine'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Zambia'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Syria'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Mozambique'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Angola'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Liechtenstein'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        "     "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Ireland'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Kazakhstan'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'South Sudan'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Montenegro'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Netherlands'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        "     "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Comoros'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Bosnia and Herzegovina'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Slovakia'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Madagascar'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Israel'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        "     "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Saint Vincent and the Grenadines'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'San Marino'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Cambodia'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        "     "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'New Zealand'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Costa Rica'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "]"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        " "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "6"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ": "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "["
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Andorra'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Cyprus'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Malawi'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Eritrea'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Thailand'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Japan'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Suriname'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        "     "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Kenya'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Maldives'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Croatia'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Cameroon'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Taiwan'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Australia'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        "     "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Philippines'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Haiti'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Nepal'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Niger'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Rwanda'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Colombia'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Somalia'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        "     "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Afghanistan'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Kosovo'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Chad'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Monaco'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Guinea-Bissau'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Mongolia'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "]"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        " "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "7"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ": "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "["
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'El Salvador'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Belarus'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Cape Verde'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Greece'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Oman'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Ghana'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Qatar'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        "     "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Benin'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Sri Lanka'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Yemen'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Tajikistan'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Uruguay'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Uzbekistan'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        "     "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Swaziland'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Mauritania'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'South Africa'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Luxembourg'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Sudan'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        "     "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Finland'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Ecuador'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Bhutan'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Gabon'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'China'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Burundi'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Iraq'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        "     "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Tunisia'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Slovenia'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Jordan'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'India'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Congo'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Albania'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        "     "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Argentina'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "]"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        " "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "8"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ": "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "["
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Latvia'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Algeria'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Uganda'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Liberia'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Denmark'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Switzerland'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        "     "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Bermuda'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Cuba'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Canada'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Macedonia'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Saudi Arabia'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Panama'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        "     "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Brazil'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Malaysia'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Sierra Leone'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Nigeria'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Serbia'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Nicaragua'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        "     "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Pakistan'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Djibouti'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Belgium'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Romania'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Togo'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Indonesia'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        "     "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Dominican Republic'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Lithuania'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Azerbaijan'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Korea, South'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        "     "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Czech Republic'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Bulgaria'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Jamaica'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Austria'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Singapore'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Chile'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        "     "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Ukraine'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Egypt'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Armenia'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "]"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        " "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "9"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ": "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "["
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Turkey'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Mali'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Burkina Faso'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Estonia'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Bangladesh'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Mexico'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        "     "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Peru'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Portugal'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'France'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Myanmar'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Moldova'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Honduras'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Bolivia'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        "     "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Italy'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Georgia'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Guinea'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Kuwait'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Hungary'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "]"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        " "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "10"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ": "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "["
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Poland'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'United States'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'United Arab Emirates'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Iran'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Senegal'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        "      "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Bahrain'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "]"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        " "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "11"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ": "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "['Russia']"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "}"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      }
     ],
     "prompt_number": 7
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "# Set phases with S-R trend analysis\n",
      "analyser.trend(min_len=9)\n",
      "# The number of countries\n",
      "len(analyser.countries)"
     ],
     "language": "python",
     "metadata": {},
     "outputs": [
      {
       "output_type": "pyout",
       "prompt_number": 8,
       "text": [
        "25"
       ]
      }
     ],
     "prompt_number": 8
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "phase_len_dict = analyser.phase_len()\n",
      "pprint(phase_len_dict, compact=True)"
     ],
     "language": "python",
     "metadata": {
      "tags": []
     },
     "outputs": [
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "{"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "9"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ": "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "["
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Turkey'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Mali'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Burkina Faso'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Estonia'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Bangladesh'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Mexico'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        "     "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Peru'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Portugal'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'France'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Myanmar'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Moldova'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Honduras'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Bolivia'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        "     "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Italy'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Georgia'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Guinea'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Kuwait'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Hungary'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "]"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        " "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "10"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ": "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "["
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Poland'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'United States'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'United Arab Emirates'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Iran'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Senegal'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        "      "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Bahrain'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "]"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        " "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "11"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ": "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "['Russia']"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "}"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      }
     ],
     "prompt_number": 9
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "# Here, only show the countries which have the most phases\n",
      "countries_show = max(phase_len_dict.items(), key=lambda x: x[0])[1]\n",
      "# Show summary\n",
      "analyser.summary(countries=countries_show)"
     ],
     "language": "python",
     "metadata": {
      "tags": []
     },
     "outputs": [
      {
       "html": [
        "<div>\n",
        "<style scoped>\n",
        "    .dataframe tbody tr th:only-of-type {\n",
        "        vertical-align: middle;\n",
        "    }\n",
        "\n",
        "    .dataframe tbody tr th {\n",
        "        vertical-align: top;\n",
        "    }\n",
        "\n",
        "    .dataframe thead th {\n",
        "        text-align: right;\n",
        "    }\n",
        "</style>\n",
        "<table border=\"1\" class=\"dataframe\">\n",
        "  <thead>\n",
        "    <tr style=\"text-align: right;\">\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th>Type</th>\n",
        "      <th>Start</th>\n",
        "      <th>End</th>\n",
        "      <th>Population</th>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>Country</th>\n",
        "      <th>Phase</th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "    </tr>\n",
        "  </thead>\n",
        "  <tbody>\n",
        "    <tr>\n",
        "      <th rowspan=\"11\" valign=\"top\">Russia</th>\n",
        "      <th>1st</th>\n",
        "      <td>Past</td>\n",
        "      <td>08May2020</td>\n",
        "      <td>16May2020</td>\n",
        "      <td>330457362</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>2nd</th>\n",
        "      <td>Past</td>\n",
        "      <td>17May2020</td>\n",
        "      <td>27May2020</td>\n",
        "      <td>330457362</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>3rd</th>\n",
        "      <td>Past</td>\n",
        "      <td>28May2020</td>\n",
        "      <td>04Jun2020</td>\n",
        "      <td>330457362</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>4th</th>\n",
        "      <td>Past</td>\n",
        "      <td>05Jun2020</td>\n",
        "      <td>13Jun2020</td>\n",
        "      <td>330457362</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>5th</th>\n",
        "      <td>Past</td>\n",
        "      <td>14Jun2020</td>\n",
        "      <td>23Jun2020</td>\n",
        "      <td>330457362</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>6th</th>\n",
        "      <td>Past</td>\n",
        "      <td>24Jun2020</td>\n",
        "      <td>03Jul2020</td>\n",
        "      <td>330457362</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>7th</th>\n",
        "      <td>Past</td>\n",
        "      <td>04Jul2020</td>\n",
        "      <td>14Jul2020</td>\n",
        "      <td>330457362</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>8th</th>\n",
        "      <td>Past</td>\n",
        "      <td>15Jul2020</td>\n",
        "      <td>25Jul2020</td>\n",
        "      <td>330457362</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>9th</th>\n",
        "      <td>Past</td>\n",
        "      <td>26Jul2020</td>\n",
        "      <td>07Aug2020</td>\n",
        "      <td>330457362</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>10th</th>\n",
        "      <td>Past</td>\n",
        "      <td>08Aug2020</td>\n",
        "      <td>20Aug2020</td>\n",
        "      <td>330457362</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>11th</th>\n",
        "      <td>Past</td>\n",
        "      <td>21Aug2020</td>\n",
        "      <td>04Sep2020</td>\n",
        "      <td>330457362</td>\n",
        "    </tr>\n",
        "  </tbody>\n",
        "</table>\n",
        "</div>"
       ],
       "output_type": "pyout",
       "prompt_number": 10,
       "text": [
        "               Type      Start        End  Population\n",
        "Country Phase                                        \n",
        "Russia  1st    Past  08May2020  16May2020   330457362\n",
        "        2nd    Past  17May2020  27May2020   330457362\n",
        "        3rd    Past  28May2020  04Jun2020   330457362\n",
        "        4th    Past  05Jun2020  13Jun2020   330457362\n",
        "        5th    Past  14Jun2020  23Jun2020   330457362\n",
        "        6th    Past  24Jun2020  03Jul2020   330457362\n",
        "        7th    Past  04Jul2020  14Jul2020   330457362\n",
        "        8th    Past  15Jul2020  25Jul2020   330457362\n",
        "        9th    Past  26Jul2020  07Aug2020   330457362\n",
        "        10th   Past  08Aug2020  20Aug2020   330457362\n",
        "        11th   Past  21Aug2020  04Sep2020   330457362"
       ]
      }
     ],
     "prompt_number": 10
    },
    {
     "cell_type": "markdown",
     "metadata": {},
     "source": [
      "## Parameter estimation\n",
      "we will estimate the parameter values with SIR-derived ODE models in each country."
     ]
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "# Parameter estimation with SIR-F model\n",
      "analyser.estimate(cs.SIRF)"
     ],
     "language": "python",
     "metadata": {
      "tags": []
     },
     "outputs": [
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n",
        "<SIR-F model: parameter estimation>"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "Running optimization with 4 CPUs..."
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tUSA, 10th phase (23Aug2020 - 04Sep2020): finished  512 trials in 0 min 20 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tSEN,  1st phase (03May2020 - 14May2020): finished  507 trials in 0 min 20 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tITA,  6th phase (10May2020 - 20May2020): finished  145 trials in 0 min  5 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tSEN,  8th phase (29Jul2020 - 10Aug2020): finished  283 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tBOL,  5th phase (24Jul2020 - 01Aug2020): finished  729 trials in 0 min 30 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tGIN,  7th phase (24Jul2020 - 05Aug2020): finished  381 trials in 0 min 15 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tTUR,  3rd phase (16May2020 - 28May2020): finished  284 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tRUS,  2nd phase (17May2020 - 27May2020): finished 1267 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tARE,  3rd phase (25May2020 - 02Jun2020): finished  513 trials in 0 min 20 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tKWT,  7th phase (27Jul2020 - 08Aug2020): finished 1260 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tEST,  9th phase (26Aug2020 - 04Sep2020): finished 1262 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tMEX,  6th phase (21Jul2020 - 29Jul2020): finished  147 trials in 0 min  5 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tITA,  1st phase (23Mar2020 - 30Mar2020): finished 1252 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tBOL,  3rd phase (07Jul2020 - 15Jul2020): finished  266 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tMEX,  7th phase (30Jul2020 - 13Aug2020): finished 1238 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tSEN,  9th phase (11Aug2020 - 20Aug2020): finished  375 trials in 0 min 15 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tARE,  6th phase (23Jun2020 - 02Jul2020): finished  486 trials in 0 min 20 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tPER,  4th phase (27Jun2020 - 12Jul2020): finished 1224 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tPER,  5th phase (13Jul2020 - 26Jul2020): finished 1217 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tMDA,  5th phase (09Jul2020 - 20Jul2020): finished  394 trials in 0 min 15 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tMLI,  5th phase (03Jun2020 - 14Jun2020): finished 1221 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tHUN,  7th phase (25Jul2020 - 12Aug2020): finished 1226 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tFRA,  3rd phase (13Apr2020 - 24Apr2020): finished 1228 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tARE,  9th phase (26Jul2020 - 16Aug2020): finished  476 trials in 0 min 20 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tGIN,  4th phase (07Jun2020 - 18Jun2020): finished 1231 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tARE,  8th phase (12Jul2020 - 25Jul2020): finished  973 trials in 0 min 45 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tHUN,  3rd phase (10May2020 - 18May2020): finished  604 trials in 0 min 25 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tBOL,  1st phase (14Jun2020 - 26Jun2020): finished 1225 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tBFA,  5th phase (20May2020 - 13Jun2020): finished 1180 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tSEN,  7th phase (17Jul2020 - 28Jul2020): finished 1148 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tTUR,  5th phase (13Jun2020 - 26Jun2020): finished 1186 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tFRA,  8th phase (23Jul2020 - 13Aug2020): finished  263 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tITA,  9th phase (30Jul2020 - 04Sep2020): finished 1194 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tEST,  7th phase (03Jul2020 - 05Aug2020): finished 1236 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tUSA,  2nd phase (11May2020 - 04Jun2020): finished 1228 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tRUS,  1st phase (08May2020 - 16May2020): finished 1250 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tSEN,  3rd phase (30May2020 - 09Jun2020): finished 1249 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tBGD,  6th phase (26Jul2020 - 05Aug2020): finished  389 trials in 0 min 15 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tBGD,  1st phase (28May2020 - 13Jun2020): finished 1211 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tRUS,  7th phase (04Jul2020 - 14Jul2020): finished 1220 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tSEN,  2nd phase (15May2020 - 29May2020): finished 1169 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tBHR,  2nd phase (31May2020 - 11Jun2020): finished 1179 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tBFA,  8th phase (31Jul2020 - 15Aug2020): finished 1151 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tPOL,  7th phase (28Jul2020 - 06Aug2020): finished  586 trials in 0 min 25 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tMEX,  3rd phase (22Jun2020 - 02Jul2020): finished  133 trials in 0 min  5 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tMMR,  5th phase (19Jun2020 - 29Jun2020): finished  275 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tPRT,  1st phase (01May2020 - 17May2020): finished 1186 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tIRN,  5th phase (15Jun2020 - 27Jun2020): finished 1261 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tMLI,  9th phase (11Aug2020 - 04Sep2020): finished 1250 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tFRA,  7th phase (24Jun2020 - 22Jul2020): finished  885 trials in 0 min 40 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tMMR,  1st phase (29Apr2020 - 06May2020): finished  277 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tGEO,  3rd phase (15May2020 - 28May2020): finished 1242 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tRUS,  9th phase (26Jul2020 - 07Aug2020): finished 1251 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tGEO,  1st phase (12Apr2020 - 24Apr2020): finished 1269 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tPOL,  6th phase (15Jul2020 - 27Jul2020): finished 1260 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tPOL,  3rd phase (28May2020 - 11Jun2020): finished 1252 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tKWT,  4th phase (22Jun2020 - 03Jul2020): finished 1248 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tMDA,  7th phase (31Jul2020 - 07Aug2020): finished 1268 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tIRN,  9th phase (04Aug2020 - 17Aug2020): finished 1242 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tMLI,  1st phase (25Apr2020 - 02May2020): finished 1249 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tKWT,  3rd phase (10Jun2020 - 21Jun2020): finished  204 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tBGD,  5th phase (15Jul2020 - 25Jul2020): finished  853 trials in 0 min 40 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tGEO,  2nd phase (25Apr2020 - 14May2020): finished 1208 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tMEX,  9th phase (24Aug2020 - 04Sep2020): finished 1203 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tBFA,  1st phase (01Apr2020 - 08Apr2020): finished 1209 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tMLI,  6th phase (15Jun2020 - 23Jun2020): finished  271 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tGIN,  5th phase (19Jun2020 - 09Jul2020): finished 1215 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tPOL,  9th phase (17Aug2020 - 25Aug2020): finished  277 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tMDA,  6th phase (21Jul2020 - 30Jul2020): finished  906 trials in 0 min 40 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tITA,  8th phase (12Jun2020 - 29Jul2020): finished  367 trials in 0 min 15 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tMDA,  1st phase (12May2020 - 02Jun2020): finished 1250 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tTUR,  1st phase (18Apr2020 - 29Apr2020): finished 1285 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tSEN,  4th phase (10Jun2020 - 19Jun2020): finished 1297 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tGEO,  4th phase (29May2020 - 10Jun2020): finished 1300 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tTUR,  4th phase (29May2020 - 12Jun2020): finished  282 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tUSA,  4th phase (24Jun2020 - 07Jul2020): finished 1291 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tRUS, 10th phase (08Aug2020 - 20Aug2020): finished 1336 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tBOL,  7th phase (10Aug2020 - 17Aug2020): finished  265 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tUSA,  9th phase (12Aug2020 - 22Aug2020): finished  139 trials in 0 min  5 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tARE,  5th phase (12Jun2020 - 22Jun2020): finished 1026 trials in 0 min 45 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tHUN,  2nd phase (28Apr2020 - 09May2020): finished 1276 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tPRT,  2nd phase (18May2020 - 31May2020): finished 1287 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tIRN,  4th phase (31May2020 - 14Jun2020): finished  367 trials in 0 min 15 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tMDA,  9th phase (18Aug2020 - 04Sep2020): finished 1193 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tBOL,  2nd phase (27Jun2020 - 06Jul2020): finished  521 trials in 0 min 25 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tBGD,  7th phase (06Aug2020 - 14Aug2020): finished  210 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tHND,  2nd phase (19Jun2020 - 28Jun2020): finished 1134 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tRUS,  4th phase (05Jun2020 - 13Jun2020): finished 1149 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tKWT,  6th phase (15Jul2020 - 26Jul2020): finished  412 trials in 0 min 20 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tUSA,  3rd phase (05Jun2020 - 23Jun2020): finished  361 trials in 0 min 15 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tUSA,  1st phase (21Apr2020 - 10May2020): finished 1282 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tMEX,  5th phase (13Jul2020 - 20Jul2020): finished 1321 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tTUR,  8th phase (03Aug2020 - 20Aug2020): finished 1306 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tKWT,  8th phase (09Aug2020 - 20Aug2020): finished 1282 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tHND,  1st phase (27May2020 - 18Jun2020): finished 1313 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tRUS,  3rd phase (28May2020 - 04Jun2020): finished 1352 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tMDA,  4th phase (26Jun2020 - 08Jul2020): finished 1291 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tITA,  7th phase (21May2020 - 11Jun2020): finished  300 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tPOL,  2nd phase (13May2020 - 27May2020): finished 1349 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tIRN,  6th phase (28Jun2020 - 09Jul2020): finished  168 trials in 0 min  5 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tMEX,  8th phase (14Aug2020 - 23Aug2020): finished  303 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tTUR,  2nd phase (30Apr2020 - 15May2020): finished  558 trials in 0 min 20 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tHUN,  1st phase (15Apr2020 - 27Apr2020): finished 1401 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tUSA,  6th phase (17Jul2020 - 24Jul2020): finished  168 trials in 0 min  5 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tFRA,  6th phase (27May2020 - 23Jun2020): finished 1373 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tMMR,  8th phase (12Aug2020 - 20Aug2020): finished 1374 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tITA,  4th phase (21Apr2020 - 30Apr2020): finished  153 trials in 0 min  5 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tARE,  7th phase (03Jul2020 - 11Jul2020): finished 1405 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tMEX,  2nd phase (09Jun2020 - 21Jun2020): finished  291 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tGIN,  6th phase (10Jul2020 - 23Jul2020): finished 1394 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tPER,  8th phase (19Aug2020 - 26Aug2020): finished 1407 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tHUN,  5th phase (31May2020 - 28Jun2020): finished 1361 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tPRT,  7th phase (21Jul2020 - 04Aug2020): finished  425 trials in 0 min 15 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tMMR,  6th phase (30Jun2020 - 10Jul2020): finished 1390 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tPRT,  5th phase (25Jun2020 - 07Jul2020): finished  156 trials in 0 min  5 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tPER,  2nd phase (30May2020 - 12Jun2020): finished 1384 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tGIN,  1st phase (02May2020 - 12May2020): finished 1365 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tGIN,  3rd phase (23May2020 - 06Jun2020): finished 1429 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tGEO,  8th phase (06Aug2020 - 17Aug2020): finished 1433 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tHND,  7th phase (03Aug2020 - 13Aug2020): finished  840 trials in 0 min 25 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tSEN,  5th phase (20Jun2020 - 01Jul2020): finished  831 trials in 0 min 25 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tIRN,  2nd phase (17Apr2020 - 10May2020): finished  228 trials in 0 min  5 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tPRT,  8th phase (05Aug2020 - 20Aug2020): finished  435 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tBFA,  7th phase (06Jul2020 - 30Jul2020): finished 1685 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tFRA,  4th phase (25Apr2020 - 04May2020): finished 1820 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tTUR,  7th phase (14Jul2020 - 02Aug2020): finished  201 trials in 0 min  5 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tBFA,  4th phase (05May2020 - 19May2020): finished 1788 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tIRN,  3rd phase (11May2020 - 30May2020): finished 1790 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tPOL,  8th phase (07Aug2020 - 16Aug2020): finished  219 trials in 0 min  5 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tEST,  1st phase (10Apr2020 - 21Apr2020): finished 1774 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tIRN,  8th phase (22Jul2020 - 03Aug2020): finished  218 trials in 0 min  5 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tMEX,  4th phase (03Jul2020 - 12Jul2020): finished  585 trials in 0 min 15 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tPOL,  5th phase (30Jun2020 - 14Jul2020): finished  224 trials in 0 min  5 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tMDA,  3rd phase (15Jun2020 - 25Jun2020): finished 1788 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tPOL,  1st phase (24Apr2020 - 12May2020): finished 1745 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tMLI,  2nd phase (03May2020 - 15May2020): finished 1662 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tGEO,  7th phase (20Jul2020 - 05Aug2020): finished 1441 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tSEN,  6th phase (02Jul2020 - 16Jul2020): finished 1269 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tBGD,  3rd phase (28Jun2020 - 06Jul2020): finished  497 trials in 0 min 20 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tBGD,  8th phase (15Aug2020 - 24Aug2020): finished 1273 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tHND,  8th phase (14Aug2020 - 22Aug2020): finished  731 trials in 0 min 20 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tBHR,  3rd phase (12Jun2020 - 21Jun2020): finished 1414 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tUSA,  8th phase (03Aug2020 - 11Aug2020): finished  897 trials in 0 min 25 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tUSA,  7th phase (25Jul2020 - 02Aug2020): finished  220 trials in 0 min  5 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tMMR,  2nd phase (07May2020 - 25May2020): finished  747 trials in 0 min 20 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tBFA,  2nd phase (09Apr2020 - 19Apr2020): finished 1789 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tBGD,  9th phase (25Aug2020 - 04Sep2020): finished  405 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tPER,  7th phase (05Aug2020 - 18Aug2020): finished 1815 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tMMR,  7th phase (11Jul2020 - 11Aug2020): finished 1780 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tITA,  3rd phase (12Apr2020 - 20Apr2020): finished  216 trials in 0 min  5 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tPRT,  4th phase (13Jun2020 - 24Jun2020): finished  388 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tARE,  2nd phase (13May2020 - 24May2020): finished 1780 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tHND,  3rd phase (29Jun2020 - 07Jul2020): finished  697 trials in 0 min 20 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tPRT,  3rd phase (01Jun2020 - 12Jun2020): finished  559 trials in 0 min 15 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tPOL,  4th phase (12Jun2020 - 29Jun2020): finished 1734 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tBFA,  3rd phase (20Apr2020 - 04May2020): finished 1728 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tPRT,  6th phase (08Jul2020 - 20Jul2020): finished 1730 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tBHR,  7th phase (17Jul2020 - 26Jul2020): finished  278 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tRUS,  5th phase (14Jun2020 - 23Jun2020): finished 1660 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tBGD,  2nd phase (14Jun2020 - 27Jun2020): finished 1595 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tPER,  1st phase (14May2020 - 29May2020): finished 1553 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tBHR,  1st phase (06May2020 - 30May2020): finished 1517 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tFRA,  9th phase (14Aug2020 - 04Sep2020): finished 1537 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tMLI,  4th phase (26May2020 - 02Jun2020): finished 1219 trials in 0 min 45 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tIRN,  1st phase (29Mar2020 - 16Apr2020): finished 1422 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tKWT,  1st phase (12May2020 - 24May2020): finished 1487 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tEST,  3rd phase (07May2020 - 15May2020): finished 1480 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tBFA,  9th phase (16Aug2020 - 04Sep2020): finished 1457 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tBFA,  6th phase (14Jun2020 - 05Jul2020): finished  812 trials in 0 min 30 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tGEO,  5th phase (11Jun2020 - 03Jul2020): finished 1450 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tBHR,  5th phase (30Jun2020 - 07Jul2020): finished 1558 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tEST,  8th phase (06Aug2020 - 25Aug2020): finished  448 trials in 0 min 15 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tPER,  6th phase (27Jul2020 - 04Aug2020): finished 1514 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tTUR,  6th phase (27Jun2020 - 13Jul2020): finished  487 trials in 0 min 15 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tFRA,  2nd phase (03Apr2020 - 12Apr2020): finished 1499 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tITA,  5th phase (01May2020 - 09May2020): finished  638 trials in 0 min 20 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tBGD,  4th phase (07Jul2020 - 14Jul2020): finished 1517 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tITA,  2nd phase (31Mar2020 - 11Apr2020): finished 1550 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tGIN,  2nd phase (13May2020 - 22May2020): finished 1513 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tHUN,  4th phase (19May2020 - 30May2020): finished 1531 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tARE,  4th phase (03Jun2020 - 11Jun2020): finished 1482 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tEST,  6th phase (06Jun2020 - 02Jul2020): finished 1520 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tPER,  9th phase (27Aug2020 - 04Sep2020): finished 1482 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tFRA,  1st phase (25Mar2020 - 02Apr2020): finished 1550 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tIRN,  7th phase (10Jul2020 - 21Jul2020): finished  185 trials in 0 min  5 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tMMR,  3rd phase (26May2020 - 07Jun2020): finished 1530 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tMLI,  8th phase (04Jul2020 - 10Aug2020): finished 1493 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tBOL,  8th phase (18Aug2020 - 25Aug2020): finished  582 trials in 0 min 20 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tARE, 10th phase (17Aug2020 - 04Sep2020): finished  492 trials in 0 min 15 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tKWT,  2nd phase (25May2020 - 09Jun2020): finished 1490 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tHUN,  6th phase (29Jun2020 - 24Jul2020): finished 1500 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tTUR,  9th phase (21Aug2020 - 04Sep2020): finished 1529 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tBHR,  4th phase (22Jun2020 - 29Jun2020): finished 1492 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tGEO,  6th phase (04Jul2020 - 19Jul2020): finished 1515 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tMDA,  8th phase (08Aug2020 - 17Aug2020): finished  347 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tEST,  5th phase (26May2020 - 05Jun2020): finished  389 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tUSA,  5th phase (08Jul2020 - 16Jul2020): finished  574 trials in 0 min 15 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tMLI,  7th phase (24Jun2020 - 03Jul2020): finished 1671 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tHUN,  8th phase (13Aug2020 - 25Aug2020): finished  226 trials in 0 min  5 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tMLI,  3rd phase (16May2020 - 25May2020): finished 1657 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tMEX,  1st phase (22May2020 - 08Jun2020): finished 1806 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tARE,  1st phase (28Apr2020 - 12May2020): finished 1812 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tBOL,  4th phase (16Jul2020 - 23Jul2020): finished  219 trials in 0 min  5 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tEST,  2nd phase (22Apr2020 - 06May2020): finished 1866 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tMMR,  4th phase (08Jun2020 - 18Jun2020): finished 1907 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tFRA,  5th phase (05May2020 - 26May2020): finished 1898 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tBOL,  6th phase (02Aug2020 - 09Aug2020): finished  253 trials in 0 min  5 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "Completed optimization. Total: 39 min 13 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      }
     ],
     "prompt_number": 11
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "# Show summary\n",
      "analyser.summary(countries=countries_show)"
     ],
     "language": "python",
     "metadata": {},
     "outputs": [
      {
       "html": [
        "<div>\n",
        "<style scoped>\n",
        "    .dataframe tbody tr th:only-of-type {\n",
        "        vertical-align: middle;\n",
        "    }\n",
        "\n",
        "    .dataframe tbody tr th {\n",
        "        vertical-align: top;\n",
        "    }\n",
        "\n",
        "    .dataframe thead th {\n",
        "        text-align: right;\n",
        "    }\n",
        "</style>\n",
        "<table border=\"1\" class=\"dataframe\">\n",
        "  <thead>\n",
        "    <tr style=\"text-align: right;\">\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th>Type</th>\n",
        "      <th>Start</th>\n",
        "      <th>End</th>\n",
        "      <th>Population</th>\n",
        "      <th>ODE</th>\n",
        "      <th>Rt</th>\n",
        "      <th>theta</th>\n",
        "      <th>kappa</th>\n",
        "      <th>rho</th>\n",
        "      <th>sigma</th>\n",
        "      <th>tau</th>\n",
        "      <th>1/gamma [day]</th>\n",
        "      <th>alpha1 [-]</th>\n",
        "      <th>1/beta [day]</th>\n",
        "      <th>1/alpha2 [day]</th>\n",
        "      <th>RMSLE</th>\n",
        "      <th>Trials</th>\n",
        "      <th>Runtime</th>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>Country</th>\n",
        "      <th>Phase</th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "    </tr>\n",
        "  </thead>\n",
        "  <tbody>\n",
        "    <tr>\n",
        "      <th rowspan=\"11\" valign=\"top\">Russia</th>\n",
        "      <th>1st</th>\n",
        "      <td>Past</td>\n",
        "      <td>08May2020</td>\n",
        "      <td>16May2020</td>\n",
        "      <td>330457362</td>\n",
        "      <td>SIR-F</td>\n",
        "      <td>2.42</td>\n",
        "      <td>0.00180556</td>\n",
        "      <td>9.34529e-05</td>\n",
        "      <td>0.0129733</td>\n",
        "      <td>0.0052518</td>\n",
        "      <td>360</td>\n",
        "      <td>47</td>\n",
        "      <td>0.002</td>\n",
        "      <td>19</td>\n",
        "      <td>2675</td>\n",
        "      <td>0.0592362</td>\n",
        "      <td>1250</td>\n",
        "      <td>1 min  0 sec</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>2nd</th>\n",
        "      <td>Past</td>\n",
        "      <td>17May2020</td>\n",
        "      <td>27May2020</td>\n",
        "      <td>330457362</td>\n",
        "      <td>SIR-F</td>\n",
        "      <td>1.15</td>\n",
        "      <td>0.000245149</td>\n",
        "      <td>0.000113228</td>\n",
        "      <td>0.00683065</td>\n",
        "      <td>0.00582833</td>\n",
        "      <td>360</td>\n",
        "      <td>42</td>\n",
        "      <td>0</td>\n",
        "      <td>36</td>\n",
        "      <td>2207</td>\n",
        "      <td>0.108726</td>\n",
        "      <td>1267</td>\n",
        "      <td>1 min  0 sec</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>3rd</th>\n",
        "      <td>Past</td>\n",
        "      <td>28May2020</td>\n",
        "      <td>04Jun2020</td>\n",
        "      <td>330457362</td>\n",
        "      <td>SIR-F</td>\n",
        "      <td>1.08</td>\n",
        "      <td>0.000348993</td>\n",
        "      <td>0.000113255</td>\n",
        "      <td>0.00535466</td>\n",
        "      <td>0.00483809</td>\n",
        "      <td>360</td>\n",
        "      <td>51</td>\n",
        "      <td>0</td>\n",
        "      <td>46</td>\n",
        "      <td>2207</td>\n",
        "      <td>0.0532399</td>\n",
        "      <td>1352</td>\n",
        "      <td>1 min  0 sec</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>4th</th>\n",
        "      <td>Past</td>\n",
        "      <td>05Jun2020</td>\n",
        "      <td>13Jun2020</td>\n",
        "      <td>330457362</td>\n",
        "      <td>SIR-F</td>\n",
        "      <td>1.31</td>\n",
        "      <td>0.00160757</td>\n",
        "      <td>8.37069e-05</td>\n",
        "      <td>0.00462613</td>\n",
        "      <td>0.00344226</td>\n",
        "      <td>360</td>\n",
        "      <td>72</td>\n",
        "      <td>0.002</td>\n",
        "      <td>54</td>\n",
        "      <td>2986</td>\n",
        "      <td>0.0478242</td>\n",
        "      <td>1149</td>\n",
        "      <td>1 min  0 sec</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>5th</th>\n",
        "      <td>Past</td>\n",
        "      <td>14Jun2020</td>\n",
        "      <td>23Jun2020</td>\n",
        "      <td>330457362</td>\n",
        "      <td>SIR-F</td>\n",
        "      <td>0.82</td>\n",
        "      <td>0.000348462</td>\n",
        "      <td>7.90578e-05</td>\n",
        "      <td>0.00346657</td>\n",
        "      <td>0.0041384</td>\n",
        "      <td>360</td>\n",
        "      <td>60</td>\n",
        "      <td>0</td>\n",
        "      <td>72</td>\n",
        "      <td>3162</td>\n",
        "      <td>0.0638472</td>\n",
        "      <td>1660</td>\n",
        "      <td>1 min  0 sec</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>6th</th>\n",
        "      <td>Past</td>\n",
        "      <td>24Jun2020</td>\n",
        "      <td>03Jul2020</td>\n",
        "      <td>330457362</td>\n",
        "      <td>-</td>\n",
        "      <td>-</td>\n",
        "      <td>-</td>\n",
        "      <td>-</td>\n",
        "      <td>-</td>\n",
        "      <td>-</td>\n",
        "      <td>-</td>\n",
        "      <td>-</td>\n",
        "      <td>-</td>\n",
        "      <td>-</td>\n",
        "      <td>-</td>\n",
        "      <td>-</td>\n",
        "      <td>-</td>\n",
        "      <td>-</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>7th</th>\n",
        "      <td>Past</td>\n",
        "      <td>04Jul2020</td>\n",
        "      <td>14Jul2020</td>\n",
        "      <td>330457362</td>\n",
        "      <td>SIR-F</td>\n",
        "      <td>0.79</td>\n",
        "      <td>0.000700456</td>\n",
        "      <td>5.96165e-05</td>\n",
        "      <td>0.00233186</td>\n",
        "      <td>0.00287612</td>\n",
        "      <td>360</td>\n",
        "      <td>86</td>\n",
        "      <td>0.001</td>\n",
        "      <td>107</td>\n",
        "      <td>4193</td>\n",
        "      <td>0.0514033</td>\n",
        "      <td>1220</td>\n",
        "      <td>1 min  0 sec</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>8th</th>\n",
        "      <td>Past</td>\n",
        "      <td>15Jul2020</td>\n",
        "      <td>25Jul2020</td>\n",
        "      <td>330457362</td>\n",
        "      <td>-</td>\n",
        "      <td>-</td>\n",
        "      <td>-</td>\n",
        "      <td>-</td>\n",
        "      <td>-</td>\n",
        "      <td>-</td>\n",
        "      <td>-</td>\n",
        "      <td>-</td>\n",
        "      <td>-</td>\n",
        "      <td>-</td>\n",
        "      <td>-</td>\n",
        "      <td>-</td>\n",
        "      <td>-</td>\n",
        "      <td>-</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>9th</th>\n",
        "      <td>Past</td>\n",
        "      <td>26Jul2020</td>\n",
        "      <td>07Aug2020</td>\n",
        "      <td>330457362</td>\n",
        "      <td>SIR-F</td>\n",
        "      <td>0.72</td>\n",
        "      <td>0.0033965</td>\n",
        "      <td>3.12425e-05</td>\n",
        "      <td>0.00161789</td>\n",
        "      <td>0.00222304</td>\n",
        "      <td>360</td>\n",
        "      <td>112</td>\n",
        "      <td>0.003</td>\n",
        "      <td>154</td>\n",
        "      <td>8001</td>\n",
        "      <td>0.0503738</td>\n",
        "      <td>1251</td>\n",
        "      <td>1 min  0 sec</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>10th</th>\n",
        "      <td>Past</td>\n",
        "      <td>08Aug2020</td>\n",
        "      <td>20Aug2020</td>\n",
        "      <td>330457362</td>\n",
        "      <td>SIR-F</td>\n",
        "      <td>1.01</td>\n",
        "      <td>0.00406783</td>\n",
        "      <td>3.60053e-05</td>\n",
        "      <td>0.0013334</td>\n",
        "      <td>0.00127316</td>\n",
        "      <td>360</td>\n",
        "      <td>196</td>\n",
        "      <td>0.004</td>\n",
        "      <td>187</td>\n",
        "      <td>6943</td>\n",
        "      <td>0.0346352</td>\n",
        "      <td>1336</td>\n",
        "      <td>1 min  0 sec</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>11th</th>\n",
        "      <td>Past</td>\n",
        "      <td>21Aug2020</td>\n",
        "      <td>04Sep2020</td>\n",
        "      <td>330457362</td>\n",
        "      <td>-</td>\n",
        "      <td>-</td>\n",
        "      <td>-</td>\n",
        "      <td>-</td>\n",
        "      <td>-</td>\n",
        "      <td>-</td>\n",
        "      <td>-</td>\n",
        "      <td>-</td>\n",
        "      <td>-</td>\n",
        "      <td>-</td>\n",
        "      <td>-</td>\n",
        "      <td>-</td>\n",
        "      <td>-</td>\n",
        "      <td>-</td>\n",
        "    </tr>\n",
        "  </tbody>\n",
        "</table>\n",
        "</div>"
       ],
       "output_type": "pyout",
       "prompt_number": 12,
       "text": [
        "               Type      Start        End  Population    ODE    Rt  \\\n",
        "Country Phase                                                        \n",
        "Russia  1st    Past  08May2020  16May2020   330457362  SIR-F  2.42   \n",
        "        2nd    Past  17May2020  27May2020   330457362  SIR-F  1.15   \n",
        "        3rd    Past  28May2020  04Jun2020   330457362  SIR-F  1.08   \n",
        "        4th    Past  05Jun2020  13Jun2020   330457362  SIR-F  1.31   \n",
        "        5th    Past  14Jun2020  23Jun2020   330457362  SIR-F  0.82   \n",
        "        6th    Past  24Jun2020  03Jul2020   330457362      -     -   \n",
        "        7th    Past  04Jul2020  14Jul2020   330457362  SIR-F  0.79   \n",
        "        8th    Past  15Jul2020  25Jul2020   330457362      -     -   \n",
        "        9th    Past  26Jul2020  07Aug2020   330457362  SIR-F  0.72   \n",
        "        10th   Past  08Aug2020  20Aug2020   330457362  SIR-F  1.01   \n",
        "        11th   Past  21Aug2020  04Sep2020   330457362      -     -   \n",
        "\n",
        "                     theta        kappa         rho       sigma  tau  \\\n",
        "Country Phase                                                          \n",
        "Russia  1st     0.00180556  9.34529e-05   0.0129733   0.0052518  360   \n",
        "        2nd    0.000245149  0.000113228  0.00683065  0.00582833  360   \n",
        "        3rd    0.000348993  0.000113255  0.00535466  0.00483809  360   \n",
        "        4th     0.00160757  8.37069e-05  0.00462613  0.00344226  360   \n",
        "        5th    0.000348462  7.90578e-05  0.00346657   0.0041384  360   \n",
        "        6th              -            -           -           -    -   \n",
        "        7th    0.000700456  5.96165e-05  0.00233186  0.00287612  360   \n",
        "        8th              -            -           -           -    -   \n",
        "        9th      0.0033965  3.12425e-05  0.00161789  0.00222304  360   \n",
        "        10th    0.00406783  3.60053e-05   0.0013334  0.00127316  360   \n",
        "        11th             -            -           -           -    -   \n",
        "\n",
        "              1/gamma [day] alpha1 [-] 1/beta [day] 1/alpha2 [day]      RMSLE  \\\n",
        "Country Phase                                                                   \n",
        "Russia  1st              47      0.002           19           2675  0.0592362   \n",
        "        2nd              42          0           36           2207   0.108726   \n",
        "        3rd              51          0           46           2207  0.0532399   \n",
        "        4th              72      0.002           54           2986  0.0478242   \n",
        "        5th              60          0           72           3162  0.0638472   \n",
        "        6th               -          -            -              -          -   \n",
        "        7th              86      0.001          107           4193  0.0514033   \n",
        "        8th               -          -            -              -          -   \n",
        "        9th             112      0.003          154           8001  0.0503738   \n",
        "        10th            196      0.004          187           6943  0.0346352   \n",
        "        11th              -          -            -              -          -   \n",
        "\n",
        "              Trials       Runtime  \n",
        "Country Phase                       \n",
        "Russia  1st     1250  1 min  0 sec  \n",
        "        2nd     1267  1 min  0 sec  \n",
        "        3rd     1352  1 min  0 sec  \n",
        "        4th     1149  1 min  0 sec  \n",
        "        5th     1660  1 min  0 sec  \n",
        "        6th        -             -  \n",
        "        7th     1220  1 min  0 sec  \n",
        "        8th        -             -  \n",
        "        9th     1251  1 min  0 sec  \n",
        "        10th    1336  1 min  0 sec  \n",
        "        11th       -             -  "
       ]
      }
     ],
     "prompt_number": 12
    },
    {
     "cell_type": "markdown",
     "metadata": {},
     "source": [
      "## Compare the history of parameters\n",
      "Here, compare the history of parameter values if countries."
     ]
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "# All parameter/day parameter/Rt/OxCGRT\n",
      "analyser.track().head()"
     ],
     "language": "python",
     "metadata": {},
     "outputs": [
      {
       "html": [
        "<div>\n",
        "<style scoped>\n",
        "    .dataframe tbody tr th:only-of-type {\n",
        "        vertical-align: middle;\n",
        "    }\n",
        "\n",
        "    .dataframe tbody tr th {\n",
        "        vertical-align: top;\n",
        "    }\n",
        "\n",
        "    .dataframe thead th {\n",
        "        text-align: right;\n",
        "    }\n",
        "</style>\n",
        "<table border=\"1\" class=\"dataframe\">\n",
        "  <thead>\n",
        "    <tr style=\"text-align: right;\">\n",
        "      <th></th>\n",
        "      <th>Date</th>\n",
        "      <th>Country</th>\n",
        "      <th>theta</th>\n",
        "      <th>kappa</th>\n",
        "      <th>rho</th>\n",
        "      <th>sigma</th>\n",
        "      <th>alpha1 [-]</th>\n",
        "      <th>1/alpha2 [day]</th>\n",
        "      <th>1/beta [day]</th>\n",
        "      <th>1/gamma [day]</th>\n",
        "      <th>...</th>\n",
        "      <th>Cancel_events</th>\n",
        "      <th>Gatherings_restrictions</th>\n",
        "      <th>Transport_closing</th>\n",
        "      <th>Stay_home_restrictions</th>\n",
        "      <th>Internal_movement_restrictions</th>\n",
        "      <th>International_movement_restrictions</th>\n",
        "      <th>Information_campaigns</th>\n",
        "      <th>Testing_policy</th>\n",
        "      <th>Contact_tracing</th>\n",
        "      <th>Stringency_index</th>\n",
        "    </tr>\n",
        "  </thead>\n",
        "  <tbody>\n",
        "    <tr>\n",
        "      <th>0</th>\n",
        "      <td>2020-04-18</td>\n",
        "      <td>Turkey</td>\n",
        "      <td>0.0194328</td>\n",
        "      <td>0.00020932</td>\n",
        "      <td>0.009749</td>\n",
        "      <td>0.00725152</td>\n",
        "      <td>0.019</td>\n",
        "      <td>1194</td>\n",
        "      <td>25</td>\n",
        "      <td>34</td>\n",
        "      <td>...</td>\n",
        "      <td>2</td>\n",
        "      <td>0</td>\n",
        "      <td>1</td>\n",
        "      <td>3</td>\n",
        "      <td>2</td>\n",
        "      <td>4</td>\n",
        "      <td>2</td>\n",
        "      <td>2</td>\n",
        "      <td>1</td>\n",
        "      <td>77.78</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>1</th>\n",
        "      <td>2020-04-19</td>\n",
        "      <td>Turkey</td>\n",
        "      <td>0.0194328</td>\n",
        "      <td>0.00020932</td>\n",
        "      <td>0.009749</td>\n",
        "      <td>0.00725152</td>\n",
        "      <td>0.019</td>\n",
        "      <td>1194</td>\n",
        "      <td>25</td>\n",
        "      <td>34</td>\n",
        "      <td>...</td>\n",
        "      <td>2</td>\n",
        "      <td>0</td>\n",
        "      <td>1</td>\n",
        "      <td>3</td>\n",
        "      <td>2</td>\n",
        "      <td>4</td>\n",
        "      <td>2</td>\n",
        "      <td>2</td>\n",
        "      <td>2</td>\n",
        "      <td>77.78</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>2</th>\n",
        "      <td>2020-04-20</td>\n",
        "      <td>Turkey</td>\n",
        "      <td>0.0194328</td>\n",
        "      <td>0.00020932</td>\n",
        "      <td>0.009749</td>\n",
        "      <td>0.00725152</td>\n",
        "      <td>0.019</td>\n",
        "      <td>1194</td>\n",
        "      <td>25</td>\n",
        "      <td>34</td>\n",
        "      <td>...</td>\n",
        "      <td>2</td>\n",
        "      <td>0</td>\n",
        "      <td>1</td>\n",
        "      <td>2</td>\n",
        "      <td>2</td>\n",
        "      <td>4</td>\n",
        "      <td>2</td>\n",
        "      <td>2</td>\n",
        "      <td>2</td>\n",
        "      <td>75.93</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>3</th>\n",
        "      <td>2020-04-21</td>\n",
        "      <td>Turkey</td>\n",
        "      <td>0.0194328</td>\n",
        "      <td>0.00020932</td>\n",
        "      <td>0.009749</td>\n",
        "      <td>0.00725152</td>\n",
        "      <td>0.019</td>\n",
        "      <td>1194</td>\n",
        "      <td>25</td>\n",
        "      <td>34</td>\n",
        "      <td>...</td>\n",
        "      <td>2</td>\n",
        "      <td>0</td>\n",
        "      <td>1</td>\n",
        "      <td>2</td>\n",
        "      <td>2</td>\n",
        "      <td>4</td>\n",
        "      <td>2</td>\n",
        "      <td>2</td>\n",
        "      <td>2</td>\n",
        "      <td>75.93</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>4</th>\n",
        "      <td>2020-04-22</td>\n",
        "      <td>Turkey</td>\n",
        "      <td>0.0194328</td>\n",
        "      <td>0.00020932</td>\n",
        "      <td>0.009749</td>\n",
        "      <td>0.00725152</td>\n",
        "      <td>0.019</td>\n",
        "      <td>1194</td>\n",
        "      <td>25</td>\n",
        "      <td>34</td>\n",
        "      <td>...</td>\n",
        "      <td>2</td>\n",
        "      <td>0</td>\n",
        "      <td>1</td>\n",
        "      <td>2</td>\n",
        "      <td>2</td>\n",
        "      <td>4</td>\n",
        "      <td>2</td>\n",
        "      <td>2</td>\n",
        "      <td>2</td>\n",
        "      <td>75.93</td>\n",
        "    </tr>\n",
        "  </tbody>\n",
        "</table>\n",
        "<p>5 rows \u00d7 23 columns</p>\n",
        "</div>"
       ],
       "output_type": "pyout",
       "prompt_number": 13,
       "text": [
        "        Date Country      theta       kappa       rho       sigma alpha1 [-]  \\\n",
        "0 2020-04-18  Turkey  0.0194328  0.00020932  0.009749  0.00725152      0.019   \n",
        "1 2020-04-19  Turkey  0.0194328  0.00020932  0.009749  0.00725152      0.019   \n",
        "2 2020-04-20  Turkey  0.0194328  0.00020932  0.009749  0.00725152      0.019   \n",
        "3 2020-04-21  Turkey  0.0194328  0.00020932  0.009749  0.00725152      0.019   \n",
        "4 2020-04-22  Turkey  0.0194328  0.00020932  0.009749  0.00725152      0.019   \n",
        "\n",
        "  1/alpha2 [day] 1/beta [day] 1/gamma [day]  ... Cancel_events  \\\n",
        "0           1194           25            34  ...             2   \n",
        "1           1194           25            34  ...             2   \n",
        "2           1194           25            34  ...             2   \n",
        "3           1194           25            34  ...             2   \n",
        "4           1194           25            34  ...             2   \n",
        "\n",
        "   Gatherings_restrictions  Transport_closing  Stay_home_restrictions  \\\n",
        "0                        0                  1                       3   \n",
        "1                        0                  1                       3   \n",
        "2                        0                  1                       2   \n",
        "3                        0                  1                       2   \n",
        "4                        0                  1                       2   \n",
        "\n",
        "   Internal_movement_restrictions  International_movement_restrictions  \\\n",
        "0                               2                                    4   \n",
        "1                               2                                    4   \n",
        "2                               2                                    4   \n",
        "3                               2                                    4   \n",
        "4                               2                                    4   \n",
        "\n",
        "   Information_campaigns  Testing_policy  Contact_tracing  Stringency_index  \n",
        "0                      2               2                1             77.78  \n",
        "1                      2               2                2             77.78  \n",
        "2                      2               2                2             75.93  \n",
        "3                      2               2                2             75.93  \n",
        "4                      2               2                2             75.93  \n",
        "\n",
        "[5 rows x 23 columns]"
       ]
      }
     ],
     "prompt_number": 13
    },
    {
     "cell_type": "heading",
     "level": 3,
     "metadata": {},
     "source": [
      "$Rt$: Reprodcution number $\\mathrm{[-]}$"
     ]
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "analyser.param_history(\"Rt\", roll_window=None).tail()"
     ],
     "language": "python",
     "metadata": {},
     "outputs": [
      {
       "output_type": "display_data",
       "png": "\n",
       "text": [
        "<Figure size 648x432 with 1 Axes>"
       ]
      },
      {
       "html": [
        "<div>\n",
        "<style scoped>\n",
        "    .dataframe tbody tr th:only-of-type {\n",
        "        vertical-align: middle;\n",
        "    }\n",
        "\n",
        "    .dataframe tbody tr th {\n",
        "        vertical-align: top;\n",
        "    }\n",
        "\n",
        "    .dataframe thead th {\n",
        "        text-align: right;\n",
        "    }\n",
        "</style>\n",
        "<table border=\"1\" class=\"dataframe\">\n",
        "  <thead>\n",
        "    <tr style=\"text-align: right;\">\n",
        "      <th>Country</th>\n",
        "      <th>Bahrain</th>\n",
        "      <th>Bangladesh</th>\n",
        "      <th>Bolivia</th>\n",
        "      <th>Burkina Faso</th>\n",
        "      <th>Estonia</th>\n",
        "      <th>France</th>\n",
        "      <th>Georgia</th>\n",
        "      <th>Guinea</th>\n",
        "      <th>Honduras</th>\n",
        "      <th>Hungary</th>\n",
        "      <th>...</th>\n",
        "      <th>Moldova</th>\n",
        "      <th>Myanmar</th>\n",
        "      <th>Peru</th>\n",
        "      <th>Poland</th>\n",
        "      <th>Portugal</th>\n",
        "      <th>Russia</th>\n",
        "      <th>Senegal</th>\n",
        "      <th>Turkey</th>\n",
        "      <th>United Arab Emirates</th>\n",
        "      <th>United States</th>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>Date</th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "    </tr>\n",
        "  </thead>\n",
        "  <tbody>\n",
        "    <tr>\n",
        "      <th>2020-08-31</th>\n",
        "      <td>0.84</td>\n",
        "      <td>0.65</td>\n",
        "      <td>0.68</td>\n",
        "      <td>10.1</td>\n",
        "      <td>1.31</td>\n",
        "      <td>21.99</td>\n",
        "      <td>1.11</td>\n",
        "      <td>1.2</td>\n",
        "      <td>3.62</td>\n",
        "      <td>2.35</td>\n",
        "      <td>...</td>\n",
        "      <td>1.65</td>\n",
        "      <td>2.19</td>\n",
        "      <td>0.74</td>\n",
        "      <td>1.58</td>\n",
        "      <td>1.1</td>\n",
        "      <td>1.01</td>\n",
        "      <td>2.18</td>\n",
        "      <td>1.54</td>\n",
        "      <td>1.73</td>\n",
        "      <td>1.92</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>2020-09-01</th>\n",
        "      <td>0.84</td>\n",
        "      <td>0.65</td>\n",
        "      <td>0.68</td>\n",
        "      <td>10.1</td>\n",
        "      <td>1.31</td>\n",
        "      <td>21.99</td>\n",
        "      <td>1.11</td>\n",
        "      <td>1.2</td>\n",
        "      <td>3.62</td>\n",
        "      <td>2.35</td>\n",
        "      <td>...</td>\n",
        "      <td>1.65</td>\n",
        "      <td>2.19</td>\n",
        "      <td>0.74</td>\n",
        "      <td>1.58</td>\n",
        "      <td>1.1</td>\n",
        "      <td>1.01</td>\n",
        "      <td>2.18</td>\n",
        "      <td>1.54</td>\n",
        "      <td>1.73</td>\n",
        "      <td>1.92</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>2020-09-02</th>\n",
        "      <td>0.84</td>\n",
        "      <td>0.65</td>\n",
        "      <td>0.68</td>\n",
        "      <td>10.1</td>\n",
        "      <td>1.31</td>\n",
        "      <td>21.99</td>\n",
        "      <td>1.11</td>\n",
        "      <td>1.2</td>\n",
        "      <td>3.62</td>\n",
        "      <td>2.35</td>\n",
        "      <td>...</td>\n",
        "      <td>1.65</td>\n",
        "      <td>2.19</td>\n",
        "      <td>0.74</td>\n",
        "      <td>1.58</td>\n",
        "      <td>1.1</td>\n",
        "      <td>1.01</td>\n",
        "      <td>2.18</td>\n",
        "      <td>1.54</td>\n",
        "      <td>1.73</td>\n",
        "      <td>1.92</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>2020-09-03</th>\n",
        "      <td>0.84</td>\n",
        "      <td>0.65</td>\n",
        "      <td>0.68</td>\n",
        "      <td>10.1</td>\n",
        "      <td>1.31</td>\n",
        "      <td>21.99</td>\n",
        "      <td>1.11</td>\n",
        "      <td>1.2</td>\n",
        "      <td>3.62</td>\n",
        "      <td>2.35</td>\n",
        "      <td>...</td>\n",
        "      <td>1.65</td>\n",
        "      <td>2.19</td>\n",
        "      <td>0.74</td>\n",
        "      <td>1.58</td>\n",
        "      <td>1.1</td>\n",
        "      <td>1.01</td>\n",
        "      <td>2.18</td>\n",
        "      <td>1.54</td>\n",
        "      <td>1.73</td>\n",
        "      <td>1.92</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>2020-09-04</th>\n",
        "      <td>0.84</td>\n",
        "      <td>0.65</td>\n",
        "      <td>0.68</td>\n",
        "      <td>10.1</td>\n",
        "      <td>1.31</td>\n",
        "      <td>21.99</td>\n",
        "      <td>1.11</td>\n",
        "      <td>1.2</td>\n",
        "      <td>3.62</td>\n",
        "      <td>2.35</td>\n",
        "      <td>...</td>\n",
        "      <td>1.65</td>\n",
        "      <td>2.19</td>\n",
        "      <td>0.74</td>\n",
        "      <td>1.58</td>\n",
        "      <td>1.1</td>\n",
        "      <td>1.01</td>\n",
        "      <td>2.18</td>\n",
        "      <td>1.54</td>\n",
        "      <td>1.73</td>\n",
        "      <td>1.92</td>\n",
        "    </tr>\n",
        "  </tbody>\n",
        "</table>\n",
        "<p>5 rows \u00d7 25 columns</p>\n",
        "</div>"
       ],
       "output_type": "pyout",
       "prompt_number": 14,
       "text": [
        "Country     Bahrain  Bangladesh  Bolivia  Burkina Faso  Estonia  France  \\\n",
        "Date                                                                      \n",
        "2020-08-31     0.84        0.65     0.68          10.1     1.31   21.99   \n",
        "2020-09-01     0.84        0.65     0.68          10.1     1.31   21.99   \n",
        "2020-09-02     0.84        0.65     0.68          10.1     1.31   21.99   \n",
        "2020-09-03     0.84        0.65     0.68          10.1     1.31   21.99   \n",
        "2020-09-04     0.84        0.65     0.68          10.1     1.31   21.99   \n",
        "\n",
        "Country     Georgia  Guinea  Honduras  Hungary  ...  Moldova  Myanmar  Peru  \\\n",
        "Date                                            ...                           \n",
        "2020-08-31     1.11     1.2      3.62     2.35  ...     1.65     2.19  0.74   \n",
        "2020-09-01     1.11     1.2      3.62     2.35  ...     1.65     2.19  0.74   \n",
        "2020-09-02     1.11     1.2      3.62     2.35  ...     1.65     2.19  0.74   \n",
        "2020-09-03     1.11     1.2      3.62     2.35  ...     1.65     2.19  0.74   \n",
        "2020-09-04     1.11     1.2      3.62     2.35  ...     1.65     2.19  0.74   \n",
        "\n",
        "Country     Poland  Portugal  Russia  Senegal  Turkey  United Arab Emirates  \\\n",
        "Date                                                                          \n",
        "2020-08-31    1.58       1.1    1.01     2.18    1.54                  1.73   \n",
        "2020-09-01    1.58       1.1    1.01     2.18    1.54                  1.73   \n",
        "2020-09-02    1.58       1.1    1.01     2.18    1.54                  1.73   \n",
        "2020-09-03    1.58       1.1    1.01     2.18    1.54                  1.73   \n",
        "2020-09-04    1.58       1.1    1.01     2.18    1.54                  1.73   \n",
        "\n",
        "Country     United States  \n",
        "Date                       \n",
        "2020-08-31           1.92  \n",
        "2020-09-01           1.92  \n",
        "2020-09-02           1.92  \n",
        "2020-09-03           1.92  \n",
        "2020-09-04           1.92  \n",
        "\n",
        "[5 rows x 25 columns]"
       ]
      }
     ],
     "prompt_number": 14
    },
    {
     "cell_type": "heading",
     "level": 3,
     "metadata": {},
     "source": [
      "$\\rho$: Effective contact rate $\\mathrm{[-]}$"
     ]
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "analyser.param_history(\"rho\", roll_window=None).tail()"
     ],
     "language": "python",
     "metadata": {},
     "outputs": [
      {
       "output_type": "display_data",
       "png": "\n",
       "text": [
        "<Figure size 648x432 with 1 Axes>"
       ]
      },
      {
       "html": [
        "<div>\n",
        "<style scoped>\n",
        "    .dataframe tbody tr th:only-of-type {\n",
        "        vertical-align: middle;\n",
        "    }\n",
        "\n",
        "    .dataframe tbody tr th {\n",
        "        vertical-align: top;\n",
        "    }\n",
        "\n",
        "    .dataframe thead th {\n",
        "        text-align: right;\n",
        "    }\n",
        "</style>\n",
        "<table border=\"1\" class=\"dataframe\">\n",
        "  <thead>\n",
        "    <tr style=\"text-align: right;\">\n",
        "      <th>Country</th>\n",
        "      <th>Bahrain</th>\n",
        "      <th>Bangladesh</th>\n",
        "      <th>Bolivia</th>\n",
        "      <th>Burkina Faso</th>\n",
        "      <th>Estonia</th>\n",
        "      <th>France</th>\n",
        "      <th>Georgia</th>\n",
        "      <th>Guinea</th>\n",
        "      <th>Honduras</th>\n",
        "      <th>Hungary</th>\n",
        "      <th>...</th>\n",
        "      <th>Moldova</th>\n",
        "      <th>Myanmar</th>\n",
        "      <th>Peru</th>\n",
        "      <th>Poland</th>\n",
        "      <th>Portugal</th>\n",
        "      <th>Russia</th>\n",
        "      <th>Senegal</th>\n",
        "      <th>Turkey</th>\n",
        "      <th>United Arab Emirates</th>\n",
        "      <th>United States</th>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>Date</th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "    </tr>\n",
        "  </thead>\n",
        "  <tbody>\n",
        "    <tr>\n",
        "      <th>2020-08-31</th>\n",
        "      <td>0.028565</td>\n",
        "      <td>0.005035</td>\n",
        "      <td>0.004274</td>\n",
        "      <td>0.003762</td>\n",
        "      <td>0.021934</td>\n",
        "      <td>0.008018</td>\n",
        "      <td>0.010667</td>\n",
        "      <td>0.019954</td>\n",
        "      <td>0.003309</td>\n",
        "      <td>0.011206</td>\n",
        "      <td>...</td>\n",
        "      <td>0.011142</td>\n",
        "      <td>0.023459</td>\n",
        "      <td>0.002607</td>\n",
        "      <td>0.011129</td>\n",
        "      <td>0.003426</td>\n",
        "      <td>0.001333</td>\n",
        "      <td>0.007577</td>\n",
        "      <td>0.021135</td>\n",
        "      <td>0.012469</td>\n",
        "      <td>0.002786</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>2020-09-01</th>\n",
        "      <td>0.028565</td>\n",
        "      <td>0.005035</td>\n",
        "      <td>0.004274</td>\n",
        "      <td>0.003762</td>\n",
        "      <td>0.021934</td>\n",
        "      <td>0.008018</td>\n",
        "      <td>0.010667</td>\n",
        "      <td>0.019954</td>\n",
        "      <td>0.003309</td>\n",
        "      <td>0.011206</td>\n",
        "      <td>...</td>\n",
        "      <td>0.011142</td>\n",
        "      <td>0.023459</td>\n",
        "      <td>0.002607</td>\n",
        "      <td>0.011129</td>\n",
        "      <td>0.003426</td>\n",
        "      <td>0.001333</td>\n",
        "      <td>0.007577</td>\n",
        "      <td>0.021135</td>\n",
        "      <td>0.012469</td>\n",
        "      <td>0.002786</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>2020-09-02</th>\n",
        "      <td>0.028565</td>\n",
        "      <td>0.005035</td>\n",
        "      <td>0.004274</td>\n",
        "      <td>0.003762</td>\n",
        "      <td>0.021934</td>\n",
        "      <td>0.008018</td>\n",
        "      <td>0.010667</td>\n",
        "      <td>0.019954</td>\n",
        "      <td>0.003309</td>\n",
        "      <td>0.011206</td>\n",
        "      <td>...</td>\n",
        "      <td>0.011142</td>\n",
        "      <td>0.023459</td>\n",
        "      <td>0.002607</td>\n",
        "      <td>0.011129</td>\n",
        "      <td>0.003426</td>\n",
        "      <td>0.001333</td>\n",
        "      <td>0.007577</td>\n",
        "      <td>0.021135</td>\n",
        "      <td>0.012469</td>\n",
        "      <td>0.002786</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>2020-09-03</th>\n",
        "      <td>0.028565</td>\n",
        "      <td>0.005035</td>\n",
        "      <td>0.004274</td>\n",
        "      <td>0.003762</td>\n",
        "      <td>0.021934</td>\n",
        "      <td>0.008018</td>\n",
        "      <td>0.010667</td>\n",
        "      <td>0.019954</td>\n",
        "      <td>0.003309</td>\n",
        "      <td>0.011206</td>\n",
        "      <td>...</td>\n",
        "      <td>0.011142</td>\n",
        "      <td>0.023459</td>\n",
        "      <td>0.002607</td>\n",
        "      <td>0.011129</td>\n",
        "      <td>0.003426</td>\n",
        "      <td>0.001333</td>\n",
        "      <td>0.007577</td>\n",
        "      <td>0.021135</td>\n",
        "      <td>0.012469</td>\n",
        "      <td>0.002786</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>2020-09-04</th>\n",
        "      <td>0.028565</td>\n",
        "      <td>0.005035</td>\n",
        "      <td>0.004274</td>\n",
        "      <td>0.003762</td>\n",
        "      <td>0.021934</td>\n",
        "      <td>0.008018</td>\n",
        "      <td>0.010667</td>\n",
        "      <td>0.019954</td>\n",
        "      <td>0.003309</td>\n",
        "      <td>0.011206</td>\n",
        "      <td>...</td>\n",
        "      <td>0.011142</td>\n",
        "      <td>0.023459</td>\n",
        "      <td>0.002607</td>\n",
        "      <td>0.011129</td>\n",
        "      <td>0.003426</td>\n",
        "      <td>0.001333</td>\n",
        "      <td>0.007577</td>\n",
        "      <td>0.021135</td>\n",
        "      <td>0.012469</td>\n",
        "      <td>0.002786</td>\n",
        "    </tr>\n",
        "  </tbody>\n",
        "</table>\n",
        "<p>5 rows \u00d7 25 columns</p>\n",
        "</div>"
       ],
       "output_type": "pyout",
       "prompt_number": 15,
       "text": [
        "Country      Bahrain  Bangladesh   Bolivia  Burkina Faso   Estonia    France  \\\n",
        "Date                                                                           \n",
        "2020-08-31  0.028565    0.005035  0.004274      0.003762  0.021934  0.008018   \n",
        "2020-09-01  0.028565    0.005035  0.004274      0.003762  0.021934  0.008018   \n",
        "2020-09-02  0.028565    0.005035  0.004274      0.003762  0.021934  0.008018   \n",
        "2020-09-03  0.028565    0.005035  0.004274      0.003762  0.021934  0.008018   \n",
        "2020-09-04  0.028565    0.005035  0.004274      0.003762  0.021934  0.008018   \n",
        "\n",
        "Country      Georgia    Guinea  Honduras   Hungary  ...   Moldova   Myanmar  \\\n",
        "Date                                                ...                       \n",
        "2020-08-31  0.010667  0.019954  0.003309  0.011206  ...  0.011142  0.023459   \n",
        "2020-09-01  0.010667  0.019954  0.003309  0.011206  ...  0.011142  0.023459   \n",
        "2020-09-02  0.010667  0.019954  0.003309  0.011206  ...  0.011142  0.023459   \n",
        "2020-09-03  0.010667  0.019954  0.003309  0.011206  ...  0.011142  0.023459   \n",
        "2020-09-04  0.010667  0.019954  0.003309  0.011206  ...  0.011142  0.023459   \n",
        "\n",
        "Country         Peru    Poland  Portugal    Russia   Senegal    Turkey  \\\n",
        "Date                                                                     \n",
        "2020-08-31  0.002607  0.011129  0.003426  0.001333  0.007577  0.021135   \n",
        "2020-09-01  0.002607  0.011129  0.003426  0.001333  0.007577  0.021135   \n",
        "2020-09-02  0.002607  0.011129  0.003426  0.001333  0.007577  0.021135   \n",
        "2020-09-03  0.002607  0.011129  0.003426  0.001333  0.007577  0.021135   \n",
        "2020-09-04  0.002607  0.011129  0.003426  0.001333  0.007577  0.021135   \n",
        "\n",
        "Country     United Arab Emirates  United States  \n",
        "Date                                             \n",
        "2020-08-31              0.012469       0.002786  \n",
        "2020-09-01              0.012469       0.002786  \n",
        "2020-09-02              0.012469       0.002786  \n",
        "2020-09-03              0.012469       0.002786  \n",
        "2020-09-04              0.012469       0.002786  \n",
        "\n",
        "[5 rows x 25 columns]"
       ]
      }
     ],
     "prompt_number": 15
    },
    {
     "cell_type": "heading",
     "level": 3,
     "metadata": {},
     "source": [
      "$\\sigma$: Recovery rate $\\mathrm{[-]}$"
     ]
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "analyser.param_history(\"sigma\", roll_window=None).tail()"
     ],
     "language": "python",
     "metadata": {},
     "outputs": [
      {
       "output_type": "display_data",
       "png": "\n",
       "text": [
        "<Figure size 648x432 with 1 Axes>"
       ]
      },
      {
       "html": [
        "<div>\n",
        "<style scoped>\n",
        "    .dataframe tbody tr th:only-of-type {\n",
        "        vertical-align: middle;\n",
        "    }\n",
        "\n",
        "    .dataframe tbody tr th {\n",
        "        vertical-align: top;\n",
        "    }\n",
        "\n",
        "    .dataframe thead th {\n",
        "        text-align: right;\n",
        "    }\n",
        "</style>\n",
        "<table border=\"1\" class=\"dataframe\">\n",
        "  <thead>\n",
        "    <tr style=\"text-align: right;\">\n",
        "      <th>Country</th>\n",
        "      <th>Bahrain</th>\n",
        "      <th>Bangladesh</th>\n",
        "      <th>Bolivia</th>\n",
        "      <th>Burkina Faso</th>\n",
        "      <th>Estonia</th>\n",
        "      <th>France</th>\n",
        "      <th>Georgia</th>\n",
        "      <th>Guinea</th>\n",
        "      <th>Honduras</th>\n",
        "      <th>Hungary</th>\n",
        "      <th>...</th>\n",
        "      <th>Moldova</th>\n",
        "      <th>Myanmar</th>\n",
        "      <th>Peru</th>\n",
        "      <th>Poland</th>\n",
        "      <th>Portugal</th>\n",
        "      <th>Russia</th>\n",
        "      <th>Senegal</th>\n",
        "      <th>Turkey</th>\n",
        "      <th>United Arab Emirates</th>\n",
        "      <th>United States</th>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>Date</th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "    </tr>\n",
        "  </thead>\n",
        "  <tbody>\n",
        "    <tr>\n",
        "      <th>2020-08-31</th>\n",
        "      <td>0.033746</td>\n",
        "      <td>0.007622</td>\n",
        "      <td>0.006041</td>\n",
        "      <td>0.00037</td>\n",
        "      <td>0.016659</td>\n",
        "      <td>0.000308</td>\n",
        "      <td>0.009589</td>\n",
        "      <td>0.0165</td>\n",
        "      <td>0.000854</td>\n",
        "      <td>0.004617</td>\n",
        "      <td>...</td>\n",
        "      <td>0.006589</td>\n",
        "      <td>0.01042</td>\n",
        "      <td>0.003454</td>\n",
        "      <td>0.006858</td>\n",
        "      <td>0.003017</td>\n",
        "      <td>0.001273</td>\n",
        "      <td>0.003366</td>\n",
        "      <td>0.013294</td>\n",
        "      <td>0.007159</td>\n",
        "      <td>0.001372</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>2020-09-01</th>\n",
        "      <td>0.033746</td>\n",
        "      <td>0.007622</td>\n",
        "      <td>0.006041</td>\n",
        "      <td>0.00037</td>\n",
        "      <td>0.016659</td>\n",
        "      <td>0.000308</td>\n",
        "      <td>0.009589</td>\n",
        "      <td>0.0165</td>\n",
        "      <td>0.000854</td>\n",
        "      <td>0.004617</td>\n",
        "      <td>...</td>\n",
        "      <td>0.006589</td>\n",
        "      <td>0.01042</td>\n",
        "      <td>0.003454</td>\n",
        "      <td>0.006858</td>\n",
        "      <td>0.003017</td>\n",
        "      <td>0.001273</td>\n",
        "      <td>0.003366</td>\n",
        "      <td>0.013294</td>\n",
        "      <td>0.007159</td>\n",
        "      <td>0.001372</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>2020-09-02</th>\n",
        "      <td>0.033746</td>\n",
        "      <td>0.007622</td>\n",
        "      <td>0.006041</td>\n",
        "      <td>0.00037</td>\n",
        "      <td>0.016659</td>\n",
        "      <td>0.000308</td>\n",
        "      <td>0.009589</td>\n",
        "      <td>0.0165</td>\n",
        "      <td>0.000854</td>\n",
        "      <td>0.004617</td>\n",
        "      <td>...</td>\n",
        "      <td>0.006589</td>\n",
        "      <td>0.01042</td>\n",
        "      <td>0.003454</td>\n",
        "      <td>0.006858</td>\n",
        "      <td>0.003017</td>\n",
        "      <td>0.001273</td>\n",
        "      <td>0.003366</td>\n",
        "      <td>0.013294</td>\n",
        "      <td>0.007159</td>\n",
        "      <td>0.001372</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>2020-09-03</th>\n",
        "      <td>0.033746</td>\n",
        "      <td>0.007622</td>\n",
        "      <td>0.006041</td>\n",
        "      <td>0.00037</td>\n",
        "      <td>0.016659</td>\n",
        "      <td>0.000308</td>\n",
        "      <td>0.009589</td>\n",
        "      <td>0.0165</td>\n",
        "      <td>0.000854</td>\n",
        "      <td>0.004617</td>\n",
        "      <td>...</td>\n",
        "      <td>0.006589</td>\n",
        "      <td>0.01042</td>\n",
        "      <td>0.003454</td>\n",
        "      <td>0.006858</td>\n",
        "      <td>0.003017</td>\n",
        "      <td>0.001273</td>\n",
        "      <td>0.003366</td>\n",
        "      <td>0.013294</td>\n",
        "      <td>0.007159</td>\n",
        "      <td>0.001372</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>2020-09-04</th>\n",
        "      <td>0.033746</td>\n",
        "      <td>0.007622</td>\n",
        "      <td>0.006041</td>\n",
        "      <td>0.00037</td>\n",
        "      <td>0.016659</td>\n",
        "      <td>0.000308</td>\n",
        "      <td>0.009589</td>\n",
        "      <td>0.0165</td>\n",
        "      <td>0.000854</td>\n",
        "      <td>0.004617</td>\n",
        "      <td>...</td>\n",
        "      <td>0.006589</td>\n",
        "      <td>0.01042</td>\n",
        "      <td>0.003454</td>\n",
        "      <td>0.006858</td>\n",
        "      <td>0.003017</td>\n",
        "      <td>0.001273</td>\n",
        "      <td>0.003366</td>\n",
        "      <td>0.013294</td>\n",
        "      <td>0.007159</td>\n",
        "      <td>0.001372</td>\n",
        "    </tr>\n",
        "  </tbody>\n",
        "</table>\n",
        "<p>5 rows \u00d7 25 columns</p>\n",
        "</div>"
       ],
       "output_type": "pyout",
       "prompt_number": 16,
       "text": [
        "Country      Bahrain  Bangladesh   Bolivia  Burkina Faso   Estonia    France  \\\n",
        "Date                                                                           \n",
        "2020-08-31  0.033746    0.007622  0.006041       0.00037  0.016659  0.000308   \n",
        "2020-09-01  0.033746    0.007622  0.006041       0.00037  0.016659  0.000308   \n",
        "2020-09-02  0.033746    0.007622  0.006041       0.00037  0.016659  0.000308   \n",
        "2020-09-03  0.033746    0.007622  0.006041       0.00037  0.016659  0.000308   \n",
        "2020-09-04  0.033746    0.007622  0.006041       0.00037  0.016659  0.000308   \n",
        "\n",
        "Country      Georgia  Guinea  Honduras   Hungary  ...   Moldova  Myanmar  \\\n",
        "Date                                              ...                      \n",
        "2020-08-31  0.009589  0.0165  0.000854  0.004617  ...  0.006589  0.01042   \n",
        "2020-09-01  0.009589  0.0165  0.000854  0.004617  ...  0.006589  0.01042   \n",
        "2020-09-02  0.009589  0.0165  0.000854  0.004617  ...  0.006589  0.01042   \n",
        "2020-09-03  0.009589  0.0165  0.000854  0.004617  ...  0.006589  0.01042   \n",
        "2020-09-04  0.009589  0.0165  0.000854  0.004617  ...  0.006589  0.01042   \n",
        "\n",
        "Country         Peru    Poland  Portugal    Russia   Senegal    Turkey  \\\n",
        "Date                                                                     \n",
        "2020-08-31  0.003454  0.006858  0.003017  0.001273  0.003366  0.013294   \n",
        "2020-09-01  0.003454  0.006858  0.003017  0.001273  0.003366  0.013294   \n",
        "2020-09-02  0.003454  0.006858  0.003017  0.001273  0.003366  0.013294   \n",
        "2020-09-03  0.003454  0.006858  0.003017  0.001273  0.003366  0.013294   \n",
        "2020-09-04  0.003454  0.006858  0.003017  0.001273  0.003366  0.013294   \n",
        "\n",
        "Country     United Arab Emirates  United States  \n",
        "Date                                             \n",
        "2020-08-31              0.007159       0.001372  \n",
        "2020-09-01              0.007159       0.001372  \n",
        "2020-09-02              0.007159       0.001372  \n",
        "2020-09-03              0.007159       0.001372  \n",
        "2020-09-04              0.007159       0.001372  \n",
        "\n",
        "[5 rows x 25 columns]"
       ]
      }
     ],
     "prompt_number": 16
    },
    {
     "cell_type": "heading",
     "level": 3,
     "metadata": {},
     "source": [
      "$\\kappa$: Mortality rate of infected cases $\\mathrm{[-]}$"
     ]
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "analyser.param_history(\"kappa\", roll_window=None).tail()"
     ],
     "language": "python",
     "metadata": {},
     "outputs": [
      {
       "output_type": "display_data",
       "png": "\n",
       "text": [
        "<Figure size 648x432 with 1 Axes>"
       ]
      },
      {
       "html": [
        "<div>\n",
        "<style scoped>\n",
        "    .dataframe tbody tr th:only-of-type {\n",
        "        vertical-align: middle;\n",
        "    }\n",
        "\n",
        "    .dataframe tbody tr th {\n",
        "        vertical-align: top;\n",
        "    }\n",
        "\n",
        "    .dataframe thead th {\n",
        "        text-align: right;\n",
        "    }\n",
        "</style>\n",
        "<table border=\"1\" class=\"dataframe\">\n",
        "  <thead>\n",
        "    <tr style=\"text-align: right;\">\n",
        "      <th>Country</th>\n",
        "      <th>Bahrain</th>\n",
        "      <th>Bangladesh</th>\n",
        "      <th>Bolivia</th>\n",
        "      <th>Burkina Faso</th>\n",
        "      <th>Estonia</th>\n",
        "      <th>France</th>\n",
        "      <th>Georgia</th>\n",
        "      <th>Guinea</th>\n",
        "      <th>Honduras</th>\n",
        "      <th>Hungary</th>\n",
        "      <th>...</th>\n",
        "      <th>Moldova</th>\n",
        "      <th>Myanmar</th>\n",
        "      <th>Peru</th>\n",
        "      <th>Poland</th>\n",
        "      <th>Portugal</th>\n",
        "      <th>Russia</th>\n",
        "      <th>Senegal</th>\n",
        "      <th>Turkey</th>\n",
        "      <th>United Arab Emirates</th>\n",
        "      <th>United States</th>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>Date</th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "    </tr>\n",
        "  </thead>\n",
        "  <tbody>\n",
        "    <tr>\n",
        "      <th>2020-08-31</th>\n",
        "      <td>0.000014</td>\n",
        "      <td>0.000098</td>\n",
        "      <td>0.000256</td>\n",
        "      <td>0.000002</td>\n",
        "      <td>0.00006</td>\n",
        "      <td>0.000057</td>\n",
        "      <td>0.000002</td>\n",
        "      <td>0.000168</td>\n",
        "      <td>0.00006</td>\n",
        "      <td>0.00015</td>\n",
        "      <td>...</td>\n",
        "      <td>0.000039</td>\n",
        "      <td>0.000273</td>\n",
        "      <td>0.000019</td>\n",
        "      <td>0.000162</td>\n",
        "      <td>0.00007</td>\n",
        "      <td>0.000036</td>\n",
        "      <td>0.000048</td>\n",
        "      <td>0.000422</td>\n",
        "      <td>0.000037</td>\n",
        "      <td>0.000076</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>2020-09-01</th>\n",
        "      <td>0.000014</td>\n",
        "      <td>0.000098</td>\n",
        "      <td>0.000256</td>\n",
        "      <td>0.000002</td>\n",
        "      <td>0.00006</td>\n",
        "      <td>0.000057</td>\n",
        "      <td>0.000002</td>\n",
        "      <td>0.000168</td>\n",
        "      <td>0.00006</td>\n",
        "      <td>0.00015</td>\n",
        "      <td>...</td>\n",
        "      <td>0.000039</td>\n",
        "      <td>0.000273</td>\n",
        "      <td>0.000019</td>\n",
        "      <td>0.000162</td>\n",
        "      <td>0.00007</td>\n",
        "      <td>0.000036</td>\n",
        "      <td>0.000048</td>\n",
        "      <td>0.000422</td>\n",
        "      <td>0.000037</td>\n",
        "      <td>0.000076</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>2020-09-02</th>\n",
        "      <td>0.000014</td>\n",
        "      <td>0.000098</td>\n",
        "      <td>0.000256</td>\n",
        "      <td>0.000002</td>\n",
        "      <td>0.00006</td>\n",
        "      <td>0.000057</td>\n",
        "      <td>0.000002</td>\n",
        "      <td>0.000168</td>\n",
        "      <td>0.00006</td>\n",
        "      <td>0.00015</td>\n",
        "      <td>...</td>\n",
        "      <td>0.000039</td>\n",
        "      <td>0.000273</td>\n",
        "      <td>0.000019</td>\n",
        "      <td>0.000162</td>\n",
        "      <td>0.00007</td>\n",
        "      <td>0.000036</td>\n",
        "      <td>0.000048</td>\n",
        "      <td>0.000422</td>\n",
        "      <td>0.000037</td>\n",
        "      <td>0.000076</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>2020-09-03</th>\n",
        "      <td>0.000014</td>\n",
        "      <td>0.000098</td>\n",
        "      <td>0.000256</td>\n",
        "      <td>0.000002</td>\n",
        "      <td>0.00006</td>\n",
        "      <td>0.000057</td>\n",
        "      <td>0.000002</td>\n",
        "      <td>0.000168</td>\n",
        "      <td>0.00006</td>\n",
        "      <td>0.00015</td>\n",
        "      <td>...</td>\n",
        "      <td>0.000039</td>\n",
        "      <td>0.000273</td>\n",
        "      <td>0.000019</td>\n",
        "      <td>0.000162</td>\n",
        "      <td>0.00007</td>\n",
        "      <td>0.000036</td>\n",
        "      <td>0.000048</td>\n",
        "      <td>0.000422</td>\n",
        "      <td>0.000037</td>\n",
        "      <td>0.000076</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>2020-09-04</th>\n",
        "      <td>0.000014</td>\n",
        "      <td>0.000098</td>\n",
        "      <td>0.000256</td>\n",
        "      <td>0.000002</td>\n",
        "      <td>0.00006</td>\n",
        "      <td>0.000057</td>\n",
        "      <td>0.000002</td>\n",
        "      <td>0.000168</td>\n",
        "      <td>0.00006</td>\n",
        "      <td>0.00015</td>\n",
        "      <td>...</td>\n",
        "      <td>0.000039</td>\n",
        "      <td>0.000273</td>\n",
        "      <td>0.000019</td>\n",
        "      <td>0.000162</td>\n",
        "      <td>0.00007</td>\n",
        "      <td>0.000036</td>\n",
        "      <td>0.000048</td>\n",
        "      <td>0.000422</td>\n",
        "      <td>0.000037</td>\n",
        "      <td>0.000076</td>\n",
        "    </tr>\n",
        "  </tbody>\n",
        "</table>\n",
        "<p>5 rows \u00d7 25 columns</p>\n",
        "</div>"
       ],
       "output_type": "pyout",
       "prompt_number": 17,
       "text": [
        "Country      Bahrain  Bangladesh   Bolivia  Burkina Faso  Estonia    France  \\\n",
        "Date                                                                          \n",
        "2020-08-31  0.000014    0.000098  0.000256      0.000002  0.00006  0.000057   \n",
        "2020-09-01  0.000014    0.000098  0.000256      0.000002  0.00006  0.000057   \n",
        "2020-09-02  0.000014    0.000098  0.000256      0.000002  0.00006  0.000057   \n",
        "2020-09-03  0.000014    0.000098  0.000256      0.000002  0.00006  0.000057   \n",
        "2020-09-04  0.000014    0.000098  0.000256      0.000002  0.00006  0.000057   \n",
        "\n",
        "Country      Georgia    Guinea  Honduras  Hungary  ...   Moldova   Myanmar  \\\n",
        "Date                                               ...                       \n",
        "2020-08-31  0.000002  0.000168   0.00006  0.00015  ...  0.000039  0.000273   \n",
        "2020-09-01  0.000002  0.000168   0.00006  0.00015  ...  0.000039  0.000273   \n",
        "2020-09-02  0.000002  0.000168   0.00006  0.00015  ...  0.000039  0.000273   \n",
        "2020-09-03  0.000002  0.000168   0.00006  0.00015  ...  0.000039  0.000273   \n",
        "2020-09-04  0.000002  0.000168   0.00006  0.00015  ...  0.000039  0.000273   \n",
        "\n",
        "Country         Peru    Poland  Portugal    Russia   Senegal    Turkey  \\\n",
        "Date                                                                     \n",
        "2020-08-31  0.000019  0.000162   0.00007  0.000036  0.000048  0.000422   \n",
        "2020-09-01  0.000019  0.000162   0.00007  0.000036  0.000048  0.000422   \n",
        "2020-09-02  0.000019  0.000162   0.00007  0.000036  0.000048  0.000422   \n",
        "2020-09-03  0.000019  0.000162   0.00007  0.000036  0.000048  0.000422   \n",
        "2020-09-04  0.000019  0.000162   0.00007  0.000036  0.000048  0.000422   \n",
        "\n",
        "Country     United Arab Emirates  United States  \n",
        "Date                                             \n",
        "2020-08-31              0.000037       0.000076  \n",
        "2020-09-01              0.000037       0.000076  \n",
        "2020-09-02              0.000037       0.000076  \n",
        "2020-09-03              0.000037       0.000076  \n",
        "2020-09-04              0.000037       0.000076  \n",
        "\n",
        "[5 rows x 25 columns]"
       ]
      }
     ],
     "prompt_number": 17
    },
    {
     "cell_type": "heading",
     "level": 3,
     "metadata": {},
     "source": [
      "$\\theta$: Mortality rate of S$^\\ast$ cases $\\mathrm{[-]}$"
     ]
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "analyser.param_history(\"theta\", roll_window=None).tail()"
     ],
     "language": "python",
     "metadata": {},
     "outputs": [
      {
       "output_type": "display_data",
       "png": "\n",
       "text": [
        "<Figure size 648x432 with 1 Axes>"
       ]
      },
      {
       "html": [
        "<div>\n",
        "<style scoped>\n",
        "    .dataframe tbody tr th:only-of-type {\n",
        "        vertical-align: middle;\n",
        "    }\n",
        "\n",
        "    .dataframe tbody tr th {\n",
        "        vertical-align: top;\n",
        "    }\n",
        "\n",
        "    .dataframe thead th {\n",
        "        text-align: right;\n",
        "    }\n",
        "</style>\n",
        "<table border=\"1\" class=\"dataframe\">\n",
        "  <thead>\n",
        "    <tr style=\"text-align: right;\">\n",
        "      <th>Country</th>\n",
        "      <th>Bahrain</th>\n",
        "      <th>Bangladesh</th>\n",
        "      <th>Bolivia</th>\n",
        "      <th>Burkina Faso</th>\n",
        "      <th>Estonia</th>\n",
        "      <th>France</th>\n",
        "      <th>Georgia</th>\n",
        "      <th>Guinea</th>\n",
        "      <th>Honduras</th>\n",
        "      <th>Hungary</th>\n",
        "      <th>...</th>\n",
        "      <th>Moldova</th>\n",
        "      <th>Myanmar</th>\n",
        "      <th>Peru</th>\n",
        "      <th>Poland</th>\n",
        "      <th>Portugal</th>\n",
        "      <th>Russia</th>\n",
        "      <th>Senegal</th>\n",
        "      <th>Turkey</th>\n",
        "      <th>United Arab Emirates</th>\n",
        "      <th>United States</th>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>Date</th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "    </tr>\n",
        "  </thead>\n",
        "  <tbody>\n",
        "    <tr>\n",
        "      <th>2020-08-31</th>\n",
        "      <td>0.00344</td>\n",
        "      <td>0.000528</td>\n",
        "      <td>0.000655</td>\n",
        "      <td>0.000426</td>\n",
        "      <td>0.000158</td>\n",
        "      <td>0.000164</td>\n",
        "      <td>0.000099</td>\n",
        "      <td>0.00013</td>\n",
        "      <td>0.000405</td>\n",
        "      <td>0.000656</td>\n",
        "      <td>...</td>\n",
        "      <td>0.016288</td>\n",
        "      <td>0.000201</td>\n",
        "      <td>0.018663</td>\n",
        "      <td>0.001174</td>\n",
        "      <td>0.00729</td>\n",
        "      <td>0.004068</td>\n",
        "      <td>0.01718</td>\n",
        "      <td>0.000379</td>\n",
        "      <td>0.000665</td>\n",
        "      <td>0.000474</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>2020-09-01</th>\n",
        "      <td>0.00344</td>\n",
        "      <td>0.000528</td>\n",
        "      <td>0.000655</td>\n",
        "      <td>0.000426</td>\n",
        "      <td>0.000158</td>\n",
        "      <td>0.000164</td>\n",
        "      <td>0.000099</td>\n",
        "      <td>0.00013</td>\n",
        "      <td>0.000405</td>\n",
        "      <td>0.000656</td>\n",
        "      <td>...</td>\n",
        "      <td>0.016288</td>\n",
        "      <td>0.000201</td>\n",
        "      <td>0.018663</td>\n",
        "      <td>0.001174</td>\n",
        "      <td>0.00729</td>\n",
        "      <td>0.004068</td>\n",
        "      <td>0.01718</td>\n",
        "      <td>0.000379</td>\n",
        "      <td>0.000665</td>\n",
        "      <td>0.000474</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>2020-09-02</th>\n",
        "      <td>0.00344</td>\n",
        "      <td>0.000528</td>\n",
        "      <td>0.000655</td>\n",
        "      <td>0.000426</td>\n",
        "      <td>0.000158</td>\n",
        "      <td>0.000164</td>\n",
        "      <td>0.000099</td>\n",
        "      <td>0.00013</td>\n",
        "      <td>0.000405</td>\n",
        "      <td>0.000656</td>\n",
        "      <td>...</td>\n",
        "      <td>0.016288</td>\n",
        "      <td>0.000201</td>\n",
        "      <td>0.018663</td>\n",
        "      <td>0.001174</td>\n",
        "      <td>0.00729</td>\n",
        "      <td>0.004068</td>\n",
        "      <td>0.01718</td>\n",
        "      <td>0.000379</td>\n",
        "      <td>0.000665</td>\n",
        "      <td>0.000474</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>2020-09-03</th>\n",
        "      <td>0.00344</td>\n",
        "      <td>0.000528</td>\n",
        "      <td>0.000655</td>\n",
        "      <td>0.000426</td>\n",
        "      <td>0.000158</td>\n",
        "      <td>0.000164</td>\n",
        "      <td>0.000099</td>\n",
        "      <td>0.00013</td>\n",
        "      <td>0.000405</td>\n",
        "      <td>0.000656</td>\n",
        "      <td>...</td>\n",
        "      <td>0.016288</td>\n",
        "      <td>0.000201</td>\n",
        "      <td>0.018663</td>\n",
        "      <td>0.001174</td>\n",
        "      <td>0.00729</td>\n",
        "      <td>0.004068</td>\n",
        "      <td>0.01718</td>\n",
        "      <td>0.000379</td>\n",
        "      <td>0.000665</td>\n",
        "      <td>0.000474</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>2020-09-04</th>\n",
        "      <td>0.00344</td>\n",
        "      <td>0.000528</td>\n",
        "      <td>0.000655</td>\n",
        "      <td>0.000426</td>\n",
        "      <td>0.000158</td>\n",
        "      <td>0.000164</td>\n",
        "      <td>0.000099</td>\n",
        "      <td>0.00013</td>\n",
        "      <td>0.000405</td>\n",
        "      <td>0.000656</td>\n",
        "      <td>...</td>\n",
        "      <td>0.016288</td>\n",
        "      <td>0.000201</td>\n",
        "      <td>0.018663</td>\n",
        "      <td>0.001174</td>\n",
        "      <td>0.00729</td>\n",
        "      <td>0.004068</td>\n",
        "      <td>0.01718</td>\n",
        "      <td>0.000379</td>\n",
        "      <td>0.000665</td>\n",
        "      <td>0.000474</td>\n",
        "    </tr>\n",
        "  </tbody>\n",
        "</table>\n",
        "<p>5 rows \u00d7 25 columns</p>\n",
        "</div>"
       ],
       "output_type": "pyout",
       "prompt_number": 18,
       "text": [
        "Country     Bahrain  Bangladesh   Bolivia  Burkina Faso   Estonia    France  \\\n",
        "Date                                                                          \n",
        "2020-08-31  0.00344    0.000528  0.000655      0.000426  0.000158  0.000164   \n",
        "2020-09-01  0.00344    0.000528  0.000655      0.000426  0.000158  0.000164   \n",
        "2020-09-02  0.00344    0.000528  0.000655      0.000426  0.000158  0.000164   \n",
        "2020-09-03  0.00344    0.000528  0.000655      0.000426  0.000158  0.000164   \n",
        "2020-09-04  0.00344    0.000528  0.000655      0.000426  0.000158  0.000164   \n",
        "\n",
        "Country      Georgia   Guinea  Honduras   Hungary  ...   Moldova   Myanmar  \\\n",
        "Date                                               ...                       \n",
        "2020-08-31  0.000099  0.00013  0.000405  0.000656  ...  0.016288  0.000201   \n",
        "2020-09-01  0.000099  0.00013  0.000405  0.000656  ...  0.016288  0.000201   \n",
        "2020-09-02  0.000099  0.00013  0.000405  0.000656  ...  0.016288  0.000201   \n",
        "2020-09-03  0.000099  0.00013  0.000405  0.000656  ...  0.016288  0.000201   \n",
        "2020-09-04  0.000099  0.00013  0.000405  0.000656  ...  0.016288  0.000201   \n",
        "\n",
        "Country         Peru    Poland  Portugal    Russia  Senegal    Turkey  \\\n",
        "Date                                                                    \n",
        "2020-08-31  0.018663  0.001174   0.00729  0.004068  0.01718  0.000379   \n",
        "2020-09-01  0.018663  0.001174   0.00729  0.004068  0.01718  0.000379   \n",
        "2020-09-02  0.018663  0.001174   0.00729  0.004068  0.01718  0.000379   \n",
        "2020-09-03  0.018663  0.001174   0.00729  0.004068  0.01718  0.000379   \n",
        "2020-09-04  0.018663  0.001174   0.00729  0.004068  0.01718  0.000379   \n",
        "\n",
        "Country     United Arab Emirates  United States  \n",
        "Date                                             \n",
        "2020-08-31              0.000665       0.000474  \n",
        "2020-09-01              0.000665       0.000474  \n",
        "2020-09-02              0.000665       0.000474  \n",
        "2020-09-03              0.000665       0.000474  \n",
        "2020-09-04              0.000665       0.000474  \n",
        "\n",
        "[5 rows x 25 columns]"
       ]
      }
     ],
     "prompt_number": 18
    },
    {
     "cell_type": "markdown",
     "metadata": {},
     "source": [
      "## (Experimental): Relationship of OxCGRT index and parameter values\n",
      "Government responses will impact on parameter values of ODE models about 14 days later. Here, we will investigate on the relationship of [stringency index (from OxCGRT)](https://github.com/OxCGRT/covid-policy-tracker/blob/master/documentation/index_methodology.md) and reproduction number/model parameters.\n"
     ]
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "%matplotlib inline\n",
      "from matplotlib import pyplot as plt\n",
      "import seaborn as sns\n",
      "import pandas as pd"
     ],
     "language": "python",
     "metadata": {},
     "outputs": [],
     "prompt_number": 19
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "df = analyser.track()\n",
      "param_cols = [\"Rt\", *cs.SIRF.PARAMETERS]\n",
      "oxcgrt_cols = oxcgrt_data.OXCGRT_VARS[:]\n",
      "cols = param_cols + oxcgrt_cols\n",
      "delay = 14\n",
      "\n",
      "for col in param_cols:\n",
      "    df[col] = pd.to_numeric(df[col], errors=\"coerce\")\n",
      "    df[col] = df.groupby(\"Country\")[col].shift(0 - delay)\n",
      "\n",
      "df = df.dropna(how=\"any\")\n",
      "df = df.loc[:, [\"Date\", \"Country\", *cols]]\n",
      "track_df = df.copy()\n",
      "track_df.info()"
     ],
     "language": "python",
     "metadata": {},
     "outputs": [
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "<class 'pandas.core.frame.DataFrame'>\n",
        "Int64Index: 31037 entries, 0 to 31372\n",
        "Data columns (total 19 columns):\n",
        " #   Column                               Non-Null Count  Dtype         \n",
        "---  ------                               --------------  -----         \n",
        " 0   Date                                 31037 non-null  datetime64[ns]\n",
        " 1   Country                              31037 non-null  object        \n",
        " 2   Rt                                   31037 non-null  float64       \n",
        " 3   theta                                31037 non-null  float64       \n",
        " 4   kappa                                31037 non-null  float64       \n",
        " 5   rho                                  31037 non-null  float64       \n",
        " 6   sigma                                31037 non-null  float64       \n",
        " 7   School_closing                       31037 non-null  int64         \n",
        " 8   Workplace_closing                    31037 non-null  int64         \n",
        " 9   Cancel_events                        31037 non-null  int64         \n",
        " 10  Gatherings_restrictions              31037 non-null  int64         \n",
        " 11  Transport_closing                    31037 non-null  int64         \n",
        " 12  Stay_home_restrictions               31037 non-null  int64         \n",
        " 13  Internal_movement_restrictions       31037 non-null  int64         \n",
        " 14  International_movement_restrictions  31037 non-null  int64         \n",
        " 15  Information_campaigns                31037 non-null  int64         \n",
        " 16  Testing_policy                       31037 non-null  int64         \n",
        " 17  Contact_tracing                      31037 non-null  int64         \n",
        " 18  Stringency_index                     31037 non-null  float64       \n",
        "dtypes: datetime64[ns](1), float64(6), int64(11), object(1)\n",
        "memory usage: 4.7+ MB\n"
       ]
      }
     ],
     "prompt_number": 20
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "# Correlation\n",
      "df = track_df.copy()\n",
      "df.corr().style.background_gradient(axis=None)"
     ],
     "language": "python",
     "metadata": {},
     "outputs": [
      {
       "html": [
        "<style  type=\"text/css\" >\n",
        "#T_49efadb8_eec6_11ea_9ee4_5254002abcccrow0_col0,#T_49efadb8_eec6_11ea_9ee4_5254002abcccrow1_col1,#T_49efadb8_eec6_11ea_9ee4_5254002abcccrow2_col2,#T_49efadb8_eec6_11ea_9ee4_5254002abcccrow3_col3,#T_49efadb8_eec6_11ea_9ee4_5254002abcccrow4_col4,#T_49efadb8_eec6_11ea_9ee4_5254002abcccrow5_col5,#T_49efadb8_eec6_11ea_9ee4_5254002abcccrow6_col6,#T_49efadb8_eec6_11ea_9ee4_5254002abcccrow7_col7,#T_49efadb8_eec6_11ea_9ee4_5254002abcccrow8_col8,#T_49efadb8_eec6_11ea_9ee4_5254002abcccrow9_col9,#T_49efadb8_eec6_11ea_9ee4_5254002abcccrow10_col10,#T_49efadb8_eec6_11ea_9ee4_5254002abcccrow11_col11,#T_49efadb8_eec6_11ea_9ee4_5254002abcccrow12_col12,#T_49efadb8_eec6_11ea_9ee4_5254002abcccrow13_col13,#T_49efadb8_eec6_11ea_9ee4_5254002abcccrow14_col14,#T_49efadb8_eec6_11ea_9ee4_5254002abcccrow15_col15,#T_49efadb8_eec6_11ea_9ee4_5254002abcccrow16_col16{\n",
        "            background-color:  #023858;\n",
        "            color:  #f1f1f1;\n",
        "        }#T_49efadb8_eec6_11ea_9ee4_5254002abcccrow0_col1,#T_49efadb8_eec6_11ea_9ee4_5254002abcccrow1_col0,#T_49efadb8_eec6_11ea_9ee4_5254002abcccrow2_col13,#T_49efadb8_eec6_11ea_9ee4_5254002abcccrow3_col7,#T_49efadb8_eec6_11ea_9ee4_5254002abcccrow3_col8,#T_49efadb8_eec6_11ea_9ee4_5254002abcccrow3_col13,#T_49efadb8_eec6_11ea_9ee4_5254002abcccrow7_col3,#T_49efadb8_eec6_11ea_9ee4_5254002abcccrow8_col3,#T_49efadb8_eec6_11ea_9ee4_5254002abcccrow13_col2,#T_49efadb8_eec6_11ea_9ee4_5254002abcccrow13_col3{\n",
        "            background-color:  #ced0e6;\n",
        "            color:  #000000;\n",
        "        }#T_49efadb8_eec6_11ea_9ee4_5254002abcccrow0_col2,#T_49efadb8_eec6_11ea_9ee4_5254002abcccrow2_col0{\n",
        "            background-color:  #c2cbe2;\n",
        "            color:  #000000;\n",
        "        }#T_49efadb8_eec6_11ea_9ee4_5254002abcccrow0_col3,#T_49efadb8_eec6_11ea_9ee4_5254002abcccrow3_col0,#T_49efadb8_eec6_11ea_9ee4_5254002abcccrow12_col14,#T_49efadb8_eec6_11ea_9ee4_5254002abcccrow14_col12{\n",
        "            background-color:  #8bb2d4;\n",
        "            color:  #000000;\n",
        "        }#T_49efadb8_eec6_11ea_9ee4_5254002abcccrow0_col4,#T_49efadb8_eec6_11ea_9ee4_5254002abcccrow4_col0{\n",
        "            background-color:  #e1dfed;\n",
        "            color:  #000000;\n",
        "        }#T_49efadb8_eec6_11ea_9ee4_5254002abcccrow0_col5,#T_49efadb8_eec6_11ea_9ee4_5254002abcccrow5_col0{\n",
        "            background-color:  #f1ebf5;\n",
        "            color:  #000000;\n",
        "        }#T_49efadb8_eec6_11ea_9ee4_5254002abcccrow0_col6,#T_49efadb8_eec6_11ea_9ee4_5254002abcccrow1_col15,#T_49efadb8_eec6_11ea_9ee4_5254002abcccrow6_col0,#T_49efadb8_eec6_11ea_9ee4_5254002abcccrow15_col1{\n",
        "            background-color:  #d0d1e6;\n",
        "            color:  #000000;\n",
        "        }#T_49efadb8_eec6_11ea_9ee4_5254002abcccrow0_col7,#T_49efadb8_eec6_11ea_9ee4_5254002abcccrow7_col0,#T_49efadb8_eec6_11ea_9ee4_5254002abcccrow14_col15,#T_49efadb8_eec6_11ea_9ee4_5254002abcccrow15_col14{\n",
        "            background-color:  #adc1dd;\n",
        "            color:  #000000;\n",
        "        }#T_49efadb8_eec6_11ea_9ee4_5254002abcccrow0_col8,#T_49efadb8_eec6_11ea_9ee4_5254002abcccrow1_col5,#T_49efadb8_eec6_11ea_9ee4_5254002abcccrow3_col6,#T_49efadb8_eec6_11ea_9ee4_5254002abcccrow5_col1,#T_49efadb8_eec6_11ea_9ee4_5254002abcccrow6_col3,#T_49efadb8_eec6_11ea_9ee4_5254002abcccrow8_col0{\n",
        "            background-color:  #91b5d6;\n",
        "            color:  #000000;\n",
        "        }#T_49efadb8_eec6_11ea_9ee4_5254002abcccrow0_col9,#T_49efadb8_eec6_11ea_9ee4_5254002abcccrow3_col15,#T_49efadb8_eec6_11ea_9ee4_5254002abcccrow9_col0,#T_49efadb8_eec6_11ea_9ee4_5254002abcccrow15_col3{\n",
        "            background-color:  #dbdaeb;\n",
        "            color:  #000000;\n",
        "        }#T_49efadb8_eec6_11ea_9ee4_5254002abcccrow0_col10,#T_49efadb8_eec6_11ea_9ee4_5254002abcccrow10_col0{\n",
        "            background-color:  #cccfe5;\n",
        "            color:  #000000;\n",
        "        }#T_49efadb8_eec6_11ea_9ee4_5254002abcccrow0_col11,#T_49efadb8_eec6_11ea_9ee4_5254002abcccrow11_col0{\n",
        "            background-color:  #c6cce3;\n",
        "            color:  #000000;\n",
        "        }#T_49efadb8_eec6_11ea_9ee4_5254002abcccrow0_col12,#T_49efadb8_eec6_11ea_9ee4_5254002abcccrow12_col0{\n",
        "            background-color:  #fcf4fa;\n",
        "            color:  #000000;\n",
        "        }#T_49efadb8_eec6_11ea_9ee4_5254002abcccrow0_col13,#T_49efadb8_eec6_11ea_9ee4_5254002abcccrow2_col11,#T_49efadb8_eec6_11ea_9ee4_5254002abcccrow11_col2,#T_49efadb8_eec6_11ea_9ee4_5254002abcccrow13_col0{\n",
        "            background-color:  #afc1dd;\n",
        "            color:  #000000;\n",
        "        }#T_49efadb8_eec6_11ea_9ee4_5254002abcccrow0_col14,#T_49efadb8_eec6_11ea_9ee4_5254002abcccrow1_col12,#T_49efadb8_eec6_11ea_9ee4_5254002abcccrow12_col1,#T_49efadb8_eec6_11ea_9ee4_5254002abcccrow14_col0{\n",
        "            background-color:  #d2d3e7;\n",
        "            color:  #000000;\n",
        "        }#T_49efadb8_eec6_11ea_9ee4_5254002abcccrow0_col15,#T_49efadb8_eec6_11ea_9ee4_5254002abcccrow2_col15,#T_49efadb8_eec6_11ea_9ee4_5254002abcccrow15_col0,#T_49efadb8_eec6_11ea_9ee4_5254002abcccrow15_col2{\n",
        "            background-color:  #d2d2e7;\n",
        "            color:  #000000;\n",
        "        }#T_49efadb8_eec6_11ea_9ee4_5254002abcccrow0_col16,#T_49efadb8_eec6_11ea_9ee4_5254002abcccrow16_col0{\n",
        "            background-color:  #dedcec;\n",
        "            color:  #000000;\n",
        "        }#T_49efadb8_eec6_11ea_9ee4_5254002abcccrow1_col2,#T_49efadb8_eec6_11ea_9ee4_5254002abcccrow2_col1{\n",
        "            background-color:  #328dbf;\n",
        "            color:  #000000;\n",
        "        }#T_49efadb8_eec6_11ea_9ee4_5254002abcccrow1_col3,#T_49efadb8_eec6_11ea_9ee4_5254002abcccrow1_col4,#T_49efadb8_eec6_11ea_9ee4_5254002abcccrow3_col1,#T_49efadb8_eec6_11ea_9ee4_5254002abcccrow4_col1{\n",
        "            background-color:  #8eb3d5;\n",
        "            color:  #000000;\n",
        "        }#T_49efadb8_eec6_11ea_9ee4_5254002abcccrow1_col6,#T_49efadb8_eec6_11ea_9ee4_5254002abcccrow6_col1{\n",
        "            background-color:  #589ec8;\n",
        "            color:  #000000;\n",
        "        }#T_49efadb8_eec6_11ea_9ee4_5254002abcccrow1_col7,#T_49efadb8_eec6_11ea_9ee4_5254002abcccrow7_col1,#T_49efadb8_eec6_11ea_9ee4_5254002abcccrow10_col15,#T_49efadb8_eec6_11ea_9ee4_5254002abcccrow15_col10{\n",
        "            background-color:  #a9bfdc;\n",
        "            color:  #000000;\n",
        "        }#T_49efadb8_eec6_11ea_9ee4_5254002abcccrow1_col8,#T_49efadb8_eec6_11ea_9ee4_5254002abcccrow8_col1{\n",
        "            background-color:  #dad9ea;\n",
        "            color:  #000000;\n",
        "        }#T_49efadb8_eec6_11ea_9ee4_5254002abcccrow1_col9,#T_49efadb8_eec6_11ea_9ee4_5254002abcccrow9_col1{\n",
        "            background-color:  #c5cce3;\n",
        "            color:  #000000;\n",
        "        }#T_49efadb8_eec6_11ea_9ee4_5254002abcccrow1_col10,#T_49efadb8_eec6_11ea_9ee4_5254002abcccrow10_col1{\n",
        "            background-color:  #c0c9e2;\n",
        "            color:  #000000;\n",
        "        }#T_49efadb8_eec6_11ea_9ee4_5254002abcccrow1_col11,#T_49efadb8_eec6_11ea_9ee4_5254002abcccrow2_col7,#T_49efadb8_eec6_11ea_9ee4_5254002abcccrow7_col2,#T_49efadb8_eec6_11ea_9ee4_5254002abcccrow11_col1{\n",
        "            background-color:  #b7c5df;\n",
        "            color:  #000000;\n",
        "        }#T_49efadb8_eec6_11ea_9ee4_5254002abcccrow1_col13,#T_49efadb8_eec6_11ea_9ee4_5254002abcccrow6_col14,#T_49efadb8_eec6_11ea_9ee4_5254002abcccrow13_col1,#T_49efadb8_eec6_11ea_9ee4_5254002abcccrow14_col6{\n",
        "            background-color:  #b0c2de;\n",
        "            color:  #000000;\n",
        "        }#T_49efadb8_eec6_11ea_9ee4_5254002abcccrow1_col14,#T_49efadb8_eec6_11ea_9ee4_5254002abcccrow14_col1{\n",
        "            background-color:  #fff7fb;\n",
        "            color:  #000000;\n",
        "        }#T_49efadb8_eec6_11ea_9ee4_5254002abcccrow1_col16,#T_49efadb8_eec6_11ea_9ee4_5254002abcccrow16_col1{\n",
        "            background-color:  #79abd0;\n",
        "            color:  #000000;\n",
        "        }#T_49efadb8_eec6_11ea_9ee4_5254002abcccrow2_col3,#T_49efadb8_eec6_11ea_9ee4_5254002abcccrow3_col2{\n",
        "            background-color:  #3790c0;\n",
        "            color:  #000000;\n",
        "        }#T_49efadb8_eec6_11ea_9ee4_5254002abcccrow2_col4,#T_49efadb8_eec6_11ea_9ee4_5254002abcccrow4_col2{\n",
        "            background-color:  #4c99c5;\n",
        "            color:  #000000;\n",
        "        }#T_49efadb8_eec6_11ea_9ee4_5254002abcccrow2_col5,#T_49efadb8_eec6_11ea_9ee4_5254002abcccrow4_col5,#T_49efadb8_eec6_11ea_9ee4_5254002abcccrow5_col2,#T_49efadb8_eec6_11ea_9ee4_5254002abcccrow5_col4{\n",
        "            background-color:  #7bacd1;\n",
        "            color:  #000000;\n",
        "        }#T_49efadb8_eec6_11ea_9ee4_5254002abcccrow2_col6,#T_49efadb8_eec6_11ea_9ee4_5254002abcccrow6_col2{\n",
        "            background-color:  #529bc7;\n",
        "            color:  #000000;\n",
        "        }#T_49efadb8_eec6_11ea_9ee4_5254002abcccrow2_col8,#T_49efadb8_eec6_11ea_9ee4_5254002abcccrow2_col12,#T_49efadb8_eec6_11ea_9ee4_5254002abcccrow8_col2,#T_49efadb8_eec6_11ea_9ee4_5254002abcccrow12_col2{\n",
        "            background-color:  #cacee5;\n",
        "            color:  #000000;\n",
        "        }#T_49efadb8_eec6_11ea_9ee4_5254002abcccrow2_col9,#T_49efadb8_eec6_11ea_9ee4_5254002abcccrow9_col2,#T_49efadb8_eec6_11ea_9ee4_5254002abcccrow12_col13,#T_49efadb8_eec6_11ea_9ee4_5254002abcccrow13_col12{\n",
        "            background-color:  #a5bddb;\n",
        "            color:  #000000;\n",
        "        }#T_49efadb8_eec6_11ea_9ee4_5254002abcccrow2_col10,#T_49efadb8_eec6_11ea_9ee4_5254002abcccrow8_col13,#T_49efadb8_eec6_11ea_9ee4_5254002abcccrow10_col2,#T_49efadb8_eec6_11ea_9ee4_5254002abcccrow13_col8{\n",
        "            background-color:  #9fbad9;\n",
        "            color:  #000000;\n",
        "        }#T_49efadb8_eec6_11ea_9ee4_5254002abcccrow2_col14,#T_49efadb8_eec6_11ea_9ee4_5254002abcccrow14_col2{\n",
        "            background-color:  #f4eef6;\n",
        "            color:  #000000;\n",
        "        }#T_49efadb8_eec6_11ea_9ee4_5254002abcccrow2_col16,#T_49efadb8_eec6_11ea_9ee4_5254002abcccrow16_col2{\n",
        "            background-color:  #69a5cc;\n",
        "            color:  #000000;\n",
        "        }#T_49efadb8_eec6_11ea_9ee4_5254002abcccrow3_col4,#T_49efadb8_eec6_11ea_9ee4_5254002abcccrow4_col3{\n",
        "            background-color:  #056faf;\n",
        "            color:  #f1f1f1;\n",
        "        }#T_49efadb8_eec6_11ea_9ee4_5254002abcccrow3_col5,#T_49efadb8_eec6_11ea_9ee4_5254002abcccrow5_col3{\n",
        "            background-color:  #7eadd1;\n",
        "            color:  #000000;\n",
        "        }#T_49efadb8_eec6_11ea_9ee4_5254002abcccrow3_col9,#T_49efadb8_eec6_11ea_9ee4_5254002abcccrow7_col15,#T_49efadb8_eec6_11ea_9ee4_5254002abcccrow9_col3,#T_49efadb8_eec6_11ea_9ee4_5254002abcccrow15_col7{\n",
        "            background-color:  #acc0dd;\n",
        "            color:  #000000;\n",
        "        }#T_49efadb8_eec6_11ea_9ee4_5254002abcccrow3_col10,#T_49efadb8_eec6_11ea_9ee4_5254002abcccrow4_col15,#T_49efadb8_eec6_11ea_9ee4_5254002abcccrow10_col3,#T_49efadb8_eec6_11ea_9ee4_5254002abcccrow15_col4{\n",
        "            background-color:  #9ebad9;\n",
        "            color:  #000000;\n",
        "        }#T_49efadb8_eec6_11ea_9ee4_5254002abcccrow3_col11,#T_49efadb8_eec6_11ea_9ee4_5254002abcccrow11_col3{\n",
        "            background-color:  #bfc9e1;\n",
        "            color:  #000000;\n",
        "        }#T_49efadb8_eec6_11ea_9ee4_5254002abcccrow3_col12,#T_49efadb8_eec6_11ea_9ee4_5254002abcccrow6_col13,#T_49efadb8_eec6_11ea_9ee4_5254002abcccrow9_col14,#T_49efadb8_eec6_11ea_9ee4_5254002abcccrow12_col3,#T_49efadb8_eec6_11ea_9ee4_5254002abcccrow13_col6,#T_49efadb8_eec6_11ea_9ee4_5254002abcccrow14_col9{\n",
        "            background-color:  #b4c4df;\n",
        "            color:  #000000;\n",
        "        }#T_49efadb8_eec6_11ea_9ee4_5254002abcccrow3_col14,#T_49efadb8_eec6_11ea_9ee4_5254002abcccrow14_col3{\n",
        "            background-color:  #ece7f2;\n",
        "            color:  #000000;\n",
        "        }#T_49efadb8_eec6_11ea_9ee4_5254002abcccrow3_col16,#T_49efadb8_eec6_11ea_9ee4_5254002abcccrow16_col3{\n",
        "            background-color:  #88b1d4;\n",
        "            color:  #000000;\n",
        "        }#T_49efadb8_eec6_11ea_9ee4_5254002abcccrow4_col6,#T_49efadb8_eec6_11ea_9ee4_5254002abcccrow6_col4,#T_49efadb8_eec6_11ea_9ee4_5254002abcccrow9_col13,#T_49efadb8_eec6_11ea_9ee4_5254002abcccrow13_col9{\n",
        "            background-color:  #c4cbe3;\n",
        "            color:  #000000;\n",
        "        }#T_49efadb8_eec6_11ea_9ee4_5254002abcccrow4_col7,#T_49efadb8_eec6_11ea_9ee4_5254002abcccrow4_col13,#T_49efadb8_eec6_11ea_9ee4_5254002abcccrow7_col4,#T_49efadb8_eec6_11ea_9ee4_5254002abcccrow13_col4{\n",
        "            background-color:  #d4d4e8;\n",
        "            color:  #000000;\n",
        "        }#T_49efadb8_eec6_11ea_9ee4_5254002abcccrow4_col8,#T_49efadb8_eec6_11ea_9ee4_5254002abcccrow8_col4{\n",
        "            background-color:  #fdf5fa;\n",
        "            color:  #000000;\n",
        "        }#T_49efadb8_eec6_11ea_9ee4_5254002abcccrow4_col9,#T_49efadb8_eec6_11ea_9ee4_5254002abcccrow9_col4{\n",
        "            background-color:  #c9cee4;\n",
        "            color:  #000000;\n",
        "        }#T_49efadb8_eec6_11ea_9ee4_5254002abcccrow4_col10,#T_49efadb8_eec6_11ea_9ee4_5254002abcccrow10_col4{\n",
        "            background-color:  #c1cae2;\n",
        "            color:  #000000;\n",
        "        }#T_49efadb8_eec6_11ea_9ee4_5254002abcccrow4_col11,#T_49efadb8_eec6_11ea_9ee4_5254002abcccrow11_col4{\n",
        "            background-color:  #e4e1ef;\n",
        "            color:  #000000;\n",
        "        }#T_49efadb8_eec6_11ea_9ee4_5254002abcccrow4_col12,#T_49efadb8_eec6_11ea_9ee4_5254002abcccrow12_col4{\n",
        "            background-color:  #abbfdc;\n",
        "            color:  #000000;\n",
        "        }#T_49efadb8_eec6_11ea_9ee4_5254002abcccrow4_col14,#T_49efadb8_eec6_11ea_9ee4_5254002abcccrow14_col4{\n",
        "            background-color:  #e9e5f1;\n",
        "            color:  #000000;\n",
        "        }#T_49efadb8_eec6_11ea_9ee4_5254002abcccrow4_col16,#T_49efadb8_eec6_11ea_9ee4_5254002abcccrow13_col16,#T_49efadb8_eec6_11ea_9ee4_5254002abcccrow16_col4,#T_49efadb8_eec6_11ea_9ee4_5254002abcccrow16_col13{\n",
        "            background-color:  #b1c2de;\n",
        "            color:  #000000;\n",
        "        }#T_49efadb8_eec6_11ea_9ee4_5254002abcccrow5_col6,#T_49efadb8_eec6_11ea_9ee4_5254002abcccrow6_col5,#T_49efadb8_eec6_11ea_9ee4_5254002abcccrow9_col10,#T_49efadb8_eec6_11ea_9ee4_5254002abcccrow10_col9{\n",
        "            background-color:  #1e80b8;\n",
        "            color:  #000000;\n",
        "        }#T_49efadb8_eec6_11ea_9ee4_5254002abcccrow5_col7,#T_49efadb8_eec6_11ea_9ee4_5254002abcccrow7_col5{\n",
        "            background-color:  #8cb3d5;\n",
        "            color:  #000000;\n",
        "        }#T_49efadb8_eec6_11ea_9ee4_5254002abcccrow5_col8,#T_49efadb8_eec6_11ea_9ee4_5254002abcccrow8_col5{\n",
        "            background-color:  #c8cde4;\n",
        "            color:  #000000;\n",
        "        }#T_49efadb8_eec6_11ea_9ee4_5254002abcccrow5_col9,#T_49efadb8_eec6_11ea_9ee4_5254002abcccrow9_col5{\n",
        "            background-color:  #4e9ac6;\n",
        "            color:  #000000;\n",
        "        }#T_49efadb8_eec6_11ea_9ee4_5254002abcccrow5_col10,#T_49efadb8_eec6_11ea_9ee4_5254002abcccrow7_col10,#T_49efadb8_eec6_11ea_9ee4_5254002abcccrow7_col11,#T_49efadb8_eec6_11ea_9ee4_5254002abcccrow10_col5,#T_49efadb8_eec6_11ea_9ee4_5254002abcccrow10_col7,#T_49efadb8_eec6_11ea_9ee4_5254002abcccrow11_col7{\n",
        "            background-color:  #78abd0;\n",
        "            color:  #000000;\n",
        "        }#T_49efadb8_eec6_11ea_9ee4_5254002abcccrow5_col11,#T_49efadb8_eec6_11ea_9ee4_5254002abcccrow6_col7,#T_49efadb8_eec6_11ea_9ee4_5254002abcccrow7_col6,#T_49efadb8_eec6_11ea_9ee4_5254002abcccrow11_col5{\n",
        "            background-color:  #80aed2;\n",
        "            color:  #000000;\n",
        "        }#T_49efadb8_eec6_11ea_9ee4_5254002abcccrow5_col12,#T_49efadb8_eec6_11ea_9ee4_5254002abcccrow12_col5{\n",
        "            background-color:  #2484ba;\n",
        "            color:  #000000;\n",
        "        }#T_49efadb8_eec6_11ea_9ee4_5254002abcccrow5_col13,#T_49efadb8_eec6_11ea_9ee4_5254002abcccrow13_col5{\n",
        "            background-color:  #bbc7e0;\n",
        "            color:  #000000;\n",
        "        }#T_49efadb8_eec6_11ea_9ee4_5254002abcccrow5_col14,#T_49efadb8_eec6_11ea_9ee4_5254002abcccrow14_col5{\n",
        "            background-color:  #b3c3de;\n",
        "            color:  #000000;\n",
        "        }#T_49efadb8_eec6_11ea_9ee4_5254002abcccrow5_col15,#T_49efadb8_eec6_11ea_9ee4_5254002abcccrow15_col5{\n",
        "            background-color:  #efe9f3;\n",
        "            color:  #000000;\n",
        "        }#T_49efadb8_eec6_11ea_9ee4_5254002abcccrow5_col16,#T_49efadb8_eec6_11ea_9ee4_5254002abcccrow16_col5{\n",
        "            background-color:  #187cb6;\n",
        "            color:  #000000;\n",
        "        }#T_49efadb8_eec6_11ea_9ee4_5254002abcccrow6_col8,#T_49efadb8_eec6_11ea_9ee4_5254002abcccrow6_col12,#T_49efadb8_eec6_11ea_9ee4_5254002abcccrow7_col8,#T_49efadb8_eec6_11ea_9ee4_5254002abcccrow8_col6,#T_49efadb8_eec6_11ea_9ee4_5254002abcccrow8_col7,#T_49efadb8_eec6_11ea_9ee4_5254002abcccrow12_col6{\n",
        "            background-color:  #75a9cf;\n",
        "            color:  #000000;\n",
        "        }#T_49efadb8_eec6_11ea_9ee4_5254002abcccrow6_col9,#T_49efadb8_eec6_11ea_9ee4_5254002abcccrow9_col6{\n",
        "            background-color:  #4496c3;\n",
        "            color:  #000000;\n",
        "        }#T_49efadb8_eec6_11ea_9ee4_5254002abcccrow6_col10,#T_49efadb8_eec6_11ea_9ee4_5254002abcccrow10_col6{\n",
        "            background-color:  #348ebf;\n",
        "            color:  #000000;\n",
        "        }#T_49efadb8_eec6_11ea_9ee4_5254002abcccrow6_col11,#T_49efadb8_eec6_11ea_9ee4_5254002abcccrow8_col10,#T_49efadb8_eec6_11ea_9ee4_5254002abcccrow8_col16,#T_49efadb8_eec6_11ea_9ee4_5254002abcccrow10_col8,#T_49efadb8_eec6_11ea_9ee4_5254002abcccrow11_col6,#T_49efadb8_eec6_11ea_9ee4_5254002abcccrow11_col12,#T_49efadb8_eec6_11ea_9ee4_5254002abcccrow12_col11,#T_49efadb8_eec6_11ea_9ee4_5254002abcccrow16_col8{\n",
        "            background-color:  #308cbe;\n",
        "            color:  #000000;\n",
        "        }#T_49efadb8_eec6_11ea_9ee4_5254002abcccrow6_col15,#T_49efadb8_eec6_11ea_9ee4_5254002abcccrow15_col6{\n",
        "            background-color:  #f7f0f7;\n",
        "            color:  #000000;\n",
        "        }#T_49efadb8_eec6_11ea_9ee4_5254002abcccrow6_col16,#T_49efadb8_eec6_11ea_9ee4_5254002abcccrow16_col6{\n",
        "            background-color:  #056ead;\n",
        "            color:  #f1f1f1;\n",
        "        }#T_49efadb8_eec6_11ea_9ee4_5254002abcccrow7_col9,#T_49efadb8_eec6_11ea_9ee4_5254002abcccrow9_col7{\n",
        "            background-color:  #93b5d6;\n",
        "            color:  #000000;\n",
        "        }#T_49efadb8_eec6_11ea_9ee4_5254002abcccrow7_col12,#T_49efadb8_eec6_11ea_9ee4_5254002abcccrow12_col7,#T_49efadb8_eec6_11ea_9ee4_5254002abcccrow12_col15,#T_49efadb8_eec6_11ea_9ee4_5254002abcccrow15_col12{\n",
        "            background-color:  #a2bcda;\n",
        "            color:  #000000;\n",
        "        }#T_49efadb8_eec6_11ea_9ee4_5254002abcccrow7_col13,#T_49efadb8_eec6_11ea_9ee4_5254002abcccrow13_col7{\n",
        "            background-color:  #b5c4df;\n",
        "            color:  #000000;\n",
        "        }#T_49efadb8_eec6_11ea_9ee4_5254002abcccrow7_col14,#T_49efadb8_eec6_11ea_9ee4_5254002abcccrow10_col13,#T_49efadb8_eec6_11ea_9ee4_5254002abcccrow13_col10,#T_49efadb8_eec6_11ea_9ee4_5254002abcccrow14_col7{\n",
        "            background-color:  #a4bcda;\n",
        "            color:  #000000;\n",
        "        }#T_49efadb8_eec6_11ea_9ee4_5254002abcccrow7_col16,#T_49efadb8_eec6_11ea_9ee4_5254002abcccrow16_col7{\n",
        "            background-color:  #65a3cb;\n",
        "            color:  #000000;\n",
        "        }#T_49efadb8_eec6_11ea_9ee4_5254002abcccrow8_col9,#T_49efadb8_eec6_11ea_9ee4_5254002abcccrow9_col8,#T_49efadb8_eec6_11ea_9ee4_5254002abcccrow10_col12,#T_49efadb8_eec6_11ea_9ee4_5254002abcccrow12_col10{\n",
        "            background-color:  #2987bc;\n",
        "            color:  #000000;\n",
        "        }#T_49efadb8_eec6_11ea_9ee4_5254002abcccrow8_col11,#T_49efadb8_eec6_11ea_9ee4_5254002abcccrow11_col8{\n",
        "            background-color:  #0570b0;\n",
        "            color:  #f1f1f1;\n",
        "        }#T_49efadb8_eec6_11ea_9ee4_5254002abcccrow8_col12,#T_49efadb8_eec6_11ea_9ee4_5254002abcccrow12_col8{\n",
        "            background-color:  #6da6cd;\n",
        "            color:  #000000;\n",
        "        }#T_49efadb8_eec6_11ea_9ee4_5254002abcccrow8_col14,#T_49efadb8_eec6_11ea_9ee4_5254002abcccrow14_col8{\n",
        "            background-color:  #67a4cc;\n",
        "            color:  #000000;\n",
        "        }#T_49efadb8_eec6_11ea_9ee4_5254002abcccrow8_col15,#T_49efadb8_eec6_11ea_9ee4_5254002abcccrow15_col8{\n",
        "            background-color:  #d8d7e9;\n",
        "            color:  #000000;\n",
        "        }#T_49efadb8_eec6_11ea_9ee4_5254002abcccrow9_col11,#T_49efadb8_eec6_11ea_9ee4_5254002abcccrow11_col9{\n",
        "            background-color:  #0567a2;\n",
        "            color:  #f1f1f1;\n",
        "        }#T_49efadb8_eec6_11ea_9ee4_5254002abcccrow9_col12,#T_49efadb8_eec6_11ea_9ee4_5254002abcccrow12_col9{\n",
        "            background-color:  #1278b4;\n",
        "            color:  #f1f1f1;\n",
        "        }#T_49efadb8_eec6_11ea_9ee4_5254002abcccrow9_col15,#T_49efadb8_eec6_11ea_9ee4_5254002abcccrow15_col9,#T_49efadb8_eec6_11ea_9ee4_5254002abcccrow15_col16,#T_49efadb8_eec6_11ea_9ee4_5254002abcccrow16_col15{\n",
        "            background-color:  #d5d5e8;\n",
        "            color:  #000000;\n",
        "        }#T_49efadb8_eec6_11ea_9ee4_5254002abcccrow9_col16,#T_49efadb8_eec6_11ea_9ee4_5254002abcccrow16_col9{\n",
        "            background-color:  #045b8f;\n",
        "            color:  #f1f1f1;\n",
        "        }#T_49efadb8_eec6_11ea_9ee4_5254002abcccrow10_col11,#T_49efadb8_eec6_11ea_9ee4_5254002abcccrow11_col10{\n",
        "            background-color:  #056dab;\n",
        "            color:  #f1f1f1;\n",
        "        }#T_49efadb8_eec6_11ea_9ee4_5254002abcccrow10_col14,#T_49efadb8_eec6_11ea_9ee4_5254002abcccrow14_col10{\n",
        "            background-color:  #7dacd1;\n",
        "            color:  #000000;\n",
        "        }#T_49efadb8_eec6_11ea_9ee4_5254002abcccrow10_col16,#T_49efadb8_eec6_11ea_9ee4_5254002abcccrow16_col10{\n",
        "            background-color:  #056aa6;\n",
        "            color:  #f1f1f1;\n",
        "        }#T_49efadb8_eec6_11ea_9ee4_5254002abcccrow11_col13,#T_49efadb8_eec6_11ea_9ee4_5254002abcccrow13_col11{\n",
        "            background-color:  #b9c6e0;\n",
        "            color:  #000000;\n",
        "        }#T_49efadb8_eec6_11ea_9ee4_5254002abcccrow11_col14,#T_49efadb8_eec6_11ea_9ee4_5254002abcccrow14_col11{\n",
        "            background-color:  #63a2cb;\n",
        "            color:  #000000;\n",
        "        }#T_49efadb8_eec6_11ea_9ee4_5254002abcccrow11_col15,#T_49efadb8_eec6_11ea_9ee4_5254002abcccrow15_col11{\n",
        "            background-color:  #e0deed;\n",
        "            color:  #000000;\n",
        "        }#T_49efadb8_eec6_11ea_9ee4_5254002abcccrow11_col16,#T_49efadb8_eec6_11ea_9ee4_5254002abcccrow16_col11{\n",
        "            background-color:  #056ba7;\n",
        "            color:  #f1f1f1;\n",
        "        }#T_49efadb8_eec6_11ea_9ee4_5254002abcccrow12_col16,#T_49efadb8_eec6_11ea_9ee4_5254002abcccrow16_col12{\n",
        "            background-color:  #056ba9;\n",
        "            color:  #f1f1f1;\n",
        "        }#T_49efadb8_eec6_11ea_9ee4_5254002abcccrow13_col14,#T_49efadb8_eec6_11ea_9ee4_5254002abcccrow14_col13{\n",
        "            background-color:  #97b7d7;\n",
        "            color:  #000000;\n",
        "        }#T_49efadb8_eec6_11ea_9ee4_5254002abcccrow13_col15,#T_49efadb8_eec6_11ea_9ee4_5254002abcccrow15_col13{\n",
        "            background-color:  #a7bddb;\n",
        "            color:  #000000;\n",
        "        }#T_49efadb8_eec6_11ea_9ee4_5254002abcccrow14_col16,#T_49efadb8_eec6_11ea_9ee4_5254002abcccrow16_col14{\n",
        "            background-color:  #d9d8ea;\n",
        "            color:  #000000;\n",
        "        }</style><table id=\"T_49efadb8_eec6_11ea_9ee4_5254002abccc\" ><thead>    <tr>        <th class=\"blank level0\" ></th>        <th class=\"col_heading level0 col0\" >Rt</th>        <th class=\"col_heading level0 col1\" >theta</th>        <th class=\"col_heading level0 col2\" >kappa</th>        <th class=\"col_heading level0 col3\" >rho</th>        <th class=\"col_heading level0 col4\" >sigma</th>        <th class=\"col_heading level0 col5\" >School_closing</th>        <th class=\"col_heading level0 col6\" >Workplace_closing</th>        <th class=\"col_heading level0 col7\" >Cancel_events</th>        <th class=\"col_heading level0 col8\" >Gatherings_restrictions</th>        <th class=\"col_heading level0 col9\" >Transport_closing</th>        <th class=\"col_heading level0 col10\" >Stay_home_restrictions</th>        <th class=\"col_heading level0 col11\" >Internal_movement_restrictions</th>        <th class=\"col_heading level0 col12\" >International_movement_restrictions</th>        <th class=\"col_heading level0 col13\" >Information_campaigns</th>        <th class=\"col_heading level0 col14\" >Testing_policy</th>        <th class=\"col_heading level0 col15\" >Contact_tracing</th>        <th class=\"col_heading level0 col16\" >Stringency_index</th>    </tr></thead><tbody>\n",
        "                <tr>\n",
        "                        <th id=\"T_49efadb8_eec6_11ea_9ee4_5254002abccclevel0_row0\" class=\"row_heading level0 row0\" >Rt</th>\n",
        "                        <td id=\"T_49efadb8_eec6_11ea_9ee4_5254002abcccrow0_col0\" class=\"data row0 col0\" >1.000000</td>\n",
        "                        <td id=\"T_49efadb8_eec6_11ea_9ee4_5254002abcccrow0_col1\" class=\"data row0 col1\" >-0.117724</td>\n",
        "                        <td id=\"T_49efadb8_eec6_11ea_9ee4_5254002abcccrow0_col2\" class=\"data row0 col2\" >-0.067442</td>\n",
        "                        <td id=\"T_49efadb8_eec6_11ea_9ee4_5254002abcccrow0_col3\" class=\"data row0 col3\" >0.160406</td>\n",
        "                        <td id=\"T_49efadb8_eec6_11ea_9ee4_5254002abcccrow0_col4\" class=\"data row0 col4\" >-0.243795</td>\n",
        "                        <td id=\"T_49efadb8_eec6_11ea_9ee4_5254002abcccrow0_col5\" class=\"data row0 col5\" >-0.367405</td>\n",
        "                        <td id=\"T_49efadb8_eec6_11ea_9ee4_5254002abcccrow0_col6\" class=\"data row0 col6\" >-0.124377</td>\n",
        "                        <td id=\"T_49efadb8_eec6_11ea_9ee4_5254002abcccrow0_col7\" class=\"data row0 col7\" >0.026021</td>\n",
        "                        <td id=\"T_49efadb8_eec6_11ea_9ee4_5254002abcccrow0_col8\" class=\"data row0 col8\" >0.137383</td>\n",
        "                        <td id=\"T_49efadb8_eec6_11ea_9ee4_5254002abcccrow0_col9\" class=\"data row0 col9\" >-0.201002</td>\n",
        "                        <td id=\"T_49efadb8_eec6_11ea_9ee4_5254002abcccrow0_col10\" class=\"data row0 col10\" >-0.110033</td>\n",
        "                        <td id=\"T_49efadb8_eec6_11ea_9ee4_5254002abcccrow0_col11\" class=\"data row0 col11\" >-0.086784</td>\n",
        "                        <td id=\"T_49efadb8_eec6_11ea_9ee4_5254002abcccrow0_col12\" class=\"data row0 col12\" >-0.468955</td>\n",
        "                        <td id=\"T_49efadb8_eec6_11ea_9ee4_5254002abcccrow0_col13\" class=\"data row0 col13\" >0.019532</td>\n",
        "                        <td id=\"T_49efadb8_eec6_11ea_9ee4_5254002abcccrow0_col14\" class=\"data row0 col14\" >-0.139899</td>\n",
        "                        <td id=\"T_49efadb8_eec6_11ea_9ee4_5254002abcccrow0_col15\" class=\"data row0 col15\" >-0.138110</td>\n",
        "                        <td id=\"T_49efadb8_eec6_11ea_9ee4_5254002abcccrow0_col16\" class=\"data row0 col16\" >-0.219000</td>\n",
        "            </tr>\n",
        "            <tr>\n",
        "                        <th id=\"T_49efadb8_eec6_11ea_9ee4_5254002abccclevel0_row1\" class=\"row_heading level0 row1\" >theta</th>\n",
        "                        <td id=\"T_49efadb8_eec6_11ea_9ee4_5254002abcccrow1_col0\" class=\"data row1 col0\" >-0.117724</td>\n",
        "                        <td id=\"T_49efadb8_eec6_11ea_9ee4_5254002abcccrow1_col1\" class=\"data row1 col1\" >1.000000</td>\n",
        "                        <td id=\"T_49efadb8_eec6_11ea_9ee4_5254002abcccrow1_col2\" class=\"data row1 col2\" >0.452056</td>\n",
        "                        <td id=\"T_49efadb8_eec6_11ea_9ee4_5254002abcccrow1_col3\" class=\"data row1 col3\" >0.152178</td>\n",
        "                        <td id=\"T_49efadb8_eec6_11ea_9ee4_5254002abcccrow1_col4\" class=\"data row1 col4\" >0.149241</td>\n",
        "                        <td id=\"T_49efadb8_eec6_11ea_9ee4_5254002abcccrow1_col5\" class=\"data row1 col5\" >0.140418</td>\n",
        "                        <td id=\"T_49efadb8_eec6_11ea_9ee4_5254002abcccrow1_col6\" class=\"data row1 col6\" >0.330856</td>\n",
        "                        <td id=\"T_49efadb8_eec6_11ea_9ee4_5254002abcccrow1_col7\" class=\"data row1 col7\" >0.047078</td>\n",
        "                        <td id=\"T_49efadb8_eec6_11ea_9ee4_5254002abcccrow1_col8\" class=\"data row1 col8\" >-0.196260</td>\n",
        "                        <td id=\"T_49efadb8_eec6_11ea_9ee4_5254002abcccrow1_col9\" class=\"data row1 col9\" >-0.079618</td>\n",
        "                        <td id=\"T_49efadb8_eec6_11ea_9ee4_5254002abcccrow1_col10\" class=\"data row1 col10\" >-0.054024</td>\n",
        "                        <td id=\"T_49efadb8_eec6_11ea_9ee4_5254002abcccrow1_col11\" class=\"data row1 col11\" >-0.013525</td>\n",
        "                        <td id=\"T_49efadb8_eec6_11ea_9ee4_5254002abcccrow1_col12\" class=\"data row1 col12\" >-0.143243</td>\n",
        "                        <td id=\"T_49efadb8_eec6_11ea_9ee4_5254002abcccrow1_col13\" class=\"data row1 col13\" >0.017500</td>\n",
        "                        <td id=\"T_49efadb8_eec6_11ea_9ee4_5254002abcccrow1_col14\" class=\"data row1 col14\" >-0.504183</td>\n",
        "                        <td id=\"T_49efadb8_eec6_11ea_9ee4_5254002abcccrow1_col15\" class=\"data row1 col15\" >-0.125335</td>\n",
        "                        <td id=\"T_49efadb8_eec6_11ea_9ee4_5254002abcccrow1_col16\" class=\"data row1 col16\" >0.227223</td>\n",
        "            </tr>\n",
        "            <tr>\n",
        "                        <th id=\"T_49efadb8_eec6_11ea_9ee4_5254002abccclevel0_row2\" class=\"row_heading level0 row2\" >kappa</th>\n",
        "                        <td id=\"T_49efadb8_eec6_11ea_9ee4_5254002abcccrow2_col0\" class=\"data row2 col0\" >-0.067442</td>\n",
        "                        <td id=\"T_49efadb8_eec6_11ea_9ee4_5254002abcccrow2_col1\" class=\"data row2 col1\" >0.452056</td>\n",
        "                        <td id=\"T_49efadb8_eec6_11ea_9ee4_5254002abcccrow2_col2\" class=\"data row2 col2\" >1.000000</td>\n",
        "                        <td id=\"T_49efadb8_eec6_11ea_9ee4_5254002abcccrow2_col3\" class=\"data row2 col3\" >0.434142</td>\n",
        "                        <td id=\"T_49efadb8_eec6_11ea_9ee4_5254002abcccrow2_col4\" class=\"data row2 col4\" >0.366885</td>\n",
        "                        <td id=\"T_49efadb8_eec6_11ea_9ee4_5254002abcccrow2_col5\" class=\"data row2 col5\" >0.219125</td>\n",
        "                        <td id=\"T_49efadb8_eec6_11ea_9ee4_5254002abcccrow2_col6\" class=\"data row2 col6\" >0.348849</td>\n",
        "                        <td id=\"T_49efadb8_eec6_11ea_9ee4_5254002abcccrow2_col7\" class=\"data row2 col7\" >-0.010900</td>\n",
        "                        <td id=\"T_49efadb8_eec6_11ea_9ee4_5254002abcccrow2_col8\" class=\"data row2 col8\" >-0.103910</td>\n",
        "                        <td id=\"T_49efadb8_eec6_11ea_9ee4_5254002abcccrow2_col9\" class=\"data row2 col9\" >0.063084</td>\n",
        "                        <td id=\"T_49efadb8_eec6_11ea_9ee4_5254002abcccrow2_col10\" class=\"data row2 col10\" >0.088130</td>\n",
        "                        <td id=\"T_49efadb8_eec6_11ea_9ee4_5254002abcccrow2_col11\" class=\"data row2 col11\" >0.022719</td>\n",
        "                        <td id=\"T_49efadb8_eec6_11ea_9ee4_5254002abcccrow2_col12\" class=\"data row2 col12\" >-0.098951</td>\n",
        "                        <td id=\"T_49efadb8_eec6_11ea_9ee4_5254002abcccrow2_col13\" class=\"data row2 col13\" >-0.120894</td>\n",
        "                        <td id=\"T_49efadb8_eec6_11ea_9ee4_5254002abcccrow2_col14\" class=\"data row2 col14\" >-0.393798</td>\n",
        "                        <td id=\"T_49efadb8_eec6_11ea_9ee4_5254002abcccrow2_col15\" class=\"data row2 col15\" >-0.137697</td>\n",
        "                        <td id=\"T_49efadb8_eec6_11ea_9ee4_5254002abcccrow2_col16\" class=\"data row2 col16\" >0.280567</td>\n",
        "            </tr>\n",
        "            <tr>\n",
        "                        <th id=\"T_49efadb8_eec6_11ea_9ee4_5254002abccclevel0_row3\" class=\"row_heading level0 row3\" >rho</th>\n",
        "                        <td id=\"T_49efadb8_eec6_11ea_9ee4_5254002abcccrow3_col0\" class=\"data row3 col0\" >0.160406</td>\n",
        "                        <td id=\"T_49efadb8_eec6_11ea_9ee4_5254002abcccrow3_col1\" class=\"data row3 col1\" >0.152178</td>\n",
        "                        <td id=\"T_49efadb8_eec6_11ea_9ee4_5254002abcccrow3_col2\" class=\"data row3 col2\" >0.434142</td>\n",
        "                        <td id=\"T_49efadb8_eec6_11ea_9ee4_5254002abcccrow3_col3\" class=\"data row3 col3\" >1.000000</td>\n",
        "                        <td id=\"T_49efadb8_eec6_11ea_9ee4_5254002abcccrow3_col4\" class=\"data row3 col4\" >0.624984</td>\n",
        "                        <td id=\"T_49efadb8_eec6_11ea_9ee4_5254002abcccrow3_col5\" class=\"data row3 col5\" >0.208691</td>\n",
        "                        <td id=\"T_49efadb8_eec6_11ea_9ee4_5254002abcccrow3_col6\" class=\"data row3 col6\" >0.136436</td>\n",
        "                        <td id=\"T_49efadb8_eec6_11ea_9ee4_5254002abcccrow3_col7\" class=\"data row3 col7\" >-0.120656</td>\n",
        "                        <td id=\"T_49efadb8_eec6_11ea_9ee4_5254002abcccrow3_col8\" class=\"data row3 col8\" >-0.119949</td>\n",
        "                        <td id=\"T_49efadb8_eec6_11ea_9ee4_5254002abcccrow3_col9\" class=\"data row3 col9\" >0.031547</td>\n",
        "                        <td id=\"T_49efadb8_eec6_11ea_9ee4_5254002abcccrow3_col10\" class=\"data row3 col10\" >0.093150</td>\n",
        "                        <td id=\"T_49efadb8_eec6_11ea_9ee4_5254002abcccrow3_col11\" class=\"data row3 col11\" >-0.050276</td>\n",
        "                        <td id=\"T_49efadb8_eec6_11ea_9ee4_5254002abcccrow3_col12\" class=\"data row3 col12\" >-0.000871</td>\n",
        "                        <td id=\"T_49efadb8_eec6_11ea_9ee4_5254002abcccrow3_col13\" class=\"data row3 col13\" >-0.117844</td>\n",
        "                        <td id=\"T_49efadb8_eec6_11ea_9ee4_5254002abcccrow3_col14\" class=\"data row3 col14\" >-0.311306</td>\n",
        "                        <td id=\"T_49efadb8_eec6_11ea_9ee4_5254002abcccrow3_col15\" class=\"data row3 col15\" >-0.203656</td>\n",
        "                        <td id=\"T_49efadb8_eec6_11ea_9ee4_5254002abcccrow3_col16\" class=\"data row3 col16\" >0.175854</td>\n",
        "            </tr>\n",
        "            <tr>\n",
        "                        <th id=\"T_49efadb8_eec6_11ea_9ee4_5254002abccclevel0_row4\" class=\"row_heading level0 row4\" >sigma</th>\n",
        "                        <td id=\"T_49efadb8_eec6_11ea_9ee4_5254002abcccrow4_col0\" class=\"data row4 col0\" >-0.243795</td>\n",
        "                        <td id=\"T_49efadb8_eec6_11ea_9ee4_5254002abcccrow4_col1\" class=\"data row4 col1\" >0.149241</td>\n",
        "                        <td id=\"T_49efadb8_eec6_11ea_9ee4_5254002abcccrow4_col2\" class=\"data row4 col2\" >0.366885</td>\n",
        "                        <td id=\"T_49efadb8_eec6_11ea_9ee4_5254002abcccrow4_col3\" class=\"data row4 col3\" >0.624984</td>\n",
        "                        <td id=\"T_49efadb8_eec6_11ea_9ee4_5254002abcccrow4_col4\" class=\"data row4 col4\" >1.000000</td>\n",
        "                        <td id=\"T_49efadb8_eec6_11ea_9ee4_5254002abcccrow4_col5\" class=\"data row4 col5\" >0.221826</td>\n",
        "                        <td id=\"T_49efadb8_eec6_11ea_9ee4_5254002abcccrow4_col6\" class=\"data row4 col6\" >-0.074642</td>\n",
        "                        <td id=\"T_49efadb8_eec6_11ea_9ee4_5254002abcccrow4_col7\" class=\"data row4 col7\" >-0.155656</td>\n",
        "                        <td id=\"T_49efadb8_eec6_11ea_9ee4_5254002abcccrow4_col8\" class=\"data row4 col8\" >-0.483047</td>\n",
        "                        <td id=\"T_49efadb8_eec6_11ea_9ee4_5254002abcccrow4_col9\" class=\"data row4 col9\" >-0.098549</td>\n",
        "                        <td id=\"T_49efadb8_eec6_11ea_9ee4_5254002abcccrow4_col10\" class=\"data row4 col10\" >-0.059450</td>\n",
        "                        <td id=\"T_49efadb8_eec6_11ea_9ee4_5254002abcccrow4_col11\" class=\"data row4 col11\" >-0.263120</td>\n",
        "                        <td id=\"T_49efadb8_eec6_11ea_9ee4_5254002abcccrow4_col12\" class=\"data row4 col12\" >0.037404</td>\n",
        "                        <td id=\"T_49efadb8_eec6_11ea_9ee4_5254002abcccrow4_col13\" class=\"data row4 col13\" >-0.157191</td>\n",
        "                        <td id=\"T_49efadb8_eec6_11ea_9ee4_5254002abcccrow4_col14\" class=\"data row4 col14\" >-0.292775</td>\n",
        "                        <td id=\"T_49efadb8_eec6_11ea_9ee4_5254002abcccrow4_col15\" class=\"data row4 col15\" >0.094745</td>\n",
        "                        <td id=\"T_49efadb8_eec6_11ea_9ee4_5254002abcccrow4_col16\" class=\"data row4 col16\" >0.007498</td>\n",
        "            </tr>\n",
        "            <tr>\n",
        "                        <th id=\"T_49efadb8_eec6_11ea_9ee4_5254002abccclevel0_row5\" class=\"row_heading level0 row5\" >School_closing</th>\n",
        "                        <td id=\"T_49efadb8_eec6_11ea_9ee4_5254002abcccrow5_col0\" class=\"data row5 col0\" >-0.367405</td>\n",
        "                        <td id=\"T_49efadb8_eec6_11ea_9ee4_5254002abcccrow5_col1\" class=\"data row5 col1\" >0.140418</td>\n",
        "                        <td id=\"T_49efadb8_eec6_11ea_9ee4_5254002abcccrow5_col2\" class=\"data row5 col2\" >0.219125</td>\n",
        "                        <td id=\"T_49efadb8_eec6_11ea_9ee4_5254002abcccrow5_col3\" class=\"data row5 col3\" >0.208691</td>\n",
        "                        <td id=\"T_49efadb8_eec6_11ea_9ee4_5254002abcccrow5_col4\" class=\"data row5 col4\" >0.221826</td>\n",
        "                        <td id=\"T_49efadb8_eec6_11ea_9ee4_5254002abcccrow5_col5\" class=\"data row5 col5\" >1.000000</td>\n",
        "                        <td id=\"T_49efadb8_eec6_11ea_9ee4_5254002abcccrow5_col6\" class=\"data row5 col6\" >0.525484</td>\n",
        "                        <td id=\"T_49efadb8_eec6_11ea_9ee4_5254002abcccrow5_col7\" class=\"data row5 col7\" >0.159203</td>\n",
        "                        <td id=\"T_49efadb8_eec6_11ea_9ee4_5254002abcccrow5_col8\" class=\"data row5 col8\" >-0.088815</td>\n",
        "                        <td id=\"T_49efadb8_eec6_11ea_9ee4_5254002abcccrow5_col9\" class=\"data row5 col9\" >0.363317</td>\n",
        "                        <td id=\"T_49efadb8_eec6_11ea_9ee4_5254002abcccrow5_col10\" class=\"data row5 col10\" >0.235003</td>\n",
        "                        <td id=\"T_49efadb8_eec6_11ea_9ee4_5254002abcccrow5_col11\" class=\"data row5 col11\" >0.206606</td>\n",
        "                        <td id=\"T_49efadb8_eec6_11ea_9ee4_5254002abcccrow5_col12\" class=\"data row5 col12\" >0.505698</td>\n",
        "                        <td id=\"T_49efadb8_eec6_11ea_9ee4_5254002abcccrow5_col13\" class=\"data row5 col13\" >-0.032503</td>\n",
        "                        <td id=\"T_49efadb8_eec6_11ea_9ee4_5254002abcccrow5_col14\" class=\"data row5 col14\" >0.002934</td>\n",
        "                        <td id=\"T_49efadb8_eec6_11ea_9ee4_5254002abcccrow5_col15\" class=\"data row5 col15\" >-0.341915</td>\n",
        "                        <td id=\"T_49efadb8_eec6_11ea_9ee4_5254002abcccrow5_col16\" class=\"data row5 col16\" >0.552219</td>\n",
        "            </tr>\n",
        "            <tr>\n",
        "                        <th id=\"T_49efadb8_eec6_11ea_9ee4_5254002abccclevel0_row6\" class=\"row_heading level0 row6\" >Workplace_closing</th>\n",
        "                        <td id=\"T_49efadb8_eec6_11ea_9ee4_5254002abcccrow6_col0\" class=\"data row6 col0\" >-0.124377</td>\n",
        "                        <td id=\"T_49efadb8_eec6_11ea_9ee4_5254002abcccrow6_col1\" class=\"data row6 col1\" >0.330856</td>\n",
        "                        <td id=\"T_49efadb8_eec6_11ea_9ee4_5254002abcccrow6_col2\" class=\"data row6 col2\" >0.348849</td>\n",
        "                        <td id=\"T_49efadb8_eec6_11ea_9ee4_5254002abcccrow6_col3\" class=\"data row6 col3\" >0.136436</td>\n",
        "                        <td id=\"T_49efadb8_eec6_11ea_9ee4_5254002abcccrow6_col4\" class=\"data row6 col4\" >-0.074642</td>\n",
        "                        <td id=\"T_49efadb8_eec6_11ea_9ee4_5254002abcccrow6_col5\" class=\"data row6 col5\" >0.525484</td>\n",
        "                        <td id=\"T_49efadb8_eec6_11ea_9ee4_5254002abcccrow6_col6\" class=\"data row6 col6\" >1.000000</td>\n",
        "                        <td id=\"T_49efadb8_eec6_11ea_9ee4_5254002abcccrow6_col7\" class=\"data row6 col7\" >0.205683</td>\n",
        "                        <td id=\"T_49efadb8_eec6_11ea_9ee4_5254002abcccrow6_col8\" class=\"data row6 col8\" >0.242660</td>\n",
        "                        <td id=\"T_49efadb8_eec6_11ea_9ee4_5254002abcccrow6_col9\" class=\"data row6 col9\" >0.390534</td>\n",
        "                        <td id=\"T_49efadb8_eec6_11ea_9ee4_5254002abcccrow6_col10\" class=\"data row6 col10\" >0.445655</td>\n",
        "                        <td id=\"T_49efadb8_eec6_11ea_9ee4_5254002abcccrow6_col11\" class=\"data row6 col11\" >0.455138</td>\n",
        "                        <td id=\"T_49efadb8_eec6_11ea_9ee4_5254002abcccrow6_col12\" class=\"data row6 col12\" >0.244251</td>\n",
        "                        <td id=\"T_49efadb8_eec6_11ea_9ee4_5254002abcccrow6_col13\" class=\"data row6 col13\" >-0.000654</td>\n",
        "                        <td id=\"T_49efadb8_eec6_11ea_9ee4_5254002abcccrow6_col14\" class=\"data row6 col14\" >0.014279</td>\n",
        "                        <td id=\"T_49efadb8_eec6_11ea_9ee4_5254002abcccrow6_col15\" class=\"data row6 col15\" >-0.417388</td>\n",
        "                        <td id=\"T_49efadb8_eec6_11ea_9ee4_5254002abcccrow6_col16\" class=\"data row6 col16\" >0.638153</td>\n",
        "            </tr>\n",
        "            <tr>\n",
        "                        <th id=\"T_49efadb8_eec6_11ea_9ee4_5254002abccclevel0_row7\" class=\"row_heading level0 row7\" >Cancel_events</th>\n",
        "                        <td id=\"T_49efadb8_eec6_11ea_9ee4_5254002abcccrow7_col0\" class=\"data row7 col0\" >0.026021</td>\n",
        "                        <td id=\"T_49efadb8_eec6_11ea_9ee4_5254002abcccrow7_col1\" class=\"data row7 col1\" >0.047078</td>\n",
        "                        <td id=\"T_49efadb8_eec6_11ea_9ee4_5254002abcccrow7_col2\" class=\"data row7 col2\" >-0.010900</td>\n",
        "                        <td id=\"T_49efadb8_eec6_11ea_9ee4_5254002abcccrow7_col3\" class=\"data row7 col3\" >-0.120656</td>\n",
        "                        <td id=\"T_49efadb8_eec6_11ea_9ee4_5254002abcccrow7_col4\" class=\"data row7 col4\" >-0.155656</td>\n",
        "                        <td id=\"T_49efadb8_eec6_11ea_9ee4_5254002abcccrow7_col5\" class=\"data row7 col5\" >0.159203</td>\n",
        "                        <td id=\"T_49efadb8_eec6_11ea_9ee4_5254002abcccrow7_col6\" class=\"data row7 col6\" >0.205683</td>\n",
        "                        <td id=\"T_49efadb8_eec6_11ea_9ee4_5254002abcccrow7_col7\" class=\"data row7 col7\" >1.000000</td>\n",
        "                        <td id=\"T_49efadb8_eec6_11ea_9ee4_5254002abcccrow7_col8\" class=\"data row7 col8\" >0.247551</td>\n",
        "                        <td id=\"T_49efadb8_eec6_11ea_9ee4_5254002abcccrow7_col9\" class=\"data row7 col9\" >0.132997</td>\n",
        "                        <td id=\"T_49efadb8_eec6_11ea_9ee4_5254002abcccrow7_col10\" class=\"data row7 col10\" >0.234875</td>\n",
        "                        <td id=\"T_49efadb8_eec6_11ea_9ee4_5254002abcccrow7_col11\" class=\"data row7 col11\" >0.235144</td>\n",
        "                        <td id=\"T_49efadb8_eec6_11ea_9ee4_5254002abcccrow7_col12\" class=\"data row7 col12\" >0.075699</td>\n",
        "                        <td id=\"T_49efadb8_eec6_11ea_9ee4_5254002abcccrow7_col13\" class=\"data row7 col13\" >-0.006524</td>\n",
        "                        <td id=\"T_49efadb8_eec6_11ea_9ee4_5254002abcccrow7_col14\" class=\"data row7 col14\" >0.067603</td>\n",
        "                        <td id=\"T_49efadb8_eec6_11ea_9ee4_5254002abcccrow7_col15\" class=\"data row7 col15\" >0.033975</td>\n",
        "                        <td id=\"T_49efadb8_eec6_11ea_9ee4_5254002abcccrow7_col16\" class=\"data row7 col16\" >0.291167</td>\n",
        "            </tr>\n",
        "            <tr>\n",
        "                        <th id=\"T_49efadb8_eec6_11ea_9ee4_5254002abccclevel0_row8\" class=\"row_heading level0 row8\" >Gatherings_restrictions</th>\n",
        "                        <td id=\"T_49efadb8_eec6_11ea_9ee4_5254002abcccrow8_col0\" class=\"data row8 col0\" >0.137383</td>\n",
        "                        <td id=\"T_49efadb8_eec6_11ea_9ee4_5254002abcccrow8_col1\" class=\"data row8 col1\" >-0.196260</td>\n",
        "                        <td id=\"T_49efadb8_eec6_11ea_9ee4_5254002abcccrow8_col2\" class=\"data row8 col2\" >-0.103910</td>\n",
        "                        <td id=\"T_49efadb8_eec6_11ea_9ee4_5254002abcccrow8_col3\" class=\"data row8 col3\" >-0.119949</td>\n",
        "                        <td id=\"T_49efadb8_eec6_11ea_9ee4_5254002abcccrow8_col4\" class=\"data row8 col4\" >-0.483047</td>\n",
        "                        <td id=\"T_49efadb8_eec6_11ea_9ee4_5254002abcccrow8_col5\" class=\"data row8 col5\" >-0.088815</td>\n",
        "                        <td id=\"T_49efadb8_eec6_11ea_9ee4_5254002abcccrow8_col6\" class=\"data row8 col6\" >0.242660</td>\n",
        "                        <td id=\"T_49efadb8_eec6_11ea_9ee4_5254002abcccrow8_col7\" class=\"data row8 col7\" >0.247551</td>\n",
        "                        <td id=\"T_49efadb8_eec6_11ea_9ee4_5254002abcccrow8_col8\" class=\"data row8 col8\" >1.000000</td>\n",
        "                        <td id=\"T_49efadb8_eec6_11ea_9ee4_5254002abcccrow8_col9\" class=\"data row8 col9\" >0.484697</td>\n",
        "                        <td id=\"T_49efadb8_eec6_11ea_9ee4_5254002abcccrow8_col10\" class=\"data row8 col10\" >0.457437</td>\n",
        "                        <td id=\"T_49efadb8_eec6_11ea_9ee4_5254002abcccrow8_col11\" class=\"data row8 col11\" >0.618718</td>\n",
        "                        <td id=\"T_49efadb8_eec6_11ea_9ee4_5254002abcccrow8_col12\" class=\"data row8 col12\" >0.269516</td>\n",
        "                        <td id=\"T_49efadb8_eec6_11ea_9ee4_5254002abcccrow8_col13\" class=\"data row8 col13\" >0.085879</td>\n",
        "                        <td id=\"T_49efadb8_eec6_11ea_9ee4_5254002abcccrow8_col14\" class=\"data row8 col14\" >0.287496</td>\n",
        "                        <td id=\"T_49efadb8_eec6_11ea_9ee4_5254002abcccrow8_col15\" class=\"data row8 col15\" >-0.179951</td>\n",
        "                        <td id=\"T_49efadb8_eec6_11ea_9ee4_5254002abcccrow8_col16\" class=\"data row8 col16\" >0.454703</td>\n",
        "            </tr>\n",
        "            <tr>\n",
        "                        <th id=\"T_49efadb8_eec6_11ea_9ee4_5254002abccclevel0_row9\" class=\"row_heading level0 row9\" >Transport_closing</th>\n",
        "                        <td id=\"T_49efadb8_eec6_11ea_9ee4_5254002abcccrow9_col0\" class=\"data row9 col0\" >-0.201002</td>\n",
        "                        <td id=\"T_49efadb8_eec6_11ea_9ee4_5254002abcccrow9_col1\" class=\"data row9 col1\" >-0.079618</td>\n",
        "                        <td id=\"T_49efadb8_eec6_11ea_9ee4_5254002abcccrow9_col2\" class=\"data row9 col2\" >0.063084</td>\n",
        "                        <td id=\"T_49efadb8_eec6_11ea_9ee4_5254002abcccrow9_col3\" class=\"data row9 col3\" >0.031547</td>\n",
        "                        <td id=\"T_49efadb8_eec6_11ea_9ee4_5254002abcccrow9_col4\" class=\"data row9 col4\" >-0.098549</td>\n",
        "                        <td id=\"T_49efadb8_eec6_11ea_9ee4_5254002abcccrow9_col5\" class=\"data row9 col5\" >0.363317</td>\n",
        "                        <td id=\"T_49efadb8_eec6_11ea_9ee4_5254002abcccrow9_col6\" class=\"data row9 col6\" >0.390534</td>\n",
        "                        <td id=\"T_49efadb8_eec6_11ea_9ee4_5254002abcccrow9_col7\" class=\"data row9 col7\" >0.132997</td>\n",
        "                        <td id=\"T_49efadb8_eec6_11ea_9ee4_5254002abcccrow9_col8\" class=\"data row9 col8\" >0.484697</td>\n",
        "                        <td id=\"T_49efadb8_eec6_11ea_9ee4_5254002abcccrow9_col9\" class=\"data row9 col9\" >1.000000</td>\n",
        "                        <td id=\"T_49efadb8_eec6_11ea_9ee4_5254002abcccrow9_col10\" class=\"data row9 col10\" >0.526234</td>\n",
        "                        <td id=\"T_49efadb8_eec6_11ea_9ee4_5254002abcccrow9_col11\" class=\"data row9 col11\" >0.698945</td>\n",
        "                        <td id=\"T_49efadb8_eec6_11ea_9ee4_5254002abcccrow9_col12\" class=\"data row9 col12\" >0.573158</td>\n",
        "                        <td id=\"T_49efadb8_eec6_11ea_9ee4_5254002abcccrow9_col13\" class=\"data row9 col13\" >-0.074312</td>\n",
        "                        <td id=\"T_49efadb8_eec6_11ea_9ee4_5254002abcccrow9_col14\" class=\"data row9 col14\" >0.000344</td>\n",
        "                        <td id=\"T_49efadb8_eec6_11ea_9ee4_5254002abcccrow9_col15\" class=\"data row9 col15\" >-0.158893</td>\n",
        "                        <td id=\"T_49efadb8_eec6_11ea_9ee4_5254002abcccrow9_col16\" class=\"data row9 col16\" >0.795510</td>\n",
        "            </tr>\n",
        "            <tr>\n",
        "                        <th id=\"T_49efadb8_eec6_11ea_9ee4_5254002abccclevel0_row10\" class=\"row_heading level0 row10\" >Stay_home_restrictions</th>\n",
        "                        <td id=\"T_49efadb8_eec6_11ea_9ee4_5254002abcccrow10_col0\" class=\"data row10 col0\" >-0.110033</td>\n",
        "                        <td id=\"T_49efadb8_eec6_11ea_9ee4_5254002abcccrow10_col1\" class=\"data row10 col1\" >-0.054024</td>\n",
        "                        <td id=\"T_49efadb8_eec6_11ea_9ee4_5254002abcccrow10_col2\" class=\"data row10 col2\" >0.088130</td>\n",
        "                        <td id=\"T_49efadb8_eec6_11ea_9ee4_5254002abcccrow10_col3\" class=\"data row10 col3\" >0.093150</td>\n",
        "                        <td id=\"T_49efadb8_eec6_11ea_9ee4_5254002abcccrow10_col4\" class=\"data row10 col4\" >-0.059450</td>\n",
        "                        <td id=\"T_49efadb8_eec6_11ea_9ee4_5254002abcccrow10_col5\" class=\"data row10 col5\" >0.235003</td>\n",
        "                        <td id=\"T_49efadb8_eec6_11ea_9ee4_5254002abcccrow10_col6\" class=\"data row10 col6\" >0.445655</td>\n",
        "                        <td id=\"T_49efadb8_eec6_11ea_9ee4_5254002abcccrow10_col7\" class=\"data row10 col7\" >0.234875</td>\n",
        "                        <td id=\"T_49efadb8_eec6_11ea_9ee4_5254002abcccrow10_col8\" class=\"data row10 col8\" >0.457437</td>\n",
        "                        <td id=\"T_49efadb8_eec6_11ea_9ee4_5254002abcccrow10_col9\" class=\"data row10 col9\" >0.526234</td>\n",
        "                        <td id=\"T_49efadb8_eec6_11ea_9ee4_5254002abcccrow10_col10\" class=\"data row10 col10\" >1.000000</td>\n",
        "                        <td id=\"T_49efadb8_eec6_11ea_9ee4_5254002abcccrow10_col11\" class=\"data row10 col11\" >0.648339</td>\n",
        "                        <td id=\"T_49efadb8_eec6_11ea_9ee4_5254002abcccrow10_col12\" class=\"data row10 col12\" >0.488403</td>\n",
        "                        <td id=\"T_49efadb8_eec6_11ea_9ee4_5254002abcccrow10_col13\" class=\"data row10 col13\" >0.066205</td>\n",
        "                        <td id=\"T_49efadb8_eec6_11ea_9ee4_5254002abcccrow10_col14\" class=\"data row10 col14\" >0.213881</td>\n",
        "                        <td id=\"T_49efadb8_eec6_11ea_9ee4_5254002abcccrow10_col15\" class=\"data row10 col15\" >0.044010</td>\n",
        "                        <td id=\"T_49efadb8_eec6_11ea_9ee4_5254002abcccrow10_col16\" class=\"data row10 col16\" >0.672290</td>\n",
        "            </tr>\n",
        "            <tr>\n",
        "                        <th id=\"T_49efadb8_eec6_11ea_9ee4_5254002abccclevel0_row11\" class=\"row_heading level0 row11\" >Internal_movement_restrictions</th>\n",
        "                        <td id=\"T_49efadb8_eec6_11ea_9ee4_5254002abcccrow11_col0\" class=\"data row11 col0\" >-0.086784</td>\n",
        "                        <td id=\"T_49efadb8_eec6_11ea_9ee4_5254002abcccrow11_col1\" class=\"data row11 col1\" >-0.013525</td>\n",
        "                        <td id=\"T_49efadb8_eec6_11ea_9ee4_5254002abcccrow11_col2\" class=\"data row11 col2\" >0.022719</td>\n",
        "                        <td id=\"T_49efadb8_eec6_11ea_9ee4_5254002abcccrow11_col3\" class=\"data row11 col3\" >-0.050276</td>\n",
        "                        <td id=\"T_49efadb8_eec6_11ea_9ee4_5254002abcccrow11_col4\" class=\"data row11 col4\" >-0.263120</td>\n",
        "                        <td id=\"T_49efadb8_eec6_11ea_9ee4_5254002abcccrow11_col5\" class=\"data row11 col5\" >0.206606</td>\n",
        "                        <td id=\"T_49efadb8_eec6_11ea_9ee4_5254002abcccrow11_col6\" class=\"data row11 col6\" >0.455138</td>\n",
        "                        <td id=\"T_49efadb8_eec6_11ea_9ee4_5254002abcccrow11_col7\" class=\"data row11 col7\" >0.235144</td>\n",
        "                        <td id=\"T_49efadb8_eec6_11ea_9ee4_5254002abcccrow11_col8\" class=\"data row11 col8\" >0.618718</td>\n",
        "                        <td id=\"T_49efadb8_eec6_11ea_9ee4_5254002abcccrow11_col9\" class=\"data row11 col9\" >0.698945</td>\n",
        "                        <td id=\"T_49efadb8_eec6_11ea_9ee4_5254002abcccrow11_col10\" class=\"data row11 col10\" >0.648339</td>\n",
        "                        <td id=\"T_49efadb8_eec6_11ea_9ee4_5254002abcccrow11_col11\" class=\"data row11 col11\" >1.000000</td>\n",
        "                        <td id=\"T_49efadb8_eec6_11ea_9ee4_5254002abcccrow11_col12\" class=\"data row11 col12\" >0.457596</td>\n",
        "                        <td id=\"T_49efadb8_eec6_11ea_9ee4_5254002abcccrow11_col13\" class=\"data row11 col13\" >-0.025007</td>\n",
        "                        <td id=\"T_49efadb8_eec6_11ea_9ee4_5254002abcccrow11_col14\" class=\"data row11 col14\" >0.295219</td>\n",
        "                        <td id=\"T_49efadb8_eec6_11ea_9ee4_5254002abcccrow11_col15\" class=\"data row11 col15\" >-0.236127</td>\n",
        "                        <td id=\"T_49efadb8_eec6_11ea_9ee4_5254002abcccrow11_col16\" class=\"data row11 col16\" >0.668866</td>\n",
        "            </tr>\n",
        "            <tr>\n",
        "                        <th id=\"T_49efadb8_eec6_11ea_9ee4_5254002abccclevel0_row12\" class=\"row_heading level0 row12\" >International_movement_restrictions</th>\n",
        "                        <td id=\"T_49efadb8_eec6_11ea_9ee4_5254002abcccrow12_col0\" class=\"data row12 col0\" >-0.468955</td>\n",
        "                        <td id=\"T_49efadb8_eec6_11ea_9ee4_5254002abcccrow12_col1\" class=\"data row12 col1\" >-0.143243</td>\n",
        "                        <td id=\"T_49efadb8_eec6_11ea_9ee4_5254002abcccrow12_col2\" class=\"data row12 col2\" >-0.098951</td>\n",
        "                        <td id=\"T_49efadb8_eec6_11ea_9ee4_5254002abcccrow12_col3\" class=\"data row12 col3\" >-0.000871</td>\n",
        "                        <td id=\"T_49efadb8_eec6_11ea_9ee4_5254002abcccrow12_col4\" class=\"data row12 col4\" >0.037404</td>\n",
        "                        <td id=\"T_49efadb8_eec6_11ea_9ee4_5254002abcccrow12_col5\" class=\"data row12 col5\" >0.505698</td>\n",
        "                        <td id=\"T_49efadb8_eec6_11ea_9ee4_5254002abcccrow12_col6\" class=\"data row12 col6\" >0.244251</td>\n",
        "                        <td id=\"T_49efadb8_eec6_11ea_9ee4_5254002abcccrow12_col7\" class=\"data row12 col7\" >0.075699</td>\n",
        "                        <td id=\"T_49efadb8_eec6_11ea_9ee4_5254002abcccrow12_col8\" class=\"data row12 col8\" >0.269516</td>\n",
        "                        <td id=\"T_49efadb8_eec6_11ea_9ee4_5254002abcccrow12_col9\" class=\"data row12 col9\" >0.573158</td>\n",
        "                        <td id=\"T_49efadb8_eec6_11ea_9ee4_5254002abcccrow12_col10\" class=\"data row12 col10\" >0.488403</td>\n",
        "                        <td id=\"T_49efadb8_eec6_11ea_9ee4_5254002abcccrow12_col11\" class=\"data row12 col11\" >0.457596</td>\n",
        "                        <td id=\"T_49efadb8_eec6_11ea_9ee4_5254002abcccrow12_col12\" class=\"data row12 col12\" >1.000000</td>\n",
        "                        <td id=\"T_49efadb8_eec6_11ea_9ee4_5254002abcccrow12_col13\" class=\"data row12 col13\" >0.062435</td>\n",
        "                        <td id=\"T_49efadb8_eec6_11ea_9ee4_5254002abcccrow12_col14\" class=\"data row12 col14\" >0.162208</td>\n",
        "                        <td id=\"T_49efadb8_eec6_11ea_9ee4_5254002abcccrow12_col15\" class=\"data row12 col15\" >0.074201</td>\n",
        "                        <td id=\"T_49efadb8_eec6_11ea_9ee4_5254002abcccrow12_col16\" class=\"data row12 col16\" >0.660770</td>\n",
        "            </tr>\n",
        "            <tr>\n",
        "                        <th id=\"T_49efadb8_eec6_11ea_9ee4_5254002abccclevel0_row13\" class=\"row_heading level0 row13\" >Information_campaigns</th>\n",
        "                        <td id=\"T_49efadb8_eec6_11ea_9ee4_5254002abcccrow13_col0\" class=\"data row13 col0\" >0.019532</td>\n",
        "                        <td id=\"T_49efadb8_eec6_11ea_9ee4_5254002abcccrow13_col1\" class=\"data row13 col1\" >0.017500</td>\n",
        "                        <td id=\"T_49efadb8_eec6_11ea_9ee4_5254002abcccrow13_col2\" class=\"data row13 col2\" >-0.120894</td>\n",
        "                        <td id=\"T_49efadb8_eec6_11ea_9ee4_5254002abcccrow13_col3\" class=\"data row13 col3\" >-0.117844</td>\n",
        "                        <td id=\"T_49efadb8_eec6_11ea_9ee4_5254002abcccrow13_col4\" class=\"data row13 col4\" >-0.157191</td>\n",
        "                        <td id=\"T_49efadb8_eec6_11ea_9ee4_5254002abcccrow13_col5\" class=\"data row13 col5\" >-0.032503</td>\n",
        "                        <td id=\"T_49efadb8_eec6_11ea_9ee4_5254002abcccrow13_col6\" class=\"data row13 col6\" >-0.000654</td>\n",
        "                        <td id=\"T_49efadb8_eec6_11ea_9ee4_5254002abcccrow13_col7\" class=\"data row13 col7\" >-0.006524</td>\n",
        "                        <td id=\"T_49efadb8_eec6_11ea_9ee4_5254002abcccrow13_col8\" class=\"data row13 col8\" >0.085879</td>\n",
        "                        <td id=\"T_49efadb8_eec6_11ea_9ee4_5254002abcccrow13_col9\" class=\"data row13 col9\" >-0.074312</td>\n",
        "                        <td id=\"T_49efadb8_eec6_11ea_9ee4_5254002abcccrow13_col10\" class=\"data row13 col10\" >0.066205</td>\n",
        "                        <td id=\"T_49efadb8_eec6_11ea_9ee4_5254002abcccrow13_col11\" class=\"data row13 col11\" >-0.025007</td>\n",
        "                        <td id=\"T_49efadb8_eec6_11ea_9ee4_5254002abcccrow13_col12\" class=\"data row13 col12\" >0.062435</td>\n",
        "                        <td id=\"T_49efadb8_eec6_11ea_9ee4_5254002abcccrow13_col13\" class=\"data row13 col13\" >1.000000</td>\n",
        "                        <td id=\"T_49efadb8_eec6_11ea_9ee4_5254002abcccrow13_col14\" class=\"data row13 col14\" >0.118003</td>\n",
        "                        <td id=\"T_49efadb8_eec6_11ea_9ee4_5254002abcccrow13_col15\" class=\"data row13 col15\" >0.058357</td>\n",
        "                        <td id=\"T_49efadb8_eec6_11ea_9ee4_5254002abcccrow13_col16\" class=\"data row13 col16\" >0.011486</td>\n",
        "            </tr>\n",
        "            <tr>\n",
        "                        <th id=\"T_49efadb8_eec6_11ea_9ee4_5254002abccclevel0_row14\" class=\"row_heading level0 row14\" >Testing_policy</th>\n",
        "                        <td id=\"T_49efadb8_eec6_11ea_9ee4_5254002abcccrow14_col0\" class=\"data row14 col0\" >-0.139899</td>\n",
        "                        <td id=\"T_49efadb8_eec6_11ea_9ee4_5254002abcccrow14_col1\" class=\"data row14 col1\" >-0.504183</td>\n",
        "                        <td id=\"T_49efadb8_eec6_11ea_9ee4_5254002abcccrow14_col2\" class=\"data row14 col2\" >-0.393798</td>\n",
        "                        <td id=\"T_49efadb8_eec6_11ea_9ee4_5254002abcccrow14_col3\" class=\"data row14 col3\" >-0.311306</td>\n",
        "                        <td id=\"T_49efadb8_eec6_11ea_9ee4_5254002abcccrow14_col4\" class=\"data row14 col4\" >-0.292775</td>\n",
        "                        <td id=\"T_49efadb8_eec6_11ea_9ee4_5254002abcccrow14_col5\" class=\"data row14 col5\" >0.002934</td>\n",
        "                        <td id=\"T_49efadb8_eec6_11ea_9ee4_5254002abcccrow14_col6\" class=\"data row14 col6\" >0.014279</td>\n",
        "                        <td id=\"T_49efadb8_eec6_11ea_9ee4_5254002abcccrow14_col7\" class=\"data row14 col7\" >0.067603</td>\n",
        "                        <td id=\"T_49efadb8_eec6_11ea_9ee4_5254002abcccrow14_col8\" class=\"data row14 col8\" >0.287496</td>\n",
        "                        <td id=\"T_49efadb8_eec6_11ea_9ee4_5254002abcccrow14_col9\" class=\"data row14 col9\" >0.000344</td>\n",
        "                        <td id=\"T_49efadb8_eec6_11ea_9ee4_5254002abcccrow14_col10\" class=\"data row14 col10\" >0.213881</td>\n",
        "                        <td id=\"T_49efadb8_eec6_11ea_9ee4_5254002abcccrow14_col11\" class=\"data row14 col11\" >0.295219</td>\n",
        "                        <td id=\"T_49efadb8_eec6_11ea_9ee4_5254002abcccrow14_col12\" class=\"data row14 col12\" >0.162208</td>\n",
        "                        <td id=\"T_49efadb8_eec6_11ea_9ee4_5254002abcccrow14_col13\" class=\"data row14 col13\" >0.118003</td>\n",
        "                        <td id=\"T_49efadb8_eec6_11ea_9ee4_5254002abcccrow14_col14\" class=\"data row14 col14\" >1.000000</td>\n",
        "                        <td id=\"T_49efadb8_eec6_11ea_9ee4_5254002abcccrow14_col15\" class=\"data row14 col15\" >0.028872</td>\n",
        "                        <td id=\"T_49efadb8_eec6_11ea_9ee4_5254002abcccrow14_col16\" class=\"data row14 col16\" >-0.185118</td>\n",
        "            </tr>\n",
        "            <tr>\n",
        "                        <th id=\"T_49efadb8_eec6_11ea_9ee4_5254002abccclevel0_row15\" class=\"row_heading level0 row15\" >Contact_tracing</th>\n",
        "                        <td id=\"T_49efadb8_eec6_11ea_9ee4_5254002abcccrow15_col0\" class=\"data row15 col0\" >-0.138110</td>\n",
        "                        <td id=\"T_49efadb8_eec6_11ea_9ee4_5254002abcccrow15_col1\" class=\"data row15 col1\" >-0.125335</td>\n",
        "                        <td id=\"T_49efadb8_eec6_11ea_9ee4_5254002abcccrow15_col2\" class=\"data row15 col2\" >-0.137697</td>\n",
        "                        <td id=\"T_49efadb8_eec6_11ea_9ee4_5254002abcccrow15_col3\" class=\"data row15 col3\" >-0.203656</td>\n",
        "                        <td id=\"T_49efadb8_eec6_11ea_9ee4_5254002abcccrow15_col4\" class=\"data row15 col4\" >0.094745</td>\n",
        "                        <td id=\"T_49efadb8_eec6_11ea_9ee4_5254002abcccrow15_col5\" class=\"data row15 col5\" >-0.341915</td>\n",
        "                        <td id=\"T_49efadb8_eec6_11ea_9ee4_5254002abcccrow15_col6\" class=\"data row15 col6\" >-0.417388</td>\n",
        "                        <td id=\"T_49efadb8_eec6_11ea_9ee4_5254002abcccrow15_col7\" class=\"data row15 col7\" >0.033975</td>\n",
        "                        <td id=\"T_49efadb8_eec6_11ea_9ee4_5254002abcccrow15_col8\" class=\"data row15 col8\" >-0.179951</td>\n",
        "                        <td id=\"T_49efadb8_eec6_11ea_9ee4_5254002abcccrow15_col9\" class=\"data row15 col9\" >-0.158893</td>\n",
        "                        <td id=\"T_49efadb8_eec6_11ea_9ee4_5254002abcccrow15_col10\" class=\"data row15 col10\" >0.044010</td>\n",
        "                        <td id=\"T_49efadb8_eec6_11ea_9ee4_5254002abcccrow15_col11\" class=\"data row15 col11\" >-0.236127</td>\n",
        "                        <td id=\"T_49efadb8_eec6_11ea_9ee4_5254002abcccrow15_col12\" class=\"data row15 col12\" >0.074201</td>\n",
        "                        <td id=\"T_49efadb8_eec6_11ea_9ee4_5254002abcccrow15_col13\" class=\"data row15 col13\" >0.058357</td>\n",
        "                        <td id=\"T_49efadb8_eec6_11ea_9ee4_5254002abcccrow15_col14\" class=\"data row15 col14\" >0.028872</td>\n",
        "                        <td id=\"T_49efadb8_eec6_11ea_9ee4_5254002abcccrow15_col15\" class=\"data row15 col15\" >1.000000</td>\n",
        "                        <td id=\"T_49efadb8_eec6_11ea_9ee4_5254002abcccrow15_col16\" class=\"data row15 col16\" >-0.158170</td>\n",
        "            </tr>\n",
        "            <tr>\n",
        "                        <th id=\"T_49efadb8_eec6_11ea_9ee4_5254002abccclevel0_row16\" class=\"row_heading level0 row16\" >Stringency_index</th>\n",
        "                        <td id=\"T_49efadb8_eec6_11ea_9ee4_5254002abcccrow16_col0\" class=\"data row16 col0\" >-0.219000</td>\n",
        "                        <td id=\"T_49efadb8_eec6_11ea_9ee4_5254002abcccrow16_col1\" class=\"data row16 col1\" >0.227223</td>\n",
        "                        <td id=\"T_49efadb8_eec6_11ea_9ee4_5254002abcccrow16_col2\" class=\"data row16 col2\" >0.280567</td>\n",
        "                        <td id=\"T_49efadb8_eec6_11ea_9ee4_5254002abcccrow16_col3\" class=\"data row16 col3\" >0.175854</td>\n",
        "                        <td id=\"T_49efadb8_eec6_11ea_9ee4_5254002abcccrow16_col4\" class=\"data row16 col4\" >0.007498</td>\n",
        "                        <td id=\"T_49efadb8_eec6_11ea_9ee4_5254002abcccrow16_col5\" class=\"data row16 col5\" >0.552219</td>\n",
        "                        <td id=\"T_49efadb8_eec6_11ea_9ee4_5254002abcccrow16_col6\" class=\"data row16 col6\" >0.638153</td>\n",
        "                        <td id=\"T_49efadb8_eec6_11ea_9ee4_5254002abcccrow16_col7\" class=\"data row16 col7\" >0.291167</td>\n",
        "                        <td id=\"T_49efadb8_eec6_11ea_9ee4_5254002abcccrow16_col8\" class=\"data row16 col8\" >0.454703</td>\n",
        "                        <td id=\"T_49efadb8_eec6_11ea_9ee4_5254002abcccrow16_col9\" class=\"data row16 col9\" >0.795510</td>\n",
        "                        <td id=\"T_49efadb8_eec6_11ea_9ee4_5254002abcccrow16_col10\" class=\"data row16 col10\" >0.672290</td>\n",
        "                        <td id=\"T_49efadb8_eec6_11ea_9ee4_5254002abcccrow16_col11\" class=\"data row16 col11\" >0.668866</td>\n",
        "                        <td id=\"T_49efadb8_eec6_11ea_9ee4_5254002abcccrow16_col12\" class=\"data row16 col12\" >0.660770</td>\n",
        "                        <td id=\"T_49efadb8_eec6_11ea_9ee4_5254002abcccrow16_col13\" class=\"data row16 col13\" >0.011486</td>\n",
        "                        <td id=\"T_49efadb8_eec6_11ea_9ee4_5254002abcccrow16_col14\" class=\"data row16 col14\" >-0.185118</td>\n",
        "                        <td id=\"T_49efadb8_eec6_11ea_9ee4_5254002abcccrow16_col15\" class=\"data row16 col15\" >-0.158170</td>\n",
        "                        <td id=\"T_49efadb8_eec6_11ea_9ee4_5254002abcccrow16_col16\" class=\"data row16 col16\" >1.000000</td>\n",
        "            </tr>\n",
        "    </tbody></table>"
       ],
       "output_type": "pyout",
       "prompt_number": 21,
       "text": [
        "<pandas.io.formats.style.Styler at 0x7ff15734d3a0>"
       ]
      }
     ],
     "prompt_number": 21
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "# Scatter plot of Stringency index and Rt\n",
      "df = track_df.copy()\n",
      "sns.scatterplot(data=df, x=\"Stringency_index\", y=\"Rt\", hue=\"Country\", legend=\"brief\", marker=\"+\")\n",
      "bbox_to_anchor=(1.02, 0)\n",
      "bbox_loc=\"lower left\"\n",
      "plt.legend(bbox_to_anchor=bbox_to_anchor, loc=bbox_loc, borderaxespad=0)\n",
      "plt.title(\"Relationship of Stringency index and reproduction number\")\n",
      "plt.ylabel(\"Reproduction number\")\n",
      "plt.xlabel(\"Stringency index\")\n",
      "plt.show()"
     ],
     "language": "python",
     "metadata": {},
     "outputs": [
      {
       "output_type": "display_data",
       "png": "iVBORw0KGgoAAAANSUhEUgAAAhEAAAGyCAYAAABa/pbPAAAAOXRFWHRTb2Z0d2FyZQBNYXRwbG90bGliIHZlcnNpb24zLjMuMCwgaHR0cHM6Ly9tYXRwbG90bGliLm9yZy86wFpkAAAACXBIWXMAAAsTAAALEwEAmpwYAABw4klEQVR4nO3dd5ycVdnG8d+V0EJCJyKCEqSIgBBJkd67dFAERDqCCqIi0lQsCC8iXUR6kRIg9I5C6FICKXRBmtQAoSSEltzvH+fM7rOzO7uzszO7m831zWc/maefmZ2d557TbkUEZmZmZp3Vr6cLYGZmZjMnBxFmZmZWEwcRZmZmVhMHEWZmZlYTBxFmZmZWEwcRZmZmVhMHEWZmZlYTBxFmZmZWEwcRZmZmVhMHEWZmZlYTBxFmZtYtJH1R0mWSnpc0VtJNkpat4/nXlbR6vc5nHXMQYWZmDSdJwNXAmIhYKiKGAYcBi9TxMusCbQYRkmar43UscxBhZmbdYT3gs4g4o7QiIsYD90r6s6THJU2UtCM01SrcUNpX0mmSds+PX5T0O0mP5mOWkzQE2A/4maRxktaSdL6kMyQ9CBwn6T+SBudz9JP0XGnZauPIzMzMusOKwNg21m8HDAVWBhYGHpZ0dxXnezsiVpH0I+DgiNhb0hnAlIg4HkDSXsDiwOoRMV3S+8AuwEnAhsD4iJjUxec1S3NNhJmZ9aQ1gUsjYnpEvAncBYyo4rir8v9jgSHt7HdFREzPj88FfpAf7wmc1/niWpGDCDMz6w5PAMM6sf/ntLxHzVW2/ZP8/3Tar1WfWnoQEa8Ab0paHxgJ3NyJ8lgbHESYmVl3uAOYU9K+pRWSVgLeA3aU1D/3T1gbeAh4CVhe0pyS5gc2qOIaHwLzdLDP2cA/aFlDYTVyEGFmZg0XEQFsC2yYh3g+ARwDXAJMAMaTAo1DIuKNXGtwOfB4/v+xKi5zPbBtqWNlhX2uAwbhpoy6UPq9mpmZ9X2ShgMnRkSlIMM6waMzzMxsliDpUGB/0ggNqwPXRJiZmVlN3CfCzMzMauIgwszMzGriIMLMzMxq4iDCzMzMauLRGWZm1nCSFgL+lRe/SJppspS3YmREfNrOsUOAGyJixYYW0jrNQYSZmTVcRLxDSrSFpKMoJMpqj1N4927+5ZiZWSsf//y4nYE/AV8BXgYOn+uEQy6p5zUknU+qYbgyL0+JiEGS1gX+AEwGlgM2LhzzVWA0sC/wLvBXYDDwEbAP8CppBsxlI+IzSfOSZsNcNiI+q2f5zX0izMysTA4gzgKWAJT/Pyuv7y6rAD+NiGVLKyR9jRRA7B4RDwNnAgdExDDgYOD0iPgQGAN8Ox/2PeAqBxCN4SDCzMzK/QmYu2zd3Hl9d3koIl4oLA8GrgV2iYjxkgYBqwNXSBoH/B1YNO97NrBHfrwHzpPRMG7OMDOzcl/p5PpaNaX7ltQPmKOwbWrZvu+TmlXWBJ7Mx70XEUPLTxoR90kakptF+kfE43Uut2WuiTAzs3Ivd3J9rV4EhuXHWwGzt7Pvp6QsoD+QtHNEfAC8IOk7AEpWLux/ISlDqGshGshBhJmZlTuc1FGx6KO8vp7OAtaRNB5Yjda1Dy1ExFRgC+BnkrYiJdLaKx//BLB1YfeLgQWAS+tcZitwAi4zM2ulO0ZnNJKkHYCtI2LXni5LX+YgwszM+hRJpwKbAZtHxLM9XZ6+zEGEmZmZ1cR9IszMzKwmDiLMzMysJg4izMzMrCYOIszMzKwmDiLMzKxbSApJ/ygszyZpkqQbOjhu3dI+kraSdGijy2rV8bTXZmbWXaYCK0oaEBHTgI1IWTerFhHXAdc1onDWeQ4izMyslY9/uXvryab+fH49Jpu6iZRh80pgJ9KMkmsBSBoJnAzMBUwD9oiIZ4oHS9odGB4RP6lDWayL3JxhZmYt5ACidSrwtL6rLgO+J2kuYCXgwcK2p4G1IuKbwG/o3qyhVgPXRJiZWbn2UoF3qTYiIiZIGkKqhbipbPN8wAWSlgGC9hNyWS/gmggzMyvX6FTg1wHH0zo51h+AOyNiRWBLUrOG9WKuiTAzs3Ivk5ow2lpfD+cC70XEREnrFtbPR3NHy93rdC1rINdEmJlZuYamAo+I/0XEKW1sOg44RtJj+EvuTMEJuMzMrJUGjs6wPsRBhJmZmdXEzRlmZmZWEwcRZmZmVhMHEWZmZlYTBxFmZmZWEwcRZmZmVhMHEWZm1i0kTZc0TtJ4SY9KWr2Gc4yRNLyN9TdJmr8OZdw9pycfl38u7Oo5+zJP5mFmZt1lWkQMBZC0CXAMsE61B0vqX2lbRGze5dI1G+UsodVxTYSZmbXy1u+H7fzW74e9+Nbvh83I/9cjg2fRvMBkAEnrSrqhtEHSaTnlN5JelPR/kh4FvlPYp5+k8yX9sbDfwpKGSHpK0lmSnpB0m6QBeZ99JD2ca0JGSypPMtYmSVtKelDSY5L+KWmRvH6dQo3FY5LmUfJnSY9Lmihpxzq9Xr2SgwgzM2shBwytUoHXIZAYkG+4TwNnkxJuVeOdiFglIi7Ly7MBFwP/iYgj29h/GeCvEbEC8B6wfV5/VUSMiIiVgaeAvSpcb8dCcLAHcC+wak5RfhlwSN7vYODHuXZlLWAasB0wFFgZ2BD4s6RFq3yeMx0HEWZmVq69VOBdMS0ihkbEcsCmwIWSVMVxo8qW/w48HhFHV9j/hYgYlx+PBYbkxytKukfSRGAXYIVK18vlHBoR5wGLA7fm435ZOO4+4ARJBwLzR8TnwJrApRExPSLeBO4CRlTxHGdKDiLMzKxco1OBExEPAAsDg4HPaXk/Kk8BPrVs+X5gPUmVUoV/Ung8neb+f+cDP4mIbwC/a+M6lZwKnJaP+2HpuIg4FtgbGADcJ2m5Ks/XZziIMDOzcpVSftcrFTj5htsfeAd4CVhe0px5hMUGHRx+DnATcLmkzgwQmAd4XdLspJqIahVTlO9WWilpqYiYGBH/BzwMLAfcQ2oO6S9pMLA28FAnrjVT8egMMzMrdzipT0SxSaMeqcAHSBqXHwvYLSKmA69Iuhx4HHgBeKyjE0XECZLmAy6SVG1A8GvgQWBS/n+eKo87CrhC0mTgDmDJvP4gSesBM4AngJuBT4HVgPFAAIdExBtVXmem4yyeZmbWSu5E2SIV+Bd+M9apwK0FBxFmZmZWE/eJMDMzs5o4iDAzM7OaOIgwMzOzmjiIMDMzs5o4iDAzM7OaOIgwM7NuUUgFXvo5tJ19t5G0fBeuNVzSKbUeb9XxEE8zM+sWkqZExKAq9z0fuCEirmxsqawrHESYmVkrE05sPdnUSj/r2mRTlYIISccCW5FyaNwGXAXcALyff7YnzS55BmkWzeeBPSNisqQxpNkn1wPmB/aKiHskrQscHBFbSBoJnEzKeTEN2CMinunKc7HEzRlmZtZCDiBapQLP67tiQFlzxo6SFgK2BVaIiJWAP0bE/cB1wC9zJs3ngQuBX+V9JgK/LZx3togYCRxUtr7kaWCtnMr7N3Q9G6llzp1hZmbl2ksF3pXaiGkRMbS4IifQ+hg4R9INpBoIyvaZj5Rq+6686gLgisIuV+X/i2m/i+YDLpC0DCmfxexdeA5W4JoIMzMr1/BU4CUR8TkwErgS2AK4pYbTlFJ/F9N+F/0BuDMiVgS2pPoU4NYBBxFmZlau4anASyQNAuaLiJuAnwEr500fkrNsRsT7wGRJa+VtuwJ3lZ+rHcVU3rt3tczWzEGEmZmVO5yU+ruobqnACz/HkgKFGyRNAO4Ffp73vQz4paTHJC0F7Ab8Oe83FPh9J657HHCMpMdwM35deXSGmZm10ojRGdb3OIgwMzOzmrg5w8zMzGriIMLMzMxq4iDCzMzMauIgwszMzGriIMLMzMxq4iDCzMy6RSEV+HhJj0pavQHXWDdPn92ZY8ZIGl7Dtc6XtENnj+tLPOmGmZl1l6bcGZI2AY4B1unRElmXOIgwM7NW7jyj9WRT6+1X18mm5gUmQ9PU19cCC5CSYx0ZEddKGgLcTJrJcnXS1NVbR8Q0SSOAc4AZwO3AZjk3RpNKKcAlDQDOI02x/TQwoHDMxsDvgDlJKcf3iIgp5enKI+LgfMjakn4OfBE4JCKurONr1Ou5OcPMzFrIAUSrVOB5fVeUpr1+GjiblBgLUhbPbSNiFWA94C+SlLctA/w1IlYA3gO2z+vPA36YazamV7hepRTg+wMfRcTXSanDhwFIWhg4Etgwl+UR4OdtpSsvXGNRYE1S8rBjO/+SzNxcE2FmZuUangpc0mrAhZJWJAUqf5K0NqlmYTFgkXzMCxExLj8eCwyRND8wT0Q8kNdfQrqJl6uUAnxt4BSAiJiQ83EArAosD9yXY5g5gAeA96mcrvyaiJgBPClpEWYxDiLMzKxcw1OBR8QD+Zv/YGDz/P+wiPhM0os0p+v+pHDYdApND1UopQDfNjeNjOlgfwG3R8ROrTakppENgB2AnwDrt1E+lR/X17k5w8zMyjU8Fbik5YD+wDukGoO3cgCxHqn5pKKIeA/4UNK38qrvVdi1Ugrwu4GdczlWBFbK6/8NrCFp6bxtoKRl20lXPstzTYSZmZU7nNQnotikUbdU4PmxgN0iYrqki4HrJU0k9UN4uopz7QWcJWkGcBepyaHccaTmjCOBGwvr/wacJ+kp4ClSMwkRMUnS7sClkubM+x4JfAhcK2muXO6fY4CzeJqZWRu6YXRGl0gaFBFT8uNDgUUj4qc9XKxZjoMIMzOb6UjaETiMVKP+ErB7REzq2VLNehxEmJmZWU3csdLMzMxq4iDCzMzMauIgwszMzGriIMLMzMxq4iDCzMy6haSQ9I/C8mySJnU2dXfh+P0k/aB+JbTO8mRTZmbWXaYCK0oaEBHTgI1onlGy0yLijLqVzGrimggzM2vl6nNX2fnqc1d58epzV5mR/+9qBs+Sm4Bv58c7AZeWNuRpps+V9JCkxyRtndefLOk3+fEmku6W1E/SUZIOzuuXlvRPSeMlPSppKSV/lvS4pIl5bgmrIwcRZmbWQg4YWqUCr1MgcRnwvTyF9ErAg4VtRwB3RMRIUkrwP0saSJpUasecV+MUYI+cObPoYlLK8JWB1YHXge2AoaRcFxvm8y1ah+dgmYMIMzMr114q8C6JiAnAEFItxE1lmzcGDs35NcaQMnl+JSI+AvYBbgdOi4jniwdJmgdYLCKuztf4OB+zJnBpREyPiDdJOTZGdPU5WDP3iTAzs3KNTgV+HXA8sC6wUGG9gO0j4pk2jvkGKePnl+pUBqsD10SYmVm5RqcCPxf4XURMLFt/K3CAJAFI+mb+fwngF8A3gc0KKcABiIgPgf9J2ibvP6ekuYF7SM0g/SUNBtYGHqrTczAcRJiZWWuHk1J/F9UjFTgAEfG/iDiljU1/AGYHJkh6AvhDDijOAQ6OiNdIKcDPzn0qinYFDpQ0Abgf+CJwNTABGA/cARwSEW/U4zlY4gRcZmbWSu5E2SIV+LZ7PtprUoFb7+AgwszMzGri5gwzMzOriYMIMzMzq4mDCDMzM6uJgwgzMzOriYMIMzMzq4lnrDQzs24haTowkXTveQrYLU9PbTMp10SYmVl3mRYRQyNiReBTYL9qDpLkL7y9lH8xZmbWyjkXtZ5saq9d6zrZ1D3ASjlL56nAiqTZKo+KiGsl7U7KwjkI6C/pt6RZK7cAkHQa8EhEnF/HMlknuSbCzMxayAFEq1TgeX2X5ZqFzUhNG5XSfwOsAuwQEevU47pWfw4izMysXKNSgQ/Iab4fIdVunEOF9N95/9sj4t0uXtMayM0ZZmZWrlGpwKdFxNDiipxgq1X675ypc2ph1ee0/OJbnoDLeoBrIszMrFyjU4EXtZn+uw0vAcvnNN/zAxs0oCzWSQ4izMysXENTgZdplf67rZ0i4hXgcuDx/P9jDSiLdZKzeJqZWSvdMDrD+gAHEWZmZlYTN2eYmZlZTRxEmJmZWU0cRJiZmVlNHESYmZlZTRxEmJmZWU0cRJiZWbeQNF3SOEmPS7pCUvnU2sV9d89Jtupx3aMkHVyPc1lLDiLMzKy71JQK3Hov584wM7NWjhnVerKpw3ZsSCrwBYFzga+SZsXcNyImFHeUtCVwJDAH8A6wS0S8KemoXL6v5v9PiohT8jFHALsBbwGvAGPrWHbLXBNhZmYt5ACiVSrwvL7LylKB/w54LCJWIk2rfWEbh9wLrBoR3wQuAw4pbFsO2AQYCfxW0uyShgHfA4YCmwMj6lFua801EWZmVq69VOBdqY0opQKHVBNxDvAgsD1ARNwhaSFJ85YdtzgwStKipNqIFwrbboyIT4BPJL0FLAKsBVwdER8BSLquC2W2djiIMDOzct2ZCrya404FToiI6yStCxxV2PZJ4fF0fF/rVm7OMDOzct2ZCvweYBeAHCC8HREflO0zH/BqfrxbFee8G9hG0gBJ8wBb1qeoVs5BhJmZlevOVOBHAcMkTQCOpe0g4SjgCkljgbc7OmFEPAqMAsYDNwMP16uw1pKzeJqZWSvdMDrD+gAHEWZmZlYTN2eYmZlZTRxEmJmZWU0cRJiZmVlNHESYmZlZTRxEmJmZWU0cRJiZWbfoTCrwNo4dKmnzBpXLqcJr5CDCzMy6S02pwHPCrqGkZFrWi3iOcTMza2Xvq1tPNnX2tt2XCjyn+V4qr38ZWIOUwGtN4Bjg68CUiDgeQNLjwBYR8aKkXwPfByaR04BHxPGS9gH2JSXxeg7YtZSky2rjmggzM2shBxCtUoHn9V3WiVTgywMbRsROwG+AUbkmY1Q75x5Bygq6cr7G8MLmqyJiRESsDDwF7FWP5zMrcxBhZmbl2ksF3hWlVOCPkGoXzgHWBC6ClAocKKYCvy4ipnXyGmsA10bExxHxIXB9YduKku6RNJGU9GuF2p+KgZszzMystd6SCnxqO9s+p+UX4bmquP75wDYRMV7S7sC6VRxj7XBNhJmZlettqcABPgTmKSy/CKySj1sFWDKvvw/YUtJckgYBWxSOmQd4XdLspWta1ziIMDOzcr0tFTjAncDyeYjojsBoYEFJTwA/AZ4FiIiHgeuACaQ04BOB9/M5fg08SAo0nm7Ac5nlOIunmZm10g2jMxpG0qCImJLnobibNOLj0Z4uV1/kIMLMzPoUSZeQRnbMBVwQEcf0cJH6LAcRZmZmVhP3iTAzM7OaOIgwMzOzmjiIMDMzs5o4iDAzM7OaOIgwM7OGkzQkJ8kqruswBbek4ZJOyY/XlbR6Ddd+UdLCbazfU9JESRNyevKt8/rdJX2pivNWtV9f5mmvzcys14qIR0i5NiBNUz0FuL+r55W0OHAEsEpEvJ9ntxycN+8OPA681sFpqt2vz3IQYWZmrQy7fvtWk02N3XJ0wyabkjSGNJvkesD8wF4RcU+eCvtg0qyU+wHTJX0fOIA06+QZNOf0OCgi7pO0EHApsBjwACkTabkvkKbSngIQEVOAKZJ2IGX+vFjSNGA14JfAlsAAUgDzQ1Km0PL9lgdOAAYBbwO7R8Trkg7MZf8ceDIivtfFl6vXcHOGmZm1kAOIVqnA8/pGmi0iRgIHAb8tboiIF0kBw4k5Hfg9wMl5uZT+++y8+2+BeyNiBeBq2k4cNh54E3hB0nmStszXuZJU87FLvs404LScQnxFUiCxRfl+pADhVGCHiBgGnAscna91KPDNnO58vy69Qr2MayLMzKxce6nAa62NqDSzYXH9Vfn/scCQKs65ISmfRml53twssTawHUBE3ChpcquLRkyXtCkwAtgAOFHSsIg4qo3rrCfpENJrsCDwBC1TjAN8DVgRuD2Xpz/wet42gVRjcQ1wTRXPa6bhIMLMzMo1IhX4O8ACZesWBF4oLH+S/59OdfenfsCqEfFxcWUH6cWbRJqy+SHgIUm3A+eREoIVzzUXcDowPCJekXQUbacdF/BERKzWxrZvkwKbLYEjJH0jIj6vqpC93EzZnCFpjKS9azz2K5KmSOpf73IVrnGUpH+0s/2J3M5X7+suIuluSR9K+ku9z5+vsYuk2xpx7u4maS1Jz3Th+JC0dD3LVE+5N3xImim+LOQe9Bs24LxnSPp1vc/bnTr6TGmAuqcCz30OXpe0PoCkBYFNgXs7cZrydOC3kfpGkM85ND+8G9g5r9uM1sELkr6UU4iXDAVeauM6pYDh7VzLsUOF8jwDDJa0Wj7/7JJWkNQP+HJE3An8CpiP1GeiT+ixICJ/YEzLN/Q3JJ2ff0GNuE7TB1NEvBwRgyJier2vVa2IWCEixjTg1PuSOvPMGxG/KN8oaXFJoyW9Len9PKRp97ytqhtORFwcERs3oOzdLiLuiYiv9XQ5rH7ykLsWN6WI2C8i/tBTZZpJNSoV+A+AX0saB9wB/C4inu/E8dcD2+Z04GsBBwLD8xDNJ2nub/A7YO2cJnw72g5+ZgeOl/R0Ls+OwE/ztvOBM/L6T0j9Qx4HbgUeLpyjuF9/UoDxf5LGA+OA1fP6f0iaCDwGnBIR73XiOfdqPf0NZcuI+KekL5J+OYeRhtxYbZYg9fyt1PZ4Eakz0RKkP4xvAF+s9uSSZusrVXDWUr1/t36v9F7V/G7Gbjn6kmHXbw91Hp0REU+SRl+0tW3dwuO3yX0i8heuMfnxs8BKZYfu2Ma53gHa/bITES8B61fYNhoYXVh1ZP7paL9xpGaLcmu2V5aZWkT0yA/wIrBhYfk44MbC8qqkoTTvkW586xa2jQH2zo+XIkW075C+hV8MzJ+3XQTMAKaRhvEcQnpjBqkXMMCXgOuAd4HngH0K1zkKuBy4kFRt9QSpXay0/VfAq3nbM8AGVR7X9NzzvlcCo/K+jwIrt/O6rU6KhN/P/6+e158PfAZ8mp/rhm0cOwUYWuG8L+fXZUr+WY00Bvo+4MT8+v4xr7u3cFyQov//5N/VX2nODtsf+Ev+vbxAGqJVfO3nA84hdT56NZ+/f962O6ma83hgcj5+s8J1FyS1X76Wt1+T1z9OCk5L+82er//NNp7zusD/yn4vB5M6Qb2ffydzFbb/Mpf1NWDP/FyWztvmzGV9mdTj+wxgQN52E/CXwnkuA86t8HsYSRqS9l6+1mnAHJ14vY/Pz/e/wI+Lr3eFv8Ff5ef7CelLRUd/d8eQ2pA/AK4FFszbhuRr7ZVfg7tJNZ1HkqqI3yL9PcxXON+ueds7pC8PL9L8d3E+8Md2fldfJnXCm5SPPw34OvAxqT19CvBehXPtQ/pbf5f0t/+lal7fNl6/o2j/77zp/VFejtLzIX0mvZV/19sAmwPP5rIdXnatip8TpM+x0fn1eAE4sI1j/5F/b3t31+e8f/r+T89duOUHxuLARODkvLxY/mDYPH8QbZSXB+ftY2gOIpbO2+ckTRRyN3BSW9fJy0NoeSO7m9RpZi5Sm9gkYP287aj8obQ56QP6GODfedvXgFdKH0D5vEt1dFwbz/0o0s1/B9IN7+D8ITB7G6/ZgqQb5q6kD/yd8vJCeXvTh1SF1/yfpKDge8BXyra1eF3yut1Jw5YOyNcbQNtBxA2kcd1fya/fpnnbfsCT+fe7QL5+8bW/Gvg7MJA0Zvsh4IeFa39G+sDvD+xPunmXbpg3kj5QF8iv2zp5/SHAqEL5tgYmVng91qV1EPEQ6QN5QeApYL+8bVNScLBiLu8ltAwiTiTdkBYktZFeDxyTt32RdKNYH9iFdIOfp0KZhpFu5LPl38lTpLHv1b7eT5NusAsCd5b/Ttv4GxyX9x9AdX93rxZeg9HAP8rePxfmbQNIgdZzwFdJbcBXARfl/Zcn3ejXJv3tnkB6r3UYROT3w/j8mg8k/e2uWXjf3Fv2PJvOlX8HbwOr5OueCtxdzevbxut3FO3/nXcURHwO/Ib0/t0nX+sS0vtnBdKXnyU7+pzIv6ux+Vxz5Nf7v8AmZcduk/cd0FOf+/7pez89d+H0ATaFFFUH8C+aaxB+VfqwKex/K7BbfjyGCtF0/kN5rOw6bQYRpA/P6RQ+0PMHwfn58VHAPwvblgem5cdLk24MG1J2w2/vuPIy5X2LHzz9SN9K1mrjue0KPFS27gHShCYtPqQqvDYLAMeSvjFNJ91ARpS/LoX9dwdeLjvH7rQOItYsLF8OHJof30EOCvLyhoXXfhHSt98Bhe07AXcWrvNcYdvc+dgvAouSapgWaOM5fim/p+bNy1cCh1R4PdaldRDx/cLyccAZ+fG5wLGFbcvm8ixN6pU9lRxE5u2rAS8UlrcnBZ1vF1+vKv5ODgKu7sTrvV9h28blv9M2/gb3LCxX83dXfA2WJ9V89S+8f75a2P4v4EeF5a+RbmazkW54lxW2DcznqiaIWI10w231vOg4iDgHOK6wbVAu05COXt82rnUU7f+ddxRETKO55m2evP+3CvuPBbbp6HMC+Bat/04PA84rHHt3W8/BP/7p6k9Pj87YJiLmIf1BLQeU5jZfAviOpPdKP6Q2pUXLT5BHJFwm6VVJH5Cq7FrNkV7Bl4B3I+LDwrqXSN/ISt4oPP4ImCu3KT5H+oA/Cngrl+FLHR1XoRyvlB5ExAxSNWdb87F/iebew5XKW1FETI6IQyNNwLIIKYi4Ru2Ph3qlnW0l5c+11EH2S2XHFx8vQfoW9Xrhd/x3Uo1Eq/NGRKmT1yBS8PduREwuL0hEvEaqbdle0vzAZqQmrmpV+1yKv4fBpCBnbOG53ELzFLqQaib6A89ERMXe6JKWlXRD7mz8AalNuvz9XEsZKyn/nXT0d1d+/tnLylfcXv5+fYnmALJFWSNiKqnWoxpfBl6K2vpctChTpBED79D+33x7Hb4783de7p1o7uA9Lf//ZmH7tLJrV/qcWAL4Utnv7XDS69zqWLN66ukgAoCIuIsUpR+fV71C+kY0f+FnYEQc28bhfyJF8N+IiHmB79NyitNo59KvAQtKKg4Z+gqpyraacl8SEWuS/ogD+L9qjmvDl0sP8nCgxWl7LvbX8rWKqi5vUaSOS8fTXHVf6XVq7/XryOuk51Ly5cLjV0g1EQsXfsfz5gCnI6+Qfm/zV9h+Ael98B3ggYjo9OvThtdpWf7iePm3SR/4KxSey3wRUbwBHE1qmlhU0k7tXOdvpCaJZfL7+XDanrK3s2WspPj7rebvrvz8n5Gef1vnK3+/foVUhf9meVklzQ0sVNh3Ki0nOyp2AH4F+EqFm3VH79cWZZI0MF+3Hu+Rch9R+TnUotLnxCukWq/i722eiNi8cGxX/o7NKuoVQUR2ErCRpJVJtQlbStpEUn9Jcyllb1u8jePmITWLvC9pMVLnt6I3SW2ErUTEK6ROZMfka6xE6hjW4XhsSV+TtL6kOUntotNIVey1GCZpu/yheBDp5vrvNva7CVhW0s6SZpO0I6kK9YZqLiLp/yStmI+dh9TP4LlIPZkn5fK3+VrV6HLgp5IWyzf8X5U2RMTrpDHef5E0r6R+kpaStE5HJ83H3gycLmmBPB672CP6GlKb909JbfT1ei67S1o+3/B+WyjPDNIQsBMlfQEgP+dN8uO1gT1Iw9t2A07N79W2zEPq/DZF0nKk31FnynhgHsq7AGmq3c6o5u/u+4XX4PfAlVF5uPSlwM8kLZmHb/+J1F/lc1Iz0xaS1pQ0Rz5X8fNoHLC5pAXz6K2DCtseIgUhx0oamMu5Rt72JrB4PmelMu0haWj+2/0T8GCkKZXrbRywc34tNwU6fG93oNLnxEPAh5J+JWlAvt6KkkZ08XpmHeo1QURETCJ94P8m39y3Jn0Lm0SKtH9J2+X9HemG8T6ps91VZduPAY7M1XxtpZzdidSe+xqpo99vI+KfVRR5TlL/grdJVZpfILVD1uJa0jClyaR+D9tFxGflO+Wb/RbAL0hVsIeQ5nB/u3zfCuYmPcf3SB2vlgC2yuf+iPRt+b78Wq1a43MpOosUKEwgjY++ifRNtHTT+QGpI9iTpOd+JW00WVWwK+lb8NOkvikHlTZEmut+NLAkrd8PNYmIm0mB7h2kzoJ3lO3yq7z+37kZ4p/A1yTNS3pf/yQiXo003/85wHkVmpEOJk2S8yHp9RvViWKeRerDMJ7Ue79Tz73Kv7uLSLWGb5A6NB7YzinPzfvfTeoE+DF5YqCIeII0euQSUkAwmVQ9X7zOeFK/jdsovA45aNmS1B/l5XxcaZjfHaQ+P29IavV3kf+2f016f7xOGt3VqGRIP83lfI/UofaaLp6vzc+J/HpsQeoY/gLpM+ls0uinXkXSdKU5Hh6XdH07tYm1nPtsScvX63xWnVJPd+shSlOoLh0R3+/psjSa0sxxZ0REeZNMI671G2DZWeF17S5KWRb/ERFnd7SvWVskTSk180m6AHg2Io7u4DDrxXp6sinrwyQNIE0scxupk9dvSTUhjb7ugqRmqV0bfS2zvmr4tUe0SgX+yNZH1zMV+APkiaNygHpwRDwiaWHgkYgYImkF0nwwc5BqxLYn1RpfTuoT0h/4Q0SMKjvH30iJtQaQmtx+izVEr2nOsD5JpOamyaTmjKdIQ/sad0FpH1I1/M0RcXcjr2XWV+UAolUq8Ly+y5RyF21AmlulPfuR5g8aCgwnNV1tCrwWEStHSs19SxvHHRERw0lByjq5v5s1gGsieli0nXa2T8j9LLq1c1dEnEX68LM6i8K0xNbnNSIVOMAApTwTi5G+VNzewf4PkLJeLg5cFRH/UcpB8RdJ/wfckPsZlfuupH1J97hFSR3QJ3Sh3FaBayLMzKxcI1KBQ5qMayjNNRw/zus/p/l+1JRmOyIuIXX+ngbcJGn9SPkzViHNcvzH3P+piaQlSR2UN4iIlUgd7ttK3W110CtrIhZeeOEYMmRITxfDzGymMnbs2LcjYnDHe3boZVrPSVNa32UR8ZGkA0mT3Z1OGoUzjDRctSnVtqSvAv+NiFMkfQVYSdLTpMnm/pEn1tq77PTzkuYZeV/SIqQJ58bUo9zWWq8MIoYMGcIjjzzS08UwM5upSKpmltJqHE5qFiw2adQjFXiTiHhM0gTSMPvjgctzE8SNhd2+C+wq6TPSsOI/kZpI/yxpBmmY9/5l5x0v6THS8O9XSDPYWoP0yiGew4cPDwcRZmadI2ls7lDYZd0wOsP6AAcRZmZ9RD2DCLNquGOlmZmZ1cRBhJmZmdXEQYSZmZnVxEGEdcmIa07q6SKYVeT3p1ljOYgwMzOzmvTKeSLMzKzvkTSdNNNkyTYR8WIPFcfqwEM8rdPaqyJ+eJuDuq0cZm2Zld+fvX2IZzEVeBvbRLonzejmYlkXOIiwLhlxzUl9/oPZZl6z2vuznkHEiGtOajXZ1MPbHNSlyabKgwhJQ4BbgQdJ015vDhxKG2m8Jb0IXABsCcwOfCcinpY0CDiVlOUzgN9FxGhJG5OyCM8JPA/sERFTulJ+a819IszMrIUcQLRKBZ7Xd8UASePyz9V53TLA6RGxQkS8RPtpvN+OiFWAv5GSbAH8Gng/Ir6RE27dIWlh4Ehgw7z/I8DPu1h2a4P7RJiZWblGpQIvZfEEmmoiXoqIfxf2aS+N91X5/7HAdvnxhsD3SgdHxGRJW+Tj7kutJMxBSitudeYgwrpkVqoqtpmP3581a1Qq8LZMLT0opPEekYOB82mZxvuT/P902r9/Cbg9Inaqc1mtjJszzMysXKWU33VJBd6OttJ4d+R24MelBUkLAP8G1pC0dF43UNKyDSjvLM9BhJmZlTuclPq7qK6pwNsSEeOBUhrvS6gujfcfgQUkPS5pPLBeREwCdgcuzenGHwCWa0ypZ20enWFm1kf09tEZ1vc4iDAz6yN6+zwR1ve4OcPMzMxq4iDCzMzMauIgwszMzGriIMLMzMxq4iDCzMzMauIgwszMuoWkkPSPwvJskiZJuqEny2W1a1gQIenLku6U9KSkJyT9NK9fUNLtkv6T/1+gUWUwM7NeZSqwoqQBeXkj4NUeLE+HJDk9RDsaWRPxOfCLiFgeWBX4saTlSWle/xURywD/ystmZtaLjLzqvJ1HXnXeiyOvOm9G/r+rGTxLbgK+nR/vBFwKIKlf/nI5uLD8nKTBkraU9KCkxyT9M0+JjaSjJJ0raYyk/0o6MK8fIulpSedLelbSxZI2lHRfvsbIvN9ISQ/k894v6Wt5/e6SrpN0B+k+ZRU0LIiIiNcj4tH8+EPgKWAxYGtSTnjy/9s0qgxmZtZ5OWBolQq8ToHEZcD3JM1FSvf9IEBEzAD+AeyS99sQGJ+nsL4XWDUivpmPP6RwvuWATYCRwG8lzZ7XLw38JW9fDtgZWJOU4Ks0fffTwFr5vL8hzdBZsgqwQ0SsU4fn3Gd1SzVNTvf6TdKbZZGIeD1vegNYpHz/SZMmMXx486Rr++67L/vuu283lNTMzGhcKnAiYkK+J+xEqpUoOhe4FjgJ2BM4L69fHBglaVFSWu8XCsfcGBGfAJ9Ieovme8oLETERQNITpBrwkDQRGJL3mQ+4QNIyQACzF857e0S825XnOitoeBAhaRAwGjgoIj7Iud0ByL/QVvNuDx48GE97bWbWYxqdCvw64HhgXWCh0sqIeEXSm5LWJ9UslGolTgVOiIjrJK0LHFU41yeFx8UU4cX1MwrLMwr7/AG4MyK2zYHNmMIxU7EONXR0Rq5WGg1cHBFX5dVv5miS/P9bjSyDmZl1WqNTgZ8L/K5UU1DmbFKzxhURMT2vm4/mDpi71akM5efdvY7nnWU0cnSGgHOApyLihMKm62h+E+xGqroyM7Peo6GpwCPifxFxSoXN1wGDaG7KgFTzcIWkscDb9ShDdhxwjKTH6Kbm/b6mYVk8Ja0J3ANMJFUfQXoDPghcTqoWewn4bnm7k7N4mpl1Xj2zeOZOlC1SgT+03R4NTwUuaThwYkSs1ehrWdc5FbiZWR8xs6cCl3QosD+wS0Tc29PlsY55xkozM+sVIuLYiFjCAcTMw0GEmZmZ1cRBhJmZmdXEQYSZmZnVxEGEmZmZ1cRBhJmZdYtaU4HnhFinVdg2pd7ltOo5iDAzs+4y06UCt/Z5hi4zM2vlW6OvaDXZ1IPbf6cek02VUoFfSXMq8LUAJC1ImhL7q6QZMveNiAnFgyUtSUoCNojCjMd5luTjgM1IybT+GBGjJF0GXBQRN+b9zgduAB4BLgIG5lP8JCLur8Pzm6W4JsLMzFrIAUSrVOB5fVe1mQo8+x3wWESsRJrh+MI2jj8Z+FtEfAN4vbB+O2AosDIpjfifc36mUcB3ASTNAWwA3EjK27RRRKwC7AhUmobb2uEgwszMyrWXCrxLcs3CENpOBb4mqXaAiLgDWEjSvGX7rEGqvaC0b+HYSyNiekS8CdwFjABuBtaTNCepluLuiJhGSvt9Vk4NfgWwfFef26zIzRlmZlauR1KBd0LV+Roi4mNJY4BNSDUOl+VNPwPeJNVc9AM+rqEcszzXRJiZWbmeSgV+D7ALgKR1gbcj4oOyfe4Dvpcf71J27I6S+ksaDKwNPJS3jQL2IPW9uCWvmw94PSJmALsC/bv4nGZJDiLMzKxcT6UCPwoYJmkCcCywWxv7/BT4cW6GWKyw/mpgAjAeuAM4JCLeyNtuA9YB/hkRn+Z1pwO7SRoPLEcaOWKd5CyeZmZ9RD2zeDZwdIb1Ie4TYWZmreSAwUGDtcvNGWZmZlYTBxFmZmZWEwcRZmZmVhMHEWZmZlYTBxFmZmZWEwcRZmbWLcrTdreX4ruGc58vaYd6nMuq5yDCzMxmOZI8xUEdtPsiSuoPPBERy3VTeczMrBdY9cpbWk029e8dNm3YvBGShpCmw14YmATsEREv59TdHwDDgS+SZqK8Mqf+PhXYCHgF+LRwrheB4RHxtqThwPERsa6ko4ClSKnGX5Z0GG2kAy9k/5yXdJ/cPyLuadRzn5m1WxMREdOBZyTVK+mKmZn1cjmAaJUKPK/vigGSxpV+gN8Xtp0KXJDTgF9My9Tci5KydG5Bmg4bYFvga6Tsmz8AVq+yDMsDG0bETlROB74zcGtEDCUl6BrXiec4S6mmOmcB4AlJD1GYWzwitmpYqczMrCe1lwq8K7UR0/KNGUh9Ikg1DACrAdvlxxcBxxWOuyYnynpS0iJ53drk1N/Aa5LuqLIM1+VU4JDSgZ8maSgwHVg2r38YOFfS7Pna46o89yynmiDi1w0vhZmZ9SaNTgXeWZ8UHquK/T+nuaZ9rrJtxURbbaYDj4i7Ja0NfBs4X9IJEXFhLQXv6zrsWBkRdwEvArPnxw8Djza4XGZm1nManQq8LffTMsV3R30Q7qY59feiwHqFbS8Cw/Lj7ds5R5vpwCUtAbwZEWcBZwOrdOJ5zFI6DCIk7QNcCfw9r1oMuKaBZTIzs57V0FTgFRwA7JHTgO9KSvndnquB/wBPAhcCDxS2/Q44WdIjpGaKSiqlA18XGC/pMVJfiZM791RmHR2mAs+dX0YCD0bEN/O6iRHxjUYVyqnAzcw6r56pwLt7dIbNnKrpE/FJRHyaRtM0ja1tP/IwM7OZWg4YHDRYu6qZbOouSYeThuZsBFwBXN/YYpmZmVlvV00QcShp4o+JwA+Bm4AjG1koMzMz6/06bM6IiBmSLgAeJDVjPBMddaQwMzOzPq/DIELSt4EzgOdJ43OXlPTDiLi50YUzMzOz3quajpV/AdaLiOcAJC0F3Ag4iDAzM5uFVdMn4sNSAJH9F/iwQeUxM7M+StL0nDdjvKRHJbWb70LSEEmP58fDJZ3Swf77SfpBPcts7atYEyGpNIf5I5JuAi4n9Yn4DmnWynZJOpeULOWtiFgxrzsK2IfUURPg8Ii4qebSm5nZzKQpd4akTYBjgHWqOTAiHgHanUAoIs7oagGtc9prztiy8PhNmn/Rk4ABVZz7fOA00kxiRSdGxPHVFtDMzLrfapff32qyqQe+u3o9542YF5gMkNN6HwdsRvqy+seIGFXcWdK6wMHAVqQa8aER8V7e9h9Sls/9gSkRcXyebXlfYA7gOWDXiCifhdO6qGIQERF7dOXEOYHJkK6cw8zMul8OIM6iOZPnEsBZq11+P10MJAbkWZDnIqX3Xj+v3w4YSkqEtTDwsKS72zpBHjF4LSkV+HmSvgW8FBFvliZFzK7KuS+Q9EdgL1K6caujanJnLCnpBElXSbqu9NOFa/5E0gRJ50paoK0dJk2axPDhw5t+zjzzzC5czszMOqm9VOBdMS0ihkbEcsCmwIW5FmJNclrviHgTuAsY0c55RpFyWkBK2jWqjX1WlHSPpImkhF4rdLHs1oZqRmdcA5xDmqVyRhev9zfgD6Tqqj+QRn7sWb7T4MGDce4MM7Me0/BU4BHxgKSFgcE1HP4AsLSkwcA2wB/b2Od8YJuIGC9pd1JSLauzaoKIjyOi3R6x1coRJgCSzgJuqMd5zcysrl4mNWG0tb4uJC1HSr39Dint9w/zxIYLAmsDvyQ1e7QSESHpauAE4KmIeKeN3eYBXpc0O6km4tV6ld2aVRNEnCzpt8BtwCellRHxaGcvJmnRiHg9L24LPN7Zc5iZWcMdTss+EVCfVOClPhGQJi/cLSKm54BgNWA8qab6kIh4o4N+daNIIwV3r7D916SZlifl/+fpYtmtDdWkAj+GlNv9eZqbMyIi1q98FEi6lFR9tDBpdMdv8/JQ0pvkReCHhaCiiVOBm5l1Xj1TgXfD6AzrA6oJIp4Dlo+IT7unSA4izMxqUc8gwqwa1cxY+Tgwf4PLYWZmZjOZavpEzA88LelhWvaJ2KpRhTIzM7Per5og4rcNL4WZmZnNdDoMIiLiru4oiJmZmc1cOgwiJH1IGk0BaQ7y2YGpETFvIwtmZmZmvVuHHSsjYp6ImDcHDQOA7YHTG14yMzPrUyRNyf8PkbRzFfs3pQK33qma0RlNIrkG2KQxxTEzs1nAEKDDIMJ6v2qaM7YrLPYDhgMfN6xEZmbW49a49NlWk03dt9Oy9Zps6ljg63n2yguAq4GLgIF5+08i4v7iATmr54ERMS4v3wv8OCLG16lMVoNqRmdsWXj8OWmmya0bUhozM+txOYBolQp8jUufpU6BxKHAwRGxBYCkuYGNIuJjScsAl5K+sBadQ5ri+iBJywJzOYDoedWMztijOwpiZma9RnupwBsx9fXswGmShgLTgWXb2OcK4NeSfknK/nx+A8phnVRNc8ZgYB9SG1bT/hHRKoW3mZn1CQ1PBV7mZ6QcSyuTms1bNZlHxEeSbifVhH8XGNagslgnVNOccS0pTes/SRGimZn1bY1OBf4hLbNqzgf8LyJmSNqNlCK8LWcD1wP3RMTkOpXFuqCaIGLuiPhVw0tiZma9RaNSgZdMAKZLGk9qljgdGC3pB8AtwNS2DoqIsZI+AM6rUzmsi6rJ4vlH4P6IuKl7iuQsnmZmtahnFs8Gj86oiaQvAWOA5SJiRk+WxZJqgogPScNuPgE+A0SaMqJhM1Y6iDAz67y+nAo811IcDfw8Iq7o6fJYUs3ojHk62sfMzKyRIuJC4MKeLoe11KkZK83MzMxKHESYmZlZTRxEmJmZWU2qGeKJpP7AIrScbKpe44XNzMxsJtRhTYSkA0gzid0O3Jh/bmhwuczMrA9pK623pKMkHdzBccMlnZIfrytp9Rqu/aKkhStsGyopJG3a2fN2dO7CPrtLmiRpXOFn+U5cY788OqUz5arpteqsamoifgp8LSLeaXRhzMzMiiLiEaA05n9dYApwf8UDOm8n4N78/y3lGyWJNB1CV+elGBURP6nlwIg4o631kmaLiM8rHLYu9X+tWqkmiHgFeL+RhTAzs97l2xdMbTXZ1I27DWzYZFOSxgAPAusB8wN7RcQ9ktYFDgZ+AuxHmuny+8ABwNPAGTTn9DgoIu6TtBApE+hiwAOk+Y3auqaA7wAbAfdImitnEh0C3JrLMwzYXNKhwAhgAHBlRPy2cKpDJG0GTAN2jojnqnzO6wK/A94DvgFcDkwkfXkfAGwTEc9LOgqYEhHH59dpHLAmcKmkZ4EjgTmAd4Bd8rHVvlbrACfndQGsHREfVlN+qC6I+C8wRtKNpAmn0pUiTqj2ImZmNvPIAUSrVODfvmAqjQwkgNkiYqSkzYHfAhuWNkTEi5LOIN9MASRdApwYEfdK+grpxv/1fOy9EfF7Sd8G9qpwvdWBF/KNegzwbWB03rYMsFtE/Dtf64iIeDf3EfyXpJUiYkLe9/2I+EZucjgJ2KKNa+0oac3C8mr5/5Vzmd8l3W/Pzq/BT0k3/4PaONccpUnFJC0ArBoRIWlv4JCI+EUnXquDgR/ngGIQbSQ/a081QcTL+WeO/GNmZn1bI1KBV5oeubj+qvz/WFLm6I5sCCyfKhQAmDffCNcGtgOIiBslVUrWtRNwWX58GfADmoOIl0oBRPZdSfuS7puLAsuTcoBAqvUo/X9ihWu1as7I5X44Il7Py88Dt+XNE0m1Mm2eq/B4cWCUpEVJ9+gXKhxT6bW6DzhB0sXAVRHxvwrHt6maGSt/B5AvRkRM6cwFzMxsptOIVODvAAuUrVuQlje9Um33dKr7ktuP9C28xbfnwo2yolyjsD2wtaQjSE0eC0kqzdI8tbDvkqRv7CMiYrKk84G5CqeLCo+r8Unh8YzC8gwqvwbFBGWnAidExHW5eeSoCse0+VoBx+aWhs2B+yRtEhFPV1v4akZnrCjpMeAJ4AlJYyWtUO0FzMxsplNpCH/NQ/vzF9DXJa0PIGlBYFNSp8ZqlacQv41U5U8+59D88G5g57xuM1oHLwAbABMi4ssRMSQiliDVQmzbxr7zkm7c70taBNisbPuOhf8f6MTzqYf5gFfz490K66t6rSQtFRETI+L/gIeB5Tpz8WommzqTlPBkifwi/4LUVmZmZn3T4aTU30X1SAX+A+DXksYBdwC/i4jnO3H89cC2eYjkWsCBwHBJEyQ9SepMCKmz4tqSniA1a7QV/OwEXF22bnRe30JEjAceI3VOvITUBFC0gKQJpA6RP6tQ9h3LhnjWa/jlUcAVksYCbxfWV/taHSTp8Vz+z4CbO3PxarJ4jo+IlTtaV0/O4mlm1nn1zOLZ3aMzbOZU1egMSb8GLsrL3yf1IDUzsz4qBwwOGqxd1TRn7AkMJvWavSo/3rORhTIzM7Per5rRGZNJbSlmZmZmTSoGEZJOioiDJF1PG0NWImKrhpbMzMzMerX2aiJKfSCO746CmJmZ2cylYhAREWPzw6ERcXJxW56O865GFszMzMx6t2o6Vu7Wxrrd61wOm4W99fthPXv9o1freCcz6zJJnvG4j2mvT8ROpBm/lpR0XWHTPKREIe2SdC4pCclbEbFiXrcgac7vIcCLwHdzx02znjP9054ugdksq4N01tbLtdcn4n7gdWBh4C+F9R/SnHSkPecDpwEXFtYdCvwrIo7NaVUPBX7VmQKbmVnjHXt668mmDv1RfSabyjke/gBMJk2zvKyka4Avk3JSnBwRZ+Z9p5BSVW9BSrW9dUS8WY9yWNdVM2PlV4HXSkk7JA0AFomIFzs8ecrJfkOhJuIZYN2IeD1nHBsTEV8rP84zVvZ97TVhfOE3Yytuq9v1j16t7RqI/nPwhSO6e+p7s/qo14yVOYAopgKHNO31Pl0JJCRNiYhBOYi4EVgxIl7I2xbMqbYHkHI4rBMR70gKYKuIuF7SccAHEfHHWstg9VXNjJWXk3Kul0wHrgBG1HC9RUopT4E3gEXa2mnSpEkMH978d7Dvvvuy77771nA5662KgcJbvx/WLYFDi+sXAoWeuL5ZL9eIVODlHioFENmBkkrJr74MLEPK/PkpcENePxbYqE7XtzqoJoiYLSKavrJFxKeS5ujqhSMicoTZyuDBg3FNhJlZj2lEKvByxVTb6wIbAqtFxEeSxtCcavuzaK4yrzZFuHWTakZnTJLUNLGUpK1pmSmsM97MzRjk/9+q8Txm9dO/yzGxWV9T91TgHZgPmJwDiOWAVRt0HauzaoKI/YDDJb0s6RVSR8gf1ni962geMrobcG2N57E+pKebEtwHwqyVRqUCr+QWYDZJTwHHAv9u0HWszjrsWNm0ozQIICKqGucr6VJgXdLojjeB3wLXkPpYfAV4iTTEs9VwUXesNDPrvHqmAm/k6AzrO6oZnfGbttZHxO8bUiIcRJiZ1aKeQYRZNarpoDK18Hgu0ljdpxpTHDMzM5tZdNgnIiL+Uvg5mtRE8dWGl8zMbCa29uhbazpuvzvdHcBmHtV0rCw3N7B4vQtiZtaXfFplf7NyE955r74FMWugDpszJE0ESn8N/YHBQMP6Q5iZmdnMoZqOlUsUFj8H3mx0shR3rDSzmdHao29tswZiDom7t9+k4nH73fnvphqIGTRXEa+00PycsV71Uya4Y6V1t4pBRM64WVFbQzPrxUGEmc3sVr3yFv69w6adPm71K2/h/hqOg94fREhaBDiRNJnUZNKU1sdFxNUNvObZwAkR8WSjrjEra685YyypGUOkccKT8+P5SWOGl2x04czMrG+QJNJcQRdExM553RLAVu0dV8V5200lHhF7d+X81r6KHSsjYsmI+CrwT2DLiFg4IhYiDfG8rbsKaGY2M5pDqum4lRaav74FqdHo46buPPq4qS+OPm7qjPz/zl085frApxFxRmlFRLwUEadK6i/pz5IeljRB0g8hBR55/eOSJkraMa9fV9I9kq4DnpTUT9Lpkp6WdLukmyTtkPcdI2l4fvw3SY9IekLS77r4fIzqRmesGhE3lRYi4mZaZvU0M7My7fWBaE9n+kA0Sg4YzgKWINVALwGc1cVAYgXg0Qrb9gLej4gRpAzR+0haEtgOGAqsTErQ9edS/iVgFeCnEbFs3m8IsDywK7BahesckZt7VgLWkbRSF56PUV0Q8ZqkIyUNyT9HAK81umBmZjOzVa+8paeL0BXtpQKvC0l/lTRe0sPAxsAPJI0DHgQWIqUCXxO4NCKmR8SbwF2kIANaphJfE7giImZExBvAnRUu+11JjwKPkYKa5ev1fGZV1QQRO5GGdV6df76Q15mZWd/UiFTgT5BqDwCIiB8DG5DuLwIOiIih+WfJiOio2XxqB9tbyDUbBwMbRMRKwI00pxu3GlUzY+W7EfFTYG1grYj4aSNHZpiZWY9rRCrwO4C5JO1fWFeq7bgV2F/S7ACSlpU0ELgH2DH3mRhMug891Ma57wO2z30jFiHNrFxuXlLg8X7eZ7MuPBfLqpls6hvAhcCCefltYLeIeLzBZTMzm6mUN2EUl2sZ7tmDDif1iSg2aXQpFXhEhKRtgBMlHQJMIt3UfwVcQerT8GgexTEJ2IZU+70aMJ40WvCQiHhD0nJlpx9NqtV4EniF1Pfi/bLrj5f0GPB03ue+Wp+LNatmsqn7SZ1R7szL6wJ/ioiGda70PBFmNrOrdZ6IrqjnPBG5E2WLVODbH9J7U4FLGhQRUyQtRKqtWCP3j7AGqiaL58BSAAEQEWNyNZOZmfVROWDotUFDG26QND8wB/AHBxDdo5qOlf+V9OvC6Iwjgf82umA2cxhxzUk9XQSzivz+nHVExLq5U+byEXF+T5dnVlFNELEnqffsVaR2p4XzOjMzq2Am6wNhVpN2mzMk9Qeuioj1uqk8ZmZmNpNoN4iIiOmSZkiaLyLeb29fm3WUVxEXlx/e5qBuLYtZOb8/zbpPNR0rpwATJd1OYXKPiDiwYaWyXq34QTzimpP8wWy9it+fZt2nmiDiqvxjZmZWs1pSgUu6Cdg5It7rlkJap3QYRETEBZLmAJYjTfbxTER82vCSmZlZn1FrKvCI2LzxpbNaVTPZ1ObA34HnSfObLwn8MGfzbAhPNmVm1nn1nGxq7BGtJ5sadnTtk01J2gD4TUSs08a23YHhEfGTvHwDcHyel+hFYDgwCLgZuJeUSfpVYOuImCZpKeCvpJGEHwH7RMTTkrYEjiTNHfEOsEtO5GV1Us0QzxOA9fIY3HWA9UjVUWZmVmer9YLsnzmAaJUKPK+vVXupwKu1DPDXiFgBeA/YPq8/k5TAaxgpydbpef29wKoR8U3gMuCQLl7fylTTJ+LDiHiusPxf4MMGlcfMbJbWft1wt2kvFXhdZrGU9FdSCu9PSbUI1XghIsblx2OBIZIGkWomrkgtJgDMmf9fHBglaVFSbcQLWF1VE0Q8kju2XE56f38HeFjSdgAR4U6XZmZ9S6NSgZdqDoiIH0taGHgE+JyWNeOVUnR/Ung8HRiQj3svIoa2sf+pwAkRcV3O+3RUjWW3CqoJIuYC3gRK7ViTSL+4LUlBhYMIM7MuWO3KW1rUQJSyfwp4oGdmvnyZ1ITR1vpa3QH8SdL+EfG3vK5U2/Ei8CNJ/YDFgJHVnjQiPpD0gqTvRMQVuQPnShExHpiP1HcCYLculN0qqGZ0xh7dURAzs1lVMVDoieyfbejuVOD3kZoangSeovN9J3YB/pZzO81O6v8wnlTzcIWkyaQgZslay29tq2Z0xrLA34BFImJFSSsBW0XEHxtVKI/OMLNZVVeCiN48OsP6pmqaM84Cfkka5klETJB0CdCwIMLMbFaljnfpFjlgcNBg7apmiOfcEfFQ2brPG1EYM7NZXQ/1gTCrSTVBxNt5Io8AkLQD8HpDS2VmZma9XjXNGT8mTeSxnKRXSZ1fdmloqczMzKzXq2Z0xn+BDSUNJNVcfAR8D3ipwWUzMzOzXqxic4akeSUdJuk0SRuRgofdgOeA73ZXAc3MzKx3aq9PxEXA14CJwD7AnaTZKreNiK27oWxmZtbHSDpC0hOSJkgaJ+lbPVye83NfP6tBe80ZX42IbwBIOpvUmfIrEfFxVy+as7J9SJq29PN6jWs2M7PeS9JqwBbAKhHxSZ72eo4eLpZ1QXtBxGelBxExXdL/6hFAFKwXEW/X8XxmZlYnk/dsPdnUAud2ebKpRYG3I+ITgNI9QNIwUsboQcDbwO4R8bqkMcCDpOzR8wN7RcQ9kvoDxwLrkpJt/TUi/p6nzT4NWB94hXQfOzcirpT0G1K6hgHA/cAPo6PZFq1D7TVnrCzpg/zzIbBS6bGkD7qrgGZmvcnYa/bu6SI0XA4gWqUCz+u74jbgy5KelXS6pHUkzU5KlLVDTuV9LnB04ZjZImIkcBDw27xuL+D9iBgBjAD2kbQksB0wBFge2BVYrXCe0yJiRESsSAoktujiczHaqYmIiP4NvG4At0kK4O8RcWYDr2VmVjcfvDm+p4vQHRqSCjwipuRah7VItQujSLMfrwjcnlN596flXESlJI9jSQECwMakL7alvgzzAcuQUotfEREzgDck3Vk4z3o5Z8fcwIKkrKLX1/pcLKlmnohGWDMiXpX0BdIb5+mIuLu0cdKkSQwf3txNYt9992XfffftiXKamc2KGpEKHEjN48AYYIykiaS5iJ6IiNUqHFJK/z2d5nuWgAMi4tbijpI2b+sEkuYCTgeGR8Qrko6icrpx64QeCSIi4tX8/1uSrialfW0KIgYPHowTcJlZT1nj0me5b6dlm5bHXrN3cw1EzODOv48AYN5FVmbYNmf3RBEbrRGpwJH0NWBGRPwnrxpKytq5saTVIuKB3LyxbEQ80c6pbgX2l3RHRHyWE0W+SsoGupukC4DBpD4Tl9AcMLwtaRCwA3BlV56LJd0eRJQmrYqID/PjjYHfd3c5zMyqVQwU7vz7CNb74cM9WJpuUfdU4Nkg4FRJ85NyMD0H7EuaFfkUSfOR7ksnkZobKjmb1LTxqFIbyCRgG2A0sAEppfgrpJTi70fEe5LOAh4H3gD6/C+wu/RETcQiwNW57Ws24JKIuKUHymFmZm1Y4NyBl0zecyrUeXRGRIwFVm9j09vA2m3sv27h8dvkPhG5z8PhtBHUSDo4971YCHiINNcREXEkcGQb19i988/ESro9iMjTaK/c3dc1M2vPGpc+W3G52LQx7yKzxsdXDhhmxlTgN+SajjmAP0TEGz1cnj5NvXGY7PDhw8N9Isw6Nuz67Rm75eieLkafU94nYmYhaawn77PuVE0qcDMzM7NWHESYWZ814pqTKm5b84r7u68gZn1UT80TYWY1Gnb99hWX3bRRventtOTOjE0ZZj3BNRHWJe190+vL1+5JY7cc3fTT1rI10+dL9di1V73Sg86s73NNhJn1KcXgsh9fa7E852cjW9RArHZ5atLoL7j3O22NPLR6kjQlIgblx5uT5oPYKCJeqvN1tgKWj4hjJW0DPBsRT9bzGpY4iDCzPuXhbQ5qevytK29usVy02uX388B3HTj0BEkbAKcAm9Q7gACIiOuA6/LiNsANpAmorM4cRFinlTcjFJcrfWD3hWvbzGHkldej/NEmxLeuvBmA4HMe2mHLhl67vAmjuPzvHTZt6LXr7aO9/tMqFfjc5yzT5XkjJK1Nmg1z84h4XtIQ4IacXRNJB5NmtjwduDkihklaGRgHLBERL0t6HvgGaXbKI0lzQrwD7BIRb0raHRhOmudiK2AdSUcC20fE8119DtbMQYR1WvFmPeKak7r15t2T1+4t6tGxsi/PL1EMFL515c08uMNm3XbtYqCw6pW3zHSBQ0kOIIrTXi8BnPXRXv+hi4HEnMA1wLoR8XR7O+bcSnNJmpeU9fMRYC1J9wJvRcRH+fGqERGS9gYOAX5ROMf9kq4jBSnOldEADiLMernyG37xcV8OBqxHNSQVOPAZcD+wF/DTKva/H1iDNCX2n4BNSRk878nbFwdGSVqUVBvxQhfKZjXw6Awz67OCz3u6CDOrRqUCnwF8FxgpqZT34nNa3ouKKbrvJtVCLAFcS0qZsCbNQcSpwGkR8Q3ghzi9d7dzTYR1SU82J7R37dHHTWX7QwbW9XpjLvmIdXdu/nJ2y1lT2XSf+l6jkWbF+SXK+0Csfvn9FKeHKI3OEHB/HTpZ9qE+EQ1JBQ6QmyG+Ddwj6U3gQuALOWHWFGALoPTC3QMcDdwdETMkvQtsDhyWt89HSgEOsFuFS34IzNPVclvbHESYVemdV1vOTjR1cuOu1d4Nv7192wsG3AzSMlBoxOiMvtIngsalAgcgIt6VtCmppmES8HtSxs1XgacL+72YU33fnVfdCyweEaW/vqOAKyRNBu4AlmzjcpcBZ0k6ENjBHSvry0GEWS9U7Q1/Vg0GKrn9uc/YaOnZe7oYM725z1nmko/2+g/UeXRGaY6I/PgVWt70T6lwzJcLj/+Uy1RavpbUzFF+zPnA+fnxfcDyXSm3VeYgwvqM0cdNrbhca9PGmEs+aq6BiMrXGLgA3da0UWuzxKzQnPGv5z5vEUQUs3H+6eHnOHzE0m0ed+MLb/HtJb/Q5nGzqhwwzIypwK0bOYiwPqMYKNSrT0SxD8ToP09l+1/W/xptqfaG35maiEY3Zwy/9gge2froup6znte583/vVA4iXmwZRNTDTNyUYVY1BxHW60w74DIGnPq9bjuuN3L/herd/txn/Ou5NApj4pszOPSWaQBssHTLj7cpn02veI5nJ0+tuM3MKnMQ0UtN3nMqC5xb32+5k380lQVOn3lGE/Q2Cy2mFssDF+ihgjTIyKvO46Ht9qhq333vuokz19kcgO1vHc3oTSp3/Gy0jZaevakJ49BbpnHP5FcAuOfhtH2NS5/Jey7YNBqjpLi8xqVPk8ZpKC8/27RtVm/aMKvEQcSs5OPuvdxbvx/GF34ztsP9OtP+XO2+5c0M7R33wXW/Z96tftPhOYtNG9DYPhDVNmfUWkPR1ZqNCe+8BaSmBU1fiuHXHtG0XNJWk0NnApWi4nk7uk7x95x+718DWo/GKC6vdvn93LfTcmXHOXAw60ifDCImnDiMlX7W8c3riTM2YoX9bu+GEvV+x4xahcN2fLTHrj/tgMsqLrfXRFHrcUWfPPUvqCKI6E4zS3PGI1sfzcirzuPhrY+urq9ClE+CWP11Stq7TnkTBkSL2obS44Gz9YMI1riiUBORH6+00Dyk2ZmTcy5ahb127bm/DbPerE8GEdWaPu3dni5CC5P3nFpxudamjck/mtqiBqLpnHPRq5o2ijf8zvRtqPW4ovj4o04f01eMvOq8ist33f5VBvxtnablfe+6qakGYgbRYt+RV52HWKqKpg21s63rWg/vVIvahmJNxFqX/ZN7vrMhkCahuq+QCrzYlGH1I2k6MJH0RpgO/CQi7m9n/yEUknPVeM2mtOC1nsMqm6WDiN6mGCjUq09EMVB4d8+pLFjnfhbl3vr9sDaX+784hoXObZ40rvxDurj8z7Jztrdve1XO7R1388DLUg0EgGYw6f/SzXLOr29QVdNGufZ+X3eeMYz19uu4ZqyoUcMxrz/vI7bcY+6m2o1i08ImF77OrT9YtGl52u13NT0+5OaPOHOzzZuWV73qfP693e5AcxPF8GuPYPQmbTdhNBvYvDxjBg/tsFfNz6Uanw64CWj7PbL7Z4cAqYZBZbGNmzIaZlpEDAWQtAlwDLBOu0dUQdJsEdHmHOdlacGtzvpMEDHhxGEVl4tNG0+csVGLGojSfv0HLDjLNW0cM2qVisu1Nm0U+0AU+0SU17K0brduXp52/6NV7ZvSgFf+sG/vGvCbpiaMt343gsG/SjfMb42+ggfbeX4zuwUnVB6h0D9SkFcKeqIwQfRTk6LSYU0qNTEoBkFE8526NN9QzKiy1C3t/8HNpJmQq9Fc7oGz9eOci5rf4+fMfiLk5cGz/RRoroko7le+PKs0bUzb/65WqcAH/G2des4bMS8wGUDSINKkUQsAswNH5omkAPpLOov0C3oV2DoipkkaQ0oPviZwqaRnaScteET8RNL5wAekNOFfBA5xds+u6TNBRDFQaK9PRDFQqLbvRF/xUT9YsLBcDBR6tE9EtLxB1T5Ms/qb0se/2hNm5P0Hwce/3D09/tbmFY8pN23cdQwYulUnyle9zvaJ+PhXezLX/53b5etO2/8uvsVfmLb/XQgxbf8UXF0G8IPmL4wrLdQ8p8KXB87b7jkf3P47TYHJyNGX89D23wVKN+Ydu1zm9sw2rTkN+D+3W5VSzQPA2aPuawoIyutDioFCeZ+IWaHTZQ4gWqUCn7b/XXQxkBggaRwpUdaiwPp5/cfAthHxgaSFgX/nFN4AywA7RcQ+ki4Htgf+kbfNERHDASQtQDtpwQsWJQUey5FqKBxEdEGfCSKsbd++oFADsBZQWL5xt8Y2bfR/cUyLGoiKfTyi42+5JZtNXrSdrc110seePpVDf1T5+RVvuB8duSFz/fn8tDD6iqrL8vEp6/ExbT+/cSPXbrHvnWc014x1tmmjKjMqB1DXn/cRgycG02M6y7/fn/t+9gGncB6/f3Ys9w6ej9niiyj/22HV4RDBl+YVJ9/+CDuuNjydPqDfhen5fX2wWjRtnH3FprBJ29c+48Zt2O/b1zSviJbf6it9w+9KUJtqqJLZ2azFck8mjJvJNCoVeLE5YzXgQkkrkv54/yRpbdK3gcWARfIxL0TEuPx4LDCkcL5RhcfVpgW/JiJmAE9KWqTCPlalWTqI6D9gwY536kaN6FhZDBS+fcHUhgcORS8v+C5Dpi2cFqYBA9LDOYb3b7Hfv8ZeB7ssRzX6oxY3heLju6n8edDeN8fNVt6nRfDwrcLjB7f/TuXCrPMLFtjtTKB1n4j1aA4UaukTUU+/n/8MWDtlWr71ur05aJ1zCQKhppvqnWcM4/i57uKtec8kJFL3yW/yxjxngsTg9/fi+h8092lp0Ym1Qvxy5xnDmTz/jKYA6s4zhqGFDkktDJ3sX9m55oUZEIULlIJUBWtecT/TSzGr1DRao7/g3kLHSmtYKvAmEfFArnUYTMrMORgYFhGfSXqR5rTenxQOm07TJwkAxQ/NU4ETIuI6SeuSknO1pXi+xvb0nQXM0kFEb+sD0YiOle1pRJ+IYsfK8V8+mcXe3w6A2V68iwX/2pR7h49/flzT478O2ZsfF5bnOuGQiucv3vhGXHMSd//rCzR/DohpB1wKwAEIaG4WGfenqQw9vPn1/PTyc5gx8REA7vp4GsyVPpf+N+mPLH3GQhWvP23cdXw8/gYAXnj2CLhg37zlhIrHdFWpKaO8+aRFkwyw9+hVOO3fK0G/fsz1f+cy9oipDDt6ICvzD87eJv0+371uCg9vcxDDrt+eRwpNJOvtN5bjL5jKw9v9nOHXHM7D2/yJqbfdycPb/gyAb1/wfsXylfpOlA+9XG+/R/j3qFVYb7+xzf0sRo9irx+kspQ3E9x25TZsvMM1bV7j9UlHc+TPU9PElL2eYdA5X6tYnjmmbdFy+eNvNz3e4/Pm98TZc5zK3p8eUNiz7ff8Xrs+WnPn3plYw1KBl0haDuhP6r8wH/BWDiDWq3DtjlSTFtzqbJYOImZ1tfSJ+Pjnx7V7k3/ju/9m4tOpk/Qbr83g9pXuBWCzF8u+rvZ/sqkJ4bO/Tmn3nH/++1SmF/oDHnt6+vKxNbsz4NT5m9Z/dMBlnPL1dJNdago8f3rzl5SNymY1nuO7e8F3U0v46ldcxvR+qXbk5hvn5Fujr+Cb76/IhPme4P7td2g6JuXK2KrpRv78EVOaayLuanmBp+78PZNeSKM/Hpwxhv7npv4Eg5fcgKXeHMEJ767dorll76tX4extH231uOjj8Te0CCKKTTIf/3J36EdzswzNN/df33o1714/panJYvKeU7mdC5j8r6kscFIqw5gzV2P+2c/hzjN2hS9uwp1nDONb/IUxZ67Guvs+QHl1Q0RzTVnpnLdxGJOvn8pzi8zgnys19584ZtQqMD88c+M2wM5N6++acUqLvghjP3uZsYVAthjUrv/62U2P1cGXx+JNffVLn+H+nYoBR9t9IjrSfifdPqlRqcBLfSIgRf+7RcR0SRcD10uaCDxCIR14JxxFx2nBrc76TBBR7eiMWVl3NGWstNzsrLRcGqt/7F+nsMs26Rv+5Otqz03wyx82l/vY06dw6I9SjcaIa07iSA5qsW/pxnzlcalPROnb8dgjWl6/qSMlMH3kZq36ZXzpk0V5jMdrLvPX1/sNX18vjf64//QprL1n83DJj39+HCy9dpvH3fdS65FoP79xQ074dhr4Wno+H+31H+Y+Z5mK19/76lXYj7vZ++pV+FNcwSFbpusdd/3dLHjuIH44ehX+vn3zDfTgweuC/sEv2QQkfvnFTbh7fFqf6mtmbzGRlwRzDbweSJUhA//6vaay9TtiKoft+ChjzlyNB+b9hFXfyzf9916BwTQFJu/wjRZl7kfbLSNzz9l+s+OLEz9jyDec/rueBvxtnUtyp9q6js6IiP4V1r8NrFbhsBUL+x1feLxu2TmqSQu+e9m2QeX7W+f0mSCi2tEZM4tHDp+DjXq6EFVor5/Flk/D5L0LHQ/z4/5Li7O+8mc+K9UUSE21C3PMDj9vZzrp4q3+4W0OajoO4ACaaymWJhj3p6mcMfUwxj6U1pUCif4DYWjhG/ste75GqgnNyzduTgAHzLt56gdeMO5PU5meL7nk6+Ldpm/jhT4ss8ECZ1YXsF30r73YdYNzmpbve/n6FtunjbuODz55l8kX7MtnL42F+TZh8gX7MicHAylYADh5yl+AX/DwER8ixH7cjRD7P3IPAz9/jf0eubvpG/zYI6ayD3cz9tHU3AHwyLbHpOvtf1dTfwmAu2/bhI9uG8PliEtWb25y2umhX7LeOv0JwZ03fpORoy+nHyszYvRl/I0tUkCx7wM8MGoVfjX4EEpNTkIcstDPYPTlLMxmqW9DAAHLFmqbNrrvUk5a4b+s/3rq5zL03XmYutezTef4aK//NO370oaLVwwigpbB4ZqX38v0Un8JidVG3QdAfwX3fnfNCr+l2txy1tSapkZvZHbYzsgBg1OBW7v6TBDR1/zruc/bmH2vZxT7L7RaXvnHLbb94+qPePWN9MEdX1fT1AB7PwwDF8j7vgM/fqf5mJOGnMZBr6Ybab+VlgU2o7KWN4WfcTLx4nMAXP/lU1jmw1InOvH8bBDzpdvXkPdpumGWu2PZQelrMLDe03DHcoUrHTe1tAmA52ejKd4I4KX5mo8rTuRVDG5AHHv6lOaiL/UjAI45fQpwMn965kNYtDkggJaPESyw25lMvmBfkFhgtzP56O50Ey01e0y7bQwA/1uquRnhy8/fzRnD1ubkG0dxxvC1IeC4G+7mzFXWZmz/TTni3Vt4ObeIHL1Qqo0Zw0b0Q4VAQk3P9aoZ9wAw/1ywE9ez8NRv55v06/z10c0LPVPEGQ+l4G1D7uKwo+dp6hOx0UUvM1ekPiczgKtnjIEIvhAT2ZIDC09ZTX0gAKbs9SyDzklNCFP3epaB5zQ3J7xzfMtapmJnWwbAiGtuaVp8+LsHNT1ebdR9PLDjGjTK1Mm1HbfJM6+RRjWa9X6zdBDRmRqLp8/bluX2uLrBJWqsCSeNZKWDHmpaPvmaDfnok+aJt0pt0HPPuSA/3aZ53shif4VWfSIuaPkB/u570aJloPi42F5/7GkfQr/m2/NJi++dTwCHlpX72MtHEFH6mnp3Uzml/hz6o4eb9nv+r1M49MeDGH7tERz6zGEc+7Vjmrad8dBhFXMuvDvHJ8w1o7npd1ou1icDYe/9mwODK4+byqAFqrs5FPs7HHv6VA567vQW209a6kf87PnTOWnkKNZe7bf891FYduFhPPt2ej/212xMzxPwjWMThl9zOGPu/gV3IaZe9yxCTd/Mg6DfHOm8N86f/v/TrVcw8PPXOfnGUQg4+fpRed+3OObGu/Pjw/jVluswV/+BPLJVel2m3X4XMaO5JkI58pmBGP1M6pfQb6Vl+Qy44uE3yDuxwvtv8uFnHzP/qgsz8bmBDD861RJffMc+/GT0xrDwr9IImLnTTD8AC03ZlBt3K80xsSZXnwvb7pmCoqn3tezIKJpHZHyPy7jo70cwR54DYrYZ3+SuS1P67yVWnK3FMM4R15w00w3r9HABm5n0ySCiEU0Zn75Xt07JFd3+3Gf867l045j45gwOvSV9MG6w9Gz1qZWI6S0Wi4FCZ8blf7sscCgurzWt7WPeGAjFMQ8HvXRAU1BxbL75V7L5iF8z8YVUzf/yO/CVwam/yzeW3LLFfjMUHDNqldwCcRjbf3wzo+fclO0/uQVxeMUZFX8w4Gzm3P+wVM69p7LrwQM58eyp/Gzv1jUXxerpB49ornaevG/1fT5Gff2f8NmPOGnkKELBPQ/+HmaDRT+dQenW+fdtmoO9va9ehbO3eZRpQ65jrZcebOoT0W+O12mu3hCn3JZGiATBbd/6Dos/fxf/W2odNr5vFN9dZ1EC+Mdd4vvrRNN+k/ptBgHDrz4MJO6asREq1ESUzt4fuPjrF6SFz+A7H13KbIUeDDFtOoOYnc/ufRe+OJDjL003/M/6wXdmpL/HuabDhQMO5YdTjwXBVWzc4nXZ6L5L+ei+/+Rn07LJApqHck4Z8wy7/rD5dzn6uKmss1PzqL8WNRFly/t9eGHzhjlOrftMlLecNbVFkDn6uPS+GLhA+1lfS/sBbFq23BuaNswq6ZNBxMxqo6VnbwoWDr1lGsduOqCDI3pGtXNPdDThU0m089VrjYufZov316I0sZ0QLz99IgAvP/0ZK/2oed+fPnUjp349VbkHoHfuYXuCfmqZRnqNS59ukfb5tlif585OH9qLLwv/O3sqn30GN935MY889SlzkPqCLQUt+m4sMR98K5+jvT4QBzx1fZrIN9vxqQ056avBQQ/tyEkjR/H8HOlWfdcHjzXts/fVqyDEWduOTTURhdTXw689grvYjbU3va0pMJq2/xgO3PjnjOtXagLYDBY6FmJTNqa8Eai1Up8ItoHh1xzOI9v8iY/2H8Pcf1sXgG0veImrCzfZ9x+6hLlPTSMtpu71Hwaes2xzTc8RUzh4p7TvxXfswy7rn9XUnHHh6Mubhng+c3PLxGd3rLM3W/0g/f4+2us/zOAzlD+iWta8TOfyP79Ev9wsItR0051jbnj4Jwc1nbN1TUTz486Mzqh2iOfU99o+vtL6ks2eea2dZTdtWO81ywURnRnF8fR527aogSjtO8f8X5lpmjYmnDSyRQ1E0/NV/xZNGx31gC+Z64RD2OaiqXxW6EZfqomYvR9cs2t135raGorYJonDfrRA0+Ixp0/hsB8111r85aTb+fe8QwG4ABg710f5nAPY+FW1mNeo1LHyJBbj84fvYfojafjpRi88w8ZfTcMAz57zAH62d/P5j37j5aabRHlQdMtZ1dU+iJZNQmtc/DT37TIPcAhcfjlnbftI07bi8M7SjWrtOR5uPTrjuv+0qlnpR/+WKbNzMPDWzc+3aJwo1TSU7w8w8pqTgMGMuOYk7mIoI65OARvzzGDEVWrKf3EXX2z6hj+GzRl7xFT+zuGMfWgqQow9YipBsCx/YeS758DgH8Poc4GBjBx9biHjVXMCsFIAUTLonOWbHhf7QZTPL3HlcVPY4ZDm31l7NRGzfTqyeUNhsimgRYbPctUO8dz+l83vj850kCyOtElBmQMHmznMckFEZ0ZxFAOF7h7xscHS9fnVFAOF9p5DsWmjI8VAoVgTkW56nR8/f+MCr3M483S8Yxt+/OrF/PjViwGYwaZc9NQvAThxydNadKQsTbwEsMYlz3DfiLWYbcRaAHzyt2OamjM+Pbv6ZolVXl8bqOE9UUgZudhCK7ezYwquSgHEW38YCSulMTuth3eKM7d9mLbssfoXm85VSH/RppXiQsaxCStzK8HKrBwXNRXltPuaJ2qaQfMU0lOuf6rFa/3IEVOa+kRMeOE6Hlpyr0LujHN5aPs92y9EF1XbJ6LRHSutNUlTisMqi8mxeq5U1hWzXBAxs+gtIzO6or2mjPaqh5kxo/lGK7HGJc+kxxFsUTa1dXy8adNjFZYPfOoGijNWBtF8nuI5FdxRON/XlupfsWyb8MWKz6fc1AMuK4xWSBNhpXIAq32zab/i8M60b3G65rKTlvVpKRrwtzaig/wa3rjbQH5y3VqcttU9TUFfpU6mzZNcHcMITuSee5pfw08/W5zZCkM1P8qzg86YOxh7+OLpmYqmmohkA0YOOy/VRFx1HkgtUoMXU5EXzX3OMi1mP52Ti5uXy+YynNrvY6CG4f7l+b/b0Z0zVrpjZfdoL324Va9HgghJmwInk/prnR0Rx/ZEOTpjjvnrNmV8nzJ7v473aUu11cNrXPIM9+1ceYrjYsbPjw64jLkrZAAVajpP+Tk/f7h5foDN15uLzamubO3ZePXmDnu33/8oGxWWS+ctKZ7/yY8vbd4mtdjvaiqn225Lcd/Ttrqn4raKYkZTM8zHPz+OeU9tnm3yowMuZe5TdwJgwgnDGPbz5m3FWh8Arqq6yC1sueJPmuOoFR8A0pdVATfdOppXpuZxHl+Fv+ZrfHngvIzepGxyjzqo9v1a7BBZvlxL00ZPmnbAZa1TgZ/6vYbNG5HTdN9QSs1dqrUo5MF4mzTx1Fjg+zlb5+akOeenAvcBX42ILSSNJN1j5iJl7tkjIp7JNR/bkaLO/pJeAq6KiGvyNS8GLi+kIbcOdHsQIak/8FdgI+B/wMOSrouIJ7u7LJ1pnphZ+kCUa/RMnpNme5U1Lm1ersc3tLUufoIZym/NQq1Bv/ice3ZZocW+xevd3s71K80RATQ1a1Sj+O24fPkLv2l+Pa9f6WkmP3lDXlqf1ABQrJto2wX9juOj18cDsP8X/sHf3kg359mml11P/fnCrx9q6xRdUnx/rPyVYMKJ+Z6xGKzEIW3vq5b9hZqzNCfF2oaRV51Xsfah3IPF49ppBmnvnO0N72yvD0StioFCb5k0qhY5gGidCjwlXqtHKvCSBUnpuDvyTWAF4DVSsLCGpEeAvwNrR8QLkgqfRDwNrBURn0vakBQMlaLLVYCVIuJdSesAPwOukTQfsDrOu9EpPVETMRJ4LiL+CyDpMmBroNuDiFlBo2fybEROgWKg0FFNRIue8fc/Wt31VX3q8XLFQOGt3w9rsVy04ApbseAKKc/F1LsvazEapL3Xaekdm3NEcMkzrPTz6q5XrY6mPi++Pw4svF/KJxz7nGjaVv6+Kp9i3GZKDU8FDs19Iqo47qGI+F8+ZhwpHfgU4L8RUUr5fSlQyog3H3CBpGVIDYPF9uHbI+JdgIi4S9LpkgaTgozRbuLonBoro7tkMeCVwvL/8romkyZNYvjw4U0/Z555ZrcW0LpXvdqUNy5rMqh8verSjqd9u162jVcfWtuBUXuwU2/lCdKKTRvl2qv1qZXa6b/w5YHzVtzWCLNA8i3ohlTgbficfE+S1A+Yo7CtPB14R1+A/wDcGRErAlvSnFYcWqYPB7gQ+D5pqNC5WKf0yo6VgwcP5pFHHul4R+vz+vWBLwXXr/QsUH3gUnLBbMcDhZoJtZm7qMd1pr9QtU0Z5R5s57hG9IGoh5m1KSNreCrwNrwIDAMuB7aiZe1BW54BvippSES8COxY2FZMC757B+c5H3gIeKMnmtVndj1RE/Eq8OXC8uI0/7KtgRo9RLUR39DK+0B09/XbU23TQqlZo6TacrZo2oCG9IFoT7Xvl5m1v5C163BS6u+ieqQCb89ZwDqSxpMyerbbLhYR04AfAbdIGgt8CLyfNx8HHCPpMTr4shwRbwJPAee1t5+1TdHNVaaSZgOeBTYgBQ8PAztHxBOlfYYPHx6uiTAz6xxJYyOimj4GHeru0Rm1kDQoIqYotXf9FfhPRJzYyXPMDUwEVomI9zva31rq9uaM3Fv2J8CtpCGe5xYDCDMz63k5YOhVQUMb9pG0G6n/xGOk0RpVyyM3zgFOdABRm55oziAiboqIZSNiqYiofuB7J/XWDpm9sVy9sUzgcnVWbyxXbywTuFx9QUScGBFDI2L5iNglIsqbYDo6/p8RsUREnNSgIvZ5PRJEdJfe+sfYG8vVG8sELldn9cZy9cYygctlVg99OogwMzOzxun2jpXVkDQJeKkOp1qYNFVqb9Mby9UbywQuV2f1xnL1xjJB3yzXEhExuJ6FMWtPrwwizMzMrPdzc4aZmZnVxEGEmZmZ1cRBhJmZmdWkTwQRkr4s6U5JT0p6QtJP8/oFJd0u6T/5/wW6uVxzSXpI0vhcrt/l9UtKelDSc5JGSZqjo3M1qHz9JT0m6YbeUi5JL0qaKGlcTvXbG36P80u6UtLTkp6StFovKNPX8mtU+vlA0kE9Xa5ctp/l9/vjki7Nfwe94b3101ymJyQdlNd1++sl6VxJb0l6vLCuzXIoOSW/bhMkVZdlzqyb9IkggpT97RcRsTywKvBjScsDhwL/iohlgH/l5e70CbB+RKwMDAU2lbQq8H+kGdKWBiYDe3VzuUp+SpozvqS3lGu9PIFMafrenv49ngzcEhHLASuTXrMeLVNEPJNfo6GkpEUfAVf3dLkkLQYcCAzPGRT7A9+jh99bklYE9gFGkn6HW0hamp55vc4HNi1bV6kcmwHL5J99gb91Q/nMqhcRfe4HuBbYiJTlbdG8blHgmR4s09zAo8C3SMO3ZsvrVwNu7YHyLE76sFofuAFQLynXi8DCZet67PdIygb4AnkkU28oUxtl3Bi4rzeUC1gMeAVYkDSt/g3AJj393gK+A5xTWP41cEhPvV7AEODxjt5PpGmcd2prP//4pzf89JWaiCaShgDfBB4EFomI1/OmN4BFeqA8/SWNA94CbgeeB96LaMpx/T/SB293O4n0ITojLy/US8oVwG2SxkraN6/ryd/jksAk4Lzc9HO2pIE9XKZy3wMuzY97tFwR8SpwPClh0+ukrIpj6fn31uPAWpIWygmXNidlE+4tv8dK5SgFZSU99Xdp1qY+FURIGgSMBg6KiA+K2yIiSDeobhUR0yNVOS9OqkpdrrvLUE7SFsBbEdHY3OC1WTMiViFV4/5Y0trFjT3we5wNWAX4W0R8k5SeuEWVd0+9twBy34KtgCvKt/VEuXJb/tak4OtLwEBaV913u4h4itSkchtwCzAOmF62T4/9HntjOcyq0WeCCEmzkwKIiyPiqrz6TUmL5u2LkmoDekREvAfcSarKnV8pJTqk4OLVbi7OGsBWkl4ELiM1aZzcC8pV+iZLRLxFauMfSc/+Hv8H/C8iHszLV5KCit7y3toMeDQi3szLPV2uDYEXImJSRHwGXEV6v/WG99Y5ETEsItYm9ct4lp5/vUoqleNVUo1JSY+8dmaV9IkgQpJI6VyfiogTCpuuA3bLj3cj9ZXoznINljR/fjyA1E/jKVIwsUNPlSsiDouIxSNiCKkq/I6I2KWnyyVpoKR5So9Jbf2P04O/x4h4A3hF0tfyqg2AJ3uyTGV2orkpA3q+XC8Dq0qaO/9dll6vHn1vAUj6Qv7/K8B2pDTXPf16lVQqx3XAD/IojVWB9wvNHmY9r6c7ZdTjB1iTVP03gVRNOY7U5rkQqfPgf4B/Agt2c7lWIuW4n0C6Gf4mr/8q8BDwHKkaes4efO3WBW7oDeXK1x+ff54Ajsjre/r3OBR4JP8erwEW6Oky5XINBN4B5ius6w3l+h3wdH7PXwTM2dPvrVyue0gBzXhgg556vUhB3+vAZ6Sarr0qlYPU4fmvpL5UE0mjXrr1dfOPf9r7ce4MMzMzq0mfaM4wMzOz7ucgwszMzGriIMLMzMxq4iDCzMzMauIgwszMzGriIMJ6FUlH5CyLE3J2ym/l9Qfl6YorHXd2TrrWq0n6kqQrO3nM7pJOa1SZzMxqNVvHu5h1D0mrAVsAq0TEJ5IWBkopow8C/kHKVll+XP+I2LvbCtoFEfEazZMumZnN1FwTYb3JosDbEfEJQES8HRGvSTqQlIfhTkl3AkiaIukvksYDq0kaI2l4YdvRksZL+rekRfL6pfLyREl/lDSldGFJv5T0cK4B+V1eN0TSU5LOyrUjt+WZR5G0tKR/5ms8ms99oaRtCue8WNLWxSeYz/l4fry7pKsk3SLpP5KOK+y3h6RnJT1Emja6tH6wpNG5rA9LWiOvv1bSD/LjH0q6uF6/FDOzShxEWG9yG/DlfPM8XdI6ABFxCvAasF5ErJf3HQg8GBErR8S9ZecZCPw7IlYG7gb2yetPBk6OiG+QZgoEQNLGwDKkPB1DgWGFxF/LAH+NiBWA94Dt8/qL8/qVgdVJMxCeA+yezzlfXn9jB895KLAj8A1gR0lfzrkTfkcKHtYEis00JwMnRsSIXJaz8/p9gd9IWgv4BXBAB9c1M+syBxHWa0TEFGAY6YY4CRglafcKu08nJVxry6fADfnxWGBIfrwazdkuLynsv3H+eQx4lJRpdZm87YWIGFc8V87vsVhEXJ3L/XFEfBQRdwHLSBpMymkxOprTX1fyr4h4PyI+Jk3JvATwLWBMpCRWnwKjCvtvCJymlF7+OmBeSYMiJeD6DSlHxS8i4t0Ormtm1mXuE2G9SkRMB8YAYyRNJCUjOr+NXT/O+7bls2iez306Hb/PBRwTEX9vsVIaAnxSWDUdGNDBuS4Evk9KbLZHB/vSxvk7Kms/YNUcdJT7BimXxpequK6ZWZe5JsJ6DUlfk7RMYdVQ4KX8+ENgni5e4t80N0d8r7D+VmBPSYNyORYrZXxsS0R8CPyv1P9B0pyFkSPnkzqBEhFP1ljOB4F1JC2klOL+O4Vtt1FoqpA0NP8/kpQW/JvAwZKWrPHaZmZVcxBhvckg4AJJT0qaQOoLcFTediZwS6ljZY0OAn6ez7008D5ARNxGat54INd+XEnHAcuuwIH5XPcDX8znepOU7v28WgsZKdXzUcADwH35fCUHAsNzB9Angf0kzQmcBeyZR3/8Ajg3p+I2M2sYZ/G0WUauLZgWESHpe8BOEbF1R8fVcI2JpGGq79fz3GZmvY37RNisZBipU6JIIy32rOfJJW1IGqFxogMIM5sVuCbCzMzMauI+EWZmZlYTBxFmZmZWEwcRZmZmVhMHEWZmZlYTBxFmZmZWk/8HLmNgz3k6uVIAAAAASUVORK5CYII=\n",
       "text": [
        "<Figure size 432x288 with 1 Axes>"
       ]
      }
     ],
     "prompt_number": 22
    }
   ],
   "metadata": {}
  }
 ]
}
