{
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3.8.2 64-bit ('.venv': venv)",
   "name": "python_defaultSpec_1597669925034"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.8.2-final"
  },
  "name": ""
 },
 "nbformat": 3,
 "nbformat_minor": 0,
 "worksheets": [
  {
   "cells": [
    {
     "cell_type": "markdown",
     "metadata": {},
     "source": [
      "# Usage (details: policy measures)\n",
      "Here, we will analyse the relationship of policy measures and parameter values of SIR-derived ODE models. Policy measures are tracked by [Oxford Covid-19 Government Response Tracker (OxCGRT)](https://github.com/OxCGRT/covid-policy-tracker)."
     ]
    },
    {
     "cell_type": "heading",
     "level": 2,
     "metadata": {},
     "source": [
      "Preparation"
     ]
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "# Standard users\n",
      "# !pip install covsirphy\n",
      "# Developers (Note: this notebook is in example directory)\n",
      "import os\n",
      "os.chdir(\"../\")"
     ],
     "language": "python",
     "metadata": {},
     "outputs": [],
     "prompt_number": 1
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "from pprint import pprint"
     ],
     "language": "python",
     "metadata": {},
     "outputs": [],
     "prompt_number": 2
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "import covsirphy as cs\n",
      "cs.__version__"
     ],
     "language": "python",
     "metadata": {},
     "outputs": [
      {
       "output_type": "pyout",
       "prompt_number": 3,
       "text": [
        "'2.9.1-beta.fix.282.283'"
       ]
      }
     ],
     "prompt_number": 3
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "# Standard users and developers\n",
      "data_loader = cs.DataLoader(\"input\")\n",
      "# The number of cases (JHU style)\n",
      "jhu_data = data_loader.jhu(verbose=False)\n",
      "# Population in each country\n",
      "population_data = data_loader.population(verbose=False)\n",
      "# Government Response Tracker (OxCGRT)\n",
      "oxcgrt_data = data_loader.oxcgrt(verbose=False)\n",
      "# Description/citation\n",
      "print(oxcgrt_data.citation)"
     ],
     "language": "python",
     "metadata": {
      "tags": []
     },
     "outputs": [
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "(Secondary source) Guidotti, E., Ardia, D., (2020), \"COVID-19 Data Hub\", Journal of Open Source Software 5(51):2376, doi: 10.21105/joss.02376.\n",
        "We can get Citation list of primary sources with DataLoader(...).covid19dh_citation\n"
       ]
      }
     ],
     "prompt_number": 4
    },
    {
     "cell_type": "markdown",
     "metadata": {},
     "source": [
      "## Class for policy measure analysis\n",
      "We will `PolicyMeasures` class to find relationship of policy measures and parameter values of SIR-derived ODE models."
     ]
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "# Create analyser with tau value 360 [min] (can be changed)\n",
      "analyser = cs.PolicyMeasures(jhu_data, population_data, oxcgrt_data, tau=360)\n",
      "# The number of registerd countries\n",
      "len(analyser.countries)"
     ],
     "language": "python",
     "metadata": {
      "tags": []
     },
     "outputs": [
      {
       "output_type": "pyout",
       "prompt_number": 5,
       "text": [
        "184"
       ]
      }
     ],
     "prompt_number": 5
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "# We can get Scenario instance for detailed scenario analysis\n",
      "type(analyser.scenario(\"Japan\"))"
     ],
     "language": "python",
     "metadata": {},
     "outputs": [
      {
       "output_type": "pyout",
       "prompt_number": 6,
       "text": [
        "covsirphy.analysis.scenario.Scenario"
       ]
      }
     ],
     "prompt_number": 6
    },
    {
     "cell_type": "markdown",
     "metadata": {},
     "source": [
      "## Set phases with S-R trend analysis\n",
      "We will perform S-R trend analysis to set phases in all countries. Countries which do not have **12th phases** will be un-registered for the next analysis. This number will be adjusted for your analysis."
     ]
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "# Show the number of phases of all countries\n",
      "analyser.trend()\n",
      "pprint(analyser.phase_len(), compact=True)"
     ],
     "language": "python",
     "metadata": {},
     "outputs": [
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "{4: ['Holy See', 'Tanzania', 'Georgia'],\n",
        " 5: ['Czech Republic', 'Grenada', 'Myanmar', 'Fiji', 'Brunei', 'Slovenia',\n",
        "     'Liechtenstein'],\n",
        " 6: ['Jordan', 'Ireland', 'Antigua and Barbuda', 'Papua New Guinea', 'Hungary',\n",
        "     'Slovakia', 'Cambodia', 'Poland', 'Andorra', 'Tunisia', 'Yemen',\n",
        "     'Botswana', 'Seychelles', 'Lithuania'],\n",
        " 7: ['Zimbabwe', 'Spain', 'Australia', 'Paraguay', 'Mauritius', 'Angola',\n",
        "     'Montenegro', 'Libya', 'Bahamas', 'Trinidad and Tobago', 'Jamaica',\n",
        "     'Malaysia', 'Belize', 'Sao Tome and Principe', 'Cyprus', 'Iceland',\n",
        "     'Central African Republic', 'Guinea-Bissau', 'Equatorial Guinea',\n",
        "     'Lebanon', 'Mongolia', 'Croatia', 'Gambia', 'Dominica'],\n",
        " 8: ['Burundi', 'Kazakhstan', 'Rwanda', 'Lesotho', 'Thailand', 'Niger', 'Malta',\n",
        "     'Saint Vincent and the Grenadines', 'Comoros', 'Zambia', 'Djibouti',\n",
        "     'Malawi', 'Uganda', 'Madagascar', 'Monaco', 'Guyana', 'Sri Lanka',\n",
        "     'Romania', 'New Zealand', 'South Sudan', 'Ukraine', 'Nepal', 'Israel',\n",
        "     'Switzerland', 'Nicaragua', 'Namibia', 'Saint Lucia'],\n",
        " 9: ['Burkina Faso', 'Suriname', 'Vietnam', 'Estonia', 'Bermuda', 'Mauritania',\n",
        "     'Austria', 'Maldives', 'Kyrgyzstan', 'Qatar', 'Chad', 'Barbados', 'Haiti',\n",
        "     'Eritrea', 'Greece', 'Morocco', 'China', 'Ghana', 'Serbia', 'Taiwan',\n",
        "     'Afghanistan', 'Mozambique', 'Luxembourg', 'Uruguay', 'Cameroon', 'Benin',\n",
        "     'South Africa', 'Denmark', 'Sudan', 'Kenya', 'Tajikistan'],\n",
        " 10: ['San Marino', 'Philippines', 'Korea, South', 'Germany', 'Portugal',\n",
        "      'Bulgaria', 'Venezuela', 'Finland', 'Senegal', 'Ecuador', 'Sierra Leone',\n",
        "      'Bhutan', 'Liberia', 'Gabon', 'Kosovo', 'Chile', 'Ethiopia',\n",
        "      'El Salvador', 'North Macedonia', 'Japan', 'Oman', 'Swaziland', 'India',\n",
        "      'Cape Verde', 'Argentina', 'Singapore', 'Norway'],\n",
        " 11: ['Mexico', 'Belgium', 'Mali', 'Bosnia and Herzegovina', 'Guatemala',\n",
        "      'Syria', 'Palestine', 'Guinea', 'Armenia', 'Congo', 'Azerbaijan',\n",
        "      'Costa Rica', 'Indonesia', 'Albania', 'Uzbekistan', 'Cuba', 'Algeria',\n",
        "      'Belarus', 'Latvia', 'Saudi Arabia', 'Somalia', 'Pakistan', 'Panama',\n",
        "      'Moldova'],\n",
        " 12: ['Nigeria', 'Peru', 'Kuwait', 'France', 'Canada', 'Bangladesh', 'Egypt',\n",
        "      'United States', 'Turkey', 'Iran', 'Togo', 'Brazil', 'Dominican Republic',\n",
        "      'Italy', 'Bolivia', 'United Arab Emirates', 'Colombia', 'Bahrain',\n",
        "      'Iraq'],\n",
        " 13: ['Honduras', 'Russia']}\n"
       ]
      }
     ],
     "prompt_number": 7
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "# Set phases with S-R trend analysis\n",
      "analyser.trend(min_len=12)\n",
      "# The number of countries\n",
      "len(analyser.countries)"
     ],
     "language": "python",
     "metadata": {},
     "outputs": [
      {
       "output_type": "pyout",
       "prompt_number": 8,
       "text": [
        "21"
       ]
      }
     ],
     "prompt_number": 8
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "phase_len_dict = analyser.phase_len()\n",
      "pprint(phase_len_dict, compact=True)"
     ],
     "language": "python",
     "metadata": {
      "tags": []
     },
     "outputs": [
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "{12: ['Nigeria', 'Peru', 'Kuwait', 'France', 'Canada', 'Bangladesh', 'Egypt',\n",
        "      'United States', 'Turkey', 'Iran', 'Togo', 'Brazil', 'Dominican Republic',\n",
        "      'Italy', 'Bolivia', 'United Arab Emirates', 'Colombia', 'Bahrain',\n",
        "      'Iraq'],\n",
        " 13: ['Honduras', 'Russia']}\n"
       ]
      }
     ],
     "prompt_number": 9
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "# Here, only show the countries which have the most phases\n",
      "countries_show = max(phase_len_dict.items(), key=lambda x: x[0])[1]\n",
      "# Show summary\n",
      "analyser.summary(countries=countries_show)"
     ],
     "language": "python",
     "metadata": {
      "tags": []
     },
     "outputs": [
      {
       "html": [
        "<div>\n",
        "<style scoped>\n",
        "    .dataframe tbody tr th:only-of-type {\n",
        "        vertical-align: middle;\n",
        "    }\n",
        "\n",
        "    .dataframe tbody tr th {\n",
        "        vertical-align: top;\n",
        "    }\n",
        "\n",
        "    .dataframe thead th {\n",
        "        text-align: right;\n",
        "    }\n",
        "</style>\n",
        "<table border=\"1\" class=\"dataframe\">\n",
        "  <thead>\n",
        "    <tr style=\"text-align: right;\">\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th>Type</th>\n",
        "      <th>Start</th>\n",
        "      <th>End</th>\n",
        "      <th>Population</th>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>Country</th>\n",
        "      <th>Phase</th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "    </tr>\n",
        "  </thead>\n",
        "  <tbody>\n",
        "    <tr>\n",
        "      <th rowspan=\"13\" valign=\"top\">Honduras</th>\n",
        "      <th>0th</th>\n",
        "      <td>Past</td>\n",
        "      <td>28Mar2020</td>\n",
        "      <td>16Jun2020</td>\n",
        "      <td>9587522</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>1st</th>\n",
        "      <td>Past</td>\n",
        "      <td>17Jun2020</td>\n",
        "      <td>03Jul2020</td>\n",
        "      <td>9587522</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>2nd</th>\n",
        "      <td>Past</td>\n",
        "      <td>04Jul2020</td>\n",
        "      <td>17Jul2020</td>\n",
        "      <td>9587522</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>3rd</th>\n",
        "      <td>Past</td>\n",
        "      <td>18Jul2020</td>\n",
        "      <td>25Jul2020</td>\n",
        "      <td>9587522</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>4th</th>\n",
        "      <td>Past</td>\n",
        "      <td>26Jul2020</td>\n",
        "      <td>05Aug2020</td>\n",
        "      <td>9587522</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>5th</th>\n",
        "      <td>Past</td>\n",
        "      <td>06Aug2020</td>\n",
        "      <td>20Aug2020</td>\n",
        "      <td>9587522</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>6th</th>\n",
        "      <td>Past</td>\n",
        "      <td>21Aug2020</td>\n",
        "      <td>30Aug2020</td>\n",
        "      <td>9587522</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>7th</th>\n",
        "      <td>Past</td>\n",
        "      <td>31Aug2020</td>\n",
        "      <td>11Sep2020</td>\n",
        "      <td>9587522</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>8th</th>\n",
        "      <td>Past</td>\n",
        "      <td>12Sep2020</td>\n",
        "      <td>19Sep2020</td>\n",
        "      <td>9587522</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>9th</th>\n",
        "      <td>Past</td>\n",
        "      <td>20Sep2020</td>\n",
        "      <td>29Sep2020</td>\n",
        "      <td>9587522</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>10th</th>\n",
        "      <td>Past</td>\n",
        "      <td>30Sep2020</td>\n",
        "      <td>08Oct2020</td>\n",
        "      <td>9587522</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>11th</th>\n",
        "      <td>Past</td>\n",
        "      <td>09Oct2020</td>\n",
        "      <td>17Oct2020</td>\n",
        "      <td>9587522</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>12th</th>\n",
        "      <td>Past</td>\n",
        "      <td>18Oct2020</td>\n",
        "      <td>30Oct2020</td>\n",
        "      <td>9587522</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th rowspan=\"13\" valign=\"top\">Russia</th>\n",
        "      <th>0th</th>\n",
        "      <td>Past</td>\n",
        "      <td>12Feb2020</td>\n",
        "      <td>07May2020</td>\n",
        "      <td>330457362</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>1st</th>\n",
        "      <td>Past</td>\n",
        "      <td>08May2020</td>\n",
        "      <td>19May2020</td>\n",
        "      <td>330457362</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>2nd</th>\n",
        "      <td>Past</td>\n",
        "      <td>20May2020</td>\n",
        "      <td>30May2020</td>\n",
        "      <td>330457362</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>3rd</th>\n",
        "      <td>Past</td>\n",
        "      <td>31May2020</td>\n",
        "      <td>11Jun2020</td>\n",
        "      <td>330457362</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>4th</th>\n",
        "      <td>Past</td>\n",
        "      <td>12Jun2020</td>\n",
        "      <td>26Jun2020</td>\n",
        "      <td>330457362</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>5th</th>\n",
        "      <td>Past</td>\n",
        "      <td>27Jun2020</td>\n",
        "      <td>10Jul2020</td>\n",
        "      <td>330457362</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>6th</th>\n",
        "      <td>Past</td>\n",
        "      <td>11Jul2020</td>\n",
        "      <td>26Jul2020</td>\n",
        "      <td>330457362</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>7th</th>\n",
        "      <td>Past</td>\n",
        "      <td>27Jul2020</td>\n",
        "      <td>14Aug2020</td>\n",
        "      <td>330457362</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>8th</th>\n",
        "      <td>Past</td>\n",
        "      <td>15Aug2020</td>\n",
        "      <td>04Sep2020</td>\n",
        "      <td>330457362</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>9th</th>\n",
        "      <td>Past</td>\n",
        "      <td>05Sep2020</td>\n",
        "      <td>24Sep2020</td>\n",
        "      <td>330457362</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>10th</th>\n",
        "      <td>Past</td>\n",
        "      <td>25Sep2020</td>\n",
        "      <td>07Oct2020</td>\n",
        "      <td>330457362</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>11th</th>\n",
        "      <td>Past</td>\n",
        "      <td>08Oct2020</td>\n",
        "      <td>16Oct2020</td>\n",
        "      <td>330457362</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>12th</th>\n",
        "      <td>Past</td>\n",
        "      <td>17Oct2020</td>\n",
        "      <td>30Oct2020</td>\n",
        "      <td>330457362</td>\n",
        "    </tr>\n",
        "  </tbody>\n",
        "</table>\n",
        "</div>"
       ],
       "output_type": "pyout",
       "prompt_number": 10,
       "text": [
        "                Type      Start        End  Population\n",
        "Country  Phase                                        \n",
        "Honduras 0th    Past  28Mar2020  16Jun2020     9587522\n",
        "         1st    Past  17Jun2020  03Jul2020     9587522\n",
        "         2nd    Past  04Jul2020  17Jul2020     9587522\n",
        "         3rd    Past  18Jul2020  25Jul2020     9587522\n",
        "         4th    Past  26Jul2020  05Aug2020     9587522\n",
        "         5th    Past  06Aug2020  20Aug2020     9587522\n",
        "         6th    Past  21Aug2020  30Aug2020     9587522\n",
        "         7th    Past  31Aug2020  11Sep2020     9587522\n",
        "         8th    Past  12Sep2020  19Sep2020     9587522\n",
        "         9th    Past  20Sep2020  29Sep2020     9587522\n",
        "         10th   Past  30Sep2020  08Oct2020     9587522\n",
        "         11th   Past  09Oct2020  17Oct2020     9587522\n",
        "         12th   Past  18Oct2020  30Oct2020     9587522\n",
        "Russia   0th    Past  12Feb2020  07May2020   330457362\n",
        "         1st    Past  08May2020  19May2020   330457362\n",
        "         2nd    Past  20May2020  30May2020   330457362\n",
        "         3rd    Past  31May2020  11Jun2020   330457362\n",
        "         4th    Past  12Jun2020  26Jun2020   330457362\n",
        "         5th    Past  27Jun2020  10Jul2020   330457362\n",
        "         6th    Past  11Jul2020  26Jul2020   330457362\n",
        "         7th    Past  27Jul2020  14Aug2020   330457362\n",
        "         8th    Past  15Aug2020  04Sep2020   330457362\n",
        "         9th    Past  05Sep2020  24Sep2020   330457362\n",
        "         10th   Past  25Sep2020  07Oct2020   330457362\n",
        "         11th   Past  08Oct2020  16Oct2020   330457362\n",
        "         12th   Past  17Oct2020  30Oct2020   330457362"
       ]
      }
     ],
     "prompt_number": 10
    },
    {
     "cell_type": "markdown",
     "metadata": {},
     "source": [
      "## Parameter estimation\n",
      "we will estimate the parameter values with SIR-derived ODE models in each country."
     ]
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "# Parameter estimation with SIR-F model\n",
      "analyser.estimate(cs.SIRF)"
     ],
     "language": "python",
     "metadata": {
      "tags": []
     },
     "outputs": [
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n",
        "<SIR-F model: parameter estimation>\n",
        "Running optimization with 4 CPUs...\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tUSA,  5th phase (30Jul2020 - 11Aug2020): finished  327 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tBOL,  7th phase (11Aug2020 - 25Aug2020): finished 1453 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tPER,  3rd phase (18Jun2020 - 09Jul2020): finished 1441 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tPER,  2nd phase (30May2020 - 17Jun2020): finished 1469 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tIRN,  9th phase (24Sep2020 - 07Oct2020): finished  181 trials in 0 min  5 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tTGO,  5th phase (07Aug2020 - 20Aug2020): finished 1537 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tTUR,  6th phase (02Jul2020 - 26Jul2020): finished  614 trials in 0 min 20 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tARE,  1st phase (04May2020 - 19May2020): finished  242 trials in 0 min  5 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tUSA,  7th phase (27Aug2020 - 11Sep2020): finished  242 trials in 0 min  5 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tDOM,  0th phase (24Mar2020 - 23May2020): finished 1726 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tBRA,  0th phase (16Mar2020 - 29May2020): finished 1722 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tHND,  0th phase (28Mar2020 - 16Jun2020): finished 1720 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tITA,  6th phase (19May2020 - 23Jul2020): finished  592 trials in 0 min 15 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tTGO,  1st phase (10May2020 - 02Jun2020): finished 1832 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tHND,  7th phase (31Aug2020 - 11Sep2020): finished 1831 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tBRA,  8th phase (30Aug2020 - 10Sep2020): finished 1828 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tEGY, 10th phase (11Sep2020 - 29Sep2020): finished  231 trials in 0 min  5 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tTGO,  2nd phase (03Jun2020 - 23Jun2020): finished 1837 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tDOM,  4th phase (14Jul2020 - 23Jul2020): finished 1842 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tBHR,  0th phase (06Mar2020 - 06May2020): finished 1565 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tKWT,  2nd phase (28May2020 - 08Jun2020): finished 1561 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tEGY,  6th phase (14Jul2020 - 27Jul2020): finished 1480 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tNGA,  7th phase (28Jul2020 - 07Aug2020): finished 1436 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tBHR,  1st phase (07May2020 - 31May2020): finished 1473 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tNGA, 11th phase (30Sep2020 - 30Oct2020): finished 1494 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tEGY,  0th phase (28Feb2020 - 12May2020): finished 1484 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tIRN, 10th phase (08Oct2020 - 20Oct2020): finished  144 trials in 0 min  5 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tCAN,  8th phase (25Sep2020 - 04Oct2020): finished 1545 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tKWT,  4th phase (24Jun2020 - 07Jul2020): finished  406 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tCOL,  1st phase (03Jul2020 - 20Jul2020): finished 1405 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tTGO, 10th phase (12Oct2020 - 19Oct2020): finished 1505 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tIRQ,  0th phase (09Mar2020 - 25Jun2020): finished 1335 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tKWT,  5th phase (08Jul2020 - 22Jul2020): finished 1434 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tTUR,  4th phase (23May2020 - 14Jun2020): finished  175 trials in 0 min  5 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tBHR,  2nd phase (01Jun2020 - 13Jun2020): finished 1417 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tHND,  3rd phase (18Jul2020 - 25Jul2020): finished  195 trials in 0 min  5 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tCOL,  2nd phase (21Jul2020 - 31Jul2020): finished 1494 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tNGA,  5th phase (08Jul2020 - 17Jul2020): finished 1118 trials in 0 min 40 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tKWT,  6th phase (23Jul2020 - 08Aug2020): finished  478 trials in 0 min 15 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tBOL,  4th phase (16Jul2020 - 23Jul2020): finished  341 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tCAN,  1st phase (17Apr2020 - 24Apr2020): finished 1511 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tCAN,  9th phase (05Oct2020 - 13Oct2020): finished  882 trials in 0 min 30 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tBOL,  1st phase (14Jun2020 - 25Jun2020): finished 1461 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tPER,  8th phase (28Aug2020 - 09Sep2020): finished 1447 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tBGD,  7th phase (14Aug2020 - 25Aug2020): finished 1246 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tCOL,  6th phase (26Aug2020 - 02Sep2020): finished  231 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tTGO,  4th phase (23Jul2020 - 06Aug2020): finished 1168 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tBRA,  9th phase (11Sep2020 - 23Sep2020): finished  142 trials in 0 min  5 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tKWT,  3rd phase (09Jun2020 - 23Jun2020): finished 1166 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tRUS,  1st phase (08May2020 - 19May2020): finished 1191 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tIRQ,  6th phase (03Sep2020 - 11Sep2020): finished  140 trials in 0 min  5 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tBGD,  4th phase (08Jul2020 - 18Jul2020): finished  397 trials in 0 min 15 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tBHR,  4th phase (26Jun2020 - 07Jul2020): finished  279 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tCOL,  8th phase (14Sep2020 - 24Sep2020): finished 1309 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tKWT,  1st phase (14May2020 - 27May2020): finished 1285 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tEGY,  1st phase (13May2020 - 26May2020): finished 1286 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tEGY,  2nd phase (27May2020 - 04Jun2020): finished 1329 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tUSA,  4th phase (18Jul2020 - 29Jul2020): finished  291 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tDOM,  2nd phase (17Jun2020 - 02Jul2020): finished 1285 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tIRN,  7th phase (14Aug2020 - 06Sep2020): finished 1253 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tBGD,  5th phase (19Jul2020 - 30Jul2020): finished 1269 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tIRQ,  7th phase (12Sep2020 - 20Sep2020): finished  152 trials in 0 min  5 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tBGD, 10th phase (21Sep2020 - 09Oct2020): finished  260 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tBGD, 11th phase (10Oct2020 - 30Oct2020): finished  548 trials in 0 min 25 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tIRN,  0th phase (26Feb2020 - 31Mar2020): finished 1177 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tIRN,  6th phase (26Jul2020 - 13Aug2020): finished  254 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tITA,  7th phase (24Jul2020 - 02Sep2020): finished 1164 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tIRN,  2nd phase (07May2020 - 30May2020): finished 1144 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tCOL,  4th phase (10Aug2020 - 17Aug2020): finished 1164 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tRUS, 12th phase (17Oct2020 - 30Oct2020): finished 1151 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tARE,  3rd phase (02Jun2020 - 24Jun2020): finished 1152 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tIRQ,  8th phase (21Sep2020 - 28Sep2020): finished  227 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tDOM,  1st phase (24May2020 - 16Jun2020): finished 1083 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tPER, 11th phase (08Oct2020 - 30Oct2020): finished 1102 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tBRA,  1st phase (30May2020 - 21Jun2020): finished 1100 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tDOM,  7th phase (12Aug2020 - 20Aug2020): finished  348 trials in 0 min 15 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tBGD,  6th phase (31Jul2020 - 13Aug2020): finished 1138 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tBHR, 11th phase (09Oct2020 - 30Oct2020): finished  241 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tBOL,  3rd phase (06Jul2020 - 15Jul2020): finished 1149 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tITA,  5th phase (01May2020 - 18May2020): finished 1151 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tARE,  6th phase (19Aug2020 - 10Sep2020): finished 1140 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tRUS,  9th phase (05Sep2020 - 24Sep2020): finished 1166 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tIRQ,  1st phase (26Jun2020 - 14Jul2020): finished 1167 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tRUS,  6th phase (11Jul2020 - 26Jul2020): finished 1138 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tPER,  4th phase (10Jul2020 - 27Jul2020): finished 1163 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tKWT,  0th phase (08Mar2020 - 13May2020): finished  912 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tFRA,  5th phase (07Jul2020 - 05Aug2020): finished  244 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tCAN,  5th phase (21Jun2020 - 29Jul2020): finished 1137 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tBOL,  6th phase (01Aug2020 - 10Aug2020): finished  131 trials in 0 min  5 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tBOL, 11th phase (29Sep2020 - 30Oct2020): finished  647 trials in 0 min 30 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tCOL,  9th phase (25Sep2020 - 05Oct2020): finished 1162 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tBRA, 10th phase (24Sep2020 - 12Oct2020): finished 1168 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tCAN, 10th phase (14Oct2020 - 21Oct2020): finished  246 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tBOL,  0th phase (01Apr2020 - 13Jun2020): finished 1105 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tRUS,  7th phase (27Jul2020 - 14Aug2020): finished 1101 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tARE,  8th phase (24Sep2020 - 04Oct2020): finished  509 trials in 0 min 25 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tARE,  2nd phase (20May2020 - 01Jun2020): finished 1088 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tFRA,  1st phase (28Mar2020 - 04Apr2020): finished 1088 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tARE,  0th phase (12Feb2020 - 03May2020): finished 1044 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tCAN,  6th phase (30Jul2020 - 06Sep2020): finished 1072 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tBOL, 10th phase (13Sep2020 - 28Sep2020): finished  226 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tARE,  4th phase (25Jun2020 - 11Jul2020): finished  957 trials in 0 min 50 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tBGD,  1st phase (05Jun2020 - 19Jun2020): finished 1117 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tRUS, 11th phase (08Oct2020 - 16Oct2020): finished  743 trials in 0 min 35 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tIRQ, 10th phase (08Oct2020 - 18Oct2020): finished  252 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tIRQ,  5th phase (23Aug2020 - 02Sep2020): finished  137 trials in 0 min  5 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tBOL,  2nd phase (26Jun2020 - 05Jul2020): finished  259 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tHND,  5th phase (06Aug2020 - 20Aug2020): finished  481 trials in 0 min 20 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tFRA,  3rd phase (25Apr2020 - 26May2020): finished 1189 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tRUS,  2nd phase (20May2020 - 30May2020): finished 1212 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tCOL, 11th phase (19Oct2020 - 30Oct2020): finished 1165 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tFRA, 11th phase (16Oct2020 - 30Oct2020): finished 1124 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tPER,  1st phase (10May2020 - 29May2020): finished 1111 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tCAN,  3rd phase (07May2020 - 23May2020): finished 1102 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tCAN,  0th phase (26Mar2020 - 16Apr2020): finished 1052 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tIRN,  4th phase (18Jun2020 - 05Jul2020): finished  120 trials in 0 min  5 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tPER,  6th phase (08Aug2020 - 17Aug2020): finished 1053 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tDOM,  3rd phase (03Jul2020 - 13Jul2020): finished 1049 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tRUS,  4th phase (12Jun2020 - 26Jun2020): finished 1070 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tKWT, 11th phase (14Oct2020 - 30Oct2020): finished  566 trials in 0 min 25 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tTUR,  2nd phase (27Apr2020 - 06May2020): finished  261 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tHND,  1st phase (17Jun2020 - 03Jul2020): finished 1156 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tIRN,  5th phase (06Jul2020 - 25Jul2020): finished  248 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tHND, 11th phase (09Oct2020 - 17Oct2020): finished 1225 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tBHR,  8th phase (04Sep2020 - 14Sep2020): finished 1232 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tEGY,  8th phase (10Aug2020 - 27Aug2020): finished  264 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tCAN,  2nd phase (25Apr2020 - 06May2020): finished  260 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tTGO,  9th phase (29Sep2020 - 11Oct2020): finished 1226 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tPER,  7th phase (18Aug2020 - 27Aug2020): finished 1216 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tKWT,  7th phase (09Aug2020 - 24Aug2020): finished 1239 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tTUR,  1st phase (17Apr2020 - 26Apr2020): finished 1220 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tHND,  9th phase (20Sep2020 - 29Sep2020): finished  475 trials in 0 min 20 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tITA,  0th phase (24Feb2020 - 21Mar2020): finished 1200 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tPER,  9th phase (10Sep2020 - 21Sep2020): finished 1191 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tBHR,  7th phase (12Aug2020 - 03Sep2020): finished 1192 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tUSA,  9th phase (27Sep2020 - 09Oct2020): finished 1138 trials in 0 min 55 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tIRQ,  2nd phase (15Jul2020 - 29Jul2020): finished 1212 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tBRA,  3rd phase (07Jul2020 - 20Jul2020): finished  800 trials in 0 min 35 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tDOM,  9th phase (03Sep2020 - 17Sep2020): finished 1204 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tUSA,  8th phase (12Sep2020 - 26Sep2020): finished  591 trials in 0 min 25 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tCAN,  4th phase (24May2020 - 20Jun2020): finished 1220 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tCOL,  3rd phase (01Aug2020 - 09Aug2020): finished 1229 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tNGA,  0th phase (18Mar2020 - 21May2020): finished 1197 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tBHR,  9th phase (15Sep2020 - 25Sep2020): finished 1226 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tPER,  0th phase (16Mar2020 - 09May2020): finished 1178 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tTUR,  7th phase (27Jul2020 - 18Aug2020): finished 1211 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tFRA,  2nd phase (05Apr2020 - 24Apr2020): finished 1197 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tITA, 10th phase (07Oct2020 - 17Oct2020): finished 1223 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tNGA,  3rd phase (20Jun2020 - 28Jun2020): finished 1238 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tDOM,  6th phase (01Aug2020 - 11Aug2020): finished 1244 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tFRA,  4th phase (27May2020 - 06Jul2020): finished 1208 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tKWT,  8th phase (25Aug2020 - 07Sep2020): finished 1088 trials in 0 min 50 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tCOL,  7th phase (03Sep2020 - 13Sep2020): finished  248 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tNGA,  4th phase (29Jun2020 - 07Jul2020): finished  136 trials in 0 min  5 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tBRA,  6th phase (10Aug2020 - 19Aug2020): finished 1244 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tUSA,  1st phase (05May2020 - 14Jun2020): finished 1201 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tBGD,  8th phase (26Aug2020 - 05Sep2020): finished  261 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tTGO, 11th phase (20Oct2020 - 30Oct2020): finished  382 trials in 0 min 15 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tDOM, 11th phase (07Oct2020 - 30Oct2020): finished  946 trials in 0 min 45 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tITA,  1st phase (22Mar2020 - 29Mar2020): finished  274 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tIRQ,  4th phase (12Aug2020 - 22Aug2020): finished  585 trials in 0 min 25 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tHND, 12th phase (18Oct2020 - 30Oct2020): finished 1226 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tFRA,  7th phase (26Aug2020 - 09Sep2020): finished 1187 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tTUR,  8th phase (19Aug2020 - 07Sep2020): finished 1101 trials in 0 min 55 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tUSA, 11th phase (21Oct2020 - 30Oct2020): finished  487 trials in 0 min 20 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tCOL,  5th phase (18Aug2020 - 25Aug2020): finished  297 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tFRA,  0th phase (12Feb2020 - 27Mar2020): finished 1223 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tARE,  5th phase (12Jul2020 - 18Aug2020): finished 1234 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tBRA, 11th phase (13Oct2020 - 30Oct2020): finished 1457 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tITA,  8th phase (03Sep2020 - 23Sep2020): finished  358 trials in 0 min 15 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tTGO,  8th phase (16Sep2020 - 28Sep2020): finished  363 trials in 0 min 15 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tUSA,  6th phase (12Aug2020 - 26Aug2020): finished  238 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tEGY,  4th phase (19Jun2020 - 01Jul2020): finished  566 trials in 0 min 25 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tCOL,  0th phase (13Mar2020 - 02Jul2020): finished 1139 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tNGA,  8th phase (08Aug2020 - 18Aug2020): finished  368 trials in 0 min 15 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tNGA, 10th phase (04Sep2020 - 29Sep2020): finished 1177 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tKWT,  9th phase (08Sep2020 - 24Sep2020): finished 1192 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tBRA,  7th phase (20Aug2020 - 29Aug2020): finished 1189 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tRUS,  8th phase (15Aug2020 - 04Sep2020): finished 1170 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tFRA,  8th phase (10Sep2020 - 17Sep2020): finished  670 trials in 0 min 30 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tFRA,  9th phase (18Sep2020 - 02Oct2020): finished 1099 trials in 0 min 55 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tUSA,  3rd phase (06Jul2020 - 17Jul2020): finished  373 trials in 0 min 15 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tFRA, 10th phase (03Oct2020 - 15Oct2020): finished  469 trials in 0 min 20 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tITA,  4th phase (22Apr2020 - 30Apr2020): finished  235 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tIRQ,  9th phase (29Sep2020 - 07Oct2020): finished  258 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tDOM,  5th phase (24Jul2020 - 31Jul2020): finished 1188 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tNGA,  9th phase (19Aug2020 - 03Sep2020): finished  258 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tBHR,  6th phase (23Jul2020 - 11Aug2020): finished  264 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tUSA, 10th phase (10Oct2020 - 20Oct2020): finished  463 trials in 0 min 20 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tNGA,  6th phase (18Jul2020 - 27Jul2020): finished  367 trials in 0 min 15 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tBRA,  2nd phase (22Jun2020 - 06Jul2020): finished 1164 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tHND,  4th phase (26Jul2020 - 05Aug2020): finished 1172 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tBGD,  9th phase (06Sep2020 - 20Sep2020): finished  372 trials in 0 min 15 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tBOL,  8th phase (26Aug2020 - 03Sep2020): finished  264 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tHND, 10th phase (30Sep2020 - 08Oct2020): finished  374 trials in 0 min 15 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tCAN, 11th phase (22Oct2020 - 30Oct2020): finished  150 trials in 0 min  5 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tRUS,  5th phase (27Jun2020 - 10Jul2020): finished 1268 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tBRA,  5th phase (30Jul2020 - 09Aug2020): finished  507 trials in 0 min 15 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tRUS, 10th phase (25Sep2020 - 07Oct2020): finished 1297 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tHND,  6th phase (21Aug2020 - 30Aug2020): finished 1271 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tNGA,  2nd phase (09Jun2020 - 19Jun2020): finished  412 trials in 0 min 15 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tTGO,  0th phase (20Mar2020 - 09May2020): finished 1306 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tEGY,  9th phase (28Aug2020 - 10Sep2020): finished  255 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tEGY,  3rd phase (05Jun2020 - 18Jun2020): finished 1286 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tTGO,  3rd phase (24Jun2020 - 22Jul2020): finished 1253 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tTGO,  6th phase (21Aug2020 - 02Sep2020): finished 1351 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tFRA,  6th phase (06Aug2020 - 25Aug2020): finished  812 trials in 0 min 25 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tEGY,  5th phase (02Jul2020 - 13Jul2020): finished  347 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tBRA,  4th phase (21Jul2020 - 29Jul2020): finished 1637 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tUSA,  2nd phase (15Jun2020 - 05Jul2020): finished 1726 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tBHR, 10th phase (26Sep2020 - 08Oct2020): finished  184 trials in 0 min  5 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tBGD,  0th phase (16Mar2020 - 04Jun2020): finished 1687 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tHND,  8th phase (12Sep2020 - 19Sep2020): finished  604 trials in 0 min 15 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tBOL,  9th phase (04Sep2020 - 12Sep2020): finished 1753 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tTUR,  3rd phase (07May2020 - 22May2020): finished 1690 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tUSA,  0th phase (09Feb2020 - 04May2020): finished 1616 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tITA,  3rd phase (14Apr2020 - 21Apr2020): finished  733 trials in 0 min 20 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tCOL, 10th phase (06Oct2020 - 18Oct2020): finished 1660 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tEGY,  7th phase (28Jul2020 - 09Aug2020): finished  407 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tCAN,  7th phase (07Sep2020 - 24Sep2020): finished  687 trials in 0 min 20 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tRUS,  0th phase (12Feb2020 - 07May2020): finished 1696 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tTGO,  7th phase (03Sep2020 - 15Sep2020): finished 1530 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tKWT, 10th phase (25Sep2020 - 13Oct2020): finished  277 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tIRN,  3rd phase (31May2020 - 17Jun2020): finished  925 trials in 0 min 40 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tIRN,  8th phase (07Sep2020 - 23Sep2020): finished  144 trials in 0 min  5 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tNGA,  1st phase (22May2020 - 08Jun2020): finished 1316 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tTUR,  0th phase (24Mar2020 - 16Apr2020): finished 1395 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tITA,  2nd phase (30Mar2020 - 13Apr2020): finished 1388 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tRUS,  3rd phase (31May2020 - 11Jun2020): finished 1392 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tIRN,  1st phase (01Apr2020 - 06May2020): finished 1256 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tTUR,  5th phase (15Jun2020 - 01Jul2020): finished 1267 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tHND,  2nd phase (04Jul2020 - 17Jul2020): finished 1244 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tDOM, 10th phase (18Sep2020 - 06Oct2020): finished  327 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tPER, 10th phase (22Sep2020 - 07Oct2020): finished 1386 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tITA,  9th phase (24Sep2020 - 06Oct2020): finished  176 trials in 0 min  5 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "Completed optimization. Total: 44 min 28 sec\n"
       ]
      }
     ],
     "prompt_number": 11
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "# Show summary\n",
      "analyser.summary(countries=countries_show)"
     ],
     "language": "python",
     "metadata": {},
     "outputs": [
      {
       "html": [
        "<div>\n",
        "<style scoped>\n",
        "    .dataframe tbody tr th:only-of-type {\n",
        "        vertical-align: middle;\n",
        "    }\n",
        "\n",
        "    .dataframe tbody tr th {\n",
        "        vertical-align: top;\n",
        "    }\n",
        "\n",
        "    .dataframe thead th {\n",
        "        text-align: right;\n",
        "    }\n",
        "</style>\n",
        "<table border=\"1\" class=\"dataframe\">\n",
        "  <thead>\n",
        "    <tr style=\"text-align: right;\">\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th>Type</th>\n",
        "      <th>Start</th>\n",
        "      <th>End</th>\n",
        "      <th>Population</th>\n",
        "      <th>ODE</th>\n",
        "      <th>Rt</th>\n",
        "      <th>theta</th>\n",
        "      <th>kappa</th>\n",
        "      <th>rho</th>\n",
        "      <th>sigma</th>\n",
        "      <th>tau</th>\n",
        "      <th>alpha1 [-]</th>\n",
        "      <th>1/alpha2 [day]</th>\n",
        "      <th>1/gamma [day]</th>\n",
        "      <th>1/beta [day]</th>\n",
        "      <th>RMSLE</th>\n",
        "      <th>Trials</th>\n",
        "      <th>Runtime</th>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>Country</th>\n",
        "      <th>Phase</th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "    </tr>\n",
        "  </thead>\n",
        "  <tbody>\n",
        "    <tr>\n",
        "      <th rowspan=\"13\" valign=\"top\">Honduras</th>\n",
        "      <th>0th</th>\n",
        "      <td>Past</td>\n",
        "      <td>28Mar2020</td>\n",
        "      <td>16Jun2020</td>\n",
        "      <td>9587522</td>\n",
        "      <td>SIR-F</td>\n",
        "      <td>11.02</td>\n",
        "      <td>0.037897</td>\n",
        "      <td>0.000084</td>\n",
        "      <td>0.017417</td>\n",
        "      <td>0.001437</td>\n",
        "      <td>360</td>\n",
        "      <td>0.038</td>\n",
        "      <td>2987</td>\n",
        "      <td>173</td>\n",
        "      <td>14</td>\n",
        "      <td>1.894533</td>\n",
        "      <td>1720</td>\n",
        "      <td>1 min  0 sec</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>1st</th>\n",
        "      <td>Past</td>\n",
        "      <td>17Jun2020</td>\n",
        "      <td>03Jul2020</td>\n",
        "      <td>9587522</td>\n",
        "      <td>SIR-F</td>\n",
        "      <td>7.38</td>\n",
        "      <td>0.000661</td>\n",
        "      <td>0.000284</td>\n",
        "      <td>0.012489</td>\n",
        "      <td>0.001408</td>\n",
        "      <td>360</td>\n",
        "      <td>0.001</td>\n",
        "      <td>880</td>\n",
        "      <td>177</td>\n",
        "      <td>20</td>\n",
        "      <td>0.069736</td>\n",
        "      <td>1156</td>\n",
        "      <td>1 min  0 sec</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>2nd</th>\n",
        "      <td>Past</td>\n",
        "      <td>04Jul2020</td>\n",
        "      <td>17Jul2020</td>\n",
        "      <td>9587522</td>\n",
        "      <td>SIR-F</td>\n",
        "      <td>6.73</td>\n",
        "      <td>0.017629</td>\n",
        "      <td>0.000084</td>\n",
        "      <td>0.006412</td>\n",
        "      <td>0.000852</td>\n",
        "      <td>360</td>\n",
        "      <td>0.018</td>\n",
        "      <td>2965</td>\n",
        "      <td>293</td>\n",
        "      <td>38</td>\n",
        "      <td>0.034197</td>\n",
        "      <td>1244</td>\n",
        "      <td>1 min  0 sec</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>3rd</th>\n",
        "      <td>Past</td>\n",
        "      <td>18Jul2020</td>\n",
        "      <td>25Jul2020</td>\n",
        "      <td>9587522</td>\n",
        "      <td>SIR-F</td>\n",
        "      <td>4.88</td>\n",
        "      <td>0.032590</td>\n",
        "      <td>0.000014</td>\n",
        "      <td>0.006435</td>\n",
        "      <td>0.001262</td>\n",
        "      <td>360</td>\n",
        "      <td>0.033</td>\n",
        "      <td>17587</td>\n",
        "      <td>198</td>\n",
        "      <td>38</td>\n",
        "      <td>0.010850</td>\n",
        "      <td>195</td>\n",
        "      <td>0 min  5 sec</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>4th</th>\n",
        "      <td>Past</td>\n",
        "      <td>26Jul2020</td>\n",
        "      <td>05Aug2020</td>\n",
        "      <td>9587522</td>\n",
        "      <td>SIR-F</td>\n",
        "      <td>3.54</td>\n",
        "      <td>0.034816</td>\n",
        "      <td>0.000137</td>\n",
        "      <td>0.003662</td>\n",
        "      <td>0.000862</td>\n",
        "      <td>360</td>\n",
        "      <td>0.035</td>\n",
        "      <td>1829</td>\n",
        "      <td>289</td>\n",
        "      <td>68</td>\n",
        "      <td>0.021558</td>\n",
        "      <td>1172</td>\n",
        "      <td>1 min  0 sec</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>5th</th>\n",
        "      <td>Past</td>\n",
        "      <td>06Aug2020</td>\n",
        "      <td>20Aug2020</td>\n",
        "      <td>9587522</td>\n",
        "      <td>SIR-F</td>\n",
        "      <td>3.97</td>\n",
        "      <td>0.000570</td>\n",
        "      <td>0.000087</td>\n",
        "      <td>0.003355</td>\n",
        "      <td>0.000758</td>\n",
        "      <td>360</td>\n",
        "      <td>0.001</td>\n",
        "      <td>2878</td>\n",
        "      <td>329</td>\n",
        "      <td>74</td>\n",
        "      <td>0.012646</td>\n",
        "      <td>481</td>\n",
        "      <td>0 min 20 sec</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>6th</th>\n",
        "      <td>Past</td>\n",
        "      <td>21Aug2020</td>\n",
        "      <td>30Aug2020</td>\n",
        "      <td>9587522</td>\n",
        "      <td>SIR-F</td>\n",
        "      <td>3.24</td>\n",
        "      <td>0.001310</td>\n",
        "      <td>0.000136</td>\n",
        "      <td>0.003554</td>\n",
        "      <td>0.000961</td>\n",
        "      <td>360</td>\n",
        "      <td>0.001</td>\n",
        "      <td>1844</td>\n",
        "      <td>260</td>\n",
        "      <td>70</td>\n",
        "      <td>0.023158</td>\n",
        "      <td>1271</td>\n",
        "      <td>1 min  0 sec</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>7th</th>\n",
        "      <td>Past</td>\n",
        "      <td>31Aug2020</td>\n",
        "      <td>11Sep2020</td>\n",
        "      <td>9587522</td>\n",
        "      <td>SIR-F</td>\n",
        "      <td>0.99</td>\n",
        "      <td>0.033599</td>\n",
        "      <td>0.000015</td>\n",
        "      <td>0.002519</td>\n",
        "      <td>0.002451</td>\n",
        "      <td>360</td>\n",
        "      <td>0.034</td>\n",
        "      <td>16204</td>\n",
        "      <td>101</td>\n",
        "      <td>99</td>\n",
        "      <td>0.023264</td>\n",
        "      <td>1831</td>\n",
        "      <td>1 min  0 sec</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>8th</th>\n",
        "      <td>Past</td>\n",
        "      <td>12Sep2020</td>\n",
        "      <td>19Sep2020</td>\n",
        "      <td>9587522</td>\n",
        "      <td>SIR-F</td>\n",
        "      <td>1.03</td>\n",
        "      <td>0.000357</td>\n",
        "      <td>0.000076</td>\n",
        "      <td>0.003308</td>\n",
        "      <td>0.003126</td>\n",
        "      <td>360</td>\n",
        "      <td>0.000</td>\n",
        "      <td>3297</td>\n",
        "      <td>79</td>\n",
        "      <td>75</td>\n",
        "      <td>0.015877</td>\n",
        "      <td>604</td>\n",
        "      <td>0 min 15 sec</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>9th</th>\n",
        "      <td>Past</td>\n",
        "      <td>20Sep2020</td>\n",
        "      <td>29Sep2020</td>\n",
        "      <td>9587522</td>\n",
        "      <td>SIR-F</td>\n",
        "      <td>0.83</td>\n",
        "      <td>0.019031</td>\n",
        "      <td>0.000039</td>\n",
        "      <td>0.002758</td>\n",
        "      <td>0.003204</td>\n",
        "      <td>360</td>\n",
        "      <td>0.019</td>\n",
        "      <td>6368</td>\n",
        "      <td>78</td>\n",
        "      <td>90</td>\n",
        "      <td>0.010588</td>\n",
        "      <td>475</td>\n",
        "      <td>0 min 20 sec</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>10th</th>\n",
        "      <td>Past</td>\n",
        "      <td>30Sep2020</td>\n",
        "      <td>08Oct2020</td>\n",
        "      <td>9587522</td>\n",
        "      <td>SIR-F</td>\n",
        "      <td>1.58</td>\n",
        "      <td>0.001773</td>\n",
        "      <td>0.000098</td>\n",
        "      <td>0.003487</td>\n",
        "      <td>0.002107</td>\n",
        "      <td>360</td>\n",
        "      <td>0.002</td>\n",
        "      <td>2549</td>\n",
        "      <td>118</td>\n",
        "      <td>71</td>\n",
        "      <td>0.006810</td>\n",
        "      <td>374</td>\n",
        "      <td>0 min 15 sec</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>11th</th>\n",
        "      <td>Past</td>\n",
        "      <td>09Oct2020</td>\n",
        "      <td>17Oct2020</td>\n",
        "      <td>9587522</td>\n",
        "      <td>SIR-F</td>\n",
        "      <td>2.26</td>\n",
        "      <td>0.001260</td>\n",
        "      <td>0.000046</td>\n",
        "      <td>0.003092</td>\n",
        "      <td>0.001321</td>\n",
        "      <td>360</td>\n",
        "      <td>0.001</td>\n",
        "      <td>5470</td>\n",
        "      <td>189</td>\n",
        "      <td>80</td>\n",
        "      <td>0.012445</td>\n",
        "      <td>1225</td>\n",
        "      <td>1 min  0 sec</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>12th</th>\n",
        "      <td>Past</td>\n",
        "      <td>18Oct2020</td>\n",
        "      <td>30Oct2020</td>\n",
        "      <td>9587522</td>\n",
        "      <td>SIR-F</td>\n",
        "      <td>1.27</td>\n",
        "      <td>0.016414</td>\n",
        "      <td>0.000002</td>\n",
        "      <td>0.002787</td>\n",
        "      <td>0.002151</td>\n",
        "      <td>360</td>\n",
        "      <td>0.016</td>\n",
        "      <td>103592</td>\n",
        "      <td>116</td>\n",
        "      <td>89</td>\n",
        "      <td>0.015053</td>\n",
        "      <td>1226</td>\n",
        "      <td>1 min  0 sec</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th rowspan=\"13\" valign=\"top\">Russia</th>\n",
        "      <th>0th</th>\n",
        "      <td>Past</td>\n",
        "      <td>12Feb2020</td>\n",
        "      <td>07May2020</td>\n",
        "      <td>330457362</td>\n",
        "      <td>SIR-F</td>\n",
        "      <td>0.02</td>\n",
        "      <td>0.602763</td>\n",
        "      <td>0.544883</td>\n",
        "      <td>0.033660</td>\n",
        "      <td>0.002318</td>\n",
        "      <td>360</td>\n",
        "      <td>0.603</td>\n",
        "      <td>0</td>\n",
        "      <td>107</td>\n",
        "      <td>7</td>\n",
        "      <td>19.313273</td>\n",
        "      <td>1696</td>\n",
        "      <td>1 min  0 sec</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>1st</th>\n",
        "      <td>Past</td>\n",
        "      <td>08May2020</td>\n",
        "      <td>19May2020</td>\n",
        "      <td>330457362</td>\n",
        "      <td>SIR-F</td>\n",
        "      <td>2.35</td>\n",
        "      <td>0.000966</td>\n",
        "      <td>0.000117</td>\n",
        "      <td>0.011404</td>\n",
        "      <td>0.004739</td>\n",
        "      <td>360</td>\n",
        "      <td>0.001</td>\n",
        "      <td>2135</td>\n",
        "      <td>52</td>\n",
        "      <td>21</td>\n",
        "      <td>0.106860</td>\n",
        "      <td>1191</td>\n",
        "      <td>1 min  0 sec</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>2nd</th>\n",
        "      <td>Past</td>\n",
        "      <td>20May2020</td>\n",
        "      <td>30May2020</td>\n",
        "      <td>330457362</td>\n",
        "      <td>SIR-F</td>\n",
        "      <td>1.12</td>\n",
        "      <td>0.000675</td>\n",
        "      <td>0.000112</td>\n",
        "      <td>0.006212</td>\n",
        "      <td>0.005411</td>\n",
        "      <td>360</td>\n",
        "      <td>0.001</td>\n",
        "      <td>2238</td>\n",
        "      <td>46</td>\n",
        "      <td>40</td>\n",
        "      <td>0.105674</td>\n",
        "      <td>1212</td>\n",
        "      <td>1 min  0 sec</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>3rd</th>\n",
        "      <td>Past</td>\n",
        "      <td>31May2020</td>\n",
        "      <td>11Jun2020</td>\n",
        "      <td>330457362</td>\n",
        "      <td>SIR-F</td>\n",
        "      <td>0.92</td>\n",
        "      <td>0.021132</td>\n",
        "      <td>0.000002</td>\n",
        "      <td>0.004737</td>\n",
        "      <td>0.005018</td>\n",
        "      <td>360</td>\n",
        "      <td>0.021</td>\n",
        "      <td>103653</td>\n",
        "      <td>49</td>\n",
        "      <td>52</td>\n",
        "      <td>0.105328</td>\n",
        "      <td>1392</td>\n",
        "      <td>1 min  0 sec</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>4th</th>\n",
        "      <td>Past</td>\n",
        "      <td>12Jun2020</td>\n",
        "      <td>26Jun2020</td>\n",
        "      <td>330457362</td>\n",
        "      <td>SIR-F</td>\n",
        "      <td>0.88</td>\n",
        "      <td>0.000527</td>\n",
        "      <td>0.000076</td>\n",
        "      <td>0.003448</td>\n",
        "      <td>0.003850</td>\n",
        "      <td>360</td>\n",
        "      <td>0.001</td>\n",
        "      <td>3297</td>\n",
        "      <td>64</td>\n",
        "      <td>72</td>\n",
        "      <td>0.114660</td>\n",
        "      <td>1070</td>\n",
        "      <td>1 min  0 sec</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>5th</th>\n",
        "      <td>Past</td>\n",
        "      <td>27Jun2020</td>\n",
        "      <td>10Jul2020</td>\n",
        "      <td>330457362</td>\n",
        "      <td>SIR-F</td>\n",
        "      <td>0.91</td>\n",
        "      <td>0.001361</td>\n",
        "      <td>0.000046</td>\n",
        "      <td>0.002472</td>\n",
        "      <td>0.002661</td>\n",
        "      <td>360</td>\n",
        "      <td>0.001</td>\n",
        "      <td>5459</td>\n",
        "      <td>93</td>\n",
        "      <td>101</td>\n",
        "      <td>0.071461</td>\n",
        "      <td>1268</td>\n",
        "      <td>1 min  0 sec</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>6th</th>\n",
        "      <td>Past</td>\n",
        "      <td>11Jul2020</td>\n",
        "      <td>26Jul2020</td>\n",
        "      <td>330457362</td>\n",
        "      <td>SIR-F</td>\n",
        "      <td>0.70</td>\n",
        "      <td>0.014736</td>\n",
        "      <td>0.000019</td>\n",
        "      <td>0.001928</td>\n",
        "      <td>0.002681</td>\n",
        "      <td>360</td>\n",
        "      <td>0.015</td>\n",
        "      <td>13377</td>\n",
        "      <td>93</td>\n",
        "      <td>129</td>\n",
        "      <td>0.088615</td>\n",
        "      <td>1138</td>\n",
        "      <td>1 min  0 sec</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>7th</th>\n",
        "      <td>Past</td>\n",
        "      <td>27Jul2020</td>\n",
        "      <td>14Aug2020</td>\n",
        "      <td>330457362</td>\n",
        "      <td>SIR-F</td>\n",
        "      <td>0.68</td>\n",
        "      <td>0.024553</td>\n",
        "      <td>0.000002</td>\n",
        "      <td>0.001487</td>\n",
        "      <td>0.002118</td>\n",
        "      <td>360</td>\n",
        "      <td>0.025</td>\n",
        "      <td>103526</td>\n",
        "      <td>118</td>\n",
        "      <td>168</td>\n",
        "      <td>0.089323</td>\n",
        "      <td>1101</td>\n",
        "      <td>1 min  0 sec</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>8th</th>\n",
        "      <td>Past</td>\n",
        "      <td>15Aug2020</td>\n",
        "      <td>04Sep2020</td>\n",
        "      <td>330457362</td>\n",
        "      <td>SIR-F</td>\n",
        "      <td>0.87</td>\n",
        "      <td>0.000867</td>\n",
        "      <td>0.000021</td>\n",
        "      <td>0.001255</td>\n",
        "      <td>0.001417</td>\n",
        "      <td>360</td>\n",
        "      <td>0.001</td>\n",
        "      <td>11760</td>\n",
        "      <td>176</td>\n",
        "      <td>199</td>\n",
        "      <td>0.068674</td>\n",
        "      <td>1170</td>\n",
        "      <td>1 min  0 sec</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>9th</th>\n",
        "      <td>Past</td>\n",
        "      <td>05Sep2020</td>\n",
        "      <td>24Sep2020</td>\n",
        "      <td>330457362</td>\n",
        "      <td>SIR-F</td>\n",
        "      <td>1.08</td>\n",
        "      <td>0.002973</td>\n",
        "      <td>0.000024</td>\n",
        "      <td>0.001297</td>\n",
        "      <td>0.001178</td>\n",
        "      <td>360</td>\n",
        "      <td>0.003</td>\n",
        "      <td>10518</td>\n",
        "      <td>212</td>\n",
        "      <td>192</td>\n",
        "      <td>0.052758</td>\n",
        "      <td>1166</td>\n",
        "      <td>1 min  0 sec</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>10th</th>\n",
        "      <td>Past</td>\n",
        "      <td>25Sep2020</td>\n",
        "      <td>07Oct2020</td>\n",
        "      <td>330457362</td>\n",
        "      <td>SIR-F</td>\n",
        "      <td>1.98</td>\n",
        "      <td>0.002496</td>\n",
        "      <td>0.000024</td>\n",
        "      <td>0.002017</td>\n",
        "      <td>0.000990</td>\n",
        "      <td>360</td>\n",
        "      <td>0.002</td>\n",
        "      <td>10518</td>\n",
        "      <td>252</td>\n",
        "      <td>123</td>\n",
        "      <td>0.020167</td>\n",
        "      <td>1297</td>\n",
        "      <td>1 min  0 sec</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>11th</th>\n",
        "      <td>Past</td>\n",
        "      <td>08Oct2020</td>\n",
        "      <td>16Oct2020</td>\n",
        "      <td>330457362</td>\n",
        "      <td>SIR-F</td>\n",
        "      <td>1.83</td>\n",
        "      <td>0.001350</td>\n",
        "      <td>0.000025</td>\n",
        "      <td>0.002594</td>\n",
        "      <td>0.001387</td>\n",
        "      <td>360</td>\n",
        "      <td>0.001</td>\n",
        "      <td>10000</td>\n",
        "      <td>180</td>\n",
        "      <td>96</td>\n",
        "      <td>0.013334</td>\n",
        "      <td>743</td>\n",
        "      <td>0 min 35 sec</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>12th</th>\n",
        "      <td>Past</td>\n",
        "      <td>17Oct2020</td>\n",
        "      <td>30Oct2020</td>\n",
        "      <td>330457362</td>\n",
        "      <td>SIR-F</td>\n",
        "      <td>1.70</td>\n",
        "      <td>0.001259</td>\n",
        "      <td>0.000046</td>\n",
        "      <td>0.003091</td>\n",
        "      <td>0.001766</td>\n",
        "      <td>360</td>\n",
        "      <td>0.001</td>\n",
        "      <td>5470</td>\n",
        "      <td>141</td>\n",
        "      <td>80</td>\n",
        "      <td>0.031899</td>\n",
        "      <td>1151</td>\n",
        "      <td>1 min  0 sec</td>\n",
        "    </tr>\n",
        "  </tbody>\n",
        "</table>\n",
        "</div>"
       ],
       "output_type": "pyout",
       "prompt_number": 12,
       "text": [
        "                Type      Start        End  Population    ODE     Rt  \\\n",
        "Country  Phase                                                         \n",
        "Honduras 0th    Past  28Mar2020  16Jun2020     9587522  SIR-F  11.02   \n",
        "         1st    Past  17Jun2020  03Jul2020     9587522  SIR-F   7.38   \n",
        "         2nd    Past  04Jul2020  17Jul2020     9587522  SIR-F   6.73   \n",
        "         3rd    Past  18Jul2020  25Jul2020     9587522  SIR-F   4.88   \n",
        "         4th    Past  26Jul2020  05Aug2020     9587522  SIR-F   3.54   \n",
        "         5th    Past  06Aug2020  20Aug2020     9587522  SIR-F   3.97   \n",
        "         6th    Past  21Aug2020  30Aug2020     9587522  SIR-F   3.24   \n",
        "         7th    Past  31Aug2020  11Sep2020     9587522  SIR-F   0.99   \n",
        "         8th    Past  12Sep2020  19Sep2020     9587522  SIR-F   1.03   \n",
        "         9th    Past  20Sep2020  29Sep2020     9587522  SIR-F   0.83   \n",
        "         10th   Past  30Sep2020  08Oct2020     9587522  SIR-F   1.58   \n",
        "         11th   Past  09Oct2020  17Oct2020     9587522  SIR-F   2.26   \n",
        "         12th   Past  18Oct2020  30Oct2020     9587522  SIR-F   1.27   \n",
        "Russia   0th    Past  12Feb2020  07May2020   330457362  SIR-F   0.02   \n",
        "         1st    Past  08May2020  19May2020   330457362  SIR-F   2.35   \n",
        "         2nd    Past  20May2020  30May2020   330457362  SIR-F   1.12   \n",
        "         3rd    Past  31May2020  11Jun2020   330457362  SIR-F   0.92   \n",
        "         4th    Past  12Jun2020  26Jun2020   330457362  SIR-F   0.88   \n",
        "         5th    Past  27Jun2020  10Jul2020   330457362  SIR-F   0.91   \n",
        "         6th    Past  11Jul2020  26Jul2020   330457362  SIR-F   0.70   \n",
        "         7th    Past  27Jul2020  14Aug2020   330457362  SIR-F   0.68   \n",
        "         8th    Past  15Aug2020  04Sep2020   330457362  SIR-F   0.87   \n",
        "         9th    Past  05Sep2020  24Sep2020   330457362  SIR-F   1.08   \n",
        "         10th   Past  25Sep2020  07Oct2020   330457362  SIR-F   1.98   \n",
        "         11th   Past  08Oct2020  16Oct2020   330457362  SIR-F   1.83   \n",
        "         12th   Past  17Oct2020  30Oct2020   330457362  SIR-F   1.70   \n",
        "\n",
        "                   theta     kappa       rho     sigma  tau  alpha1 [-]  \\\n",
        "Country  Phase                                                            \n",
        "Honduras 0th    0.037897  0.000084  0.017417  0.001437  360       0.038   \n",
        "         1st    0.000661  0.000284  0.012489  0.001408  360       0.001   \n",
        "         2nd    0.017629  0.000084  0.006412  0.000852  360       0.018   \n",
        "         3rd    0.032590  0.000014  0.006435  0.001262  360       0.033   \n",
        "         4th    0.034816  0.000137  0.003662  0.000862  360       0.035   \n",
        "         5th    0.000570  0.000087  0.003355  0.000758  360       0.001   \n",
        "         6th    0.001310  0.000136  0.003554  0.000961  360       0.001   \n",
        "         7th    0.033599  0.000015  0.002519  0.002451  360       0.034   \n",
        "         8th    0.000357  0.000076  0.003308  0.003126  360       0.000   \n",
        "         9th    0.019031  0.000039  0.002758  0.003204  360       0.019   \n",
        "         10th   0.001773  0.000098  0.003487  0.002107  360       0.002   \n",
        "         11th   0.001260  0.000046  0.003092  0.001321  360       0.001   \n",
        "         12th   0.016414  0.000002  0.002787  0.002151  360       0.016   \n",
        "Russia   0th    0.602763  0.544883  0.033660  0.002318  360       0.603   \n",
        "         1st    0.000966  0.000117  0.011404  0.004739  360       0.001   \n",
        "         2nd    0.000675  0.000112  0.006212  0.005411  360       0.001   \n",
        "         3rd    0.021132  0.000002  0.004737  0.005018  360       0.021   \n",
        "         4th    0.000527  0.000076  0.003448  0.003850  360       0.001   \n",
        "         5th    0.001361  0.000046  0.002472  0.002661  360       0.001   \n",
        "         6th    0.014736  0.000019  0.001928  0.002681  360       0.015   \n",
        "         7th    0.024553  0.000002  0.001487  0.002118  360       0.025   \n",
        "         8th    0.000867  0.000021  0.001255  0.001417  360       0.001   \n",
        "         9th    0.002973  0.000024  0.001297  0.001178  360       0.003   \n",
        "         10th   0.002496  0.000024  0.002017  0.000990  360       0.002   \n",
        "         11th   0.001350  0.000025  0.002594  0.001387  360       0.001   \n",
        "         12th   0.001259  0.000046  0.003091  0.001766  360       0.001   \n",
        "\n",
        "                1/alpha2 [day]  1/gamma [day]  1/beta [day]      RMSLE  \\\n",
        "Country  Phase                                                           \n",
        "Honduras 0th              2987            173            14   1.894533   \n",
        "         1st               880            177            20   0.069736   \n",
        "         2nd              2965            293            38   0.034197   \n",
        "         3rd             17587            198            38   0.010850   \n",
        "         4th              1829            289            68   0.021558   \n",
        "         5th              2878            329            74   0.012646   \n",
        "         6th              1844            260            70   0.023158   \n",
        "         7th             16204            101            99   0.023264   \n",
        "         8th              3297             79            75   0.015877   \n",
        "         9th              6368             78            90   0.010588   \n",
        "         10th             2549            118            71   0.006810   \n",
        "         11th             5470            189            80   0.012445   \n",
        "         12th           103592            116            89   0.015053   \n",
        "Russia   0th                 0            107             7  19.313273   \n",
        "         1st              2135             52            21   0.106860   \n",
        "         2nd              2238             46            40   0.105674   \n",
        "         3rd            103653             49            52   0.105328   \n",
        "         4th              3297             64            72   0.114660   \n",
        "         5th              5459             93           101   0.071461   \n",
        "         6th             13377             93           129   0.088615   \n",
        "         7th            103526            118           168   0.089323   \n",
        "         8th             11760            176           199   0.068674   \n",
        "         9th             10518            212           192   0.052758   \n",
        "         10th            10518            252           123   0.020167   \n",
        "         11th            10000            180            96   0.013334   \n",
        "         12th             5470            141            80   0.031899   \n",
        "\n",
        "                Trials       Runtime  \n",
        "Country  Phase                        \n",
        "Honduras 0th      1720  1 min  0 sec  \n",
        "         1st      1156  1 min  0 sec  \n",
        "         2nd      1244  1 min  0 sec  \n",
        "         3rd       195  0 min  5 sec  \n",
        "         4th      1172  1 min  0 sec  \n",
        "         5th       481  0 min 20 sec  \n",
        "         6th      1271  1 min  0 sec  \n",
        "         7th      1831  1 min  0 sec  \n",
        "         8th       604  0 min 15 sec  \n",
        "         9th       475  0 min 20 sec  \n",
        "         10th      374  0 min 15 sec  \n",
        "         11th     1225  1 min  0 sec  \n",
        "         12th     1226  1 min  0 sec  \n",
        "Russia   0th      1696  1 min  0 sec  \n",
        "         1st      1191  1 min  0 sec  \n",
        "         2nd      1212  1 min  0 sec  \n",
        "         3rd      1392  1 min  0 sec  \n",
        "         4th      1070  1 min  0 sec  \n",
        "         5th      1268  1 min  0 sec  \n",
        "         6th      1138  1 min  0 sec  \n",
        "         7th      1101  1 min  0 sec  \n",
        "         8th      1170  1 min  0 sec  \n",
        "         9th      1166  1 min  0 sec  \n",
        "         10th     1297  1 min  0 sec  \n",
        "         11th      743  0 min 35 sec  \n",
        "         12th     1151  1 min  0 sec  "
       ]
      }
     ],
     "prompt_number": 12
    },
    {
     "cell_type": "markdown",
     "metadata": {},
     "source": [
      "## Compare the history of parameters\n",
      "Here, compare the history of parameter values if countries."
     ]
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "# All parameter/day parameter/Rt/OxCGRT\n",
      "analyser.track().head()"
     ],
     "language": "python",
     "metadata": {},
     "outputs": [
      {
       "html": [
        "<div>\n",
        "<style scoped>\n",
        "    .dataframe tbody tr th:only-of-type {\n",
        "        vertical-align: middle;\n",
        "    }\n",
        "\n",
        "    .dataframe tbody tr th {\n",
        "        vertical-align: top;\n",
        "    }\n",
        "\n",
        "    .dataframe thead th {\n",
        "        text-align: right;\n",
        "    }\n",
        "</style>\n",
        "<table border=\"1\" class=\"dataframe\">\n",
        "  <thead>\n",
        "    <tr style=\"text-align: right;\">\n",
        "      <th></th>\n",
        "      <th>Date</th>\n",
        "      <th>Country</th>\n",
        "      <th>theta</th>\n",
        "      <th>kappa</th>\n",
        "      <th>rho</th>\n",
        "      <th>sigma</th>\n",
        "      <th>alpha1 [-]</th>\n",
        "      <th>1/alpha2 [day]</th>\n",
        "      <th>1/beta [day]</th>\n",
        "      <th>1/gamma [day]</th>\n",
        "      <th>...</th>\n",
        "      <th>Cancel_events</th>\n",
        "      <th>Gatherings_restrictions</th>\n",
        "      <th>Transport_closing</th>\n",
        "      <th>Stay_home_restrictions</th>\n",
        "      <th>Internal_movement_restrictions</th>\n",
        "      <th>International_movement_restrictions</th>\n",
        "      <th>Information_campaigns</th>\n",
        "      <th>Testing_policy</th>\n",
        "      <th>Contact_tracing</th>\n",
        "      <th>Stringency_index</th>\n",
        "    </tr>\n",
        "  </thead>\n",
        "  <tbody>\n",
        "    <tr>\n",
        "      <th>0</th>\n",
        "      <td>2020-03-18</td>\n",
        "      <td>Nigeria</td>\n",
        "      <td>0.0629324</td>\n",
        "      <td>9.0496e-05</td>\n",
        "      <td>0.033803</td>\n",
        "      <td>0.0049187</td>\n",
        "      <td>0.063</td>\n",
        "      <td>2762</td>\n",
        "      <td>7</td>\n",
        "      <td>50</td>\n",
        "      <td>...</td>\n",
        "      <td>1</td>\n",
        "      <td>3</td>\n",
        "      <td>0</td>\n",
        "      <td>0</td>\n",
        "      <td>0</td>\n",
        "      <td>0</td>\n",
        "      <td>2</td>\n",
        "      <td>1</td>\n",
        "      <td>2</td>\n",
        "      <td>25.46</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>1</th>\n",
        "      <td>2020-03-19</td>\n",
        "      <td>Nigeria</td>\n",
        "      <td>0.0629324</td>\n",
        "      <td>9.0496e-05</td>\n",
        "      <td>0.033803</td>\n",
        "      <td>0.0049187</td>\n",
        "      <td>0.063</td>\n",
        "      <td>2762</td>\n",
        "      <td>7</td>\n",
        "      <td>50</td>\n",
        "      <td>...</td>\n",
        "      <td>1</td>\n",
        "      <td>3</td>\n",
        "      <td>0</td>\n",
        "      <td>0</td>\n",
        "      <td>0</td>\n",
        "      <td>0</td>\n",
        "      <td>2</td>\n",
        "      <td>1</td>\n",
        "      <td>2</td>\n",
        "      <td>25.46</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>2</th>\n",
        "      <td>2020-03-20</td>\n",
        "      <td>Nigeria</td>\n",
        "      <td>0.0629324</td>\n",
        "      <td>9.0496e-05</td>\n",
        "      <td>0.033803</td>\n",
        "      <td>0.0049187</td>\n",
        "      <td>0.063</td>\n",
        "      <td>2762</td>\n",
        "      <td>7</td>\n",
        "      <td>50</td>\n",
        "      <td>...</td>\n",
        "      <td>2</td>\n",
        "      <td>3</td>\n",
        "      <td>0</td>\n",
        "      <td>0</td>\n",
        "      <td>0</td>\n",
        "      <td>0</td>\n",
        "      <td>2</td>\n",
        "      <td>1</td>\n",
        "      <td>2</td>\n",
        "      <td>33.80</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>3</th>\n",
        "      <td>2020-03-21</td>\n",
        "      <td>Nigeria</td>\n",
        "      <td>0.0629324</td>\n",
        "      <td>9.0496e-05</td>\n",
        "      <td>0.033803</td>\n",
        "      <td>0.0049187</td>\n",
        "      <td>0.063</td>\n",
        "      <td>2762</td>\n",
        "      <td>7</td>\n",
        "      <td>50</td>\n",
        "      <td>...</td>\n",
        "      <td>2</td>\n",
        "      <td>3</td>\n",
        "      <td>0</td>\n",
        "      <td>0</td>\n",
        "      <td>0</td>\n",
        "      <td>0</td>\n",
        "      <td>2</td>\n",
        "      <td>1</td>\n",
        "      <td>2</td>\n",
        "      <td>33.80</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>4</th>\n",
        "      <td>2020-03-22</td>\n",
        "      <td>Nigeria</td>\n",
        "      <td>0.0629324</td>\n",
        "      <td>9.0496e-05</td>\n",
        "      <td>0.033803</td>\n",
        "      <td>0.0049187</td>\n",
        "      <td>0.063</td>\n",
        "      <td>2762</td>\n",
        "      <td>7</td>\n",
        "      <td>50</td>\n",
        "      <td>...</td>\n",
        "      <td>2</td>\n",
        "      <td>3</td>\n",
        "      <td>0</td>\n",
        "      <td>0</td>\n",
        "      <td>0</td>\n",
        "      <td>0</td>\n",
        "      <td>2</td>\n",
        "      <td>1</td>\n",
        "      <td>2</td>\n",
        "      <td>33.80</td>\n",
        "    </tr>\n",
        "  </tbody>\n",
        "</table>\n",
        "<p>5 rows \u00d7 23 columns</p>\n",
        "</div>"
       ],
       "output_type": "pyout",
       "prompt_number": 13,
       "text": [
        "        Date  Country      theta       kappa       rho      sigma alpha1 [-]  \\\n",
        "0 2020-03-18  Nigeria  0.0629324  9.0496e-05  0.033803  0.0049187      0.063   \n",
        "1 2020-03-19  Nigeria  0.0629324  9.0496e-05  0.033803  0.0049187      0.063   \n",
        "2 2020-03-20  Nigeria  0.0629324  9.0496e-05  0.033803  0.0049187      0.063   \n",
        "3 2020-03-21  Nigeria  0.0629324  9.0496e-05  0.033803  0.0049187      0.063   \n",
        "4 2020-03-22  Nigeria  0.0629324  9.0496e-05  0.033803  0.0049187      0.063   \n",
        "\n",
        "  1/alpha2 [day] 1/beta [day] 1/gamma [day]  ... Cancel_events  \\\n",
        "0           2762            7            50  ...             1   \n",
        "1           2762            7            50  ...             1   \n",
        "2           2762            7            50  ...             2   \n",
        "3           2762            7            50  ...             2   \n",
        "4           2762            7            50  ...             2   \n",
        "\n",
        "   Gatherings_restrictions  Transport_closing  Stay_home_restrictions  \\\n",
        "0                        3                  0                       0   \n",
        "1                        3                  0                       0   \n",
        "2                        3                  0                       0   \n",
        "3                        3                  0                       0   \n",
        "4                        3                  0                       0   \n",
        "\n",
        "   Internal_movement_restrictions  International_movement_restrictions  \\\n",
        "0                               0                                    0   \n",
        "1                               0                                    0   \n",
        "2                               0                                    0   \n",
        "3                               0                                    0   \n",
        "4                               0                                    0   \n",
        "\n",
        "   Information_campaigns  Testing_policy  Contact_tracing  Stringency_index  \n",
        "0                      2               1                2             25.46  \n",
        "1                      2               1                2             25.46  \n",
        "2                      2               1                2             33.80  \n",
        "3                      2               1                2             33.80  \n",
        "4                      2               1                2             33.80  \n",
        "\n",
        "[5 rows x 23 columns]"
       ]
      }
     ],
     "prompt_number": 13
    },
    {
     "cell_type": "heading",
     "level": 3,
     "metadata": {},
     "source": [
      "$Rt$: Reprodcution number $\\mathrm{[-]}$"
     ]
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "analyser.history(\"Rt\", roll_window=None).tail()"
     ],
     "language": "python",
     "metadata": {},
     "outputs": [
      {
       "output_type": "display_data",
       "png": "\n",
       "text": [
        "<Figure size 648x432 with 1 Axes>"
       ]
      },
      {
       "html": [
        "<div>\n",
        "<style scoped>\n",
        "    .dataframe tbody tr th:only-of-type {\n",
        "        vertical-align: middle;\n",
        "    }\n",
        "\n",
        "    .dataframe tbody tr th {\n",
        "        vertical-align: top;\n",
        "    }\n",
        "\n",
        "    .dataframe thead th {\n",
        "        text-align: right;\n",
        "    }\n",
        "</style>\n",
        "<table border=\"1\" class=\"dataframe\">\n",
        "  <thead>\n",
        "    <tr style=\"text-align: right;\">\n",
        "      <th>Country</th>\n",
        "      <th>Bahrain</th>\n",
        "      <th>Bangladesh</th>\n",
        "      <th>Bolivia</th>\n",
        "      <th>Brazil</th>\n",
        "      <th>Canada</th>\n",
        "      <th>Colombia</th>\n",
        "      <th>Dominican Republic</th>\n",
        "      <th>Egypt</th>\n",
        "      <th>France</th>\n",
        "      <th>Honduras</th>\n",
        "      <th>...</th>\n",
        "      <th>Iraq</th>\n",
        "      <th>Italy</th>\n",
        "      <th>Kuwait</th>\n",
        "      <th>Nigeria</th>\n",
        "      <th>Peru</th>\n",
        "      <th>Russia</th>\n",
        "      <th>Togo</th>\n",
        "      <th>Turkey</th>\n",
        "      <th>United Arab Emirates</th>\n",
        "      <th>United States</th>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>Date</th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "    </tr>\n",
        "  </thead>\n",
        "  <tbody>\n",
        "    <tr>\n",
        "      <th>2020-10-26</th>\n",
        "      <td>0.88</td>\n",
        "      <td>0.91</td>\n",
        "      <td>0.44</td>\n",
        "      <td>143.32</td>\n",
        "      <td>1.25</td>\n",
        "      <td>0.83</td>\n",
        "      <td>0.87</td>\n",
        "      <td>0.24</td>\n",
        "      <td>27.79</td>\n",
        "      <td>1.27</td>\n",
        "      <td>...</td>\n",
        "      <td>0.84</td>\n",
        "      <td>4.41</td>\n",
        "      <td>1.13</td>\n",
        "      <td>0.63</td>\n",
        "      <td>0.52</td>\n",
        "      <td>1.7</td>\n",
        "      <td>2.43</td>\n",
        "      <td>1.54</td>\n",
        "      <td>1.04</td>\n",
        "      <td>2.63</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>2020-10-27</th>\n",
        "      <td>0.88</td>\n",
        "      <td>0.91</td>\n",
        "      <td>0.44</td>\n",
        "      <td>143.32</td>\n",
        "      <td>1.25</td>\n",
        "      <td>0.83</td>\n",
        "      <td>0.87</td>\n",
        "      <td>0.24</td>\n",
        "      <td>27.79</td>\n",
        "      <td>1.27</td>\n",
        "      <td>...</td>\n",
        "      <td>0.84</td>\n",
        "      <td>4.41</td>\n",
        "      <td>1.13</td>\n",
        "      <td>0.63</td>\n",
        "      <td>0.52</td>\n",
        "      <td>1.7</td>\n",
        "      <td>2.43</td>\n",
        "      <td>1.54</td>\n",
        "      <td>1.04</td>\n",
        "      <td>2.63</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>2020-10-28</th>\n",
        "      <td>0.88</td>\n",
        "      <td>0.91</td>\n",
        "      <td>0.44</td>\n",
        "      <td>143.32</td>\n",
        "      <td>1.25</td>\n",
        "      <td>0.83</td>\n",
        "      <td>0.87</td>\n",
        "      <td>0.24</td>\n",
        "      <td>27.79</td>\n",
        "      <td>1.27</td>\n",
        "      <td>...</td>\n",
        "      <td>0.84</td>\n",
        "      <td>4.41</td>\n",
        "      <td>1.13</td>\n",
        "      <td>0.63</td>\n",
        "      <td>0.52</td>\n",
        "      <td>1.7</td>\n",
        "      <td>2.43</td>\n",
        "      <td>1.54</td>\n",
        "      <td>1.04</td>\n",
        "      <td>2.63</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>2020-10-29</th>\n",
        "      <td>0.88</td>\n",
        "      <td>0.91</td>\n",
        "      <td>0.44</td>\n",
        "      <td>143.32</td>\n",
        "      <td>1.25</td>\n",
        "      <td>0.83</td>\n",
        "      <td>0.87</td>\n",
        "      <td>0.24</td>\n",
        "      <td>27.79</td>\n",
        "      <td>1.27</td>\n",
        "      <td>...</td>\n",
        "      <td>0.84</td>\n",
        "      <td>4.41</td>\n",
        "      <td>1.13</td>\n",
        "      <td>0.63</td>\n",
        "      <td>0.52</td>\n",
        "      <td>1.7</td>\n",
        "      <td>2.43</td>\n",
        "      <td>1.54</td>\n",
        "      <td>1.04</td>\n",
        "      <td>2.63</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>2020-10-30</th>\n",
        "      <td>0.88</td>\n",
        "      <td>0.91</td>\n",
        "      <td>0.44</td>\n",
        "      <td>143.32</td>\n",
        "      <td>1.25</td>\n",
        "      <td>0.83</td>\n",
        "      <td>0.87</td>\n",
        "      <td>0.24</td>\n",
        "      <td>27.79</td>\n",
        "      <td>1.27</td>\n",
        "      <td>...</td>\n",
        "      <td>0.84</td>\n",
        "      <td>4.41</td>\n",
        "      <td>1.13</td>\n",
        "      <td>0.63</td>\n",
        "      <td>0.52</td>\n",
        "      <td>1.7</td>\n",
        "      <td>2.43</td>\n",
        "      <td>1.54</td>\n",
        "      <td>1.04</td>\n",
        "      <td>2.63</td>\n",
        "    </tr>\n",
        "  </tbody>\n",
        "</table>\n",
        "<p>5 rows \u00d7 21 columns</p>\n",
        "</div>"
       ],
       "output_type": "pyout",
       "prompt_number": 14,
       "text": [
        "Country     Bahrain  Bangladesh  Bolivia  Brazil  Canada  Colombia  \\\n",
        "Date                                                                 \n",
        "2020-10-26     0.88        0.91     0.44  143.32    1.25      0.83   \n",
        "2020-10-27     0.88        0.91     0.44  143.32    1.25      0.83   \n",
        "2020-10-28     0.88        0.91     0.44  143.32    1.25      0.83   \n",
        "2020-10-29     0.88        0.91     0.44  143.32    1.25      0.83   \n",
        "2020-10-30     0.88        0.91     0.44  143.32    1.25      0.83   \n",
        "\n",
        "Country     Dominican Republic  Egypt  France  Honduras  ...  Iraq  Italy  \\\n",
        "Date                                                     ...                \n",
        "2020-10-26                0.87   0.24   27.79      1.27  ...  0.84   4.41   \n",
        "2020-10-27                0.87   0.24   27.79      1.27  ...  0.84   4.41   \n",
        "2020-10-28                0.87   0.24   27.79      1.27  ...  0.84   4.41   \n",
        "2020-10-29                0.87   0.24   27.79      1.27  ...  0.84   4.41   \n",
        "2020-10-30                0.87   0.24   27.79      1.27  ...  0.84   4.41   \n",
        "\n",
        "Country     Kuwait  Nigeria  Peru  Russia  Togo  Turkey  United Arab Emirates  \\\n",
        "Date                                                                            \n",
        "2020-10-26    1.13     0.63  0.52     1.7  2.43    1.54                  1.04   \n",
        "2020-10-27    1.13     0.63  0.52     1.7  2.43    1.54                  1.04   \n",
        "2020-10-28    1.13     0.63  0.52     1.7  2.43    1.54                  1.04   \n",
        "2020-10-29    1.13     0.63  0.52     1.7  2.43    1.54                  1.04   \n",
        "2020-10-30    1.13     0.63  0.52     1.7  2.43    1.54                  1.04   \n",
        "\n",
        "Country     United States  \n",
        "Date                       \n",
        "2020-10-26           2.63  \n",
        "2020-10-27           2.63  \n",
        "2020-10-28           2.63  \n",
        "2020-10-29           2.63  \n",
        "2020-10-30           2.63  \n",
        "\n",
        "[5 rows x 21 columns]"
       ]
      }
     ],
     "prompt_number": 14
    },
    {
     "cell_type": "heading",
     "level": 3,
     "metadata": {},
     "source": [
      "$\\rho$: Effective contact rate $\\mathrm{[-]}$"
     ]
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "analyser.history(\"rho\", roll_window=None).tail()"
     ],
     "language": "python",
     "metadata": {},
     "outputs": [
      {
       "output_type": "display_data",
       "png": "\n",
       "text": [
        "<Figure size 648x432 with 1 Axes>"
       ]
      },
      {
       "html": [
        "<div>\n",
        "<style scoped>\n",
        "    .dataframe tbody tr th:only-of-type {\n",
        "        vertical-align: middle;\n",
        "    }\n",
        "\n",
        "    .dataframe tbody tr th {\n",
        "        vertical-align: top;\n",
        "    }\n",
        "\n",
        "    .dataframe thead th {\n",
        "        text-align: right;\n",
        "    }\n",
        "</style>\n",
        "<table border=\"1\" class=\"dataframe\">\n",
        "  <thead>\n",
        "    <tr style=\"text-align: right;\">\n",
        "      <th>Country</th>\n",
        "      <th>Bahrain</th>\n",
        "      <th>Bangladesh</th>\n",
        "      <th>Bolivia</th>\n",
        "      <th>Brazil</th>\n",
        "      <th>Canada</th>\n",
        "      <th>Colombia</th>\n",
        "      <th>Dominican Republic</th>\n",
        "      <th>Egypt</th>\n",
        "      <th>France</th>\n",
        "      <th>Honduras</th>\n",
        "      <th>...</th>\n",
        "      <th>Iraq</th>\n",
        "      <th>Italy</th>\n",
        "      <th>Kuwait</th>\n",
        "      <th>Nigeria</th>\n",
        "      <th>Peru</th>\n",
        "      <th>Russia</th>\n",
        "      <th>Togo</th>\n",
        "      <th>Turkey</th>\n",
        "      <th>United Arab Emirates</th>\n",
        "      <th>United States</th>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>Date</th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "    </tr>\n",
        "  </thead>\n",
        "  <tbody>\n",
        "    <tr>\n",
        "      <th>2020-10-26</th>\n",
        "      <td>0.025954</td>\n",
        "      <td>0.004486</td>\n",
        "      <td>0.002203</td>\n",
        "      <td>0.009942</td>\n",
        "      <td>0.026386</td>\n",
        "      <td>0.02136</td>\n",
        "      <td>0.005237</td>\n",
        "      <td>0.007076</td>\n",
        "      <td>0.008439</td>\n",
        "      <td>0.002787</td>\n",
        "      <td>...</td>\n",
        "      <td>0.014983</td>\n",
        "      <td>0.019308</td>\n",
        "      <td>0.025185</td>\n",
        "      <td>0.004469</td>\n",
        "      <td>0.000782</td>\n",
        "      <td>0.003091</td>\n",
        "      <td>0.00862</td>\n",
        "      <td>0.021243</td>\n",
        "      <td>0.027801</td>\n",
        "      <td>0.003768</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>2020-10-27</th>\n",
        "      <td>0.025954</td>\n",
        "      <td>0.004486</td>\n",
        "      <td>0.002203</td>\n",
        "      <td>0.009942</td>\n",
        "      <td>0.026386</td>\n",
        "      <td>0.02136</td>\n",
        "      <td>0.005237</td>\n",
        "      <td>0.007076</td>\n",
        "      <td>0.008439</td>\n",
        "      <td>0.002787</td>\n",
        "      <td>...</td>\n",
        "      <td>0.014983</td>\n",
        "      <td>0.019308</td>\n",
        "      <td>0.025185</td>\n",
        "      <td>0.004469</td>\n",
        "      <td>0.000782</td>\n",
        "      <td>0.003091</td>\n",
        "      <td>0.00862</td>\n",
        "      <td>0.021243</td>\n",
        "      <td>0.027801</td>\n",
        "      <td>0.003768</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>2020-10-28</th>\n",
        "      <td>0.025954</td>\n",
        "      <td>0.004486</td>\n",
        "      <td>0.002203</td>\n",
        "      <td>0.009942</td>\n",
        "      <td>0.026386</td>\n",
        "      <td>0.02136</td>\n",
        "      <td>0.005237</td>\n",
        "      <td>0.007076</td>\n",
        "      <td>0.008439</td>\n",
        "      <td>0.002787</td>\n",
        "      <td>...</td>\n",
        "      <td>0.014983</td>\n",
        "      <td>0.019308</td>\n",
        "      <td>0.025185</td>\n",
        "      <td>0.004469</td>\n",
        "      <td>0.000782</td>\n",
        "      <td>0.003091</td>\n",
        "      <td>0.00862</td>\n",
        "      <td>0.021243</td>\n",
        "      <td>0.027801</td>\n",
        "      <td>0.003768</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>2020-10-29</th>\n",
        "      <td>0.025954</td>\n",
        "      <td>0.004486</td>\n",
        "      <td>0.002203</td>\n",
        "      <td>0.009942</td>\n",
        "      <td>0.026386</td>\n",
        "      <td>0.02136</td>\n",
        "      <td>0.005237</td>\n",
        "      <td>0.007076</td>\n",
        "      <td>0.008439</td>\n",
        "      <td>0.002787</td>\n",
        "      <td>...</td>\n",
        "      <td>0.014983</td>\n",
        "      <td>0.019308</td>\n",
        "      <td>0.025185</td>\n",
        "      <td>0.004469</td>\n",
        "      <td>0.000782</td>\n",
        "      <td>0.003091</td>\n",
        "      <td>0.00862</td>\n",
        "      <td>0.021243</td>\n",
        "      <td>0.027801</td>\n",
        "      <td>0.003768</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>2020-10-30</th>\n",
        "      <td>0.025954</td>\n",
        "      <td>0.004486</td>\n",
        "      <td>0.002203</td>\n",
        "      <td>0.009942</td>\n",
        "      <td>0.026386</td>\n",
        "      <td>0.02136</td>\n",
        "      <td>0.005237</td>\n",
        "      <td>0.007076</td>\n",
        "      <td>0.008439</td>\n",
        "      <td>0.002787</td>\n",
        "      <td>...</td>\n",
        "      <td>0.014983</td>\n",
        "      <td>0.019308</td>\n",
        "      <td>0.025185</td>\n",
        "      <td>0.004469</td>\n",
        "      <td>0.000782</td>\n",
        "      <td>0.003091</td>\n",
        "      <td>0.00862</td>\n",
        "      <td>0.021243</td>\n",
        "      <td>0.027801</td>\n",
        "      <td>0.003768</td>\n",
        "    </tr>\n",
        "  </tbody>\n",
        "</table>\n",
        "<p>5 rows \u00d7 21 columns</p>\n",
        "</div>"
       ],
       "output_type": "pyout",
       "prompt_number": 15,
       "text": [
        "Country      Bahrain  Bangladesh   Bolivia    Brazil    Canada  Colombia  \\\n",
        "Date                                                                       \n",
        "2020-10-26  0.025954    0.004486  0.002203  0.009942  0.026386   0.02136   \n",
        "2020-10-27  0.025954    0.004486  0.002203  0.009942  0.026386   0.02136   \n",
        "2020-10-28  0.025954    0.004486  0.002203  0.009942  0.026386   0.02136   \n",
        "2020-10-29  0.025954    0.004486  0.002203  0.009942  0.026386   0.02136   \n",
        "2020-10-30  0.025954    0.004486  0.002203  0.009942  0.026386   0.02136   \n",
        "\n",
        "Country     Dominican Republic     Egypt    France  Honduras  ...      Iraq  \\\n",
        "Date                                                          ...             \n",
        "2020-10-26            0.005237  0.007076  0.008439  0.002787  ...  0.014983   \n",
        "2020-10-27            0.005237  0.007076  0.008439  0.002787  ...  0.014983   \n",
        "2020-10-28            0.005237  0.007076  0.008439  0.002787  ...  0.014983   \n",
        "2020-10-29            0.005237  0.007076  0.008439  0.002787  ...  0.014983   \n",
        "2020-10-30            0.005237  0.007076  0.008439  0.002787  ...  0.014983   \n",
        "\n",
        "Country        Italy    Kuwait   Nigeria      Peru    Russia     Togo  \\\n",
        "Date                                                                    \n",
        "2020-10-26  0.019308  0.025185  0.004469  0.000782  0.003091  0.00862   \n",
        "2020-10-27  0.019308  0.025185  0.004469  0.000782  0.003091  0.00862   \n",
        "2020-10-28  0.019308  0.025185  0.004469  0.000782  0.003091  0.00862   \n",
        "2020-10-29  0.019308  0.025185  0.004469  0.000782  0.003091  0.00862   \n",
        "2020-10-30  0.019308  0.025185  0.004469  0.000782  0.003091  0.00862   \n",
        "\n",
        "Country       Turkey  United Arab Emirates  United States  \n",
        "Date                                                       \n",
        "2020-10-26  0.021243              0.027801       0.003768  \n",
        "2020-10-27  0.021243              0.027801       0.003768  \n",
        "2020-10-28  0.021243              0.027801       0.003768  \n",
        "2020-10-29  0.021243              0.027801       0.003768  \n",
        "2020-10-30  0.021243              0.027801       0.003768  \n",
        "\n",
        "[5 rows x 21 columns]"
       ]
      }
     ],
     "prompt_number": 15
    },
    {
     "cell_type": "heading",
     "level": 3,
     "metadata": {},
     "source": [
      "$\\sigma$: Recovery rate $\\mathrm{[-]}$"
     ]
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "analyser.history(\"sigma\", roll_window=None).tail()"
     ],
     "language": "python",
     "metadata": {},
     "outputs": [
      {
       "output_type": "display_data",
       "png": "\n",
       "text": [
        "<Figure size 648x432 with 1 Axes>"
       ]
      },
      {
       "html": [
        "<div>\n",
        "<style scoped>\n",
        "    .dataframe tbody tr th:only-of-type {\n",
        "        vertical-align: middle;\n",
        "    }\n",
        "\n",
        "    .dataframe tbody tr th {\n",
        "        vertical-align: top;\n",
        "    }\n",
        "\n",
        "    .dataframe thead th {\n",
        "        text-align: right;\n",
        "    }\n",
        "</style>\n",
        "<table border=\"1\" class=\"dataframe\">\n",
        "  <thead>\n",
        "    <tr style=\"text-align: right;\">\n",
        "      <th>Country</th>\n",
        "      <th>Bahrain</th>\n",
        "      <th>Bangladesh</th>\n",
        "      <th>Bolivia</th>\n",
        "      <th>Brazil</th>\n",
        "      <th>Canada</th>\n",
        "      <th>Colombia</th>\n",
        "      <th>Dominican Republic</th>\n",
        "      <th>Egypt</th>\n",
        "      <th>France</th>\n",
        "      <th>Honduras</th>\n",
        "      <th>...</th>\n",
        "      <th>Iraq</th>\n",
        "      <th>Italy</th>\n",
        "      <th>Kuwait</th>\n",
        "      <th>Nigeria</th>\n",
        "      <th>Peru</th>\n",
        "      <th>Russia</th>\n",
        "      <th>Togo</th>\n",
        "      <th>Turkey</th>\n",
        "      <th>United Arab Emirates</th>\n",
        "      <th>United States</th>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>Date</th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "    </tr>\n",
        "  </thead>\n",
        "  <tbody>\n",
        "    <tr>\n",
        "      <th>2020-10-26</th>\n",
        "      <td>0.0292</td>\n",
        "      <td>0.004829</td>\n",
        "      <td>0.004767</td>\n",
        "      <td>0.0</td>\n",
        "      <td>0.021018</td>\n",
        "      <td>0.025205</td>\n",
        "      <td>0.005987</td>\n",
        "      <td>0.028745</td>\n",
        "      <td>0.000267</td>\n",
        "      <td>0.002151</td>\n",
        "      <td>...</td>\n",
        "      <td>0.017529</td>\n",
        "      <td>0.004274</td>\n",
        "      <td>0.022109</td>\n",
        "      <td>0.00707</td>\n",
        "      <td>0.001495</td>\n",
        "      <td>0.001766</td>\n",
        "      <td>0.003474</td>\n",
        "      <td>0.013317</td>\n",
        "      <td>0.026797</td>\n",
        "      <td>0.001394</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>2020-10-27</th>\n",
        "      <td>0.0292</td>\n",
        "      <td>0.004829</td>\n",
        "      <td>0.004767</td>\n",
        "      <td>0.0</td>\n",
        "      <td>0.021018</td>\n",
        "      <td>0.025205</td>\n",
        "      <td>0.005987</td>\n",
        "      <td>0.028745</td>\n",
        "      <td>0.000267</td>\n",
        "      <td>0.002151</td>\n",
        "      <td>...</td>\n",
        "      <td>0.017529</td>\n",
        "      <td>0.004274</td>\n",
        "      <td>0.022109</td>\n",
        "      <td>0.00707</td>\n",
        "      <td>0.001495</td>\n",
        "      <td>0.001766</td>\n",
        "      <td>0.003474</td>\n",
        "      <td>0.013317</td>\n",
        "      <td>0.026797</td>\n",
        "      <td>0.001394</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>2020-10-28</th>\n",
        "      <td>0.0292</td>\n",
        "      <td>0.004829</td>\n",
        "      <td>0.004767</td>\n",
        "      <td>0.0</td>\n",
        "      <td>0.021018</td>\n",
        "      <td>0.025205</td>\n",
        "      <td>0.005987</td>\n",
        "      <td>0.028745</td>\n",
        "      <td>0.000267</td>\n",
        "      <td>0.002151</td>\n",
        "      <td>...</td>\n",
        "      <td>0.017529</td>\n",
        "      <td>0.004274</td>\n",
        "      <td>0.022109</td>\n",
        "      <td>0.00707</td>\n",
        "      <td>0.001495</td>\n",
        "      <td>0.001766</td>\n",
        "      <td>0.003474</td>\n",
        "      <td>0.013317</td>\n",
        "      <td>0.026797</td>\n",
        "      <td>0.001394</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>2020-10-29</th>\n",
        "      <td>0.0292</td>\n",
        "      <td>0.004829</td>\n",
        "      <td>0.004767</td>\n",
        "      <td>0.0</td>\n",
        "      <td>0.021018</td>\n",
        "      <td>0.025205</td>\n",
        "      <td>0.005987</td>\n",
        "      <td>0.028745</td>\n",
        "      <td>0.000267</td>\n",
        "      <td>0.002151</td>\n",
        "      <td>...</td>\n",
        "      <td>0.017529</td>\n",
        "      <td>0.004274</td>\n",
        "      <td>0.022109</td>\n",
        "      <td>0.00707</td>\n",
        "      <td>0.001495</td>\n",
        "      <td>0.001766</td>\n",
        "      <td>0.003474</td>\n",
        "      <td>0.013317</td>\n",
        "      <td>0.026797</td>\n",
        "      <td>0.001394</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>2020-10-30</th>\n",
        "      <td>0.0292</td>\n",
        "      <td>0.004829</td>\n",
        "      <td>0.004767</td>\n",
        "      <td>0.0</td>\n",
        "      <td>0.021018</td>\n",
        "      <td>0.025205</td>\n",
        "      <td>0.005987</td>\n",
        "      <td>0.028745</td>\n",
        "      <td>0.000267</td>\n",
        "      <td>0.002151</td>\n",
        "      <td>...</td>\n",
        "      <td>0.017529</td>\n",
        "      <td>0.004274</td>\n",
        "      <td>0.022109</td>\n",
        "      <td>0.00707</td>\n",
        "      <td>0.001495</td>\n",
        "      <td>0.001766</td>\n",
        "      <td>0.003474</td>\n",
        "      <td>0.013317</td>\n",
        "      <td>0.026797</td>\n",
        "      <td>0.001394</td>\n",
        "    </tr>\n",
        "  </tbody>\n",
        "</table>\n",
        "<p>5 rows \u00d7 21 columns</p>\n",
        "</div>"
       ],
       "output_type": "pyout",
       "prompt_number": 16,
       "text": [
        "Country     Bahrain  Bangladesh   Bolivia  Brazil    Canada  Colombia  \\\n",
        "Date                                                                    \n",
        "2020-10-26   0.0292    0.004829  0.004767     0.0  0.021018  0.025205   \n",
        "2020-10-27   0.0292    0.004829  0.004767     0.0  0.021018  0.025205   \n",
        "2020-10-28   0.0292    0.004829  0.004767     0.0  0.021018  0.025205   \n",
        "2020-10-29   0.0292    0.004829  0.004767     0.0  0.021018  0.025205   \n",
        "2020-10-30   0.0292    0.004829  0.004767     0.0  0.021018  0.025205   \n",
        "\n",
        "Country     Dominican Republic     Egypt    France  Honduras  ...      Iraq  \\\n",
        "Date                                                          ...             \n",
        "2020-10-26            0.005987  0.028745  0.000267  0.002151  ...  0.017529   \n",
        "2020-10-27            0.005987  0.028745  0.000267  0.002151  ...  0.017529   \n",
        "2020-10-28            0.005987  0.028745  0.000267  0.002151  ...  0.017529   \n",
        "2020-10-29            0.005987  0.028745  0.000267  0.002151  ...  0.017529   \n",
        "2020-10-30            0.005987  0.028745  0.000267  0.002151  ...  0.017529   \n",
        "\n",
        "Country        Italy    Kuwait  Nigeria      Peru    Russia      Togo  \\\n",
        "Date                                                                    \n",
        "2020-10-26  0.004274  0.022109  0.00707  0.001495  0.001766  0.003474   \n",
        "2020-10-27  0.004274  0.022109  0.00707  0.001495  0.001766  0.003474   \n",
        "2020-10-28  0.004274  0.022109  0.00707  0.001495  0.001766  0.003474   \n",
        "2020-10-29  0.004274  0.022109  0.00707  0.001495  0.001766  0.003474   \n",
        "2020-10-30  0.004274  0.022109  0.00707  0.001495  0.001766  0.003474   \n",
        "\n",
        "Country       Turkey  United Arab Emirates  United States  \n",
        "Date                                                       \n",
        "2020-10-26  0.013317              0.026797       0.001394  \n",
        "2020-10-27  0.013317              0.026797       0.001394  \n",
        "2020-10-28  0.013317              0.026797       0.001394  \n",
        "2020-10-29  0.013317              0.026797       0.001394  \n",
        "2020-10-30  0.013317              0.026797       0.001394  \n",
        "\n",
        "[5 rows x 21 columns]"
       ]
      }
     ],
     "prompt_number": 16
    },
    {
     "cell_type": "heading",
     "level": 3,
     "metadata": {},
     "source": [
      "$\\kappa$: Mortality rate of infected cases $\\mathrm{[-]}$"
     ]
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "analyser.history(\"kappa\", roll_window=None).tail()"
     ],
     "language": "python",
     "metadata": {},
     "outputs": [
      {
       "output_type": "display_data",
       "png": "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\n",
       "text": [
        "<Figure size 648x432 with 1 Axes>"
       ]
      },
      {
       "html": [
        "<div>\n",
        "<style scoped>\n",
        "    .dataframe tbody tr th:only-of-type {\n",
        "        vertical-align: middle;\n",
        "    }\n",
        "\n",
        "    .dataframe tbody tr th {\n",
        "        vertical-align: top;\n",
        "    }\n",
        "\n",
        "    .dataframe thead th {\n",
        "        text-align: right;\n",
        "    }\n",
        "</style>\n",
        "<table border=\"1\" class=\"dataframe\">\n",
        "  <thead>\n",
        "    <tr style=\"text-align: right;\">\n",
        "      <th>Country</th>\n",
        "      <th>Bahrain</th>\n",
        "      <th>Bangladesh</th>\n",
        "      <th>Bolivia</th>\n",
        "      <th>Brazil</th>\n",
        "      <th>Canada</th>\n",
        "      <th>Colombia</th>\n",
        "      <th>Dominican Republic</th>\n",
        "      <th>Egypt</th>\n",
        "      <th>France</th>\n",
        "      <th>Honduras</th>\n",
        "      <th>...</th>\n",
        "      <th>Iraq</th>\n",
        "      <th>Italy</th>\n",
        "      <th>Kuwait</th>\n",
        "      <th>Nigeria</th>\n",
        "      <th>Peru</th>\n",
        "      <th>Russia</th>\n",
        "      <th>Togo</th>\n",
        "      <th>Turkey</th>\n",
        "      <th>United Arab Emirates</th>\n",
        "      <th>United States</th>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>Date</th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "    </tr>\n",
        "  </thead>\n",
        "  <tbody>\n",
        "    <tr>\n",
        "      <th>2020-10-26</th>\n",
        "      <td>0.00015</td>\n",
        "      <td>0.000076</td>\n",
        "      <td>0.000245</td>\n",
        "      <td>0.000068</td>\n",
        "      <td>0.000093</td>\n",
        "      <td>0.000172</td>\n",
        "      <td>0.000024</td>\n",
        "      <td>0.000568</td>\n",
        "      <td>0.000036</td>\n",
        "      <td>0.000002</td>\n",
        "      <td>...</td>\n",
        "      <td>0.000192</td>\n",
        "      <td>0.000104</td>\n",
        "      <td>0.000157</td>\n",
        "      <td>0.000026</td>\n",
        "      <td>0.000021</td>\n",
        "      <td>0.000046</td>\n",
        "      <td>0.000005</td>\n",
        "      <td>0.000466</td>\n",
        "      <td>0.000037</td>\n",
        "      <td>0.000037</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>2020-10-27</th>\n",
        "      <td>0.00015</td>\n",
        "      <td>0.000076</td>\n",
        "      <td>0.000245</td>\n",
        "      <td>0.000068</td>\n",
        "      <td>0.000093</td>\n",
        "      <td>0.000172</td>\n",
        "      <td>0.000024</td>\n",
        "      <td>0.000568</td>\n",
        "      <td>0.000036</td>\n",
        "      <td>0.000002</td>\n",
        "      <td>...</td>\n",
        "      <td>0.000192</td>\n",
        "      <td>0.000104</td>\n",
        "      <td>0.000157</td>\n",
        "      <td>0.000026</td>\n",
        "      <td>0.000021</td>\n",
        "      <td>0.000046</td>\n",
        "      <td>0.000005</td>\n",
        "      <td>0.000466</td>\n",
        "      <td>0.000037</td>\n",
        "      <td>0.000037</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>2020-10-28</th>\n",
        "      <td>0.00015</td>\n",
        "      <td>0.000076</td>\n",
        "      <td>0.000245</td>\n",
        "      <td>0.000068</td>\n",
        "      <td>0.000093</td>\n",
        "      <td>0.000172</td>\n",
        "      <td>0.000024</td>\n",
        "      <td>0.000568</td>\n",
        "      <td>0.000036</td>\n",
        "      <td>0.000002</td>\n",
        "      <td>...</td>\n",
        "      <td>0.000192</td>\n",
        "      <td>0.000104</td>\n",
        "      <td>0.000157</td>\n",
        "      <td>0.000026</td>\n",
        "      <td>0.000021</td>\n",
        "      <td>0.000046</td>\n",
        "      <td>0.000005</td>\n",
        "      <td>0.000466</td>\n",
        "      <td>0.000037</td>\n",
        "      <td>0.000037</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>2020-10-29</th>\n",
        "      <td>0.00015</td>\n",
        "      <td>0.000076</td>\n",
        "      <td>0.000245</td>\n",
        "      <td>0.000068</td>\n",
        "      <td>0.000093</td>\n",
        "      <td>0.000172</td>\n",
        "      <td>0.000024</td>\n",
        "      <td>0.000568</td>\n",
        "      <td>0.000036</td>\n",
        "      <td>0.000002</td>\n",
        "      <td>...</td>\n",
        "      <td>0.000192</td>\n",
        "      <td>0.000104</td>\n",
        "      <td>0.000157</td>\n",
        "      <td>0.000026</td>\n",
        "      <td>0.000021</td>\n",
        "      <td>0.000046</td>\n",
        "      <td>0.000005</td>\n",
        "      <td>0.000466</td>\n",
        "      <td>0.000037</td>\n",
        "      <td>0.000037</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>2020-10-30</th>\n",
        "      <td>0.00015</td>\n",
        "      <td>0.000076</td>\n",
        "      <td>0.000245</td>\n",
        "      <td>0.000068</td>\n",
        "      <td>0.000093</td>\n",
        "      <td>0.000172</td>\n",
        "      <td>0.000024</td>\n",
        "      <td>0.000568</td>\n",
        "      <td>0.000036</td>\n",
        "      <td>0.000002</td>\n",
        "      <td>...</td>\n",
        "      <td>0.000192</td>\n",
        "      <td>0.000104</td>\n",
        "      <td>0.000157</td>\n",
        "      <td>0.000026</td>\n",
        "      <td>0.000021</td>\n",
        "      <td>0.000046</td>\n",
        "      <td>0.000005</td>\n",
        "      <td>0.000466</td>\n",
        "      <td>0.000037</td>\n",
        "      <td>0.000037</td>\n",
        "    </tr>\n",
        "  </tbody>\n",
        "</table>\n",
        "<p>5 rows \u00d7 21 columns</p>\n",
        "</div>"
       ],
       "output_type": "pyout",
       "prompt_number": 17,
       "text": [
        "Country     Bahrain  Bangladesh   Bolivia    Brazil    Canada  Colombia  \\\n",
        "Date                                                                      \n",
        "2020-10-26  0.00015    0.000076  0.000245  0.000068  0.000093  0.000172   \n",
        "2020-10-27  0.00015    0.000076  0.000245  0.000068  0.000093  0.000172   \n",
        "2020-10-28  0.00015    0.000076  0.000245  0.000068  0.000093  0.000172   \n",
        "2020-10-29  0.00015    0.000076  0.000245  0.000068  0.000093  0.000172   \n",
        "2020-10-30  0.00015    0.000076  0.000245  0.000068  0.000093  0.000172   \n",
        "\n",
        "Country     Dominican Republic     Egypt    France  Honduras  ...      Iraq  \\\n",
        "Date                                                          ...             \n",
        "2020-10-26            0.000024  0.000568  0.000036  0.000002  ...  0.000192   \n",
        "2020-10-27            0.000024  0.000568  0.000036  0.000002  ...  0.000192   \n",
        "2020-10-28            0.000024  0.000568  0.000036  0.000002  ...  0.000192   \n",
        "2020-10-29            0.000024  0.000568  0.000036  0.000002  ...  0.000192   \n",
        "2020-10-30            0.000024  0.000568  0.000036  0.000002  ...  0.000192   \n",
        "\n",
        "Country        Italy    Kuwait   Nigeria      Peru    Russia      Togo  \\\n",
        "Date                                                                     \n",
        "2020-10-26  0.000104  0.000157  0.000026  0.000021  0.000046  0.000005   \n",
        "2020-10-27  0.000104  0.000157  0.000026  0.000021  0.000046  0.000005   \n",
        "2020-10-28  0.000104  0.000157  0.000026  0.000021  0.000046  0.000005   \n",
        "2020-10-29  0.000104  0.000157  0.000026  0.000021  0.000046  0.000005   \n",
        "2020-10-30  0.000104  0.000157  0.000026  0.000021  0.000046  0.000005   \n",
        "\n",
        "Country       Turkey  United Arab Emirates  United States  \n",
        "Date                                                       \n",
        "2020-10-26  0.000466              0.000037       0.000037  \n",
        "2020-10-27  0.000466              0.000037       0.000037  \n",
        "2020-10-28  0.000466              0.000037       0.000037  \n",
        "2020-10-29  0.000466              0.000037       0.000037  \n",
        "2020-10-30  0.000466              0.000037       0.000037  \n",
        "\n",
        "[5 rows x 21 columns]"
       ]
      }
     ],
     "prompt_number": 17
    },
    {
     "cell_type": "heading",
     "level": 3,
     "metadata": {},
     "source": [
      "$\\theta$: Mortality rate of S$^\\ast$ cases $\\mathrm{[-]}$"
     ]
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "analyser.history(\"theta\", roll_window=None).tail()"
     ],
     "language": "python",
     "metadata": {},
     "outputs": [
      {
       "output_type": "display_data",
       "png": "\n",
       "text": [
        "<Figure size 648x432 with 1 Axes>"
       ]
      },
      {
       "html": [
        "<div>\n",
        "<style scoped>\n",
        "    .dataframe tbody tr th:only-of-type {\n",
        "        vertical-align: middle;\n",
        "    }\n",
        "\n",
        "    .dataframe tbody tr th {\n",
        "        vertical-align: top;\n",
        "    }\n",
        "\n",
        "    .dataframe thead th {\n",
        "        text-align: right;\n",
        "    }\n",
        "</style>\n",
        "<table border=\"1\" class=\"dataframe\">\n",
        "  <thead>\n",
        "    <tr style=\"text-align: right;\">\n",
        "      <th>Country</th>\n",
        "      <th>Bahrain</th>\n",
        "      <th>Bangladesh</th>\n",
        "      <th>Bolivia</th>\n",
        "      <th>Brazil</th>\n",
        "      <th>Canada</th>\n",
        "      <th>Colombia</th>\n",
        "      <th>Dominican Republic</th>\n",
        "      <th>Egypt</th>\n",
        "      <th>France</th>\n",
        "      <th>Honduras</th>\n",
        "      <th>...</th>\n",
        "      <th>Iraq</th>\n",
        "      <th>Italy</th>\n",
        "      <th>Kuwait</th>\n",
        "      <th>Nigeria</th>\n",
        "      <th>Peru</th>\n",
        "      <th>Russia</th>\n",
        "      <th>Togo</th>\n",
        "      <th>Turkey</th>\n",
        "      <th>United Arab Emirates</th>\n",
        "      <th>United States</th>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>Date</th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "    </tr>\n",
        "  </thead>\n",
        "  <tbody>\n",
        "    <tr>\n",
        "      <th>2020-10-26</th>\n",
        "      <td>0.000849</td>\n",
        "      <td>0.00041</td>\n",
        "      <td>0.001127</td>\n",
        "      <td>0.017421</td>\n",
        "      <td>0.002182</td>\n",
        "      <td>0.01761</td>\n",
        "      <td>0.001411</td>\n",
        "      <td>0.006037</td>\n",
        "      <td>0.001676</td>\n",
        "      <td>0.016414</td>\n",
        "      <td>...</td>\n",
        "      <td>0.001207</td>\n",
        "      <td>0.000122</td>\n",
        "      <td>0.000748</td>\n",
        "      <td>0.001104</td>\n",
        "      <td>0.000863</td>\n",
        "      <td>0.001259</td>\n",
        "      <td>0.020399</td>\n",
        "      <td>0.000204</td>\n",
        "      <td>0.00066</td>\n",
        "      <td>0.001159</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>2020-10-27</th>\n",
        "      <td>0.000849</td>\n",
        "      <td>0.00041</td>\n",
        "      <td>0.001127</td>\n",
        "      <td>0.017421</td>\n",
        "      <td>0.002182</td>\n",
        "      <td>0.01761</td>\n",
        "      <td>0.001411</td>\n",
        "      <td>0.006037</td>\n",
        "      <td>0.001676</td>\n",
        "      <td>0.016414</td>\n",
        "      <td>...</td>\n",
        "      <td>0.001207</td>\n",
        "      <td>0.000122</td>\n",
        "      <td>0.000748</td>\n",
        "      <td>0.001104</td>\n",
        "      <td>0.000863</td>\n",
        "      <td>0.001259</td>\n",
        "      <td>0.020399</td>\n",
        "      <td>0.000204</td>\n",
        "      <td>0.00066</td>\n",
        "      <td>0.001159</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>2020-10-28</th>\n",
        "      <td>0.000849</td>\n",
        "      <td>0.00041</td>\n",
        "      <td>0.001127</td>\n",
        "      <td>0.017421</td>\n",
        "      <td>0.002182</td>\n",
        "      <td>0.01761</td>\n",
        "      <td>0.001411</td>\n",
        "      <td>0.006037</td>\n",
        "      <td>0.001676</td>\n",
        "      <td>0.016414</td>\n",
        "      <td>...</td>\n",
        "      <td>0.001207</td>\n",
        "      <td>0.000122</td>\n",
        "      <td>0.000748</td>\n",
        "      <td>0.001104</td>\n",
        "      <td>0.000863</td>\n",
        "      <td>0.001259</td>\n",
        "      <td>0.020399</td>\n",
        "      <td>0.000204</td>\n",
        "      <td>0.00066</td>\n",
        "      <td>0.001159</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>2020-10-29</th>\n",
        "      <td>0.000849</td>\n",
        "      <td>0.00041</td>\n",
        "      <td>0.001127</td>\n",
        "      <td>0.017421</td>\n",
        "      <td>0.002182</td>\n",
        "      <td>0.01761</td>\n",
        "      <td>0.001411</td>\n",
        "      <td>0.006037</td>\n",
        "      <td>0.001676</td>\n",
        "      <td>0.016414</td>\n",
        "      <td>...</td>\n",
        "      <td>0.001207</td>\n",
        "      <td>0.000122</td>\n",
        "      <td>0.000748</td>\n",
        "      <td>0.001104</td>\n",
        "      <td>0.000863</td>\n",
        "      <td>0.001259</td>\n",
        "      <td>0.020399</td>\n",
        "      <td>0.000204</td>\n",
        "      <td>0.00066</td>\n",
        "      <td>0.001159</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>2020-10-30</th>\n",
        "      <td>0.000849</td>\n",
        "      <td>0.00041</td>\n",
        "      <td>0.001127</td>\n",
        "      <td>0.017421</td>\n",
        "      <td>0.002182</td>\n",
        "      <td>0.01761</td>\n",
        "      <td>0.001411</td>\n",
        "      <td>0.006037</td>\n",
        "      <td>0.001676</td>\n",
        "      <td>0.016414</td>\n",
        "      <td>...</td>\n",
        "      <td>0.001207</td>\n",
        "      <td>0.000122</td>\n",
        "      <td>0.000748</td>\n",
        "      <td>0.001104</td>\n",
        "      <td>0.000863</td>\n",
        "      <td>0.001259</td>\n",
        "      <td>0.020399</td>\n",
        "      <td>0.000204</td>\n",
        "      <td>0.00066</td>\n",
        "      <td>0.001159</td>\n",
        "    </tr>\n",
        "  </tbody>\n",
        "</table>\n",
        "<p>5 rows \u00d7 21 columns</p>\n",
        "</div>"
       ],
       "output_type": "pyout",
       "prompt_number": 18,
       "text": [
        "Country      Bahrain  Bangladesh   Bolivia    Brazil    Canada  Colombia  \\\n",
        "Date                                                                       \n",
        "2020-10-26  0.000849     0.00041  0.001127  0.017421  0.002182   0.01761   \n",
        "2020-10-27  0.000849     0.00041  0.001127  0.017421  0.002182   0.01761   \n",
        "2020-10-28  0.000849     0.00041  0.001127  0.017421  0.002182   0.01761   \n",
        "2020-10-29  0.000849     0.00041  0.001127  0.017421  0.002182   0.01761   \n",
        "2020-10-30  0.000849     0.00041  0.001127  0.017421  0.002182   0.01761   \n",
        "\n",
        "Country     Dominican Republic     Egypt    France  Honduras  ...      Iraq  \\\n",
        "Date                                                          ...             \n",
        "2020-10-26            0.001411  0.006037  0.001676  0.016414  ...  0.001207   \n",
        "2020-10-27            0.001411  0.006037  0.001676  0.016414  ...  0.001207   \n",
        "2020-10-28            0.001411  0.006037  0.001676  0.016414  ...  0.001207   \n",
        "2020-10-29            0.001411  0.006037  0.001676  0.016414  ...  0.001207   \n",
        "2020-10-30            0.001411  0.006037  0.001676  0.016414  ...  0.001207   \n",
        "\n",
        "Country        Italy    Kuwait   Nigeria      Peru    Russia      Togo  \\\n",
        "Date                                                                     \n",
        "2020-10-26  0.000122  0.000748  0.001104  0.000863  0.001259  0.020399   \n",
        "2020-10-27  0.000122  0.000748  0.001104  0.000863  0.001259  0.020399   \n",
        "2020-10-28  0.000122  0.000748  0.001104  0.000863  0.001259  0.020399   \n",
        "2020-10-29  0.000122  0.000748  0.001104  0.000863  0.001259  0.020399   \n",
        "2020-10-30  0.000122  0.000748  0.001104  0.000863  0.001259  0.020399   \n",
        "\n",
        "Country       Turkey  United Arab Emirates  United States  \n",
        "Date                                                       \n",
        "2020-10-26  0.000204               0.00066       0.001159  \n",
        "2020-10-27  0.000204               0.00066       0.001159  \n",
        "2020-10-28  0.000204               0.00066       0.001159  \n",
        "2020-10-29  0.000204               0.00066       0.001159  \n",
        "2020-10-30  0.000204               0.00066       0.001159  \n",
        "\n",
        "[5 rows x 21 columns]"
       ]
      }
     ],
     "prompt_number": 18
    },
    {
     "cell_type": "markdown",
     "metadata": {},
     "source": [
      "## (Experimental): Relationship of OxCGRT index and parameter values\n",
      "Government responses will impact on parameter values of ODE models about 14 days later. Here, we will investigate on the relationship of [stringency index (from OxCGRT)](https://github.com/OxCGRT/covid-policy-tracker/blob/master/documentation/index_methodology.md) and reproduction number/model parameters.\n"
     ]
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "%matplotlib inline\n",
      "from matplotlib import pyplot as plt\n",
      "import seaborn as sns\n",
      "import pandas as pd"
     ],
     "language": "python",
     "metadata": {},
     "outputs": [],
     "prompt_number": 19
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "df = analyser.track()\n",
      "param_cols = [\"Rt\", *cs.SIRF.PARAMETERS]\n",
      "oxcgrt_cols = oxcgrt_data.OXCGRT_VARS[:]\n",
      "cols = param_cols + oxcgrt_cols\n",
      "delay = 14\n",
      "\n",
      "for col in param_cols:\n",
      "    df[col] = pd.to_numeric(df[col], errors=\"coerce\")\n",
      "    df[col] = df.groupby(\"Country\")[col].shift(0 - delay)\n",
      "\n",
      "df = df.dropna(how=\"any\")\n",
      "df = df.loc[:, [\"Date\", \"Country\", *cols]]\n",
      "track_df = df.copy()\n",
      "track_df.info()"
     ],
     "language": "python",
     "metadata": {},
     "outputs": [
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "<class 'pandas.core.frame.DataFrame'>\n",
        "Int64Index: 70247 entries, 0 to 70526\n",
        "Data columns (total 19 columns):\n",
        " #   Column                               Non-Null Count  Dtype         \n",
        "---  ------                               --------------  -----         \n",
        " 0   Date                                 70247 non-null  datetime64[ns]\n",
        " 1   Country                              70247 non-null  object        \n",
        " 2   Rt                                   70247 non-null  float64       \n",
        " 3   theta                                70247 non-null  float64       \n",
        " 4   kappa                                70247 non-null  float64       \n",
        " 5   rho                                  70247 non-null  float64       \n",
        " 6   sigma                                70247 non-null  float64       \n",
        " 7   School_closing                       70247 non-null  int64         \n",
        " 8   Workplace_closing                    70247 non-null  int64         \n",
        " 9   Cancel_events                        70247 non-null  int64         \n",
        " 10  Gatherings_restrictions              70247 non-null  int64         \n",
        " 11  Transport_closing                    70247 non-null  int64         \n",
        " 12  Stay_home_restrictions               70247 non-null  int64         \n",
        " 13  Internal_movement_restrictions       70247 non-null  int64         \n",
        " 14  International_movement_restrictions  70247 non-null  int64         \n",
        " 15  Information_campaigns                70247 non-null  int64         \n",
        " 16  Testing_policy                       70247 non-null  int64         \n",
        " 17  Contact_tracing                      70247 non-null  int64         \n",
        " 18  Stringency_index                     70247 non-null  float64       \n",
        "dtypes: datetime64[ns](1), float64(6), int64(11), object(1)\n",
        "memory usage: 10.7+ MB\n"
       ]
      }
     ],
     "prompt_number": 20
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "# Correlation\n",
      "df = track_df.copy()\n",
      "df.corr().style.background_gradient(axis=None)"
     ],
     "language": "python",
     "metadata": {},
     "outputs": [
      {
       "html": [
        "<style  type=\"text/css\" >\n",
        "#T_f1f0c570_1ada_11eb_be9c_5254004e9a6crow0_col0,#T_f1f0c570_1ada_11eb_be9c_5254004e9a6crow1_col1,#T_f1f0c570_1ada_11eb_be9c_5254004e9a6crow2_col2,#T_f1f0c570_1ada_11eb_be9c_5254004e9a6crow3_col3,#T_f1f0c570_1ada_11eb_be9c_5254004e9a6crow4_col4,#T_f1f0c570_1ada_11eb_be9c_5254004e9a6crow5_col5,#T_f1f0c570_1ada_11eb_be9c_5254004e9a6crow6_col6,#T_f1f0c570_1ada_11eb_be9c_5254004e9a6crow7_col7,#T_f1f0c570_1ada_11eb_be9c_5254004e9a6crow8_col8,#T_f1f0c570_1ada_11eb_be9c_5254004e9a6crow9_col9,#T_f1f0c570_1ada_11eb_be9c_5254004e9a6crow10_col10,#T_f1f0c570_1ada_11eb_be9c_5254004e9a6crow11_col11,#T_f1f0c570_1ada_11eb_be9c_5254004e9a6crow12_col12,#T_f1f0c570_1ada_11eb_be9c_5254004e9a6crow13_col13,#T_f1f0c570_1ada_11eb_be9c_5254004e9a6crow14_col14,#T_f1f0c570_1ada_11eb_be9c_5254004e9a6crow15_col15,#T_f1f0c570_1ada_11eb_be9c_5254004e9a6crow16_col16{\n",
        "            background-color:  #023858;\n",
        "            color:  #f1f1f1;\n",
        "        }#T_f1f0c570_1ada_11eb_be9c_5254004e9a6crow0_col1,#T_f1f0c570_1ada_11eb_be9c_5254004e9a6crow0_col4,#T_f1f0c570_1ada_11eb_be9c_5254004e9a6crow1_col0,#T_f1f0c570_1ada_11eb_be9c_5254004e9a6crow4_col0{\n",
        "            background-color:  #efe9f3;\n",
        "            color:  #000000;\n",
        "        }#T_f1f0c570_1ada_11eb_be9c_5254004e9a6crow0_col2,#T_f1f0c570_1ada_11eb_be9c_5254004e9a6crow2_col0{\n",
        "            background-color:  #eee9f3;\n",
        "            color:  #000000;\n",
        "        }#T_f1f0c570_1ada_11eb_be9c_5254004e9a6crow0_col3,#T_f1f0c570_1ada_11eb_be9c_5254004e9a6crow3_col0{\n",
        "            background-color:  #b9c6e0;\n",
        "            color:  #000000;\n",
        "        }#T_f1f0c570_1ada_11eb_be9c_5254004e9a6crow0_col5,#T_f1f0c570_1ada_11eb_be9c_5254004e9a6crow1_col7,#T_f1f0c570_1ada_11eb_be9c_5254004e9a6crow5_col0,#T_f1f0c570_1ada_11eb_be9c_5254004e9a6crow7_col1{\n",
        "            background-color:  #e8e4f0;\n",
        "            color:  #000000;\n",
        "        }#T_f1f0c570_1ada_11eb_be9c_5254004e9a6crow0_col6,#T_f1f0c570_1ada_11eb_be9c_5254004e9a6crow0_col12,#T_f1f0c570_1ada_11eb_be9c_5254004e9a6crow2_col6,#T_f1f0c570_1ada_11eb_be9c_5254004e9a6crow6_col0,#T_f1f0c570_1ada_11eb_be9c_5254004e9a6crow6_col2,#T_f1f0c570_1ada_11eb_be9c_5254004e9a6crow12_col0{\n",
        "            background-color:  #e2dfee;\n",
        "            color:  #000000;\n",
        "        }#T_f1f0c570_1ada_11eb_be9c_5254004e9a6crow0_col7,#T_f1f0c570_1ada_11eb_be9c_5254004e9a6crow7_col0{\n",
        "            background-color:  #e0deed;\n",
        "            color:  #000000;\n",
        "        }#T_f1f0c570_1ada_11eb_be9c_5254004e9a6crow0_col8,#T_f1f0c570_1ada_11eb_be9c_5254004e9a6crow8_col0{\n",
        "            background-color:  #d5d5e8;\n",
        "            color:  #000000;\n",
        "        }#T_f1f0c570_1ada_11eb_be9c_5254004e9a6crow0_col9,#T_f1f0c570_1ada_11eb_be9c_5254004e9a6crow9_col0{\n",
        "            background-color:  #bcc7e1;\n",
        "            color:  #000000;\n",
        "        }#T_f1f0c570_1ada_11eb_be9c_5254004e9a6crow0_col10,#T_f1f0c570_1ada_11eb_be9c_5254004e9a6crow1_col16,#T_f1f0c570_1ada_11eb_be9c_5254004e9a6crow4_col10,#T_f1f0c570_1ada_11eb_be9c_5254004e9a6crow10_col0,#T_f1f0c570_1ada_11eb_be9c_5254004e9a6crow10_col4,#T_f1f0c570_1ada_11eb_be9c_5254004e9a6crow16_col1{\n",
        "            background-color:  #d9d8ea;\n",
        "            color:  #000000;\n",
        "        }#T_f1f0c570_1ada_11eb_be9c_5254004e9a6crow0_col11,#T_f1f0c570_1ada_11eb_be9c_5254004e9a6crow8_col11,#T_f1f0c570_1ada_11eb_be9c_5254004e9a6crow11_col0,#T_f1f0c570_1ada_11eb_be9c_5254004e9a6crow11_col8{\n",
        "            background-color:  #8bb2d4;\n",
        "            color:  #000000;\n",
        "        }#T_f1f0c570_1ada_11eb_be9c_5254004e9a6crow0_col13,#T_f1f0c570_1ada_11eb_be9c_5254004e9a6crow6_col11,#T_f1f0c570_1ada_11eb_be9c_5254004e9a6crow11_col6,#T_f1f0c570_1ada_11eb_be9c_5254004e9a6crow13_col0{\n",
        "            background-color:  #cccfe5;\n",
        "            color:  #000000;\n",
        "        }#T_f1f0c570_1ada_11eb_be9c_5254004e9a6crow0_col14,#T_f1f0c570_1ada_11eb_be9c_5254004e9a6crow3_col11,#T_f1f0c570_1ada_11eb_be9c_5254004e9a6crow11_col3,#T_f1f0c570_1ada_11eb_be9c_5254004e9a6crow14_col0{\n",
        "            background-color:  #dedcec;\n",
        "            color:  #000000;\n",
        "        }#T_f1f0c570_1ada_11eb_be9c_5254004e9a6crow0_col15,#T_f1f0c570_1ada_11eb_be9c_5254004e9a6crow15_col0{\n",
        "            background-color:  #dbdaeb;\n",
        "            color:  #000000;\n",
        "        }#T_f1f0c570_1ada_11eb_be9c_5254004e9a6crow0_col16,#T_f1f0c570_1ada_11eb_be9c_5254004e9a6crow16_col0{\n",
        "            background-color:  #d7d6e9;\n",
        "            color:  #000000;\n",
        "        }#T_f1f0c570_1ada_11eb_be9c_5254004e9a6crow1_col2,#T_f1f0c570_1ada_11eb_be9c_5254004e9a6crow2_col1{\n",
        "            background-color:  #023c5f;\n",
        "            color:  #f1f1f1;\n",
        "        }#T_f1f0c570_1ada_11eb_be9c_5254004e9a6crow1_col3,#T_f1f0c570_1ada_11eb_be9c_5254004e9a6crow3_col1,#T_f1f0c570_1ada_11eb_be9c_5254004e9a6crow10_col13,#T_f1f0c570_1ada_11eb_be9c_5254004e9a6crow13_col10{\n",
        "            background-color:  #0c74b2;\n",
        "            color:  #f1f1f1;\n",
        "        }#T_f1f0c570_1ada_11eb_be9c_5254004e9a6crow1_col4,#T_f1f0c570_1ada_11eb_be9c_5254004e9a6crow1_col10,#T_f1f0c570_1ada_11eb_be9c_5254004e9a6crow4_col1,#T_f1f0c570_1ada_11eb_be9c_5254004e9a6crow10_col1{\n",
        "            background-color:  #e1dfed;\n",
        "            color:  #000000;\n",
        "        }#T_f1f0c570_1ada_11eb_be9c_5254004e9a6crow1_col5,#T_f1f0c570_1ada_11eb_be9c_5254004e9a6crow5_col1{\n",
        "            background-color:  #f4eef6;\n",
        "            color:  #000000;\n",
        "        }#T_f1f0c570_1ada_11eb_be9c_5254004e9a6crow1_col6,#T_f1f0c570_1ada_11eb_be9c_5254004e9a6crow2_col16,#T_f1f0c570_1ada_11eb_be9c_5254004e9a6crow6_col1,#T_f1f0c570_1ada_11eb_be9c_5254004e9a6crow16_col2{\n",
        "            background-color:  #e0dded;\n",
        "            color:  #000000;\n",
        "        }#T_f1f0c570_1ada_11eb_be9c_5254004e9a6crow1_col8,#T_f1f0c570_1ada_11eb_be9c_5254004e9a6crow3_col13,#T_f1f0c570_1ada_11eb_be9c_5254004e9a6crow8_col1,#T_f1f0c570_1ada_11eb_be9c_5254004e9a6crow13_col3{\n",
        "            background-color:  #f8f1f8;\n",
        "            color:  #000000;\n",
        "        }#T_f1f0c570_1ada_11eb_be9c_5254004e9a6crow1_col9,#T_f1f0c570_1ada_11eb_be9c_5254004e9a6crow1_col11,#T_f1f0c570_1ada_11eb_be9c_5254004e9a6crow2_col5,#T_f1f0c570_1ada_11eb_be9c_5254004e9a6crow5_col2,#T_f1f0c570_1ada_11eb_be9c_5254004e9a6crow9_col1,#T_f1f0c570_1ada_11eb_be9c_5254004e9a6crow11_col1{\n",
        "            background-color:  #f7f0f7;\n",
        "            color:  #000000;\n",
        "        }#T_f1f0c570_1ada_11eb_be9c_5254004e9a6crow1_col12,#T_f1f0c570_1ada_11eb_be9c_5254004e9a6crow4_col11,#T_f1f0c570_1ada_11eb_be9c_5254004e9a6crow11_col4,#T_f1f0c570_1ada_11eb_be9c_5254004e9a6crow12_col1{\n",
        "            background-color:  #b3c3de;\n",
        "            color:  #000000;\n",
        "        }#T_f1f0c570_1ada_11eb_be9c_5254004e9a6crow1_col13,#T_f1f0c570_1ada_11eb_be9c_5254004e9a6crow13_col1{\n",
        "            background-color:  #fcf4fa;\n",
        "            color:  #000000;\n",
        "        }#T_f1f0c570_1ada_11eb_be9c_5254004e9a6crow1_col14,#T_f1f0c570_1ada_11eb_be9c_5254004e9a6crow14_col1{\n",
        "            background-color:  #ede7f2;\n",
        "            color:  #000000;\n",
        "        }#T_f1f0c570_1ada_11eb_be9c_5254004e9a6crow1_col15,#T_f1f0c570_1ada_11eb_be9c_5254004e9a6crow15_col1{\n",
        "            background-color:  #d3d4e7;\n",
        "            color:  #000000;\n",
        "        }#T_f1f0c570_1ada_11eb_be9c_5254004e9a6crow2_col3,#T_f1f0c570_1ada_11eb_be9c_5254004e9a6crow3_col2{\n",
        "            background-color:  #0f76b3;\n",
        "            color:  #f1f1f1;\n",
        "        }#T_f1f0c570_1ada_11eb_be9c_5254004e9a6crow2_col4,#T_f1f0c570_1ada_11eb_be9c_5254004e9a6crow2_col14,#T_f1f0c570_1ada_11eb_be9c_5254004e9a6crow3_col10,#T_f1f0c570_1ada_11eb_be9c_5254004e9a6crow4_col2,#T_f1f0c570_1ada_11eb_be9c_5254004e9a6crow10_col3,#T_f1f0c570_1ada_11eb_be9c_5254004e9a6crow14_col2{\n",
        "            background-color:  #e6e2ef;\n",
        "            color:  #000000;\n",
        "        }#T_f1f0c570_1ada_11eb_be9c_5254004e9a6crow2_col7,#T_f1f0c570_1ada_11eb_be9c_5254004e9a6crow7_col2{\n",
        "            background-color:  #ece7f2;\n",
        "            color:  #000000;\n",
        "        }#T_f1f0c570_1ada_11eb_be9c_5254004e9a6crow2_col8,#T_f1f0c570_1ada_11eb_be9c_5254004e9a6crow3_col14,#T_f1f0c570_1ada_11eb_be9c_5254004e9a6crow8_col2,#T_f1f0c570_1ada_11eb_be9c_5254004e9a6crow14_col3{\n",
        "            background-color:  #faf2f8;\n",
        "            color:  #000000;\n",
        "        }#T_f1f0c570_1ada_11eb_be9c_5254004e9a6crow2_col9,#T_f1f0c570_1ada_11eb_be9c_5254004e9a6crow2_col13,#T_f1f0c570_1ada_11eb_be9c_5254004e9a6crow9_col2,#T_f1f0c570_1ada_11eb_be9c_5254004e9a6crow13_col2{\n",
        "            background-color:  #fdf5fa;\n",
        "            color:  #000000;\n",
        "        }#T_f1f0c570_1ada_11eb_be9c_5254004e9a6crow2_col10,#T_f1f0c570_1ada_11eb_be9c_5254004e9a6crow10_col2{\n",
        "            background-color:  #e3e0ee;\n",
        "            color:  #000000;\n",
        "        }#T_f1f0c570_1ada_11eb_be9c_5254004e9a6crow2_col11,#T_f1f0c570_1ada_11eb_be9c_5254004e9a6crow11_col2{\n",
        "            background-color:  #fff7fb;\n",
        "            color:  #000000;\n",
        "        }#T_f1f0c570_1ada_11eb_be9c_5254004e9a6crow2_col12,#T_f1f0c570_1ada_11eb_be9c_5254004e9a6crow12_col2{\n",
        "            background-color:  #b0c2de;\n",
        "            color:  #000000;\n",
        "        }#T_f1f0c570_1ada_11eb_be9c_5254004e9a6crow2_col15,#T_f1f0c570_1ada_11eb_be9c_5254004e9a6crow4_col7,#T_f1f0c570_1ada_11eb_be9c_5254004e9a6crow7_col4,#T_f1f0c570_1ada_11eb_be9c_5254004e9a6crow9_col14,#T_f1f0c570_1ada_11eb_be9c_5254004e9a6crow14_col9,#T_f1f0c570_1ada_11eb_be9c_5254004e9a6crow15_col2{\n",
        "            background-color:  #d2d3e7;\n",
        "            color:  #000000;\n",
        "        }#T_f1f0c570_1ada_11eb_be9c_5254004e9a6crow3_col4,#T_f1f0c570_1ada_11eb_be9c_5254004e9a6crow4_col3{\n",
        "            background-color:  #8eb3d5;\n",
        "            color:  #000000;\n",
        "        }#T_f1f0c570_1ada_11eb_be9c_5254004e9a6crow3_col5,#T_f1f0c570_1ada_11eb_be9c_5254004e9a6crow3_col9,#T_f1f0c570_1ada_11eb_be9c_5254004e9a6crow5_col3,#T_f1f0c570_1ada_11eb_be9c_5254004e9a6crow9_col3{\n",
        "            background-color:  #f5eef6;\n",
        "            color:  #000000;\n",
        "        }#T_f1f0c570_1ada_11eb_be9c_5254004e9a6crow3_col6,#T_f1f0c570_1ada_11eb_be9c_5254004e9a6crow6_col3{\n",
        "            background-color:  #f1ebf4;\n",
        "            color:  #000000;\n",
        "        }#T_f1f0c570_1ada_11eb_be9c_5254004e9a6crow3_col7,#T_f1f0c570_1ada_11eb_be9c_5254004e9a6crow7_col3{\n",
        "            background-color:  #f2ecf5;\n",
        "            color:  #000000;\n",
        "        }#T_f1f0c570_1ada_11eb_be9c_5254004e9a6crow3_col8,#T_f1f0c570_1ada_11eb_be9c_5254004e9a6crow8_col3{\n",
        "            background-color:  #fbf3f9;\n",
        "            color:  #000000;\n",
        "        }#T_f1f0c570_1ada_11eb_be9c_5254004e9a6crow3_col12,#T_f1f0c570_1ada_11eb_be9c_5254004e9a6crow12_col3{\n",
        "            background-color:  #b4c4df;\n",
        "            color:  #000000;\n",
        "        }#T_f1f0c570_1ada_11eb_be9c_5254004e9a6crow3_col15,#T_f1f0c570_1ada_11eb_be9c_5254004e9a6crow15_col3{\n",
        "            background-color:  #f0eaf4;\n",
        "            color:  #000000;\n",
        "        }#T_f1f0c570_1ada_11eb_be9c_5254004e9a6crow3_col16,#T_f1f0c570_1ada_11eb_be9c_5254004e9a6crow4_col8,#T_f1f0c570_1ada_11eb_be9c_5254004e9a6crow8_col4,#T_f1f0c570_1ada_11eb_be9c_5254004e9a6crow16_col3{\n",
        "            background-color:  #c5cce3;\n",
        "            color:  #000000;\n",
        "        }#T_f1f0c570_1ada_11eb_be9c_5254004e9a6crow4_col5,#T_f1f0c570_1ada_11eb_be9c_5254004e9a6crow5_col4{\n",
        "            background-color:  #9cb9d9;\n",
        "            color:  #000000;\n",
        "        }#T_f1f0c570_1ada_11eb_be9c_5254004e9a6crow4_col6,#T_f1f0c570_1ada_11eb_be9c_5254004e9a6crow6_col4{\n",
        "            background-color:  #dcdaeb;\n",
        "            color:  #000000;\n",
        "        }#T_f1f0c570_1ada_11eb_be9c_5254004e9a6crow4_col9,#T_f1f0c570_1ada_11eb_be9c_5254004e9a6crow9_col4{\n",
        "            background-color:  #b7c5df;\n",
        "            color:  #000000;\n",
        "        }#T_f1f0c570_1ada_11eb_be9c_5254004e9a6crow4_col12,#T_f1f0c570_1ada_11eb_be9c_5254004e9a6crow12_col4{\n",
        "            background-color:  #a7bddb;\n",
        "            color:  #000000;\n",
        "        }#T_f1f0c570_1ada_11eb_be9c_5254004e9a6crow4_col13,#T_f1f0c570_1ada_11eb_be9c_5254004e9a6crow6_col9,#T_f1f0c570_1ada_11eb_be9c_5254004e9a6crow9_col6,#T_f1f0c570_1ada_11eb_be9c_5254004e9a6crow13_col4{\n",
        "            background-color:  #b1c2de;\n",
        "            color:  #000000;\n",
        "        }#T_f1f0c570_1ada_11eb_be9c_5254004e9a6crow4_col14,#T_f1f0c570_1ada_11eb_be9c_5254004e9a6crow14_col4{\n",
        "            background-color:  #c4cbe3;\n",
        "            color:  #000000;\n",
        "        }#T_f1f0c570_1ada_11eb_be9c_5254004e9a6crow4_col15,#T_f1f0c570_1ada_11eb_be9c_5254004e9a6crow15_col4{\n",
        "            background-color:  #e7e3f0;\n",
        "            color:  #000000;\n",
        "        }#T_f1f0c570_1ada_11eb_be9c_5254004e9a6crow4_col16,#T_f1f0c570_1ada_11eb_be9c_5254004e9a6crow16_col4{\n",
        "            background-color:  #9fbad9;\n",
        "            color:  #000000;\n",
        "        }#T_f1f0c570_1ada_11eb_be9c_5254004e9a6crow5_col6,#T_f1f0c570_1ada_11eb_be9c_5254004e9a6crow6_col5,#T_f1f0c570_1ada_11eb_be9c_5254004e9a6crow10_col16,#T_f1f0c570_1ada_11eb_be9c_5254004e9a6crow16_col10{\n",
        "            background-color:  #04649e;\n",
        "            color:  #f1f1f1;\n",
        "        }#T_f1f0c570_1ada_11eb_be9c_5254004e9a6crow5_col7,#T_f1f0c570_1ada_11eb_be9c_5254004e9a6crow7_col5{\n",
        "            background-color:  #056ba7;\n",
        "            color:  #f1f1f1;\n",
        "        }#T_f1f0c570_1ada_11eb_be9c_5254004e9a6crow5_col8,#T_f1f0c570_1ada_11eb_be9c_5254004e9a6crow8_col5{\n",
        "            background-color:  #046299;\n",
        "            color:  #f1f1f1;\n",
        "        }#T_f1f0c570_1ada_11eb_be9c_5254004e9a6crow5_col9,#T_f1f0c570_1ada_11eb_be9c_5254004e9a6crow9_col5,#T_f1f0c570_1ada_11eb_be9c_5254004e9a6crow14_col16,#T_f1f0c570_1ada_11eb_be9c_5254004e9a6crow16_col14{\n",
        "            background-color:  #76aad0;\n",
        "            color:  #000000;\n",
        "        }#T_f1f0c570_1ada_11eb_be9c_5254004e9a6crow5_col10,#T_f1f0c570_1ada_11eb_be9c_5254004e9a6crow10_col5{\n",
        "            background-color:  #0566a0;\n",
        "            color:  #f1f1f1;\n",
        "        }#T_f1f0c570_1ada_11eb_be9c_5254004e9a6crow5_col11,#T_f1f0c570_1ada_11eb_be9c_5254004e9a6crow11_col5{\n",
        "            background-color:  #8cb3d5;\n",
        "            color:  #000000;\n",
        "        }#T_f1f0c570_1ada_11eb_be9c_5254004e9a6crow5_col12,#T_f1f0c570_1ada_11eb_be9c_5254004e9a6crow12_col5{\n",
        "            background-color:  #197db7;\n",
        "            color:  #000000;\n",
        "        }#T_f1f0c570_1ada_11eb_be9c_5254004e9a6crow5_col13,#T_f1f0c570_1ada_11eb_be9c_5254004e9a6crow13_col5{\n",
        "            background-color:  #045b8f;\n",
        "            color:  #f1f1f1;\n",
        "        }#T_f1f0c570_1ada_11eb_be9c_5254004e9a6crow5_col14,#T_f1f0c570_1ada_11eb_be9c_5254004e9a6crow14_col5{\n",
        "            background-color:  #2987bc;\n",
        "            color:  #000000;\n",
        "        }#T_f1f0c570_1ada_11eb_be9c_5254004e9a6crow5_col15,#T_f1f0c570_1ada_11eb_be9c_5254004e9a6crow6_col12,#T_f1f0c570_1ada_11eb_be9c_5254004e9a6crow7_col15,#T_f1f0c570_1ada_11eb_be9c_5254004e9a6crow12_col6,#T_f1f0c570_1ada_11eb_be9c_5254004e9a6crow15_col5,#T_f1f0c570_1ada_11eb_be9c_5254004e9a6crow15_col7{\n",
        "            background-color:  #3b92c1;\n",
        "            color:  #000000;\n",
        "        }#T_f1f0c570_1ada_11eb_be9c_5254004e9a6crow5_col16,#T_f1f0c570_1ada_11eb_be9c_5254004e9a6crow16_col5{\n",
        "            background-color:  #046096;\n",
        "            color:  #f1f1f1;\n",
        "        }#T_f1f0c570_1ada_11eb_be9c_5254004e9a6crow6_col7,#T_f1f0c570_1ada_11eb_be9c_5254004e9a6crow6_col13,#T_f1f0c570_1ada_11eb_be9c_5254004e9a6crow6_col16,#T_f1f0c570_1ada_11eb_be9c_5254004e9a6crow7_col6,#T_f1f0c570_1ada_11eb_be9c_5254004e9a6crow13_col6,#T_f1f0c570_1ada_11eb_be9c_5254004e9a6crow16_col6{\n",
        "            background-color:  #056faf;\n",
        "            color:  #f1f1f1;\n",
        "        }#T_f1f0c570_1ada_11eb_be9c_5254004e9a6crow6_col8,#T_f1f0c570_1ada_11eb_be9c_5254004e9a6crow8_col6,#T_f1f0c570_1ada_11eb_be9c_5254004e9a6crow8_col10,#T_f1f0c570_1ada_11eb_be9c_5254004e9a6crow10_col8,#T_f1f0c570_1ada_11eb_be9c_5254004e9a6crow13_col16,#T_f1f0c570_1ada_11eb_be9c_5254004e9a6crow16_col13{\n",
        "            background-color:  #04639b;\n",
        "            color:  #f1f1f1;\n",
        "        }#T_f1f0c570_1ada_11eb_be9c_5254004e9a6crow6_col10,#T_f1f0c570_1ada_11eb_be9c_5254004e9a6crow10_col6{\n",
        "            background-color:  #045c90;\n",
        "            color:  #f1f1f1;\n",
        "        }#T_f1f0c570_1ada_11eb_be9c_5254004e9a6crow6_col14,#T_f1f0c570_1ada_11eb_be9c_5254004e9a6crow14_col6{\n",
        "            background-color:  #2f8bbe;\n",
        "            color:  #000000;\n",
        "        }#T_f1f0c570_1ada_11eb_be9c_5254004e9a6crow6_col15,#T_f1f0c570_1ada_11eb_be9c_5254004e9a6crow15_col6{\n",
        "            background-color:  #328dbf;\n",
        "            color:  #000000;\n",
        "        }#T_f1f0c570_1ada_11eb_be9c_5254004e9a6crow7_col8,#T_f1f0c570_1ada_11eb_be9c_5254004e9a6crow8_col7,#T_f1f0c570_1ada_11eb_be9c_5254004e9a6crow9_col11,#T_f1f0c570_1ada_11eb_be9c_5254004e9a6crow11_col9{\n",
        "            background-color:  #056dac;\n",
        "            color:  #f1f1f1;\n",
        "        }#T_f1f0c570_1ada_11eb_be9c_5254004e9a6crow7_col9,#T_f1f0c570_1ada_11eb_be9c_5254004e9a6crow9_col7{\n",
        "            background-color:  #569dc8;\n",
        "            color:  #000000;\n",
        "        }#T_f1f0c570_1ada_11eb_be9c_5254004e9a6crow7_col10,#T_f1f0c570_1ada_11eb_be9c_5254004e9a6crow10_col7{\n",
        "            background-color:  #0569a4;\n",
        "            color:  #f1f1f1;\n",
        "        }#T_f1f0c570_1ada_11eb_be9c_5254004e9a6crow7_col11,#T_f1f0c570_1ada_11eb_be9c_5254004e9a6crow11_col7{\n",
        "            background-color:  #6ba5cd;\n",
        "            color:  #000000;\n",
        "        }#T_f1f0c570_1ada_11eb_be9c_5254004e9a6crow7_col12,#T_f1f0c570_1ada_11eb_be9c_5254004e9a6crow12_col7{\n",
        "            background-color:  #4496c3;\n",
        "            color:  #000000;\n",
        "        }#T_f1f0c570_1ada_11eb_be9c_5254004e9a6crow7_col13,#T_f1f0c570_1ada_11eb_be9c_5254004e9a6crow8_col13,#T_f1f0c570_1ada_11eb_be9c_5254004e9a6crow13_col7,#T_f1f0c570_1ada_11eb_be9c_5254004e9a6crow13_col8{\n",
        "            background-color:  #0569a5;\n",
        "            color:  #f1f1f1;\n",
        "        }#T_f1f0c570_1ada_11eb_be9c_5254004e9a6crow7_col14,#T_f1f0c570_1ada_11eb_be9c_5254004e9a6crow14_col7{\n",
        "            background-color:  #6da6cd;\n",
        "            color:  #000000;\n",
        "        }#T_f1f0c570_1ada_11eb_be9c_5254004e9a6crow7_col16,#T_f1f0c570_1ada_11eb_be9c_5254004e9a6crow16_col7{\n",
        "            background-color:  #056dab;\n",
        "            color:  #f1f1f1;\n",
        "        }#T_f1f0c570_1ada_11eb_be9c_5254004e9a6crow8_col9,#T_f1f0c570_1ada_11eb_be9c_5254004e9a6crow9_col8{\n",
        "            background-color:  #79abd0;\n",
        "            color:  #000000;\n",
        "        }#T_f1f0c570_1ada_11eb_be9c_5254004e9a6crow8_col12,#T_f1f0c570_1ada_11eb_be9c_5254004e9a6crow12_col8{\n",
        "            background-color:  #2484ba;\n",
        "            color:  #000000;\n",
        "        }#T_f1f0c570_1ada_11eb_be9c_5254004e9a6crow8_col14,#T_f1f0c570_1ada_11eb_be9c_5254004e9a6crow14_col8{\n",
        "            background-color:  #2786bb;\n",
        "            color:  #000000;\n",
        "        }#T_f1f0c570_1ada_11eb_be9c_5254004e9a6crow8_col15,#T_f1f0c570_1ada_11eb_be9c_5254004e9a6crow15_col8{\n",
        "            background-color:  #4094c3;\n",
        "            color:  #000000;\n",
        "        }#T_f1f0c570_1ada_11eb_be9c_5254004e9a6crow8_col16,#T_f1f0c570_1ada_11eb_be9c_5254004e9a6crow16_col8{\n",
        "            background-color:  #0568a3;\n",
        "            color:  #f1f1f1;\n",
        "        }#T_f1f0c570_1ada_11eb_be9c_5254004e9a6crow9_col10,#T_f1f0c570_1ada_11eb_be9c_5254004e9a6crow10_col9{\n",
        "            background-color:  #80aed2;\n",
        "            color:  #000000;\n",
        "        }#T_f1f0c570_1ada_11eb_be9c_5254004e9a6crow9_col12,#T_f1f0c570_1ada_11eb_be9c_5254004e9a6crow12_col9{\n",
        "            background-color:  #afc1dd;\n",
        "            color:  #000000;\n",
        "        }#T_f1f0c570_1ada_11eb_be9c_5254004e9a6crow9_col13,#T_f1f0c570_1ada_11eb_be9c_5254004e9a6crow9_col16,#T_f1f0c570_1ada_11eb_be9c_5254004e9a6crow13_col9,#T_f1f0c570_1ada_11eb_be9c_5254004e9a6crow16_col9{\n",
        "            background-color:  #75a9cf;\n",
        "            color:  #000000;\n",
        "        }#T_f1f0c570_1ada_11eb_be9c_5254004e9a6crow9_col15,#T_f1f0c570_1ada_11eb_be9c_5254004e9a6crow15_col9{\n",
        "            background-color:  #a4bcda;\n",
        "            color:  #000000;\n",
        "        }#T_f1f0c570_1ada_11eb_be9c_5254004e9a6crow10_col11,#T_f1f0c570_1ada_11eb_be9c_5254004e9a6crow11_col10{\n",
        "            background-color:  #93b5d6;\n",
        "            color:  #000000;\n",
        "        }#T_f1f0c570_1ada_11eb_be9c_5254004e9a6crow10_col12,#T_f1f0c570_1ada_11eb_be9c_5254004e9a6crow12_col10{\n",
        "            background-color:  #2685bb;\n",
        "            color:  #000000;\n",
        "        }#T_f1f0c570_1ada_11eb_be9c_5254004e9a6crow10_col14,#T_f1f0c570_1ada_11eb_be9c_5254004e9a6crow14_col10{\n",
        "            background-color:  #5a9ec9;\n",
        "            color:  #000000;\n",
        "        }#T_f1f0c570_1ada_11eb_be9c_5254004e9a6crow10_col15,#T_f1f0c570_1ada_11eb_be9c_5254004e9a6crow15_col10{\n",
        "            background-color:  #3790c0;\n",
        "            color:  #000000;\n",
        "        }#T_f1f0c570_1ada_11eb_be9c_5254004e9a6crow11_col12,#T_f1f0c570_1ada_11eb_be9c_5254004e9a6crow12_col11{\n",
        "            background-color:  #9ab8d8;\n",
        "            color:  #000000;\n",
        "        }#T_f1f0c570_1ada_11eb_be9c_5254004e9a6crow11_col13,#T_f1f0c570_1ada_11eb_be9c_5254004e9a6crow13_col11{\n",
        "            background-color:  #6fa7ce;\n",
        "            color:  #000000;\n",
        "        }#T_f1f0c570_1ada_11eb_be9c_5254004e9a6crow11_col14,#T_f1f0c570_1ada_11eb_be9c_5254004e9a6crow14_col11{\n",
        "            background-color:  #eae6f1;\n",
        "            color:  #000000;\n",
        "        }#T_f1f0c570_1ada_11eb_be9c_5254004e9a6crow11_col15,#T_f1f0c570_1ada_11eb_be9c_5254004e9a6crow15_col11{\n",
        "            background-color:  #b8c6e0;\n",
        "            color:  #000000;\n",
        "        }#T_f1f0c570_1ada_11eb_be9c_5254004e9a6crow11_col16,#T_f1f0c570_1ada_11eb_be9c_5254004e9a6crow16_col11{\n",
        "            background-color:  #4697c4;\n",
        "            color:  #000000;\n",
        "        }#T_f1f0c570_1ada_11eb_be9c_5254004e9a6crow12_col13,#T_f1f0c570_1ada_11eb_be9c_5254004e9a6crow13_col12{\n",
        "            background-color:  #157ab5;\n",
        "            color:  #000000;\n",
        "        }#T_f1f0c570_1ada_11eb_be9c_5254004e9a6crow12_col14,#T_f1f0c570_1ada_11eb_be9c_5254004e9a6crow14_col12{\n",
        "            background-color:  #3d93c2;\n",
        "            color:  #000000;\n",
        "        }#T_f1f0c570_1ada_11eb_be9c_5254004e9a6crow12_col15,#T_f1f0c570_1ada_11eb_be9c_5254004e9a6crow15_col12{\n",
        "            background-color:  #5c9fc9;\n",
        "            color:  #000000;\n",
        "        }#T_f1f0c570_1ada_11eb_be9c_5254004e9a6crow12_col16,#T_f1f0c570_1ada_11eb_be9c_5254004e9a6crow16_col12{\n",
        "            background-color:  #0567a1;\n",
        "            color:  #f1f1f1;\n",
        "        }#T_f1f0c570_1ada_11eb_be9c_5254004e9a6crow13_col14,#T_f1f0c570_1ada_11eb_be9c_5254004e9a6crow14_col13{\n",
        "            background-color:  #1379b5;\n",
        "            color:  #f1f1f1;\n",
        "        }#T_f1f0c570_1ada_11eb_be9c_5254004e9a6crow13_col15,#T_f1f0c570_1ada_11eb_be9c_5254004e9a6crow15_col13{\n",
        "            background-color:  #1e80b8;\n",
        "            color:  #000000;\n",
        "        }#T_f1f0c570_1ada_11eb_be9c_5254004e9a6crow14_col15,#T_f1f0c570_1ada_11eb_be9c_5254004e9a6crow15_col14{\n",
        "            background-color:  #1b7eb7;\n",
        "            color:  #000000;\n",
        "        }#T_f1f0c570_1ada_11eb_be9c_5254004e9a6crow15_col16,#T_f1f0c570_1ada_11eb_be9c_5254004e9a6crow16_col15{\n",
        "            background-color:  #529bc7;\n",
        "            color:  #000000;\n",
        "        }</style><table id=\"T_f1f0c570_1ada_11eb_be9c_5254004e9a6c\" ><thead>    <tr>        <th class=\"blank level0\" ></th>        <th class=\"col_heading level0 col0\" >Rt</th>        <th class=\"col_heading level0 col1\" >theta</th>        <th class=\"col_heading level0 col2\" >kappa</th>        <th class=\"col_heading level0 col3\" >rho</th>        <th class=\"col_heading level0 col4\" >sigma</th>        <th class=\"col_heading level0 col5\" >School_closing</th>        <th class=\"col_heading level0 col6\" >Workplace_closing</th>        <th class=\"col_heading level0 col7\" >Cancel_events</th>        <th class=\"col_heading level0 col8\" >Gatherings_restrictions</th>        <th class=\"col_heading level0 col9\" >Transport_closing</th>        <th class=\"col_heading level0 col10\" >Stay_home_restrictions</th>        <th class=\"col_heading level0 col11\" >Internal_movement_restrictions</th>        <th class=\"col_heading level0 col12\" >International_movement_restrictions</th>        <th class=\"col_heading level0 col13\" >Information_campaigns</th>        <th class=\"col_heading level0 col14\" >Testing_policy</th>        <th class=\"col_heading level0 col15\" >Contact_tracing</th>        <th class=\"col_heading level0 col16\" >Stringency_index</th>    </tr></thead><tbody>\n",
        "                <tr>\n",
        "                        <th id=\"T_f1f0c570_1ada_11eb_be9c_5254004e9a6clevel0_row0\" class=\"row_heading level0 row0\" >Rt</th>\n",
        "                        <td id=\"T_f1f0c570_1ada_11eb_be9c_5254004e9a6crow0_col0\" class=\"data row0 col0\" >1.000000</td>\n",
        "                        <td id=\"T_f1f0c570_1ada_11eb_be9c_5254004e9a6crow0_col1\" class=\"data row0 col1\" >-0.204216</td>\n",
        "                        <td id=\"T_f1f0c570_1ada_11eb_be9c_5254004e9a6crow0_col2\" class=\"data row0 col2\" >-0.196877</td>\n",
        "                        <td id=\"T_f1f0c570_1ada_11eb_be9c_5254004e9a6crow0_col3\" class=\"data row0 col3\" >0.082241</td>\n",
        "                        <td id=\"T_f1f0c570_1ada_11eb_be9c_5254004e9a6crow0_col4\" class=\"data row0 col4\" >-0.203517</td>\n",
        "                        <td id=\"T_f1f0c570_1ada_11eb_be9c_5254004e9a6crow0_col5\" class=\"data row0 col5\" >-0.155708</td>\n",
        "                        <td id=\"T_f1f0c570_1ada_11eb_be9c_5254004e9a6crow0_col6\" class=\"data row0 col6\" >-0.122564</td>\n",
        "                        <td id=\"T_f1f0c570_1ada_11eb_be9c_5254004e9a6crow0_col7\" class=\"data row0 col7\" >-0.108048</td>\n",
        "                        <td id=\"T_f1f0c570_1ada_11eb_be9c_5254004e9a6crow0_col8\" class=\"data row0 col8\" >-0.041887</td>\n",
        "                        <td id=\"T_f1f0c570_1ada_11eb_be9c_5254004e9a6crow0_col9\" class=\"data row0 col9\" >0.066850</td>\n",
        "                        <td id=\"T_f1f0c570_1ada_11eb_be9c_5254004e9a6crow0_col10\" class=\"data row0 col10\" >-0.065320</td>\n",
        "                        <td id=\"T_f1f0c570_1ada_11eb_be9c_5254004e9a6crow0_col11\" class=\"data row0 col11\" >0.247645</td>\n",
        "                        <td id=\"T_f1f0c570_1ada_11eb_be9c_5254004e9a6crow0_col12\" class=\"data row0 col12\" >-0.119838</td>\n",
        "                        <td id=\"T_f1f0c570_1ada_11eb_be9c_5254004e9a6crow0_col13\" class=\"data row0 col13\" >0.004492</td>\n",
        "                        <td id=\"T_f1f0c570_1ada_11eb_be9c_5254004e9a6crow0_col14\" class=\"data row0 col14\" >-0.094348</td>\n",
        "                        <td id=\"T_f1f0c570_1ada_11eb_be9c_5254004e9a6crow0_col15\" class=\"data row0 col15\" >-0.079163</td>\n",
        "                        <td id=\"T_f1f0c570_1ada_11eb_be9c_5254004e9a6crow0_col16\" class=\"data row0 col16\" >-0.053109</td>\n",
        "            </tr>\n",
        "            <tr>\n",
        "                        <th id=\"T_f1f0c570_1ada_11eb_be9c_5254004e9a6clevel0_row1\" class=\"row_heading level0 row1\" >theta</th>\n",
        "                        <td id=\"T_f1f0c570_1ada_11eb_be9c_5254004e9a6crow1_col0\" class=\"data row1 col0\" >-0.204216</td>\n",
        "                        <td id=\"T_f1f0c570_1ada_11eb_be9c_5254004e9a6crow1_col1\" class=\"data row1 col1\" >1.000000</td>\n",
        "                        <td id=\"T_f1f0c570_1ada_11eb_be9c_5254004e9a6crow1_col2\" class=\"data row1 col2\" >0.975231</td>\n",
        "                        <td id=\"T_f1f0c570_1ada_11eb_be9c_5254004e9a6crow1_col3\" class=\"data row1 col3\" >0.639218</td>\n",
        "                        <td id=\"T_f1f0c570_1ada_11eb_be9c_5254004e9a6crow1_col4\" class=\"data row1 col4\" >-0.114299</td>\n",
        "                        <td id=\"T_f1f0c570_1ada_11eb_be9c_5254004e9a6crow1_col5\" class=\"data row1 col5\" >-0.251794</td>\n",
        "                        <td id=\"T_f1f0c570_1ada_11eb_be9c_5254004e9a6crow1_col6\" class=\"data row1 col6\" >-0.107112</td>\n",
        "                        <td id=\"T_f1f0c570_1ada_11eb_be9c_5254004e9a6crow1_col7\" class=\"data row1 col7\" >-0.159760</td>\n",
        "                        <td id=\"T_f1f0c570_1ada_11eb_be9c_5254004e9a6crow1_col8\" class=\"data row1 col8\" >-0.289155</td>\n",
        "                        <td id=\"T_f1f0c570_1ada_11eb_be9c_5254004e9a6crow1_col9\" class=\"data row1 col9\" >-0.273870</td>\n",
        "                        <td id=\"T_f1f0c570_1ada_11eb_be9c_5254004e9a6crow1_col10\" class=\"data row1 col10\" >-0.116684</td>\n",
        "                        <td id=\"T_f1f0c570_1ada_11eb_be9c_5254004e9a6crow1_col11\" class=\"data row1 col11\" >-0.277610</td>\n",
        "                        <td id=\"T_f1f0c570_1ada_11eb_be9c_5254004e9a6crow1_col12\" class=\"data row1 col12\" >0.106291</td>\n",
        "                        <td id=\"T_f1f0c570_1ada_11eb_be9c_5254004e9a6crow1_col13\" class=\"data row1 col13\" >-0.318533</td>\n",
        "                        <td id=\"T_f1f0c570_1ada_11eb_be9c_5254004e9a6crow1_col14\" class=\"data row1 col14\" >-0.185038</td>\n",
        "                        <td id=\"T_f1f0c570_1ada_11eb_be9c_5254004e9a6crow1_col15\" class=\"data row1 col15\" >-0.031338</td>\n",
        "                        <td id=\"T_f1f0c570_1ada_11eb_be9c_5254004e9a6crow1_col16\" class=\"data row1 col16\" >-0.068665</td>\n",
        "            </tr>\n",
        "            <tr>\n",
        "                        <th id=\"T_f1f0c570_1ada_11eb_be9c_5254004e9a6clevel0_row2\" class=\"row_heading level0 row2\" >kappa</th>\n",
        "                        <td id=\"T_f1f0c570_1ada_11eb_be9c_5254004e9a6crow2_col0\" class=\"data row2 col0\" >-0.196877</td>\n",
        "                        <td id=\"T_f1f0c570_1ada_11eb_be9c_5254004e9a6crow2_col1\" class=\"data row2 col1\" >0.975231</td>\n",
        "                        <td id=\"T_f1f0c570_1ada_11eb_be9c_5254004e9a6crow2_col2\" class=\"data row2 col2\" >1.000000</td>\n",
        "                        <td id=\"T_f1f0c570_1ada_11eb_be9c_5254004e9a6crow2_col3\" class=\"data row2 col3\" >0.626657</td>\n",
        "                        <td id=\"T_f1f0c570_1ada_11eb_be9c_5254004e9a6crow2_col4\" class=\"data row2 col4\" >-0.139249</td>\n",
        "                        <td id=\"T_f1f0c570_1ada_11eb_be9c_5254004e9a6crow2_col5\" class=\"data row2 col5\" >-0.275444</td>\n",
        "                        <td id=\"T_f1f0c570_1ada_11eb_be9c_5254004e9a6crow2_col6\" class=\"data row2 col6\" >-0.121881</td>\n",
        "                        <td id=\"T_f1f0c570_1ada_11eb_be9c_5254004e9a6crow2_col7\" class=\"data row2 col7\" >-0.180030</td>\n",
        "                        <td id=\"T_f1f0c570_1ada_11eb_be9c_5254004e9a6crow2_col8\" class=\"data row2 col8\" >-0.297763</td>\n",
        "                        <td id=\"T_f1f0c570_1ada_11eb_be9c_5254004e9a6crow2_col9\" class=\"data row2 col9\" >-0.326851</td>\n",
        "                        <td id=\"T_f1f0c570_1ada_11eb_be9c_5254004e9a6crow2_col10\" class=\"data row2 col10\" >-0.127077</td>\n",
        "                        <td id=\"T_f1f0c570_1ada_11eb_be9c_5254004e9a6crow2_col11\" class=\"data row2 col11\" >-0.349746</td>\n",
        "                        <td id=\"T_f1f0c570_1ada_11eb_be9c_5254004e9a6crow2_col12\" class=\"data row2 col12\" >0.117422</td>\n",
        "                        <td id=\"T_f1f0c570_1ada_11eb_be9c_5254004e9a6crow2_col13\" class=\"data row2 col13\" >-0.329019</td>\n",
        "                        <td id=\"T_f1f0c570_1ada_11eb_be9c_5254004e9a6crow2_col14\" class=\"data row2 col14\" >-0.141219</td>\n",
        "                        <td id=\"T_f1f0c570_1ada_11eb_be9c_5254004e9a6crow2_col15\" class=\"data row2 col15\" >-0.024158</td>\n",
        "                        <td id=\"T_f1f0c570_1ada_11eb_be9c_5254004e9a6crow2_col16\" class=\"data row2 col16\" >-0.105696</td>\n",
        "            </tr>\n",
        "            <tr>\n",
        "                        <th id=\"T_f1f0c570_1ada_11eb_be9c_5254004e9a6clevel0_row3\" class=\"row_heading level0 row3\" >rho</th>\n",
        "                        <td id=\"T_f1f0c570_1ada_11eb_be9c_5254004e9a6crow3_col0\" class=\"data row3 col0\" >0.082241</td>\n",
        "                        <td id=\"T_f1f0c570_1ada_11eb_be9c_5254004e9a6crow3_col1\" class=\"data row3 col1\" >0.639218</td>\n",
        "                        <td id=\"T_f1f0c570_1ada_11eb_be9c_5254004e9a6crow3_col2\" class=\"data row3 col2\" >0.626657</td>\n",
        "                        <td id=\"T_f1f0c570_1ada_11eb_be9c_5254004e9a6crow3_col3\" class=\"data row3 col3\" >1.000000</td>\n",
        "                        <td id=\"T_f1f0c570_1ada_11eb_be9c_5254004e9a6crow3_col4\" class=\"data row3 col4\" >0.240635</td>\n",
        "                        <td id=\"T_f1f0c570_1ada_11eb_be9c_5254004e9a6crow3_col5\" class=\"data row3 col5\" >-0.258769</td>\n",
        "                        <td id=\"T_f1f0c570_1ada_11eb_be9c_5254004e9a6crow3_col6\" class=\"data row3 col6\" >-0.219489</td>\n",
        "                        <td id=\"T_f1f0c570_1ada_11eb_be9c_5254004e9a6crow3_col7\" class=\"data row3 col7\" >-0.233120</td>\n",
        "                        <td id=\"T_f1f0c570_1ada_11eb_be9c_5254004e9a6crow3_col8\" class=\"data row3 col8\" >-0.309731</td>\n",
        "                        <td id=\"T_f1f0c570_1ada_11eb_be9c_5254004e9a6crow3_col9\" class=\"data row3 col9\" >-0.259161</td>\n",
        "                        <td id=\"T_f1f0c570_1ada_11eb_be9c_5254004e9a6crow3_col10\" class=\"data row3 col10\" >-0.139793</td>\n",
        "                        <td id=\"T_f1f0c570_1ada_11eb_be9c_5254004e9a6crow3_col11\" class=\"data row3 col11\" >-0.095736</td>\n",
        "                        <td id=\"T_f1f0c570_1ada_11eb_be9c_5254004e9a6crow3_col12\" class=\"data row3 col12\" >0.100385</td>\n",
        "                        <td id=\"T_f1f0c570_1ada_11eb_be9c_5254004e9a6crow3_col13\" class=\"data row3 col13\" >-0.291342</td>\n",
        "                        <td id=\"T_f1f0c570_1ada_11eb_be9c_5254004e9a6crow3_col14\" class=\"data row3 col14\" >-0.300032</td>\n",
        "                        <td id=\"T_f1f0c570_1ada_11eb_be9c_5254004e9a6crow3_col15\" class=\"data row3 col15\" >-0.216684</td>\n",
        "                        <td id=\"T_f1f0c570_1ada_11eb_be9c_5254004e9a6crow3_col16\" class=\"data row3 col16\" >0.031372</td>\n",
        "            </tr>\n",
        "            <tr>\n",
        "                        <th id=\"T_f1f0c570_1ada_11eb_be9c_5254004e9a6clevel0_row4\" class=\"row_heading level0 row4\" >sigma</th>\n",
        "                        <td id=\"T_f1f0c570_1ada_11eb_be9c_5254004e9a6crow4_col0\" class=\"data row4 col0\" >-0.203517</td>\n",
        "                        <td id=\"T_f1f0c570_1ada_11eb_be9c_5254004e9a6crow4_col1\" class=\"data row4 col1\" >-0.114299</td>\n",
        "                        <td id=\"T_f1f0c570_1ada_11eb_be9c_5254004e9a6crow4_col2\" class=\"data row4 col2\" >-0.139249</td>\n",
        "                        <td id=\"T_f1f0c570_1ada_11eb_be9c_5254004e9a6crow4_col3\" class=\"data row4 col3\" >0.240635</td>\n",
        "                        <td id=\"T_f1f0c570_1ada_11eb_be9c_5254004e9a6crow4_col4\" class=\"data row4 col4\" >1.000000</td>\n",
        "                        <td id=\"T_f1f0c570_1ada_11eb_be9c_5254004e9a6crow4_col5\" class=\"data row4 col5\" >0.191370</td>\n",
        "                        <td id=\"T_f1f0c570_1ada_11eb_be9c_5254004e9a6crow4_col6\" class=\"data row4 col6\" >-0.085672</td>\n",
        "                        <td id=\"T_f1f0c570_1ada_11eb_be9c_5254004e9a6crow4_col7\" class=\"data row4 col7\" >-0.026812</td>\n",
        "                        <td id=\"T_f1f0c570_1ada_11eb_be9c_5254004e9a6crow4_col8\" class=\"data row4 col8\" >0.034026</td>\n",
        "                        <td id=\"T_f1f0c570_1ada_11eb_be9c_5254004e9a6crow4_col9\" class=\"data row4 col9\" >0.088893</td>\n",
        "                        <td id=\"T_f1f0c570_1ada_11eb_be9c_5254004e9a6crow4_col10\" class=\"data row4 col10\" >-0.062186</td>\n",
        "                        <td id=\"T_f1f0c570_1ada_11eb_be9c_5254004e9a6crow4_col11\" class=\"data row4 col11\" >0.104663</td>\n",
        "                        <td id=\"T_f1f0c570_1ada_11eb_be9c_5254004e9a6crow4_col12\" class=\"data row4 col12\" >0.156122</td>\n",
        "                        <td id=\"T_f1f0c570_1ada_11eb_be9c_5254004e9a6crow4_col13\" class=\"data row4 col13\" >0.110497</td>\n",
        "                        <td id=\"T_f1f0c570_1ada_11eb_be9c_5254004e9a6crow4_col14\" class=\"data row4 col14\" >0.038561</td>\n",
        "                        <td id=\"T_f1f0c570_1ada_11eb_be9c_5254004e9a6crow4_col15\" class=\"data row4 col15\" >-0.144696</td>\n",
        "                        <td id=\"T_f1f0c570_1ada_11eb_be9c_5254004e9a6crow4_col16\" class=\"data row4 col16\" >0.179444</td>\n",
        "            </tr>\n",
        "            <tr>\n",
        "                        <th id=\"T_f1f0c570_1ada_11eb_be9c_5254004e9a6clevel0_row5\" class=\"row_heading level0 row5\" >School_closing</th>\n",
        "                        <td id=\"T_f1f0c570_1ada_11eb_be9c_5254004e9a6crow5_col0\" class=\"data row5 col0\" >-0.155708</td>\n",
        "                        <td id=\"T_f1f0c570_1ada_11eb_be9c_5254004e9a6crow5_col1\" class=\"data row5 col1\" >-0.251794</td>\n",
        "                        <td id=\"T_f1f0c570_1ada_11eb_be9c_5254004e9a6crow5_col2\" class=\"data row5 col2\" >-0.275444</td>\n",
        "                        <td id=\"T_f1f0c570_1ada_11eb_be9c_5254004e9a6crow5_col3\" class=\"data row5 col3\" >-0.258769</td>\n",
        "                        <td id=\"T_f1f0c570_1ada_11eb_be9c_5254004e9a6crow5_col4\" class=\"data row5 col4\" >0.191370</td>\n",
        "                        <td id=\"T_f1f0c570_1ada_11eb_be9c_5254004e9a6crow5_col5\" class=\"data row5 col5\" >1.000000</td>\n",
        "                        <td id=\"T_f1f0c570_1ada_11eb_be9c_5254004e9a6crow5_col6\" class=\"data row5 col6\" >0.747408</td>\n",
        "                        <td id=\"T_f1f0c570_1ada_11eb_be9c_5254004e9a6crow5_col7\" class=\"data row5 col7\" >0.701881</td>\n",
        "                        <td id=\"T_f1f0c570_1ada_11eb_be9c_5254004e9a6crow5_col8\" class=\"data row5 col8\" >0.771796</td>\n",
        "                        <td id=\"T_f1f0c570_1ada_11eb_be9c_5254004e9a6crow5_col9\" class=\"data row5 col9\" >0.316071</td>\n",
        "                        <td id=\"T_f1f0c570_1ada_11eb_be9c_5254004e9a6crow5_col10\" class=\"data row5 col10\" >0.738324</td>\n",
        "                        <td id=\"T_f1f0c570_1ada_11eb_be9c_5254004e9a6crow5_col11\" class=\"data row5 col11\" >0.245532</td>\n",
        "                        <td id=\"T_f1f0c570_1ada_11eb_be9c_5254004e9a6crow5_col12\" class=\"data row5 col12\" >0.589440</td>\n",
        "                        <td id=\"T_f1f0c570_1ada_11eb_be9c_5254004e9a6crow5_col13\" class=\"data row5 col13\" >0.819244</td>\n",
        "                        <td id=\"T_f1f0c570_1ada_11eb_be9c_5254004e9a6crow5_col14\" class=\"data row5 col14\" >0.539334</td>\n",
        "                        <td id=\"T_f1f0c570_1ada_11eb_be9c_5254004e9a6crow5_col15\" class=\"data row5 col15\" >0.479478</td>\n",
        "                        <td id=\"T_f1f0c570_1ada_11eb_be9c_5254004e9a6crow5_col16\" class=\"data row5 col16\" >0.786566</td>\n",
        "            </tr>\n",
        "            <tr>\n",
        "                        <th id=\"T_f1f0c570_1ada_11eb_be9c_5254004e9a6clevel0_row6\" class=\"row_heading level0 row6\" >Workplace_closing</th>\n",
        "                        <td id=\"T_f1f0c570_1ada_11eb_be9c_5254004e9a6crow6_col0\" class=\"data row6 col0\" >-0.122564</td>\n",
        "                        <td id=\"T_f1f0c570_1ada_11eb_be9c_5254004e9a6crow6_col1\" class=\"data row6 col1\" >-0.107112</td>\n",
        "                        <td id=\"T_f1f0c570_1ada_11eb_be9c_5254004e9a6crow6_col2\" class=\"data row6 col2\" >-0.121881</td>\n",
        "                        <td id=\"T_f1f0c570_1ada_11eb_be9c_5254004e9a6crow6_col3\" class=\"data row6 col3\" >-0.219489</td>\n",
        "                        <td id=\"T_f1f0c570_1ada_11eb_be9c_5254004e9a6crow6_col4\" class=\"data row6 col4\" >-0.085672</td>\n",
        "                        <td id=\"T_f1f0c570_1ada_11eb_be9c_5254004e9a6crow6_col5\" class=\"data row6 col5\" >0.747408</td>\n",
        "                        <td id=\"T_f1f0c570_1ada_11eb_be9c_5254004e9a6crow6_col6\" class=\"data row6 col6\" >1.000000</td>\n",
        "                        <td id=\"T_f1f0c570_1ada_11eb_be9c_5254004e9a6crow6_col7\" class=\"data row6 col7\" >0.664700</td>\n",
        "                        <td id=\"T_f1f0c570_1ada_11eb_be9c_5254004e9a6crow6_col8\" class=\"data row6 col8\" >0.762348</td>\n",
        "                        <td id=\"T_f1f0c570_1ada_11eb_be9c_5254004e9a6crow6_col9\" class=\"data row6 col9\" >0.111436</td>\n",
        "                        <td id=\"T_f1f0c570_1ada_11eb_be9c_5254004e9a6crow6_col10\" class=\"data row6 col10\" >0.812018</td>\n",
        "                        <td id=\"T_f1f0c570_1ada_11eb_be9c_5254004e9a6crow6_col11\" class=\"data row6 col11\" >0.003674</td>\n",
        "                        <td id=\"T_f1f0c570_1ada_11eb_be9c_5254004e9a6crow6_col12\" class=\"data row6 col12\" >0.480952</td>\n",
        "                        <td id=\"T_f1f0c570_1ada_11eb_be9c_5254004e9a6crow6_col13\" class=\"data row6 col13\" >0.665552</td>\n",
        "                        <td id=\"T_f1f0c570_1ada_11eb_be9c_5254004e9a6crow6_col14\" class=\"data row6 col14\" >0.517922</td>\n",
        "                        <td id=\"T_f1f0c570_1ada_11eb_be9c_5254004e9a6crow6_col15\" class=\"data row6 col15\" >0.504933</td>\n",
        "                        <td id=\"T_f1f0c570_1ada_11eb_be9c_5254004e9a6crow6_col16\" class=\"data row6 col16\" >0.667461</td>\n",
        "            </tr>\n",
        "            <tr>\n",
        "                        <th id=\"T_f1f0c570_1ada_11eb_be9c_5254004e9a6clevel0_row7\" class=\"row_heading level0 row7\" >Cancel_events</th>\n",
        "                        <td id=\"T_f1f0c570_1ada_11eb_be9c_5254004e9a6crow7_col0\" class=\"data row7 col0\" >-0.108048</td>\n",
        "                        <td id=\"T_f1f0c570_1ada_11eb_be9c_5254004e9a6crow7_col1\" class=\"data row7 col1\" >-0.159760</td>\n",
        "                        <td id=\"T_f1f0c570_1ada_11eb_be9c_5254004e9a6crow7_col2\" class=\"data row7 col2\" >-0.180030</td>\n",
        "                        <td id=\"T_f1f0c570_1ada_11eb_be9c_5254004e9a6crow7_col3\" class=\"data row7 col3\" >-0.233120</td>\n",
        "                        <td id=\"T_f1f0c570_1ada_11eb_be9c_5254004e9a6crow7_col4\" class=\"data row7 col4\" >-0.026812</td>\n",
        "                        <td id=\"T_f1f0c570_1ada_11eb_be9c_5254004e9a6crow7_col5\" class=\"data row7 col5\" >0.701881</td>\n",
        "                        <td id=\"T_f1f0c570_1ada_11eb_be9c_5254004e9a6crow7_col6\" class=\"data row7 col6\" >0.664700</td>\n",
        "                        <td id=\"T_f1f0c570_1ada_11eb_be9c_5254004e9a6crow7_col7\" class=\"data row7 col7\" >1.000000</td>\n",
        "                        <td id=\"T_f1f0c570_1ada_11eb_be9c_5254004e9a6crow7_col8\" class=\"data row7 col8\" >0.678457</td>\n",
        "                        <td id=\"T_f1f0c570_1ada_11eb_be9c_5254004e9a6crow7_col9\" class=\"data row7 col9\" >0.405028</td>\n",
        "                        <td id=\"T_f1f0c570_1ada_11eb_be9c_5254004e9a6crow7_col10\" class=\"data row7 col10\" >0.716528</td>\n",
        "                        <td id=\"T_f1f0c570_1ada_11eb_be9c_5254004e9a6crow7_col11\" class=\"data row7 col11\" >0.346401</td>\n",
        "                        <td id=\"T_f1f0c570_1ada_11eb_be9c_5254004e9a6crow7_col12\" class=\"data row7 col12\" >0.452001</td>\n",
        "                        <td id=\"T_f1f0c570_1ada_11eb_be9c_5254004e9a6crow7_col13\" class=\"data row7 col13\" >0.712828</td>\n",
        "                        <td id=\"T_f1f0c570_1ada_11eb_be9c_5254004e9a6crow7_col14\" class=\"data row7 col14\" >0.345182</td>\n",
        "                        <td id=\"T_f1f0c570_1ada_11eb_be9c_5254004e9a6crow7_col15\" class=\"data row7 col15\" >0.478668</td>\n",
        "                        <td id=\"T_f1f0c570_1ada_11eb_be9c_5254004e9a6crow7_col16\" class=\"data row7 col16\" >0.687091</td>\n",
        "            </tr>\n",
        "            <tr>\n",
        "                        <th id=\"T_f1f0c570_1ada_11eb_be9c_5254004e9a6clevel0_row8\" class=\"row_heading level0 row8\" >Gatherings_restrictions</th>\n",
        "                        <td id=\"T_f1f0c570_1ada_11eb_be9c_5254004e9a6crow8_col0\" class=\"data row8 col0\" >-0.041887</td>\n",
        "                        <td id=\"T_f1f0c570_1ada_11eb_be9c_5254004e9a6crow8_col1\" class=\"data row8 col1\" >-0.289155</td>\n",
        "                        <td id=\"T_f1f0c570_1ada_11eb_be9c_5254004e9a6crow8_col2\" class=\"data row8 col2\" >-0.297763</td>\n",
        "                        <td id=\"T_f1f0c570_1ada_11eb_be9c_5254004e9a6crow8_col3\" class=\"data row8 col3\" >-0.309731</td>\n",
        "                        <td id=\"T_f1f0c570_1ada_11eb_be9c_5254004e9a6crow8_col4\" class=\"data row8 col4\" >0.034026</td>\n",
        "                        <td id=\"T_f1f0c570_1ada_11eb_be9c_5254004e9a6crow8_col5\" class=\"data row8 col5\" >0.771796</td>\n",
        "                        <td id=\"T_f1f0c570_1ada_11eb_be9c_5254004e9a6crow8_col6\" class=\"data row8 col6\" >0.762348</td>\n",
        "                        <td id=\"T_f1f0c570_1ada_11eb_be9c_5254004e9a6crow8_col7\" class=\"data row8 col7\" >0.678457</td>\n",
        "                        <td id=\"T_f1f0c570_1ada_11eb_be9c_5254004e9a6crow8_col8\" class=\"data row8 col8\" >1.000000</td>\n",
        "                        <td id=\"T_f1f0c570_1ada_11eb_be9c_5254004e9a6crow8_col9\" class=\"data row8 col9\" >0.308944</td>\n",
        "                        <td id=\"T_f1f0c570_1ada_11eb_be9c_5254004e9a6crow8_col10\" class=\"data row8 col10\" >0.758150</td>\n",
        "                        <td id=\"T_f1f0c570_1ada_11eb_be9c_5254004e9a6crow8_col11\" class=\"data row8 col11\" >0.248698</td>\n",
        "                        <td id=\"T_f1f0c570_1ada_11eb_be9c_5254004e9a6crow8_col12\" class=\"data row8 col12\" >0.554035</td>\n",
        "                        <td id=\"T_f1f0c570_1ada_11eb_be9c_5254004e9a6crow8_col13\" class=\"data row8 col13\" >0.713616</td>\n",
        "                        <td id=\"T_f1f0c570_1ada_11eb_be9c_5254004e9a6crow8_col14\" class=\"data row8 col14\" >0.543944</td>\n",
        "                        <td id=\"T_f1f0c570_1ada_11eb_be9c_5254004e9a6crow8_col15\" class=\"data row8 col15\" >0.464713</td>\n",
        "                        <td id=\"T_f1f0c570_1ada_11eb_be9c_5254004e9a6crow8_col16\" class=\"data row8 col16\" >0.720972</td>\n",
        "            </tr>\n",
        "            <tr>\n",
        "                        <th id=\"T_f1f0c570_1ada_11eb_be9c_5254004e9a6clevel0_row9\" class=\"row_heading level0 row9\" >Transport_closing</th>\n",
        "                        <td id=\"T_f1f0c570_1ada_11eb_be9c_5254004e9a6crow9_col0\" class=\"data row9 col0\" >0.066850</td>\n",
        "                        <td id=\"T_f1f0c570_1ada_11eb_be9c_5254004e9a6crow9_col1\" class=\"data row9 col1\" >-0.273870</td>\n",
        "                        <td id=\"T_f1f0c570_1ada_11eb_be9c_5254004e9a6crow9_col2\" class=\"data row9 col2\" >-0.326851</td>\n",
        "                        <td id=\"T_f1f0c570_1ada_11eb_be9c_5254004e9a6crow9_col3\" class=\"data row9 col3\" >-0.259161</td>\n",
        "                        <td id=\"T_f1f0c570_1ada_11eb_be9c_5254004e9a6crow9_col4\" class=\"data row9 col4\" >0.088893</td>\n",
        "                        <td id=\"T_f1f0c570_1ada_11eb_be9c_5254004e9a6crow9_col5\" class=\"data row9 col5\" >0.316071</td>\n",
        "                        <td id=\"T_f1f0c570_1ada_11eb_be9c_5254004e9a6crow9_col6\" class=\"data row9 col6\" >0.111436</td>\n",
        "                        <td id=\"T_f1f0c570_1ada_11eb_be9c_5254004e9a6crow9_col7\" class=\"data row9 col7\" >0.405028</td>\n",
        "                        <td id=\"T_f1f0c570_1ada_11eb_be9c_5254004e9a6crow9_col8\" class=\"data row9 col8\" >0.308944</td>\n",
        "                        <td id=\"T_f1f0c570_1ada_11eb_be9c_5254004e9a6crow9_col9\" class=\"data row9 col9\" >1.000000</td>\n",
        "                        <td id=\"T_f1f0c570_1ada_11eb_be9c_5254004e9a6crow9_col10\" class=\"data row9 col10\" >0.285243</td>\n",
        "                        <td id=\"T_f1f0c570_1ada_11eb_be9c_5254004e9a6crow9_col11\" class=\"data row9 col11\" >0.682379</td>\n",
        "                        <td id=\"T_f1f0c570_1ada_11eb_be9c_5254004e9a6crow9_col12\" class=\"data row9 col12\" >0.123245</td>\n",
        "                        <td id=\"T_f1f0c570_1ada_11eb_be9c_5254004e9a6crow9_col13\" class=\"data row9 col13\" >0.323215</td>\n",
        "                        <td id=\"T_f1f0c570_1ada_11eb_be9c_5254004e9a6crow9_col14\" class=\"data row9 col14\" >-0.027358</td>\n",
        "                        <td id=\"T_f1f0c570_1ada_11eb_be9c_5254004e9a6crow9_col15\" class=\"data row9 col15\" >0.163539</td>\n",
        "                        <td id=\"T_f1f0c570_1ada_11eb_be9c_5254004e9a6crow9_col16\" class=\"data row9 col16\" >0.320010</td>\n",
        "            </tr>\n",
        "            <tr>\n",
        "                        <th id=\"T_f1f0c570_1ada_11eb_be9c_5254004e9a6clevel0_row10\" class=\"row_heading level0 row10\" >Stay_home_restrictions</th>\n",
        "                        <td id=\"T_f1f0c570_1ada_11eb_be9c_5254004e9a6crow10_col0\" class=\"data row10 col0\" >-0.065320</td>\n",
        "                        <td id=\"T_f1f0c570_1ada_11eb_be9c_5254004e9a6crow10_col1\" class=\"data row10 col1\" >-0.116684</td>\n",
        "                        <td id=\"T_f1f0c570_1ada_11eb_be9c_5254004e9a6crow10_col2\" class=\"data row10 col2\" >-0.127077</td>\n",
        "                        <td id=\"T_f1f0c570_1ada_11eb_be9c_5254004e9a6crow10_col3\" class=\"data row10 col3\" >-0.139793</td>\n",
        "                        <td id=\"T_f1f0c570_1ada_11eb_be9c_5254004e9a6crow10_col4\" class=\"data row10 col4\" >-0.062186</td>\n",
        "                        <td id=\"T_f1f0c570_1ada_11eb_be9c_5254004e9a6crow10_col5\" class=\"data row10 col5\" >0.738324</td>\n",
        "                        <td id=\"T_f1f0c570_1ada_11eb_be9c_5254004e9a6crow10_col6\" class=\"data row10 col6\" >0.812018</td>\n",
        "                        <td id=\"T_f1f0c570_1ada_11eb_be9c_5254004e9a6crow10_col7\" class=\"data row10 col7\" >0.716528</td>\n",
        "                        <td id=\"T_f1f0c570_1ada_11eb_be9c_5254004e9a6crow10_col8\" class=\"data row10 col8\" >0.758150</td>\n",
        "                        <td id=\"T_f1f0c570_1ada_11eb_be9c_5254004e9a6crow10_col9\" class=\"data row10 col9\" >0.285243</td>\n",
        "                        <td id=\"T_f1f0c570_1ada_11eb_be9c_5254004e9a6crow10_col10\" class=\"data row10 col10\" >1.000000</td>\n",
        "                        <td id=\"T_f1f0c570_1ada_11eb_be9c_5254004e9a6crow10_col11\" class=\"data row10 col11\" >0.221658</td>\n",
        "                        <td id=\"T_f1f0c570_1ada_11eb_be9c_5254004e9a6crow10_col12\" class=\"data row10 col12\" >0.547094</td>\n",
        "                        <td id=\"T_f1f0c570_1ada_11eb_be9c_5254004e9a6crow10_col13\" class=\"data row10 col13\" >0.638240</td>\n",
        "                        <td id=\"T_f1f0c570_1ada_11eb_be9c_5254004e9a6crow10_col14\" class=\"data row10 col14\" >0.395139</td>\n",
        "                        <td id=\"T_f1f0c570_1ada_11eb_be9c_5254004e9a6crow10_col15\" class=\"data row10 col15\" >0.489230</td>\n",
        "                        <td id=\"T_f1f0c570_1ada_11eb_be9c_5254004e9a6crow10_col16\" class=\"data row10 col16\" >0.749946</td>\n",
        "            </tr>\n",
        "            <tr>\n",
        "                        <th id=\"T_f1f0c570_1ada_11eb_be9c_5254004e9a6clevel0_row11\" class=\"row_heading level0 row11\" >Internal_movement_restrictions</th>\n",
        "                        <td id=\"T_f1f0c570_1ada_11eb_be9c_5254004e9a6crow11_col0\" class=\"data row11 col0\" >0.247645</td>\n",
        "                        <td id=\"T_f1f0c570_1ada_11eb_be9c_5254004e9a6crow11_col1\" class=\"data row11 col1\" >-0.277610</td>\n",
        "                        <td id=\"T_f1f0c570_1ada_11eb_be9c_5254004e9a6crow11_col2\" class=\"data row11 col2\" >-0.349746</td>\n",
        "                        <td id=\"T_f1f0c570_1ada_11eb_be9c_5254004e9a6crow11_col3\" class=\"data row11 col3\" >-0.095736</td>\n",
        "                        <td id=\"T_f1f0c570_1ada_11eb_be9c_5254004e9a6crow11_col4\" class=\"data row11 col4\" >0.104663</td>\n",
        "                        <td id=\"T_f1f0c570_1ada_11eb_be9c_5254004e9a6crow11_col5\" class=\"data row11 col5\" >0.245532</td>\n",
        "                        <td id=\"T_f1f0c570_1ada_11eb_be9c_5254004e9a6crow11_col6\" class=\"data row11 col6\" >0.003674</td>\n",
        "                        <td id=\"T_f1f0c570_1ada_11eb_be9c_5254004e9a6crow11_col7\" class=\"data row11 col7\" >0.346401</td>\n",
        "                        <td id=\"T_f1f0c570_1ada_11eb_be9c_5254004e9a6crow11_col8\" class=\"data row11 col8\" >0.248698</td>\n",
        "                        <td id=\"T_f1f0c570_1ada_11eb_be9c_5254004e9a6crow11_col9\" class=\"data row11 col9\" >0.682379</td>\n",
        "                        <td id=\"T_f1f0c570_1ada_11eb_be9c_5254004e9a6crow11_col10\" class=\"data row11 col10\" >0.221658</td>\n",
        "                        <td id=\"T_f1f0c570_1ada_11eb_be9c_5254004e9a6crow11_col11\" class=\"data row11 col11\" >1.000000</td>\n",
        "                        <td id=\"T_f1f0c570_1ada_11eb_be9c_5254004e9a6crow11_col12\" class=\"data row11 col12\" >0.194072</td>\n",
        "                        <td id=\"T_f1f0c570_1ada_11eb_be9c_5254004e9a6crow11_col13\" class=\"data row11 col13\" >0.338314</td>\n",
        "                        <td id=\"T_f1f0c570_1ada_11eb_be9c_5254004e9a6crow11_col14\" class=\"data row11 col14\" >-0.166546</td>\n",
        "                        <td id=\"T_f1f0c570_1ada_11eb_be9c_5254004e9a6crow11_col15\" class=\"data row11 col15\" >0.086789</td>\n",
        "                        <td id=\"T_f1f0c570_1ada_11eb_be9c_5254004e9a6crow11_col16\" class=\"data row11 col16\" >0.451149</td>\n",
        "            </tr>\n",
        "            <tr>\n",
        "                        <th id=\"T_f1f0c570_1ada_11eb_be9c_5254004e9a6clevel0_row12\" class=\"row_heading level0 row12\" >International_movement_restrictions</th>\n",
        "                        <td id=\"T_f1f0c570_1ada_11eb_be9c_5254004e9a6crow12_col0\" class=\"data row12 col0\" >-0.119838</td>\n",
        "                        <td id=\"T_f1f0c570_1ada_11eb_be9c_5254004e9a6crow12_col1\" class=\"data row12 col1\" >0.106291</td>\n",
        "                        <td id=\"T_f1f0c570_1ada_11eb_be9c_5254004e9a6crow12_col2\" class=\"data row12 col2\" >0.117422</td>\n",
        "                        <td id=\"T_f1f0c570_1ada_11eb_be9c_5254004e9a6crow12_col3\" class=\"data row12 col3\" >0.100385</td>\n",
        "                        <td id=\"T_f1f0c570_1ada_11eb_be9c_5254004e9a6crow12_col4\" class=\"data row12 col4\" >0.156122</td>\n",
        "                        <td id=\"T_f1f0c570_1ada_11eb_be9c_5254004e9a6crow12_col5\" class=\"data row12 col5\" >0.589440</td>\n",
        "                        <td id=\"T_f1f0c570_1ada_11eb_be9c_5254004e9a6crow12_col6\" class=\"data row12 col6\" >0.480952</td>\n",
        "                        <td id=\"T_f1f0c570_1ada_11eb_be9c_5254004e9a6crow12_col7\" class=\"data row12 col7\" >0.452001</td>\n",
        "                        <td id=\"T_f1f0c570_1ada_11eb_be9c_5254004e9a6crow12_col8\" class=\"data row12 col8\" >0.554035</td>\n",
        "                        <td id=\"T_f1f0c570_1ada_11eb_be9c_5254004e9a6crow12_col9\" class=\"data row12 col9\" >0.123245</td>\n",
        "                        <td id=\"T_f1f0c570_1ada_11eb_be9c_5254004e9a6crow12_col10\" class=\"data row12 col10\" >0.547094</td>\n",
        "                        <td id=\"T_f1f0c570_1ada_11eb_be9c_5254004e9a6crow12_col11\" class=\"data row12 col11\" >0.194072</td>\n",
        "                        <td id=\"T_f1f0c570_1ada_11eb_be9c_5254004e9a6crow12_col12\" class=\"data row12 col12\" >1.000000</td>\n",
        "                        <td id=\"T_f1f0c570_1ada_11eb_be9c_5254004e9a6crow12_col13\" class=\"data row12 col13\" >0.607477</td>\n",
        "                        <td id=\"T_f1f0c570_1ada_11eb_be9c_5254004e9a6crow12_col14\" class=\"data row12 col14\" >0.477602</td>\n",
        "                        <td id=\"T_f1f0c570_1ada_11eb_be9c_5254004e9a6crow12_col15\" class=\"data row12 col15\" >0.389605</td>\n",
        "                        <td id=\"T_f1f0c570_1ada_11eb_be9c_5254004e9a6crow12_col16\" class=\"data row12 col16\" >0.735662</td>\n",
        "            </tr>\n",
        "            <tr>\n",
        "                        <th id=\"T_f1f0c570_1ada_11eb_be9c_5254004e9a6clevel0_row13\" class=\"row_heading level0 row13\" >Information_campaigns</th>\n",
        "                        <td id=\"T_f1f0c570_1ada_11eb_be9c_5254004e9a6crow13_col0\" class=\"data row13 col0\" >0.004492</td>\n",
        "                        <td id=\"T_f1f0c570_1ada_11eb_be9c_5254004e9a6crow13_col1\" class=\"data row13 col1\" >-0.318533</td>\n",
        "                        <td id=\"T_f1f0c570_1ada_11eb_be9c_5254004e9a6crow13_col2\" class=\"data row13 col2\" >-0.329019</td>\n",
        "                        <td id=\"T_f1f0c570_1ada_11eb_be9c_5254004e9a6crow13_col3\" class=\"data row13 col3\" >-0.291342</td>\n",
        "                        <td id=\"T_f1f0c570_1ada_11eb_be9c_5254004e9a6crow13_col4\" class=\"data row13 col4\" >0.110497</td>\n",
        "                        <td id=\"T_f1f0c570_1ada_11eb_be9c_5254004e9a6crow13_col5\" class=\"data row13 col5\" >0.819244</td>\n",
        "                        <td id=\"T_f1f0c570_1ada_11eb_be9c_5254004e9a6crow13_col6\" class=\"data row13 col6\" >0.665552</td>\n",
        "                        <td id=\"T_f1f0c570_1ada_11eb_be9c_5254004e9a6crow13_col7\" class=\"data row13 col7\" >0.712828</td>\n",
        "                        <td id=\"T_f1f0c570_1ada_11eb_be9c_5254004e9a6crow13_col8\" class=\"data row13 col8\" >0.713616</td>\n",
        "                        <td id=\"T_f1f0c570_1ada_11eb_be9c_5254004e9a6crow13_col9\" class=\"data row13 col9\" >0.323215</td>\n",
        "                        <td id=\"T_f1f0c570_1ada_11eb_be9c_5254004e9a6crow13_col10\" class=\"data row13 col10\" >0.638240</td>\n",
        "                        <td id=\"T_f1f0c570_1ada_11eb_be9c_5254004e9a6crow13_col11\" class=\"data row13 col11\" >0.338314</td>\n",
        "                        <td id=\"T_f1f0c570_1ada_11eb_be9c_5254004e9a6crow13_col12\" class=\"data row13 col12\" >0.607477</td>\n",
        "                        <td id=\"T_f1f0c570_1ada_11eb_be9c_5254004e9a6crow13_col13\" class=\"data row13 col13\" >1.000000</td>\n",
        "                        <td id=\"T_f1f0c570_1ada_11eb_be9c_5254004e9a6crow13_col14\" class=\"data row13 col14\" >0.614358</td>\n",
        "                        <td id=\"T_f1f0c570_1ada_11eb_be9c_5254004e9a6crow13_col15\" class=\"data row13 col15\" >0.577547</td>\n",
        "                        <td id=\"T_f1f0c570_1ada_11eb_be9c_5254004e9a6crow13_col16\" class=\"data row13 col16\" >0.762165</td>\n",
        "            </tr>\n",
        "            <tr>\n",
        "                        <th id=\"T_f1f0c570_1ada_11eb_be9c_5254004e9a6clevel0_row14\" class=\"row_heading level0 row14\" >Testing_policy</th>\n",
        "                        <td id=\"T_f1f0c570_1ada_11eb_be9c_5254004e9a6crow14_col0\" class=\"data row14 col0\" >-0.094348</td>\n",
        "                        <td id=\"T_f1f0c570_1ada_11eb_be9c_5254004e9a6crow14_col1\" class=\"data row14 col1\" >-0.185038</td>\n",
        "                        <td id=\"T_f1f0c570_1ada_11eb_be9c_5254004e9a6crow14_col2\" class=\"data row14 col2\" >-0.141219</td>\n",
        "                        <td id=\"T_f1f0c570_1ada_11eb_be9c_5254004e9a6crow14_col3\" class=\"data row14 col3\" >-0.300032</td>\n",
        "                        <td id=\"T_f1f0c570_1ada_11eb_be9c_5254004e9a6crow14_col4\" class=\"data row14 col4\" >0.038561</td>\n",
        "                        <td id=\"T_f1f0c570_1ada_11eb_be9c_5254004e9a6crow14_col5\" class=\"data row14 col5\" >0.539334</td>\n",
        "                        <td id=\"T_f1f0c570_1ada_11eb_be9c_5254004e9a6crow14_col6\" class=\"data row14 col6\" >0.517922</td>\n",
        "                        <td id=\"T_f1f0c570_1ada_11eb_be9c_5254004e9a6crow14_col7\" class=\"data row14 col7\" >0.345182</td>\n",
        "                        <td id=\"T_f1f0c570_1ada_11eb_be9c_5254004e9a6crow14_col8\" class=\"data row14 col8\" >0.543944</td>\n",
        "                        <td id=\"T_f1f0c570_1ada_11eb_be9c_5254004e9a6crow14_col9\" class=\"data row14 col9\" >-0.027358</td>\n",
        "                        <td id=\"T_f1f0c570_1ada_11eb_be9c_5254004e9a6crow14_col10\" class=\"data row14 col10\" >0.395139</td>\n",
        "                        <td id=\"T_f1f0c570_1ada_11eb_be9c_5254004e9a6crow14_col11\" class=\"data row14 col11\" >-0.166546</td>\n",
        "                        <td id=\"T_f1f0c570_1ada_11eb_be9c_5254004e9a6crow14_col12\" class=\"data row14 col12\" >0.477602</td>\n",
        "                        <td id=\"T_f1f0c570_1ada_11eb_be9c_5254004e9a6crow14_col13\" class=\"data row14 col13\" >0.614358</td>\n",
        "                        <td id=\"T_f1f0c570_1ada_11eb_be9c_5254004e9a6crow14_col14\" class=\"data row14 col14\" >1.000000</td>\n",
        "                        <td id=\"T_f1f0c570_1ada_11eb_be9c_5254004e9a6crow14_col15\" class=\"data row14 col15\" >0.587030</td>\n",
        "                        <td id=\"T_f1f0c570_1ada_11eb_be9c_5254004e9a6crow14_col16\" class=\"data row14 col16\" >0.319659</td>\n",
        "            </tr>\n",
        "            <tr>\n",
        "                        <th id=\"T_f1f0c570_1ada_11eb_be9c_5254004e9a6clevel0_row15\" class=\"row_heading level0 row15\" >Contact_tracing</th>\n",
        "                        <td id=\"T_f1f0c570_1ada_11eb_be9c_5254004e9a6crow15_col0\" class=\"data row15 col0\" >-0.079163</td>\n",
        "                        <td id=\"T_f1f0c570_1ada_11eb_be9c_5254004e9a6crow15_col1\" class=\"data row15 col1\" >-0.031338</td>\n",
        "                        <td id=\"T_f1f0c570_1ada_11eb_be9c_5254004e9a6crow15_col2\" class=\"data row15 col2\" >-0.024158</td>\n",
        "                        <td id=\"T_f1f0c570_1ada_11eb_be9c_5254004e9a6crow15_col3\" class=\"data row15 col3\" >-0.216684</td>\n",
        "                        <td id=\"T_f1f0c570_1ada_11eb_be9c_5254004e9a6crow15_col4\" class=\"data row15 col4\" >-0.144696</td>\n",
        "                        <td id=\"T_f1f0c570_1ada_11eb_be9c_5254004e9a6crow15_col5\" class=\"data row15 col5\" >0.479478</td>\n",
        "                        <td id=\"T_f1f0c570_1ada_11eb_be9c_5254004e9a6crow15_col6\" class=\"data row15 col6\" >0.504933</td>\n",
        "                        <td id=\"T_f1f0c570_1ada_11eb_be9c_5254004e9a6crow15_col7\" class=\"data row15 col7\" >0.478668</td>\n",
        "                        <td id=\"T_f1f0c570_1ada_11eb_be9c_5254004e9a6crow15_col8\" class=\"data row15 col8\" >0.464713</td>\n",
        "                        <td id=\"T_f1f0c570_1ada_11eb_be9c_5254004e9a6crow15_col9\" class=\"data row15 col9\" >0.163539</td>\n",
        "                        <td id=\"T_f1f0c570_1ada_11eb_be9c_5254004e9a6crow15_col10\" class=\"data row15 col10\" >0.489230</td>\n",
        "                        <td id=\"T_f1f0c570_1ada_11eb_be9c_5254004e9a6crow15_col11\" class=\"data row15 col11\" >0.086789</td>\n",
        "                        <td id=\"T_f1f0c570_1ada_11eb_be9c_5254004e9a6crow15_col12\" class=\"data row15 col12\" >0.389605</td>\n",
        "                        <td id=\"T_f1f0c570_1ada_11eb_be9c_5254004e9a6crow15_col13\" class=\"data row15 col13\" >0.577547</td>\n",
        "                        <td id=\"T_f1f0c570_1ada_11eb_be9c_5254004e9a6crow15_col14\" class=\"data row15 col14\" >0.587030</td>\n",
        "                        <td id=\"T_f1f0c570_1ada_11eb_be9c_5254004e9a6crow15_col15\" class=\"data row15 col15\" >1.000000</td>\n",
        "                        <td id=\"T_f1f0c570_1ada_11eb_be9c_5254004e9a6crow15_col16\" class=\"data row15 col16\" >0.419973</td>\n",
        "            </tr>\n",
        "            <tr>\n",
        "                        <th id=\"T_f1f0c570_1ada_11eb_be9c_5254004e9a6clevel0_row16\" class=\"row_heading level0 row16\" >Stringency_index</th>\n",
        "                        <td id=\"T_f1f0c570_1ada_11eb_be9c_5254004e9a6crow16_col0\" class=\"data row16 col0\" >-0.053109</td>\n",
        "                        <td id=\"T_f1f0c570_1ada_11eb_be9c_5254004e9a6crow16_col1\" class=\"data row16 col1\" >-0.068665</td>\n",
        "                        <td id=\"T_f1f0c570_1ada_11eb_be9c_5254004e9a6crow16_col2\" class=\"data row16 col2\" >-0.105696</td>\n",
        "                        <td id=\"T_f1f0c570_1ada_11eb_be9c_5254004e9a6crow16_col3\" class=\"data row16 col3\" >0.031372</td>\n",
        "                        <td id=\"T_f1f0c570_1ada_11eb_be9c_5254004e9a6crow16_col4\" class=\"data row16 col4\" >0.179444</td>\n",
        "                        <td id=\"T_f1f0c570_1ada_11eb_be9c_5254004e9a6crow16_col5\" class=\"data row16 col5\" >0.786566</td>\n",
        "                        <td id=\"T_f1f0c570_1ada_11eb_be9c_5254004e9a6crow16_col6\" class=\"data row16 col6\" >0.667461</td>\n",
        "                        <td id=\"T_f1f0c570_1ada_11eb_be9c_5254004e9a6crow16_col7\" class=\"data row16 col7\" >0.687091</td>\n",
        "                        <td id=\"T_f1f0c570_1ada_11eb_be9c_5254004e9a6crow16_col8\" class=\"data row16 col8\" >0.720972</td>\n",
        "                        <td id=\"T_f1f0c570_1ada_11eb_be9c_5254004e9a6crow16_col9\" class=\"data row16 col9\" >0.320010</td>\n",
        "                        <td id=\"T_f1f0c570_1ada_11eb_be9c_5254004e9a6crow16_col10\" class=\"data row16 col10\" >0.749946</td>\n",
        "                        <td id=\"T_f1f0c570_1ada_11eb_be9c_5254004e9a6crow16_col11\" class=\"data row16 col11\" >0.451149</td>\n",
        "                        <td id=\"T_f1f0c570_1ada_11eb_be9c_5254004e9a6crow16_col12\" class=\"data row16 col12\" >0.735662</td>\n",
        "                        <td id=\"T_f1f0c570_1ada_11eb_be9c_5254004e9a6crow16_col13\" class=\"data row16 col13\" >0.762165</td>\n",
        "                        <td id=\"T_f1f0c570_1ada_11eb_be9c_5254004e9a6crow16_col14\" class=\"data row16 col14\" >0.319659</td>\n",
        "                        <td id=\"T_f1f0c570_1ada_11eb_be9c_5254004e9a6crow16_col15\" class=\"data row16 col15\" >0.419973</td>\n",
        "                        <td id=\"T_f1f0c570_1ada_11eb_be9c_5254004e9a6crow16_col16\" class=\"data row16 col16\" >1.000000</td>\n",
        "            </tr>\n",
        "    </tbody></table>"
       ],
       "output_type": "pyout",
       "prompt_number": 21,
       "text": [
        "<pandas.io.formats.style.Styler at 0x7f85b2f0bee0>"
       ]
      }
     ],
     "prompt_number": 21
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "# Scatter plot of Stringency index and Rt\n",
      "df = track_df.copy()\n",
      "sns.scatterplot(data=df, x=\"Stringency_index\", y=\"Rt\", hue=\"Country\", legend=\"brief\", marker=\"+\")\n",
      "bbox_to_anchor=(1.02, 0)\n",
      "bbox_loc=\"lower left\"\n",
      "plt.legend(bbox_to_anchor=bbox_to_anchor, loc=bbox_loc, borderaxespad=0)\n",
      "plt.title(\"Relationship of Stringency index and reproduction number\")\n",
      "plt.ylabel(\"Reproduction number\")\n",
      "plt.xlabel(\"Stringency index\")\n",
      "plt.show()"
     ],
     "language": "python",
     "metadata": {},
     "outputs": [
      {
       "output_type": "display_data",
       "png": "\n",
       "text": [
        "<Figure size 432x288 with 1 Axes>"
       ]
      }
     ],
     "prompt_number": 22
    }
   ],
   "metadata": {}
  }
 ]
}
