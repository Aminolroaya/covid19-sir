{
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3.8.2 64-bit ('.venv': venv)",
   "name": "python_defaultSpec_1597669925034"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.8.2-final"
  },
  "name": ""
 },
 "nbformat": 3,
 "nbformat_minor": 0,
 "worksheets": [
  {
   "cells": [
    {
     "cell_type": "markdown",
     "metadata": {},
     "source": [
      "# Usage (details: policy measures)\n",
      "Here, we will analyse the relationship of policy measures and parameter values of SIR-derived ODE models. Policy measures are tracked by [Oxford Covid-19 Government Response Tracker (OxCGRT)](https://github.com/OxCGRT/covid-policy-tracker)."
     ]
    },
    {
     "cell_type": "heading",
     "level": 2,
     "metadata": {},
     "source": [
      "Preparation"
     ]
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "# Standard users\n",
      "# !pip install covsirphy\n",
      "# Developers (Note: this notebook is in example directory)\n",
      "import os\n",
      "os.chdir(\"../\")"
     ],
     "language": "python",
     "metadata": {},
     "outputs": [],
     "prompt_number": 1
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "from pprint import pprint"
     ],
     "language": "python",
     "metadata": {},
     "outputs": [],
     "prompt_number": 2
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "import covsirphy as cs\n",
      "cs.__version__"
     ],
     "language": "python",
     "metadata": {},
     "outputs": [
      {
       "output_type": "pyout",
       "prompt_number": 3,
       "text": [
        "'2.8.3'"
       ]
      }
     ],
     "prompt_number": 3
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "# Standard users and developers\n",
      "data_loader = cs.DataLoader(\"input\")\n",
      "# The number of cases (JHU style)\n",
      "jhu_data = data_loader.jhu(verbose=False)\n",
      "# Population in each country\n",
      "population_data = data_loader.population(verbose=False)\n",
      "# Government Response Tracker (OxCGRT)\n",
      "oxcgrt_data = data_loader.oxcgrt(verbose=False)\n",
      "# Description/citation\n",
      "print(oxcgrt_data.citation)"
     ],
     "language": "python",
     "metadata": {
      "tags": []
     },
     "outputs": [
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "(Secondary source) Guidotti, E., Ardia, D., (2020), \"COVID-19 Data Hub\", Journal of Open Source Software 5(51):2376, doi: 10.21105/joss.02376.\n",
        "We can get Citation list of primary sources with DataLoader(...).covid19dh_citation"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      }
     ],
     "prompt_number": 4
    },
    {
     "cell_type": "markdown",
     "metadata": {},
     "source": [
      "## Class for policy measure analysis\n",
      "We will `PolicyMeasures` class to find relationship of policy measures and parameter values of SIR-derived ODE models."
     ]
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "# Create analyser with tau value 360 [min] (can be changed)\n",
      "analyser = cs.PolicyMeasures(jhu_data, population_data, oxcgrt_data, tau=360)\n",
      "# The number of registerd countries\n",
      "len(analyser.countries)"
     ],
     "language": "python",
     "metadata": {
      "tags": []
     },
     "outputs": [
      {
       "output_type": "pyout",
       "prompt_number": 5,
       "text": [
        "184"
       ]
      }
     ],
     "prompt_number": 5
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "# We can get Scenario instance for detailed scenario analysis\n",
      "type(analyser.scenario(\"Japan\"))"
     ],
     "language": "python",
     "metadata": {},
     "outputs": [
      {
       "output_type": "pyout",
       "prompt_number": 6,
       "text": [
        "covsirphy.analysis.scenario.Scenario"
       ]
      }
     ],
     "prompt_number": 6
    },
    {
     "cell_type": "markdown",
     "metadata": {},
     "source": [
      "## Set phases with S-R trend analysis\n",
      "We will perform S-R trend analysis to set phases in all countries. Countries which do not have **9th phases** will be un-registered for the next analysis. This number will be adjusted for your analysis."
     ]
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "# Show the number of phases of all countries\n",
      "analyser.trend()\n",
      "pprint(analyser.phase_len(), compact=True)"
     ],
     "language": "python",
     "metadata": {},
     "outputs": [
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "{"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "3"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ": "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "['Myanmar', 'Tanzania', 'Dominica']"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        " "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "4"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ": "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "['Belize']"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        " "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "5"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ": "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "["
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Trinidad and Tobago'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Papua New Guinea'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Seychelles'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        "     "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Antigua and Barbuda'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Brunei'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Libya'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Jamaica'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Lesotho'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Grenada'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        "     "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Mauritius'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Namibia'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Fiji'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "]"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        " "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "6"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ": "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "["
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Central African Republic'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Lebanon'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Monaco'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Croatia'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Rwanda'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        "     "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Kyrgyzstan'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Netherlands'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Sao Tome and Principe'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Tunisia'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Kosovo'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        "     "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Jordan'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Guinea-Bissau'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Bahamas'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Yemen'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Gambia'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        "     "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Equatorial Guinea'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Vietnam'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Cambodia'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Ireland'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Guyana'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        "     "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Uganda'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "]"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        " "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "7"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ": "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "["
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Malta'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Costa Rica'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Iceland'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Taiwan'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Zimbabwe'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Philippines'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        "     "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Syria'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Liechtenstein'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Madagascar'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Zambia'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Thailand'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Colombia'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        "     "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Comoros'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Guatemala'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Malawi'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Cyprus'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'San Marino'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        "     "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Saint Vincent and the Grenadines'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Mongolia'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Barbados'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'New Zealand'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        "     "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Spain'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Botswana'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Venezuela'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Burundi'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Norway'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Argentina'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        "     "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Saint Lucia'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'South Sudan'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Bhutan'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Morocco'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Nepal'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Kazakhstan'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        "     "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Ethiopia'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Paraguay'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Kenya'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Australia'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "]"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        " "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "8"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ": "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "["
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Slovenia'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Palestine'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Greece'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Mozambique'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Sri Lanka'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Congo'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        "     "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Montenegro'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Georgia'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Chad'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Angola'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Korea, South'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Sudan'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        "     "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Bermuda'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Albania'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Ghana'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Benin'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Bosnia and Herzegovina'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Japan'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        "     "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'India'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Afghanistan'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Slovakia'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Qatar'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Tajikistan'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Iraq'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        "     "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Israel'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Sierra Leone'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Uruguay'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Maldives'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Suriname'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Djibouti'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        "     "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Niger'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'South Africa'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Eritrea'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "]"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        " "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "9"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ": "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "["
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Czech Republic'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Luxembourg'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Ecuador'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Azerbaijan'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Swaziland'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        "     "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Romania'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Germany'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Cape Verde'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Belarus'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Oman'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Somalia'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'China'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        "     "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Liberia'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Nicaragua'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Finland'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'El Salvador'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Uzbekistan'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Gabon'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        "     "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Singapore'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Cuba'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Cameroon'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Moldova'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Andorra'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Haiti'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        "     "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Mauritania'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "]"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        " "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "10"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ": "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "["
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Canada'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Brazil'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Belgium'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Armenia'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Togo'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Chile'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        "      "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Dominican Republic'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Bangladesh'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Lithuania'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Hungary'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Malaysia'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        "      "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Latvia'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Macedonia'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Indonesia'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Algeria'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Peru'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Switzerland'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        "      "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Ukraine'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Senegal'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Pakistan'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Austria'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Saudi Arabia'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Poland'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        "      "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Panama'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Serbia'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "]"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        " "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "11"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ": "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "["
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Bolivia'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Nigeria'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Kuwait'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Portugal'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Guinea'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Turkey'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        "      "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Honduras'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Burkina Faso'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Bulgaria'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Mali'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Egypt'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Mexico'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        "      "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Estonia'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Iran'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'France'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Denmark'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "]"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        " "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "12"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ": "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "['United Arab Emirates', 'United States', 'Italy', 'Bahrain']"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        " "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "13"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ": "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "['Russia']"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "}"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      }
     ],
     "prompt_number": 7
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "# Set phases with S-R trend analysis\n",
      "analyser.trend(min_len=11)\n",
      "# The number of countries\n",
      "len(analyser.countries)"
     ],
     "language": "python",
     "metadata": {},
     "outputs": [
      {
       "output_type": "pyout",
       "prompt_number": 8,
       "text": [
        "21"
       ]
      }
     ],
     "prompt_number": 8
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "phase_len_dict = analyser.phase_len()\n",
      "pprint(phase_len_dict, compact=True)"
     ],
     "language": "python",
     "metadata": {
      "tags": []
     },
     "outputs": [
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "{"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "11"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ": "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "["
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Bolivia'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Nigeria'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Kuwait'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Portugal'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Guinea'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Turkey'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        "      "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Honduras'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Burkina Faso'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Bulgaria'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Mali'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Egypt'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Mexico'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        "      "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Estonia'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Iran'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'France'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ", "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "'Denmark'"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "]"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        " "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "12"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ": "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "['United Arab Emirates', 'United States', 'Italy', 'Bahrain']"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ",\n",
        " "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "13"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        ": "
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "['Russia']"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "}"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      }
     ],
     "prompt_number": 9
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "# Here, only show the countries which have the most phases\n",
      "countries_show = max(phase_len_dict.items(), key=lambda x: x[0])[1]\n",
      "# Show summary\n",
      "analyser.summary(countries=countries_show)"
     ],
     "language": "python",
     "metadata": {
      "tags": []
     },
     "outputs": [
      {
       "html": [
        "<div>\n",
        "<style scoped>\n",
        "    .dataframe tbody tr th:only-of-type {\n",
        "        vertical-align: middle;\n",
        "    }\n",
        "\n",
        "    .dataframe tbody tr th {\n",
        "        vertical-align: top;\n",
        "    }\n",
        "\n",
        "    .dataframe thead th {\n",
        "        text-align: right;\n",
        "    }\n",
        "</style>\n",
        "<table border=\"1\" class=\"dataframe\">\n",
        "  <thead>\n",
        "    <tr style=\"text-align: right;\">\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th>Type</th>\n",
        "      <th>Start</th>\n",
        "      <th>End</th>\n",
        "      <th>Population</th>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>Country</th>\n",
        "      <th>Phase</th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "    </tr>\n",
        "  </thead>\n",
        "  <tbody>\n",
        "    <tr>\n",
        "      <th rowspan=\"13\" valign=\"top\">Russia</th>\n",
        "      <th>0th</th>\n",
        "      <td>Past</td>\n",
        "      <td>12Feb2020</td>\n",
        "      <td>06May2020</td>\n",
        "      <td>330457362</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>1st</th>\n",
        "      <td>Past</td>\n",
        "      <td>07May2020</td>\n",
        "      <td>15May2020</td>\n",
        "      <td>330457362</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>2nd</th>\n",
        "      <td>Past</td>\n",
        "      <td>16May2020</td>\n",
        "      <td>23May2020</td>\n",
        "      <td>330457362</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>3rd</th>\n",
        "      <td>Past</td>\n",
        "      <td>24May2020</td>\n",
        "      <td>01Jun2020</td>\n",
        "      <td>330457362</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>4th</th>\n",
        "      <td>Past</td>\n",
        "      <td>02Jun2020</td>\n",
        "      <td>11Jun2020</td>\n",
        "      <td>330457362</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>5th</th>\n",
        "      <td>Past</td>\n",
        "      <td>12Jun2020</td>\n",
        "      <td>20Jun2020</td>\n",
        "      <td>330457362</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>6th</th>\n",
        "      <td>Past</td>\n",
        "      <td>21Jun2020</td>\n",
        "      <td>30Jun2020</td>\n",
        "      <td>330457362</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>7th</th>\n",
        "      <td>Past</td>\n",
        "      <td>01Jul2020</td>\n",
        "      <td>12Jul2020</td>\n",
        "      <td>330457362</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>8th</th>\n",
        "      <td>Past</td>\n",
        "      <td>13Jul2020</td>\n",
        "      <td>24Jul2020</td>\n",
        "      <td>330457362</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>9th</th>\n",
        "      <td>Past</td>\n",
        "      <td>25Jul2020</td>\n",
        "      <td>07Aug2020</td>\n",
        "      <td>330457362</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>10th</th>\n",
        "      <td>Past</td>\n",
        "      <td>08Aug2020</td>\n",
        "      <td>22Aug2020</td>\n",
        "      <td>330457362</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>11th</th>\n",
        "      <td>Past</td>\n",
        "      <td>23Aug2020</td>\n",
        "      <td>06Sep2020</td>\n",
        "      <td>330457362</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>12th</th>\n",
        "      <td>Past</td>\n",
        "      <td>07Sep2020</td>\n",
        "      <td>23Sep2020</td>\n",
        "      <td>330457362</td>\n",
        "    </tr>\n",
        "  </tbody>\n",
        "</table>\n",
        "</div>"
       ],
       "output_type": "pyout",
       "prompt_number": 10,
       "text": [
        "               Type      Start        End  Population\n",
        "Country Phase                                        \n",
        "Russia  0th    Past  12Feb2020  06May2020   330457362\n",
        "        1st    Past  07May2020  15May2020   330457362\n",
        "        2nd    Past  16May2020  23May2020   330457362\n",
        "        3rd    Past  24May2020  01Jun2020   330457362\n",
        "        4th    Past  02Jun2020  11Jun2020   330457362\n",
        "        5th    Past  12Jun2020  20Jun2020   330457362\n",
        "        6th    Past  21Jun2020  30Jun2020   330457362\n",
        "        7th    Past  01Jul2020  12Jul2020   330457362\n",
        "        8th    Past  13Jul2020  24Jul2020   330457362\n",
        "        9th    Past  25Jul2020  07Aug2020   330457362\n",
        "        10th   Past  08Aug2020  22Aug2020   330457362\n",
        "        11th   Past  23Aug2020  06Sep2020   330457362\n",
        "        12th   Past  07Sep2020  23Sep2020   330457362"
       ]
      }
     ],
     "prompt_number": 10
    },
    {
     "cell_type": "markdown",
     "metadata": {},
     "source": [
      "## Parameter estimation\n",
      "we will estimate the parameter values with SIR-derived ODE models in each country."
     ]
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "# Parameter estimation with SIR-F model\n",
      "analyser.estimate(cs.SIRF)"
     ],
     "language": "python",
     "metadata": {
      "tags": []
     },
     "outputs": [
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n",
        "<SIR-F model: parameter estimation>"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "Running optimization with 4 CPUs..."
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tNGA,  5th phase (05Jul2020 - 12Jul2020): finished  288 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tUSA,  7th phase (28Jul2020 - 04Aug2020): finished  282 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tEGY,  9th phase (27Aug2020 - 07Sep2020): finished  407 trials in 0 min 15 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tFRA,  6th phase (27May2020 - 28Jun2020): finished  999 trials in 0 min 50 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tBFA,  5th phase (21May2020 - 26Jun2020): finished 1149 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tMLI,  6th phase (15Jun2020 - 24Jun2020): finished  255 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tTUR,  7th phase (15Jul2020 - 04Aug2020): finished  189 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tEGY,  3rd phase (07Jun2020 - 20Jun2020): finished 1126 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tKWT,  1st phase (13May2020 - 27May2020): finished 1031 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tMLI,  9th phase (12Aug2020 - 05Sep2020): finished 1059 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tPRT, 10th phase (13Sep2020 - 23Sep2020): finished 1075 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tDNK,  6th phase (18Jun2020 - 02Aug2020): finished 1057 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tITA,  4th phase (19Apr2020 - 30Apr2020): finished  106 trials in 0 min  5 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tUSA,  3rd phase (06Jun2020 - 24Jun2020): finished 1068 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tNGA,  8th phase (08Aug2020 - 18Aug2020): finished  333 trials in 0 min 15 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tIRN,  5th phase (17Jun2020 - 01Jul2020): finished  979 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tMEX, 10th phase (09Sep2020 - 23Sep2020): finished 1008 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tMEX,  0th phase (03Mar2020 - 23May2020): finished  956 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tDNK,  5th phase (18May2020 - 17Jun2020): finished  201 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tEST,  2nd phase (18Apr2020 - 29Apr2020): finished 1016 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tFRA,  2nd phase (03Apr2020 - 12Apr2020): finished 1071 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tBFA,  2nd phase (10Apr2020 - 19Apr2020): finished 1110 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tNGA,  0th phase (18Mar2020 - 21May2020): finished 1083 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tKWT,  7th phase (05Aug2020 - 17Aug2020): finished  246 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tEGY,  5th phase (29Jun2020 - 10Jul2020): finished  203 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tRUS,  5th phase (12Jun2020 - 20Jun2020): finished 1145 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tNGA,  2nd phase (09Jun2020 - 18Jun2020): finished 1123 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tDNK,  2nd phase (15Apr2020 - 23Apr2020): finished  345 trials in 0 min 15 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tGIN,  2nd phase (13May2020 - 23May2020): finished 1112 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tIRN,  1st phase (30Mar2020 - 17Apr2020): finished 1108 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tBGR,  3rd phase (30Jun2020 - 08Jul2020): finished 1125 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tGIN,  7th phase (24Jul2020 - 06Aug2020): finished 1095 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tGIN,  6th phase (09Jul2020 - 23Jul2020): finished 1090 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tKWT,  2nd phase (28May2020 - 07Jun2020): finished 1065 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tPRT,  2nd phase (18May2020 - 01Jun2020): finished 1060 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tBGR,  4th phase (09Jul2020 - 17Jul2020): finished 1053 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tPRT,  7th phase (23Jul2020 - 10Aug2020): finished 1046 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tHND,  1st phase (09Jun2020 - 25Jun2020): finished 1053 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tUSA,  0th phase (09Feb2020 - 18Apr2020): finished  998 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tEGY,  2nd phase (30May2020 - 06Jun2020): finished  501 trials in 0 min 25 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tBOL,  5th phase (23Jul2020 - 31Jul2020): finished  200 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tARE, 10th phase (02Sep2020 - 11Sep2020): finished 1014 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tBHR,  9th phase (23Aug2020 - 05Sep2020): finished  968 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tMLI,  0th phase (04Apr2020 - 23Apr2020): finished  984 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tUSA,  4th phase (25Jun2020 - 07Jul2020): finished  975 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tRUS, 12th phase (07Sep2020 - 23Sep2020): finished  961 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tMEX,  3rd phase (24Jun2020 - 06Jul2020): finished  978 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tKWT,  8th phase (18Aug2020 - 30Aug2020): finished  985 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tBGR,  5th phase (18Jul2020 - 30Jul2020): finished  994 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tMEX,  9th phase (28Aug2020 - 08Sep2020): finished  204 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tRUS,  1st phase (07May2020 - 15May2020): finished  991 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tBOL,  3rd phase (06Jul2020 - 14Jul2020): finished  787 trials in 0 min 45 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tHND,  7th phase (14Aug2020 - 21Aug2020): finished  771 trials in 0 min 45 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tEGY,  0th phase (28Feb2020 - 13May2020): finished  963 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tHND,  4th phase (17Jul2020 - 24Jul2020): finished  206 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tBFA,  7th phase (28Jul2020 - 14Aug2020): finished  971 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tBOL,  1st phase (14Jun2020 - 25Jun2020): finished  974 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tBOL,  4th phase (15Jul2020 - 22Jul2020): finished  998 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tITA,  3rd phase (09Apr2020 - 18Apr2020): finished  212 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tBOL,  9th phase (26Aug2020 - 10Sep2020): finished  291 trials in 0 min 15 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tUSA,  5th phase (08Jul2020 - 17Jul2020): finished  394 trials in 0 min 20 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tGIN,  5th phase (19Jun2020 - 08Jul2020): finished  208 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tARE,  4th phase (29May2020 - 07Jun2020): finished  952 trials in 0 min 55 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tBFA,  3rd phase (20Apr2020 - 03May2020): finished 1018 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tIRN,  0th phase (26Feb2020 - 29Mar2020): finished  998 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tBOL,  8th phase (18Aug2020 - 25Aug2020): finished  578 trials in 0 min 30 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tHND,  8th phase (22Aug2020 - 04Sep2020): finished 1013 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tRUS,  7th phase (01Jul2020 - 12Jul2020): finished 1009 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tMLI,  3rd phase (16May2020 - 25May2020): finished 1043 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tKWT,  3rd phase (08Jun2020 - 22Jun2020): finished 1031 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tNGA,  7th phase (28Jul2020 - 07Aug2020): finished 1041 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tARE,  6th phase (21Jun2020 - 03Jul2020): finished  214 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tBOL,  0th phase (01Apr2020 - 13Jun2020): finished 1015 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tUSA,  8th phase (05Aug2020 - 14Aug2020): finished  480 trials in 0 min 25 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tBOL,  7th phase (10Aug2020 - 17Aug2020): finished  292 trials in 0 min 15 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tFRA,  3rd phase (13Apr2020 - 20Apr2020): finished 1028 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tBOL,  2nd phase (26Jun2020 - 05Jul2020): finished  231 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tHND,  9th phase (05Sep2020 - 12Sep2020): finished 1059 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tITA,  8th phase (08Jun2020 - 17Jul2020): finished  301 trials in 0 min 15 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tPRT,  6th phase (09Jul2020 - 22Jul2020): finished 1070 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tPRT,  1st phase (29Apr2020 - 17May2020): finished 1056 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tITA,  7th phase (20May2020 - 07Jun2020): finished  500 trials in 0 min 25 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tITA, 10th phase (22Aug2020 - 10Sep2020): finished 1061 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tFRA,  8th phase (29Jul2020 - 17Aug2020): finished  754 trials in 0 min 40 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tPRT,  9th phase (31Aug2020 - 12Sep2020): finished 1039 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tEST,  0th phase (15Mar2020 - 07Apr2020): finished 1024 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tPRT,  8th phase (11Aug2020 - 30Aug2020): finished 1047 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tBFA,  6th phase (27Jun2020 - 27Jul2020): finished 1031 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tBFA,  8th phase (15Aug2020 - 02Sep2020): finished  324 trials in 0 min 15 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tRUS,  2nd phase (16May2020 - 23May2020): finished 1045 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tBOL, 10th phase (11Sep2020 - 23Sep2020): finished  505 trials in 0 min 25 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tIRN,  9th phase (17Aug2020 - 05Sep2020): finished  418 trials in 0 min 20 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tFRA,  1st phase (24Mar2020 - 02Apr2020): finished 1072 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tNGA,  4th phase (27Jun2020 - 04Jul2020): finished  226 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tMLI,  5th phase (03Jun2020 - 14Jun2020): finished 1067 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tIRN,  3rd phase (14May2020 - 31May2020): finished  321 trials in 0 min 15 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tARE,  0th phase (12Feb2020 - 26Apr2020): finished  976 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tBHR,  4th phase (25Jun2020 - 05Jul2020): finished  804 trials in 0 min 45 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tARE,  5th phase (08Jun2020 - 20Jun2020): finished  966 trials in 0 min 55 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tBGR,  8th phase (19Aug2020 - 30Aug2020): finished  332 trials in 0 min 15 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tPRT,  5th phase (26Jun2020 - 08Jul2020): finished 1045 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tNGA,  6th phase (13Jul2020 - 27Jul2020): finished 1044 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tGIN,  9th phase (18Aug2020 - 02Sep2020): finished 1047 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tNGA, 10th phase (02Sep2020 - 23Sep2020): finished 1030 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tBFA,  4th phase (04May2020 - 20May2020): finished 1057 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tUSA,  6th phase (18Jul2020 - 27Jul2020): finished  316 trials in 0 min 15 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tHND,  3rd phase (06Jul2020 - 16Jul2020): finished  329 trials in 0 min 15 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tDNK,  7th phase (03Aug2020 - 15Aug2020): finished 1044 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tTUR,  3rd phase (09May2020 - 22May2020): finished 1045 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tMLI,  4th phase (26May2020 - 02Jun2020): finished 1068 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tBFA,  0th phase (21Mar2020 - 31Mar2020): finished 1054 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tUSA, 11th phase (10Sep2020 - 23Sep2020): finished  757 trials in 0 min 40 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tITA,  1st phase (21Mar2020 - 28Mar2020): finished 1063 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tBGR,  1st phase (10May2020 - 14Jun2020): finished 1025 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tFRA,  5th phase (05May2020 - 26May2020): finished 1033 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tFRA,  7th phase (29Jun2020 - 28Jul2020): finished 1038 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tMLI, 10th phase (06Sep2020 - 23Sep2020): finished 1028 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tRUS,  8th phase (13Jul2020 - 24Jul2020): finished 1033 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tEST,  9th phase (28Aug2020 - 11Sep2020): finished 1038 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tKWT,  4th phase (23Jun2020 - 06Jul2020): finished 1048 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tEGY,  4th phase (21Jun2020 - 28Jun2020): finished  211 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tHND,  6th phase (03Aug2020 - 13Aug2020): finished  681 trials in 0 min 35 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tKWT,  9th phase (31Aug2020 - 10Sep2020): finished  670 trials in 0 min 35 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tTUR,  2nd phase (30Apr2020 - 08May2020): finished 1051 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tMEX,  8th phase (17Aug2020 - 27Aug2020): finished 1064 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tEST,  1st phase (08Apr2020 - 17Apr2020): finished 1061 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tBFA,  9th phase (03Sep2020 - 11Sep2020): finished 1069 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tDNK,  0th phase (06Mar2020 - 04Apr2020): finished 1055 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tTUR,  5th phase (13Jun2020 - 26Jun2020): finished 1077 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tRUS,  4th phase (02Jun2020 - 11Jun2020): finished 1061 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tPRT,  3rd phase (02Jun2020 - 13Jun2020): finished 1065 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tNGA,  1st phase (22May2020 - 08Jun2020): finished 1071 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tBHR,  6th phase (15Jul2020 - 26Jul2020): finished  389 trials in 0 min 20 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tMEX,  6th phase (29Jul2020 - 05Aug2020): finished 1055 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tITA,  5th phase (01May2020 - 09May2020): finished  605 trials in 0 min 30 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tNGA,  3rd phase (19Jun2020 - 26Jun2020): finished 1046 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tHND,  5th phase (25Jul2020 - 02Aug2020): finished 1058 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tITA,  6th phase (10May2020 - 19May2020): finished  230 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tMEX,  7th phase (06Aug2020 - 16Aug2020): finished 1074 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tRUS, 11th phase (23Aug2020 - 06Sep2020): finished 1077 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tIRN,  6th phase (02Jul2020 - 16Jul2020): finished  115 trials in 0 min  5 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tBHR,  3rd phase (14Jun2020 - 24Jun2020): finished 1076 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tIRN,  4th phase (01Jun2020 - 16Jun2020): finished 1058 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tBHR, 10th phase (06Sep2020 - 14Sep2020): finished  216 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tPRT,  0th phase (14Mar2020 - 28Apr2020): finished 1000 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tGIN,  0th phase (03Apr2020 - 30Apr2020): finished 1019 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tITA,  0th phase (24Feb2020 - 20Mar2020): finished 1034 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tMEX,  1st phase (24May2020 - 10Jun2020): finished 1035 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tTUR,  8th phase (05Aug2020 - 22Aug2020): finished  306 trials in 0 min 15 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tEGY,  8th phase (11Aug2020 - 26Aug2020): finished  206 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tIRN,  2nd phase (18Apr2020 - 13May2020): finished  306 trials in 0 min 15 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tUSA,  1st phase (19Apr2020 - 10May2020): finished 1052 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tARE,  1st phase (27Apr2020 - 12May2020): finished 1074 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tRUS, 10th phase (08Aug2020 - 22Aug2020): finished 1068 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tARE,  7th phase (04Jul2020 - 21Jul2020): finished 1056 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tIRN,  8th phase (01Aug2020 - 16Aug2020): finished  221 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tTUR,  1st phase (17Apr2020 - 29Apr2020): finished 1031 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tMLI,  7th phase (25Jun2020 - 02Jul2020): finished  831 trials in 0 min 45 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tEST,  7th phase (15Jul2020 - 17Aug2020): finished 1025 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tEGY, 10th phase (08Sep2020 - 23Sep2020): finished  385 trials in 0 min 20 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tRUS,  0th phase (12Feb2020 - 06May2020): finished 1029 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tDNK,  8th phase (16Aug2020 - 02Sep2020): finished  978 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tGIN,  4th phase (07Jun2020 - 18Jun2020): finished 1005 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tNGA,  9th phase (19Aug2020 - 01Sep2020): finished  468 trials in 0 min 25 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tBFA,  1st phase (01Apr2020 - 09Apr2020): finished 1019 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tBHR,  1st phase (10May2020 - 01Jun2020): finished  977 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tUSA,  9th phase (15Aug2020 - 27Aug2020): finished  214 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tARE,  9th phase (16Aug2020 - 01Sep2020): finished  458 trials in 0 min 25 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tKWT,  5th phase (07Jul2020 - 20Jul2020): finished  948 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tRUS,  9th phase (25Jul2020 - 07Aug2020): finished  961 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tGIN,  3rd phase (24May2020 - 06Jun2020): finished  956 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tMEX,  5th phase (17Jul2020 - 28Jul2020): finished  990 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tBHR,  0th phase (06Mar2020 - 09May2020): finished  932 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tBOL,  6th phase (01Aug2020 - 09Aug2020): finished  208 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tBGR,  2nd phase (15Jun2020 - 29Jun2020): finished  946 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tUSA,  2nd phase (11May2020 - 05Jun2020): finished  951 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tDNK,  4th phase (04May2020 - 17May2020): finished  168 trials in 0 min 10 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tTUR,  0th phase (24Mar2020 - 16Apr2020): finished  965 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tMLI,  2nd phase (04May2020 - 15May2020): finished  946 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tITA,  2nd phase (29Mar2020 - 08Apr2020): finished  378 trials in 0 min 20 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tTUR,  6th phase (27Jun2020 - 14Jul2020): finished  374 trials in 0 min 20 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tMLI,  1st phase (24Apr2020 - 03May2020): finished  961 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tARE,  3rd phase (21May2020 - 28May2020): finished 1023 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tDNK,  1st phase (05Apr2020 - 14Apr2020): finished 1045 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tMEX,  2nd phase (11Jun2020 - 23Jun2020): finished 1056 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tUSA, 10th phase (28Aug2020 - 09Sep2020): finished  829 trials in 0 min 45 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tTUR,  4th phase (23May2020 - 12Jun2020): finished 1218 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tEST,  5th phase (25May2020 - 03Jun2020): finished  182 trials in 0 min  5 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tIRN,  7th phase (17Jul2020 - 31Jul2020): finished  187 trials in 0 min  5 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tARE, 11th phase (12Sep2020 - 23Sep2020): finished 1327 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tKWT,  6th phase (21Jul2020 - 04Aug2020): finished  182 trials in 0 min  5 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tGIN, 10th phase (03Sep2020 - 23Sep2020): finished 1370 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tEST,  4th phase (14May2020 - 24May2020): finished 1380 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tBGR,  6th phase (31Jul2020 - 07Aug2020): finished  628 trials in 0 min 20 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tBGR,  0th phase (21Mar2020 - 09May2020): finished 1507 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tEGY,  1st phase (14May2020 - 29May2020): finished 1538 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tGIN,  1st phase (01May2020 - 12May2020): finished 1545 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tEST,  3rd phase (30Apr2020 - 13May2020): finished 1474 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tMLI,  8th phase (03Jul2020 - 11Aug2020): finished 1241 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tEST,  8th phase (18Aug2020 - 27Aug2020): finished 1267 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tFRA,  4th phase (21Apr2020 - 04May2020): finished 1225 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tKWT,  0th phase (08Mar2020 - 12May2020): finished  948 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tEGY,  6th phase (11Jul2020 - 22Jul2020): finished  585 trials in 0 min 25 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tGIN,  8th phase (07Aug2020 - 17Aug2020): finished  508 trials in 0 min 15 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tARE,  2nd phase (13May2020 - 20May2020): finished 1356 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tFRA,  0th phase (12Feb2020 - 23Mar2020): finished 1311 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tBHR,  7th phase (27Jul2020 - 09Aug2020): finished  996 trials in 0 min 35 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tHND,  0th phase (28Mar2020 - 08Jun2020): finished 1444 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tBHR,  8th phase (10Aug2020 - 22Aug2020): finished  187 trials in 0 min  5 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tRUS,  3rd phase (24May2020 - 01Jun2020): finished 1510 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tMEX,  4th phase (07Jul2020 - 16Jul2020): finished  631 trials in 0 min 20 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tARE,  8th phase (22Jul2020 - 15Aug2020): finished  459 trials in 0 min 15 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tBHR, 11th phase (15Sep2020 - 23Sep2020): finished 1417 trials in 0 min 55 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tEST,  6th phase (04Jun2020 - 14Jul2020): finished 1485 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tITA,  9th phase (18Jul2020 - 21Aug2020): finished 1536 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\tRUS,  6th phase (21Jun2020 - 30Jun2020): finished 1607 trials in 1 min  0 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "Completed optimization. Total: 43 min 29 sec"
       ]
      },
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n"
       ]
      }
     ],
     "prompt_number": 11
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "# Show summary\n",
      "analyser.summary(countries=countries_show)"
     ],
     "language": "python",
     "metadata": {},
     "outputs": [
      {
       "html": [
        "<div>\n",
        "<style scoped>\n",
        "    .dataframe tbody tr th:only-of-type {\n",
        "        vertical-align: middle;\n",
        "    }\n",
        "\n",
        "    .dataframe tbody tr th {\n",
        "        vertical-align: top;\n",
        "    }\n",
        "\n",
        "    .dataframe thead th {\n",
        "        text-align: right;\n",
        "    }\n",
        "</style>\n",
        "<table border=\"1\" class=\"dataframe\">\n",
        "  <thead>\n",
        "    <tr style=\"text-align: right;\">\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th>Type</th>\n",
        "      <th>Start</th>\n",
        "      <th>End</th>\n",
        "      <th>Population</th>\n",
        "      <th>ODE</th>\n",
        "      <th>Rt</th>\n",
        "      <th>theta</th>\n",
        "      <th>kappa</th>\n",
        "      <th>rho</th>\n",
        "      <th>sigma</th>\n",
        "      <th>tau</th>\n",
        "      <th>1/gamma [day]</th>\n",
        "      <th>alpha1 [-]</th>\n",
        "      <th>1/alpha2 [day]</th>\n",
        "      <th>1/beta [day]</th>\n",
        "      <th>RMSLE</th>\n",
        "      <th>Trials</th>\n",
        "      <th>Runtime</th>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>Country</th>\n",
        "      <th>Phase</th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "    </tr>\n",
        "  </thead>\n",
        "  <tbody>\n",
        "    <tr>\n",
        "      <th rowspan=\"13\" valign=\"top\">Russia</th>\n",
        "      <th>0th</th>\n",
        "      <td>Past</td>\n",
        "      <td>12Feb2020</td>\n",
        "      <td>06May2020</td>\n",
        "      <td>330457362</td>\n",
        "      <td>SIR-F</td>\n",
        "      <td>0.02</td>\n",
        "      <td>0.602763</td>\n",
        "      <td>0.544883</td>\n",
        "      <td>0.034081</td>\n",
        "      <td>0.002299</td>\n",
        "      <td>360</td>\n",
        "      <td>108</td>\n",
        "      <td>0.603</td>\n",
        "      <td>0</td>\n",
        "      <td>7</td>\n",
        "      <td>18.966727</td>\n",
        "      <td>1029</td>\n",
        "      <td>1 min  0 sec</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>1st</th>\n",
        "      <td>Past</td>\n",
        "      <td>07May2020</td>\n",
        "      <td>15May2020</td>\n",
        "      <td>330457362</td>\n",
        "      <td>SIR-F</td>\n",
        "      <td>2.46</td>\n",
        "      <td>0.000639</td>\n",
        "      <td>0.000117</td>\n",
        "      <td>0.013019</td>\n",
        "      <td>0.005178</td>\n",
        "      <td>360</td>\n",
        "      <td>48</td>\n",
        "      <td>0.001</td>\n",
        "      <td>2144</td>\n",
        "      <td>19</td>\n",
        "      <td>0.066392</td>\n",
        "      <td>991</td>\n",
        "      <td>1 min  0 sec</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>2nd</th>\n",
        "      <td>Past</td>\n",
        "      <td>16May2020</td>\n",
        "      <td>23May2020</td>\n",
        "      <td>330457362</td>\n",
        "      <td>SIR-F</td>\n",
        "      <td>1.51</td>\n",
        "      <td>0.000440</td>\n",
        "      <td>0.000098</td>\n",
        "      <td>0.007637</td>\n",
        "      <td>0.004942</td>\n",
        "      <td>360</td>\n",
        "      <td>50</td>\n",
        "      <td>0.000</td>\n",
        "      <td>2549</td>\n",
        "      <td>32</td>\n",
        "      <td>0.057008</td>\n",
        "      <td>1045</td>\n",
        "      <td>1 min  0 sec</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>3rd</th>\n",
        "      <td>Past</td>\n",
        "      <td>24May2020</td>\n",
        "      <td>01Jun2020</td>\n",
        "      <td>330457362</td>\n",
        "      <td>SIR-F</td>\n",
        "      <td>1.08</td>\n",
        "      <td>0.000344</td>\n",
        "      <td>0.000113</td>\n",
        "      <td>0.005571</td>\n",
        "      <td>0.005055</td>\n",
        "      <td>360</td>\n",
        "      <td>49</td>\n",
        "      <td>0.000</td>\n",
        "      <td>2207</td>\n",
        "      <td>44</td>\n",
        "      <td>0.076325</td>\n",
        "      <td>1510</td>\n",
        "      <td>1 min  0 sec</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>4th</th>\n",
        "      <td>Past</td>\n",
        "      <td>02Jun2020</td>\n",
        "      <td>11Jun2020</td>\n",
        "      <td>330457362</td>\n",
        "      <td>SIR-F</td>\n",
        "      <td>0.97</td>\n",
        "      <td>0.000544</td>\n",
        "      <td>0.000094</td>\n",
        "      <td>0.004795</td>\n",
        "      <td>0.004835</td>\n",
        "      <td>360</td>\n",
        "      <td>51</td>\n",
        "      <td>0.001</td>\n",
        "      <td>2646</td>\n",
        "      <td>52</td>\n",
        "      <td>0.073158</td>\n",
        "      <td>1061</td>\n",
        "      <td>1 min  0 sec</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>5th</th>\n",
        "      <td>Past</td>\n",
        "      <td>12Jun2020</td>\n",
        "      <td>20Jun2020</td>\n",
        "      <td>330457362</td>\n",
        "      <td>SIR-F</td>\n",
        "      <td>0.82</td>\n",
        "      <td>0.021862</td>\n",
        "      <td>0.000002</td>\n",
        "      <td>0.003547</td>\n",
        "      <td>0.004245</td>\n",
        "      <td>360</td>\n",
        "      <td>58</td>\n",
        "      <td>0.022</td>\n",
        "      <td>132403</td>\n",
        "      <td>70</td>\n",
        "      <td>0.059759</td>\n",
        "      <td>1145</td>\n",
        "      <td>1 min  0 sec</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>6th</th>\n",
        "      <td>Past</td>\n",
        "      <td>21Jun2020</td>\n",
        "      <td>30Jun2020</td>\n",
        "      <td>330457362</td>\n",
        "      <td>SIR-F</td>\n",
        "      <td>0.90</td>\n",
        "      <td>0.021825</td>\n",
        "      <td>0.000002</td>\n",
        "      <td>0.002769</td>\n",
        "      <td>0.003016</td>\n",
        "      <td>360</td>\n",
        "      <td>82</td>\n",
        "      <td>0.022</td>\n",
        "      <td>132403</td>\n",
        "      <td>90</td>\n",
        "      <td>0.049641</td>\n",
        "      <td>1607</td>\n",
        "      <td>1 min  0 sec</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>7th</th>\n",
        "      <td>Past</td>\n",
        "      <td>01Jul2020</td>\n",
        "      <td>12Jul2020</td>\n",
        "      <td>330457362</td>\n",
        "      <td>SIR-F</td>\n",
        "      <td>0.96</td>\n",
        "      <td>0.002259</td>\n",
        "      <td>0.000084</td>\n",
        "      <td>0.002457</td>\n",
        "      <td>0.002469</td>\n",
        "      <td>360</td>\n",
        "      <td>101</td>\n",
        "      <td>0.002</td>\n",
        "      <td>2987</td>\n",
        "      <td>101</td>\n",
        "      <td>0.058841</td>\n",
        "      <td>1009</td>\n",
        "      <td>1 min  0 sec</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>8th</th>\n",
        "      <td>Past</td>\n",
        "      <td>13Jul2020</td>\n",
        "      <td>24Jul2020</td>\n",
        "      <td>330457362</td>\n",
        "      <td>SIR-F</td>\n",
        "      <td>0.67</td>\n",
        "      <td>0.039438</td>\n",
        "      <td>0.000002</td>\n",
        "      <td>0.001928</td>\n",
        "      <td>0.002772</td>\n",
        "      <td>360</td>\n",
        "      <td>90</td>\n",
        "      <td>0.039</td>\n",
        "      <td>103653</td>\n",
        "      <td>129</td>\n",
        "      <td>0.065274</td>\n",
        "      <td>1033</td>\n",
        "      <td>1 min  0 sec</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>9th</th>\n",
        "      <td>Past</td>\n",
        "      <td>25Jul2020</td>\n",
        "      <td>07Aug2020</td>\n",
        "      <td>330457362</td>\n",
        "      <td>SIR-F</td>\n",
        "      <td>0.78</td>\n",
        "      <td>0.020568</td>\n",
        "      <td>0.000004</td>\n",
        "      <td>0.001600</td>\n",
        "      <td>0.002013</td>\n",
        "      <td>360</td>\n",
        "      <td>124</td>\n",
        "      <td>0.021</td>\n",
        "      <td>68346</td>\n",
        "      <td>156</td>\n",
        "      <td>0.052216</td>\n",
        "      <td>961</td>\n",
        "      <td>1 min  0 sec</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>10th</th>\n",
        "      <td>Past</td>\n",
        "      <td>08Aug2020</td>\n",
        "      <td>22Aug2020</td>\n",
        "      <td>330457362</td>\n",
        "      <td>SIR-F</td>\n",
        "      <td>0.73</td>\n",
        "      <td>0.000047</td>\n",
        "      <td>0.000041</td>\n",
        "      <td>0.001309</td>\n",
        "      <td>0.001740</td>\n",
        "      <td>360</td>\n",
        "      <td>143</td>\n",
        "      <td>0.000</td>\n",
        "      <td>6107</td>\n",
        "      <td>191</td>\n",
        "      <td>0.053408</td>\n",
        "      <td>1068</td>\n",
        "      <td>1 min  0 sec</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>11th</th>\n",
        "      <td>Past</td>\n",
        "      <td>23Aug2020</td>\n",
        "      <td>06Sep2020</td>\n",
        "      <td>330457362</td>\n",
        "      <td>SIR-F</td>\n",
        "      <td>0.68</td>\n",
        "      <td>0.208771</td>\n",
        "      <td>0.000021</td>\n",
        "      <td>0.001255</td>\n",
        "      <td>0.001440</td>\n",
        "      <td>360</td>\n",
        "      <td>173</td>\n",
        "      <td>0.209</td>\n",
        "      <td>11761</td>\n",
        "      <td>199</td>\n",
        "      <td>0.298805</td>\n",
        "      <td>1077</td>\n",
        "      <td>1 min  0 sec</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>12th</th>\n",
        "      <td>Past</td>\n",
        "      <td>07Sep2020</td>\n",
        "      <td>23Sep2020</td>\n",
        "      <td>330457362</td>\n",
        "      <td>SIR-F</td>\n",
        "      <td>1.22</td>\n",
        "      <td>0.000872</td>\n",
        "      <td>0.000021</td>\n",
        "      <td>0.001452</td>\n",
        "      <td>0.001169</td>\n",
        "      <td>360</td>\n",
        "      <td>213</td>\n",
        "      <td>0.001</td>\n",
        "      <td>11761</td>\n",
        "      <td>172</td>\n",
        "      <td>0.017257</td>\n",
        "      <td>961</td>\n",
        "      <td>1 min  0 sec</td>\n",
        "    </tr>\n",
        "  </tbody>\n",
        "</table>\n",
        "</div>"
       ],
       "output_type": "pyout",
       "prompt_number": 12,
       "text": [
        "               Type      Start        End  Population    ODE    Rt     theta  \\\n",
        "Country Phase                                                                  \n",
        "Russia  0th    Past  12Feb2020  06May2020   330457362  SIR-F  0.02  0.602763   \n",
        "        1st    Past  07May2020  15May2020   330457362  SIR-F  2.46  0.000639   \n",
        "        2nd    Past  16May2020  23May2020   330457362  SIR-F  1.51  0.000440   \n",
        "        3rd    Past  24May2020  01Jun2020   330457362  SIR-F  1.08  0.000344   \n",
        "        4th    Past  02Jun2020  11Jun2020   330457362  SIR-F  0.97  0.000544   \n",
        "        5th    Past  12Jun2020  20Jun2020   330457362  SIR-F  0.82  0.021862   \n",
        "        6th    Past  21Jun2020  30Jun2020   330457362  SIR-F  0.90  0.021825   \n",
        "        7th    Past  01Jul2020  12Jul2020   330457362  SIR-F  0.96  0.002259   \n",
        "        8th    Past  13Jul2020  24Jul2020   330457362  SIR-F  0.67  0.039438   \n",
        "        9th    Past  25Jul2020  07Aug2020   330457362  SIR-F  0.78  0.020568   \n",
        "        10th   Past  08Aug2020  22Aug2020   330457362  SIR-F  0.73  0.000047   \n",
        "        11th   Past  23Aug2020  06Sep2020   330457362  SIR-F  0.68  0.208771   \n",
        "        12th   Past  07Sep2020  23Sep2020   330457362  SIR-F  1.22  0.000872   \n",
        "\n",
        "                  kappa       rho     sigma  tau  1/gamma [day]  alpha1 [-]  \\\n",
        "Country Phase                                                                 \n",
        "Russia  0th    0.544883  0.034081  0.002299  360            108       0.603   \n",
        "        1st    0.000117  0.013019  0.005178  360             48       0.001   \n",
        "        2nd    0.000098  0.007637  0.004942  360             50       0.000   \n",
        "        3rd    0.000113  0.005571  0.005055  360             49       0.000   \n",
        "        4th    0.000094  0.004795  0.004835  360             51       0.001   \n",
        "        5th    0.000002  0.003547  0.004245  360             58       0.022   \n",
        "        6th    0.000002  0.002769  0.003016  360             82       0.022   \n",
        "        7th    0.000084  0.002457  0.002469  360            101       0.002   \n",
        "        8th    0.000002  0.001928  0.002772  360             90       0.039   \n",
        "        9th    0.000004  0.001600  0.002013  360            124       0.021   \n",
        "        10th   0.000041  0.001309  0.001740  360            143       0.000   \n",
        "        11th   0.000021  0.001255  0.001440  360            173       0.209   \n",
        "        12th   0.000021  0.001452  0.001169  360            213       0.001   \n",
        "\n",
        "               1/alpha2 [day]  1/beta [day]      RMSLE  Trials       Runtime  \n",
        "Country Phase                                                                 \n",
        "Russia  0th                 0             7  18.966727    1029  1 min  0 sec  \n",
        "        1st              2144            19   0.066392     991  1 min  0 sec  \n",
        "        2nd              2549            32   0.057008    1045  1 min  0 sec  \n",
        "        3rd              2207            44   0.076325    1510  1 min  0 sec  \n",
        "        4th              2646            52   0.073158    1061  1 min  0 sec  \n",
        "        5th            132403            70   0.059759    1145  1 min  0 sec  \n",
        "        6th            132403            90   0.049641    1607  1 min  0 sec  \n",
        "        7th              2987           101   0.058841    1009  1 min  0 sec  \n",
        "        8th            103653           129   0.065274    1033  1 min  0 sec  \n",
        "        9th             68346           156   0.052216     961  1 min  0 sec  \n",
        "        10th             6107           191   0.053408    1068  1 min  0 sec  \n",
        "        11th            11761           199   0.298805    1077  1 min  0 sec  \n",
        "        12th            11761           172   0.017257     961  1 min  0 sec  "
       ]
      }
     ],
     "prompt_number": 12
    },
    {
     "cell_type": "markdown",
     "metadata": {},
     "source": [
      "## Compare the history of parameters\n",
      "Here, compare the history of parameter values if countries."
     ]
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "# All parameter/day parameter/Rt/OxCGRT\n",
      "analyser.track().head()"
     ],
     "language": "python",
     "metadata": {},
     "outputs": [
      {
       "html": [
        "<div>\n",
        "<style scoped>\n",
        "    .dataframe tbody tr th:only-of-type {\n",
        "        vertical-align: middle;\n",
        "    }\n",
        "\n",
        "    .dataframe tbody tr th {\n",
        "        vertical-align: top;\n",
        "    }\n",
        "\n",
        "    .dataframe thead th {\n",
        "        text-align: right;\n",
        "    }\n",
        "</style>\n",
        "<table border=\"1\" class=\"dataframe\">\n",
        "  <thead>\n",
        "    <tr style=\"text-align: right;\">\n",
        "      <th></th>\n",
        "      <th>Date</th>\n",
        "      <th>Country</th>\n",
        "      <th>theta</th>\n",
        "      <th>kappa</th>\n",
        "      <th>rho</th>\n",
        "      <th>sigma</th>\n",
        "      <th>alpha1 [-]</th>\n",
        "      <th>1/alpha2 [day]</th>\n",
        "      <th>1/beta [day]</th>\n",
        "      <th>1/gamma [day]</th>\n",
        "      <th>...</th>\n",
        "      <th>Cancel_events</th>\n",
        "      <th>Gatherings_restrictions</th>\n",
        "      <th>Transport_closing</th>\n",
        "      <th>Stay_home_restrictions</th>\n",
        "      <th>Internal_movement_restrictions</th>\n",
        "      <th>International_movement_restrictions</th>\n",
        "      <th>Information_campaigns</th>\n",
        "      <th>Testing_policy</th>\n",
        "      <th>Contact_tracing</th>\n",
        "      <th>Stringency_index</th>\n",
        "    </tr>\n",
        "  </thead>\n",
        "  <tbody>\n",
        "    <tr>\n",
        "      <th>0</th>\n",
        "      <td>2020-04-01</td>\n",
        "      <td>Bolivia</td>\n",
        "      <td>0.000948141</td>\n",
        "      <td>0.000812912</td>\n",
        "      <td>0.0205924</td>\n",
        "      <td>0.0016109</td>\n",
        "      <td>0.001</td>\n",
        "      <td>307</td>\n",
        "      <td>12</td>\n",
        "      <td>155</td>\n",
        "      <td>...</td>\n",
        "      <td>2</td>\n",
        "      <td>4</td>\n",
        "      <td>2</td>\n",
        "      <td>2</td>\n",
        "      <td>2</td>\n",
        "      <td>4</td>\n",
        "      <td>2</td>\n",
        "      <td>0</td>\n",
        "      <td>0</td>\n",
        "      <td>96.3</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>1</th>\n",
        "      <td>2020-04-02</td>\n",
        "      <td>Bolivia</td>\n",
        "      <td>0.000948141</td>\n",
        "      <td>0.000812912</td>\n",
        "      <td>0.0205924</td>\n",
        "      <td>0.0016109</td>\n",
        "      <td>0.001</td>\n",
        "      <td>307</td>\n",
        "      <td>12</td>\n",
        "      <td>155</td>\n",
        "      <td>...</td>\n",
        "      <td>2</td>\n",
        "      <td>4</td>\n",
        "      <td>2</td>\n",
        "      <td>2</td>\n",
        "      <td>2</td>\n",
        "      <td>4</td>\n",
        "      <td>2</td>\n",
        "      <td>0</td>\n",
        "      <td>0</td>\n",
        "      <td>96.3</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>2</th>\n",
        "      <td>2020-04-03</td>\n",
        "      <td>Bolivia</td>\n",
        "      <td>0.000948141</td>\n",
        "      <td>0.000812912</td>\n",
        "      <td>0.0205924</td>\n",
        "      <td>0.0016109</td>\n",
        "      <td>0.001</td>\n",
        "      <td>307</td>\n",
        "      <td>12</td>\n",
        "      <td>155</td>\n",
        "      <td>...</td>\n",
        "      <td>2</td>\n",
        "      <td>4</td>\n",
        "      <td>2</td>\n",
        "      <td>2</td>\n",
        "      <td>2</td>\n",
        "      <td>4</td>\n",
        "      <td>2</td>\n",
        "      <td>0</td>\n",
        "      <td>0</td>\n",
        "      <td>96.3</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>3</th>\n",
        "      <td>2020-04-04</td>\n",
        "      <td>Bolivia</td>\n",
        "      <td>0.000948141</td>\n",
        "      <td>0.000812912</td>\n",
        "      <td>0.0205924</td>\n",
        "      <td>0.0016109</td>\n",
        "      <td>0.001</td>\n",
        "      <td>307</td>\n",
        "      <td>12</td>\n",
        "      <td>155</td>\n",
        "      <td>...</td>\n",
        "      <td>2</td>\n",
        "      <td>4</td>\n",
        "      <td>2</td>\n",
        "      <td>2</td>\n",
        "      <td>2</td>\n",
        "      <td>4</td>\n",
        "      <td>2</td>\n",
        "      <td>0</td>\n",
        "      <td>0</td>\n",
        "      <td>96.3</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>4</th>\n",
        "      <td>2020-04-05</td>\n",
        "      <td>Bolivia</td>\n",
        "      <td>0.000948141</td>\n",
        "      <td>0.000812912</td>\n",
        "      <td>0.0205924</td>\n",
        "      <td>0.0016109</td>\n",
        "      <td>0.001</td>\n",
        "      <td>307</td>\n",
        "      <td>12</td>\n",
        "      <td>155</td>\n",
        "      <td>...</td>\n",
        "      <td>2</td>\n",
        "      <td>4</td>\n",
        "      <td>2</td>\n",
        "      <td>2</td>\n",
        "      <td>2</td>\n",
        "      <td>4</td>\n",
        "      <td>2</td>\n",
        "      <td>0</td>\n",
        "      <td>0</td>\n",
        "      <td>96.3</td>\n",
        "    </tr>\n",
        "  </tbody>\n",
        "</table>\n",
        "<p>5 rows \u00d7 23 columns</p>\n",
        "</div>"
       ],
       "output_type": "pyout",
       "prompt_number": 13,
       "text": [
        "        Date  Country        theta        kappa        rho      sigma  \\\n",
        "0 2020-04-01  Bolivia  0.000948141  0.000812912  0.0205924  0.0016109   \n",
        "1 2020-04-02  Bolivia  0.000948141  0.000812912  0.0205924  0.0016109   \n",
        "2 2020-04-03  Bolivia  0.000948141  0.000812912  0.0205924  0.0016109   \n",
        "3 2020-04-04  Bolivia  0.000948141  0.000812912  0.0205924  0.0016109   \n",
        "4 2020-04-05  Bolivia  0.000948141  0.000812912  0.0205924  0.0016109   \n",
        "\n",
        "  alpha1 [-] 1/alpha2 [day] 1/beta [day] 1/gamma [day]  ... Cancel_events  \\\n",
        "0      0.001            307           12           155  ...             2   \n",
        "1      0.001            307           12           155  ...             2   \n",
        "2      0.001            307           12           155  ...             2   \n",
        "3      0.001            307           12           155  ...             2   \n",
        "4      0.001            307           12           155  ...             2   \n",
        "\n",
        "   Gatherings_restrictions  Transport_closing  Stay_home_restrictions  \\\n",
        "0                        4                  2                       2   \n",
        "1                        4                  2                       2   \n",
        "2                        4                  2                       2   \n",
        "3                        4                  2                       2   \n",
        "4                        4                  2                       2   \n",
        "\n",
        "   Internal_movement_restrictions  International_movement_restrictions  \\\n",
        "0                               2                                    4   \n",
        "1                               2                                    4   \n",
        "2                               2                                    4   \n",
        "3                               2                                    4   \n",
        "4                               2                                    4   \n",
        "\n",
        "   Information_campaigns  Testing_policy  Contact_tracing  Stringency_index  \n",
        "0                      2               0                0              96.3  \n",
        "1                      2               0                0              96.3  \n",
        "2                      2               0                0              96.3  \n",
        "3                      2               0                0              96.3  \n",
        "4                      2               0                0              96.3  \n",
        "\n",
        "[5 rows x 23 columns]"
       ]
      }
     ],
     "prompt_number": 13
    },
    {
     "cell_type": "heading",
     "level": 3,
     "metadata": {},
     "source": [
      "$Rt$: Reprodcution number $\\mathrm{[-]}$"
     ]
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "analyser.param_history(\"Rt\", roll_window=None).tail()"
     ],
     "language": "python",
     "metadata": {},
     "outputs": [
      {
       "output_type": "display_data",
       "png": "\n",
       "text": [
        "<Figure size 648x432 with 1 Axes>"
       ]
      },
      {
       "html": [
        "<div>\n",
        "<style scoped>\n",
        "    .dataframe tbody tr th:only-of-type {\n",
        "        vertical-align: middle;\n",
        "    }\n",
        "\n",
        "    .dataframe tbody tr th {\n",
        "        vertical-align: top;\n",
        "    }\n",
        "\n",
        "    .dataframe thead th {\n",
        "        text-align: right;\n",
        "    }\n",
        "</style>\n",
        "<table border=\"1\" class=\"dataframe\">\n",
        "  <thead>\n",
        "    <tr style=\"text-align: right;\">\n",
        "      <th>Country</th>\n",
        "      <th>Bahrain</th>\n",
        "      <th>Bolivia</th>\n",
        "      <th>Bulgaria</th>\n",
        "      <th>Burkina Faso</th>\n",
        "      <th>Denmark</th>\n",
        "      <th>Egypt</th>\n",
        "      <th>Estonia</th>\n",
        "      <th>France</th>\n",
        "      <th>Guinea</th>\n",
        "      <th>Honduras</th>\n",
        "      <th>...</th>\n",
        "      <th>Italy</th>\n",
        "      <th>Kuwait</th>\n",
        "      <th>Mali</th>\n",
        "      <th>Mexico</th>\n",
        "      <th>Nigeria</th>\n",
        "      <th>Portugal</th>\n",
        "      <th>Russia</th>\n",
        "      <th>Turkey</th>\n",
        "      <th>United Arab Emirates</th>\n",
        "      <th>United States</th>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>Date</th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "    </tr>\n",
        "  </thead>\n",
        "  <tbody>\n",
        "    <tr>\n",
        "      <th>2020-09-19</th>\n",
        "      <td>1.14</td>\n",
        "      <td>0.6</td>\n",
        "      <td>0.93</td>\n",
        "      <td>2.63</td>\n",
        "      <td>0.76</td>\n",
        "      <td>0.19</td>\n",
        "      <td>1.72</td>\n",
        "      <td>11.93</td>\n",
        "      <td>0.69</td>\n",
        "      <td>0.39</td>\n",
        "      <td>...</td>\n",
        "      <td>4.05</td>\n",
        "      <td>1.41</td>\n",
        "      <td>1.33</td>\n",
        "      <td>0.88</td>\n",
        "      <td>0.84</td>\n",
        "      <td>3.7</td>\n",
        "      <td>1.22</td>\n",
        "      <td>1.23</td>\n",
        "      <td>1.06</td>\n",
        "      <td>2.36</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>2020-09-20</th>\n",
        "      <td>1.14</td>\n",
        "      <td>0.6</td>\n",
        "      <td>0.93</td>\n",
        "      <td>2.63</td>\n",
        "      <td>0.76</td>\n",
        "      <td>0.19</td>\n",
        "      <td>1.72</td>\n",
        "      <td>11.93</td>\n",
        "      <td>0.69</td>\n",
        "      <td>0.39</td>\n",
        "      <td>...</td>\n",
        "      <td>4.05</td>\n",
        "      <td>1.41</td>\n",
        "      <td>1.33</td>\n",
        "      <td>0.88</td>\n",
        "      <td>0.84</td>\n",
        "      <td>3.7</td>\n",
        "      <td>1.22</td>\n",
        "      <td>1.23</td>\n",
        "      <td>1.06</td>\n",
        "      <td>2.36</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>2020-09-21</th>\n",
        "      <td>1.14</td>\n",
        "      <td>0.6</td>\n",
        "      <td>0.93</td>\n",
        "      <td>2.63</td>\n",
        "      <td>0.76</td>\n",
        "      <td>0.19</td>\n",
        "      <td>1.72</td>\n",
        "      <td>11.93</td>\n",
        "      <td>0.69</td>\n",
        "      <td>0.39</td>\n",
        "      <td>...</td>\n",
        "      <td>4.05</td>\n",
        "      <td>1.41</td>\n",
        "      <td>1.33</td>\n",
        "      <td>0.88</td>\n",
        "      <td>0.84</td>\n",
        "      <td>3.7</td>\n",
        "      <td>1.22</td>\n",
        "      <td>1.23</td>\n",
        "      <td>1.06</td>\n",
        "      <td>2.36</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>2020-09-22</th>\n",
        "      <td>1.14</td>\n",
        "      <td>0.6</td>\n",
        "      <td>0.93</td>\n",
        "      <td>2.63</td>\n",
        "      <td>0.76</td>\n",
        "      <td>0.19</td>\n",
        "      <td>1.72</td>\n",
        "      <td>11.93</td>\n",
        "      <td>0.69</td>\n",
        "      <td>0.39</td>\n",
        "      <td>...</td>\n",
        "      <td>4.05</td>\n",
        "      <td>1.41</td>\n",
        "      <td>1.33</td>\n",
        "      <td>0.88</td>\n",
        "      <td>0.84</td>\n",
        "      <td>3.7</td>\n",
        "      <td>1.22</td>\n",
        "      <td>1.23</td>\n",
        "      <td>1.06</td>\n",
        "      <td>2.36</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>2020-09-23</th>\n",
        "      <td>1.14</td>\n",
        "      <td>0.6</td>\n",
        "      <td>0.93</td>\n",
        "      <td>2.63</td>\n",
        "      <td>0.76</td>\n",
        "      <td>0.19</td>\n",
        "      <td>1.72</td>\n",
        "      <td>11.93</td>\n",
        "      <td>0.69</td>\n",
        "      <td>0.39</td>\n",
        "      <td>...</td>\n",
        "      <td>4.05</td>\n",
        "      <td>1.41</td>\n",
        "      <td>1.33</td>\n",
        "      <td>0.88</td>\n",
        "      <td>0.84</td>\n",
        "      <td>3.7</td>\n",
        "      <td>1.22</td>\n",
        "      <td>1.23</td>\n",
        "      <td>1.06</td>\n",
        "      <td>2.36</td>\n",
        "    </tr>\n",
        "  </tbody>\n",
        "</table>\n",
        "<p>5 rows \u00d7 21 columns</p>\n",
        "</div>"
       ],
       "output_type": "pyout",
       "prompt_number": 14,
       "text": [
        "Country     Bahrain  Bolivia  Bulgaria  Burkina Faso  Denmark  Egypt  Estonia  \\\n",
        "Date                                                                            \n",
        "2020-09-19     1.14      0.6      0.93          2.63     0.76   0.19     1.72   \n",
        "2020-09-20     1.14      0.6      0.93          2.63     0.76   0.19     1.72   \n",
        "2020-09-21     1.14      0.6      0.93          2.63     0.76   0.19     1.72   \n",
        "2020-09-22     1.14      0.6      0.93          2.63     0.76   0.19     1.72   \n",
        "2020-09-23     1.14      0.6      0.93          2.63     0.76   0.19     1.72   \n",
        "\n",
        "Country     France  Guinea  Honduras  ...  Italy  Kuwait  Mali  Mexico  \\\n",
        "Date                                  ...                                \n",
        "2020-09-19   11.93    0.69      0.39  ...   4.05    1.41  1.33    0.88   \n",
        "2020-09-20   11.93    0.69      0.39  ...   4.05    1.41  1.33    0.88   \n",
        "2020-09-21   11.93    0.69      0.39  ...   4.05    1.41  1.33    0.88   \n",
        "2020-09-22   11.93    0.69      0.39  ...   4.05    1.41  1.33    0.88   \n",
        "2020-09-23   11.93    0.69      0.39  ...   4.05    1.41  1.33    0.88   \n",
        "\n",
        "Country     Nigeria  Portugal  Russia  Turkey  United Arab Emirates  \\\n",
        "Date                                                                  \n",
        "2020-09-19     0.84       3.7    1.22    1.23                  1.06   \n",
        "2020-09-20     0.84       3.7    1.22    1.23                  1.06   \n",
        "2020-09-21     0.84       3.7    1.22    1.23                  1.06   \n",
        "2020-09-22     0.84       3.7    1.22    1.23                  1.06   \n",
        "2020-09-23     0.84       3.7    1.22    1.23                  1.06   \n",
        "\n",
        "Country     United States  \n",
        "Date                       \n",
        "2020-09-19           2.36  \n",
        "2020-09-20           2.36  \n",
        "2020-09-21           2.36  \n",
        "2020-09-22           2.36  \n",
        "2020-09-23           2.36  \n",
        "\n",
        "[5 rows x 21 columns]"
       ]
      }
     ],
     "prompt_number": 14
    },
    {
     "cell_type": "heading",
     "level": 3,
     "metadata": {},
     "source": [
      "$\\rho$: Effective contact rate $\\mathrm{[-]}$"
     ]
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "analyser.param_history(\"rho\", roll_window=None).tail()"
     ],
     "language": "python",
     "metadata": {},
     "outputs": [
      {
       "output_type": "display_data",
       "png": "\n",
       "text": [
        "<Figure size 648x432 with 1 Axes>"
       ]
      },
      {
       "html": [
        "<div>\n",
        "<style scoped>\n",
        "    .dataframe tbody tr th:only-of-type {\n",
        "        vertical-align: middle;\n",
        "    }\n",
        "\n",
        "    .dataframe tbody tr th {\n",
        "        vertical-align: top;\n",
        "    }\n",
        "\n",
        "    .dataframe thead th {\n",
        "        text-align: right;\n",
        "    }\n",
        "</style>\n",
        "<table border=\"1\" class=\"dataframe\">\n",
        "  <thead>\n",
        "    <tr style=\"text-align: right;\">\n",
        "      <th>Country</th>\n",
        "      <th>Bahrain</th>\n",
        "      <th>Bolivia</th>\n",
        "      <th>Bulgaria</th>\n",
        "      <th>Burkina Faso</th>\n",
        "      <th>Denmark</th>\n",
        "      <th>Egypt</th>\n",
        "      <th>Estonia</th>\n",
        "      <th>France</th>\n",
        "      <th>Guinea</th>\n",
        "      <th>Honduras</th>\n",
        "      <th>...</th>\n",
        "      <th>Italy</th>\n",
        "      <th>Kuwait</th>\n",
        "      <th>Mali</th>\n",
        "      <th>Mexico</th>\n",
        "      <th>Nigeria</th>\n",
        "      <th>Portugal</th>\n",
        "      <th>Russia</th>\n",
        "      <th>Turkey</th>\n",
        "      <th>United Arab Emirates</th>\n",
        "      <th>United States</th>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>Date</th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "    </tr>\n",
        "  </thead>\n",
        "  <tbody>\n",
        "    <tr>\n",
        "      <th>2020-09-19</th>\n",
        "      <td>0.026306</td>\n",
        "      <td>0.003466</td>\n",
        "      <td>0.006852</td>\n",
        "      <td>0.009667</td>\n",
        "      <td>0.017467</td>\n",
        "      <td>0.003722</td>\n",
        "      <td>0.018978</td>\n",
        "      <td>0.00485</td>\n",
        "      <td>0.013358</td>\n",
        "      <td>0.001356</td>\n",
        "      <td>...</td>\n",
        "      <td>0.01379</td>\n",
        "      <td>0.023646</td>\n",
        "      <td>0.004953</td>\n",
        "      <td>0.031516</td>\n",
        "      <td>0.003937</td>\n",
        "      <td>0.002553</td>\n",
        "      <td>0.001452</td>\n",
        "      <td>0.025673</td>\n",
        "      <td>0.018948</td>\n",
        "      <td>0.002418</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>2020-09-20</th>\n",
        "      <td>0.026306</td>\n",
        "      <td>0.003466</td>\n",
        "      <td>0.006852</td>\n",
        "      <td>0.009667</td>\n",
        "      <td>0.017467</td>\n",
        "      <td>0.003722</td>\n",
        "      <td>0.018978</td>\n",
        "      <td>0.00485</td>\n",
        "      <td>0.013358</td>\n",
        "      <td>0.001356</td>\n",
        "      <td>...</td>\n",
        "      <td>0.01379</td>\n",
        "      <td>0.023646</td>\n",
        "      <td>0.004953</td>\n",
        "      <td>0.031516</td>\n",
        "      <td>0.003937</td>\n",
        "      <td>0.002553</td>\n",
        "      <td>0.001452</td>\n",
        "      <td>0.025673</td>\n",
        "      <td>0.018948</td>\n",
        "      <td>0.002418</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>2020-09-21</th>\n",
        "      <td>0.026306</td>\n",
        "      <td>0.003466</td>\n",
        "      <td>0.006852</td>\n",
        "      <td>0.009667</td>\n",
        "      <td>0.017467</td>\n",
        "      <td>0.003722</td>\n",
        "      <td>0.018978</td>\n",
        "      <td>0.00485</td>\n",
        "      <td>0.013358</td>\n",
        "      <td>0.001356</td>\n",
        "      <td>...</td>\n",
        "      <td>0.01379</td>\n",
        "      <td>0.023646</td>\n",
        "      <td>0.004953</td>\n",
        "      <td>0.031516</td>\n",
        "      <td>0.003937</td>\n",
        "      <td>0.002553</td>\n",
        "      <td>0.001452</td>\n",
        "      <td>0.025673</td>\n",
        "      <td>0.018948</td>\n",
        "      <td>0.002418</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>2020-09-22</th>\n",
        "      <td>0.026306</td>\n",
        "      <td>0.003466</td>\n",
        "      <td>0.006852</td>\n",
        "      <td>0.009667</td>\n",
        "      <td>0.017467</td>\n",
        "      <td>0.003722</td>\n",
        "      <td>0.018978</td>\n",
        "      <td>0.00485</td>\n",
        "      <td>0.013358</td>\n",
        "      <td>0.001356</td>\n",
        "      <td>...</td>\n",
        "      <td>0.01379</td>\n",
        "      <td>0.023646</td>\n",
        "      <td>0.004953</td>\n",
        "      <td>0.031516</td>\n",
        "      <td>0.003937</td>\n",
        "      <td>0.002553</td>\n",
        "      <td>0.001452</td>\n",
        "      <td>0.025673</td>\n",
        "      <td>0.018948</td>\n",
        "      <td>0.002418</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>2020-09-23</th>\n",
        "      <td>0.026306</td>\n",
        "      <td>0.003466</td>\n",
        "      <td>0.006852</td>\n",
        "      <td>0.009667</td>\n",
        "      <td>0.017467</td>\n",
        "      <td>0.003722</td>\n",
        "      <td>0.018978</td>\n",
        "      <td>0.00485</td>\n",
        "      <td>0.013358</td>\n",
        "      <td>0.001356</td>\n",
        "      <td>...</td>\n",
        "      <td>0.01379</td>\n",
        "      <td>0.023646</td>\n",
        "      <td>0.004953</td>\n",
        "      <td>0.031516</td>\n",
        "      <td>0.003937</td>\n",
        "      <td>0.002553</td>\n",
        "      <td>0.001452</td>\n",
        "      <td>0.025673</td>\n",
        "      <td>0.018948</td>\n",
        "      <td>0.002418</td>\n",
        "    </tr>\n",
        "  </tbody>\n",
        "</table>\n",
        "<p>5 rows \u00d7 21 columns</p>\n",
        "</div>"
       ],
       "output_type": "pyout",
       "prompt_number": 15,
       "text": [
        "Country      Bahrain   Bolivia  Bulgaria  Burkina Faso   Denmark     Egypt  \\\n",
        "Date                                                                         \n",
        "2020-09-19  0.026306  0.003466  0.006852      0.009667  0.017467  0.003722   \n",
        "2020-09-20  0.026306  0.003466  0.006852      0.009667  0.017467  0.003722   \n",
        "2020-09-21  0.026306  0.003466  0.006852      0.009667  0.017467  0.003722   \n",
        "2020-09-22  0.026306  0.003466  0.006852      0.009667  0.017467  0.003722   \n",
        "2020-09-23  0.026306  0.003466  0.006852      0.009667  0.017467  0.003722   \n",
        "\n",
        "Country      Estonia   France    Guinea  Honduras  ...    Italy    Kuwait  \\\n",
        "Date                                               ...                      \n",
        "2020-09-19  0.018978  0.00485  0.013358  0.001356  ...  0.01379  0.023646   \n",
        "2020-09-20  0.018978  0.00485  0.013358  0.001356  ...  0.01379  0.023646   \n",
        "2020-09-21  0.018978  0.00485  0.013358  0.001356  ...  0.01379  0.023646   \n",
        "2020-09-22  0.018978  0.00485  0.013358  0.001356  ...  0.01379  0.023646   \n",
        "2020-09-23  0.018978  0.00485  0.013358  0.001356  ...  0.01379  0.023646   \n",
        "\n",
        "Country         Mali    Mexico   Nigeria  Portugal    Russia    Turkey  \\\n",
        "Date                                                                     \n",
        "2020-09-19  0.004953  0.031516  0.003937  0.002553  0.001452  0.025673   \n",
        "2020-09-20  0.004953  0.031516  0.003937  0.002553  0.001452  0.025673   \n",
        "2020-09-21  0.004953  0.031516  0.003937  0.002553  0.001452  0.025673   \n",
        "2020-09-22  0.004953  0.031516  0.003937  0.002553  0.001452  0.025673   \n",
        "2020-09-23  0.004953  0.031516  0.003937  0.002553  0.001452  0.025673   \n",
        "\n",
        "Country     United Arab Emirates  United States  \n",
        "Date                                             \n",
        "2020-09-19              0.018948       0.002418  \n",
        "2020-09-20              0.018948       0.002418  \n",
        "2020-09-21              0.018948       0.002418  \n",
        "2020-09-22              0.018948       0.002418  \n",
        "2020-09-23              0.018948       0.002418  \n",
        "\n",
        "[5 rows x 21 columns]"
       ]
      }
     ],
     "prompt_number": 15
    },
    {
     "cell_type": "heading",
     "level": 3,
     "metadata": {},
     "source": [
      "$\\sigma$: Recovery rate $\\mathrm{[-]}$"
     ]
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "analyser.param_history(\"sigma\", roll_window=None).tail()"
     ],
     "language": "python",
     "metadata": {},
     "outputs": [
      {
       "output_type": "display_data",
       "png": "\n",
       "text": [
        "<Figure size 648x432 with 1 Axes>"
       ]
      },
      {
       "html": [
        "<div>\n",
        "<style scoped>\n",
        "    .dataframe tbody tr th:only-of-type {\n",
        "        vertical-align: middle;\n",
        "    }\n",
        "\n",
        "    .dataframe tbody tr th {\n",
        "        vertical-align: top;\n",
        "    }\n",
        "\n",
        "    .dataframe thead th {\n",
        "        text-align: right;\n",
        "    }\n",
        "</style>\n",
        "<table border=\"1\" class=\"dataframe\">\n",
        "  <thead>\n",
        "    <tr style=\"text-align: right;\">\n",
        "      <th>Country</th>\n",
        "      <th>Bahrain</th>\n",
        "      <th>Bolivia</th>\n",
        "      <th>Bulgaria</th>\n",
        "      <th>Burkina Faso</th>\n",
        "      <th>Denmark</th>\n",
        "      <th>Egypt</th>\n",
        "      <th>Estonia</th>\n",
        "      <th>France</th>\n",
        "      <th>Guinea</th>\n",
        "      <th>Honduras</th>\n",
        "      <th>...</th>\n",
        "      <th>Italy</th>\n",
        "      <th>Kuwait</th>\n",
        "      <th>Mali</th>\n",
        "      <th>Mexico</th>\n",
        "      <th>Nigeria</th>\n",
        "      <th>Portugal</th>\n",
        "      <th>Russia</th>\n",
        "      <th>Turkey</th>\n",
        "      <th>United Arab Emirates</th>\n",
        "      <th>United States</th>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>Date</th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "    </tr>\n",
        "  </thead>\n",
        "  <tbody>\n",
        "    <tr>\n",
        "      <th>2020-09-19</th>\n",
        "      <td>0.022966</td>\n",
        "      <td>0.005333</td>\n",
        "      <td>0.006912</td>\n",
        "      <td>0.003539</td>\n",
        "      <td>0.023021</td>\n",
        "      <td>0.018042</td>\n",
        "      <td>0.011051</td>\n",
        "      <td>0.000381</td>\n",
        "      <td>0.019186</td>\n",
        "      <td>0.003214</td>\n",
        "      <td>...</td>\n",
        "      <td>0.003347</td>\n",
        "      <td>0.016756</td>\n",
        "      <td>0.003702</td>\n",
        "      <td>0.032821</td>\n",
        "      <td>0.004568</td>\n",
        "      <td>0.000657</td>\n",
        "      <td>0.001169</td>\n",
        "      <td>0.020534</td>\n",
        "      <td>0.017779</td>\n",
        "      <td>0.000997</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>2020-09-20</th>\n",
        "      <td>0.022966</td>\n",
        "      <td>0.005333</td>\n",
        "      <td>0.006912</td>\n",
        "      <td>0.003539</td>\n",
        "      <td>0.023021</td>\n",
        "      <td>0.018042</td>\n",
        "      <td>0.011051</td>\n",
        "      <td>0.000381</td>\n",
        "      <td>0.019186</td>\n",
        "      <td>0.003214</td>\n",
        "      <td>...</td>\n",
        "      <td>0.003347</td>\n",
        "      <td>0.016756</td>\n",
        "      <td>0.003702</td>\n",
        "      <td>0.032821</td>\n",
        "      <td>0.004568</td>\n",
        "      <td>0.000657</td>\n",
        "      <td>0.001169</td>\n",
        "      <td>0.020534</td>\n",
        "      <td>0.017779</td>\n",
        "      <td>0.000997</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>2020-09-21</th>\n",
        "      <td>0.022966</td>\n",
        "      <td>0.005333</td>\n",
        "      <td>0.006912</td>\n",
        "      <td>0.003539</td>\n",
        "      <td>0.023021</td>\n",
        "      <td>0.018042</td>\n",
        "      <td>0.011051</td>\n",
        "      <td>0.000381</td>\n",
        "      <td>0.019186</td>\n",
        "      <td>0.003214</td>\n",
        "      <td>...</td>\n",
        "      <td>0.003347</td>\n",
        "      <td>0.016756</td>\n",
        "      <td>0.003702</td>\n",
        "      <td>0.032821</td>\n",
        "      <td>0.004568</td>\n",
        "      <td>0.000657</td>\n",
        "      <td>0.001169</td>\n",
        "      <td>0.020534</td>\n",
        "      <td>0.017779</td>\n",
        "      <td>0.000997</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>2020-09-22</th>\n",
        "      <td>0.022966</td>\n",
        "      <td>0.005333</td>\n",
        "      <td>0.006912</td>\n",
        "      <td>0.003539</td>\n",
        "      <td>0.023021</td>\n",
        "      <td>0.018042</td>\n",
        "      <td>0.011051</td>\n",
        "      <td>0.000381</td>\n",
        "      <td>0.019186</td>\n",
        "      <td>0.003214</td>\n",
        "      <td>...</td>\n",
        "      <td>0.003347</td>\n",
        "      <td>0.016756</td>\n",
        "      <td>0.003702</td>\n",
        "      <td>0.032821</td>\n",
        "      <td>0.004568</td>\n",
        "      <td>0.000657</td>\n",
        "      <td>0.001169</td>\n",
        "      <td>0.020534</td>\n",
        "      <td>0.017779</td>\n",
        "      <td>0.000997</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>2020-09-23</th>\n",
        "      <td>0.022966</td>\n",
        "      <td>0.005333</td>\n",
        "      <td>0.006912</td>\n",
        "      <td>0.003539</td>\n",
        "      <td>0.023021</td>\n",
        "      <td>0.018042</td>\n",
        "      <td>0.011051</td>\n",
        "      <td>0.000381</td>\n",
        "      <td>0.019186</td>\n",
        "      <td>0.003214</td>\n",
        "      <td>...</td>\n",
        "      <td>0.003347</td>\n",
        "      <td>0.016756</td>\n",
        "      <td>0.003702</td>\n",
        "      <td>0.032821</td>\n",
        "      <td>0.004568</td>\n",
        "      <td>0.000657</td>\n",
        "      <td>0.001169</td>\n",
        "      <td>0.020534</td>\n",
        "      <td>0.017779</td>\n",
        "      <td>0.000997</td>\n",
        "    </tr>\n",
        "  </tbody>\n",
        "</table>\n",
        "<p>5 rows \u00d7 21 columns</p>\n",
        "</div>"
       ],
       "output_type": "pyout",
       "prompt_number": 16,
       "text": [
        "Country      Bahrain   Bolivia  Bulgaria  Burkina Faso   Denmark     Egypt  \\\n",
        "Date                                                                         \n",
        "2020-09-19  0.022966  0.005333  0.006912      0.003539  0.023021  0.018042   \n",
        "2020-09-20  0.022966  0.005333  0.006912      0.003539  0.023021  0.018042   \n",
        "2020-09-21  0.022966  0.005333  0.006912      0.003539  0.023021  0.018042   \n",
        "2020-09-22  0.022966  0.005333  0.006912      0.003539  0.023021  0.018042   \n",
        "2020-09-23  0.022966  0.005333  0.006912      0.003539  0.023021  0.018042   \n",
        "\n",
        "Country      Estonia    France    Guinea  Honduras  ...     Italy    Kuwait  \\\n",
        "Date                                                ...                       \n",
        "2020-09-19  0.011051  0.000381  0.019186  0.003214  ...  0.003347  0.016756   \n",
        "2020-09-20  0.011051  0.000381  0.019186  0.003214  ...  0.003347  0.016756   \n",
        "2020-09-21  0.011051  0.000381  0.019186  0.003214  ...  0.003347  0.016756   \n",
        "2020-09-22  0.011051  0.000381  0.019186  0.003214  ...  0.003347  0.016756   \n",
        "2020-09-23  0.011051  0.000381  0.019186  0.003214  ...  0.003347  0.016756   \n",
        "\n",
        "Country         Mali    Mexico   Nigeria  Portugal    Russia    Turkey  \\\n",
        "Date                                                                     \n",
        "2020-09-19  0.003702  0.032821  0.004568  0.000657  0.001169  0.020534   \n",
        "2020-09-20  0.003702  0.032821  0.004568  0.000657  0.001169  0.020534   \n",
        "2020-09-21  0.003702  0.032821  0.004568  0.000657  0.001169  0.020534   \n",
        "2020-09-22  0.003702  0.032821  0.004568  0.000657  0.001169  0.020534   \n",
        "2020-09-23  0.003702  0.032821  0.004568  0.000657  0.001169  0.020534   \n",
        "\n",
        "Country     United Arab Emirates  United States  \n",
        "Date                                             \n",
        "2020-09-19              0.017779       0.000997  \n",
        "2020-09-20              0.017779       0.000997  \n",
        "2020-09-21              0.017779       0.000997  \n",
        "2020-09-22              0.017779       0.000997  \n",
        "2020-09-23              0.017779       0.000997  \n",
        "\n",
        "[5 rows x 21 columns]"
       ]
      }
     ],
     "prompt_number": 16
    },
    {
     "cell_type": "heading",
     "level": 3,
     "metadata": {},
     "source": [
      "$\\kappa$: Mortality rate of infected cases $\\mathrm{[-]}$"
     ]
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "analyser.param_history(\"kappa\", roll_window=None).tail()"
     ],
     "language": "python",
     "metadata": {},
     "outputs": [
      {
       "output_type": "display_data",
       "png": "\n",
       "text": [
        "<Figure size 648x432 with 1 Axes>"
       ]
      },
      {
       "html": [
        "<div>\n",
        "<style scoped>\n",
        "    .dataframe tbody tr th:only-of-type {\n",
        "        vertical-align: middle;\n",
        "    }\n",
        "\n",
        "    .dataframe tbody tr th {\n",
        "        vertical-align: top;\n",
        "    }\n",
        "\n",
        "    .dataframe thead th {\n",
        "        text-align: right;\n",
        "    }\n",
        "</style>\n",
        "<table border=\"1\" class=\"dataframe\">\n",
        "  <thead>\n",
        "    <tr style=\"text-align: right;\">\n",
        "      <th>Country</th>\n",
        "      <th>Bahrain</th>\n",
        "      <th>Bolivia</th>\n",
        "      <th>Bulgaria</th>\n",
        "      <th>Burkina Faso</th>\n",
        "      <th>Denmark</th>\n",
        "      <th>Egypt</th>\n",
        "      <th>Estonia</th>\n",
        "      <th>France</th>\n",
        "      <th>Guinea</th>\n",
        "      <th>Honduras</th>\n",
        "      <th>...</th>\n",
        "      <th>Italy</th>\n",
        "      <th>Kuwait</th>\n",
        "      <th>Mali</th>\n",
        "      <th>Mexico</th>\n",
        "      <th>Nigeria</th>\n",
        "      <th>Portugal</th>\n",
        "      <th>Russia</th>\n",
        "      <th>Turkey</th>\n",
        "      <th>United Arab Emirates</th>\n",
        "      <th>United States</th>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>Date</th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "    </tr>\n",
        "  </thead>\n",
        "  <tbody>\n",
        "    <tr>\n",
        "      <th>2020-09-19</th>\n",
        "      <td>0.000036</td>\n",
        "      <td>0.000037</td>\n",
        "      <td>0.000426</td>\n",
        "      <td>0.000136</td>\n",
        "      <td>0.000104</td>\n",
        "      <td>0.00007</td>\n",
        "      <td>0.000002</td>\n",
        "      <td>0.000025</td>\n",
        "      <td>0.000046</td>\n",
        "      <td>0.000021</td>\n",
        "      <td>...</td>\n",
        "      <td>0.00006</td>\n",
        "      <td>0.00006</td>\n",
        "      <td>0.000021</td>\n",
        "      <td>0.000447</td>\n",
        "      <td>0.000019</td>\n",
        "      <td>0.000031</td>\n",
        "      <td>0.000021</td>\n",
        "      <td>0.000005</td>\n",
        "      <td>0.000002</td>\n",
        "      <td>0.000025</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>2020-09-20</th>\n",
        "      <td>0.000036</td>\n",
        "      <td>0.000037</td>\n",
        "      <td>0.000426</td>\n",
        "      <td>0.000136</td>\n",
        "      <td>0.000104</td>\n",
        "      <td>0.00007</td>\n",
        "      <td>0.000002</td>\n",
        "      <td>0.000025</td>\n",
        "      <td>0.000046</td>\n",
        "      <td>0.000021</td>\n",
        "      <td>...</td>\n",
        "      <td>0.00006</td>\n",
        "      <td>0.00006</td>\n",
        "      <td>0.000021</td>\n",
        "      <td>0.000447</td>\n",
        "      <td>0.000019</td>\n",
        "      <td>0.000031</td>\n",
        "      <td>0.000021</td>\n",
        "      <td>0.000005</td>\n",
        "      <td>0.000002</td>\n",
        "      <td>0.000025</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>2020-09-21</th>\n",
        "      <td>0.000036</td>\n",
        "      <td>0.000037</td>\n",
        "      <td>0.000426</td>\n",
        "      <td>0.000136</td>\n",
        "      <td>0.000104</td>\n",
        "      <td>0.00007</td>\n",
        "      <td>0.000002</td>\n",
        "      <td>0.000025</td>\n",
        "      <td>0.000046</td>\n",
        "      <td>0.000021</td>\n",
        "      <td>...</td>\n",
        "      <td>0.00006</td>\n",
        "      <td>0.00006</td>\n",
        "      <td>0.000021</td>\n",
        "      <td>0.000447</td>\n",
        "      <td>0.000019</td>\n",
        "      <td>0.000031</td>\n",
        "      <td>0.000021</td>\n",
        "      <td>0.000005</td>\n",
        "      <td>0.000002</td>\n",
        "      <td>0.000025</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>2020-09-22</th>\n",
        "      <td>0.000036</td>\n",
        "      <td>0.000037</td>\n",
        "      <td>0.000426</td>\n",
        "      <td>0.000136</td>\n",
        "      <td>0.000104</td>\n",
        "      <td>0.00007</td>\n",
        "      <td>0.000002</td>\n",
        "      <td>0.000025</td>\n",
        "      <td>0.000046</td>\n",
        "      <td>0.000021</td>\n",
        "      <td>...</td>\n",
        "      <td>0.00006</td>\n",
        "      <td>0.00006</td>\n",
        "      <td>0.000021</td>\n",
        "      <td>0.000447</td>\n",
        "      <td>0.000019</td>\n",
        "      <td>0.000031</td>\n",
        "      <td>0.000021</td>\n",
        "      <td>0.000005</td>\n",
        "      <td>0.000002</td>\n",
        "      <td>0.000025</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>2020-09-23</th>\n",
        "      <td>0.000036</td>\n",
        "      <td>0.000037</td>\n",
        "      <td>0.000426</td>\n",
        "      <td>0.000136</td>\n",
        "      <td>0.000104</td>\n",
        "      <td>0.00007</td>\n",
        "      <td>0.000002</td>\n",
        "      <td>0.000025</td>\n",
        "      <td>0.000046</td>\n",
        "      <td>0.000021</td>\n",
        "      <td>...</td>\n",
        "      <td>0.00006</td>\n",
        "      <td>0.00006</td>\n",
        "      <td>0.000021</td>\n",
        "      <td>0.000447</td>\n",
        "      <td>0.000019</td>\n",
        "      <td>0.000031</td>\n",
        "      <td>0.000021</td>\n",
        "      <td>0.000005</td>\n",
        "      <td>0.000002</td>\n",
        "      <td>0.000025</td>\n",
        "    </tr>\n",
        "  </tbody>\n",
        "</table>\n",
        "<p>5 rows \u00d7 21 columns</p>\n",
        "</div>"
       ],
       "output_type": "pyout",
       "prompt_number": 17,
       "text": [
        "Country      Bahrain   Bolivia  Bulgaria  Burkina Faso   Denmark    Egypt  \\\n",
        "Date                                                                        \n",
        "2020-09-19  0.000036  0.000037  0.000426      0.000136  0.000104  0.00007   \n",
        "2020-09-20  0.000036  0.000037  0.000426      0.000136  0.000104  0.00007   \n",
        "2020-09-21  0.000036  0.000037  0.000426      0.000136  0.000104  0.00007   \n",
        "2020-09-22  0.000036  0.000037  0.000426      0.000136  0.000104  0.00007   \n",
        "2020-09-23  0.000036  0.000037  0.000426      0.000136  0.000104  0.00007   \n",
        "\n",
        "Country      Estonia    France    Guinea  Honduras  ...    Italy   Kuwait  \\\n",
        "Date                                                ...                     \n",
        "2020-09-19  0.000002  0.000025  0.000046  0.000021  ...  0.00006  0.00006   \n",
        "2020-09-20  0.000002  0.000025  0.000046  0.000021  ...  0.00006  0.00006   \n",
        "2020-09-21  0.000002  0.000025  0.000046  0.000021  ...  0.00006  0.00006   \n",
        "2020-09-22  0.000002  0.000025  0.000046  0.000021  ...  0.00006  0.00006   \n",
        "2020-09-23  0.000002  0.000025  0.000046  0.000021  ...  0.00006  0.00006   \n",
        "\n",
        "Country         Mali    Mexico   Nigeria  Portugal    Russia    Turkey  \\\n",
        "Date                                                                     \n",
        "2020-09-19  0.000021  0.000447  0.000019  0.000031  0.000021  0.000005   \n",
        "2020-09-20  0.000021  0.000447  0.000019  0.000031  0.000021  0.000005   \n",
        "2020-09-21  0.000021  0.000447  0.000019  0.000031  0.000021  0.000005   \n",
        "2020-09-22  0.000021  0.000447  0.000019  0.000031  0.000021  0.000005   \n",
        "2020-09-23  0.000021  0.000447  0.000019  0.000031  0.000021  0.000005   \n",
        "\n",
        "Country     United Arab Emirates  United States  \n",
        "Date                                             \n",
        "2020-09-19              0.000002       0.000025  \n",
        "2020-09-20              0.000002       0.000025  \n",
        "2020-09-21              0.000002       0.000025  \n",
        "2020-09-22              0.000002       0.000025  \n",
        "2020-09-23              0.000002       0.000025  \n",
        "\n",
        "[5 rows x 21 columns]"
       ]
      }
     ],
     "prompt_number": 17
    },
    {
     "cell_type": "heading",
     "level": 3,
     "metadata": {},
     "source": [
      "$\\theta$: Mortality rate of S$^\\ast$ cases $\\mathrm{[-]}$"
     ]
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "analyser.param_history(\"theta\", roll_window=None).tail()"
     ],
     "language": "python",
     "metadata": {},
     "outputs": [
      {
       "output_type": "display_data",
       "png": "\n",
       "text": [
        "<Figure size 648x432 with 1 Axes>"
       ]
      },
      {
       "html": [
        "<div>\n",
        "<style scoped>\n",
        "    .dataframe tbody tr th:only-of-type {\n",
        "        vertical-align: middle;\n",
        "    }\n",
        "\n",
        "    .dataframe tbody tr th {\n",
        "        vertical-align: top;\n",
        "    }\n",
        "\n",
        "    .dataframe thead th {\n",
        "        text-align: right;\n",
        "    }\n",
        "</style>\n",
        "<table border=\"1\" class=\"dataframe\">\n",
        "  <thead>\n",
        "    <tr style=\"text-align: right;\">\n",
        "      <th>Country</th>\n",
        "      <th>Bahrain</th>\n",
        "      <th>Bolivia</th>\n",
        "      <th>Bulgaria</th>\n",
        "      <th>Burkina Faso</th>\n",
        "      <th>Denmark</th>\n",
        "      <th>Egypt</th>\n",
        "      <th>Estonia</th>\n",
        "      <th>France</th>\n",
        "      <th>Guinea</th>\n",
        "      <th>Honduras</th>\n",
        "      <th>...</th>\n",
        "      <th>Italy</th>\n",
        "      <th>Kuwait</th>\n",
        "      <th>Mali</th>\n",
        "      <th>Mexico</th>\n",
        "      <th>Nigeria</th>\n",
        "      <th>Portugal</th>\n",
        "      <th>Russia</th>\n",
        "      <th>Turkey</th>\n",
        "      <th>United Arab Emirates</th>\n",
        "      <th>United States</th>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>Date</th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "      <th></th>\n",
        "    </tr>\n",
        "  </thead>\n",
        "  <tbody>\n",
        "    <tr>\n",
        "      <th>2020-09-19</th>\n",
        "      <td>0.001816</td>\n",
        "      <td>0.072771</td>\n",
        "      <td>0.000585</td>\n",
        "      <td>0.000428</td>\n",
        "      <td>0.000122</td>\n",
        "      <td>0.085896</td>\n",
        "      <td>0.000097</td>\n",
        "      <td>0.001245</td>\n",
        "      <td>0.001251</td>\n",
        "      <td>0.068234</td>\n",
        "      <td>...</td>\n",
        "      <td>0.00016</td>\n",
        "      <td>0.000157</td>\n",
        "      <td>0.000693</td>\n",
        "      <td>0.072405</td>\n",
        "      <td>0.021321</td>\n",
        "      <td>0.002704</td>\n",
        "      <td>0.000872</td>\n",
        "      <td>0.019114</td>\n",
        "      <td>0.00149</td>\n",
        "      <td>0.001328</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>2020-09-20</th>\n",
        "      <td>0.001816</td>\n",
        "      <td>0.072771</td>\n",
        "      <td>0.000585</td>\n",
        "      <td>0.000428</td>\n",
        "      <td>0.000122</td>\n",
        "      <td>0.085896</td>\n",
        "      <td>0.000097</td>\n",
        "      <td>0.001245</td>\n",
        "      <td>0.001251</td>\n",
        "      <td>0.068234</td>\n",
        "      <td>...</td>\n",
        "      <td>0.00016</td>\n",
        "      <td>0.000157</td>\n",
        "      <td>0.000693</td>\n",
        "      <td>0.072405</td>\n",
        "      <td>0.021321</td>\n",
        "      <td>0.002704</td>\n",
        "      <td>0.000872</td>\n",
        "      <td>0.019114</td>\n",
        "      <td>0.00149</td>\n",
        "      <td>0.001328</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>2020-09-21</th>\n",
        "      <td>0.001816</td>\n",
        "      <td>0.072771</td>\n",
        "      <td>0.000585</td>\n",
        "      <td>0.000428</td>\n",
        "      <td>0.000122</td>\n",
        "      <td>0.085896</td>\n",
        "      <td>0.000097</td>\n",
        "      <td>0.001245</td>\n",
        "      <td>0.001251</td>\n",
        "      <td>0.068234</td>\n",
        "      <td>...</td>\n",
        "      <td>0.00016</td>\n",
        "      <td>0.000157</td>\n",
        "      <td>0.000693</td>\n",
        "      <td>0.072405</td>\n",
        "      <td>0.021321</td>\n",
        "      <td>0.002704</td>\n",
        "      <td>0.000872</td>\n",
        "      <td>0.019114</td>\n",
        "      <td>0.00149</td>\n",
        "      <td>0.001328</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>2020-09-22</th>\n",
        "      <td>0.001816</td>\n",
        "      <td>0.072771</td>\n",
        "      <td>0.000585</td>\n",
        "      <td>0.000428</td>\n",
        "      <td>0.000122</td>\n",
        "      <td>0.085896</td>\n",
        "      <td>0.000097</td>\n",
        "      <td>0.001245</td>\n",
        "      <td>0.001251</td>\n",
        "      <td>0.068234</td>\n",
        "      <td>...</td>\n",
        "      <td>0.00016</td>\n",
        "      <td>0.000157</td>\n",
        "      <td>0.000693</td>\n",
        "      <td>0.072405</td>\n",
        "      <td>0.021321</td>\n",
        "      <td>0.002704</td>\n",
        "      <td>0.000872</td>\n",
        "      <td>0.019114</td>\n",
        "      <td>0.00149</td>\n",
        "      <td>0.001328</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>2020-09-23</th>\n",
        "      <td>0.001816</td>\n",
        "      <td>0.072771</td>\n",
        "      <td>0.000585</td>\n",
        "      <td>0.000428</td>\n",
        "      <td>0.000122</td>\n",
        "      <td>0.085896</td>\n",
        "      <td>0.000097</td>\n",
        "      <td>0.001245</td>\n",
        "      <td>0.001251</td>\n",
        "      <td>0.068234</td>\n",
        "      <td>...</td>\n",
        "      <td>0.00016</td>\n",
        "      <td>0.000157</td>\n",
        "      <td>0.000693</td>\n",
        "      <td>0.072405</td>\n",
        "      <td>0.021321</td>\n",
        "      <td>0.002704</td>\n",
        "      <td>0.000872</td>\n",
        "      <td>0.019114</td>\n",
        "      <td>0.00149</td>\n",
        "      <td>0.001328</td>\n",
        "    </tr>\n",
        "  </tbody>\n",
        "</table>\n",
        "<p>5 rows \u00d7 21 columns</p>\n",
        "</div>"
       ],
       "output_type": "pyout",
       "prompt_number": 18,
       "text": [
        "Country      Bahrain   Bolivia  Bulgaria  Burkina Faso   Denmark     Egypt  \\\n",
        "Date                                                                         \n",
        "2020-09-19  0.001816  0.072771  0.000585      0.000428  0.000122  0.085896   \n",
        "2020-09-20  0.001816  0.072771  0.000585      0.000428  0.000122  0.085896   \n",
        "2020-09-21  0.001816  0.072771  0.000585      0.000428  0.000122  0.085896   \n",
        "2020-09-22  0.001816  0.072771  0.000585      0.000428  0.000122  0.085896   \n",
        "2020-09-23  0.001816  0.072771  0.000585      0.000428  0.000122  0.085896   \n",
        "\n",
        "Country      Estonia    France    Guinea  Honduras  ...    Italy    Kuwait  \\\n",
        "Date                                                ...                      \n",
        "2020-09-19  0.000097  0.001245  0.001251  0.068234  ...  0.00016  0.000157   \n",
        "2020-09-20  0.000097  0.001245  0.001251  0.068234  ...  0.00016  0.000157   \n",
        "2020-09-21  0.000097  0.001245  0.001251  0.068234  ...  0.00016  0.000157   \n",
        "2020-09-22  0.000097  0.001245  0.001251  0.068234  ...  0.00016  0.000157   \n",
        "2020-09-23  0.000097  0.001245  0.001251  0.068234  ...  0.00016  0.000157   \n",
        "\n",
        "Country         Mali    Mexico   Nigeria  Portugal    Russia    Turkey  \\\n",
        "Date                                                                     \n",
        "2020-09-19  0.000693  0.072405  0.021321  0.002704  0.000872  0.019114   \n",
        "2020-09-20  0.000693  0.072405  0.021321  0.002704  0.000872  0.019114   \n",
        "2020-09-21  0.000693  0.072405  0.021321  0.002704  0.000872  0.019114   \n",
        "2020-09-22  0.000693  0.072405  0.021321  0.002704  0.000872  0.019114   \n",
        "2020-09-23  0.000693  0.072405  0.021321  0.002704  0.000872  0.019114   \n",
        "\n",
        "Country     United Arab Emirates  United States  \n",
        "Date                                             \n",
        "2020-09-19               0.00149       0.001328  \n",
        "2020-09-20               0.00149       0.001328  \n",
        "2020-09-21               0.00149       0.001328  \n",
        "2020-09-22               0.00149       0.001328  \n",
        "2020-09-23               0.00149       0.001328  \n",
        "\n",
        "[5 rows x 21 columns]"
       ]
      }
     ],
     "prompt_number": 18
    },
    {
     "cell_type": "markdown",
     "metadata": {},
     "source": [
      "## (Experimental): Relationship of OxCGRT index and parameter values\n",
      "Government responses will impact on parameter values of ODE models about 14 days later. Here, we will investigate on the relationship of [stringency index (from OxCGRT)](https://github.com/OxCGRT/covid-policy-tracker/blob/master/documentation/index_methodology.md) and reproduction number/model parameters.\n"
     ]
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "%matplotlib inline\n",
      "from matplotlib import pyplot as plt\n",
      "import seaborn as sns\n",
      "import pandas as pd"
     ],
     "language": "python",
     "metadata": {},
     "outputs": [],
     "prompt_number": 19
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "df = analyser.track()\n",
      "param_cols = [\"Rt\", *cs.SIRF.PARAMETERS]\n",
      "oxcgrt_cols = oxcgrt_data.OXCGRT_VARS[:]\n",
      "cols = param_cols + oxcgrt_cols\n",
      "delay = 14\n",
      "\n",
      "for col in param_cols:\n",
      "    df[col] = pd.to_numeric(df[col], errors=\"coerce\")\n",
      "    df[col] = df.groupby(\"Country\")[col].shift(0 - delay)\n",
      "\n",
      "df = df.dropna(how=\"any\")\n",
      "df = df.loc[:, [\"Date\", \"Country\", *cols]]\n",
      "track_df = df.copy()\n",
      "track_df.info()"
     ],
     "language": "python",
     "metadata": {},
     "outputs": [
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "<class 'pandas.core.frame.DataFrame'>\n",
        "Int64Index: 47417 entries, 0 to 47696\n",
        "Data columns (total 19 columns):\n",
        " #   Column                               Non-Null Count  Dtype         \n",
        "---  ------                               --------------  -----         \n",
        " 0   Date                                 47417 non-null  datetime64[ns]\n",
        " 1   Country                              47417 non-null  object        \n",
        " 2   Rt                                   47417 non-null  float64       \n",
        " 3   theta                                47417 non-null  float64       \n",
        " 4   kappa                                47417 non-null  float64       \n",
        " 5   rho                                  47417 non-null  float64       \n",
        " 6   sigma                                47417 non-null  float64       \n",
        " 7   School_closing                       47417 non-null  int64         \n",
        " 8   Workplace_closing                    47417 non-null  int64         \n",
        " 9   Cancel_events                        47417 non-null  int64         \n",
        " 10  Gatherings_restrictions              47417 non-null  int64         \n",
        " 11  Transport_closing                    47417 non-null  int64         \n",
        " 12  Stay_home_restrictions               47417 non-null  int64         \n",
        " 13  Internal_movement_restrictions       47417 non-null  int64         \n",
        " 14  International_movement_restrictions  47417 non-null  int64         \n",
        " 15  Information_campaigns                47417 non-null  int64         \n",
        " 16  Testing_policy                       47417 non-null  int64         \n",
        " 17  Contact_tracing                      47417 non-null  int64         \n",
        " 18  Stringency_index                     47417 non-null  float64       \n",
        "dtypes: datetime64[ns](1), float64(6), int64(11), object(1)\n",
        "memory usage: 7.2+ MB\n"
       ]
      }
     ],
     "prompt_number": 20
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "# Correlation\n",
      "df = track_df.copy()\n",
      "df.corr().style.background_gradient(axis=None)"
     ],
     "language": "python",
     "metadata": {},
     "outputs": [
      {
       "html": [
        "<style  type=\"text/css\" >\n",
        "#T_4f4b0ae6_fd94_11ea_9974_525400b1365crow0_col0,#T_4f4b0ae6_fd94_11ea_9974_525400b1365crow1_col1,#T_4f4b0ae6_fd94_11ea_9974_525400b1365crow2_col2,#T_4f4b0ae6_fd94_11ea_9974_525400b1365crow3_col3,#T_4f4b0ae6_fd94_11ea_9974_525400b1365crow4_col4,#T_4f4b0ae6_fd94_11ea_9974_525400b1365crow5_col5,#T_4f4b0ae6_fd94_11ea_9974_525400b1365crow6_col6,#T_4f4b0ae6_fd94_11ea_9974_525400b1365crow7_col7,#T_4f4b0ae6_fd94_11ea_9974_525400b1365crow8_col8,#T_4f4b0ae6_fd94_11ea_9974_525400b1365crow9_col9,#T_4f4b0ae6_fd94_11ea_9974_525400b1365crow10_col10,#T_4f4b0ae6_fd94_11ea_9974_525400b1365crow11_col11,#T_4f4b0ae6_fd94_11ea_9974_525400b1365crow12_col12,#T_4f4b0ae6_fd94_11ea_9974_525400b1365crow13_col13,#T_4f4b0ae6_fd94_11ea_9974_525400b1365crow14_col14,#T_4f4b0ae6_fd94_11ea_9974_525400b1365crow15_col15,#T_4f4b0ae6_fd94_11ea_9974_525400b1365crow16_col16{\n",
        "            background-color:  #023858;\n",
        "            color:  #f1f1f1;\n",
        "        }#T_4f4b0ae6_fd94_11ea_9974_525400b1365crow0_col1,#T_4f4b0ae6_fd94_11ea_9974_525400b1365crow1_col0{\n",
        "            background-color:  #e4e1ef;\n",
        "            color:  #000000;\n",
        "        }#T_4f4b0ae6_fd94_11ea_9974_525400b1365crow0_col2,#T_4f4b0ae6_fd94_11ea_9974_525400b1365crow2_col0{\n",
        "            background-color:  #e3e0ee;\n",
        "            color:  #000000;\n",
        "        }#T_4f4b0ae6_fd94_11ea_9974_525400b1365crow0_col3,#T_4f4b0ae6_fd94_11ea_9974_525400b1365crow3_col0{\n",
        "            background-color:  #99b8d8;\n",
        "            color:  #000000;\n",
        "        }#T_4f4b0ae6_fd94_11ea_9974_525400b1365crow0_col4,#T_4f4b0ae6_fd94_11ea_9974_525400b1365crow0_col12,#T_4f4b0ae6_fd94_11ea_9974_525400b1365crow4_col0,#T_4f4b0ae6_fd94_11ea_9974_525400b1365crow12_col0{\n",
        "            background-color:  #dfddec;\n",
        "            color:  #000000;\n",
        "        }#T_4f4b0ae6_fd94_11ea_9974_525400b1365crow0_col5,#T_4f4b0ae6_fd94_11ea_9974_525400b1365crow5_col0{\n",
        "            background-color:  #c9cee4;\n",
        "            color:  #000000;\n",
        "        }#T_4f4b0ae6_fd94_11ea_9974_525400b1365crow0_col6,#T_4f4b0ae6_fd94_11ea_9974_525400b1365crow6_col0{\n",
        "            background-color:  #c5cce3;\n",
        "            color:  #000000;\n",
        "        }#T_4f4b0ae6_fd94_11ea_9974_525400b1365crow0_col7,#T_4f4b0ae6_fd94_11ea_9974_525400b1365crow0_col16,#T_4f4b0ae6_fd94_11ea_9974_525400b1365crow1_col6,#T_4f4b0ae6_fd94_11ea_9974_525400b1365crow4_col14,#T_4f4b0ae6_fd94_11ea_9974_525400b1365crow6_col1,#T_4f4b0ae6_fd94_11ea_9974_525400b1365crow7_col0,#T_4f4b0ae6_fd94_11ea_9974_525400b1365crow14_col4,#T_4f4b0ae6_fd94_11ea_9974_525400b1365crow16_col0{\n",
        "            background-color:  #d6d6e9;\n",
        "            color:  #000000;\n",
        "        }#T_4f4b0ae6_fd94_11ea_9974_525400b1365crow0_col8,#T_4f4b0ae6_fd94_11ea_9974_525400b1365crow8_col0{\n",
        "            background-color:  #d0d1e6;\n",
        "            color:  #000000;\n",
        "        }#T_4f4b0ae6_fd94_11ea_9974_525400b1365crow0_col9,#T_4f4b0ae6_fd94_11ea_9974_525400b1365crow9_col0{\n",
        "            background-color:  #d4d4e8;\n",
        "            color:  #000000;\n",
        "        }#T_4f4b0ae6_fd94_11ea_9974_525400b1365crow0_col10,#T_4f4b0ae6_fd94_11ea_9974_525400b1365crow10_col0{\n",
        "            background-color:  #dedcec;\n",
        "            color:  #000000;\n",
        "        }#T_4f4b0ae6_fd94_11ea_9974_525400b1365crow0_col11,#T_4f4b0ae6_fd94_11ea_9974_525400b1365crow2_col16,#T_4f4b0ae6_fd94_11ea_9974_525400b1365crow3_col16,#T_4f4b0ae6_fd94_11ea_9974_525400b1365crow11_col0,#T_4f4b0ae6_fd94_11ea_9974_525400b1365crow16_col2,#T_4f4b0ae6_fd94_11ea_9974_525400b1365crow16_col3{\n",
        "            background-color:  #dcdaeb;\n",
        "            color:  #000000;\n",
        "        }#T_4f4b0ae6_fd94_11ea_9974_525400b1365crow0_col13,#T_4f4b0ae6_fd94_11ea_9974_525400b1365crow1_col4,#T_4f4b0ae6_fd94_11ea_9974_525400b1365crow4_col1,#T_4f4b0ae6_fd94_11ea_9974_525400b1365crow13_col0{\n",
        "            background-color:  #ced0e6;\n",
        "            color:  #000000;\n",
        "        }#T_4f4b0ae6_fd94_11ea_9974_525400b1365crow0_col14,#T_4f4b0ae6_fd94_11ea_9974_525400b1365crow1_col16,#T_4f4b0ae6_fd94_11ea_9974_525400b1365crow3_col5,#T_4f4b0ae6_fd94_11ea_9974_525400b1365crow4_col8,#T_4f4b0ae6_fd94_11ea_9974_525400b1365crow5_col3,#T_4f4b0ae6_fd94_11ea_9974_525400b1365crow8_col4,#T_4f4b0ae6_fd94_11ea_9974_525400b1365crow14_col0,#T_4f4b0ae6_fd94_11ea_9974_525400b1365crow16_col1{\n",
        "            background-color:  #d9d8ea;\n",
        "            color:  #000000;\n",
        "        }#T_4f4b0ae6_fd94_11ea_9974_525400b1365crow0_col15,#T_4f4b0ae6_fd94_11ea_9974_525400b1365crow15_col0{\n",
        "            background-color:  #e6e2ef;\n",
        "            color:  #000000;\n",
        "        }#T_4f4b0ae6_fd94_11ea_9974_525400b1365crow1_col2,#T_4f4b0ae6_fd94_11ea_9974_525400b1365crow2_col1{\n",
        "            background-color:  #023f64;\n",
        "            color:  #f1f1f1;\n",
        "        }#T_4f4b0ae6_fd94_11ea_9974_525400b1365crow1_col3,#T_4f4b0ae6_fd94_11ea_9974_525400b1365crow3_col1{\n",
        "            background-color:  #05659f;\n",
        "            color:  #f1f1f1;\n",
        "        }#T_4f4b0ae6_fd94_11ea_9974_525400b1365crow1_col5,#T_4f4b0ae6_fd94_11ea_9974_525400b1365crow5_col1{\n",
        "            background-color:  #e5e1ef;\n",
        "            color:  #000000;\n",
        "        }#T_4f4b0ae6_fd94_11ea_9974_525400b1365crow1_col7,#T_4f4b0ae6_fd94_11ea_9974_525400b1365crow2_col14,#T_4f4b0ae6_fd94_11ea_9974_525400b1365crow7_col1,#T_4f4b0ae6_fd94_11ea_9974_525400b1365crow14_col2{\n",
        "            background-color:  #eee9f3;\n",
        "            color:  #000000;\n",
        "        }#T_4f4b0ae6_fd94_11ea_9974_525400b1365crow1_col8,#T_4f4b0ae6_fd94_11ea_9974_525400b1365crow2_col8,#T_4f4b0ae6_fd94_11ea_9974_525400b1365crow8_col1,#T_4f4b0ae6_fd94_11ea_9974_525400b1365crow8_col2{\n",
        "            background-color:  #ede8f3;\n",
        "            color:  #000000;\n",
        "        }#T_4f4b0ae6_fd94_11ea_9974_525400b1365crow1_col9,#T_4f4b0ae6_fd94_11ea_9974_525400b1365crow2_col5,#T_4f4b0ae6_fd94_11ea_9974_525400b1365crow5_col2,#T_4f4b0ae6_fd94_11ea_9974_525400b1365crow9_col1{\n",
        "            background-color:  #e7e3f0;\n",
        "            color:  #000000;\n",
        "        }#T_4f4b0ae6_fd94_11ea_9974_525400b1365crow1_col10,#T_4f4b0ae6_fd94_11ea_9974_525400b1365crow4_col15,#T_4f4b0ae6_fd94_11ea_9974_525400b1365crow10_col1,#T_4f4b0ae6_fd94_11ea_9974_525400b1365crow15_col4{\n",
        "            background-color:  #93b5d6;\n",
        "            color:  #000000;\n",
        "        }#T_4f4b0ae6_fd94_11ea_9974_525400b1365crow1_col11,#T_4f4b0ae6_fd94_11ea_9974_525400b1365crow11_col1{\n",
        "            background-color:  #c4cbe3;\n",
        "            color:  #000000;\n",
        "        }#T_4f4b0ae6_fd94_11ea_9974_525400b1365crow1_col12,#T_4f4b0ae6_fd94_11ea_9974_525400b1365crow12_col1{\n",
        "            background-color:  #8eb3d5;\n",
        "            color:  #000000;\n",
        "        }#T_4f4b0ae6_fd94_11ea_9974_525400b1365crow1_col13,#T_4f4b0ae6_fd94_11ea_9974_525400b1365crow13_col1{\n",
        "            background-color:  #f5eff6;\n",
        "            color:  #000000;\n",
        "        }#T_4f4b0ae6_fd94_11ea_9974_525400b1365crow1_col14,#T_4f4b0ae6_fd94_11ea_9974_525400b1365crow14_col1{\n",
        "            background-color:  #f2ecf5;\n",
        "            color:  #000000;\n",
        "        }#T_4f4b0ae6_fd94_11ea_9974_525400b1365crow1_col15,#T_4f4b0ae6_fd94_11ea_9974_525400b1365crow4_col6,#T_4f4b0ae6_fd94_11ea_9974_525400b1365crow6_col4,#T_4f4b0ae6_fd94_11ea_9974_525400b1365crow15_col1{\n",
        "            background-color:  #b9c6e0;\n",
        "            color:  #000000;\n",
        "        }#T_4f4b0ae6_fd94_11ea_9974_525400b1365crow2_col3,#T_4f4b0ae6_fd94_11ea_9974_525400b1365crow3_col2{\n",
        "            background-color:  #04629a;\n",
        "            color:  #f1f1f1;\n",
        "        }#T_4f4b0ae6_fd94_11ea_9974_525400b1365crow2_col4,#T_4f4b0ae6_fd94_11ea_9974_525400b1365crow4_col2{\n",
        "            background-color:  #d3d4e7;\n",
        "            color:  #000000;\n",
        "        }#T_4f4b0ae6_fd94_11ea_9974_525400b1365crow2_col6,#T_4f4b0ae6_fd94_11ea_9974_525400b1365crow6_col2{\n",
        "            background-color:  #dad9ea;\n",
        "            color:  #000000;\n",
        "        }#T_4f4b0ae6_fd94_11ea_9974_525400b1365crow2_col7,#T_4f4b0ae6_fd94_11ea_9974_525400b1365crow3_col9,#T_4f4b0ae6_fd94_11ea_9974_525400b1365crow7_col2,#T_4f4b0ae6_fd94_11ea_9974_525400b1365crow9_col3{\n",
        "            background-color:  #f0eaf4;\n",
        "            color:  #000000;\n",
        "        }#T_4f4b0ae6_fd94_11ea_9974_525400b1365crow2_col9,#T_4f4b0ae6_fd94_11ea_9974_525400b1365crow9_col2{\n",
        "            background-color:  #ebe6f2;\n",
        "            color:  #000000;\n",
        "        }#T_4f4b0ae6_fd94_11ea_9974_525400b1365crow2_col10,#T_4f4b0ae6_fd94_11ea_9974_525400b1365crow4_col5,#T_4f4b0ae6_fd94_11ea_9974_525400b1365crow5_col4,#T_4f4b0ae6_fd94_11ea_9974_525400b1365crow9_col15,#T_4f4b0ae6_fd94_11ea_9974_525400b1365crow10_col2,#T_4f4b0ae6_fd94_11ea_9974_525400b1365crow15_col9{\n",
        "            background-color:  #96b6d7;\n",
        "            color:  #000000;\n",
        "        }#T_4f4b0ae6_fd94_11ea_9974_525400b1365crow2_col11,#T_4f4b0ae6_fd94_11ea_9974_525400b1365crow11_col2{\n",
        "            background-color:  #c6cce3;\n",
        "            color:  #000000;\n",
        "        }#T_4f4b0ae6_fd94_11ea_9974_525400b1365crow2_col12,#T_4f4b0ae6_fd94_11ea_9974_525400b1365crow12_col2{\n",
        "            background-color:  #88b1d4;\n",
        "            color:  #000000;\n",
        "        }#T_4f4b0ae6_fd94_11ea_9974_525400b1365crow2_col13,#T_4f4b0ae6_fd94_11ea_9974_525400b1365crow13_col2{\n",
        "            background-color:  #f7f0f7;\n",
        "            color:  #000000;\n",
        "        }#T_4f4b0ae6_fd94_11ea_9974_525400b1365crow2_col15,#T_4f4b0ae6_fd94_11ea_9974_525400b1365crow4_col7,#T_4f4b0ae6_fd94_11ea_9974_525400b1365crow7_col4,#T_4f4b0ae6_fd94_11ea_9974_525400b1365crow15_col2{\n",
        "            background-color:  #bbc7e0;\n",
        "            color:  #000000;\n",
        "        }#T_4f4b0ae6_fd94_11ea_9974_525400b1365crow3_col4,#T_4f4b0ae6_fd94_11ea_9974_525400b1365crow4_col3,#T_4f4b0ae6_fd94_11ea_9974_525400b1365crow4_col13,#T_4f4b0ae6_fd94_11ea_9974_525400b1365crow13_col4{\n",
        "            background-color:  #a4bcda;\n",
        "            color:  #000000;\n",
        "        }#T_4f4b0ae6_fd94_11ea_9974_525400b1365crow3_col6,#T_4f4b0ae6_fd94_11ea_9974_525400b1365crow6_col3{\n",
        "            background-color:  #d2d2e7;\n",
        "            color:  #000000;\n",
        "        }#T_4f4b0ae6_fd94_11ea_9974_525400b1365crow3_col7,#T_4f4b0ae6_fd94_11ea_9974_525400b1365crow7_col3{\n",
        "            background-color:  #f4eef6;\n",
        "            color:  #000000;\n",
        "        }#T_4f4b0ae6_fd94_11ea_9974_525400b1365crow3_col8,#T_4f4b0ae6_fd94_11ea_9974_525400b1365crow8_col3{\n",
        "            background-color:  #f1ebf5;\n",
        "            color:  #000000;\n",
        "        }#T_4f4b0ae6_fd94_11ea_9974_525400b1365crow3_col10,#T_4f4b0ae6_fd94_11ea_9974_525400b1365crow10_col3{\n",
        "            background-color:  #a7bddb;\n",
        "            color:  #000000;\n",
        "        }#T_4f4b0ae6_fd94_11ea_9974_525400b1365crow3_col11,#T_4f4b0ae6_fd94_11ea_9974_525400b1365crow11_col3{\n",
        "            background-color:  #d8d7e9;\n",
        "            color:  #000000;\n",
        "        }#T_4f4b0ae6_fd94_11ea_9974_525400b1365crow3_col12,#T_4f4b0ae6_fd94_11ea_9974_525400b1365crow12_col3{\n",
        "            background-color:  #b3c3de;\n",
        "            color:  #000000;\n",
        "        }#T_4f4b0ae6_fd94_11ea_9974_525400b1365crow3_col13,#T_4f4b0ae6_fd94_11ea_9974_525400b1365crow13_col3{\n",
        "            background-color:  #f8f1f8;\n",
        "            color:  #000000;\n",
        "        }#T_4f4b0ae6_fd94_11ea_9974_525400b1365crow3_col14,#T_4f4b0ae6_fd94_11ea_9974_525400b1365crow14_col3{\n",
        "            background-color:  #fff7fb;\n",
        "            color:  #000000;\n",
        "        }#T_4f4b0ae6_fd94_11ea_9974_525400b1365crow3_col15,#T_4f4b0ae6_fd94_11ea_9974_525400b1365crow4_col11,#T_4f4b0ae6_fd94_11ea_9974_525400b1365crow11_col4,#T_4f4b0ae6_fd94_11ea_9974_525400b1365crow15_col3{\n",
        "            background-color:  #d5d5e8;\n",
        "            color:  #000000;\n",
        "        }#T_4f4b0ae6_fd94_11ea_9974_525400b1365crow4_col9,#T_4f4b0ae6_fd94_11ea_9974_525400b1365crow4_col10,#T_4f4b0ae6_fd94_11ea_9974_525400b1365crow9_col4,#T_4f4b0ae6_fd94_11ea_9974_525400b1365crow10_col4{\n",
        "            background-color:  #c0c9e2;\n",
        "            color:  #000000;\n",
        "        }#T_4f4b0ae6_fd94_11ea_9974_525400b1365crow4_col12,#T_4f4b0ae6_fd94_11ea_9974_525400b1365crow12_col4{\n",
        "            background-color:  #c2cbe2;\n",
        "            color:  #000000;\n",
        "        }#T_4f4b0ae6_fd94_11ea_9974_525400b1365crow4_col16,#T_4f4b0ae6_fd94_11ea_9974_525400b1365crow16_col4{\n",
        "            background-color:  #abbfdc;\n",
        "            color:  #000000;\n",
        "        }#T_4f4b0ae6_fd94_11ea_9974_525400b1365crow5_col6,#T_4f4b0ae6_fd94_11ea_9974_525400b1365crow6_col5{\n",
        "            background-color:  #04649e;\n",
        "            color:  #f1f1f1;\n",
        "        }#T_4f4b0ae6_fd94_11ea_9974_525400b1365crow5_col7,#T_4f4b0ae6_fd94_11ea_9974_525400b1365crow7_col5{\n",
        "            background-color:  #0567a1;\n",
        "            color:  #f1f1f1;\n",
        "        }#T_4f4b0ae6_fd94_11ea_9974_525400b1365crow5_col8,#T_4f4b0ae6_fd94_11ea_9974_525400b1365crow8_col5,#T_4f4b0ae6_fd94_11ea_9974_525400b1365crow13_col14,#T_4f4b0ae6_fd94_11ea_9974_525400b1365crow14_col13{\n",
        "            background-color:  #0771b1;\n",
        "            color:  #f1f1f1;\n",
        "        }#T_4f4b0ae6_fd94_11ea_9974_525400b1365crow5_col9,#T_4f4b0ae6_fd94_11ea_9974_525400b1365crow9_col5,#T_4f4b0ae6_fd94_11ea_9974_525400b1365crow14_col16,#T_4f4b0ae6_fd94_11ea_9974_525400b1365crow16_col14{\n",
        "            background-color:  #2182b9;\n",
        "            color:  #000000;\n",
        "        }#T_4f4b0ae6_fd94_11ea_9974_525400b1365crow5_col10,#T_4f4b0ae6_fd94_11ea_9974_525400b1365crow10_col5,#T_4f4b0ae6_fd94_11ea_9974_525400b1365crow13_col15,#T_4f4b0ae6_fd94_11ea_9974_525400b1365crow15_col13{\n",
        "            background-color:  #1e80b8;\n",
        "            color:  #000000;\n",
        "        }#T_4f4b0ae6_fd94_11ea_9974_525400b1365crow5_col11,#T_4f4b0ae6_fd94_11ea_9974_525400b1365crow7_col9,#T_4f4b0ae6_fd94_11ea_9974_525400b1365crow9_col7,#T_4f4b0ae6_fd94_11ea_9974_525400b1365crow11_col5{\n",
        "            background-color:  #2a88bc;\n",
        "            color:  #000000;\n",
        "        }#T_4f4b0ae6_fd94_11ea_9974_525400b1365crow5_col12,#T_4f4b0ae6_fd94_11ea_9974_525400b1365crow12_col5{\n",
        "            background-color:  #3f93c2;\n",
        "            color:  #000000;\n",
        "        }#T_4f4b0ae6_fd94_11ea_9974_525400b1365crow5_col13,#T_4f4b0ae6_fd94_11ea_9974_525400b1365crow13_col5{\n",
        "            background-color:  #0569a4;\n",
        "            color:  #f1f1f1;\n",
        "        }#T_4f4b0ae6_fd94_11ea_9974_525400b1365crow5_col14,#T_4f4b0ae6_fd94_11ea_9974_525400b1365crow14_col5{\n",
        "            background-color:  #3790c0;\n",
        "            color:  #000000;\n",
        "        }#T_4f4b0ae6_fd94_11ea_9974_525400b1365crow5_col15,#T_4f4b0ae6_fd94_11ea_9974_525400b1365crow15_col5{\n",
        "            background-color:  #75a9cf;\n",
        "            color:  #000000;\n",
        "        }#T_4f4b0ae6_fd94_11ea_9974_525400b1365crow5_col16,#T_4f4b0ae6_fd94_11ea_9974_525400b1365crow8_col13,#T_4f4b0ae6_fd94_11ea_9974_525400b1365crow13_col8,#T_4f4b0ae6_fd94_11ea_9974_525400b1365crow16_col5{\n",
        "            background-color:  #045b8f;\n",
        "            color:  #f1f1f1;\n",
        "        }#T_4f4b0ae6_fd94_11ea_9974_525400b1365crow6_col7,#T_4f4b0ae6_fd94_11ea_9974_525400b1365crow7_col6,#T_4f4b0ae6_fd94_11ea_9974_525400b1365crow9_col11,#T_4f4b0ae6_fd94_11ea_9974_525400b1365crow11_col9{\n",
        "            background-color:  #0567a2;\n",
        "            color:  #f1f1f1;\n",
        "        }#T_4f4b0ae6_fd94_11ea_9974_525400b1365crow6_col8,#T_4f4b0ae6_fd94_11ea_9974_525400b1365crow8_col6,#T_4f4b0ae6_fd94_11ea_9974_525400b1365crow9_col16,#T_4f4b0ae6_fd94_11ea_9974_525400b1365crow16_col9{\n",
        "            background-color:  #046299;\n",
        "            color:  #f1f1f1;\n",
        "        }#T_4f4b0ae6_fd94_11ea_9974_525400b1365crow6_col9,#T_4f4b0ae6_fd94_11ea_9974_525400b1365crow9_col6{\n",
        "            background-color:  #056dab;\n",
        "            color:  #f1f1f1;\n",
        "        }#T_4f4b0ae6_fd94_11ea_9974_525400b1365crow6_col10,#T_4f4b0ae6_fd94_11ea_9974_525400b1365crow10_col6{\n",
        "            background-color:  #056caa;\n",
        "            color:  #f1f1f1;\n",
        "        }#T_4f4b0ae6_fd94_11ea_9974_525400b1365crow6_col11,#T_4f4b0ae6_fd94_11ea_9974_525400b1365crow9_col10,#T_4f4b0ae6_fd94_11ea_9974_525400b1365crow10_col9,#T_4f4b0ae6_fd94_11ea_9974_525400b1365crow11_col6,#T_4f4b0ae6_fd94_11ea_9974_525400b1365crow12_col16,#T_4f4b0ae6_fd94_11ea_9974_525400b1365crow16_col12{\n",
        "            background-color:  #056fae;\n",
        "            color:  #f1f1f1;\n",
        "        }#T_4f4b0ae6_fd94_11ea_9974_525400b1365crow6_col12,#T_4f4b0ae6_fd94_11ea_9974_525400b1365crow12_col6{\n",
        "            background-color:  #328dbf;\n",
        "            color:  #000000;\n",
        "        }#T_4f4b0ae6_fd94_11ea_9974_525400b1365crow6_col13,#T_4f4b0ae6_fd94_11ea_9974_525400b1365crow11_col16,#T_4f4b0ae6_fd94_11ea_9974_525400b1365crow13_col6,#T_4f4b0ae6_fd94_11ea_9974_525400b1365crow16_col11{\n",
        "            background-color:  #046097;\n",
        "            color:  #f1f1f1;\n",
        "        }#T_4f4b0ae6_fd94_11ea_9974_525400b1365crow6_col14,#T_4f4b0ae6_fd94_11ea_9974_525400b1365crow12_col13,#T_4f4b0ae6_fd94_11ea_9974_525400b1365crow12_col15,#T_4f4b0ae6_fd94_11ea_9974_525400b1365crow13_col12,#T_4f4b0ae6_fd94_11ea_9974_525400b1365crow14_col6,#T_4f4b0ae6_fd94_11ea_9974_525400b1365crow15_col12{\n",
        "            background-color:  #2f8bbe;\n",
        "            color:  #000000;\n",
        "        }#T_4f4b0ae6_fd94_11ea_9974_525400b1365crow6_col15,#T_4f4b0ae6_fd94_11ea_9974_525400b1365crow15_col6{\n",
        "            background-color:  #67a4cc;\n",
        "            color:  #000000;\n",
        "        }#T_4f4b0ae6_fd94_11ea_9974_525400b1365crow6_col16,#T_4f4b0ae6_fd94_11ea_9974_525400b1365crow16_col6{\n",
        "            background-color:  #034c78;\n",
        "            color:  #f1f1f1;\n",
        "        }#T_4f4b0ae6_fd94_11ea_9974_525400b1365crow7_col8,#T_4f4b0ae6_fd94_11ea_9974_525400b1365crow8_col7{\n",
        "            background-color:  #045e93;\n",
        "            color:  #f1f1f1;\n",
        "        }#T_4f4b0ae6_fd94_11ea_9974_525400b1365crow7_col10,#T_4f4b0ae6_fd94_11ea_9974_525400b1365crow10_col7,#T_4f4b0ae6_fd94_11ea_9974_525400b1365crow11_col12,#T_4f4b0ae6_fd94_11ea_9974_525400b1365crow12_col11,#T_4f4b0ae6_fd94_11ea_9974_525400b1365crow12_col14,#T_4f4b0ae6_fd94_11ea_9974_525400b1365crow14_col12{\n",
        "            background-color:  #2383ba;\n",
        "            color:  #000000;\n",
        "        }#T_4f4b0ae6_fd94_11ea_9974_525400b1365crow7_col11,#T_4f4b0ae6_fd94_11ea_9974_525400b1365crow11_col7{\n",
        "            background-color:  #0a73b2;\n",
        "            color:  #f1f1f1;\n",
        "        }#T_4f4b0ae6_fd94_11ea_9974_525400b1365crow7_col12,#T_4f4b0ae6_fd94_11ea_9974_525400b1365crow9_col14,#T_4f4b0ae6_fd94_11ea_9974_525400b1365crow12_col7,#T_4f4b0ae6_fd94_11ea_9974_525400b1365crow14_col9{\n",
        "            background-color:  #2484ba;\n",
        "            color:  #000000;\n",
        "        }#T_4f4b0ae6_fd94_11ea_9974_525400b1365crow7_col13,#T_4f4b0ae6_fd94_11ea_9974_525400b1365crow13_col7{\n",
        "            background-color:  #03517e;\n",
        "            color:  #f1f1f1;\n",
        "        }#T_4f4b0ae6_fd94_11ea_9974_525400b1365crow7_col14,#T_4f4b0ae6_fd94_11ea_9974_525400b1365crow14_col7{\n",
        "            background-color:  #0872b1;\n",
        "            color:  #f1f1f1;\n",
        "        }#T_4f4b0ae6_fd94_11ea_9974_525400b1365crow7_col15,#T_4f4b0ae6_fd94_11ea_9974_525400b1365crow15_col7{\n",
        "            background-color:  #1379b5;\n",
        "            color:  #f1f1f1;\n",
        "        }#T_4f4b0ae6_fd94_11ea_9974_525400b1365crow7_col16,#T_4f4b0ae6_fd94_11ea_9974_525400b1365crow16_col7{\n",
        "            background-color:  #045585;\n",
        "            color:  #f1f1f1;\n",
        "        }#T_4f4b0ae6_fd94_11ea_9974_525400b1365crow8_col9,#T_4f4b0ae6_fd94_11ea_9974_525400b1365crow8_col11,#T_4f4b0ae6_fd94_11ea_9974_525400b1365crow9_col8,#T_4f4b0ae6_fd94_11ea_9974_525400b1365crow11_col8{\n",
        "            background-color:  #0566a0;\n",
        "            color:  #f1f1f1;\n",
        "        }#T_4f4b0ae6_fd94_11ea_9974_525400b1365crow8_col10,#T_4f4b0ae6_fd94_11ea_9974_525400b1365crow10_col8{\n",
        "            background-color:  #0570b0;\n",
        "            color:  #f1f1f1;\n",
        "        }#T_4f4b0ae6_fd94_11ea_9974_525400b1365crow8_col12,#T_4f4b0ae6_fd94_11ea_9974_525400b1365crow10_col12,#T_4f4b0ae6_fd94_11ea_9974_525400b1365crow12_col8,#T_4f4b0ae6_fd94_11ea_9974_525400b1365crow12_col10{\n",
        "            background-color:  #167bb6;\n",
        "            color:  #000000;\n",
        "        }#T_4f4b0ae6_fd94_11ea_9974_525400b1365crow8_col14,#T_4f4b0ae6_fd94_11ea_9974_525400b1365crow14_col8{\n",
        "            background-color:  #056ba9;\n",
        "            color:  #f1f1f1;\n",
        "        }#T_4f4b0ae6_fd94_11ea_9974_525400b1365crow8_col15,#T_4f4b0ae6_fd94_11ea_9974_525400b1365crow15_col8{\n",
        "            background-color:  #549cc7;\n",
        "            color:  #000000;\n",
        "        }#T_4f4b0ae6_fd94_11ea_9974_525400b1365crow8_col16,#T_4f4b0ae6_fd94_11ea_9974_525400b1365crow16_col8{\n",
        "            background-color:  #045280;\n",
        "            color:  #f1f1f1;\n",
        "        }#T_4f4b0ae6_fd94_11ea_9974_525400b1365crow9_col12,#T_4f4b0ae6_fd94_11ea_9974_525400b1365crow12_col9{\n",
        "            background-color:  #348ebf;\n",
        "            color:  #000000;\n",
        "        }#T_4f4b0ae6_fd94_11ea_9974_525400b1365crow9_col13,#T_4f4b0ae6_fd94_11ea_9974_525400b1365crow13_col9{\n",
        "            background-color:  #1c7fb8;\n",
        "            color:  #000000;\n",
        "        }#T_4f4b0ae6_fd94_11ea_9974_525400b1365crow10_col11,#T_4f4b0ae6_fd94_11ea_9974_525400b1365crow10_col16,#T_4f4b0ae6_fd94_11ea_9974_525400b1365crow11_col10,#T_4f4b0ae6_fd94_11ea_9974_525400b1365crow16_col10{\n",
        "            background-color:  #046096;\n",
        "            color:  #f1f1f1;\n",
        "        }#T_4f4b0ae6_fd94_11ea_9974_525400b1365crow10_col13,#T_4f4b0ae6_fd94_11ea_9974_525400b1365crow13_col10{\n",
        "            background-color:  #308cbe;\n",
        "            color:  #000000;\n",
        "        }#T_4f4b0ae6_fd94_11ea_9974_525400b1365crow10_col14,#T_4f4b0ae6_fd94_11ea_9974_525400b1365crow14_col10,#T_4f4b0ae6_fd94_11ea_9974_525400b1365crow14_col15,#T_4f4b0ae6_fd94_11ea_9974_525400b1365crow15_col14{\n",
        "            background-color:  #4a98c5;\n",
        "            color:  #000000;\n",
        "        }#T_4f4b0ae6_fd94_11ea_9974_525400b1365crow10_col15,#T_4f4b0ae6_fd94_11ea_9974_525400b1365crow15_col10{\n",
        "            background-color:  #4295c3;\n",
        "            color:  #000000;\n",
        "        }#T_4f4b0ae6_fd94_11ea_9974_525400b1365crow11_col13,#T_4f4b0ae6_fd94_11ea_9974_525400b1365crow13_col11{\n",
        "            background-color:  #1b7eb7;\n",
        "            color:  #000000;\n",
        "        }#T_4f4b0ae6_fd94_11ea_9974_525400b1365crow11_col14,#T_4f4b0ae6_fd94_11ea_9974_525400b1365crow14_col11{\n",
        "            background-color:  #2c89bd;\n",
        "            color:  #000000;\n",
        "        }#T_4f4b0ae6_fd94_11ea_9974_525400b1365crow11_col15,#T_4f4b0ae6_fd94_11ea_9974_525400b1365crow15_col11{\n",
        "            background-color:  #569dc8;\n",
        "            color:  #000000;\n",
        "        }#T_4f4b0ae6_fd94_11ea_9974_525400b1365crow13_col16,#T_4f4b0ae6_fd94_11ea_9974_525400b1365crow16_col13{\n",
        "            background-color:  #045483;\n",
        "            color:  #f1f1f1;\n",
        "        }#T_4f4b0ae6_fd94_11ea_9974_525400b1365crow15_col16,#T_4f4b0ae6_fd94_11ea_9974_525400b1365crow16_col15{\n",
        "            background-color:  #2d8abd;\n",
        "            color:  #000000;\n",
        "        }</style><table id=\"T_4f4b0ae6_fd94_11ea_9974_525400b1365c\" ><thead>    <tr>        <th class=\"blank level0\" ></th>        <th class=\"col_heading level0 col0\" >Rt</th>        <th class=\"col_heading level0 col1\" >theta</th>        <th class=\"col_heading level0 col2\" >kappa</th>        <th class=\"col_heading level0 col3\" >rho</th>        <th class=\"col_heading level0 col4\" >sigma</th>        <th class=\"col_heading level0 col5\" >School_closing</th>        <th class=\"col_heading level0 col6\" >Workplace_closing</th>        <th class=\"col_heading level0 col7\" >Cancel_events</th>        <th class=\"col_heading level0 col8\" >Gatherings_restrictions</th>        <th class=\"col_heading level0 col9\" >Transport_closing</th>        <th class=\"col_heading level0 col10\" >Stay_home_restrictions</th>        <th class=\"col_heading level0 col11\" >Internal_movement_restrictions</th>        <th class=\"col_heading level0 col12\" >International_movement_restrictions</th>        <th class=\"col_heading level0 col13\" >Information_campaigns</th>        <th class=\"col_heading level0 col14\" >Testing_policy</th>        <th class=\"col_heading level0 col15\" >Contact_tracing</th>        <th class=\"col_heading level0 col16\" >Stringency_index</th>    </tr></thead><tbody>\n",
        "                <tr>\n",
        "                        <th id=\"T_4f4b0ae6_fd94_11ea_9974_525400b1365clevel0_row0\" class=\"row_heading level0 row0\" >Rt</th>\n",
        "                        <td id=\"T_4f4b0ae6_fd94_11ea_9974_525400b1365crow0_col0\" class=\"data row0 col0\" >1.000000</td>\n",
        "                        <td id=\"T_4f4b0ae6_fd94_11ea_9974_525400b1365crow0_col1\" class=\"data row0 col1\" >-0.210189</td>\n",
        "                        <td id=\"T_4f4b0ae6_fd94_11ea_9974_525400b1365crow0_col2\" class=\"data row0 col2\" >-0.206368</td>\n",
        "                        <td id=\"T_4f4b0ae6_fd94_11ea_9974_525400b1365crow0_col3\" class=\"data row0 col3\" >0.142687</td>\n",
        "                        <td id=\"T_4f4b0ae6_fd94_11ea_9974_525400b1365crow0_col4\" class=\"data row0 col4\" >-0.178572</td>\n",
        "                        <td id=\"T_4f4b0ae6_fd94_11ea_9974_525400b1365crow0_col5\" class=\"data row0 col5\" >-0.051488</td>\n",
        "                        <td id=\"T_4f4b0ae6_fd94_11ea_9974_525400b1365crow0_col6\" class=\"data row0 col6\" >-0.034064</td>\n",
        "                        <td id=\"T_4f4b0ae6_fd94_11ea_9974_525400b1365crow0_col7\" class=\"data row0 col7\" >-0.121540</td>\n",
        "                        <td id=\"T_4f4b0ae6_fd94_11ea_9974_525400b1365crow0_col8\" class=\"data row0 col8\" >-0.082218</td>\n",
        "                        <td id=\"T_4f4b0ae6_fd94_11ea_9974_525400b1365crow0_col9\" class=\"data row0 col9\" >-0.106887</td>\n",
        "                        <td id=\"T_4f4b0ae6_fd94_11ea_9974_525400b1365crow0_col10\" class=\"data row0 col10\" >-0.172469</td>\n",
        "                        <td id=\"T_4f4b0ae6_fd94_11ea_9974_525400b1365crow0_col11\" class=\"data row0 col11\" >-0.163139</td>\n",
        "                        <td id=\"T_4f4b0ae6_fd94_11ea_9974_525400b1365crow0_col12\" class=\"data row0 col12\" >-0.178928</td>\n",
        "                        <td id=\"T_4f4b0ae6_fd94_11ea_9974_525400b1365crow0_col13\" class=\"data row0 col13\" >-0.073338</td>\n",
        "                        <td id=\"T_4f4b0ae6_fd94_11ea_9974_525400b1365crow0_col14\" class=\"data row0 col14\" >-0.140274</td>\n",
        "                        <td id=\"T_4f4b0ae6_fd94_11ea_9974_525400b1365crow0_col15\" class=\"data row0 col15\" >-0.222389</td>\n",
        "                        <td id=\"T_4f4b0ae6_fd94_11ea_9974_525400b1365crow0_col16\" class=\"data row0 col16\" >-0.122012</td>\n",
        "            </tr>\n",
        "            <tr>\n",
        "                        <th id=\"T_4f4b0ae6_fd94_11ea_9974_525400b1365clevel0_row1\" class=\"row_heading level0 row1\" >theta</th>\n",
        "                        <td id=\"T_4f4b0ae6_fd94_11ea_9974_525400b1365crow1_col0\" class=\"data row1 col0\" >-0.210189</td>\n",
        "                        <td id=\"T_4f4b0ae6_fd94_11ea_9974_525400b1365crow1_col1\" class=\"data row1 col1\" >1.000000</td>\n",
        "                        <td id=\"T_4f4b0ae6_fd94_11ea_9974_525400b1365crow1_col2\" class=\"data row1 col2\" >0.955778</td>\n",
        "                        <td id=\"T_4f4b0ae6_fd94_11ea_9974_525400b1365crow1_col3\" class=\"data row1 col3\" >0.726172</td>\n",
        "                        <td id=\"T_4f4b0ae6_fd94_11ea_9974_525400b1365crow1_col4\" class=\"data row1 col4\" >-0.076052</td>\n",
        "                        <td id=\"T_4f4b0ae6_fd94_11ea_9974_525400b1365crow1_col5\" class=\"data row1 col5\" >-0.215825</td>\n",
        "                        <td id=\"T_4f4b0ae6_fd94_11ea_9974_525400b1365crow1_col6\" class=\"data row1 col6\" >-0.119205</td>\n",
        "                        <td id=\"T_4f4b0ae6_fd94_11ea_9974_525400b1365crow1_col7\" class=\"data row1 col7\" >-0.286685</td>\n",
        "                        <td id=\"T_4f4b0ae6_fd94_11ea_9974_525400b1365crow1_col8\" class=\"data row1 col8\" >-0.273296</td>\n",
        "                        <td id=\"T_4f4b0ae6_fd94_11ea_9974_525400b1365crow1_col9\" class=\"data row1 col9\" >-0.231640</td>\n",
        "                        <td id=\"T_4f4b0ae6_fd94_11ea_9974_525400b1365crow1_col10\" class=\"data row1 col10\" >0.166761</td>\n",
        "                        <td id=\"T_4f4b0ae6_fd94_11ea_9974_525400b1365crow1_col11\" class=\"data row1 col11\" >-0.030864</td>\n",
        "                        <td id=\"T_4f4b0ae6_fd94_11ea_9974_525400b1365crow1_col12\" class=\"data row1 col12\" >0.182892</td>\n",
        "                        <td id=\"T_4f4b0ae6_fd94_11ea_9974_525400b1365crow1_col13\" class=\"data row1 col13\" >-0.354045</td>\n",
        "                        <td id=\"T_4f4b0ae6_fd94_11ea_9974_525400b1365crow1_col14\" class=\"data row1 col14\" >-0.323221</td>\n",
        "                        <td id=\"T_4f4b0ae6_fd94_11ea_9974_525400b1365crow1_col15\" class=\"data row1 col15\" >0.016136</td>\n",
        "                        <td id=\"T_4f4b0ae6_fd94_11ea_9974_525400b1365crow1_col16\" class=\"data row1 col16\" >-0.135141</td>\n",
        "            </tr>\n",
        "            <tr>\n",
        "                        <th id=\"T_4f4b0ae6_fd94_11ea_9974_525400b1365clevel0_row2\" class=\"row_heading level0 row2\" >kappa</th>\n",
        "                        <td id=\"T_4f4b0ae6_fd94_11ea_9974_525400b1365crow2_col0\" class=\"data row2 col0\" >-0.206368</td>\n",
        "                        <td id=\"T_4f4b0ae6_fd94_11ea_9974_525400b1365crow2_col1\" class=\"data row2 col1\" >0.955778</td>\n",
        "                        <td id=\"T_4f4b0ae6_fd94_11ea_9974_525400b1365crow2_col2\" class=\"data row2 col2\" >1.000000</td>\n",
        "                        <td id=\"T_4f4b0ae6_fd94_11ea_9974_525400b1365crow2_col3\" class=\"data row2 col3\" >0.746291</td>\n",
        "                        <td id=\"T_4f4b0ae6_fd94_11ea_9974_525400b1365crow2_col4\" class=\"data row2 col4\" >-0.104648</td>\n",
        "                        <td id=\"T_4f4b0ae6_fd94_11ea_9974_525400b1365crow2_col5\" class=\"data row2 col5\" >-0.230525</td>\n",
        "                        <td id=\"T_4f4b0ae6_fd94_11ea_9974_525400b1365crow2_col6\" class=\"data row2 col6\" >-0.146729</td>\n",
        "                        <td id=\"T_4f4b0ae6_fd94_11ea_9974_525400b1365crow2_col7\" class=\"data row2 col7\" >-0.295168</td>\n",
        "                        <td id=\"T_4f4b0ae6_fd94_11ea_9974_525400b1365crow2_col8\" class=\"data row2 col8\" >-0.273716</td>\n",
        "                        <td id=\"T_4f4b0ae6_fd94_11ea_9974_525400b1365crow2_col9\" class=\"data row2 col9\" >-0.254058</td>\n",
        "                        <td id=\"T_4f4b0ae6_fd94_11ea_9974_525400b1365crow2_col10\" class=\"data row2 col10\" >0.154440</td>\n",
        "                        <td id=\"T_4f4b0ae6_fd94_11ea_9974_525400b1365crow2_col11\" class=\"data row2 col11\" >-0.044653</td>\n",
        "                        <td id=\"T_4f4b0ae6_fd94_11ea_9974_525400b1365crow2_col12\" class=\"data row2 col12\" >0.208576</td>\n",
        "                        <td id=\"T_4f4b0ae6_fd94_11ea_9974_525400b1365crow2_col13\" class=\"data row2 col13\" >-0.363179</td>\n",
        "                        <td id=\"T_4f4b0ae6_fd94_11ea_9974_525400b1365crow2_col14\" class=\"data row2 col14\" >-0.285842</td>\n",
        "                        <td id=\"T_4f4b0ae6_fd94_11ea_9974_525400b1365crow2_col15\" class=\"data row2 col15\" >0.008166</td>\n",
        "                        <td id=\"T_4f4b0ae6_fd94_11ea_9974_525400b1365crow2_col16\" class=\"data row2 col16\" >-0.158421</td>\n",
        "            </tr>\n",
        "            <tr>\n",
        "                        <th id=\"T_4f4b0ae6_fd94_11ea_9974_525400b1365clevel0_row3\" class=\"row_heading level0 row3\" >rho</th>\n",
        "                        <td id=\"T_4f4b0ae6_fd94_11ea_9974_525400b1365crow3_col0\" class=\"data row3 col0\" >0.142687</td>\n",
        "                        <td id=\"T_4f4b0ae6_fd94_11ea_9974_525400b1365crow3_col1\" class=\"data row3 col1\" >0.726172</td>\n",
        "                        <td id=\"T_4f4b0ae6_fd94_11ea_9974_525400b1365crow3_col2\" class=\"data row3 col2\" >0.746291</td>\n",
        "                        <td id=\"T_4f4b0ae6_fd94_11ea_9974_525400b1365crow3_col3\" class=\"data row3 col3\" >1.000000</td>\n",
        "                        <td id=\"T_4f4b0ae6_fd94_11ea_9974_525400b1365crow3_col4\" class=\"data row3 col4\" >0.107377</td>\n",
        "                        <td id=\"T_4f4b0ae6_fd94_11ea_9974_525400b1365crow3_col5\" class=\"data row3 col5\" >-0.139624</td>\n",
        "                        <td id=\"T_4f4b0ae6_fd94_11ea_9974_525400b1365crow3_col6\" class=\"data row3 col6\" >-0.093093</td>\n",
        "                        <td id=\"T_4f4b0ae6_fd94_11ea_9974_525400b1365crow3_col7\" class=\"data row3 col7\" >-0.341903</td>\n",
        "                        <td id=\"T_4f4b0ae6_fd94_11ea_9974_525400b1365crow3_col8\" class=\"data row3 col8\" >-0.315116</td>\n",
        "                        <td id=\"T_4f4b0ae6_fd94_11ea_9974_525400b1365crow3_col9\" class=\"data row3 col9\" >-0.294921</td>\n",
        "                        <td id=\"T_4f4b0ae6_fd94_11ea_9974_525400b1365crow3_col10\" class=\"data row3 col10\" >0.091069</td>\n",
        "                        <td id=\"T_4f4b0ae6_fd94_11ea_9974_525400b1365crow3_col11\" class=\"data row3 col11\" >-0.133871</td>\n",
        "                        <td id=\"T_4f4b0ae6_fd94_11ea_9974_525400b1365crow3_col12\" class=\"data row3 col12\" >0.041948</td>\n",
        "                        <td id=\"T_4f4b0ae6_fd94_11ea_9974_525400b1365crow3_col13\" class=\"data row3 col13\" >-0.372607</td>\n",
        "                        <td id=\"T_4f4b0ae6_fd94_11ea_9974_525400b1365crow3_col14\" class=\"data row3 col14\" >-0.445594</td>\n",
        "                        <td id=\"T_4f4b0ae6_fd94_11ea_9974_525400b1365crow3_col15\" class=\"data row3 col15\" >-0.112564</td>\n",
        "                        <td id=\"T_4f4b0ae6_fd94_11ea_9974_525400b1365crow3_col16\" class=\"data row3 col16\" >-0.162112</td>\n",
        "            </tr>\n",
        "            <tr>\n",
        "                        <th id=\"T_4f4b0ae6_fd94_11ea_9974_525400b1365clevel0_row4\" class=\"row_heading level0 row4\" >sigma</th>\n",
        "                        <td id=\"T_4f4b0ae6_fd94_11ea_9974_525400b1365crow4_col0\" class=\"data row4 col0\" >-0.178572</td>\n",
        "                        <td id=\"T_4f4b0ae6_fd94_11ea_9974_525400b1365crow4_col1\" class=\"data row4 col1\" >-0.076052</td>\n",
        "                        <td id=\"T_4f4b0ae6_fd94_11ea_9974_525400b1365crow4_col2\" class=\"data row4 col2\" >-0.104648</td>\n",
        "                        <td id=\"T_4f4b0ae6_fd94_11ea_9974_525400b1365crow4_col3\" class=\"data row4 col3\" >0.107377</td>\n",
        "                        <td id=\"T_4f4b0ae6_fd94_11ea_9974_525400b1365crow4_col4\" class=\"data row4 col4\" >1.000000</td>\n",
        "                        <td id=\"T_4f4b0ae6_fd94_11ea_9974_525400b1365crow4_col5\" class=\"data row4 col5\" >0.156737</td>\n",
        "                        <td id=\"T_4f4b0ae6_fd94_11ea_9974_525400b1365crow4_col6\" class=\"data row4 col6\" >0.017355</td>\n",
        "                        <td id=\"T_4f4b0ae6_fd94_11ea_9974_525400b1365crow4_col7\" class=\"data row4 col7\" >0.009568</td>\n",
        "                        <td id=\"T_4f4b0ae6_fd94_11ea_9974_525400b1365crow4_col8\" class=\"data row4 col8\" >-0.139776</td>\n",
        "                        <td id=\"T_4f4b0ae6_fd94_11ea_9974_525400b1365crow4_col9\" class=\"data row4 col9\" >-0.011013</td>\n",
        "                        <td id=\"T_4f4b0ae6_fd94_11ea_9974_525400b1365crow4_col10\" class=\"data row4 col10\" >-0.012814</td>\n",
        "                        <td id=\"T_4f4b0ae6_fd94_11ea_9974_525400b1365crow4_col11\" class=\"data row4 col11\" >-0.115619</td>\n",
        "                        <td id=\"T_4f4b0ae6_fd94_11ea_9974_525400b1365crow4_col12\" class=\"data row4 col12\" >-0.024395</td>\n",
        "                        <td id=\"T_4f4b0ae6_fd94_11ea_9974_525400b1365crow4_col13\" class=\"data row4 col13\" >0.107395</td>\n",
        "                        <td id=\"T_4f4b0ae6_fd94_11ea_9974_525400b1365crow4_col14\" class=\"data row4 col14\" >-0.121003</td>\n",
        "                        <td id=\"T_4f4b0ae6_fd94_11ea_9974_525400b1365crow4_col15\" class=\"data row4 col15\" >0.166449</td>\n",
        "                        <td id=\"T_4f4b0ae6_fd94_11ea_9974_525400b1365crow4_col16\" class=\"data row4 col16\" >0.074271</td>\n",
        "            </tr>\n",
        "            <tr>\n",
        "                        <th id=\"T_4f4b0ae6_fd94_11ea_9974_525400b1365clevel0_row5\" class=\"row_heading level0 row5\" >School_closing</th>\n",
        "                        <td id=\"T_4f4b0ae6_fd94_11ea_9974_525400b1365crow5_col0\" class=\"data row5 col0\" >-0.051488</td>\n",
        "                        <td id=\"T_4f4b0ae6_fd94_11ea_9974_525400b1365crow5_col1\" class=\"data row5 col1\" >-0.215825</td>\n",
        "                        <td id=\"T_4f4b0ae6_fd94_11ea_9974_525400b1365crow5_col2\" class=\"data row5 col2\" >-0.230525</td>\n",
        "                        <td id=\"T_4f4b0ae6_fd94_11ea_9974_525400b1365crow5_col3\" class=\"data row5 col3\" >-0.139624</td>\n",
        "                        <td id=\"T_4f4b0ae6_fd94_11ea_9974_525400b1365crow5_col4\" class=\"data row5 col4\" >0.156737</td>\n",
        "                        <td id=\"T_4f4b0ae6_fd94_11ea_9974_525400b1365crow5_col5\" class=\"data row5 col5\" >1.000000</td>\n",
        "                        <td id=\"T_4f4b0ae6_fd94_11ea_9974_525400b1365crow5_col6\" class=\"data row5 col6\" >0.734402</td>\n",
        "                        <td id=\"T_4f4b0ae6_fd94_11ea_9974_525400b1365crow5_col7\" class=\"data row5 col7\" >0.716940</td>\n",
        "                        <td id=\"T_4f4b0ae6_fd94_11ea_9974_525400b1365crow5_col8\" class=\"data row5 col8\" >0.629150</td>\n",
        "                        <td id=\"T_4f4b0ae6_fd94_11ea_9974_525400b1365crow5_col9\" class=\"data row5 col9\" >0.536058</td>\n",
        "                        <td id=\"T_4f4b0ae6_fd94_11ea_9974_525400b1365crow5_col10\" class=\"data row5 col10\" >0.543373</td>\n",
        "                        <td id=\"T_4f4b0ae6_fd94_11ea_9974_525400b1365crow5_col11\" class=\"data row5 col11\" >0.499986</td>\n",
        "                        <td id=\"T_4f4b0ae6_fd94_11ea_9974_525400b1365crow5_col12\" class=\"data row5 col12\" >0.430759</td>\n",
        "                        <td id=\"T_4f4b0ae6_fd94_11ea_9974_525400b1365crow5_col13\" class=\"data row5 col13\" >0.696077</td>\n",
        "                        <td id=\"T_4f4b0ae6_fd94_11ea_9974_525400b1365crow5_col14\" class=\"data row5 col14\" >0.456474</td>\n",
        "                        <td id=\"T_4f4b0ae6_fd94_11ea_9974_525400b1365crow5_col15\" class=\"data row5 col15\" >0.275334</td>\n",
        "                        <td id=\"T_4f4b0ae6_fd94_11ea_9974_525400b1365crow5_col16\" class=\"data row5 col16\" >0.804831</td>\n",
        "            </tr>\n",
        "            <tr>\n",
        "                        <th id=\"T_4f4b0ae6_fd94_11ea_9974_525400b1365clevel0_row6\" class=\"row_heading level0 row6\" >Workplace_closing</th>\n",
        "                        <td id=\"T_4f4b0ae6_fd94_11ea_9974_525400b1365crow6_col0\" class=\"data row6 col0\" >-0.034064</td>\n",
        "                        <td id=\"T_4f4b0ae6_fd94_11ea_9974_525400b1365crow6_col1\" class=\"data row6 col1\" >-0.119205</td>\n",
        "                        <td id=\"T_4f4b0ae6_fd94_11ea_9974_525400b1365crow6_col2\" class=\"data row6 col2\" >-0.146729</td>\n",
        "                        <td id=\"T_4f4b0ae6_fd94_11ea_9974_525400b1365crow6_col3\" class=\"data row6 col3\" >-0.093093</td>\n",
        "                        <td id=\"T_4f4b0ae6_fd94_11ea_9974_525400b1365crow6_col4\" class=\"data row6 col4\" >0.017355</td>\n",
        "                        <td id=\"T_4f4b0ae6_fd94_11ea_9974_525400b1365crow6_col5\" class=\"data row6 col5\" >0.734402</td>\n",
        "                        <td id=\"T_4f4b0ae6_fd94_11ea_9974_525400b1365crow6_col6\" class=\"data row6 col6\" >1.000000</td>\n",
        "                        <td id=\"T_4f4b0ae6_fd94_11ea_9974_525400b1365crow6_col7\" class=\"data row6 col7\" >0.708830</td>\n",
        "                        <td id=\"T_4f4b0ae6_fd94_11ea_9974_525400b1365crow6_col8\" class=\"data row6 col8\" >0.755228</td>\n",
        "                        <td id=\"T_4f4b0ae6_fd94_11ea_9974_525400b1365crow6_col9\" class=\"data row6 col9\" >0.664362</td>\n",
        "                        <td id=\"T_4f4b0ae6_fd94_11ea_9974_525400b1365crow6_col10\" class=\"data row6 col10\" >0.670912</td>\n",
        "                        <td id=\"T_4f4b0ae6_fd94_11ea_9974_525400b1365crow6_col11\" class=\"data row6 col11\" >0.648049</td>\n",
        "                        <td id=\"T_4f4b0ae6_fd94_11ea_9974_525400b1365crow6_col12\" class=\"data row6 col12\" >0.470524</td>\n",
        "                        <td id=\"T_4f4b0ae6_fd94_11ea_9974_525400b1365crow6_col13\" class=\"data row6 col13\" >0.763172</td>\n",
        "                        <td id=\"T_4f4b0ae6_fd94_11ea_9974_525400b1365crow6_col14\" class=\"data row6 col14\" >0.482523</td>\n",
        "                        <td id=\"T_4f4b0ae6_fd94_11ea_9974_525400b1365crow6_col15\" class=\"data row6 col15\" >0.316714</td>\n",
        "                        <td id=\"T_4f4b0ae6_fd94_11ea_9974_525400b1365crow6_col16\" class=\"data row6 col16\" >0.887267</td>\n",
        "            </tr>\n",
        "            <tr>\n",
        "                        <th id=\"T_4f4b0ae6_fd94_11ea_9974_525400b1365clevel0_row7\" class=\"row_heading level0 row7\" >Cancel_events</th>\n",
        "                        <td id=\"T_4f4b0ae6_fd94_11ea_9974_525400b1365crow7_col0\" class=\"data row7 col0\" >-0.121540</td>\n",
        "                        <td id=\"T_4f4b0ae6_fd94_11ea_9974_525400b1365crow7_col1\" class=\"data row7 col1\" >-0.286685</td>\n",
        "                        <td id=\"T_4f4b0ae6_fd94_11ea_9974_525400b1365crow7_col2\" class=\"data row7 col2\" >-0.295168</td>\n",
        "                        <td id=\"T_4f4b0ae6_fd94_11ea_9974_525400b1365crow7_col3\" class=\"data row7 col3\" >-0.341903</td>\n",
        "                        <td id=\"T_4f4b0ae6_fd94_11ea_9974_525400b1365crow7_col4\" class=\"data row7 col4\" >0.009568</td>\n",
        "                        <td id=\"T_4f4b0ae6_fd94_11ea_9974_525400b1365crow7_col5\" class=\"data row7 col5\" >0.716940</td>\n",
        "                        <td id=\"T_4f4b0ae6_fd94_11ea_9974_525400b1365crow7_col6\" class=\"data row7 col6\" >0.708830</td>\n",
        "                        <td id=\"T_4f4b0ae6_fd94_11ea_9974_525400b1365crow7_col7\" class=\"data row7 col7\" >1.000000</td>\n",
        "                        <td id=\"T_4f4b0ae6_fd94_11ea_9974_525400b1365crow7_col8\" class=\"data row7 col8\" >0.789942</td>\n",
        "                        <td id=\"T_4f4b0ae6_fd94_11ea_9974_525400b1365crow7_col9\" class=\"data row7 col9\" >0.502720</td>\n",
        "                        <td id=\"T_4f4b0ae6_fd94_11ea_9974_525400b1365crow7_col10\" class=\"data row7 col10\" >0.529797</td>\n",
        "                        <td id=\"T_4f4b0ae6_fd94_11ea_9974_525400b1365crow7_col11\" class=\"data row7 col11\" >0.621554</td>\n",
        "                        <td id=\"T_4f4b0ae6_fd94_11ea_9974_525400b1365crow7_col12\" class=\"data row7 col12\" >0.523954</td>\n",
        "                        <td id=\"T_4f4b0ae6_fd94_11ea_9974_525400b1365crow7_col13\" class=\"data row7 col13\" >0.867077</td>\n",
        "                        <td id=\"T_4f4b0ae6_fd94_11ea_9974_525400b1365crow7_col14\" class=\"data row7 col14\" >0.622490</td>\n",
        "                        <td id=\"T_4f4b0ae6_fd94_11ea_9974_525400b1365crow7_col15\" class=\"data row7 col15\" >0.584511</td>\n",
        "                        <td id=\"T_4f4b0ae6_fd94_11ea_9974_525400b1365crow7_col16\" class=\"data row7 col16\" >0.842172</td>\n",
        "            </tr>\n",
        "            <tr>\n",
        "                        <th id=\"T_4f4b0ae6_fd94_11ea_9974_525400b1365clevel0_row8\" class=\"row_heading level0 row8\" >Gatherings_restrictions</th>\n",
        "                        <td id=\"T_4f4b0ae6_fd94_11ea_9974_525400b1365crow8_col0\" class=\"data row8 col0\" >-0.082218</td>\n",
        "                        <td id=\"T_4f4b0ae6_fd94_11ea_9974_525400b1365crow8_col1\" class=\"data row8 col1\" >-0.273296</td>\n",
        "                        <td id=\"T_4f4b0ae6_fd94_11ea_9974_525400b1365crow8_col2\" class=\"data row8 col2\" >-0.273716</td>\n",
        "                        <td id=\"T_4f4b0ae6_fd94_11ea_9974_525400b1365crow8_col3\" class=\"data row8 col3\" >-0.315116</td>\n",
        "                        <td id=\"T_4f4b0ae6_fd94_11ea_9974_525400b1365crow8_col4\" class=\"data row8 col4\" >-0.139776</td>\n",
        "                        <td id=\"T_4f4b0ae6_fd94_11ea_9974_525400b1365crow8_col5\" class=\"data row8 col5\" >0.629150</td>\n",
        "                        <td id=\"T_4f4b0ae6_fd94_11ea_9974_525400b1365crow8_col6\" class=\"data row8 col6\" >0.755228</td>\n",
        "                        <td id=\"T_4f4b0ae6_fd94_11ea_9974_525400b1365crow8_col7\" class=\"data row8 col7\" >0.789942</td>\n",
        "                        <td id=\"T_4f4b0ae6_fd94_11ea_9974_525400b1365crow8_col8\" class=\"data row8 col8\" >1.000000</td>\n",
        "                        <td id=\"T_4f4b0ae6_fd94_11ea_9974_525400b1365crow8_col9\" class=\"data row8 col9\" >0.717825</td>\n",
        "                        <td id=\"T_4f4b0ae6_fd94_11ea_9974_525400b1365crow8_col10\" class=\"data row8 col10\" >0.637170</td>\n",
        "                        <td id=\"T_4f4b0ae6_fd94_11ea_9974_525400b1365crow8_col11\" class=\"data row8 col11\" >0.721801</td>\n",
        "                        <td id=\"T_4f4b0ae6_fd94_11ea_9974_525400b1365crow8_col12\" class=\"data row8 col12\" >0.571038</td>\n",
        "                        <td id=\"T_4f4b0ae6_fd94_11ea_9974_525400b1365crow8_col13\" class=\"data row8 col13\" >0.804232</td>\n",
        "                        <td id=\"T_4f4b0ae6_fd94_11ea_9974_525400b1365crow8_col14\" class=\"data row8 col14\" >0.676445</td>\n",
        "                        <td id=\"T_4f4b0ae6_fd94_11ea_9974_525400b1365crow8_col15\" class=\"data row8 col15\" >0.370035</td>\n",
        "                        <td id=\"T_4f4b0ae6_fd94_11ea_9974_525400b1365crow8_col16\" class=\"data row8 col16\" >0.859677</td>\n",
        "            </tr>\n",
        "            <tr>\n",
        "                        <th id=\"T_4f4b0ae6_fd94_11ea_9974_525400b1365clevel0_row9\" class=\"row_heading level0 row9\" >Transport_closing</th>\n",
        "                        <td id=\"T_4f4b0ae6_fd94_11ea_9974_525400b1365crow9_col0\" class=\"data row9 col0\" >-0.106887</td>\n",
        "                        <td id=\"T_4f4b0ae6_fd94_11ea_9974_525400b1365crow9_col1\" class=\"data row9 col1\" >-0.231640</td>\n",
        "                        <td id=\"T_4f4b0ae6_fd94_11ea_9974_525400b1365crow9_col2\" class=\"data row9 col2\" >-0.254058</td>\n",
        "                        <td id=\"T_4f4b0ae6_fd94_11ea_9974_525400b1365crow9_col3\" class=\"data row9 col3\" >-0.294921</td>\n",
        "                        <td id=\"T_4f4b0ae6_fd94_11ea_9974_525400b1365crow9_col4\" class=\"data row9 col4\" >-0.011013</td>\n",
        "                        <td id=\"T_4f4b0ae6_fd94_11ea_9974_525400b1365crow9_col5\" class=\"data row9 col5\" >0.536058</td>\n",
        "                        <td id=\"T_4f4b0ae6_fd94_11ea_9974_525400b1365crow9_col6\" class=\"data row9 col6\" >0.664362</td>\n",
        "                        <td id=\"T_4f4b0ae6_fd94_11ea_9974_525400b1365crow9_col7\" class=\"data row9 col7\" >0.502720</td>\n",
        "                        <td id=\"T_4f4b0ae6_fd94_11ea_9974_525400b1365crow9_col8\" class=\"data row9 col8\" >0.717825</td>\n",
        "                        <td id=\"T_4f4b0ae6_fd94_11ea_9974_525400b1365crow9_col9\" class=\"data row9 col9\" >1.000000</td>\n",
        "                        <td id=\"T_4f4b0ae6_fd94_11ea_9974_525400b1365crow9_col10\" class=\"data row9 col10\" >0.649184</td>\n",
        "                        <td id=\"T_4f4b0ae6_fd94_11ea_9974_525400b1365crow9_col11\" class=\"data row9 col11\" >0.708599</td>\n",
        "                        <td id=\"T_4f4b0ae6_fd94_11ea_9974_525400b1365crow9_col12\" class=\"data row9 col12\" >0.466120</td>\n",
        "                        <td id=\"T_4f4b0ae6_fd94_11ea_9974_525400b1365crow9_col13\" class=\"data row9 col13\" >0.549644</td>\n",
        "                        <td id=\"T_4f4b0ae6_fd94_11ea_9974_525400b1365crow9_col14\" class=\"data row9 col14\" >0.524700</td>\n",
        "                        <td id=\"T_4f4b0ae6_fd94_11ea_9974_525400b1365crow9_col15\" class=\"data row9 col15\" >0.155412</td>\n",
        "                        <td id=\"T_4f4b0ae6_fd94_11ea_9974_525400b1365crow9_col16\" class=\"data row9 col16\" >0.755772</td>\n",
        "            </tr>\n",
        "            <tr>\n",
        "                        <th id=\"T_4f4b0ae6_fd94_11ea_9974_525400b1365clevel0_row10\" class=\"row_heading level0 row10\" >Stay_home_restrictions</th>\n",
        "                        <td id=\"T_4f4b0ae6_fd94_11ea_9974_525400b1365crow10_col0\" class=\"data row10 col0\" >-0.172469</td>\n",
        "                        <td id=\"T_4f4b0ae6_fd94_11ea_9974_525400b1365crow10_col1\" class=\"data row10 col1\" >0.166761</td>\n",
        "                        <td id=\"T_4f4b0ae6_fd94_11ea_9974_525400b1365crow10_col2\" class=\"data row10 col2\" >0.154440</td>\n",
        "                        <td id=\"T_4f4b0ae6_fd94_11ea_9974_525400b1365crow10_col3\" class=\"data row10 col3\" >0.091069</td>\n",
        "                        <td id=\"T_4f4b0ae6_fd94_11ea_9974_525400b1365crow10_col4\" class=\"data row10 col4\" >-0.012814</td>\n",
        "                        <td id=\"T_4f4b0ae6_fd94_11ea_9974_525400b1365crow10_col5\" class=\"data row10 col5\" >0.543373</td>\n",
        "                        <td id=\"T_4f4b0ae6_fd94_11ea_9974_525400b1365crow10_col6\" class=\"data row10 col6\" >0.670912</td>\n",
        "                        <td id=\"T_4f4b0ae6_fd94_11ea_9974_525400b1365crow10_col7\" class=\"data row10 col7\" >0.529797</td>\n",
        "                        <td id=\"T_4f4b0ae6_fd94_11ea_9974_525400b1365crow10_col8\" class=\"data row10 col8\" >0.637170</td>\n",
        "                        <td id=\"T_4f4b0ae6_fd94_11ea_9974_525400b1365crow10_col9\" class=\"data row10 col9\" >0.649184</td>\n",
        "                        <td id=\"T_4f4b0ae6_fd94_11ea_9974_525400b1365crow10_col10\" class=\"data row10 col10\" >1.000000</td>\n",
        "                        <td id=\"T_4f4b0ae6_fd94_11ea_9974_525400b1365crow10_col11\" class=\"data row10 col11\" >0.772260</td>\n",
        "                        <td id=\"T_4f4b0ae6_fd94_11ea_9974_525400b1365crow10_col12\" class=\"data row10 col12\" >0.575847</td>\n",
        "                        <td id=\"T_4f4b0ae6_fd94_11ea_9974_525400b1365crow10_col13\" class=\"data row10 col13\" >0.478371</td>\n",
        "                        <td id=\"T_4f4b0ae6_fd94_11ea_9974_525400b1365crow10_col14\" class=\"data row10 col14\" >0.399970</td>\n",
        "                        <td id=\"T_4f4b0ae6_fd94_11ea_9974_525400b1365crow10_col15\" class=\"data row10 col15\" >0.422990</td>\n",
        "                        <td id=\"T_4f4b0ae6_fd94_11ea_9974_525400b1365crow10_col16\" class=\"data row10 col16\" >0.773153</td>\n",
        "            </tr>\n",
        "            <tr>\n",
        "                        <th id=\"T_4f4b0ae6_fd94_11ea_9974_525400b1365clevel0_row11\" class=\"row_heading level0 row11\" >Internal_movement_restrictions</th>\n",
        "                        <td id=\"T_4f4b0ae6_fd94_11ea_9974_525400b1365crow11_col0\" class=\"data row11 col0\" >-0.163139</td>\n",
        "                        <td id=\"T_4f4b0ae6_fd94_11ea_9974_525400b1365crow11_col1\" class=\"data row11 col1\" >-0.030864</td>\n",
        "                        <td id=\"T_4f4b0ae6_fd94_11ea_9974_525400b1365crow11_col2\" class=\"data row11 col2\" >-0.044653</td>\n",
        "                        <td id=\"T_4f4b0ae6_fd94_11ea_9974_525400b1365crow11_col3\" class=\"data row11 col3\" >-0.133871</td>\n",
        "                        <td id=\"T_4f4b0ae6_fd94_11ea_9974_525400b1365crow11_col4\" class=\"data row11 col4\" >-0.115619</td>\n",
        "                        <td id=\"T_4f4b0ae6_fd94_11ea_9974_525400b1365crow11_col5\" class=\"data row11 col5\" >0.499986</td>\n",
        "                        <td id=\"T_4f4b0ae6_fd94_11ea_9974_525400b1365crow11_col6\" class=\"data row11 col6\" >0.648049</td>\n",
        "                        <td id=\"T_4f4b0ae6_fd94_11ea_9974_525400b1365crow11_col7\" class=\"data row11 col7\" >0.621554</td>\n",
        "                        <td id=\"T_4f4b0ae6_fd94_11ea_9974_525400b1365crow11_col8\" class=\"data row11 col8\" >0.721801</td>\n",
        "                        <td id=\"T_4f4b0ae6_fd94_11ea_9974_525400b1365crow11_col9\" class=\"data row11 col9\" >0.708599</td>\n",
        "                        <td id=\"T_4f4b0ae6_fd94_11ea_9974_525400b1365crow11_col10\" class=\"data row11 col10\" >0.772260</td>\n",
        "                        <td id=\"T_4f4b0ae6_fd94_11ea_9974_525400b1365crow11_col11\" class=\"data row11 col11\" >1.000000</td>\n",
        "                        <td id=\"T_4f4b0ae6_fd94_11ea_9974_525400b1365crow11_col12\" class=\"data row11 col12\" >0.529156</td>\n",
        "                        <td id=\"T_4f4b0ae6_fd94_11ea_9974_525400b1365crow11_col13\" class=\"data row11 col13\" >0.559387</td>\n",
        "                        <td id=\"T_4f4b0ae6_fd94_11ea_9974_525400b1365crow11_col14\" class=\"data row11 col14\" >0.494389</td>\n",
        "                        <td id=\"T_4f4b0ae6_fd94_11ea_9974_525400b1365crow11_col15\" class=\"data row11 col15\" >0.364322</td>\n",
        "                        <td id=\"T_4f4b0ae6_fd94_11ea_9974_525400b1365crow11_col16\" class=\"data row11 col16\" >0.764071</td>\n",
        "            </tr>\n",
        "            <tr>\n",
        "                        <th id=\"T_4f4b0ae6_fd94_11ea_9974_525400b1365clevel0_row12\" class=\"row_heading level0 row12\" >International_movement_restrictions</th>\n",
        "                        <td id=\"T_4f4b0ae6_fd94_11ea_9974_525400b1365crow12_col0\" class=\"data row12 col0\" >-0.178928</td>\n",
        "                        <td id=\"T_4f4b0ae6_fd94_11ea_9974_525400b1365crow12_col1\" class=\"data row12 col1\" >0.182892</td>\n",
        "                        <td id=\"T_4f4b0ae6_fd94_11ea_9974_525400b1365crow12_col2\" class=\"data row12 col2\" >0.208576</td>\n",
        "                        <td id=\"T_4f4b0ae6_fd94_11ea_9974_525400b1365crow12_col3\" class=\"data row12 col3\" >0.041948</td>\n",
        "                        <td id=\"T_4f4b0ae6_fd94_11ea_9974_525400b1365crow12_col4\" class=\"data row12 col4\" >-0.024395</td>\n",
        "                        <td id=\"T_4f4b0ae6_fd94_11ea_9974_525400b1365crow12_col5\" class=\"data row12 col5\" >0.430759</td>\n",
        "                        <td id=\"T_4f4b0ae6_fd94_11ea_9974_525400b1365crow12_col6\" class=\"data row12 col6\" >0.470524</td>\n",
        "                        <td id=\"T_4f4b0ae6_fd94_11ea_9974_525400b1365crow12_col7\" class=\"data row12 col7\" >0.523954</td>\n",
        "                        <td id=\"T_4f4b0ae6_fd94_11ea_9974_525400b1365crow12_col8\" class=\"data row12 col8\" >0.571038</td>\n",
        "                        <td id=\"T_4f4b0ae6_fd94_11ea_9974_525400b1365crow12_col9\" class=\"data row12 col9\" >0.466120</td>\n",
        "                        <td id=\"T_4f4b0ae6_fd94_11ea_9974_525400b1365crow12_col10\" class=\"data row12 col10\" >0.575847</td>\n",
        "                        <td id=\"T_4f4b0ae6_fd94_11ea_9974_525400b1365crow12_col11\" class=\"data row12 col11\" >0.529156</td>\n",
        "                        <td id=\"T_4f4b0ae6_fd94_11ea_9974_525400b1365crow12_col12\" class=\"data row12 col12\" >1.000000</td>\n",
        "                        <td id=\"T_4f4b0ae6_fd94_11ea_9974_525400b1365crow12_col13\" class=\"data row12 col13\" >0.484948</td>\n",
        "                        <td id=\"T_4f4b0ae6_fd94_11ea_9974_525400b1365crow12_col14\" class=\"data row12 col14\" >0.527506</td>\n",
        "                        <td id=\"T_4f4b0ae6_fd94_11ea_9974_525400b1365crow12_col15\" class=\"data row12 col15\" >0.485972</td>\n",
        "                        <td id=\"T_4f4b0ae6_fd94_11ea_9974_525400b1365crow12_col16\" class=\"data row12 col16\" >0.648475</td>\n",
        "            </tr>\n",
        "            <tr>\n",
        "                        <th id=\"T_4f4b0ae6_fd94_11ea_9974_525400b1365clevel0_row13\" class=\"row_heading level0 row13\" >Information_campaigns</th>\n",
        "                        <td id=\"T_4f4b0ae6_fd94_11ea_9974_525400b1365crow13_col0\" class=\"data row13 col0\" >-0.073338</td>\n",
        "                        <td id=\"T_4f4b0ae6_fd94_11ea_9974_525400b1365crow13_col1\" class=\"data row13 col1\" >-0.354045</td>\n",
        "                        <td id=\"T_4f4b0ae6_fd94_11ea_9974_525400b1365crow13_col2\" class=\"data row13 col2\" >-0.363179</td>\n",
        "                        <td id=\"T_4f4b0ae6_fd94_11ea_9974_525400b1365crow13_col3\" class=\"data row13 col3\" >-0.372607</td>\n",
        "                        <td id=\"T_4f4b0ae6_fd94_11ea_9974_525400b1365crow13_col4\" class=\"data row13 col4\" >0.107395</td>\n",
        "                        <td id=\"T_4f4b0ae6_fd94_11ea_9974_525400b1365crow13_col5\" class=\"data row13 col5\" >0.696077</td>\n",
        "                        <td id=\"T_4f4b0ae6_fd94_11ea_9974_525400b1365crow13_col6\" class=\"data row13 col6\" >0.763172</td>\n",
        "                        <td id=\"T_4f4b0ae6_fd94_11ea_9974_525400b1365crow13_col7\" class=\"data row13 col7\" >0.867077</td>\n",
        "                        <td id=\"T_4f4b0ae6_fd94_11ea_9974_525400b1365crow13_col8\" class=\"data row13 col8\" >0.804232</td>\n",
        "                        <td id=\"T_4f4b0ae6_fd94_11ea_9974_525400b1365crow13_col9\" class=\"data row13 col9\" >0.549644</td>\n",
        "                        <td id=\"T_4f4b0ae6_fd94_11ea_9974_525400b1365crow13_col10\" class=\"data row13 col10\" >0.478371</td>\n",
        "                        <td id=\"T_4f4b0ae6_fd94_11ea_9974_525400b1365crow13_col11\" class=\"data row13 col11\" >0.559387</td>\n",
        "                        <td id=\"T_4f4b0ae6_fd94_11ea_9974_525400b1365crow13_col12\" class=\"data row13 col12\" >0.484948</td>\n",
        "                        <td id=\"T_4f4b0ae6_fd94_11ea_9974_525400b1365crow13_col13\" class=\"data row13 col13\" >1.000000</td>\n",
        "                        <td id=\"T_4f4b0ae6_fd94_11ea_9974_525400b1365crow13_col14\" class=\"data row13 col14\" >0.629820</td>\n",
        "                        <td id=\"T_4f4b0ae6_fd94_11ea_9974_525400b1365crow13_col15\" class=\"data row13 col15\" >0.546748</td>\n",
        "                        <td id=\"T_4f4b0ae6_fd94_11ea_9974_525400b1365crow13_col16\" class=\"data row13 col16\" >0.849744</td>\n",
        "            </tr>\n",
        "            <tr>\n",
        "                        <th id=\"T_4f4b0ae6_fd94_11ea_9974_525400b1365clevel0_row14\" class=\"row_heading level0 row14\" >Testing_policy</th>\n",
        "                        <td id=\"T_4f4b0ae6_fd94_11ea_9974_525400b1365crow14_col0\" class=\"data row14 col0\" >-0.140274</td>\n",
        "                        <td id=\"T_4f4b0ae6_fd94_11ea_9974_525400b1365crow14_col1\" class=\"data row14 col1\" >-0.323221</td>\n",
        "                        <td id=\"T_4f4b0ae6_fd94_11ea_9974_525400b1365crow14_col2\" class=\"data row14 col2\" >-0.285842</td>\n",
        "                        <td id=\"T_4f4b0ae6_fd94_11ea_9974_525400b1365crow14_col3\" class=\"data row14 col3\" >-0.445594</td>\n",
        "                        <td id=\"T_4f4b0ae6_fd94_11ea_9974_525400b1365crow14_col4\" class=\"data row14 col4\" >-0.121003</td>\n",
        "                        <td id=\"T_4f4b0ae6_fd94_11ea_9974_525400b1365crow14_col5\" class=\"data row14 col5\" >0.456474</td>\n",
        "                        <td id=\"T_4f4b0ae6_fd94_11ea_9974_525400b1365crow14_col6\" class=\"data row14 col6\" >0.482523</td>\n",
        "                        <td id=\"T_4f4b0ae6_fd94_11ea_9974_525400b1365crow14_col7\" class=\"data row14 col7\" >0.622490</td>\n",
        "                        <td id=\"T_4f4b0ae6_fd94_11ea_9974_525400b1365crow14_col8\" class=\"data row14 col8\" >0.676445</td>\n",
        "                        <td id=\"T_4f4b0ae6_fd94_11ea_9974_525400b1365crow14_col9\" class=\"data row14 col9\" >0.524700</td>\n",
        "                        <td id=\"T_4f4b0ae6_fd94_11ea_9974_525400b1365crow14_col10\" class=\"data row14 col10\" >0.399970</td>\n",
        "                        <td id=\"T_4f4b0ae6_fd94_11ea_9974_525400b1365crow14_col11\" class=\"data row14 col11\" >0.494389</td>\n",
        "                        <td id=\"T_4f4b0ae6_fd94_11ea_9974_525400b1365crow14_col12\" class=\"data row14 col12\" >0.527506</td>\n",
        "                        <td id=\"T_4f4b0ae6_fd94_11ea_9974_525400b1365crow14_col13\" class=\"data row14 col13\" >0.629820</td>\n",
        "                        <td id=\"T_4f4b0ae6_fd94_11ea_9974_525400b1365crow14_col14\" class=\"data row14 col14\" >1.000000</td>\n",
        "                        <td id=\"T_4f4b0ae6_fd94_11ea_9974_525400b1365crow14_col15\" class=\"data row14 col15\" >0.396180</td>\n",
        "                        <td id=\"T_4f4b0ae6_fd94_11ea_9974_525400b1365crow14_col16\" class=\"data row14 col16\" >0.535829</td>\n",
        "            </tr>\n",
        "            <tr>\n",
        "                        <th id=\"T_4f4b0ae6_fd94_11ea_9974_525400b1365clevel0_row15\" class=\"row_heading level0 row15\" >Contact_tracing</th>\n",
        "                        <td id=\"T_4f4b0ae6_fd94_11ea_9974_525400b1365crow15_col0\" class=\"data row15 col0\" >-0.222389</td>\n",
        "                        <td id=\"T_4f4b0ae6_fd94_11ea_9974_525400b1365crow15_col1\" class=\"data row15 col1\" >0.016136</td>\n",
        "                        <td id=\"T_4f4b0ae6_fd94_11ea_9974_525400b1365crow15_col2\" class=\"data row15 col2\" >0.008166</td>\n",
        "                        <td id=\"T_4f4b0ae6_fd94_11ea_9974_525400b1365crow15_col3\" class=\"data row15 col3\" >-0.112564</td>\n",
        "                        <td id=\"T_4f4b0ae6_fd94_11ea_9974_525400b1365crow15_col4\" class=\"data row15 col4\" >0.166449</td>\n",
        "                        <td id=\"T_4f4b0ae6_fd94_11ea_9974_525400b1365crow15_col5\" class=\"data row15 col5\" >0.275334</td>\n",
        "                        <td id=\"T_4f4b0ae6_fd94_11ea_9974_525400b1365crow15_col6\" class=\"data row15 col6\" >0.316714</td>\n",
        "                        <td id=\"T_4f4b0ae6_fd94_11ea_9974_525400b1365crow15_col7\" class=\"data row15 col7\" >0.584511</td>\n",
        "                        <td id=\"T_4f4b0ae6_fd94_11ea_9974_525400b1365crow15_col8\" class=\"data row15 col8\" >0.370035</td>\n",
        "                        <td id=\"T_4f4b0ae6_fd94_11ea_9974_525400b1365crow15_col9\" class=\"data row15 col9\" >0.155412</td>\n",
        "                        <td id=\"T_4f4b0ae6_fd94_11ea_9974_525400b1365crow15_col10\" class=\"data row15 col10\" >0.422990</td>\n",
        "                        <td id=\"T_4f4b0ae6_fd94_11ea_9974_525400b1365crow15_col11\" class=\"data row15 col11\" >0.364322</td>\n",
        "                        <td id=\"T_4f4b0ae6_fd94_11ea_9974_525400b1365crow15_col12\" class=\"data row15 col12\" >0.485972</td>\n",
        "                        <td id=\"T_4f4b0ae6_fd94_11ea_9974_525400b1365crow15_col13\" class=\"data row15 col13\" >0.546748</td>\n",
        "                        <td id=\"T_4f4b0ae6_fd94_11ea_9974_525400b1365crow15_col14\" class=\"data row15 col14\" >0.396180</td>\n",
        "                        <td id=\"T_4f4b0ae6_fd94_11ea_9974_525400b1365crow15_col15\" class=\"data row15 col15\" >1.000000</td>\n",
        "                        <td id=\"T_4f4b0ae6_fd94_11ea_9974_525400b1365crow15_col16\" class=\"data row15 col16\" >0.489502</td>\n",
        "            </tr>\n",
        "            <tr>\n",
        "                        <th id=\"T_4f4b0ae6_fd94_11ea_9974_525400b1365clevel0_row16\" class=\"row_heading level0 row16\" >Stringency_index</th>\n",
        "                        <td id=\"T_4f4b0ae6_fd94_11ea_9974_525400b1365crow16_col0\" class=\"data row16 col0\" >-0.122012</td>\n",
        "                        <td id=\"T_4f4b0ae6_fd94_11ea_9974_525400b1365crow16_col1\" class=\"data row16 col1\" >-0.135141</td>\n",
        "                        <td id=\"T_4f4b0ae6_fd94_11ea_9974_525400b1365crow16_col2\" class=\"data row16 col2\" >-0.158421</td>\n",
        "                        <td id=\"T_4f4b0ae6_fd94_11ea_9974_525400b1365crow16_col3\" class=\"data row16 col3\" >-0.162112</td>\n",
        "                        <td id=\"T_4f4b0ae6_fd94_11ea_9974_525400b1365crow16_col4\" class=\"data row16 col4\" >0.074271</td>\n",
        "                        <td id=\"T_4f4b0ae6_fd94_11ea_9974_525400b1365crow16_col5\" class=\"data row16 col5\" >0.804831</td>\n",
        "                        <td id=\"T_4f4b0ae6_fd94_11ea_9974_525400b1365crow16_col6\" class=\"data row16 col6\" >0.887267</td>\n",
        "                        <td id=\"T_4f4b0ae6_fd94_11ea_9974_525400b1365crow16_col7\" class=\"data row16 col7\" >0.842172</td>\n",
        "                        <td id=\"T_4f4b0ae6_fd94_11ea_9974_525400b1365crow16_col8\" class=\"data row16 col8\" >0.859677</td>\n",
        "                        <td id=\"T_4f4b0ae6_fd94_11ea_9974_525400b1365crow16_col9\" class=\"data row16 col9\" >0.755772</td>\n",
        "                        <td id=\"T_4f4b0ae6_fd94_11ea_9974_525400b1365crow16_col10\" class=\"data row16 col10\" >0.773153</td>\n",
        "                        <td id=\"T_4f4b0ae6_fd94_11ea_9974_525400b1365crow16_col11\" class=\"data row16 col11\" >0.764071</td>\n",
        "                        <td id=\"T_4f4b0ae6_fd94_11ea_9974_525400b1365crow16_col12\" class=\"data row16 col12\" >0.648475</td>\n",
        "                        <td id=\"T_4f4b0ae6_fd94_11ea_9974_525400b1365crow16_col13\" class=\"data row16 col13\" >0.849744</td>\n",
        "                        <td id=\"T_4f4b0ae6_fd94_11ea_9974_525400b1365crow16_col14\" class=\"data row16 col14\" >0.535829</td>\n",
        "                        <td id=\"T_4f4b0ae6_fd94_11ea_9974_525400b1365crow16_col15\" class=\"data row16 col15\" >0.489502</td>\n",
        "                        <td id=\"T_4f4b0ae6_fd94_11ea_9974_525400b1365crow16_col16\" class=\"data row16 col16\" >1.000000</td>\n",
        "            </tr>\n",
        "    </tbody></table>"
       ],
       "output_type": "pyout",
       "prompt_number": 21,
       "text": [
        "<pandas.io.formats.style.Styler at 0x7fa6f433ccd0>"
       ]
      }
     ],
     "prompt_number": 21
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "# Scatter plot of Stringency index and Rt\n",
      "df = track_df.copy()\n",
      "sns.scatterplot(data=df, x=\"Stringency_index\", y=\"Rt\", hue=\"Country\", legend=\"brief\", marker=\"+\")\n",
      "bbox_to_anchor=(1.02, 0)\n",
      "bbox_loc=\"lower left\"\n",
      "plt.legend(bbox_to_anchor=bbox_to_anchor, loc=bbox_loc, borderaxespad=0)\n",
      "plt.title(\"Relationship of Stringency index and reproduction number\")\n",
      "plt.ylabel(\"Reproduction number\")\n",
      "plt.xlabel(\"Stringency index\")\n",
      "plt.show()"
     ],
     "language": "python",
     "metadata": {},
     "outputs": [
      {
       "output_type": "display_data",
       "png": "\n",
       "text": [
        "<Figure size 432x288 with 1 Axes>"
       ]
      }
     ],
     "prompt_number": 22
    }
   ],
   "metadata": {}
  }
 ]
}
